#!/bin/bash


_OPTIONS="'$*'"
echo  $*
 
for (( i=1; i<=$#; i++)); do
     if [[  ${!i} == *"passphrase"* ]]; then
		j=$((i+1))
		_PASSPHRASE=${!j}
	fi		
done



if [[ ${_OPTIONS} == *"static"* ]]; then
  echo "Building static"
     _VARIANT="static"
else
  echo "Building shared"
   _VARIANT="shared"
   fi

if [[ ${_OPTIONS} == *"upload"* ]]; then
  echo "Building static"
     _UPLOAD=1
   fi   
   
if [[ ${_OPTIONS} == *"debug"* ]]; then
    _BUILDTYPE=debug
	echo "Building debug"
else
  echo "Building release"
    _BUILDTYPE=!debug
	fi


if [[ ${_OPTIONS} == *"nostrip"* ]]; then
  echo "Not stripping library"
      _STRIP='!strip'
else
  echo "Stripping library"
   _STRIP='strip'
fi

if [[ ${_OPTIONS} == *"sign"* ]]; then
  echo "Signing"
  _SIGNING="--sign"
fi


THISDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Listed in tier-order
declare -a pkgs=(
# extra-cmake-modules
# solid-qt5
# phonon-qt5
# attica-qt5
# sonnet-qt5
#kjs-qt5  # problem in batch pacman 
# kguiaddons-qt5
# kitemviews-qt5
# karchive-qt5
# ki18n-qt5
# kdoctools-qt5
# kcoreaddons-qt5
# kconfig-qt5
# kpackage-qt5
# kcodecs-qt5
# kwindowsystem-qt5
# knotifications-qt5
# kjobwidgets-qt5
# kconfigwidgets-qt5
#kdbusaddons-qt5
#kiconthemes-qt5
#kservice-qt5
#kwallet-qt5
#kded-qt5
#kitemviews-qt5
#kauth-qt5
#kconfigwidgets-qt5
#texttospeech-qt5
#kcompletion-qt5
#ktextwidgets-qt5
#kcrash-qt5
#kglobalaccel-qt5
#kxmlgui-qt5
#kbookmarks-qt5
#kwidgetsaddons-qt5
#kio-qt5
kinit-qt5
knewstuff-qt5
#kdnssd-qt5
#kdeclarative-qt5
#kplotting-qt5
#hicolor-icon-theme
#kcwsh-qt5-git omit this....
# kframeworkintegration-qt5
# kidletime-qt5
# kimageformats-qt5
# kitemmodels-qt5
# kparts-qt5
#kdewebkit-qt5 #needs attention (Qt5Network version)
# kunitconversion-qt5
# kdesignerplugin-qt5
# kdewin-git
# kdelibs4support-qt5
#libkcw-git-qt5
#libkcw-qt5
# libkdegames-qt5
)

for pkg in "${pkgs[@]}"; do
  pushd ${THISDIR}/../mingw-w64-${pkg}
  export KF5_VARIANT=$_VARIANT
  export KF5_STRIP=$_STRIP
  export KF5_RELEASE=$_BUILDTYPE
  rm -rf *pkg*xz src pkg 
  rm  -f *sig
  makepkg -fsi --noconfirm || exit 1 #-siL  dependencies, install, log
   if [[ ${_OPTIONS} == *"sign"* ]]; then
 echo ${_PASSPHRASE} | gpg -b --passphrase-fd 0 *-any.pkg.tar.xz
fi
if [[ ${_OPTIONS} == *"upload"* ]]; then
for f in $PWD/mingw-w64* 
do 
	echo -e "\e[34m\e[1m==> [Uploading]\e[39m $(basename $f)"
	github-release.exe upload -R -u claydonkey -n $(basename $f) -r mingw-KDE-Frameworks -t v0.1 -f $f
done
for f in $PWD/mingw-w64*.pkg.tar.xz
do
pushd  $PWD/../DB
rm  -f *sig
echo  $PWD
	echo -e "\e[34m\e[1m==> [Adding] \e[39m $(basename $f) to Database"
	repo-add  kde.db.tar.xz $f  	
	for dbfile in $PWD/*  ; do
	echo ${_PASSPHRASE} | gpg -b --passphrase-fd 0 ${dbfile}
	done
popd	
done
   fi   
   
  popd
done
