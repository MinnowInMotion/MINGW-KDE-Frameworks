<?xml version="1.0" encoding="UTF-8"?>
<add>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.cpp</field>
    <field name="url">browserarguments_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts KParts BrowserArgumentsPrivate BrowserArgumentsPrivate doPost redirectedRequest lockHistory newTab forcesNewWindow QString contentType doPost redirectedRequest lockHistory newTab forcesNewWindow BrowserArguments::BrowserArguments softReload trustedSource d BrowserArguments::BrowserArguments BrowserArguments args d args BrowserArguments BrowserArguments::operator= BrowserArguments args args d d softReload args softReload postData args postData frameName args frameName docState args docState trustedSource args trustedSource args d d BrowserArgumentsPrivate args d BrowserArguments::~BrowserArguments d d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.cpp</field>
    <field name="url">browserarguments_8cpp_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">BrowserArguments::setContentType QString contentType d d BrowserArgumentsPrivate d contentType contentType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.cpp</field>
    <field name="url">browserarguments_8cpp_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text">BrowserArguments::setRedirectedRequest redirected d d BrowserArgumentsPrivate d redirectedRequest redirected</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.cpp</field>
    <field name="url">browserarguments_8cpp_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text">BrowserArguments::redirectedRequest d d redirectedRequest</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.cpp</field>
    <field name="url">browserarguments_8cpp_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text">QString BrowserArguments::contentType d d contentType QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.cpp</field>
    <field name="url">browserarguments_8cpp_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text">BrowserArguments::setDoPost enable d d BrowserArgumentsPrivate d doPost enable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.cpp</field>
    <field name="url">browserarguments_8cpp_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">BrowserArguments::doPost d d doPost</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.cpp</field>
    <field name="url">browserarguments_8cpp_source.html#l00126</field>
    <field name="keywords"></field>
    <field name="text">BrowserArguments::setLockHistory lock d d BrowserArgumentsPrivate d lockHistory lock BrowserArguments::lockHistory d d lockHistory</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.cpp</field>
    <field name="url">browserarguments_8cpp_source.html#l00139</field>
    <field name="keywords"></field>
    <field name="text">BrowserArguments::setNewTab newTab d d BrowserArgumentsPrivate d newTab newTab BrowserArguments::newTab d d newTab</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.cpp</field>
    <field name="url">browserarguments_8cpp_source.html#l00152</field>
    <field name="keywords"></field>
    <field name="text">BrowserArguments::setForcesNewWindow forcesNewWindow d d BrowserArgumentsPrivate d forcesNewWindow forcesNewWindow</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.cpp</field>
    <field name="url">browserarguments_8cpp_source.html#l00160</field>
    <field name="keywords"></field>
    <field name="text">BrowserArguments::forcesNewWindow d d forcesNewWindow</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.h</field>
    <field name="url">browserarguments_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts BrowserArgumentsPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.h</field>
    <field name="url">browserarguments_8h_source.html#l00052</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT BrowserArguments BrowserArguments BrowserArguments BrowserArguments args BrowserArguments operator= BrowserArguments args BrowserArguments</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.h</field>
    <field name="url">browserarguments_8h_source.html#l00063</field>
    <field name="keywords"></field>
    <field name="text">QStringList docState</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.h</field>
    <field name="url">browserarguments_8h_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">softReload</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.h</field>
    <field name="url">browserarguments_8h_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text">QByteArray postData setContentType QString contentType QString contentType setDoPost enable doPost setLockHistory lock lockHistory setNewTab newTab newTab</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.h</field>
    <field name="url">browserarguments_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text">QString frameName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserarguments.h</field>
    <field name="url">browserarguments_8h_source.html#l00122</field>
    <field name="keywords"></field>
    <field name="text">trustedSource redirectedRequest setRedirectedRequest redirected setForcesNewWindow forcesNewWindow forcesNewWindow BrowserArgumentsPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.cpp</field>
    <field name="url">browserextension_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts KParts KBitArray val KBitArray val operator [] index val index true setBit index value value val val index val val index BrowserExtension::BrowserExtensionPrivate BrowserExtensionPrivate KParts::ReadOnlyPart parent m_urlDropHandlingEnabled false m_browserInterface m_part parent DelayedRequest QUrl m_delayedURL KParts::OpenUrlArguments m_delayedArgs KParts::BrowserArguments m_delayedBrowserArgs QList&lt;DelayedRequest&gt; m_requests m_urlDropHandlingEnabled KBitArray m_actionStatus QMap&lt;int, QString&gt; m_actionText BrowserInterface m_browserInterface createActionSlotMap KParts::ReadOnlyPart m_part OpenUrlArguments m_args BrowserArguments m_browserArgs Q_GLOBAL_STATIC BrowserExtension::ActionSlotMap s_actionSlotMap Q_GLOBAL_STATIC BrowserExtension::ActionNumberMap s_actionNumberMap BrowserExtension::BrowserExtensionPrivate::createActionSlotMap s_actionSlotMap insert SLOT cut s_actionSlotMap insert SLOT copy s_actionSlotMap insert SLOT paste s_actionSlotMap insert SLOT print ActionSlotMap::ConstIterator it s_actionSlotMap constBegin ActionSlotMap::ConstIterator itEnd s_actionSlotMap constEnd i it itEnd it i s_actionNumberMap insert it key i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.cpp</field>
    <field name="url">browserextension_8cpp_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text">BrowserExtension::BrowserExtension KParts::ReadOnlyPart parent QObject parent d new BrowserExtensionPrivate parent s_actionSlotMap isEmpty BrowserExtensionPrivate::createActionSlotMap QMetaObject metaobj metaObject ActionSlotMap::ConstIterator it s_actionSlotMap constBegin ActionSlotMap::ConstIterator itEnd s_actionSlotMap constEnd i it itEnd it i QByteArray slotSig it key d m_actionStatus setBit i metaobj indexOfMethod slotSig constData connect d m_part static_cast void KParts::ReadOnlyPart KParts::ReadOnlyPart::completed BrowserExtension::slotCompleted connect BrowserExtension::openUrlRequest BrowserExtension::slotOpenUrlRequest connect BrowserExtension::enableAction BrowserExtension::slotEnableAction connect BrowserExtension::setActionText BrowserExtension::slotSetActionText BrowserExtension::~BrowserExtension d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.cpp</field>
    <field name="url">browserextension_8cpp_source.html#l00155</field>
    <field name="keywords"></field>
    <field name="text">BrowserExtension::setBrowserArguments BrowserArguments args d m_browserArgs args</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.cpp</field>
    <field name="url">browserextension_8cpp_source.html#l00160</field>
    <field name="keywords"></field>
    <field name="text">BrowserArguments BrowserExtension::browserArguments d m_browserArgs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.cpp</field>
    <field name="url">browserextension_8cpp_source.html#l00165</field>
    <field name="keywords"></field>
    <field name="text">BrowserExtension::xOffset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.cpp</field>
    <field name="url">browserextension_8cpp_source.html#l00170</field>
    <field name="keywords"></field>
    <field name="text">BrowserExtension::yOffset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.cpp</field>
    <field name="url">browserextension_8cpp_source.html#l00175</field>
    <field name="keywords"></field>
    <field name="text">BrowserExtension::saveState QDataStream stream stream d m_part url qint32 xOffset qint32 yOffset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.cpp</field>
    <field name="url">browserextension_8cpp_source.html#l00181</field>
    <field name="keywords"></field>
    <field name="text">BrowserExtension::restoreState QDataStream stream QUrl u qint32 xOfs yOfs stream u xOfs yOfs OpenUrlArguments args args setXOffset xOfs args setYOffset yOfs d m_part setArguments args d m_part openUrl u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.cpp</field>
    <field name="url">browserextension_8cpp_source.html#l00195</field>
    <field name="keywords"></field>
    <field name="text">BrowserExtension::isURLDropHandlingEnabled d m_urlDropHandlingEnabled</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.cpp</field>
    <field name="url">browserextension_8cpp_source.html#l00200</field>
    <field name="keywords"></field>
    <field name="text">BrowserExtension::setURLDropHandlingEnabled enable d m_urlDropHandlingEnabled enable BrowserExtension::slotCompleted setBrowserArguments BrowserArguments</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.cpp</field>
    <field name="url">browserextension_8cpp_source.html#l00211</field>
    <field name="keywords"></field>
    <field name="text">BrowserExtension::pasteRequest QString plain QStringLiteral QString url QApplication::clipboard text plain QClipboard::Selection trimmed url remove QRegExp QStringLiteral QStringList filters KUriFilter::self pluginNames filters removeAll QStringLiteral filters removeAll QStringLiteral KUriFilterData filterData filterData setData url filterData setCheckForExecutables KUriFilter::self filterUri filterData filters filterData uriType KUriFilterData::LocalFile KUriFilterData::LocalDir KUriFilterData::NetProtocol slotOpenUrlRequest filterData uri KUriFilterData::Error KMessageBox::sorry d m_part widget filterData errorMsg KUriFilter::self filterUri filterData QStringList QStringLiteral url length KMessageBox::questionYesNo d m_part widget i18n url toHtmlEscaped i18n KGuiItem i18n QStringLiteral KStandardGuiItem::cancel QStringLiteral KMessageBox::Yes slotOpenUrlRequest filterData uri BrowserExtension::slotOpenUrlRequest QUrl url KParts::OpenUrlArguments args KParts::BrowserArguments browserArgs BrowserExtensionPrivate::DelayedRequest req req m_delayedURL url req m_delayedArgs args req m_delayedBrowserArgs browserArgs d m_requests append req QTimer::singleShot SLOT slotEmitOpenUrlRequestDelayed BrowserExtension::slotEmitOpenUrlRequestDelayed d m_requests isEmpty BrowserExtensionPrivate::DelayedRequest req d m_requests front d m_requests pop_front emit openUrlRequestDelayed req m_delayedURL req m_delayedArgs req m_delayedBrowserArgs BrowserExtension::setBrowserInterface BrowserInterface impl d m_browserInterface impl BrowserInterface BrowserExtension::browserInterface d m_browserInterface BrowserExtension::slotEnableAction name enabled ActionNumberMap::ConstIterator it s_actionNumberMap constFind name it s_actionNumberMap constEnd d m_actionStatus setBit it value enabled qWarning name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.cpp</field>
    <field name="url">browserextension_8cpp_source.html#l00293</field>
    <field name="keywords"></field>
    <field name="text">BrowserExtension::isActionEnabled name actionNumber s_actionNumberMap name d m_actionStatus actionNumber BrowserExtension::slotSetActionText name QString text ActionNumberMap::ConstIterator it s_actionNumberMap constFind name it s_actionNumberMap constEnd d m_actionText it value text qWarning name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.cpp</field>
    <field name="url">browserextension_8cpp_source.html#l00310</field>
    <field name="keywords"></field>
    <field name="text">QString BrowserExtension::actionText name actionNumber s_actionNumberMap name QMap&lt;int, QString&gt;::ConstIterator it d m_actionText constFind actionNumber it d m_actionText constEnd it QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.cpp</field>
    <field name="url">browserextension_8cpp_source.html#l00321</field>
    <field name="keywords"></field>
    <field name="text">BrowserExtension::ActionSlotMap BrowserExtension::actionSlotMap actionSlotMapPtr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.cpp</field>
    <field name="url">browserextension_8cpp_source.html#l00326</field>
    <field name="keywords"></field>
    <field name="text">BrowserExtension::ActionSlotMap BrowserExtension::actionSlotMapPtr s_actionSlotMap isEmpty BrowserExtensionPrivate::createActionSlotMap s_actionSlotMap</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.cpp</field>
    <field name="url">browserextension_8cpp_source.html#l00334</field>
    <field name="keywords"></field>
    <field name="text">BrowserExtension BrowserExtension::childObject QObject obj obj findChild KParts::BrowserExtension QString Qt::FindDirectChildrenOnly</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.h</field>
    <field name="url">browserextension_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QMap QList KFileItem KFileItemList QDataStream QPoint KParts BrowserInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.h</field>
    <field name="url">browserextension_8h_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT BrowserExtension QObject Q_OBJECT Q_PROPERTY urlDropHandling READ isURLDropHandlingEnabled WRITE setURLDropHandlingEnabled BrowserExtension KParts::ReadOnlyPart parent BrowserExtension</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.h</field>
    <field name="url">browserextension_8h_source.html#l00112</field>
    <field name="keywords"></field>
    <field name="text">PopupFlag</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.h</field>
    <field name="url">browserextension_8h_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text">DefaultPopupItems</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.h</field>
    <field name="url">browserextension_8h_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text">ShowNavigationItems</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.h</field>
    <field name="url">browserextension_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text">ShowUp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.h</field>
    <field name="url">browserextension_8h_source.html#l00116</field>
    <field name="keywords"></field>
    <field name="text">ShowReload</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.h</field>
    <field name="url">browserextension_8h_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text">ShowBookmark</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.h</field>
    <field name="url">browserextension_8h_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text">ShowCreateDirectory</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.h</field>
    <field name="url">browserextension_8h_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text">ShowTextSelectionItems</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.h</field>
    <field name="url">browserextension_8h_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">NoDeletion</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.h</field>
    <field name="url">browserextension_8h_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text">IsLink</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.h</field>
    <field name="url">browserextension_8h_source.html#l00124</field>
    <field name="keywords"></field>
    <field name="text">ShowUrlOperations</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.h</field>
    <field name="url">browserextension_8h_source.html#l00125</field>
    <field name="keywords"></field>
    <field name="text">ShowProperties Q_DECLARE_FLAGS PopupFlags PopupFlag setBrowserArguments BrowserArguments args BrowserArguments browserArguments xOffset yOffset saveState QDataStream stream restoreState QDataStream stream isURLDropHandlingEnabled setURLDropHandlingEnabled enable setBrowserInterface BrowserInterface impl BrowserInterface browserInterface isActionEnabled name QString actionText name QMap&lt;QByteArray, QByteArray&gt; ActionSlotMap ActionSlotMap actionSlotMap ActionSlotMap actionSlotMapPtr BrowserExtension childObject QObject obj pasteRequest</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserextension.h</field>
    <field name="url">browserextension_8h_source.html#l00267</field>
    <field name="keywords"></field>
    <field name="text">QMap&lt;QString, QList&lt;QAction *&gt; ActionGroupMap Q_SIGNALS enableAction name enabled setActionText name QString text openUrlRequest QUrl url KParts::OpenUrlArguments arguments KParts::OpenUrlArguments KParts::BrowserArguments browserArguments KParts::BrowserArguments openUrlRequestDelayed QUrl url KParts::OpenUrlArguments arguments KParts::BrowserArguments browserArguments openUrlNotify setLocationBarUrl QString url setIconUrl QUrl url createNewWindow QUrl url KParts::OpenUrlArguments arguments KParts::OpenUrlArguments KParts::BrowserArguments browserArguments KParts::BrowserArguments KParts::WindowArgs windowArgs KParts::WindowArgs KParts::ReadOnlyPart part loadingProgress percent speedProgress bytesPerSecond infoMessage QString popupMenu QPoint global KFileItemList items KParts::OpenUrlArguments args KParts::OpenUrlArguments KParts::BrowserArguments browserArgs KParts::BrowserArguments KParts::BrowserExtension::PopupFlags flags KParts::BrowserExtension::DefaultPopupItems KParts::BrowserExtension::ActionGroupMap actionGroups ActionGroupMap popupMenu QPoint global QUrl url mode_t mode static_cast&lt;mode_t&gt; KParts::OpenUrlArguments args KParts::OpenUrlArguments KParts::BrowserArguments browserArgs KParts::BrowserArguments KParts::BrowserExtension::PopupFlags flags KParts::BrowserExtension::DefaultPopupItems KParts::BrowserExtension::ActionGroupMap actionGroups ActionGroupMap selectionInfo KFileItemList items selectionInfo QString text selectionInfo QList&lt;QUrl&gt; urls mouseOverInfo KFileItem item addWebSideBar QUrl url QString name moveTopLevelWidget x y resizeTopLevelWidget w h requestFocus KParts::ReadOnlyPart part setPageSecurity itemsRemoved KFileItemList items Q_SLOTS slotCompleted slotOpenUrlRequest QUrl url KParts::OpenUrlArguments arguments KParts::OpenUrlArguments KParts::BrowserArguments browserArguments KParts::BrowserArguments slotEmitOpenUrlRequestDelayed slotEnableAction slotSetActionText QString QMap&lt;QByteArray, int&gt; ActionNumberMap BrowserExtensionPrivate BrowserExtensionPrivate d Q_DECLARE_OPERATORS_FOR_FLAGS KParts::BrowserExtension::PopupFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserhostextension.cpp</field>
    <field name="url">browserhostextension_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts KParts BrowserHostExtension::BrowserHostExtensionPrivate BrowserHostExtensionPrivate BrowserHostExtensionPrivate KParts::ReadOnlyPart m_part BrowserHostExtension::BrowserHostExtension KParts::ReadOnlyPart parent QObject parent d new BrowserHostExtensionPrivate d m_part parent BrowserHostExtension::~BrowserHostExtension d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserhostextension.cpp</field>
    <field name="url">browserhostextension_8cpp_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">QStringList BrowserHostExtension::frameNames QStringList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserhostextension.cpp</field>
    <field name="url">browserhostextension_8cpp_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KParts::ReadOnlyPart *&gt; BrowserHostExtension::frames QList&lt;KParts::ReadOnlyPart *&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserhostextension.cpp</field>
    <field name="url">browserhostextension_8cpp_source.html#l00067</field>
    <field name="keywords"></field>
    <field name="text">BrowserHostExtension::openUrlInFrame QUrl KParts::OpenUrlArguments KParts::BrowserArguments</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserhostextension.cpp</field>
    <field name="url">browserhostextension_8cpp_source.html#l00074</field>
    <field name="keywords"></field>
    <field name="text">BrowserHostExtension BrowserHostExtension::childObject QObject obj obj findChild KParts::BrowserHostExtension QString Qt::FindDirectChildrenOnly BrowserHostExtension</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserhostextension.cpp</field>
    <field name="url">browserhostextension_8cpp_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">BrowserHostExtension::findFrameParent KParts::ReadOnlyPart callingPart QString frame Q_UNUSED callingPart Q_UNUSED frame</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserhostextension.h</field>
    <field name="url">browserhostextension_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QStringList QString QList KParts ReadOnlyPart OpenUrlArguments BrowserArguments</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserhostextension.h</field>
    <field name="url">browserhostextension_8h_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT BrowserHostExtension QObject Q_OBJECT BrowserHostExtension KParts::ReadOnlyPart parent BrowserHostExtension QStringList frameNames QList&lt;KParts::ReadOnlyPart *&gt; frames BrowserHostExtension findFrameParent KParts::ReadOnlyPart callingPart QString frame openUrlInFrame QUrl url KParts::OpenUrlArguments arguments KParts::BrowserArguments browserArguments BrowserHostExtension childObject QObject obj BrowserHostExtensionPrivate BrowserHostExtensionPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserinterface.cpp</field>
    <field name="url">browserinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts BrowserInterface::BrowserInterface QObject parent QObject parent BrowserInterface::~BrowserInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserinterface.cpp</field>
    <field name="url">browserinterface_8cpp_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">BrowserInterface::callMethod name QVariant argument argument type QVariant::Invalid QVariant::String QMetaObject::invokeMethod name Q_ARG QString argument toString QVariant::StringList QStringList strLst argument toStringList QMetaObject::invokeMethod name Q_ARG QStringList strLst QVariant::Int QMetaObject::invokeMethod name Q_ARG argument toInt QVariant::UInt i argument toUInt QMetaObject::invokeMethod name Q_ARG i QVariant::Bool QMetaObject::invokeMethod name Q_ARG argument toBool</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserinterface.h</field>
    <field name="url">browserinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QVariant KParts</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserinterface.h</field>
    <field name="url">browserinterface_8h_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT BrowserInterface QObject Q_OBJECT BrowserInterface QObject parent BrowserInterface callMethod name QVariant argument</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browseropenorsavequestion.cpp</field>
    <field name="url">browseropenorsavequestion_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts Q_DECLARE_METATYPE KService::Ptr KParts::BrowserOpenOrSaveQuestionPrivate QDialog Q_OBJECT Save QDialog::Accepted OpenDefault Save OpenWith OpenDefault Cancel QDialog::Rejected BrowserOpenOrSaveQuestionPrivate QWidget parent QUrl url QString mimeType QDialog parent url url mimeType mimeType features spacingHint style pixelMetric QStyle::PM_DefaultLayoutSpacing dontAskConfig KSharedConfig::openConfig QStringLiteral KConfig::NoGlobals setWindowTitle url host setObjectName QStringLiteral QVBoxLayout mainLayout QVBoxLayout mainLayout setSpacing spacingHint QHBoxLayout hLayout QHBoxLayout mainLayout addLayout hLayout QLabel iconLabel QLabel QStyleOption option option initFrom QIcon icon QIcon::fromTheme QStringLiteral iconLabel setPixmap icon pixmap style pixelMetric QStyle::PM_MessageBoxIconSize option hLayout addWidget iconLabel Qt::AlignCenter hLayout addSpacing spacingHint QVBoxLayout textVLayout QVBoxLayout questionLabel KSqueezedTextLabel textVLayout addWidget questionLabel fileNameLabel QLabel fileNameLabel hide textVLayout addWidget fileNameLabel QMimeDatabase db mime db mimeTypeForName mimeType QString mimeDescription mimeType mime isValid mimeDescription mime comment isEmpty mime name mime comment QLabel mimeTypeLabel QLabel mimeTypeLabel setText i18nc mimeDescription mimeTypeLabel setTextInteractionFlags Qt::TextSelectableByMouse textVLayout addWidget mimeTypeLabel hLayout addLayout textVLayout mainLayout addStretch dontAskAgainCheckBox QCheckBox dontAskAgainCheckBox setText i18nc mainLayout addWidget dontAskAgainCheckBox buttonBox QDialogButtonBox saveButton buttonBox addButton QDialogButtonBox::Yes saveButton setObjectName QStringLiteral KGuiItem::assign saveButton KStandardGuiItem::saveAs saveButton setDefault openDefaultButton QPushButton openDefaultButton setObjectName QStringLiteral buttonBox addButton openDefaultButton QDialogButtonBox::ActionRole openWithButton QPushButton openWithButton setObjectName QStringLiteral buttonBox addButton openWithButton QDialogButtonBox::ActionRole QPushButton cancelButton buttonBox addButton QDialogButtonBox::Cancel cancelButton setObjectName QStringLiteral connect saveButton QPushButton::clicked BrowserOpenOrSaveQuestionPrivate::slotYesClicked connect openDefaultButton QPushButton::clicked BrowserOpenOrSaveQuestionPrivate::slotOpenDefaultClicked connect openWithButton QPushButton::clicked BrowserOpenOrSaveQuestionPrivate::slotOpenWithClicked connect buttonBox QDialogButtonBox::rejected BrowserOpenOrSaveQuestionPrivate::reject mainLayout addWidget buttonBox autoEmbedMimeType flags executeDialog QString dontShowAgainName KConfigGroup cg dontAskConfig QString dontAsk cg readEntry dontShowAgainName QString toLower dontAsk QLatin1String dontAsk QLatin1String Save dontAsk QLatin1String dontAsk QLatin1String OpenDefault result exec dontAskAgainCheckBox isChecked cg writeEntry dontShowAgainName result BrowserOpenOrSaveQuestion::Save cg sync result showService KService::Ptr selectedService KGuiItem openItem i18nc selectedService name selectedService icon KGuiItem::assign openWithButton openItem QUrl url QString mimeType QMimeType mime KService::Ptr selectedService KSqueezedTextLabel questionLabel BrowserOpenOrSaveQuestion::Features features QLabel fileNameLabel QDialogButtonBox buttonBox QPushButton saveButton QPushButton openDefaultButton QPushButton openWithButton QCheckBox dontAskAgainCheckBox KSharedConfig::Ptr dontAskConfig Q_SLOTS reject Q_DECL_OVERRIDE selectedService QDialog::reject slotYesClicked selectedService done Save slotOpenDefaultClicked done OpenDefault slotOpenWithClicked openWithButton menu selectedService done OpenWith slotAppSelected QAction action selectedService action data value KService::Ptr done OpenDefault</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browseropenorsavequestion.cpp</field>
    <field name="url">browseropenorsavequestion_8cpp_source.html#l00218</field>
    <field name="keywords"></field>
    <field name="text">BrowserOpenOrSaveQuestion::BrowserOpenOrSaveQuestion QWidget parent QUrl url QString mimeType d new BrowserOpenOrSaveQuestionPrivate parent url mimeType BrowserOpenOrSaveQuestion::~BrowserOpenOrSaveQuestion d QAction createAppAction KService::Ptr service QObject parent QString actionName service name replace QLatin1Char QStringLiteral actionName i18nc actionName QAction act QAction parent act setIcon QIcon::fromTheme service icon act setText actionName act setData QVariant::fromValue service act</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browseropenorsavequestion.cpp</field>
    <field name="url">browseropenorsavequestion_8cpp_source.html#l00240</field>
    <field name="keywords"></field>
    <field name="text">BrowserOpenOrSaveQuestion::Result BrowserOpenOrSaveQuestion::askOpenOrSave d questionLabel setText i18nc d url toDisplayString QUrl::PreferLocalFile d questionLabel setTextInteractionFlags Qt::TextSelectableByMouse d openWithButton hide KGuiItem openWithDialogItem i18nc QStringLiteral KService::List apps KFileItemActions::associatedApplications QStringList d mimeType QString apps isEmpty KGuiItem::assign d openDefaultButton openWithDialogItem KService::Ptr offer apps first KGuiItem openItem i18nc offer name offer icon KGuiItem::assign d openDefaultButton openItem d features ServiceSelection d selectedService apps first d openWithButton show QMenu menu QMenu d apps count KGuiItem openWithItem i18nc QStringLiteral KGuiItem::assign d openWithButton openWithItem d openWithButton setMenu menu QObject::connect menu QMenu::triggered d BrowserOpenOrSaveQuestionPrivate::slotAppSelected KService::List::const_iterator it apps begin it apps end it QAction act createAppAction it d menu addAction act QAction openWithDialogAction QAction d openWithDialogAction setIcon QIcon::fromTheme QStringLiteral openWithDialogAction setText openWithDialogItem text menu addAction openWithDialogAction KGuiItem::assign d openWithButton openWithDialogItem QString dontAskAgain QLatin1String d mimeType choice d executeDialog dontAskAgain choice BrowserOpenOrSaveQuestionPrivate::Save Save choice BrowserOpenOrSaveQuestionPrivate::Cancel Cancel Open</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browseropenorsavequestion.cpp</field>
    <field name="url">browseropenorsavequestion_8cpp_source.html#l00295</field>
    <field name="keywords"></field>
    <field name="text">KService::Ptr BrowserOpenOrSaveQuestion::selectedService d selectedService BrowserOpenOrSaveQuestionPrivate::autoEmbedMimeType flags flags BrowserRun::AttachmentDisposition mime isValid mime inherits QStringLiteral mime inherits QStringLiteral mime inherits QStringLiteral mimeType startsWith QLatin1String mime inherits QStringLiteral mime inherits QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browseropenorsavequestion.cpp</field>
    <field name="url">browseropenorsavequestion_8cpp_source.html#l00327</field>
    <field name="keywords"></field>
    <field name="text">BrowserOpenOrSaveQuestion::Result BrowserOpenOrSaveQuestion::askEmbedOrSave flags d autoEmbedMimeType flags Embed KGuiItem::assign d openDefaultButton KGuiItem i18nc QStringLiteral d openWithButton hide d questionLabel setText i18nc d url toDisplayString QUrl::PreferLocalFile d questionLabel setTextInteractionFlags Qt::TextSelectableByMouse QString dontAskAgain QLatin1String d mimeType choice d executeDialog dontAskAgain choice BrowserOpenOrSaveQuestionPrivate::Save Save choice BrowserOpenOrSaveQuestionPrivate::Cancel Cancel Embed</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browseropenorsavequestion.cpp</field>
    <field name="url">browseropenorsavequestion_8cpp_source.html#l00348</field>
    <field name="keywords"></field>
    <field name="text">BrowserOpenOrSaveQuestion::setFeatures Features features d features features</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browseropenorsavequestion.cpp</field>
    <field name="url">browseropenorsavequestion_8cpp_source.html#l00353</field>
    <field name="keywords"></field>
    <field name="text">BrowserOpenOrSaveQuestion::setSuggestedFileName QString suggestedFileName suggestedFileName isEmpty d fileNameLabel setText i18nc suggestedFileName d fileNameLabel setTextInteractionFlags Qt::TextSelectableByMouse d fileNameLabel setWhatsThis i18nc d fileNameLabel show</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browseropenorsavequestion.h</field>
    <field name="url">browseropenorsavequestion_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts BrowserOpenOrSaveQuestionPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browseropenorsavequestion.h</field>
    <field name="url">browseropenorsavequestion_8h_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT BrowserOpenOrSaveQuestion BrowserOpenOrSaveQuestion QWidget parent QUrl url QString mimeType BrowserOpenOrSaveQuestion setSuggestedFileName QString suggestedFileName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browseropenorsavequestion.h</field>
    <field name="url">browseropenorsavequestion_8h_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">Feature BasicFeatures</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browseropenorsavequestion.h</field>
    <field name="url">browseropenorsavequestion_8h_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">ServiceSelection Q_DECLARE_FLAGS Features Feature setFeatures Features features Result Save Open Embed Cancel Result askOpenOrSave Result askEmbedOrSave flags KService::Ptr selectedService BrowserOpenOrSaveQuestionPrivate d Q_DISABLE_COPY BrowserOpenOrSaveQuestion</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserrun.cpp</field>
    <field name="url">browserrun_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts BrowserRun::BrowserRunPrivate m_bHideErrorDialog m_bRemoveReferrer m_bTrustedSource KParts::OpenUrlArguments m_args KParts::BrowserArguments m_browserArgs KParts::ReadOnlyPart m_part QPointer&lt;QWidget&gt; m_window QString m_mimeType QString m_contentDisposition</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserrun.cpp</field>
    <field name="url">browserrun_8cpp_source.html#l00060</field>
    <field name="keywords"></field>
    <field name="text">BrowserRun::BrowserRun QUrl url KParts::OpenUrlArguments args KParts::BrowserArguments browserArgs KParts::ReadOnlyPart part QWidget window removeReferrer trustedSource hideErrorDialog KRun url window false d new BrowserRunPrivate d m_bHideErrorDialog hideErrorDialog d m_bRemoveReferrer removeReferrer d m_bTrustedSource trustedSource d m_args args d m_browserArgs browserArgs d m_part part d m_window window BrowserRun::~BrowserRun d KParts::ReadOnlyPart BrowserRun::part d m_part QUrl BrowserRun::url KRun::url</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserrun.cpp</field>
    <field name="url">browserrun_8cpp_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text">BrowserRun::init d m_bHideErrorDialog KRun::url isValid redirectToError KIO::ERR_MALFORMED_URL KRun::url toString isLocalFile QString localPath KRun::url toLocalFile QFile::exists localPath redirectToError KIO::ERR_DOES_NOT_EXIST localPath KRun::init</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserrun.cpp</field>
    <field name="url">browserrun_8cpp_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text">BrowserRun::scanFile QString protocol KRun::url scheme KProtocolInfo::proxiedBy protocol isEmpty QString dummy protocol KProtocolManager::slaveProtocol KRun::url dummy KRun::url hasQuery protocol startsWith QLatin1String QMimeDatabase db QMimeType mime db mimeTypeForUrl KRun::url mime isDefault isLocalFile mimeTypeDetermined mime name QMap&lt;QString, QString&gt; metaData d m_args metaData d m_part QString proto d m_part url scheme proto QLatin1String proto QLatin1String metaData insert QStringLiteral QStringLiteral metaData insert QStringLiteral QStringLiteral proto QLatin1String proto QLatin1String metaData insert QStringLiteral QStringLiteral metaData contains QStringLiteral metaData insert QStringLiteral QStringLiteral KIO::TransferJob job d m_browserArgs doPost KRun::url scheme startsWith QLatin1String job KIO::http_post KRun::url d m_browserArgs postData KIO::HideProgressInfo job addMetaData QStringLiteral d m_browserArgs contentType job KIO::get KRun::url d m_args reload KIO::Reload KIO::NoReload KIO::HideProgressInfo d m_bRemoveReferrer metaData remove QStringLiteral job addMetaData metaData KJobWidgets::setWindow job d m_window connect job KIO::TransferJob::result BrowserRun::slotBrowserScanFinished connect job KIO::TransferJob KIO::Job QString KIO::TransferJob::mimetype BrowserRun::slotBrowserMimetype setJob job BrowserRun::slotBrowserScanFinished KJob job job error KIO::ERR_IS_DIRECTORY KRun::setUrl static_cast&lt;KIO::TransferJob *&gt; job url setJob mimeTypeDetermined QStringLiteral KRun::slotScanFinished job QMimeType fixupMimeType QString mimeType QString fileName QMimeDatabase db QMimeType mime db mimeTypeForName mimeType mime isValid mime isDefault fileName isEmpty mime db mimeTypeForFile fileName QMimeDatabase::MatchExtension mime BrowserRun::slotBrowserMimetype KIO::Job _job QString type Q_ASSERT _job KRun::job Q_UNUSED _job KIO::TransferJob job KIO::TransferJob KRun::job setUrl job url job isErrorPage d m_mimeType type handleError job setJob QString suggestedFileName job queryMetaData QStringLiteral setSuggestedFileName suggestedFileName d m_contentDisposition job queryMetaData QStringLiteral QString modificationTime job queryMetaData QStringLiteral modificationTime isEmpty d m_args metaData insert QStringLiteral modificationTime QMapIterator&lt;QString, QString&gt; it job metaData it hasNext it next it key startsWith QLatin1String Qt::CaseInsensitive d m_args metaData insert it key it value QString _type type job putOnHold setJob QMimeType mime fixupMimeType _type suggestedFileName isEmpty url fileName suggestedFileName mime isValid mime name _type _type mime name mimeTypeDetermined _type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserrun.cpp</field>
    <field name="url">browserrun_8cpp_source.html#l00259</field>
    <field name="keywords"></field>
    <field name="text">BrowserRun::NonEmbeddableResult BrowserRun::handleNonEmbeddable QString mimeType handleNonEmbeddable mimeType NULL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserrun.cpp</field>
    <field name="url">browserrun_8cpp_source.html#l00264</field>
    <field name="keywords"></field>
    <field name="text">BrowserRun::NonEmbeddableResult BrowserRun::handleNonEmbeddable QString _mimeType KService::Ptr selectedService QString mimeType _mimeType Q_ASSERT hasFinished mimeType QLatin1String KRun::url isLocalFile isTextExecutable mimeType mimeType QStringLiteral BrowserOpenOrSaveQuestion question d m_window KRun::url mimeType question setSuggestedFileName suggestedFileName selectedService question setFeatures BrowserOpenOrSaveQuestion::ServiceSelection BrowserOpenOrSaveQuestion::Result res question askOpenOrSave res BrowserOpenOrSaveQuestion::Save save KRun::url suggestedFileName setFinished Handled res BrowserOpenOrSaveQuestion::Cancel setFinished Handled d m_browserArgs doPost d m_mimeType mimeType QString extension QString fileName suggestedFileName isEmpty KRun::url fileName suggestedFileName extensionPos fileName lastIndexOf QLatin1Char extensionPos extension fileName mid extensionPos QTemporaryFile tempFile QDir::tempPath QLatin1Char QCoreApplication::applicationName QLatin1String extension tempFile setAutoRemove tempFile open QUrl destURL QUrl::fromLocalFile tempFile fileName KIO::Job job KIO::file_copy KRun::url destURL KIO::Overwrite KJobWidgets::setWindow job d m_window connect job KIO::Job::result BrowserRun::slotCopyToTempFileResult Delayed selectedService question selectedService selectedService question selectedService KRun::setPreferredService question selectedService desktopEntryName d m_bTrustedSource allowExecution mimeType KRun::url setFinished Handled KIO::Scheduler::publishSlaveOnHold NotHandled BrowserRun::allowExecution QString mimeType QUrl url KRun::isExecutable mimeType url isLocalFile KMessageBox::warningContinueCancel i18n url toDisplayString i18n KGuiItem i18n KMessageBox::Continue</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserrun.cpp</field>
    <field name="url">browserrun_8cpp_source.html#l00350</field>
    <field name="keywords"></field>
    <field name="text">BrowserRun::AskSaveResult BrowserRun::askSave QUrl url KService::Ptr offer QString mimeType QString suggestedFileName Q_UNUSED offer BrowserOpenOrSaveQuestion question url mimeType question setSuggestedFileName suggestedFileName BrowserOpenOrSaveQuestion::Result result question askOpenOrSave result BrowserOpenOrSaveQuestion::Save Save BrowserOpenOrSaveQuestion::Open Open Cancel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserrun.cpp</field>
    <field name="url">browserrun_8cpp_source.html#l00364</field>
    <field name="keywords"></field>
    <field name="text">BrowserRun::AskSaveResult BrowserRun::askEmbedOrSave QUrl url QString mimeType QString suggestedFileName flags BrowserOpenOrSaveQuestion question url mimeType question setSuggestedFileName suggestedFileName BrowserOpenOrSaveQuestion::Result result question askEmbedOrSave flags result BrowserOpenOrSaveQuestion::Save Save BrowserOpenOrSaveQuestion::Embed Open Cancel BrowserRun::save QUrl url QString suggestedFileName saveUrl url suggestedFileName d m_window d m_args BrowserRun::simpleSave QUrl url QString suggestedFileName QWidget window saveUrl url suggestedFileName window KParts::OpenUrlArguments</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserrun.cpp</field>
    <field name="url">browserrun_8cpp_source.html#l00388</field>
    <field name="keywords"></field>
    <field name="text">KParts::BrowserRun::saveUrl QUrl url QString suggestedFileName QWidget window KParts::OpenUrlArguments args url isLocalFile KConfigGroup cfg KSharedConfig::openConfig QStringLiteral KConfig::NoGlobals group QString downloadManger cfg readPathEntry QString downloadManger isEmpty QString cmd QStandardPaths::findExecutable downloadManger cmd isEmpty QString errMsg i18n downloadManger QString errMsgEx i18n KMessageBox::detailedSorry errMsg errMsgEx cfg writePathEntry QString cfg sync cmd QLatin1Char KShell::quoteArg url toString suggestedFileName isEmpty cmd QLatin1Char KShell::quoteArg suggestedFileName KIO::Scheduler::publishSlaveOnHold KRun::runCommand cmd window QFileDialog dlg QFileDialog window dlg setAcceptMode QFileDialog::AcceptSave dlg setWindowTitle i18n dlg setConfirmOverwrite QString name suggestedFileName isEmpty name suggestedFileName name url fileName dlg selectFile name dlg exec QUrl destURL dlg selectedUrls at destURL isValid saveUrlUsingKIO url destURL window args metaData dlg</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserrun.cpp</field>
    <field name="url">browserrun_8cpp_source.html#l00450</field>
    <field name="keywords"></field>
    <field name="text">BrowserRun::saveUrlUsingKIO QUrl srcUrl QUrl destUrl QWidget window QMap&lt;QString, QString&gt; metaData KIO::FileCopyJob job KIO::file_copy srcUrl destUrl KIO::Overwrite QString modificationTime metaData QStringLiteral modificationTime isEmpty job setModificationTime QDateTime::fromString modificationTime Qt::RFC2822Date job setMetaData metaData job addMetaData QStringLiteral QStringLiteral job addMetaData QStringLiteral QStringLiteral KJobWidgets::setWindow job window job ui setAutoErrorHandlingEnabled DownloadJobWatcher job metaData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserrun.cpp</field>
    <field name="url">browserrun_8cpp_source.html#l00467</field>
    <field name="keywords"></field>
    <field name="text">BrowserRun::handleError KJob job job qWarning d m_bHideErrorDialog KIO::TransferJob tjob qobject_cast KIO::TransferJob job tjob tjob isErrorPage job error tjob putOnHold setJob d m_mimeType isEmpty mimeTypeDetermined d m_mimeType d m_bHideErrorDialog job error KIO::ERR_NO_CONTENT redirectToError job error job errorText KRun::handleError job</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserrun.cpp</field>
    <field name="url">browserrun_8cpp_source.html#l00496</field>
    <field name="keywords"></field>
    <field name="text">QUrl BrowserRun::makeErrorUrl error QString errorText QUrl initialUrl QUrl newURL QStringLiteral arg error arg QString::fromUtf8 QUrl::toPercentEncoding errorText QString cleanedOrigUrl initialUrl toString QUrl runURL cleanedOrigUrl runURL isValid runURL setPassword QString cleanedOrigUrl runURL toString newURL setFragment cleanedOrigUrl newURL BrowserRun::redirectToError error QString errorText KRun::setUrl makeErrorUrl error errorText url setJob mimeTypeDetermined QStringLiteral BrowserRun::slotCopyToTempFileResult KJob job job error job uiDelegate showErrorMessage void KRun::runUrl static_cast&lt;KIO::FileCopyJob *&gt; job destUrl d m_mimeType d m_window setError setFinished BrowserRun::isTextExecutable QString mimeType mimeType QLatin1String mimeType QLatin1String BrowserRun::hideErrorDialog d m_bHideErrorDialog</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserrun.cpp</field>
    <field name="url">browserrun_8cpp_source.html#l00554</field>
    <field name="keywords"></field>
    <field name="text">QString BrowserRun::contentDisposition d m_contentDisposition</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserrun.cpp</field>
    <field name="url">browserrun_8cpp_source.html#l00559</field>
    <field name="keywords"></field>
    <field name="text">BrowserRun::serverSuggestsSave contentDisposition isEmpty contentDisposition QLatin1String KParts::OpenUrlArguments KParts::BrowserRun::arguments d m_args KParts::BrowserArguments KParts::BrowserRun::browserArguments d m_browserArgs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserrun.h</field>
    <field name="url">browserrun_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserrun.h</field>
    <field name="url">browserrun_8h_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT BrowserRun KRun Q_OBJECT BrowserRun QUrl url KParts::OpenUrlArguments args KParts::BrowserArguments browserArgs KParts::ReadOnlyPart part QWidget window removeReferrer trustedSource hideErrorDialog BrowserRun KParts::OpenUrlArguments arguments KParts::BrowserArguments browserArguments KParts::ReadOnlyPart part QUrl url hideErrorDialog QString contentDisposition serverSuggestsSave AskSaveResult Save Open Cancel KPARTS_DEPRECATED AskSaveResult askSave QUrl url KService::Ptr offer QString mimeType QString suggestedFileName QString AskEmbedOrSaveFlags InlineDisposition AttachmentDisposition KPARTS_DEPRECATED AskSaveResult askEmbedOrSave QUrl url QString mimeType QString suggestedFileName QString flags save QUrl url QString suggestedFileName simpleSave QUrl url QString suggestedFileName QWidget window saveUrl QUrl url QString suggestedFileName QWidget window KParts::OpenUrlArguments args saveUrlUsingKIO QUrl srcUrl QUrl destUrl QWidget window QMap&lt;QString, QString&gt; metaData allowExecution QString mimeType QUrl url isTextExecutable QString mimeType QUrl makeErrorUrl error QString errorText QUrl initialUrl scanFile Q_DECL_OVERRIDE init Q_DECL_OVERRIDE handleError KJob job Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">browserrun.h</field>
    <field name="url">browserrun_8h_source.html#l00174</field>
    <field name="keywords"></field>
    <field name="text">NonEmbeddableResult Handled NotHandled Delayed NonEmbeddableResult handleNonEmbeddable QString mimeType NonEmbeddableResult handleNonEmbeddable QString mimeType KService::Ptr pSelectedService Q_SLOTS slotBrowserScanFinished KJob job slotBrowserMimetype KIO::Job job QString type slotCopyToTempFileResult KJob job redirectToError error QString errorText BrowserRunPrivate BrowserRunPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">event.cpp</field>
    <field name="url">event_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts KParts::EventPrivate EventPrivate eventName m_eventName eventName m_eventName Event::Event eventName QEvent QEvent Type QEvent User KPARTS_EVENT_MAGIC d new EventPrivate eventName Event::~Event d Event::eventName d m_eventName Event::test QEvent event event event type QEvent::Type QEvent::User KPARTS_EVENT_MAGIC Event::test QEvent event name test event strcmp name Event event eventName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">event.h</field>
    <field name="url">event_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QWidget KParts EventPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">event.h</field>
    <field name="url">event_8h_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT Event QEvent Event eventName Event eventName test QEvent event test QEvent event name EventPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fileinfoextension.cpp</field>
    <field name="url">fileinfoextension_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fileinfoextension.cpp</field>
    <field name="url">fileinfoextension_8cpp_source.html#l00024</field>
    <field name="keywords"></field>
    <field name="text">KParts::FileInfoExtension::FileInfoExtension KParts::ReadOnlyPart parent QObject parent d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fileinfoextension.cpp</field>
    <field name="url">fileinfoextension_8cpp_source.html#l00031</field>
    <field name="keywords"></field>
    <field name="text">KParts::FileInfoExtension::~FileInfoExtension</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fileinfoextension.cpp</field>
    <field name="url">fileinfoextension_8cpp_source.html#l00035</field>
    <field name="keywords"></field>
    <field name="text">KParts::FileInfoExtension KParts::FileInfoExtension::childObject QObject obj obj findChild KParts::FileInfoExtension QString Qt::FindDirectChildrenOnly</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fileinfoextension.cpp</field>
    <field name="url">fileinfoextension_8cpp_source.html#l00040</field>
    <field name="keywords"></field>
    <field name="text">KParts::FileInfoExtension::QueryModes KParts::FileInfoExtension::supportedQueryModes None</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fileinfoextension.cpp</field>
    <field name="url">fileinfoextension_8cpp_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">KParts::FileInfoExtension::hasSelection</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fileinfoextension.h</field>
    <field name="url">fileinfoextension_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KFileItemList FileInfoExtensionPrivate KParts ReadOnlyPart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fileinfoextension.h</field>
    <field name="url">fileinfoextension_8h_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT FileInfoExtension QObject Q_OBJECT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fileinfoextension.h</field>
    <field name="url">fileinfoextension_8h_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">QueryMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fileinfoextension.h</field>
    <field name="url">fileinfoextension_8h_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">None</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fileinfoextension.h</field>
    <field name="url">fileinfoextension_8h_source.html#l00059</field>
    <field name="keywords"></field>
    <field name="text">AllItems</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fileinfoextension.h</field>
    <field name="url">fileinfoextension_8h_source.html#l00060</field>
    <field name="keywords"></field>
    <field name="text">SelectedItems Q_DECLARE_FLAGS QueryModes QueryMode FileInfoExtension KParts::ReadOnlyPart parent FileInfoExtension FileInfoExtension childObject QObject obj hasSelection QueryModes supportedQueryModes KFileItemList queryFor QueryMode mode FileInfoExtensionPrivate d Q_DECLARE_OPERATORS_FOR_FLAGS KParts::FileInfoExtension::QueryModes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">guiactivateevent.cpp</field>
    <field name="url">guiactivateevent_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts KParts::GUIActivateEventPrivate GUIActivateEventPrivate activated m_bActivated activated s_strGUIActivateEvent m_bActivated GUIActivateEventPrivate::s_strGUIActivateEvent GUIActivateEvent::GUIActivateEvent activated Event GUIActivateEventPrivate s_strGUIActivateEvent d new GUIActivateEventPrivate activated GUIActivateEvent::~GUIActivateEvent d GUIActivateEvent::activated d m_bActivated GUIActivateEvent::test QEvent event Event::test event GUIActivateEventPrivate::s_strGUIActivateEvent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">guiactivateevent.h</field>
    <field name="url">guiactivateevent_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts GUIActivateEventPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">guiactivateevent.h</field>
    <field name="url">guiactivateevent_8h_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT GUIActivateEvent Event GUIActivateEvent activated GUIActivateEvent activated test QEvent event GUIActivateEventPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">historyprovider.cpp</field>
    <field name="url">historyprovider_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts KParts::HistoryProviderPrivate HistoryProviderPrivate q HistoryProviderPrivate q QSet&lt;QString&gt; dict HistoryProvider q Q_GLOBAL_STATIC HistoryProviderPrivate historyProviderPrivate HistoryProvider HistoryProvider::self historyProviderPrivate q HistoryProvider historyProviderPrivate q</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">historyprovider.cpp</field>
    <field name="url">historyprovider_8cpp_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">HistoryProvider::exists historyProviderPrivate q</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">historyprovider.cpp</field>
    <field name="url">historyprovider_8cpp_source.html#l00059</field>
    <field name="keywords"></field>
    <field name="text">HistoryProvider::HistoryProvider QObject parent QObject parent d historyProviderPrivate Q_ASSERT historyProviderPrivate q historyProviderPrivate q setObjectName QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">historyprovider.cpp</field>
    <field name="url">historyprovider_8cpp_source.html#l00067</field>
    <field name="keywords"></field>
    <field name="text">HistoryProvider::~HistoryProvider historyProviderPrivate isDestroyed historyProviderPrivate q historyProviderPrivate q</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">historyprovider.cpp</field>
    <field name="url">historyprovider_8cpp_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text">HistoryProvider::contains QString item d dict contains item</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">historyprovider.cpp</field>
    <field name="url">historyprovider_8cpp_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">HistoryProvider::insert QString item d dict insert item emit inserted item</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">historyprovider.cpp</field>
    <field name="url">historyprovider_8cpp_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text">HistoryProvider::remove QString item d dict remove item</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">historyprovider.cpp</field>
    <field name="url">historyprovider_8cpp_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text">HistoryProvider::clear d dict clear emit cleared</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">historyprovider.h</field>
    <field name="url">historyprovider_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts HistoryProviderPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">historyprovider.h</field>
    <field name="url">historyprovider_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT HistoryProvider QObject Q_OBJECT class ::KParts::HistoryProviderPrivate HistoryProvider exists contains QString item insert QString item QString item clear Q_SIGNALS cleared updated QStringList items inserted QString item HistoryProvider QObject parent HistoryProvider HistoryProviderPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlextension.cpp</field>
    <field name="url">htmlextension_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts KParts::HtmlExtension::HtmlExtension KParts::ReadOnlyPart parent QObject parent d KParts::HtmlExtension::~HtmlExtension</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlextension.cpp</field>
    <field name="url">htmlextension_8cpp_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">HtmlExtension::hasSelection</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlextension.cpp</field>
    <field name="url">htmlextension_8cpp_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">HtmlExtension KParts::HtmlExtension::childObject QObject obj obj findChild KParts::HtmlExtension QString Qt::FindDirectChildrenOnly</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlextension.h</field>
    <field name="url">htmlextension_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QUrl KParts ReadOnlyPart HtmlExtensionPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlextension.h</field>
    <field name="url">htmlextension_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT HtmlExtension QObject Q_OBJECT HtmlExtension KParts::ReadOnlyPart parent HtmlExtension HtmlExtension childObject QObject obj QUrl baseUrl hasSelection HtmlExtensionPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlsettingsinterface.cpp</field>
    <field name="url">htmlsettingsinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlsettingsinterface.cpp</field>
    <field name="url">htmlsettingsinterface_8cpp_source.html#l00027</field>
    <field name="keywords"></field>
    <field name="text">HtmlSettingsInterface::javascriptAdviceToText HtmlSettingsInterface::JavaScriptAdvice advice advice JavaScriptAccept I18N_NOOP JavaScriptReject I18N_NOOP</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlsettingsinterface.cpp</field>
    <field name="url">htmlsettingsinterface_8cpp_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">HtmlSettingsInterface::JavaScriptAdvice HtmlSettingsInterface::textToJavascriptAdvice QString text JavaScriptAdvice ret JavaScriptDunno text isEmpty text compare QLatin1String Qt::CaseInsensitive ret JavaScriptAccept text compare QLatin1String Qt::CaseInsensitive ret JavaScriptReject ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlsettingsinterface.cpp</field>
    <field name="url">htmlsettingsinterface_8cpp_source.html#l00059</field>
    <field name="keywords"></field>
    <field name="text">HtmlSettingsInterface::splitDomainAdvice QString adviceStr QString domain HtmlSettingsInterface::JavaScriptAdvice javaAdvice HtmlSettingsInterface::JavaScriptAdvice javaScriptAdvice QString tmp adviceStr splitIndex tmp indexOf QLatin1Char splitIndex domain adviceStr toLower javaAdvice JavaScriptDunno javaScriptAdvice JavaScriptDunno domain tmp left splitIndex toLower QString adviceString tmp mid splitIndex tmp length splitIndex2 adviceString indexOf QLatin1Char splitIndex2 javaAdvice textToJavascriptAdvice adviceString javaScriptAdvice JavaScriptDunno javaAdvice textToJavascriptAdvice adviceString left splitIndex2 javaScriptAdvice textToJavascriptAdvice adviceString mid splitIndex2 adviceString length</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlsettingsinterface.h</field>
    <field name="url">htmlsettingsinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QString KParts</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlsettingsinterface.h</field>
    <field name="url">htmlsettingsinterface_8h_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT HtmlSettingsInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlsettingsinterface.h</field>
    <field name="url">htmlsettingsinterface_8h_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">HtmlSettingsType AutoLoadImages DnsPrefetchEnabled JavaEnabled JavascriptEnabled MetaRefreshEnabled PluginsEnabled PrivateBrowsingEnabled OfflineStorageDatabaseEnabled OfflineWebApplicationCacheEnabled LocalStorageEnabled UserDefinedStyleSheetURL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlsettingsinterface.h</field>
    <field name="url">htmlsettingsinterface_8h_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text">JavaScriptAdvice JavaScriptDunno JavaScriptAccept JavaScriptReject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlsettingsinterface.h</field>
    <field name="url">htmlsettingsinterface_8h_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">JSWindowOpenPolicy JSWindowOpenAllow JSWindowOpenAsk JSWindowOpenDeny JSWindowOpenSmart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlsettingsinterface.h</field>
    <field name="url">htmlsettingsinterface_8h_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text">JSWindowStatusPolicy JSWindowStatusAllow JSWindowStatusIgnore</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlsettingsinterface.h</field>
    <field name="url">htmlsettingsinterface_8h_source.html#l00109</field>
    <field name="keywords"></field>
    <field name="text">JSWindowMovePolicy JSWindowMoveAllow JSWindowMoveIgnore</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlsettingsinterface.h</field>
    <field name="url">htmlsettingsinterface_8h_source.html#l00119</field>
    <field name="keywords"></field>
    <field name="text">JSWindowResizePolicy JSWindowResizeAllow JSWindowResizeIgnore</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlsettingsinterface.h</field>
    <field name="url">htmlsettingsinterface_8h_source.html#l00129</field>
    <field name="keywords"></field>
    <field name="text">JSWindowFocusPolicy JSWindowFocusAllow JSWindowFocusIgnore</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">htmlsettingsinterface.h</field>
    <field name="url">htmlsettingsinterface_8h_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text">QVariant htmlSettingsProperty HtmlSettingsType type setHtmlSettingsProperty HtmlSettingsType type QVariant value JavaScriptAdvice textToJavascriptAdvice QString text javascriptAdviceToText JavaScriptAdvice advice splitDomainAdvice QString text QString domain JavaScriptAdvice javaAdvice JavaScriptAdvice javaScriptAdvice Q_DECLARE_INTERFACE KParts::HtmlSettingsInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kde_terminal_interface.h</field>
    <field name="url">kde__terminal__interface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QStringList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kde_terminal_interface.h</field>
    <field name="url">kde__terminal__interface_8h_source.html#l00085</field>
    <field name="keywords"></field>
    <field name="text">TerminalInterface TerminalInterface startProgram QString program QStringList args showShellInDir QString dir sendInput QString text terminalProcessId foregroundProcessId QString foregroundProcessName QString currentWorkingDirectory Q_DECLARE_INTERFACE TerminalInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingfilterextension.cpp</field>
    <field name="url">listingfilterextension_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingfilterextension.cpp</field>
    <field name="url">listingfilterextension_8cpp_source.html#l00024</field>
    <field name="keywords"></field>
    <field name="text">KParts::ListingFilterExtension::ListingFilterExtension KParts::ReadOnlyPart parent QObject parent d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingfilterextension.cpp</field>
    <field name="url">listingfilterextension_8cpp_source.html#l00030</field>
    <field name="keywords"></field>
    <field name="text">KParts::ListingFilterExtension::~ListingFilterExtension</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingfilterextension.cpp</field>
    <field name="url">listingfilterextension_8cpp_source.html#l00034</field>
    <field name="keywords"></field>
    <field name="text">KParts::ListingFilterExtension KParts::ListingFilterExtension::childObject QObject obj obj findChild KParts::ListingFilterExtension QString Qt::FindDirectChildrenOnly</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingfilterextension.cpp</field>
    <field name="url">listingfilterextension_8cpp_source.html#l00039</field>
    <field name="keywords"></field>
    <field name="text">KParts::ListingFilterExtension::FilterModes KParts::ListingFilterExtension::supportedFilterModes None</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingfilterextension.cpp</field>
    <field name="url">listingfilterextension_8cpp_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">KParts::ListingFilterExtension::supportsMultipleFilters KParts::ListingFilterExtension::FilterMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingfilterextension.h</field>
    <field name="url">listingfilterextension_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KFileItemList KParts ReadOnlyPart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingfilterextension.h</field>
    <field name="url">listingfilterextension_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT ListingFilterExtension QObject Q_OBJECT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingfilterextension.h</field>
    <field name="url">listingfilterextension_8h_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text">FilterMode None</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingfilterextension.h</field>
    <field name="url">listingfilterextension_8h_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text">MimeType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingfilterextension.h</field>
    <field name="url">listingfilterextension_8h_source.html#l00094</field>
    <field name="keywords"></field>
    <field name="text">SubString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingfilterextension.h</field>
    <field name="url">listingfilterextension_8h_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text">WildCard Q_DECLARE_FLAGS FilterModes FilterMode ListingFilterExtension KParts::ReadOnlyPart parent ListingFilterExtension ListingFilterExtension childObject QObject obj FilterModes supportedFilterModes supportsMultipleFilters FilterMode mode QVariant filter FilterMode mode setFilter FilterMode mode QVariant filter ListingFilterExtensionPrivate ListingFilterExtension d Q_DECLARE_OPERATORS_FOR_FLAGS KParts::ListingFilterExtension::FilterModes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingnotificationextension.cpp</field>
    <field name="url">listingnotificationextension_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingnotificationextension.cpp</field>
    <field name="url">listingnotificationextension_8cpp_source.html#l00025</field>
    <field name="keywords"></field>
    <field name="text">KParts::ListingNotificationExtension::ListingNotificationExtension KParts::ReadOnlyPart parent QObject parent d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingnotificationextension.cpp</field>
    <field name="url">listingnotificationextension_8cpp_source.html#l00031</field>
    <field name="keywords"></field>
    <field name="text">KParts::ListingNotificationExtension::~ListingNotificationExtension</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingnotificationextension.cpp</field>
    <field name="url">listingnotificationextension_8cpp_source.html#l00035</field>
    <field name="keywords"></field>
    <field name="text">KParts::ListingNotificationExtension KParts::ListingNotificationExtension::childObject QObject obj obj findChild KParts::ListingNotificationExtension QString Qt::FindDirectChildrenOnly</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingnotificationextension.cpp</field>
    <field name="url">listingnotificationextension_8cpp_source.html#l00040</field>
    <field name="keywords"></field>
    <field name="text">KParts::ListingNotificationExtension::NotificationEventTypes KParts::ListingNotificationExtension::supportedNotificationEventTypes None</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingnotificationextension.h</field>
    <field name="url">listingnotificationextension_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KFileItemList KParts ReadOnlyPart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingnotificationextension.h</field>
    <field name="url">listingnotificationextension_8h_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT ListingNotificationExtension QObject Q_OBJECT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingnotificationextension.h</field>
    <field name="url">listingnotificationextension_8h_source.html#l00053</field>
    <field name="keywords"></field>
    <field name="text">NotificationEventType None</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingnotificationextension.h</field>
    <field name="url">listingnotificationextension_8h_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">ItemsAdded</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">listingnotificationextension.h</field>
    <field name="url">listingnotificationextension_8h_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">ItemsDeleted Q_DECLARE_FLAGS NotificationEventTypes NotificationEventType ListingNotificationExtension KParts::ReadOnlyPart parent ListingNotificationExtension NotificationEventTypes supportedNotificationEventTypes ListingNotificationExtension childObject QObject obj Q_SIGNALS listingEvent KParts::ListingNotificationExtension::NotificationEventType KFileItemList ListingNotificationExtensionPrivate ListingNotificationExtension d Q_DECLARE_OPERATORS_FOR_FLAGS KParts::ListingNotificationExtension::NotificationEventTypes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">liveconnectextension.cpp</field>
    <field name="url">liveconnectextension_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts LiveConnectExtension::LiveConnectExtension KParts::ReadOnlyPart parent QObject parent d LiveConnectExtension::~LiveConnectExtension</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">liveconnectextension.cpp</field>
    <field name="url">liveconnectextension_8cpp_source.html#l00033</field>
    <field name="keywords"></field>
    <field name="text">LiveConnectExtension::get QString Type QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">liveconnectextension.cpp</field>
    <field name="url">liveconnectextension_8cpp_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">LiveConnectExtension::put QString QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">liveconnectextension.cpp</field>
    <field name="url">liveconnectextension_8cpp_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">LiveConnectExtension::call QString QStringList Type QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">liveconnectextension.cpp</field>
    <field name="url">liveconnectextension_8cpp_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">LiveConnectExtension::unregister LiveConnectExtension LiveConnectExtension::childObject QObject obj obj findChild KParts::LiveConnectExtension QString Qt::FindDirectChildrenOnly</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">liveconnectextension.h</field>
    <field name="url">liveconnectextension_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QPair QList QStringList QString KParts ReadOnlyPart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">liveconnectextension.h</field>
    <field name="url">liveconnectextension_8h_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT LiveConnectExtension QObject Q_OBJECT Type TypeVoid TypeBool TypeFunction TypeNumber TypeObject TypeString QList&lt;QPair&lt;Type, QString&gt; ArgList LiveConnectExtension KParts::ReadOnlyPart parent LiveConnectExtension objid QString field Type type retobjid QString value put objid QString field QString value call objid QString func QStringList args Type type retobjid QString value unregister objid LiveConnectExtension childObject QObject obj Q_SIGNALS partEvent objid QString event KParts::LiveConnectExtension::ArgList args LiveConnectExtensionPrivate LiveConnectExtensionPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mainwindow.cpp</field>
    <field name="url">mainwindow_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts KParts MainWindowPrivate MainWindowPrivate m_activePart m_bShellGUIActivated false m_helpMenu m_manageWindowTitle true MainWindowPrivate QPointer&lt;Part&gt; m_activePart m_bShellGUIActivated KHelpMenu m_helpMenu m_manageWindowTitle</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mainwindow.cpp</field>
    <field name="url">mainwindow_8cpp_source.html#l00067</field>
    <field name="keywords"></field>
    <field name="text">MainWindow::MainWindow QWidget parent Qt::WindowFlags f KXmlGuiWindow parent f d new MainWindowPrivate PartBase::setPartObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mainwindow.cpp</field>
    <field name="url">mainwindow_8cpp_source.html#l00073</field>
    <field name="keywords"></field>
    <field name="text">MainWindow::~MainWindow d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mainwindow.cpp</field>
    <field name="url">mainwindow_8cpp_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text">MainWindow::createGUI Part part part part metaObject className part part objectName KXMLGUIFactory factory guiFactory Q_ASSERT factory d m_activePart d m_activePart metaObject className d m_activePart objectName GUIActivateEvent ev QApplication::sendEvent d m_activePart ev factory removeClient d m_activePart disconnect d m_activePart data Part::setWindowCaption MainWindow QString MainWindow::setCaption disconnect d m_activePart data Part::setStatusBarText MainWindow::slotSetStatusBarText d m_bShellGUIActivated loadPlugins KAboutData::applicationData createShellGUI d m_bShellGUIActivated part d m_manageWindowTitle connect part Part::setWindowCaption MainWindow QString MainWindow::setCaption connect part Part::setStatusBarText MainWindow::slotSetStatusBarText factory addClient part GUIActivateEvent ev QApplication::sendEvent part ev d m_activePart part</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mainwindow.cpp</field>
    <field name="url">mainwindow_8cpp_source.html#l00131</field>
    <field name="keywords"></field>
    <field name="text">MainWindow::slotSetStatusBarText QString text statusBar showMessage text MainWindow::createShellGUI create Q_ASSERT d m_bShellGUIActivated create d m_bShellGUIActivated create create isHelpMenuEnabled d m_helpMenu d m_helpMenu KHelpMenu KAboutData::applicationData KActionCollection actions actionCollection QAction helpContentsAction d m_helpMenu action KHelpMenu::menuHelpContents QAction whatsThisAction d m_helpMenu action KHelpMenu::menuWhatsThis QAction reportBugAction d m_helpMenu action KHelpMenu::menuReportBug QAction switchLanguageAction d m_helpMenu action KHelpMenu::menuSwitchLanguage QAction aboutAppAction d m_helpMenu action KHelpMenu::menuAboutApp QAction aboutKdeAction d m_helpMenu action KHelpMenu::menuAboutKDE QAction donateAction d m_helpMenu action KHelpMenu::menuDonate helpContentsAction actions addAction helpContentsAction objectName helpContentsAction whatsThisAction actions addAction whatsThisAction objectName whatsThisAction reportBugAction actions addAction reportBugAction objectName reportBugAction switchLanguageAction actions addAction switchLanguageAction objectName switchLanguageAction aboutAppAction actions addAction aboutAppAction objectName aboutAppAction aboutKdeAction actions addAction aboutKdeAction objectName aboutKdeAction donateAction actions addAction donateAction objectName donateAction QString f xmlFile setXMLFile KXMLGUIClient::standardsXmlFileLocation f isEmpty setXMLFile f QString auto_file componentName QStringLiteral setXMLFile auto_file GUIActivateEvent ev QApplication::sendEvent ev guiFactory addClient GUIActivateEvent ev QApplication::sendEvent ev guiFactory removeClient</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mainwindow.cpp</field>
    <field name="url">mainwindow_8cpp_source.html#l00197</field>
    <field name="keywords"></field>
    <field name="text">KParts::MainWindow::setWindowTitleHandling enabled d m_manageWindowTitle enabled</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mainwindow.cpp</field>
    <field name="url">mainwindow_8cpp_source.html#l00202</field>
    <field name="keywords"></field>
    <field name="text">KParts::MainWindow::saveNewToolbarConfig createGUI d m_activePart KConfigGroup cg KSharedConfig::openConfig QString applyMainWindowSettings cg KParts::MainWindow::configureToolbars KXmlGuiWindow::configureToolbars</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mainwindow.h</field>
    <field name="url">mainwindow_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QString KParts MainWindowPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mainwindow.h</field>
    <field name="url">mainwindow_8h_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT MainWindow KXmlGuiWindow PartBase Q_OBJECT MainWindow QWidget parent Qt::WindowFlags f KDE_DEFAULT_WINDOWFLAGS MainWindow Q_SLOTS configureToolbars Q_DECL_OVERRIDE Q_SLOTS createGUI KParts::Part part setWindowTitleHandling enabled slotSetStatusBarText QString saveNewToolbarConfig Q_DECL_OVERRIDE createShellGUI create MainWindowPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">openurlarguments.cpp</field>
    <field name="url">openurlarguments_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts::OpenUrlArgumentsPrivate QSharedData OpenUrlArgumentsPrivate reload false actionRequestedByUser true xOffset yOffset mimeType metaData reload actionRequestedByUser xOffset yOffset QString mimeType QMap&lt;QString, QString&gt; metaData KParts::OpenUrlArguments::OpenUrlArguments d new OpenUrlArgumentsPrivate KParts::OpenUrlArguments::OpenUrlArguments OpenUrlArguments other d other d KParts::OpenUrlArguments KParts::OpenUrlArguments::operator= OpenUrlArguments other d other d KParts::OpenUrlArguments::~OpenUrlArguments</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">openurlarguments.cpp</field>
    <field name="url">openurlarguments_8cpp_source.html#l00063</field>
    <field name="keywords"></field>
    <field name="text">KParts::OpenUrlArguments::reload d reload</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">openurlarguments.cpp</field>
    <field name="url">openurlarguments_8cpp_source.html#l00068</field>
    <field name="keywords"></field>
    <field name="text">KParts::OpenUrlArguments::setReload b d reload b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">openurlarguments.cpp</field>
    <field name="url">openurlarguments_8cpp_source.html#l00073</field>
    <field name="keywords"></field>
    <field name="text">KParts::OpenUrlArguments::xOffset d xOffset KParts::OpenUrlArguments::setXOffset x d xOffset x</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">openurlarguments.cpp</field>
    <field name="url">openurlarguments_8cpp_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text">KParts::OpenUrlArguments::yOffset d yOffset KParts::OpenUrlArguments::setYOffset y d yOffset y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">openurlarguments.cpp</field>
    <field name="url">openurlarguments_8cpp_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text">QString KParts::OpenUrlArguments::mimeType d mimeType KParts::OpenUrlArguments::setMimeType QString mime d mimeType mime</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">openurlarguments.cpp</field>
    <field name="url">openurlarguments_8cpp_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text">QMap&lt;QString, QString&gt; KParts::OpenUrlArguments::metaData d metaData QMap&lt;QString, QString&gt; KParts::OpenUrlArguments::metaData d metaData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">openurlarguments.cpp</field>
    <field name="url">openurlarguments_8cpp_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text">KParts::OpenUrlArguments::actionRequestedByUser d actionRequestedByUser KParts::OpenUrlArguments::setActionRequestedByUser userRequested d actionRequestedByUser userRequested</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">openurlarguments.h</field>
    <field name="url">openurlarguments_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts OpenUrlArgumentsPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">openurlarguments.h</field>
    <field name="url">openurlarguments_8h_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT OpenUrlArguments OpenUrlArguments OpenUrlArguments OpenUrlArguments other OpenUrlArguments operator= OpenUrlArguments other OpenUrlArguments reload setReload b xOffset setXOffset x yOffset setYOffset y QString mimeType setMimeType QString mime actionRequestedByUser setActionRequestedByUser userRequested QMap&lt;QString, QString&gt; metaData QMap&lt;QString, QString&gt; metaData QSharedDataPointer&lt;OpenUrlArgumentsPrivate&gt; d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">openurlevent.cpp</field>
    <field name="url">openurlevent_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts OpenUrlEvent::OpenUrlEventPrivate OpenUrlEventPrivate ReadOnlyPart part QUrl url OpenUrlArguments args BrowserArguments browserArgs m_part part m_url url m_args args m_browserArgs browserArgs OpenUrlEventPrivate s_strOpenUrlEvent ReadOnlyPart m_part QUrl m_url OpenUrlArguments m_args BrowserArguments m_browserArgs OpenUrlEvent::OpenUrlEventPrivate::s_strOpenUrlEvent OpenUrlEvent::OpenUrlEvent ReadOnlyPart part QUrl url OpenUrlArguments args BrowserArguments browserArgs Event OpenUrlEventPrivate s_strOpenUrlEvent d new OpenUrlEventPrivate part url args browserArgs OpenUrlEvent::~OpenUrlEvent d ReadOnlyPart OpenUrlEvent::part d m_part QUrl OpenUrlEvent::url d m_url OpenUrlArguments OpenUrlEvent::arguments d m_args BrowserArguments OpenUrlEvent::browserArguments d m_browserArgs OpenUrlEvent::test QEvent event Event::test event OpenUrlEventPrivate::s_strOpenUrlEvent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">openurlevent.h</field>
    <field name="url">openurlevent_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QUrl KParts ReadOnlyPart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">openurlevent.h</field>
    <field name="url">openurlevent_8h_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT OpenUrlEvent Event OpenUrlEvent ReadOnlyPart part QUrl url OpenUrlArguments args OpenUrlArguments BrowserArguments browserArgs BrowserArguments OpenUrlEvent ReadOnlyPart part QUrl url OpenUrlArguments arguments BrowserArguments browserArguments test QEvent event OpenUrlEventPrivate OpenUrlEventPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00035</field>
    <field name="keywords"></field>
    <field name="text">Part::Part QObject parent QObject parent PartBase new PartPrivate this PartBase::setPartObject Part::Part PartPrivate dd QObject parent QObject parent PartBase dd PartBase::setPartObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">Part::~Part Q_D Part d m_widget disconnect d m_widget data QWidget::destroyed Part::slotWidgetDestroyed d m_manager d m_manager removePart d m_widget d m_autoDeleteWidget QWidget d m_widget d m_iconLoader</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">Part::embed QWidget parentWidget widget widget setParent parentWidget widget setGeometry widget width widget height widget show</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">QWidget Part::widget Q_D Part d m_widget</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">Part::setAutoDeleteWidget autoDeleteWidget Q_D Part d m_autoDeleteWidget autoDeleteWidget</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text">Part::setAutoDeletePart autoDeletePart Q_D Part d m_autoDeletePart autoDeletePart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text">KIconLoader Part::iconLoader Q_D Part d m_iconLoader d m_iconLoader KIconLoader componentName d m_iconLoader</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00109</field>
    <field name="keywords"></field>
    <field name="text">Part::setManager PartManager manager Q_D Part d m_manager manager</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00116</field>
    <field name="keywords"></field>
    <field name="text">PartManager Part::manager Q_D Part d m_manager</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text">Part Part::hitTest QWidget widget QPoint Q_D Part QWidget d m_widget widget</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text">Part::setWidget QWidget widget Q_D Part d m_widget widget connect d m_widget data QWidget::destroyed Part::slotWidgetDestroyed Qt::UniqueConnection</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00142</field>
    <field name="keywords"></field>
    <field name="text">Part::setSelectable selectable Q_D Part d m_bSelectable selectable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00149</field>
    <field name="keywords"></field>
    <field name="text">Part::isSelectable Q_D Part d m_bSelectable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00156</field>
    <field name="keywords"></field>
    <field name="text">Part::customEvent QEvent ev PartActivateEvent::test ev partActivateEvent static_cast&lt;PartActivateEvent *&gt; ev PartSelectEvent::test ev partSelectEvent static_cast&lt;PartSelectEvent *&gt; ev GUIActivateEvent::test ev guiActivateEvent static_cast&lt;GUIActivateEvent *&gt; ev QObject::customEvent ev</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00176</field>
    <field name="keywords"></field>
    <field name="text">Part::partActivateEvent PartActivateEvent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00180</field>
    <field name="keywords"></field>
    <field name="text">Part::partSelectEvent PartSelectEvent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00184</field>
    <field name="keywords"></field>
    <field name="text">Part::guiActivateEvent GUIActivateEvent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00188</field>
    <field name="keywords"></field>
    <field name="text">QWidget Part::hostContainer QString containerName factory factory container containerName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00197</field>
    <field name="keywords"></field>
    <field name="text">Part::slotWidgetDestroyed Q_D Part d m_widget d m_autoDeletePart deleteLater</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.cpp</field>
    <field name="url">part_8cpp_source.html#l00208</field>
    <field name="keywords"></field>
    <field name="text">Part::loadPlugins PartBase::loadPlugins componentData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.h</field>
    <field name="url">part_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KIconLoader QWidget QEvent QPoint KParts PartManager PartPrivate PartActivateEvent PartSelectEvent GUIActivateEvent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">part.h</field>
    <field name="url">part_8h_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT Part QObject PartBase Q_OBJECT KPARTS_DECLARE_PRIVATE Part Part QObject parent Part embed QWidget parentWidget QWidget widget setManager PartManager manager PartManager manager setAutoDeleteWidget autoDeleteWidget setAutoDeletePart autoDeletePart Part hitTest QWidget widget QPoint globalPos setSelectable selectable isSelectable KIconLoader iconLoader Q_SIGNALS setWindowCaption QString caption setStatusBarText QString text setWidget QWidget widget customEvent QEvent event Q_DECL_OVERRIDE partActivateEvent PartActivateEvent event partSelectEvent PartSelectEvent event guiActivateEvent GUIActivateEvent event QWidget hostContainer QString containerName loadPlugins PartBase::loadPlugins Q_SLOTS slotWidgetDestroyed Part PartPrivate dd QObject parent Q_DISABLE_COPY Part</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partactivateevent.cpp</field>
    <field name="url">partactivateevent_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts KParts::PartActivateEventPrivate PartActivateEventPrivate activated Part part QWidget widget m_bActivated activated m_part part m_widget widget s_strPartActivateEvent m_bActivated Part m_part QWidget m_widget PartActivateEventPrivate::s_strPartActivateEvent PartActivateEvent::PartActivateEvent activated Part part QWidget widget Event PartActivateEventPrivate s_strPartActivateEvent d new PartActivateEventPrivate activated part widget PartActivateEvent::~PartActivateEvent d PartActivateEvent::activated d m_bActivated Part PartActivateEvent::part d m_part QWidget PartActivateEvent::widget d m_widget PartActivateEvent::test QEvent event Event::test event PartActivateEventPrivate::s_strPartActivateEvent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partactivateevent.h</field>
    <field name="url">partactivateevent_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts Part PartActivateEventPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partactivateevent.h</field>
    <field name="url">partactivateevent_8h_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT PartActivateEvent Event PartActivateEvent activated Part part QWidget widget PartActivateEvent activated Part part QWidget widget test QEvent event PartActivateEventPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partbase.cpp</field>
    <field name="url">partbase_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partbase.cpp</field>
    <field name="url">partbase_8cpp_source.html#l00029</field>
    <field name="keywords"></field>
    <field name="text">PartBase::PartBase d_ptr new PartBasePrivate this PartBase::PartBase PartBasePrivate dd d_ptr dd</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partbase.cpp</field>
    <field name="url">partbase_8cpp_source.html#l00039</field>
    <field name="keywords"></field>
    <field name="text">PartBase::~PartBase d_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partbase.cpp</field>
    <field name="url">partbase_8cpp_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">PartBase::setPartObject QObject obj Q_D PartBase d m_obj obj QObject PartBase::partObject Q_D PartBase d m_obj KAboutData PartBase::componentData Q_D PartBase d m_componentData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partbase.cpp</field>
    <field name="url">partbase_8cpp_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">PartBase::setComponentData KAboutData componentData setComponentData componentData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partbase.cpp</field>
    <field name="url">partbase_8cpp_source.html#l00069</field>
    <field name="keywords"></field>
    <field name="text">PartBase::setComponentData KAboutData pluginData bLoadPlugins Q_D PartBase d m_componentData pluginData KAboutData::registerPluginData pluginData KXMLGUIClient::setComponentName pluginData componentName pluginData displayName bLoadPlugins loadPlugins d m_obj pluginData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partbase.cpp</field>
    <field name="url">partbase_8cpp_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">PartBase::loadPlugins QObject parent KXMLGUIClient parentGUIClient KAboutData instance Q_D PartBase d m_pluginLoadingMode DoNotLoadPlugins Plugin::loadPlugins parent parentGUIClient instance componentName d m_pluginLoadingMode LoadPlugins d m_pluginInterfaceVersion</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partbase.cpp</field>
    <field name="url">partbase_8cpp_source.html#l00090</field>
    <field name="keywords"></field>
    <field name="text">PartBase::setPluginLoadingMode PluginLoadingMode loadingMode Q_D PartBase d m_pluginLoadingMode loadingMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partbase.cpp</field>
    <field name="url">partbase_8cpp_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text">KParts::PartBase::setPluginInterfaceVersion version Q_D PartBase d m_pluginInterfaceVersion version</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partbase.h</field>
    <field name="url">partbase_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KParts PartBasePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partbase.h</field>
    <field name="url">partbase_8h_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT PartBase KXMLGUIClient KPARTS_DECLARE_PRIVATE PartBase PartBase PartBase setPartObject QObject QObject partObject KAboutData componentData setComponentData KAboutData componentData setComponentData KAboutData pluginData loadPlugins</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partbase.h</field>
    <field name="url">partbase_8h_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text">PluginLoadingMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partbase.h</field>
    <field name="url">partbase_8h_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text">DoNotLoadPlugins</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partbase.h</field>
    <field name="url">partbase_8h_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text">LoadPlugins</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partbase.h</field>
    <field name="url">partbase_8h_source.html#l00122</field>
    <field name="keywords"></field>
    <field name="text">LoadPluginsIfEnabled loadPlugins QObject parent KXMLGUIClient parentGUIClient KAboutData aboutData setPluginLoadingMode PluginLoadingMode loadingMode setPluginInterfaceVersion version PartBase PartBasePrivate dd PartBasePrivate d_ptr Q_DISABLE_COPY PartBase</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts KParts PartManagerPrivate PartManagerPrivate m_activeWidget m_activePart m_selectedPart m_selectedWidget m_bAllowNestedParts m_bIgnoreScrollBars m_activationButtonMask Qt::LeftButton Qt::MidButton Qt::RightButton m_reason PartManager::NoReason m_bIgnoreExplicitFocusRequest PartManagerPrivate setReason QEvent ev ev type QEvent::MouseButtonPress QEvent::MouseButtonDblClick QMouseEvent mev QMouseEvent ev m_reason mev button Qt::LeftButton PartManager::ReasonLeftClick mev button Qt::MidButton PartManager::ReasonMidClick PartManager::ReasonRightClick QEvent::FocusIn m_reason QFocusEvent ev reason qWarning ev type allowExplicitFocusEvent QEvent ev ev type QEvent::FocusIn QFocusEvent fev QFocusEvent ev m_bIgnoreExplicitFocusRequest fev reason Qt::OtherFocusReason Part m_activePart QWidget m_activeWidget QList&lt;Part *&gt; m_parts PartManager::SelectionPolicy m_policy Part m_selectedPart QWidget m_selectedWidget QList&lt;const QWidget *&gt; m_managedTopLevelWidgets m_activationButtonMask m_bIgnoreScrollBars m_bAllowNestedParts m_reason m_bIgnoreExplicitFocusRequest</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text">PartManager::PartManager QWidget parent QObject parent d new PartManagerPrivate qApp installEventFilter d m_policy Direct addManagedTopLevelWidget parent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">PartManager::PartManager QWidget topLevel QObject parent QObject parent d new PartManagerPrivate qApp installEventFilter d m_policy Direct addManagedTopLevelWidget topLevel PartManager::~PartManager QWidget w d m_managedTopLevelWidgets disconnect w QWidget::destroyed PartManager::slotManagedTopLevelWidgetDestroyed Part it d m_parts it setManager qApp removeEventFilter d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00148</field>
    <field name="keywords"></field>
    <field name="text">PartManager::setSelectionPolicy SelectionPolicy policy d m_policy policy PartManager::SelectionPolicy PartManager::selectionPolicy d m_policy</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00158</field>
    <field name="keywords"></field>
    <field name="text">PartManager::setAllowNestedParts allow d m_bAllowNestedParts allow PartManager::allowNestedParts d m_bAllowNestedParts</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00168</field>
    <field name="keywords"></field>
    <field name="text">PartManager::setIgnoreScrollBars ignore d m_bIgnoreScrollBars ignore PartManager::ignoreScrollBars d m_bIgnoreScrollBars</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00178</field>
    <field name="keywords"></field>
    <field name="text">PartManager::setActivationButtonMask buttonMask d m_activationButtonMask buttonMask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00183</field>
    <field name="keywords"></field>
    <field name="text">PartManager::activationButtonMask d m_activationButtonMask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00188</field>
    <field name="keywords"></field>
    <field name="text">PartManager::eventFilter QObject obj QEvent ev ev type QEvent::MouseButtonPress ev type QEvent::MouseButtonDblClick ev type QEvent::FocusIn obj isWidgetType QWidget w QWidget obj w windowFlags testFlag Qt::Dialog w isModal w windowFlags testFlag Qt::Popup w windowFlags testFlag Qt::Tool QMouseEvent mev ev type QEvent::MouseButtonPress ev type QEvent::MouseButtonDblClick mev QMouseEvent ev qDebug mev button d m_activationButtonMask mev button d m_activationButtonMask Part part w QPoint pos d m_managedTopLevelWidgets contains w topLevelWidget d m_bIgnoreScrollBars qobject_cast&lt;QScrollBar *&gt; w mev pos mev globalPos part findPartFromWidget w pos part findPartFromWidget w evType ev type QEvent::MouseButtonPress ev type QEvent::MouseButtonDblClick ev type QEvent::FocusIn part d m_policy PartManager::TriState ev type QEvent::MouseButtonDblClick part d m_activePart w d m_activeWidget qDebug part d setReason ev setActivePart part w d m_reason NoReason d m_selectedWidget w d m_selectedPart part d m_activeWidget w d m_activePart part part isSelectable setSelectedPart part w qDebug part w metaObject className evType d setReason ev setActivePart part w d m_reason NoReason d m_selectedWidget w d m_selectedPart part qDebug part w metaObject className evType d setReason ev setActivePart part w d m_reason NoReason d m_activeWidget w d m_activePart part setSelectedPart part d m_activePart d allowExplicitFocusEvent ev qDebug part w metaObject className evType d setReason ev setActivePart part w d m_reason NoReason w w parentWidget w w windowFlags Qt::Dialog w isModal w windowFlags Qt::Popup w windowFlags Qt::Tool qDebug QString arg obj objectName arg obj metaObject className qDebug QString arg obj objectName arg obj metaObject className Part PartManager::findPartFromWidget QWidget widget QPoint pos QList&lt;Part *&gt;::iterator it d m_parts begin end d m_parts end it end it Part part hitTest widget pos part d m_parts contains part part Part PartManager::findPartFromWidget QWidget widget QList&lt;Part *&gt;::iterator it d m_parts begin end d m_parts end it end it widget widget it</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00337</field>
    <field name="keywords"></field>
    <field name="text">PartManager::addPart Part part setActive Q_ASSERT part d m_parts contains part qWarning part d m_parts append part part setManager setActive setActivePart part QWidget w part widget w focusPolicy Qt::NoFocus qWarning part objectName w objectName endl part widget part widget focusPolicy Qt::TabFocus qWarning part objectName w objectName endl w setFocus w show emit partAdded part</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00375</field>
    <field name="keywords"></field>
    <field name="text">PartManager::removePart Part part d m_parts contains part nb d m_parts removeAll part Q_ASSERT nb Q_UNUSED nb part setManager emit partRemoved part part d m_activePart setActivePart part d m_selectedPart setSelectedPart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00396</field>
    <field name="keywords"></field>
    <field name="text">PartManager::replacePart Part oldPart Part newPart setActive d m_parts contains oldPart qFatal oldPart objectName toLocal8Bit constData d m_parts removeAll oldPart oldPart setManager emit partRemoved oldPart addPart newPart setActive</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00413</field>
    <field name="keywords"></field>
    <field name="text">PartManager::setActivePart Part part QWidget widget part d m_parts contains part qWarning part objectName part d m_bAllowNestedParts QObject parentPart part parent KParts::Part parPart KParts::Part parentPart parPart setActivePart parPart parPart widget qDebug d m_activePart part d m_activeWidget widget endl d m_activePart part d m_activePart part widget d m_activeWidget widget KParts::Part oldActivePart d m_activePart QWidget oldActiveWidget d m_activeWidget setSelectedPart d m_activePart part d m_activeWidget widget oldActivePart KParts::Part savedActivePart part QWidget savedActiveWidget widget PartActivateEvent ev oldActivePart oldActiveWidget QApplication::sendEvent oldActivePart ev oldActiveWidget disconnect oldActiveWidget QWidget::destroyed PartManager::slotWidgetDestroyed QApplication::sendEvent oldActiveWidget ev d m_activePart savedActivePart d m_activeWidget savedActiveWidget d m_activePart widget d m_activeWidget part widget PartActivateEvent ev d m_activePart d m_activeWidget QApplication::sendEvent d m_activePart ev d m_activeWidget connect d m_activeWidget QWidget::destroyed PartManager::slotWidgetDestroyed QApplication::sendEvent d m_activeWidget ev qDebug d m_activePart emit activePartChanged d m_activePart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00488</field>
    <field name="keywords"></field>
    <field name="text">Part PartManager::activePart d m_activePart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00493</field>
    <field name="keywords"></field>
    <field name="text">QWidget PartManager::activeWidget d m_activeWidget</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00498</field>
    <field name="keywords"></field>
    <field name="text">PartManager::setSelectedPart Part part QWidget widget part d m_selectedPart widget d m_selectedWidget Part oldPart d m_selectedPart QWidget oldWidget d m_selectedWidget d m_selectedPart part d m_selectedWidget widget part widget d m_selectedWidget part widget oldPart PartSelectEvent ev oldPart oldWidget QApplication::sendEvent oldPart ev QApplication::sendEvent oldWidget ev d m_selectedPart PartSelectEvent ev d m_selectedPart d m_selectedWidget QApplication::sendEvent d m_selectedPart ev QApplication::sendEvent d m_selectedWidget ev</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00527</field>
    <field name="keywords"></field>
    <field name="text">Part PartManager::selectedPart d m_selectedPart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00532</field>
    <field name="keywords"></field>
    <field name="text">QWidget PartManager::selectedWidget d m_selectedWidget</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00537</field>
    <field name="keywords"></field>
    <field name="text">PartManager::slotObjectDestroyed removePart const_cast&lt;Part *&gt; static_cast&lt;const Part *&gt; sender</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00543</field>
    <field name="keywords"></field>
    <field name="text">PartManager::slotWidgetDestroyed static_cast&lt;const QWidget *&gt; sender d m_activeWidget setActivePart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00552</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;Part *&gt; PartManager::parts d m_parts</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00557</field>
    <field name="keywords"></field>
    <field name="text">PartManager::addManagedTopLevelWidget QWidget topLevel topLevel isTopLevel d m_managedTopLevelWidgets contains topLevel d m_managedTopLevelWidgets append topLevel connect topLevel QWidget::destroyed PartManager::slotManagedTopLevelWidgetDestroyed</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00572</field>
    <field name="keywords"></field>
    <field name="text">PartManager::removeManagedTopLevelWidget QWidget topLevel d m_managedTopLevelWidgets removeAll topLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00577</field>
    <field name="keywords"></field>
    <field name="text">PartManager::slotManagedTopLevelWidgetDestroyed QWidget widget QWidget sender removeManagedTopLevelWidget widget</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00583</field>
    <field name="keywords"></field>
    <field name="text">PartManager::reason d m_reason</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.cpp</field>
    <field name="url">partmanager_8cpp_source.html#l00588</field>
    <field name="keywords"></field>
    <field name="text">PartManager::setIgnoreExplictFocusRequests ignore d m_bIgnoreExplicitFocusRequest ignore</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.h</field>
    <field name="url">partmanager_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts Part PartManagerPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.h</field>
    <field name="url">partmanager_8h_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT PartManager QObject Q_OBJECT Q_ENUMS SelectionPolicy Q_PROPERTY SelectionPolicy selectionPolicy READ selectionPolicy WRITE setSelectionPolicy Q_PROPERTY allowNestedParts READ allowNestedParts WRITE setAllowNestedParts Q_PROPERTY ignoreScrollBars READ ignoreScrollBars WRITE setIgnoreScrollBars</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.h</field>
    <field name="url">partmanager_8h_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">SelectionPolicy Direct TriState</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partmanager.h</field>
    <field name="url">partmanager_8h_source.html#l00061</field>
    <field name="keywords"></field>
    <field name="text">Reason ReasonLeftClick ReasonMidClick ReasonRightClick NoReason PartManager QWidget parent PartManager QWidget topLevel QObject parent PartManager setSelectionPolicy SelectionPolicy policy SelectionPolicy selectionPolicy setAllowNestedParts allow allowNestedParts setIgnoreScrollBars ignore ignoreScrollBars setActivationButtonMask buttonMask activationButtonMask eventFilter QObject obj QEvent ev Q_DECL_OVERRIDE addPart Part part setActive removePart Part part replacePart Part oldPart Part newPart setActive setActivePart Part part QWidget widget Part activePart QWidget activeWidget setSelectedPart Part part QWidget widget Part selectedPart QWidget selectedWidget QList&lt;Part *&gt; parts addManagedTopLevelWidget QWidget topLevel removeManagedTopLevelWidget QWidget topLevel reason Q_SIGNALS partAdded KParts::Part part partRemoved KParts::Part part activePartChanged KParts::Part newPart setIgnoreExplictFocusRequests Q_SLOTS slotObjectDestroyed slotWidgetDestroyed slotManagedTopLevelWidgetDestroyed Part findPartFromWidget QWidget widget QPoint pos Part findPartFromWidget QWidget widget PartManagerPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partselectevent.cpp</field>
    <field name="url">partselectevent_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts KParts::PartSelectEventPrivate PartSelectEventPrivate selected Part part QWidget widget m_bSelected selected m_part part m_widget widget s_strPartSelectEvent m_bSelected Part m_part QWidget m_widget PartSelectEventPrivate::s_strPartSelectEvent PartSelectEvent::PartSelectEvent selected Part part QWidget widget Event PartSelectEventPrivate s_strPartSelectEvent d new PartSelectEventPrivate selected part widget PartSelectEvent::~PartSelectEvent d PartSelectEvent::selected d m_bSelected Part PartSelectEvent::part d m_part QWidget PartSelectEvent::widget d m_widget PartSelectEvent::test QEvent event Event::test event PartSelectEventPrivate::s_strPartSelectEvent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partselectevent.h</field>
    <field name="url">partselectevent_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts Part PartSelectEventPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">partselectevent.h</field>
    <field name="url">partselectevent_8h_source.html#l00034</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT PartSelectEvent Event PartSelectEvent selected Part part QWidget widget PartSelectEvent selected Part part QWidget widget test QEvent event PartSelectEventPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">plugin.cpp</field>
    <field name="url">plugin_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts Plugin::PluginPrivate QString m_parentInstance QString m_library</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">plugin.cpp</field>
    <field name="url">plugin_8cpp_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">Plugin::Plugin QObject parent QObject parent d new PluginPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">plugin.cpp</field>
    <field name="url">plugin_8cpp_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">Plugin::~Plugin d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">plugin.cpp</field>
    <field name="url">plugin_8cpp_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">QString Plugin::xmlFile QString path KXMLGUIClient::xmlFile d m_parentInstance isEmpty path isEmpty QDir::isAbsolutePath path path QString absPath QStandardPaths::locate QStandardPaths::GenericDataLocation d m_parentInstance QLatin1Char path Q_ASSERT absPath isEmpty absPath</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">plugin.cpp</field>
    <field name="url">plugin_8cpp_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text">QString Plugin::localXMLFile QString path KXMLGUIClient::xmlFile d m_parentInstance isEmpty path isEmpty QDir::isAbsolutePath path path QString absPath QStandardPaths::writableLocation QStandardPaths::GenericDataLocation QLatin1Char d m_parentInstance QLatin1Char path absPath QList&lt;Plugin::PluginInfo&gt; Plugin::pluginInfos QString componentName QList&lt;PluginInfo&gt; plugins QMap&lt;QString, QStringList&gt; sortedPlugins QStringList dirs QStandardPaths::locateAll QStandardPaths::GenericDataLocation componentName QStringLiteral QStandardPaths::LocateDirectory Q_FOREACH QString dir dirs Q_FOREACH QString file QDir dir entryList QStringList QFileInfo fInfo dir QLatin1Char file QMap&lt;QString, QStringList&gt;::Iterator mapIt sortedPlugins find fInfo fileName mapIt sortedPlugins end mapIt sortedPlugins insert fInfo fileName QStringList mapIt value append fInfo absoluteFilePath QMap&lt;QString, QStringList&gt;::ConstIterator mapIt sortedPlugins constBegin QMap&lt;QString, QStringList&gt;::ConstIterator mapEnd sortedPlugins constEnd mapIt mapEnd mapIt PluginInfo info QString doc info m_absXMLFileName KXMLGUIClient::findMostRecentXMLFile mapIt value doc info m_absXMLFileName isEmpty info m_relXMLFileName QStringLiteral mapIt key info m_document setContent doc info m_document documentElement isNull plugins append info plugins</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">plugin.cpp</field>
    <field name="url">plugin_8cpp_source.html#l00130</field>
    <field name="keywords"></field>
    <field name="text">Plugin::loadPlugins QObject parent QString componentName loadPlugins parent pluginInfos componentName componentName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">plugin.cpp</field>
    <field name="url">plugin_8cpp_source.html#l00135</field>
    <field name="keywords"></field>
    <field name="text">Plugin::loadPlugins QObject parent QList&lt;PluginInfo&gt; pluginInfos QString componentName QList&lt;PluginInfo&gt;::ConstIterator pIt pluginInfos begin QList&lt;PluginInfo&gt;::ConstIterator pEnd pluginInfos end pIt pEnd pIt QString library m_document documentElement attribute QStringLiteral library isEmpty hasPlugin parent library Plugin plugin loadPlugin parent library m_document documentElement attribute QStringLiteral plugin plugin d m_parentInstance componentName plugin setXMLFile m_relXMLFileName plugin setDOMDocument m_document</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">plugin.cpp</field>
    <field name="url">plugin_8cpp_source.html#l00158</field>
    <field name="keywords"></field>
    <field name="text">Plugin::loadPlugins QObject parent QList&lt;PluginInfo&gt; pluginInfos loadPlugins parent pluginInfos QString Plugin Plugin::loadPlugin QObject parent QString libname QString keyword KPluginLoader loader libname KPluginFactory factory loader factory factory Plugin plugin factory create Plugin keyword parent plugin plugin d m_library libname plugin</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">plugin.cpp</field>
    <field name="url">plugin_8cpp_source.html#l00181</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KParts::Plugin *&gt; Plugin::pluginObjects QObject parent QList&lt;KParts::Plugin *&gt; objects parent objects objects parent findChildren Plugin QString Qt::FindDirectChildrenOnly objects Plugin::hasPlugin QObject parent QString library QObjectList plugins parent children QObjectList::ConstIterator it plugins begin it plugins end it Plugin plugin qobject_cast Plugin plugin plugin d m_library library Plugin::setComponentData KAboutData pluginData KAboutData::registerPluginData pluginData KXMLGUIClient::setComponentName pluginData componentName pluginData displayName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">plugin.cpp</field>
    <field name="url">plugin_8cpp_source.html#l00213</field>
    <field name="keywords"></field>
    <field name="text">Plugin::loadPlugins QObject parent KXMLGUIClient parentGUIClient QString componentName enableNewPluginsByDefault interfaceVersionRequired KConfigGroup cfgGroup KSharedConfig::openConfig componentName QStringLiteral QList&lt;PluginInfo&gt; plugins pluginInfos componentName QList&lt;PluginInfo&gt;::ConstIterator pIt plugins begin QList&lt;PluginInfo&gt;::ConstIterator pEnd plugins end pIt pEnd pIt QDomElement docElem m_document documentElement QString library docElem attribute QStringLiteral QString keyword library isEmpty QString name docElem attribute QStringLiteral pluginEnabled enableNewPluginsByDefault cfgGroup hasKey name QStringLiteral pluginEnabled cfgGroup readEntry name QStringLiteral QString relPath componentName QLatin1Char m_relXMLFileName relPath truncate relPath lastIndexOf QLatin1Char relPath QStringLiteral QString desktopfile QStandardPaths::locate QStandardPaths::GenericDataLocation relPath desktopfile isEmpty KDesktopFile _desktop desktopfile KConfigGroup desktop _desktop desktopGroup keyword desktop readEntry pluginEnabled desktop readEntry enableNewPluginsByDefault interfaceVersionRequired version desktop readEntry version interfaceVersionRequired pluginEnabled QObjectList pluginList parent children pluginFound QObjectList::ConstIterator it pluginList begin it pluginList end it Plugin plugin qobject_cast Plugin plugin plugin d m_library library pluginEnabled KXMLGUIFactory factory plugin factory factory factory removeClient plugin plugin pluginFound pluginFound pluginEnabled Plugin plugin loadPlugin parent library keyword plugin plugin d m_parentInstance componentName plugin setXMLFile m_relXMLFileName plugin setDOMDocument m_document parentGUIClient insertChildClient plugin</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">plugin.h</field>
    <field name="url">plugin_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KParts</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">plugin.h</field>
    <field name="url">plugin_8h_source.html#l00053</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT Plugin QObject KXMLGUIClient Q_OBJECT PluginInfo QString m_relXMLFileName QString m_absXMLFileName QDomDocument m_document Plugin QObject parent Plugin QString xmlFile Q_DECL_OVERRIDE QString localXMLFile Q_DECL_OVERRIDE loadPlugins QObject parent QString instance loadPlugins QObject parent QList&lt;PluginInfo&gt; pluginInfos loadPlugins QObject parent QList&lt;PluginInfo&gt; pluginInfos QString instance loadPlugins QObject parent KXMLGUIClient parentGUIClient QString instance enableNewPluginsByDefault interfaceVersionRequired QList&lt;Plugin *&gt; pluginObjects QObject parent setComponentData KAboutData pluginData QList&lt;Plugin::PluginInfo&gt; pluginInfos QString instance Plugin loadPlugin QObject parent QString libname QString keyword QString hasPlugin QObject parent QString library PluginPrivate PluginPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">ReadOnlyPart::ReadOnlyPart QObject parent Part new ReadOnlyPartPrivate this parent ReadOnlyPart::ReadOnlyPart ReadOnlyPartPrivate dd QObject parent Part dd parent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">ReadOnlyPart::~ReadOnlyPart ReadOnlyPart::closeUrl QUrl ReadOnlyPart::url Q_D ReadOnlyPart d m_url</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00063</field>
    <field name="keywords"></field>
    <field name="text">ReadOnlyPart::setUrl QUrl url Q_D ReadOnlyPart d m_url url d m_url url emit urlChanged url</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00073</field>
    <field name="keywords"></field>
    <field name="text">QString ReadOnlyPart::localFilePath Q_D ReadOnlyPart d m_file</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">ReadOnlyPart::setLocalFilePath QString localFilePath Q_D ReadOnlyPart d m_file localFilePath</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text">ReadOnlyPart::isLocalFileTemporary Q_D ReadOnlyPart d m_bTemp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text">ReadOnlyPart::setLocalFileTemporary temp Q_D ReadOnlyPart d m_bTemp temp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00105</field>
    <field name="keywords"></field>
    <field name="text">ReadOnlyPart::setProgressInfoEnabled show Q_D ReadOnlyPart d m_showProgressInfo show</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00112</field>
    <field name="keywords"></field>
    <field name="text">ReadOnlyPart::isProgressInfoEnabled Q_D ReadOnlyPart d m_showProgressInfo ReadOnlyPart::showProgressInfo show Q_D ReadOnlyPart d m_showProgressInfo show</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00128</field>
    <field name="keywords"></field>
    <field name="text">ReadOnlyPart::openUrl QUrl url Q_D ReadOnlyPart url isValid d m_bAutoDetectedMime d m_arguments setMimeType QString d m_bAutoDetectedMime OpenUrlArguments args d m_arguments closeUrl d m_arguments args setUrl url d m_file clear d m_url isLocalFile d m_file d m_url toLocalFile d openLocalFile KProtocolInfo::protocolClass url scheme QLatin1String KIO::JobFlags flags d m_showProgressInfo KIO::DefaultFlags KIO::HideProgressInfo d m_statJob KIO::mostLocalUrl d m_url flags KJobWidgets::setWindow d m_statJob widget connect d m_statJob SIGNAL result KJob SLOT _k_slotStatJobFinished KJob d openRemoteFile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00164</field>
    <field name="keywords"></field>
    <field name="text">ReadOnlyPart::openFile qWarning metaObject className ReadOnlyPartPrivate::openLocalFile Q_Q ReadOnlyPart emit q started m_bTemp m_arguments mimeType isEmpty QMimeDatabase db QMimeType mime db mimeTypeForUrl m_url mime isDefault m_arguments setMimeType mime name m_bAutoDetectedMime ret q openFile ret emit q setWindowCaption m_url toDisplayString emit q completed emit q canceled QString ret ReadOnlyPartPrivate::openRemoteFile Q_Q ReadOnlyPart m_bTemp QString fileName m_url fileName QFileInfo fileInfo fileName QString ext fileInfo completeSuffix QString extension ext isEmpty m_url hasQuery extension QLatin1Char ext QTemporaryFile tempFile QDir::tempPath QLatin1Char q componentData componentName QLatin1String extension tempFile setAutoRemove tempFile open m_file tempFile fileName QUrl destURL QUrl::fromLocalFile m_file KIO::JobFlags flags m_showProgressInfo KIO::DefaultFlags KIO::HideProgressInfo flags KIO::Overwrite m_job KIO::file_copy m_url destURL flags KJobWidgets::setWindow m_job q widget emit q started m_job QObject::connect m_job SIGNAL result KJob q SLOT _k_slotJobFinished KJob QObject::connect m_job SIGNAL mimetype KIO::Job QString q SLOT _k_slotGotMimeType KIO::Job QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00225</field>
    <field name="keywords"></field>
    <field name="text">ReadOnlyPart::abortLoad Q_D ReadOnlyPart d m_statJob d m_statJob kill d m_statJob d m_job d m_job kill d m_job</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00241</field>
    <field name="keywords"></field>
    <field name="text">ReadOnlyPart::closeUrl Q_D ReadOnlyPart abortLoad d m_arguments KParts::OpenUrlArguments d m_bTemp QFile::remove d m_file d m_bTemp ReadOnlyPartPrivate::_k_slotStatJobFinished KJob job Q_ASSERT job m_statJob m_statJob job error QUrl localUrl KIO::StatJob job mostLocalUrl localUrl isLocalFile m_file localUrl toLocalFile void openLocalFile openRemoteFile ReadOnlyPartPrivate::_k_slotJobFinished KJob job Q_Q ReadOnlyPart Q_ASSERT job m_job m_job job error emit q canceled job errorString q openFile emit q setWindowCaption m_url toDisplayString emit q completed emit q canceled QString ReadOnlyPartPrivate::_k_slotGotMimeType KIO::Job job QString mime Q_ASSERT job m_job Q_UNUSED job m_arguments mimeType isEmpty m_arguments setMimeType mime m_bAutoDetectedMime</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00307</field>
    <field name="keywords"></field>
    <field name="text">ReadOnlyPart::guiActivateEvent GUIActivateEvent event Q_D ReadOnlyPart event activated d m_url isEmpty emit setWindowCaption d m_url toDisplayString emit setWindowCaption QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00321</field>
    <field name="keywords"></field>
    <field name="text">ReadOnlyPart::openStream QString mimeType QUrl url Q_D ReadOnlyPart OpenUrlArguments args d m_arguments closeUrl d m_arguments args setUrl url doOpenStream mimeType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00334</field>
    <field name="keywords"></field>
    <field name="text">ReadOnlyPart::writeStream QByteArray data doWriteStream data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00339</field>
    <field name="keywords"></field>
    <field name="text">ReadOnlyPart::closeStream doCloseStream</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00344</field>
    <field name="keywords"></field>
    <field name="text">BrowserExtension ReadOnlyPart::browserExtension findChild&lt;KParts::BrowserExtension *&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00349</field>
    <field name="keywords"></field>
    <field name="text">KParts::ReadOnlyPart::setArguments OpenUrlArguments arguments Q_D ReadOnlyPart d m_arguments arguments d m_bAutoDetectedMime arguments mimeType isEmpty</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.cpp</field>
    <field name="url">readonlypart_8cpp_source.html#l00356</field>
    <field name="keywords"></field>
    <field name="text">OpenUrlArguments KParts::ReadOnlyPart::arguments Q_D ReadOnlyPart d m_arguments</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.h</field>
    <field name="url">readonlypart_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KJob KIO Job KParts ReadOnlyPartPrivate BrowserExtension OpenUrlArguments</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readonlypart.h</field>
    <field name="url">readonlypart_8h_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT ReadOnlyPart Part Q_OBJECT Q_PROPERTY QUrl url READ url KPARTS_DECLARE_PRIVATE ReadOnlyPart ReadOnlyPart QObject parent ReadOnlyPart setProgressInfoEnabled show isProgressInfoEnabled showProgressInfo show Q_SLOTS openUrl QUrl url QUrl url closeUrl BrowserExtension browserExtension setArguments OpenUrlArguments arguments OpenUrlArguments arguments openStream QString mimeType QUrl url writeStream QByteArray data closeStream doOpenStream QString doWriteStream QByteArray doCloseStream Q_SIGNALS started KIO::Job completed completed pendingAction canceled QString errMsg urlChanged QUrl url openFile abortLoad guiActivateEvent GUIActivateEvent event Q_DECL_OVERRIDE KPARTS_DEPRECATED isLocalFileTemporary KPARTS_DEPRECATED setLocalFileTemporary temp setUrl QUrl url QString localFilePath setLocalFilePath QString localFilePath ReadOnlyPart ReadOnlyPartPrivate dd QObject parent Q_PRIVATE_SLOT d_func _k_slotJobFinished KJob job Q_PRIVATE_SLOT d_func _k_slotStatJobFinished KJob Q_PRIVATE_SLOT d_func _k_slotGotMimeType KIO::Job job QString mime Q_DISABLE_COPY ReadOnlyPart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readwritepart.cpp</field>
    <field name="url">readwritepart_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readwritepart.cpp</field>
    <field name="url">readwritepart_8cpp_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">ReadWritePart::ReadWritePart QObject parent ReadOnlyPart new ReadWritePartPrivate this parent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readwritepart.cpp</field>
    <field name="url">readwritepart_8cpp_source.html#l00050</field>
    <field name="keywords"></field>
    <field name="text">ReadWritePart::~ReadWritePart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readwritepart.cpp</field>
    <field name="url">readwritepart_8cpp_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">ReadWritePart::setReadWrite readwrite Q_D ReadWritePart d m_bReadWrite readwrite</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readwritepart.cpp</field>
    <field name="url">readwritepart_8cpp_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">ReadWritePart::setModified modified Q_D ReadWritePart d m_bReadWrite modified qCritical endl d m_bModified modified</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readwritepart.cpp</field>
    <field name="url">readwritepart_8cpp_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text">ReadWritePart::setModified setModified</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readwritepart.cpp</field>
    <field name="url">readwritepart_8cpp_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text">ReadWritePart::queryClose Q_D ReadWritePart isReadWrite isModified QString docName url fileName docName isEmpty docName i18n QWidget parentWidget widget parentWidget parentWidget QApplication::activeWindow res KMessageBox::warningYesNoCancel parentWidget i18n docName i18n KStandardGuiItem::save KStandardGuiItem::discard abortClose handled res KMessageBox::Yes sigQueryClose handled abortClose handled d m_url isEmpty QUrl url QFileDialog::getSaveFileUrl parentWidget url isEmpty saveAs url save abortClose waitSaveComplete KMessageBox::No default</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readwritepart.cpp</field>
    <field name="url">readwritepart_8cpp_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text">ReadWritePart::closeUrl abortLoad isReadWrite isModified queryClose ReadOnlyPart::closeUrl</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readwritepart.cpp</field>
    <field name="url">readwritepart_8cpp_source.html#l00146</field>
    <field name="keywords"></field>
    <field name="text">ReadWritePart::closeUrl promptToSave promptToSave closeUrl ReadOnlyPart::closeUrl</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readwritepart.cpp</field>
    <field name="url">readwritepart_8cpp_source.html#l00151</field>
    <field name="keywords"></field>
    <field name="text">ReadWritePart::save Q_D ReadWritePart d m_saveOk d m_file isEmpty d prepareSaving saveFile saveToUrl emit canceled QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readwritepart.cpp</field>
    <field name="url">readwritepart_8cpp_source.html#l00167</field>
    <field name="keywords"></field>
    <field name="text">ReadWritePart::saveAs QUrl url Q_D ReadWritePart url isValid qCritical url endl d m_duringSaveAs d m_originalURL d m_url d m_originalFilePath d m_file d m_url url d prepareSaving result save result d m_originalURL d m_url emit urlChanged d m_url emit setWindowCaption d m_url toDisplayString d m_url d m_originalURL d m_file d m_originalFilePath d m_duringSaveAs d m_originalURL QUrl d m_originalFilePath clear result ReadWritePartPrivate::prepareSaving m_url isLocalFile m_bTemp QFile::remove m_file m_bTemp m_file m_url toLocalFile m_file isEmpty m_bTemp QTemporaryFile tempFile tempFile setAutoRemove tempFile open m_file tempFile fileName m_bTemp makeHardLink QString src QString dest return ::link QFile::encodeName src constData QFile::encodeName dest constData CreateHardLinkW LPCWSTR dest utf16 LPCWSTR src utf16</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readwritepart.cpp</field>
    <field name="url">readwritepart_8cpp_source.html#l00232</field>
    <field name="keywords"></field>
    <field name="text">ReadWritePart::saveToUrl Q_D ReadWritePart d m_url isLocalFile setModified emit completed Q_ASSERT d m_bTemp d m_saveOk d m_duringSaveAs d m_originalURL QUrl d m_originalFilePath clear d m_uploadJob QFile::remove d m_uploadJob srcUrl toLocalFile d m_uploadJob kill d m_uploadJob QTemporaryFile tempFile QTemporaryFile tempFile open QString uploadFile tempFile fileName tempFile QUrl uploadUrl QUrl::fromLocalFile uploadFile makeHardLink d m_file uploadFile d m_uploadJob KIO::file_move uploadUrl d m_url KIO::Overwrite KJobWidgets::setWindow d m_uploadJob widget connect d m_uploadJob SIGNAL result KJob SLOT _k_slotUploadFinished KJob ReadWritePartPrivate::_k_slotUploadFinished KJob Q_Q ReadWritePart m_uploadJob error QFile::remove m_uploadJob srcUrl toLocalFile QString error m_uploadJob errorString m_uploadJob m_duringSaveAs q setUrl m_originalURL m_file m_originalFilePath emit q canceled error m_url adjusted QUrl::RemoveFilename m_uploadJob q setModified emit q completed m_saveOk m_duringSaveAs m_originalURL QUrl m_originalFilePath clear m_waitForSave m_eventLoop quit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readwritepart.cpp</field>
    <field name="url">readwritepart_8cpp_source.html#l00298</field>
    <field name="keywords"></field>
    <field name="text">ReadWritePart::isReadWrite Q_D ReadWritePart d m_bReadWrite</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readwritepart.cpp</field>
    <field name="url">readwritepart_8cpp_source.html#l00305</field>
    <field name="keywords"></field>
    <field name="text">ReadWritePart::isModified Q_D ReadWritePart d m_bModified</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readwritepart.cpp</field>
    <field name="url">readwritepart_8cpp_source.html#l00312</field>
    <field name="keywords"></field>
    <field name="text">ReadWritePart::waitSaveComplete Q_D ReadWritePart d m_uploadJob d m_saveOk d m_waitForSave d m_eventLoop exec QEventLoop::ExcludeUserInputEvents d m_waitForSave d m_saveOk</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readwritepart.h</field>
    <field name="url">readwritepart_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts ReadWritePartPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">readwritepart.h</field>
    <field name="url">readwritepart_8h_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT ReadWritePart ReadOnlyPart Q_OBJECT KPARTS_DECLARE_PRIVATE ReadWritePart ReadWritePart QObject parent ReadWritePart isReadWrite setReadWrite readwrite isModified queryClose closeUrl Q_DECL_OVERRIDE closeUrl promptToSave saveAs QUrl url setModified modified Q_SIGNALS sigQueryClose handled abortClosing Q_SLOTS setModified save waitSaveComplete saveFile saveToUrl Q_PRIVATE_SLOT d_func _k_slotUploadFinished KJob job Q_DISABLE_COPY ReadWritePart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts ScriptableExtensionPrivate ScriptableExtension hostContext ScriptableExtensionPrivate hostContext ScriptableExtension::ScriptableExtension QObject parent QObject parent d new ScriptableExtensionPrivate ScriptableExtension::~ScriptableExtension d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">ScriptableExtension ScriptableExtension::childObject QObject obj obj findChild KParts::ScriptableExtension QString Qt::FindDirectChildrenOnly</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">ScriptableExtension ScriptableExtension::adapterFromLiveConnect QObject parentObj LiveConnectExtension oldApi ScriptableLiveConnectExtension parentObj oldApi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">ScriptableExtension::setHost ScriptableExtension host d hostContext host</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00060</field>
    <field name="keywords"></field>
    <field name="text">ScriptableExtension ScriptableExtension::host d hostContext</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">QVariant ScriptableExtension::rootObject QVariant::fromValue Null</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00070</field>
    <field name="keywords"></field>
    <field name="text">QVariant ScriptableExtension::enclosingObject d hostContext d hostContext encloserForKid QVariant::fromValue Null QVariant ScriptableExtension::encloserForKid KParts::ScriptableExtension kid Q_UNUSED kid QVariant::fromValue Null QVariant unimplemented ScriptableExtension::Exception except QStringLiteral QVariant::fromValue except</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text">QVariant ScriptableExtension::callAsFunction ScriptableExtension callerPrincipal quint64 objId ArgList args Q_UNUSED callerPrincipal Q_UNUSED objId Q_UNUSED args unimplemented</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text">QVariant ScriptableExtension::callFunctionReference ScriptableExtension callerPrincipal quint64 objId QString f ArgList args Q_UNUSED callerPrincipal Q_UNUSED objId Q_UNUSED args Q_UNUSED f unimplemented</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00111</field>
    <field name="keywords"></field>
    <field name="text">QVariant ScriptableExtension::callAsConstructor ScriptableExtension callerPrincipal quint64 objId ArgList args Q_UNUSED callerPrincipal Q_UNUSED objId Q_UNUSED args unimplemented</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text">ScriptableExtension::hasProperty ScriptableExtension callerPrincipal quint64 objId QString propName Q_UNUSED callerPrincipal Q_UNUSED objId Q_UNUSED propName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00129</field>
    <field name="keywords"></field>
    <field name="text">QVariant ScriptableExtension::get ScriptableExtension callerPrincipal quint64 objId QString propName Q_UNUSED callerPrincipal Q_UNUSED objId Q_UNUSED propName unimplemented</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text">ScriptableExtension::put ScriptableExtension callerPrincipal quint64 objId QString propName QVariant value Q_UNUSED callerPrincipal Q_UNUSED objId Q_UNUSED propName Q_UNUSED value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00148</field>
    <field name="keywords"></field>
    <field name="text">ScriptableExtension::removeProperty ScriptableExtension callerPrincipal quint64 objId QString propName Q_UNUSED callerPrincipal Q_UNUSED objId Q_UNUSED propName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00157</field>
    <field name="keywords"></field>
    <field name="text">ScriptableExtension::enumerateProperties ScriptableExtension callerPrincipal quint64 objId QStringList result Q_UNUSED callerPrincipal Q_UNUSED objId Q_UNUSED result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00166</field>
    <field name="keywords"></field>
    <field name="text">ScriptableExtension::setException ScriptableExtension callerPrincipal QString message Q_UNUSED callerPrincipal Q_UNUSED message</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00174</field>
    <field name="keywords"></field>
    <field name="text">QVariant ScriptableExtension::evaluateScript ScriptableExtension callerPrincipal quint64 contextObjectId QString code ScriptLanguage language Q_UNUSED callerPrincipal Q_UNUSED contextObjectId Q_UNUSED code Q_UNUSED language unimplemented</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00186</field>
    <field name="keywords"></field>
    <field name="text">ScriptableExtension::isScriptLanguageSupported ScriptLanguage lang Q_UNUSED lang</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00192</field>
    <field name="keywords"></field>
    <field name="text">ScriptableExtension::acquire quint64 objId Q_UNUSED objId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00197</field>
    <field name="keywords"></field>
    <field name="text">QVariant ScriptableExtension::acquireValue QVariant v v canConvert Object Object o v value Object o owner acquire o objId v canConvert FunctionRef FunctionRef fr v value FunctionRef fr base owner acquire fr base objId v</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00209</field>
    <field name="keywords"></field>
    <field name="text">ScriptableExtension::release quint64 objId Q_UNUSED objId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.cpp</field>
    <field name="url">scriptableextension_8cpp_source.html#l00214</field>
    <field name="keywords"></field>
    <field name="text">QVariant ScriptableExtension::releaseValue QVariant v v canConvert Object Object o v value Object o owner release o objId v canConvert FunctionRef FunctionRef fr v value FunctionRef fr base owner release fr base objId v ScriptableLiveConnectExtension::ScriptableLiveConnectExtension QObject p LiveConnectExtension old ScriptableExtension p wrapee old connect wrapee LiveConnectExtension::partEvent ScriptableLiveConnectExtension::liveConnectEvent QVariant ScriptableLiveConnectExtension::rootObject acquireValue QVariant::fromValue ScriptableExtension::Object ScriptableLiveConnectExtension::hasProperty ScriptableExtension quint64 objId QString propName QVariant val objId propName ok val canConvert ScriptableExtension::Exception releaseValue val ok QVariant ScriptableLiveConnectExtension::callFunctionReference ScriptableExtension quint64 o QString f ScriptableExtension::ArgList a QStringList qargs qargs reserve a size i i a size i ok qargs append toLC a i ok ok unimplemented LiveConnectExtension::Type retType retObjId QString retVal wrapee call o f qargs retType retObjId retVal acquireValue fromLC QString retType retObjId retVal unimplemented QVariant ScriptableLiveConnectExtension::get ScriptableExtension quint64 objId QString propName LiveConnectExtension::Type retType retObjId QString retVal wrapee get objId propName retType retObjId retVal acquireValue fromLC propName retType retObjId retVal unimplemented ScriptableLiveConnectExtension::put ScriptableExtension quint64 objId QString propName QVariant value ok QString val toLC value ok ok wrapee put objId propName val QVariant ScriptableLiveConnectExtension::fromLC QString name LiveConnectExtension::Type type objId QString value type KParts::LiveConnectExtension::TypeBool ok i value toInt ok ok QVariant i QVariant value toLower QLatin1String KParts::LiveConnectExtension::TypeObject KParts::LiveConnectExtension::TypeFunction refCounts contains objId refCounts objId Object o ScriptableExtension::Object objId type KParts::LiveConnectExtension::TypeObject QVariant::fromValue o QVariant::fromValue FunctionRef o name KParts::LiveConnectExtension::TypeNumber QVariant value toDouble KParts::LiveConnectExtension::TypeString QVariant value KParts::LiveConnectExtension::TypeVoid QVariant::fromValue ScriptableExtension::Undefined QString ScriptableLiveConnectExtension::toLC QVariant in ok ok in canConvert ScriptableExtension::Object in canConvert ScriptableExtension::Exception in canConvert ScriptableExtension::FunctionRef ok QString in canConvert ScriptableExtension::Null QStringLiteral in canConvert ScriptableExtension::Undefined QStringLiteral in type QVariant::Bool in toBool QStringLiteral QStringLiteral in canConvert QString in toString ok QString ScriptableLiveConnectExtension::acquire quint64 objId refCounts objId ScriptableLiveConnectExtension::release quint64 objId newRC refCounts objId newRC objId wrapee unregister objId refCounts remove objId ScriptableLiveConnectExtension::liveConnectEvent QString event LiveConnectExtension::ArgList args QVariant enclosure enclosingObject enclosure canConvert Object releaseValue enclosure Object enclosureObj enclosure value Object host isScriptLanguageSupported ECMAScript releaseValue enclosure QString script script sprintf event toLatin1 constData LiveConnectExtension::ArgList::const_iterator i args begin LiveConnectExtension::ArgList::const_iterator argsBegin i LiveConnectExtension::ArgList::const_iterator argsEnd args end i argsEnd i i argsBegin script QLatin1Char first KParts::LiveConnectExtension::TypeString script QLatin1Char QString second replace QLatin1Char QStringLiteral replace QLatin1Char QStringLiteral QLatin1Char script second script QLatin1Char QVariant result host evaluateScript enclosureObj objId script releaseValue result releaseValue enclosure qHash KParts::ScriptableExtension::Object o uint seed qHash qMakePair o owner o objId seed qHash KParts::ScriptableExtension::FunctionRef f qHash qMakePair f base f field</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.h</field>
    <field name="url">scriptableextension_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts ScriptableExtension ScriptableExtensionPrivate LiveConnectExtension</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.h</field>
    <field name="url">scriptableextension_8h_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT ScriptableExtension QObject Q_OBJECT Null</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.h</field>
    <field name="url">scriptableextension_8h_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">Undefined</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.h</field>
    <field name="url">scriptableextension_8h_source.html#l00070</field>
    <field name="keywords"></field>
    <field name="text">Exception</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.h</field>
    <field name="url">scriptableextension_8h_source.html#l00074</field>
    <field name="keywords"></field>
    <field name="text">QString message Exception Exception QString msg message msg</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.h</field>
    <field name="url">scriptableextension_8h_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text">Object ScriptableExtension owner quint64 objId Object owner objId Object ScriptableExtension o quint64 owner o objId operator== Object other owner other owner objId other objId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.h</field>
    <field name="url">scriptableextension_8h_source.html#l00109</field>
    <field name="keywords"></field>
    <field name="text">FunctionRef Object base QString field FunctionRef FunctionRef Object b QString f base b field f operator== FunctionRef other base other base field other field ScriptableExtension QObject parent ScriptableExtension ScriptableExtension childObject QObject obj ScriptableExtension adapterFromLiveConnect QObject parentObj LiveConnectExtension oldApi setHost ScriptableExtension host ScriptableExtension host QVariant rootObject QVariant enclosingObject QList&lt;QVariant&gt; ArgList QVariant callAsFunction ScriptableExtension callerPrincipal quint64 objId ArgList args QVariant callFunctionReference ScriptableExtension callerPrincipal quint64 objId QString f ArgList args QVariant callAsConstructor ScriptableExtension callerPrincipal quint64 objId ArgList args hasProperty ScriptableExtension callerPrincipal quint64 objId QString propName QVariant ScriptableExtension callerPrincipal quint64 objId QString propName put ScriptableExtension callerPrincipal quint64 objId QString propName QVariant value removeProperty ScriptableExtension callerPrincipal quint64 objId QString propName enumerateProperties ScriptableExtension callerPrincipal quint64 objId QStringList result setException ScriptableExtension callerPrincipal QString message</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.h</field>
    <field name="url">scriptableextension_8h_source.html#l00252</field>
    <field name="keywords"></field>
    <field name="text">ScriptLanguage ECMAScript</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">scriptableextension.h</field>
    <field name="url">scriptableextension_8h_source.html#l00254</field>
    <field name="keywords"></field>
    <field name="text">EnumLimit QVariant evaluateScript ScriptableExtension callerPrincipal quint64 contextObjectId QString code ScriptLanguage language ECMAScript isScriptLanguageSupported ScriptLanguage lang acquire quint64 objid QVariant acquireValue QVariant v release quint64 objid QVariant releaseValue QVariant v QVariant encloserForKid KParts::ScriptableExtension kid ScriptableExtensionPrivate d KPARTS_EXPORT qHash KParts::ScriptableExtension::Object o uint seed KPARTS_EXPORT qHash KParts::ScriptableExtension::FunctionRef f Q_DECLARE_METATYPE KParts::ScriptableExtension::Null Q_DECLARE_METATYPE KParts::ScriptableExtension::Undefined Q_DECLARE_METATYPE KParts::ScriptableExtension::Exception Q_DECLARE_METATYPE KParts::ScriptableExtension::Object Q_DECLARE_METATYPE KParts::ScriptableExtension::FunctionRef</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">selectorinterface.cpp</field>
    <field name="url">selectorinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">selectorinterface.cpp</field>
    <field name="url">selectorinterface_8cpp_source.html#l00027</field>
    <field name="keywords"></field>
    <field name="text">SelectorInterface::QueryMethods SelectorInterface::supportedQueryMethods KParts::SelectorInterface::None SelectorInterface::ElementPrivate QSharedData QString tag QHash&lt;QString, QString&gt; attributes SelectorInterface::Element::Element d ElementPrivate SelectorInterface::Element::Element SelectorInterface::Element other d other d SelectorInterface::Element::~Element SelectorInterface::Element::isNull d tag isNull SelectorInterface::Element::setTagName QString tag d tag tag QString SelectorInterface::Element::tagName d tag SelectorInterface::Element::setAttribute QString name QString value d attributes name value QStringList SelectorInterface::Element::attributeNames d attributes keys QString SelectorInterface::Element::attribute QString name QString defaultValue d attributes value name defaultValue SelectorInterface::Element::hasAttribute QString name d attributes contains name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">selectorinterface.h</field>
    <field name="url">selectorinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QString QStringList QList KParts</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">selectorinterface.h</field>
    <field name="url">selectorinterface_8h_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT SelectorInterface ElementPrivate Element</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">selectorinterface.h</field>
    <field name="url">selectorinterface_8h_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">QueryMethod</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">selectorinterface.h</field>
    <field name="url">selectorinterface_8h_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">None</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">selectorinterface.h</field>
    <field name="url">selectorinterface_8h_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">EntireContent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">selectorinterface.h</field>
    <field name="url">selectorinterface_8h_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">SelectedContent Q_DECLARE_FLAGS QueryMethods QueryMethod</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">selectorinterface.h</field>
    <field name="url">selectorinterface_8h_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">virtual SelectorInterface QueryMethods supportedQueryMethods Element querySelector QString query QueryMethod method QList&lt;Element&gt; querySelectorAll QString query QueryMethod method KPARTS_EXPORT Element Element Element Element other Element isNull setTagName QString tag QString tagName setAttribute QString name QString value QStringList attributeNames QString attribute QString name QString defaultValue QString hasAttribute QString name swap Element other d swap other d Element operator= Element other other Element copy other swap copy QSharedDataPointer&lt;ElementPrivate&gt; d qSwap KParts::SelectorInterface::Element lhs KParts::SelectorInterface::Element rhs lhs swap rhs Q_DECLARE_OPERATORS_FOR_FLAGS KParts::SelectorInterface::QueryMethods Q_DECLARE_TYPEINFO KParts::SelectorInterface::Element Q_MOVABLE_TYPE Q_DECLARE_INTERFACE KParts::SelectorInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">statusbarextension.cpp</field>
    <field name="url">statusbarextension_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts KParts::StatusBarItem StatusBarItem m_widget m_visible false StatusBarItem QWidget widget stretch permanent m_widget widget m_stretch stretch m_permanent permanent m_visible false QWidget widget m_widget ensureItemShown QStatusBar sb m_widget m_visible m_permanent sb addPermanentWidget m_widget m_stretch sb addWidget m_widget m_stretch m_visible m_widget show ensureItemHidden QStatusBar sb m_widget m_visible sb removeWidget m_widget m_visible m_widget hide QPointer&lt;QWidget&gt; m_widget m_stretch m_permanent m_visible KParts::StatusBarExtensionPrivate StatusBarExtensionPrivate StatusBarExtension q q q m_statusBar m_activated true StatusBarExtension q QList&lt;StatusBarItem&gt; m_statusBarItems QStatusBar m_statusBar m_activated StatusBarExtension::StatusBarExtension KParts::ReadOnlyPart parent QObject parent d new StatusBarExtensionPrivate this parent installEventFilter StatusBarExtension::~StatusBarExtension QStatusBar sb d m_statusBar i d m_statusBarItems count i i d m_statusBarItems i widget sb d m_statusBarItems i ensureItemHidden sb d m_statusBarItems i widget deleteLater d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">statusbarextension.cpp</field>
    <field name="url">statusbarextension_8cpp_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text">StatusBarExtension StatusBarExtension::childObject QObject obj obj findChild KParts::StatusBarExtension QString Qt::FindDirectChildrenOnly</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">statusbarextension.cpp</field>
    <field name="url">statusbarextension_8cpp_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text">StatusBarExtension::eventFilter QObject watched QEvent ev GUIActivateEvent::test ev qobject_cast&lt;KParts::ReadOnlyPart *&gt; watched QObject::eventFilter watched ev QStatusBar sb statusBar sb QObject::eventFilter watched ev GUIActivateEvent gae GUIActivateEvent ev d m_activated gae activated d m_activated QList&lt;StatusBarItem&gt;::iterator it d m_statusBarItems begin it d m_statusBarItems end it ensureItemShown sb QList&lt;StatusBarItem&gt;::iterator it d m_statusBarItems begin it d m_statusBarItems end it ensureItemHidden sb</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">statusbarextension.cpp</field>
    <field name="url">statusbarextension_8cpp_source.html#l00154</field>
    <field name="keywords"></field>
    <field name="text">QStatusBar StatusBarExtension::statusBar d m_statusBar KParts::ReadOnlyPart part qobject_cast KParts::ReadOnlyPart parent QWidget w part part widget KMainWindow mw w qobject_cast KMainWindow w topLevelWidget mw d m_statusBar mw statusBar d m_statusBar</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">statusbarextension.cpp</field>
    <field name="url">statusbarextension_8cpp_source.html#l00167</field>
    <field name="keywords"></field>
    <field name="text">StatusBarExtension::setStatusBar QStatusBar status d m_statusBar status</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">statusbarextension.cpp</field>
    <field name="url">statusbarextension_8cpp_source.html#l00172</field>
    <field name="keywords"></field>
    <field name="text">StatusBarExtension::addStatusBarItem QWidget widget stretch permanent d m_statusBarItems append StatusBarItem widget stretch permanent StatusBarItem it d m_statusBarItems last QStatusBar sb statusBar sb d m_activated it ensureItemShown sb</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">statusbarextension.cpp</field>
    <field name="url">statusbarextension_8cpp_source.html#l00182</field>
    <field name="keywords"></field>
    <field name="text">StatusBarExtension::removeStatusBarItem QWidget widget QStatusBar sb statusBar QList&lt;StatusBarItem&gt;::iterator it d m_statusBarItems begin it d m_statusBarItems end it widget widget sb ensureItemHidden sb d m_statusBarItems erase it qWarning widget</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">statusbarextension.h</field>
    <field name="url">statusbarextension_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QStatusBar KMainWindow QEvent KParts ReadOnlyPart StatusBarItem StatusBarExtensionPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">statusbarextension.h</field>
    <field name="url">statusbarextension_8h_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT StatusBarExtension QObject Q_OBJECT StatusBarExtension KParts::ReadOnlyPart parent StatusBarExtension addStatusBarItem QWidget widget stretch permanent removeStatusBarItem QWidget widget QStatusBar statusBar setStatusBar QStatusBar status StatusBarExtension childObject QObject obj eventFilter QObject watched QEvent ev Q_DECL_OVERRIDE StatusBarExtensionPrivate StatusBarExtensionPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">textextension.cpp</field>
    <field name="url">textextension_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts::TextExtension::TextExtension KParts::ReadOnlyPart parent QObject parent d KParts::TextExtension::~TextExtension</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">textextension.cpp</field>
    <field name="url">textextension_8cpp_source.html#l00033</field>
    <field name="keywords"></field>
    <field name="text">KParts::TextExtension::hasSelection</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">textextension.cpp</field>
    <field name="url">textextension_8cpp_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">QString KParts::TextExtension::selectedText Format QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">textextension.cpp</field>
    <field name="url">textextension_8cpp_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">QString KParts::TextExtension::completeText Format QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">textextension.cpp</field>
    <field name="url">textextension_8cpp_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">KParts::TextExtension KParts::TextExtension::childObject QObject obj obj findChild KParts::TextExtension QString Qt::FindDirectChildrenOnly</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">textextension.cpp</field>
    <field name="url">textextension_8cpp_source.html#l00053</field>
    <field name="keywords"></field>
    <field name="text">KParts::TextExtension::pageCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">textextension.cpp</field>
    <field name="url">textextension_8cpp_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">KParts::TextExtension::currentPage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">textextension.cpp</field>
    <field name="url">textextension_8cpp_source.html#l00063</field>
    <field name="keywords"></field>
    <field name="text">QString KParts::TextExtension::pageText Format QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">textextension.cpp</field>
    <field name="url">textextension_8cpp_source.html#l00068</field>
    <field name="keywords"></field>
    <field name="text">KParts::TextExtension::findText QString KFind::SearchOptions</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">textextension.h</field>
    <field name="url">textextension_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts ReadOnlyPart TextExtensionPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">textextension.h</field>
    <field name="url">textextension_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT TextExtension QObject Q_OBJECT TextExtension KParts::ReadOnlyPart parent TextExtension TextExtension childObject QObject obj Format PlainText HTML hasSelection QString selectedText Format format QString completeText Format format pageCount currentPage QString pageText Format format findText QString KFind::SearchOptions options Q_SIGNALS selectionChanged TextExtensionPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">windowargs.cpp</field>
    <field name="url">windowargs_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts KParts WindowArgsPrivate QSharedData WindowArgsPrivate x y width height fullscreen false menuBarVisible true toolBarsVisible true statusBarVisible true resizable true lowerWindow false scrollBarsVisible true x y width height fullscreen menuBarVisible toolBarsVisible statusBarVisible resizable lowerWindow scrollBarsVisible WindowArgs::WindowArgs d new WindowArgsPrivate WindowArgs::WindowArgs WindowArgs args d args d WindowArgs::~WindowArgs WindowArgs WindowArgs::operator= WindowArgs args args d args d WindowArgs::WindowArgs QRect _geometry _fullscreen _menuBarVisible _toolBarsVisible _statusBarVisible _resizable d new WindowArgsPrivate d x _geometry x d y _geometry y d width _geometry width d height _geometry height d fullscreen _fullscreen d menuBarVisible _menuBarVisible d toolBarsVisible _toolBarsVisible d statusBarVisible _statusBarVisible d resizable _resizable d lowerWindow WindowArgs::WindowArgs _x _y _width _height _fullscreen _menuBarVisible _toolBarsVisible _statusBarVisible _resizable d new WindowArgsPrivate d x _x d y _y d width _width d height _height d fullscreen _fullscreen d menuBarVisible _menuBarVisible d toolBarsVisible _toolBarsVisible d statusBarVisible _statusBarVisible d resizable _resizable d lowerWindow WindowArgs::setX x d x x WindowArgs::x d x WindowArgs::setY y d y y WindowArgs::y d y WindowArgs::setWidth w d width w WindowArgs::width d width WindowArgs::setHeight h d height h WindowArgs::height d height WindowArgs::setFullScreen fs d fullscreen fs WindowArgs::isFullScreen d fullscreen WindowArgs::setMenuBarVisible visible d menuBarVisible visible WindowArgs::isMenuBarVisible d menuBarVisible WindowArgs::setToolBarsVisible visible d toolBarsVisible visible WindowArgs::toolBarsVisible d toolBarsVisible WindowArgs::setStatusBarVisible visible d statusBarVisible visible WindowArgs::isStatusBarVisible d statusBarVisible WindowArgs::setResizable resizable d resizable resizable WindowArgs::isResizable d resizable WindowArgs::setLowerWindow lower d lowerWindow lower WindowArgs::lowerWindow d lowerWindow WindowArgs::setScrollBarsVisible visible d scrollBarsVisible visible WindowArgs::scrollBarsVisible d scrollBarsVisible</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">windowargs.h</field>
    <field name="url">windowargs_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QRect KParts WindowArgsPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">windowargs.h</field>
    <field name="url">windowargs_8h_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">KPARTS_EXPORT WindowArgs WindowArgs WindowArgs WindowArgs WindowArgs args WindowArgs operator= WindowArgs args WindowArgs QRect _geometry _fullscreen _menuBarVisible _toolBarsVisible _statusBarVisible _resizable WindowArgs _x _y _width _height _fullscreen _menuBarVisible _toolBarsVisible _statusBarVisible _resizable setX x x setY y y setWidth w width setHeight h height setFullScreen fs isFullScreen setMenuBarVisible visible isMenuBarVisible setToolBarsVisible visible toolBarsVisible setStatusBarVisible visible isStatusBarVisible setResizable resizable isResizable setLowerWindow lower lowerWindow setScrollBarsVisible visible scrollBarsVisible QSharedDataPointer&lt;WindowArgsPrivate&gt; d</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">deprecated</field>
    <field name="url">deprecated.html</field>
    <field name="keywords"></field>
    <field name="text">Deprecated List Member KParts BrowserRun askEmbedOrSave const QUrl url const QString mimeType const QString suggestedFileName QString() int flags 0 use BrowserOpenOrSaveQuestion Member KParts BrowserRun askSave const QUrl url KService::Ptr offer const QString mimeType const QString suggestedFileName QString() use BrowserOpenOrSaveQuestion</field>
  </doc>
  <doc>
    <field name="type">group</field>
    <field name="name">ScriptValueTypes</field>
    <field name="url">group__ScriptValueTypes.html</field>
    <field name="keywords">Script Value Types</field>
    <field name="text">Valid values may be bools strings and numbers doubles as well as the following custom types Null Undefined Exception Object FunctionRef</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">TerminalInterface</field>
    <field name="url">classTerminalInterface.html</field>
    <field name="keywords">TerminalInterface</field>
    <field name="text">Note that besides the functions below here KonsolePart also has some signals you can connect to They aren t in this class cause we can t have signals without having a QObject which TerminalInterface is not These are some signals you can connect to void currentDirectoryChanged(const QString&amp; dir) See the example code below for how to connect to these Use it like this Dominique Devriese</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TerminalInterface::currentWorkingDirectory</field>
    <field name="args">() const =0</field>
    <field name="url">classTerminalInterface.html#a4775cd3ccd734e5ef48c27e1b0cded64</field>
    <field name="keywords">currentWorkingDirectory TerminalInterface::currentWorkingDirectory TerminalInterface</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TerminalInterface::foregroundProcessId</field>
    <field name="args">()=0</field>
    <field name="url">classTerminalInterface.html#aedcb8529e693a68a282dc8a7126b2dee</field>
    <field name="keywords">foregroundProcessId TerminalInterface::foregroundProcessId TerminalInterface</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TerminalInterface::foregroundProcessName</field>
    <field name="args">()=0</field>
    <field name="url">classTerminalInterface.html#a932165af76970452b2be58047fb94447</field>
    <field name="keywords">foregroundProcessName TerminalInterface::foregroundProcessName TerminalInterface</field>
    <field name="text">If there is no sub process running returns empty QString</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TerminalInterface::sendInput</field>
    <field name="args">(const QString &amp;text)=0</field>
    <field name="url">classTerminalInterface.html#a9a2a04525883f6be174592228c6a0e4e</field>
    <field name="keywords">sendInput TerminalInterface::sendInput TerminalInterface</field>
    <field name="text">text as input to the currently running program</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TerminalInterface::startProgram</field>
    <field name="args">(const QString &amp;program, const QStringList &amp;args)=0</field>
    <field name="url">classTerminalInterface.html#a1bd7a01c2c2dabd5a7cc7f653b5fe083</field>
    <field name="keywords">startProgram TerminalInterface::startProgram TerminalInterface</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">TerminalInterface::terminalProcessId</field>
    <field name="args">()=0</field>
    <field name="url">classTerminalInterface.html#a986adf37e119c722520c9a57e2d99d87</field>
    <field name="keywords">terminalProcessId TerminalInterface::terminalProcessId TerminalInterface</field>
    <field name="text">If no process is currently running returns 0</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">KParts::BrowserArguments</field>
    <field name="url">structKParts_1_1BrowserArguments.html</field>
    <field name="keywords">BrowserArguments</field>
    <field name="text">The arguments remain stored in the browser extension after that and can be used for instance to jump to the xOffset/yOffset position once the url has finished loading The parts with a browser extension who care about urlargs will use those arguments others will ignore them This can also be used the other way round when a part asks for a URL to be opened with openUrlRequest or createNewWindow</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserArguments::contentType</field>
    <field name="args">() const</field>
    <field name="url">structKParts_1_1BrowserArguments.html#a4d79e549dbfbbb7fd0b28a2786aaaf0c</field>
    <field name="keywords">contentType KParts::BrowserArguments::contentType KParts::BrowserArguments</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserArguments::doPost</field>
    <field name="args">() const</field>
    <field name="url">structKParts_1_1BrowserArguments.html#af19877a7c56a87a9e5ff46499f9bfcb8</field>
    <field name="keywords">doPost KParts::BrowserArguments::doPost KParts::BrowserArguments</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserArguments::forcesNewWindow</field>
    <field name="args">() const</field>
    <field name="url">structKParts_1_1BrowserArguments.html#a29be5b609b5a704dbeab5fd58c45b667</field>
    <field name="keywords">forcesNewWindow KParts::BrowserArguments::forcesNewWindow KParts::BrowserArguments</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserArguments::redirectedRequest</field>
    <field name="args">() const</field>
    <field name="url">structKParts_1_1BrowserArguments.html#a221b56f8b39906d12dc9d9cdc7bcaf6a</field>
    <field name="keywords">redirectedRequest KParts::BrowserArguments::redirectedRequest KParts::BrowserArguments</field>
    <field name="text">true if the request was a result of a META refresh/redirect request or HTTP redirect</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserArguments::setContentType</field>
    <field name="args">(const QString &amp;contentType)</field>
    <field name="url">structKParts_1_1BrowserArguments.html#aa5a45039269323c861805dcbb40db5bd</field>
    <field name="keywords">setContentType KParts::BrowserArguments::setContentType KParts::BrowserArguments</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserArguments::setDoPost</field>
    <field name="args">(bool enable)</field>
    <field name="url">structKParts_1_1BrowserArguments.html#a31900428f566238a35f2d667835921e0</field>
    <field name="keywords">setDoPost KParts::BrowserArguments::setDoPost KParts::BrowserArguments</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserArguments::setForcesNewWindow</field>
    <field name="args">(bool forcesNewWindow)</field>
    <field name="url">structKParts_1_1BrowserArguments.html#a893eaea4409d7cb1424e12b581dad729</field>
    <field name="keywords">setForcesNewWindow KParts::BrowserArguments::setForcesNewWindow KParts::BrowserArguments</field>
    <field name="text">When openUrlRequest is emitted normally the url would be opened in the current view setForcesNewWindow(true) specifies that a new window or tab should be used setNewTab(true) requests a tab specifically otherwise the user-preference is followed This is typically used for target in web browsers When createNewWindow is emitted if setNewTab(true) was called a tab is created otherwise if setForcesNewWindow(true) was called a window is created otherwise the user preference is followed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserArguments::setLockHistory</field>
    <field name="args">(bool lock)</field>
    <field name="url">structKParts_1_1BrowserArguments.html#a01996b915ecb07d67258dc31f0dfca8e</field>
    <field name="keywords">setLockHistory KParts::BrowserArguments::setLockHistory KParts::BrowserArguments</field>
    <field name="text">This is used during e.g a redirection to avoid a new entry in the history</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserArguments::setNewTab</field>
    <field name="args">(bool newTab)</field>
    <field name="url">structKParts_1_1BrowserArguments.html#a618f6fe19f6e4a776a0f1f2168ab366d</field>
    <field name="keywords">setNewTab KParts::BrowserArguments::setNewTab KParts::BrowserArguments</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserArguments::setRedirectedRequest</field>
    <field name="args">(bool redirected)</field>
    <field name="url">structKParts_1_1BrowserArguments.html#a958ee61094423cb514dd749f5d079a61</field>
    <field name="keywords">setRedirectedRequest KParts::BrowserArguments::setRedirectedRequest KParts::BrowserArguments</field>
    <field name="text">redirected</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">KParts::BrowserArguments::docState</field>
    <field name="url">structKParts_1_1BrowserArguments.html#a76aed0d1e923b73db918038d23f524ec</field>
    <field name="keywords">docState KParts::BrowserArguments::docState KParts::BrowserArguments</field>
    <field name="text">See KHTMLPart for instance</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">KParts::BrowserArguments::frameName</field>
    <field name="url">structKParts_1_1BrowserArguments.html#ad8b767db0ac78790860f4f0cbef64ea2</field>
    <field name="keywords">frameName KParts::BrowserArguments::frameName KParts::BrowserArguments</field>
    <field name="text">KHTML/Konqueror-specific</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">KParts::BrowserArguments::postData</field>
    <field name="url">structKParts_1_1BrowserArguments.html#a9c1fb6cb602a10fec4ca05a25f1b9ac6</field>
    <field name="keywords">postData KParts::BrowserArguments::postData KParts::BrowserArguments</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">KParts::BrowserArguments::softReload</field>
    <field name="url">structKParts_1_1BrowserArguments.html#af06b08da058cd6fc19ad42e2904e2594</field>
    <field name="keywords">softReload KParts::BrowserArguments::softReload KParts::BrowserArguments</field>
    <field name="text">It s used currently for two different frameset reload strategies In case of soft reload individual frames are reloaded instead of reloading whole frameset</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">KParts::BrowserArguments::trustedSource</field>
    <field name="url">structKParts_1_1BrowserArguments.html#aa9e31eabaee6af2692319d21721fc9cb</field>
    <field name="keywords">trustedSource KParts::BrowserArguments::trustedSource KParts::BrowserArguments</field>
    <field name="text">For instance the directory views can be trusted whereas HTML pages are not trusted in that respect</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::BrowserExtension</field>
    <field name="url">classKParts_1_1BrowserExtension.html</field>
    <field name="keywords">BrowserExtension</field>
    <field name="text">Remember that ReadOnlyPart only has openUrl(QUrl) and a few arguments() but not much more For full-fledged browsing we need much more than that including enabling/disabling of standard actions print copy paste allowing parts to save and restore their data into the back/forward history allowing parts to control the location bar URL to requests URLs to be opened by the hosting browser etc The part developer needs to define its own class derived from BrowserExtension to implement the virtual methods and the standard-actions slots see below The way to associate the BrowserExtension with the part is to simply create the BrowserExtension as a child of the part in QObject s terms The hosting application will look for it automatically Another aspect of the browser integration is that a set of standard actions are provided by the browser but implemented by the part for the actions it supports The following standard actions are defined by the host of the view selection-dependent actions cut Copy selected items to clipboard and store not cut in clipboard copy Copy selected items to clipboard and store cut in clipboard paste Paste clipboard into view URL pasteTo(const QUrl &amp;) Paste clipboard into given URL searchProvider Lookup selected text at default search provider normal actions None anymore The view defines a slot with the name of the action in order to implement the action The browser will detect the slot automatically and connect its action to it when appropriate i.e when the view is active The selection-dependent actions are disabled by default and the view should enable them when the selection changes emitting enableAction() The normal actions do not depend on the selection A special case is the configuration slots not connected to any action directly configuration slot reparseConfiguration Re-read configuration and apply it disableScrolling no scrollbars</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">KParts::BrowserExtension::ActionGroupMap</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a73ab162c395443c0227946524a8ee04c</field>
    <field name="keywords">ActionGroupMap KParts::BrowserExtension::ActionGroupMap KParts::BrowserExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::BrowserExtension::PopupFlag</field>
    <field name="url">classKParts_1_1BrowserExtension.html#ae5b9acf92e7d83faf5142597371ef1e3</field>
    <field name="keywords">PopupFlag KParts::BrowserExtension::PopupFlag KParts::BrowserExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::BrowserExtension::DefaultPopupItems</field>
    <field name="url">classKParts_1_1BrowserExtension.html#ae5b9acf92e7d83faf5142597371ef1e3a59ee58fca9e8b900d617c4f232b497f7</field>
    <field name="keywords">DefaultPopupItems KParts::BrowserExtension::DefaultPopupItems KParts::BrowserExtension</field>
    <field name="text">default value no additional menu item</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::BrowserExtension::ShowNavigationItems</field>
    <field name="url">classKParts_1_1BrowserExtension.html#ae5b9acf92e7d83faf5142597371ef1e3a05faf3d46fca9da3a396d72c993eec5c</field>
    <field name="keywords">ShowNavigationItems KParts::BrowserExtension::ShowNavigationItems KParts::BrowserExtension</field>
    <field name="text">show and usually done when clicking the background of the view but not an item</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::BrowserExtension::ShowUp</field>
    <field name="url">classKParts_1_1BrowserExtension.html#ae5b9acf92e7d83faf5142597371ef1e3af6030e3884ded53eace393f2af510c68</field>
    <field name="keywords">ShowUp KParts::BrowserExtension::ShowUp KParts::BrowserExtension</field>
    <field name="text">show same thing but not over e.g HTTP Requires ShowNavigationItems</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::BrowserExtension::ShowReload</field>
    <field name="url">classKParts_1_1BrowserExtension.html#ae5b9acf92e7d83faf5142597371ef1e3a97cbb12bbef8ef52b233c24d0bf3e41e</field>
    <field name="keywords">ShowReload KParts::BrowserExtension::ShowReload KParts::BrowserExtension</field>
    <field name="text">show usually done when clicking the background of the view but not an item</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::BrowserExtension::ShowBookmark</field>
    <field name="url">classKParts_1_1BrowserExtension.html#ae5b9acf92e7d83faf5142597371ef1e3ac6c783f725ac9fe594d0b563495feb64</field>
    <field name="keywords">ShowBookmark KParts::BrowserExtension::ShowBookmark KParts::BrowserExtension</field>
    <field name="text">show usually not done on the local filesystem</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::BrowserExtension::ShowCreateDirectory</field>
    <field name="url">classKParts_1_1BrowserExtension.html#ae5b9acf92e7d83faf5142597371ef1e3a152988520c15f75baddf48de43c9092a</field>
    <field name="keywords">ShowCreateDirectory KParts::BrowserExtension::ShowCreateDirectory KParts::BrowserExtension</field>
    <field name="text">show usually only done on the background of the view or in hierarchical views like directory trees where the new dir would be visible</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::BrowserExtension::ShowTextSelectionItems</field>
    <field name="url">classKParts_1_1BrowserExtension.html#ae5b9acf92e7d83faf5142597371ef1e3a947c452c66b8c500ac2ce303451d68c4</field>
    <field name="keywords">ShowTextSelectionItems KParts::BrowserExtension::ShowTextSelectionItems KParts::BrowserExtension</field>
    <field name="text">set when selecting text for a popup that only contains text-related items</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::BrowserExtension::NoDeletion</field>
    <field name="url">classKParts_1_1BrowserExtension.html#ae5b9acf92e7d83faf5142597371ef1e3a2332ecaf86d9179ba1ba92b9b3b10463</field>
    <field name="keywords">NoDeletion KParts::BrowserExtension::NoDeletion KParts::BrowserExtension</field>
    <field name="text">deletion trashing and renaming not allowed e.g parent dir not writeable this is only needed if the protocol itself supports deletion unlike e.g HTTP</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::BrowserExtension::IsLink</field>
    <field name="url">classKParts_1_1BrowserExtension.html#ae5b9acf92e7d83faf5142597371ef1e3a0521ef0fcccfba841ae8c5ae373f8976</field>
    <field name="keywords">IsLink KParts::BrowserExtension::IsLink KParts::BrowserExtension</field>
    <field name="text">show and other link-related actions linkactions merging group</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::BrowserExtension::ShowUrlOperations</field>
    <field name="url">classKParts_1_1BrowserExtension.html#ae5b9acf92e7d83faf5142597371ef1e3a40232b7894e5aa48029559354b84aeb5</field>
    <field name="keywords">ShowUrlOperations KParts::BrowserExtension::ShowUrlOperations KParts::BrowserExtension</field>
    <field name="text">show copy paste as well as cut if NoDeletion is not set</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::BrowserExtension::ShowProperties</field>
    <field name="url">classKParts_1_1BrowserExtension.html#ae5b9acf92e7d83faf5142597371ef1e3a12a41a796fe0be4f8411259b7a77920d</field>
    <field name="keywords">ShowProperties KParts::BrowserExtension::ShowProperties KParts::BrowserExtension</field>
    <field name="text">show action usually done by directory views</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::addWebSideBar</field>
    <field name="args">(const QUrl &amp;url, const QString &amp;name)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a781dba34df4a81ca0027363b08a4ab27</field>
    <field name="keywords">addWebSideBar KParts::BrowserExtension::addWebSideBar KParts::BrowserExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::createNewWindow</field>
    <field name="args">(const QUrl &amp;url, const KParts::OpenUrlArguments &amp;arguments=KParts::OpenUrlArguments(), const KParts::BrowserArguments &amp;browserArguments=KParts::BrowserArguments(), const KParts::WindowArgs &amp;windowArgs=KParts::WindowArgs(), KParts::ReadOnlyPart **part=0)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#ad6ca2903f3c5ba4cd8db5f18cc47a800</field>
    <field name="keywords">createNewWindow KParts::BrowserExtension::createNewWindow KParts::BrowserExtension</field>
    <field name="text">arguments is optional additional information about how to open the url KParts::OpenUrlArguments browserArguments is optional additional information for web browsers KParts::BrowserArguments The request for a pointer to the part is only fulfilled/processed if the mimeType is set in the browserArguments otherwise the request cannot be processed synchronously</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::enableAction</field>
    <field name="args">(const char *name, bool enabled)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a3252f2adebd103519ee15e57037c7386</field>
    <field name="keywords">enableAction KParts::BrowserExtension::enableAction KParts::BrowserExtension</field>
    <field name="text">See class documentation for the list of standard actions</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::itemsRemoved</field>
    <field name="args">(const KFileItemList &amp;items)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#ab52eaff5194bfec9aeff1e346f94d757</field>
    <field name="keywords">itemsRemoved KParts::BrowserExtension::itemsRemoved KParts::BrowserExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::loadingProgress</field>
    <field name="args">(int percent)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a347035c05f6d6064f18ee656d61faed7</field>
    <field name="keywords">loadingProgress KParts::BrowserExtension::loadingProgress KParts::BrowserExtension</field>
    <field name="text">However if you don t use a KIO::Job in the part you can use loadingProgress() and speedProgress() to display progress information</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::mouseOverInfo</field>
    <field name="args">(const KFileItem &amp;item)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#abc6b8cdb9134eadcf817a3a9dea4c898</field>
    <field name="keywords">mouseOverInfo KParts::BrowserExtension::mouseOverInfo KParts::BrowserExtension</field>
    <field name="text">Used when the mouse is on an URL</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::moveTopLevelWidget</field>
    <field name="args">(int x, int y)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#aad5b1ddfb7313a8cf23a791fde7ec336</field>
    <field name="keywords">moveTopLevelWidget KParts::BrowserExtension::moveTopLevelWidget KParts::BrowserExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::openUrlNotify</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a06b1ae0f0712677310ff7bc0b31b376a</field>
    <field name="keywords">openUrlNotify KParts::BrowserExtension::openUrlNotify KParts::BrowserExtension</field>
    <field name="text">This helps the browser to update/create an entry in the history The part may not emit this signal together with openUrlRequest() Emit openUrlRequest() if you want the browser to handle a URL the user asked to open from within your part/document This signal however is useful if you want to handle URLs all yourself internally while still telling the hosting browser about new opened URLs in order to provide a proper history functionality to the user An example of usage is a html rendering component which wants to emit this signal when a child frame document changed its URL Conclusion you probably want to use openUrlRequest() instead</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::openUrlRequest</field>
    <field name="args">(const QUrl &amp;url, const KParts::OpenUrlArguments &amp;arguments=KParts::OpenUrlArguments(), const KParts::BrowserArguments &amp;browserArguments=KParts::BrowserArguments())</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a8d8c22399daa85b3dd9750d89931938a</field>
    <field name="keywords">openUrlRequest KParts::BrowserExtension::openUrlRequest KParts::BrowserExtension</field>
    <field name="text">To set a reload the x and y offsets the service type etc fill in the appropriate fields in the args structure Hosts should not connect to this signal but to openUrlRequestDelayed()</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::openUrlRequestDelayed</field>
    <field name="args">(const QUrl &amp;url, const KParts::OpenUrlArguments &amp;arguments, const KParts::BrowserArguments &amp;browserArguments)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a1b3216fc78b96cb42e511f7a2b095c93</field>
    <field name="keywords">openUrlRequestDelayed KParts::BrowserExtension::openUrlRequestDelayed KParts::BrowserExtension</field>
    <field name="text">This allows the caller to terminate what it s doing first before usually being destroyed Parts should never use this signal hosts should only connect to this signal</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::popupMenu</field>
    <field name="args">(const QPoint &amp;global, const KFileItemList &amp;items, const KParts::OpenUrlArguments &amp;args=KParts::OpenUrlArguments(), const KParts::BrowserArguments &amp;browserArgs=KParts::BrowserArguments(), KParts::BrowserExtension::PopupFlags flags=KParts::BrowserExtension::DefaultPopupItems, const KParts::BrowserExtension::ActionGroupMap &amp;actionGroups=ActionGroupMap())</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a97f2ed6d4318555095512275f6988484</field>
    <field name="keywords">popupMenu KParts::BrowserExtension::popupMenu KParts::BrowserExtension</field>
    <field name="text">global global coordinates where the popup should be shown items list of file items which the popup applies to args OpenUrlArguments mostly for metadata here browserArguments BrowserArguments mostly for referrer flags enables/disables certain builtin actions in the popupmenu actionGroups named groups of actions which should be inserted into the popup see ActionGroupMap</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::popupMenu</field>
    <field name="args">(const QPoint &amp;global, const QUrl &amp;url, mode_t mode=static_cast&lt; mode_t &gt;(-1), const KParts::OpenUrlArguments &amp;args=KParts::OpenUrlArguments(), const KParts::BrowserArguments &amp;browserArgs=KParts::BrowserArguments(), KParts::BrowserExtension::PopupFlags flags=KParts::BrowserExtension::DefaultPopupItems, const KParts::BrowserExtension::ActionGroupMap &amp;actionGroups=ActionGroupMap())</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a861d4f7490f2a8f15e48030d91904638</field>
    <field name="keywords">popupMenu KParts::BrowserExtension::popupMenu KParts::BrowserExtension</field>
    <field name="text">Give as much information about this URL as possible like args.mimeType and the file type mode global global coordinates where the popup should be shown url the URL this popup applies to mode the file type of the url S_IFREG S_IFDIR args OpenUrlArguments set the mimetype of the URL using setMimeType() browserArguments BrowserArguments mostly for referrer flags enables/disables certain builtin actions in the popupmenu actionGroups named groups of actions which should be inserted into the popup see ActionGroupMap</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::requestFocus</field>
    <field name="args">(KParts::ReadOnlyPart *part)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a8424167e31fd3c68e53cfd0aacb38934</field>
    <field name="keywords">requestFocus KParts::BrowserExtension::requestFocus KParts::BrowserExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::resizeTopLevelWidget</field>
    <field name="args">(int w, int h)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a5ac0475a4a7d3434326c96bfcff57006</field>
    <field name="keywords">resizeTopLevelWidget KParts::BrowserExtension::resizeTopLevelWidget KParts::BrowserExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::selectionInfo</field>
    <field name="args">(const KFileItemList &amp;items)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#aae2db786c70b458b433a2819ed2110fe</field>
    <field name="keywords">selectionInfo KParts::BrowserExtension::selectionInfo KParts::BrowserExtension</field>
    <field name="text">Used when a set of files/URLs is selected with full information about those URLs including size permissions etc</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::selectionInfo</field>
    <field name="args">(const QString &amp;text)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a5acae1ffb924f3791fd55900443c3bc0</field>
    <field name="keywords">selectionInfo KParts::BrowserExtension::selectionInfo KParts::BrowserExtension</field>
    <field name="text">Used when some text is selected</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::selectionInfo</field>
    <field name="args">(const QList&lt; QUrl &gt; &amp;urls)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a84365d8811f6bbb3210c6e12e2723e01</field>
    <field name="keywords">selectionInfo KParts::BrowserExtension::selectionInfo KParts::BrowserExtension</field>
    <field name="text">Used when a set of URLs is selected</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::setActionText</field>
    <field name="args">(const char *name, const QString &amp;text)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a73506e6a8b89d661512d4a6dfcfaabd5</field>
    <field name="keywords">setActionText KParts::BrowserExtension::setActionText KParts::BrowserExtension</field>
    <field name="text">This can be used to change into for instance See class documentation for the list of standard actions</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::setIconUrl</field>
    <field name="args">(const QUrl &amp;url)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a2ee4871e08049994f1ebdebece5a5ce0</field>
    <field name="keywords">setIconUrl KParts::BrowserExtension::setIconUrl KParts::BrowserExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::setLocationBarUrl</field>
    <field name="args">(const QString &amp;url)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a335b6f5c78db67e7b8d385eb313b8aef</field>
    <field name="keywords">setLocationBarUrl KParts::BrowserExtension::setLocationBarUrl KParts::BrowserExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::setPageSecurity</field>
    <field name="args">(int)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a7a352d71c9bcabd14a48efb589dd0957</field>
    <field name="keywords">setPageSecurity KParts::BrowserExtension::setPageSecurity KParts::BrowserExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::BrowserExtension::speedProgress</field>
    <field name="args">(int bytesPerSecond)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a51c00341228e2280d548e960b3d1fbe6</field>
    <field name="keywords">speedProgress KParts::BrowserExtension::speedProgress KParts::BrowserExtension</field>
    <field name="text">loadingProgress</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserExtension::BrowserExtension</field>
    <field name="args">(KParts::ReadOnlyPart *parent)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#ad99182108f25e08eff9c2475f926a7bd</field>
    <field name="keywords">BrowserExtension KParts::BrowserExtension::BrowserExtension KParts::BrowserExtension</field>
    <field name="text">parent The KParts::ReadOnlyPart that this extension</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserExtension::actionText</field>
    <field name="args">(const char *name) const</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a44d604ace2d77477df75444f203746ff</field>
    <field name="keywords">actionText KParts::BrowserExtension::actionText KParts::BrowserExtension</field>
    <field name="text">the text of an action if it was set explicitly by the part When the setActionText signal is emitted the browserextension stores the text of the action internally so that it s possible to query later for the text of the action using this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserExtension::browserArguments</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1BrowserExtension.html#ab88e6bc9a8b583dd697650854d13bb51</field>
    <field name="keywords">browserArguments KParts::BrowserExtension::browserArguments KParts::BrowserExtension</field>
    <field name="text">BrowserArguments</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserExtension::isActionEnabled</field>
    <field name="args">(const char *name) const</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a5d7ef0478ef2be2e492bb6b5231d7242</field>
    <field name="keywords">isActionEnabled KParts::BrowserExtension::isActionEnabled KParts::BrowserExtension</field>
    <field name="text">the status enabled/disabled of an action When the enableAction signal is emitted the browserextension stores the status of the action internally so that it s possible to query later for the status of the action using this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserExtension::isURLDropHandlingEnabled</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a7f0185bcf5408038e45f992ae48631be</field>
    <field name="keywords">isURLDropHandlingEnabled KParts::BrowserExtension::isURLDropHandlingEnabled KParts::BrowserExtension</field>
    <field name="text">See setURLDropHandlingEnabled for more information about this property</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserExtension::pasteRequest</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a159892e86904e0d8defd209d70a79c5b</field>
    <field name="keywords">pasteRequest KParts::BrowserExtension::pasteRequest KParts::BrowserExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserExtension::restoreState</field>
    <field name="args">(QDataStream &amp;stream)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#aa079a1969335549d2c20a3ce60ce4dfa</field>
    <field name="keywords">restoreState KParts::BrowserExtension::restoreState KParts::BrowserExtension</field>
    <field name="text">If you saved additional properties reimplement it but don t forget to call the parent method probably first</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserExtension::saveState</field>
    <field name="args">(QDataStream &amp;stream)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#afb99e279b186fc7af270cc9469991cba</field>
    <field name="keywords">saveState KParts::BrowserExtension::saveState KParts::BrowserExtension</field>
    <field name="text">If you want to save additional properties reimplement it but don t forget to call the parent method probably first</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserExtension::setBrowserArguments</field>
    <field name="args">(const BrowserArguments &amp;args)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a5dd8719a11279df48660a9e636869c5d</field>
    <field name="keywords">setBrowserArguments KParts::BrowserExtension::setBrowserArguments KParts::BrowserExtension</field>
    <field name="text">This is called by the application to pass parameters to the part BrowserArguments</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserExtension::setURLDropHandlingEnabled</field>
    <field name="args">(bool enable)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#afad1b992ba82e4f47fbb4ba6cdfcd1cb</field>
    <field name="keywords">setURLDropHandlingEnabled KParts::BrowserExtension::setURLDropHandlingEnabled KParts::BrowserExtension</field>
    <field name="text">URL drop handling is a property describing whether the hosting shell component is allowed to install an event filter on the part s widget to listen for URI drop events Set it to true if you are exporting a BrowserExtension implementation and do not provide any special URI drop handling If set to false you can be sure to receive all those URI drop events unfiltered Also note that the implementation as of Konqueror installs the event filter only on the part s widget itself not on child widgets</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserExtension::xOffset</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a1bd7c693e1aca9e07edeffc138cf267b</field>
    <field name="keywords">xOffset KParts::BrowserExtension::xOffset KParts::BrowserExtension</field>
    <field name="text">For a scrollview implement this using contentsX()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserExtension::yOffset</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1BrowserExtension.html#af1da24da659609c5c0c1e5f838d5b2d1</field>
    <field name="keywords">yOffset KParts::BrowserExtension::yOffset KParts::BrowserExtension</field>
    <field name="text">For a scrollview implement this using contentsY()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserExtension::actionSlotMap</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1BrowserExtension.html#aa758d6b4f47d16476b1f9faee387dd47</field>
    <field name="keywords">actionSlotMap KParts::BrowserExtension::actionSlotMap KParts::BrowserExtension</field>
    <field name="text">This is very useful for the host component when connecting the own signals with the extension s slots Basically you iterate over the map check if the extension implements the slot and connect to the slot using the data value of your map iterator Checking if the extension implements a certain slot can be done like this note that actionName is the iterator s key value if already iterating over the action slot map returned by this method Connecting to the slot can be done like this where is your QMap&lt;QCString,QCString&gt; iterator</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserExtension::actionSlotMapPtr</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a25d2953fbab499eecb17f981f1f182ed</field>
    <field name="keywords">actionSlotMapPtr KParts::BrowserExtension::actionSlotMapPtr KParts::BrowserExtension</field>
    <field name="text">a pointer to the static action-slot map Preferred method to get it The map is created if it doesn t exist yet</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserExtension::childObject</field>
    <field name="args">(QObject *obj)</field>
    <field name="url">classKParts_1_1BrowserExtension.html#a8b0030640356a9a097e2a2328d7bfc3d</field>
    <field name="keywords">childObject KParts::BrowserExtension::childObject KParts::BrowserExtension</field>
    <field name="text">Convenience method</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::BrowserHostExtension</field>
    <field name="url">classKParts_1_1BrowserHostExtension.html</field>
    <field name="keywords">BrowserHostExtension</field>
    <field name="text">parts that contain other parts For instance a KHTMLPart hosts one part per frame</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserHostExtension::findFrameParent</field>
    <field name="args">(KParts::ReadOnlyPart *callingPart, const QString &amp;frame)</field>
    <field name="url">classKParts_1_1BrowserHostExtension.html#a74ba17b18e70aa0bb308d65cf10df0bd</field>
    <field name="keywords">findFrameParent KParts::BrowserHostExtension::findFrameParent KParts::BrowserHostExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserHostExtension::frameNames</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1BrowserHostExtension.html#a07c280ca27030e6015ff11f3fa51f5ae</field>
    <field name="keywords">frameNames KParts::BrowserHostExtension::frameNames KParts::BrowserHostExtension</field>
    <field name="text">Note that this method does not query the child objects recursively</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserHostExtension::frames</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1BrowserHostExtension.html#aea8125554a7c3824e5afb13e16e3e8fd</field>
    <field name="keywords">frames KParts::BrowserHostExtension::frames KParts::BrowserHostExtension</field>
    <field name="text">Note that this method does not query the child objects recursively</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserHostExtension::openUrlInFrame</field>
    <field name="args">(const QUrl &amp;url, const KParts::OpenUrlArguments &amp;arguments, const KParts::BrowserArguments &amp;browserArguments)</field>
    <field name="url">classKParts_1_1BrowserHostExtension.html#a85485d896fbb6d96d8c7bd8f728c6772</field>
    <field name="keywords">openUrlInFrame KParts::BrowserHostExtension::openUrlInFrame KParts::BrowserHostExtension</field>
    <field name="text">The frame name is specified in the frameName variable in the browserArguments parameter see KParts::BrowserArguments</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserHostExtension::childObject</field>
    <field name="args">(QObject *obj)</field>
    <field name="url">classKParts_1_1BrowserHostExtension.html#a3249ad6a6b4651761ca01543ab16eb32</field>
    <field name="keywords">childObject KParts::BrowserHostExtension::childObject KParts::BrowserHostExtension</field>
    <field name="text">Convenience method</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::BrowserInterface</field>
    <field name="url">classKParts_1_1BrowserInterface.html</field>
    <field name="keywords">BrowserInterface</field>
    <field name="text">A shell implementing this interface can propagate it to embedded kpart components by using the setBrowserInterface call of the part s KParts::BrowserExtension object This interface looks not very rich but the main functionality is implemented using the callMethod method for part- shell communication and using Qt properties for allowing a part to to explicitly query information from the shell Konqueror in particular as reference implementation provides the following functionality through this interface Qt properties Q_PROPERTY( uint historyLength READ historyLength ) Callable methods void goHistory( int )</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserInterface::callMethod</field>
    <field name="args">(const char *name, const QVariant &amp;argument)</field>
    <field name="url">classKParts_1_1BrowserInterface.html#a2b7c63a3eaa196f53b3cc679714de295</field>
    <field name="keywords">callMethod KParts::BrowserInterface::callMethod KParts::BrowserInterface</field>
    <field name="text">Methods are to be implemented as simple Qt slots You should only include the method name and not the signature in the name argument</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::BrowserOpenOrSaveQuestion</field>
    <field name="url">classKParts_1_1BrowserOpenOrSaveQuestion.html</field>
    <field name="keywords">BrowserOpenOrSaveQuestion</field>
    <field name="text">It also has the variant which asks e.g into konqueror 4.4</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::BrowserOpenOrSaveQuestion::Feature</field>
    <field name="url">classKParts_1_1BrowserOpenOrSaveQuestion.html#a9dfe6a7919cfadff826a357e94ac3a9a</field>
    <field name="keywords">Feature KParts::BrowserOpenOrSaveQuestion::Feature KParts::BrowserOpenOrSaveQuestion</field>
    <field name="text">This allows to add features before making all applications ready for those features e.g applications need to read selectedService() otherwise the dialog should not show the service selection button</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::BrowserOpenOrSaveQuestion::BasicFeatures</field>
    <field name="url">classKParts_1_1BrowserOpenOrSaveQuestion.html#a9dfe6a7919cfadff826a357e94ac3a9aa1cfa50dab189d46bdc4a66c5a1763168</field>
    <field name="keywords">BasicFeatures KParts::BrowserOpenOrSaveQuestion::BasicFeatures KParts::BrowserOpenOrSaveQuestion</field>
    <field name="text">Only the basic save open embed cancel button</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::BrowserOpenOrSaveQuestion::ServiceSelection</field>
    <field name="url">classKParts_1_1BrowserOpenOrSaveQuestion.html#a9dfe6a7919cfadff826a357e94ac3a9aa3bc1c3177b1a3c8f4cd297ae558c155e</field>
    <field name="keywords">ServiceSelection KParts::BrowserOpenOrSaveQuestion::ServiceSelection KParts::BrowserOpenOrSaveQuestion</field>
    <field name="text">Shows with the associated applications for the mimetype</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserOpenOrSaveQuestion::BrowserOpenOrSaveQuestion</field>
    <field name="args">(QWidget *parent, const QUrl &amp;url, const QString &amp;mimeType)</field>
    <field name="url">classKParts_1_1BrowserOpenOrSaveQuestion.html#ae8e4080f0b509e005111ec41d73fdc64</field>
    <field name="keywords">BrowserOpenOrSaveQuestion KParts::BrowserOpenOrSaveQuestion::BrowserOpenOrSaveQuestion KParts::BrowserOpenOrSaveQuestion</field>
    <field name="text">url the URL in question mimeType the mimetype of the URL</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserOpenOrSaveQuestion::askEmbedOrSave</field>
    <field name="args">(int flags=0)</field>
    <field name="url">classKParts_1_1BrowserOpenOrSaveQuestion.html#a45c22370ea3217588d318dd5901eef60</field>
    <field name="keywords">askEmbedOrSave KParts::BrowserOpenOrSaveQuestion::askEmbedOrSave KParts::BrowserOpenOrSaveQuestion</field>
    <field name="text">parent parent widget for the dialog flags set to BrowserRun::AttachmentDisposition if suggested by the server This is used because by default text/html files are opened embedded in browsers not saved But if the server said it means the user is download a file for saving it Save Embed or Cancel</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserOpenOrSaveQuestion::askOpenOrSave</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1BrowserOpenOrSaveQuestion.html#a3bfaa812a98f95ac9b6327e075e624c6</field>
    <field name="keywords">askOpenOrSave KParts::BrowserOpenOrSaveQuestion::askOpenOrSave KParts::BrowserOpenOrSaveQuestion</field>
    <field name="text">parent parent widget for the dialog Save Open or Cancel</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserOpenOrSaveQuestion::selectedService</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1BrowserOpenOrSaveQuestion.html#a170d4c6015e48d10783bb1b44bae3fdf</field>
    <field name="keywords">selectedService KParts::BrowserOpenOrSaveQuestion::selectedService KParts::BrowserOpenOrSaveQuestion</field>
    <field name="text">the service that was selected during askOpenOrSave if it returned Open In all other cases no associated application Save or Cancel selected this returns 0 Requires setFeatures(BrowserOpenOrSaveQuestion::ServiceSelection)</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserOpenOrSaveQuestion::setFeatures</field>
    <field name="args">(Features features)</field>
    <field name="url">classKParts_1_1BrowserOpenOrSaveQuestion.html#a4c97367478d964dab1b2d80f08ced2dc</field>
    <field name="keywords">setFeatures KParts::BrowserOpenOrSaveQuestion::setFeatures KParts::BrowserOpenOrSaveQuestion</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserOpenOrSaveQuestion::setSuggestedFileName</field>
    <field name="args">(const QString &amp;suggestedFileName)</field>
    <field name="url">classKParts_1_1BrowserOpenOrSaveQuestion.html#a7788b66c636c566c3bc015189bc529a0</field>
    <field name="keywords">setSuggestedFileName KParts::BrowserOpenOrSaveQuestion::setSuggestedFileName KParts::BrowserOpenOrSaveQuestion</field>
    <field name="text">suggestedFileName optional file name suggested by the server HTTP Content-Disposition</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::BrowserRun</field>
    <field name="url">classKParts_1_1BrowserRun.html</field>
    <field name="keywords">BrowserRun</field>
    <field name="text">dialog boxes functionality support for HTTP POST including saving the result to a temp file if opening a separate application warning before launching executables off the web custom error handling i.e treating errors as HTML pages generation of SSL metadata depending on the previous URL shown by the part David Faure</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserRun::BrowserRun</field>
    <field name="args">(const QUrl &amp;url, const KParts::OpenUrlArguments &amp;args, const KParts::BrowserArguments &amp;browserArgs, KParts::ReadOnlyPart *part, QWidget *window, bool removeReferrer, bool trustedSource, bool hideErrorDialog=false)</field>
    <field name="url">classKParts_1_1BrowserRun.html#a9eb7d07ec06fcd928c6790d2fc7ba8eb</field>
    <field name="keywords">BrowserRun KParts::BrowserRun::BrowserRun KParts::BrowserRun</field>
    <field name="text">url the URL we re probing args URL args includes reload metaData etc browserArgs browser-related args includes data for a HTTP POST etc part the part going to open this URL can be 0 if not created yet window the mainwindow passed to KIO::Job::setWindow() removeReferrer if true the metadata from args isn t passed on trustedSource if false a warning will be shown before launching an executable Always pass false for trustedSource except for local directory views hideErrorDialog if true no dialog will be shown in case of errors</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserRun::contentDisposition</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1BrowserRun.html#a520a8700b82cc6838ede2b3429ced30a</field>
    <field name="keywords">contentDisposition KParts::BrowserRun::contentDisposition KParts::BrowserRun</field>
    <field name="text">Suggested disposition by the server e.g HTTP content-disposition</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserRun::serverSuggestsSave</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1BrowserRun.html#a0c66bf3e3e2c8aa55bd87af8dccbc829</field>
    <field name="keywords">serverSuggestsSave KParts::BrowserRun::serverSuggestsSave KParts::BrowserRun</field>
    <field name="text">Whether the returned disposition suggests saving or opening inline</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserRun::askEmbedOrSave</field>
    <field name="args">(const QUrl &amp;url, const QString &amp;mimeType, const QString &amp;suggestedFileName=QString(), int flags=0)</field>
    <field name="url">classKParts_1_1BrowserRun.html#a4a284211de130504274bcbd5ca90b76f</field>
    <field name="keywords">askEmbedOrSave KParts::BrowserRun::askEmbedOrSave KParts::BrowserRun</field>
    <field name="text">url the URL in question mimeType the mimetype of the URL suggestedFileName optional filename suggested by the server flags set to AttachmentDisposition if suggested by the server Save Open or Cancel use BrowserOpenOrSaveQuestion</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserRun::askSave</field>
    <field name="args">(const QUrl &amp;url, KService::Ptr offer, const QString &amp;mimeType, const QString &amp;suggestedFileName=QString())</field>
    <field name="url">classKParts_1_1BrowserRun.html#ad883dcd4472988820c7e16182ef0e6da</field>
    <field name="keywords">askSave KParts::BrowserRun::askSave KParts::BrowserRun</field>
    <field name="text">url the URL in question offer the application that will be used to open the URL mimeType the mimetype of the URL suggestedFileName optional file name suggested by the server Save Open or Cancel use BrowserOpenOrSaveQuestion</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserRun::makeErrorUrl</field>
    <field name="args">(int error, const QString &amp;errorText, const QUrl &amp;initialUrl)</field>
    <field name="url">classKParts_1_1BrowserRun.html#a6bc7202641b036277ee27cbf8b2ca081</field>
    <field name="keywords">makeErrorUrl KParts::BrowserRun::makeErrorUrl KParts::BrowserRun</field>
    <field name="text">This helper method creates the error URL from its parameters error the KIO error code or KIO::ERR_SLAVE_DEFINED if not from KIO errorText the text of the error message initialUrl the URL that we were trying to open as a string so that this can support invalid URLs as well changed from QString to QUrl in KF5 4.6</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserRun::saveUrl</field>
    <field name="args">(const QUrl &amp;url, const QString &amp;suggestedFileName, QWidget *window, const KParts::OpenUrlArguments &amp;args)</field>
    <field name="url">classKParts_1_1BrowserRun.html#afdbcdc28907ea31dbf809a5950899725</field>
    <field name="keywords">saveUrl KParts::BrowserRun::saveUrl KParts::BrowserRun</field>
    <field name="text">Otherwise asks the user for a destination url and calls saveUrlUsingKIO 4.4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserRun::saveUrlUsingKIO</field>
    <field name="args">(const QUrl &amp;srcUrl, const QUrl &amp;destUrl, QWidget *window, const QMap&lt; QString, QString &gt; &amp;metaData)</field>
    <field name="url">classKParts_1_1BrowserRun.html#af326d6921197f1a2c0c22978854820a1</field>
    <field name="keywords">saveUrlUsingKIO KParts::BrowserRun::saveUrlUsingKIO KParts::BrowserRun</field>
    <field name="text">4.4</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::BrowserRun::NonEmbeddableResult</field>
    <field name="url">classKParts_1_1BrowserRun.html#af7f4f75d5ab28c3183f9f5ee96b8a79f</field>
    <field name="keywords">NonEmbeddableResult KParts::BrowserRun::NonEmbeddableResult KParts::BrowserRun</field>
    <field name="text">launch an external app</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserRun::handleError</field>
    <field name="args">(KJob *job) override</field>
    <field name="url">classKParts_1_1BrowserRun.html#a06c9173826499e52945ce45b071876c9</field>
    <field name="keywords">handleError KParts::BrowserRun::handleError KParts::BrowserRun</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserRun::handleNonEmbeddable</field>
    <field name="args">(const QString &amp;mimeType)</field>
    <field name="url">classKParts_1_1BrowserRun.html#a620eeb51117a09a603240d58692f0d53</field>
    <field name="keywords">handleNonEmbeddable KParts::BrowserRun::handleNonEmbeddable KParts::BrowserRun</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserRun::handleNonEmbeddable</field>
    <field name="args">(const QString &amp;mimeType, KService::Ptr *pSelectedService)</field>
    <field name="url">classKParts_1_1BrowserRun.html#a2fbf5def54f1b6c912cb76d9141caf7f</field>
    <field name="keywords">handleNonEmbeddable KParts::BrowserRun::handleNonEmbeddable KParts::BrowserRun</field>
    <field name="text">mimeType the mimetype found for the URL pSelectedService Output variable pointer to a KService::Ptr which will be set to the service selected in the BrowserOpenOrSaveQuestion dialog if any How to handle this properly if pSelectedService is non-zero then the dialog will show additional buttons In your code you should write 4.5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserRun::init</field>
    <field name="args">() override</field>
    <field name="url">classKParts_1_1BrowserRun.html#adc764fe7e9ab7b224b8b7cbc21ab5fd5</field>
    <field name="keywords">init KParts::BrowserRun::init KParts::BrowserRun</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::BrowserRun::scanFile</field>
    <field name="args">() override</field>
    <field name="url">classKParts_1_1BrowserRun.html#a581f3a8adfd7eb07b72e195575ca5b7b</field>
    <field name="keywords">scanFile KParts::BrowserRun::scanFile KParts::BrowserRun</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::Event</field>
    <field name="url">classKParts_1_1Event.html</field>
    <field name="keywords">Event</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::FileInfoExtension</field>
    <field name="url">classKParts_1_1FileInfoExtension.html</field>
    <field name="keywords">FileInfoExtension</field>
    <field name="text">This extension provides information about file and directory resources that are present in the part the implements it The main purpose of for this extension is to provide information about files and directories located on remote servers so that download managers such as kget can easily retrieve these resources 4.6</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::FileInfoExtension::QueryMode</field>
    <field name="url">classKParts_1_1FileInfoExtension.html#a9bc830a53b0005013082984a2bbd5639</field>
    <field name="keywords">QueryMode KParts::FileInfoExtension::QueryMode KParts::FileInfoExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::FileInfoExtension::None</field>
    <field name="url">classKParts_1_1FileInfoExtension.html#a9bc830a53b0005013082984a2bbd5639af7f7b524610ed47f67081fee1a37a604</field>
    <field name="keywords">None KParts::FileInfoExtension::None KParts::FileInfoExtension</field>
    <field name="text">Querying for file information is NOT possible</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::FileInfoExtension::AllItems</field>
    <field name="url">classKParts_1_1FileInfoExtension.html#a9bc830a53b0005013082984a2bbd5639a553b2481b4b7b99d8f839eed303177d8</field>
    <field name="keywords">AllItems KParts::FileInfoExtension::AllItems KParts::FileInfoExtension</field>
    <field name="text">Retrieve or can retrieve file information for all items</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::FileInfoExtension::SelectedItems</field>
    <field name="url">classKParts_1_1FileInfoExtension.html#a9bc830a53b0005013082984a2bbd5639aaa07fd2649d0deb94a819b29cddbe32e</field>
    <field name="keywords">SelectedItems KParts::FileInfoExtension::SelectedItems KParts::FileInfoExtension</field>
    <field name="text">Retrieve or can retrieve file information for selected items</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::FileInfoExtension::FileInfoExtension</field>
    <field name="args">(KParts::ReadOnlyPart *parent)</field>
    <field name="url">classKParts_1_1FileInfoExtension.html#ab7f24a4cbfcabe40422b26fa2ee562b7</field>
    <field name="keywords">FileInfoExtension KParts::FileInfoExtension::FileInfoExtension KParts::FileInfoExtension</field>
    <field name="text">Constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::FileInfoExtension::~FileInfoExtension</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1FileInfoExtension.html#abddc8b6d5806578df019f0e69026b1db</field>
    <field name="keywords">KParts::FileInfoExtension::~FileInfoExtension KParts::FileInfoExtension</field>
    <field name="text">Destructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::FileInfoExtension::hasSelection</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1FileInfoExtension.html#adbcad4f6b8eb8425641bf25ac1e2746b</field>
    <field name="keywords">hasSelection KParts::FileInfoExtension::hasSelection KParts::FileInfoExtension</field>
    <field name="text">By default this function returns false</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::FileInfoExtension::queryFor</field>
    <field name="args">(QueryMode mode) const =0</field>
    <field name="url">classKParts_1_1FileInfoExtension.html#addac1579dcbc21c5fcceecda6f5cb532</field>
    <field name="keywords">queryFor KParts::FileInfoExtension::queryFor KParts::FileInfoExtension</field>
    <field name="text">If the mode specified by mode is not supported or cannot be handled then an empty list is returned</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::FileInfoExtension::supportedQueryModes</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1FileInfoExtension.html#af82b572809e306f7cb43572e7606ebc0</field>
    <field name="keywords">supportedQueryModes KParts::FileInfoExtension::supportedQueryModes KParts::FileInfoExtension</field>
    <field name="text">By default this function returns None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::FileInfoExtension::childObject</field>
    <field name="args">(QObject *obj)</field>
    <field name="url">classKParts_1_1FileInfoExtension.html#a647f1533021c107574d094cff4820ae3</field>
    <field name="keywords">childObject KParts::FileInfoExtension::childObject KParts::FileInfoExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::GUIActivateEvent</field>
    <field name="url">classKParts_1_1GUIActivateEvent.html</field>
    <field name="keywords">GUIActivateEvent</field>
    <field name="text">This is related to PartActivateEvent but the difference is that GUIActivateEvent happens later when the GUI is actually built only for parts that have GUI elements and only if using KParts::MainWindow KParts::Part::guiActivateEvent()</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::HistoryProvider</field>
    <field name="url">classKParts_1_1HistoryProvider.html</field>
    <field name="keywords">HistoryProvider</field>
    <field name="text">This class is only meant for fast lookup if an item is in the history or not May be subclassed to implement a persistent history for example For usage with khtml just create your provider and call the HistoryProvider constructor before you do any khtml stuff That way khtml using the self() will use your subclassed provider Carsten Pfeiffer</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::HistoryProvider::cleared</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1HistoryProvider.html#ac1328e387f0adb62419ddfdd74b1839e</field>
    <field name="keywords">cleared KParts::HistoryProvider::cleared KParts::HistoryProvider</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::HistoryProvider::inserted</field>
    <field name="args">(const QString &amp;item)</field>
    <field name="url">classKParts_1_1HistoryProvider.html#a24304e5276a1f113314eb7b4e464828f</field>
    <field name="keywords">inserted KParts::HistoryProvider::inserted KParts::HistoryProvider</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::HistoryProvider::updated</field>
    <field name="args">(const QStringList &amp;items)</field>
    <field name="url">classKParts_1_1HistoryProvider.html#adf153d0a7a3efcdaba20a86e323e115f</field>
    <field name="keywords">updated KParts::HistoryProvider::updated KParts::HistoryProvider</field>
    <field name="text">Emit this signal to notify others that the history has changed Put those items that were added or removed from the history into items</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::HistoryProvider::clear</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1HistoryProvider.html#a9eb70389cbe1912435f4e97f56ed6943</field>
    <field name="keywords">clear KParts::HistoryProvider::clear KParts::HistoryProvider</field>
    <field name="text">The cleared() signal is emitted after clearing</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::HistoryProvider::contains</field>
    <field name="args">(const QString &amp;item) const</field>
    <field name="url">classKParts_1_1HistoryProvider.html#aab6ca496613fbf95efedc27dd15cd229</field>
    <field name="keywords">contains KParts::HistoryProvider::contains KParts::HistoryProvider</field>
    <field name="text">true if item is present in the history</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::HistoryProvider::insert</field>
    <field name="args">(const QString &amp;item)</field>
    <field name="url">classKParts_1_1HistoryProvider.html#a02a9f183d6c9607f912c7047b39c6db1</field>
    <field name="keywords">insert KParts::HistoryProvider::insert KParts::HistoryProvider</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::HistoryProvider::remove</field>
    <field name="args">(const QString &amp;item)</field>
    <field name="url">classKParts_1_1HistoryProvider.html#a385a1a584ea86c3680f4c4501a9665b8</field>
    <field name="keywords">remove KParts::HistoryProvider::remove KParts::HistoryProvider</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::HistoryProvider::exists</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1HistoryProvider.html#ad0152951f12f738e3d252e8ba74fe9d4</field>
    <field name="keywords">exists KParts::HistoryProvider::exists KParts::HistoryProvider</field>
    <field name="text">true if a provider has already been created 4.4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::HistoryProvider::HistoryProvider</field>
    <field name="args">(QObject *parent=0)</field>
    <field name="url">classKParts_1_1HistoryProvider.html#ad3d3f24a212ea28a4f325285b5db2e1f</field>
    <field name="keywords">HistoryProvider KParts::HistoryProvider::HistoryProvider KParts::HistoryProvider</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::HistoryProvider::~HistoryProvider</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1HistoryProvider.html#a4dda551811cf5beb59b459577aced662</field>
    <field name="keywords">KParts::HistoryProvider::~HistoryProvider KParts::HistoryProvider</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::HtmlExtension</field>
    <field name="url">classKParts_1_1HtmlExtension.html</field>
    <field name="keywords">HtmlExtension</field>
    <field name="text">Use qobject_cast to cast the extension to interesting interfaces like qobject_cast&lt;KParts::SelectorInterface&gt; 4.6</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::HtmlExtension::baseUrl</field>
    <field name="args">() const =0</field>
    <field name="url">classKParts_1_1HtmlExtension.html#a5f20c803e3f8b096fa6e94291ee86205</field>
    <field name="keywords">baseUrl KParts::HtmlExtension::baseUrl KParts::HtmlExtension</field>
    <field name="text">This function is mostly used to resolve any relative URLs that might be returned when querying the part for links</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::HtmlExtension::hasSelection</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1HtmlExtension.html#a6af991ec27d09cbca5064f5ebdf38a7a</field>
    <field name="keywords">hasSelection KParts::HtmlExtension::hasSelection KParts::HtmlExtension</field>
    <field name="text">By default this function returns false</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::HtmlExtension::childObject</field>
    <field name="args">(QObject *obj)</field>
    <field name="url">classKParts_1_1HtmlExtension.html#abca1a74beb48888267f83bb0d860dd52</field>
    <field name="keywords">childObject KParts::HtmlExtension::childObject KParts::HtmlExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::HtmlSettingsInterface</field>
    <field name="url">classKParts_1_1HtmlSettingsInterface.html</field>
    <field name="keywords">HtmlSettingsInterface</field>
    <field name="text">This interface provides a generic means for querying or changing the settings of browser engines that implement it To use this class simply cast an instance of the HTMLExtension object using qobject_cast&lt;KParts::HtmlSettingsInterface&gt; Example KParts::HTMLExtension extension KParts::HTMLExtension::childObject(part) KParts::HtmlSettingsInterface settings qobject_cast KParts::HtmlSettingsInterface extension const bool autoLoadImages settings- attribute(KParts::AutoLoadImages) 4.8.1</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::HtmlSettingsInterface::HtmlSettingsType</field>
    <field name="url">classKParts_1_1HtmlSettingsInterface.html#a62e44360376f423604c5c838ec0e312f</field>
    <field name="keywords">HtmlSettingsType KParts::HtmlSettingsInterface::HtmlSettingsType KParts::HtmlSettingsInterface</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::HtmlSettingsInterface::JavaScriptAdvice</field>
    <field name="url">classKParts_1_1HtmlSettingsInterface.html#af6b2303d6834ceff4d5251e10bd9d54b</field>
    <field name="keywords">JavaScriptAdvice KParts::HtmlSettingsInterface::JavaScriptAdvice KParts::HtmlSettingsInterface</field>
    <field name="text">4.8.2</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::HtmlSettingsInterface::JSWindowFocusPolicy</field>
    <field name="url">classKParts_1_1HtmlSettingsInterface.html#a3c00e5813af380f956480b47a76fdf8c</field>
    <field name="keywords">JSWindowFocusPolicy KParts::HtmlSettingsInterface::JSWindowFocusPolicy KParts::HtmlSettingsInterface</field>
    <field name="text">4.8.2</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::HtmlSettingsInterface::JSWindowMovePolicy</field>
    <field name="url">classKParts_1_1HtmlSettingsInterface.html#a2774dbe8635ec916babf19de468d6c34</field>
    <field name="keywords">JSWindowMovePolicy KParts::HtmlSettingsInterface::JSWindowMovePolicy KParts::HtmlSettingsInterface</field>
    <field name="text">4.8.2</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::HtmlSettingsInterface::JSWindowOpenPolicy</field>
    <field name="url">classKParts_1_1HtmlSettingsInterface.html#aab245c057a7179fc1bdc16e020750643</field>
    <field name="keywords">JSWindowOpenPolicy KParts::HtmlSettingsInterface::JSWindowOpenPolicy KParts::HtmlSettingsInterface</field>
    <field name="text">4.8.2</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::HtmlSettingsInterface::JSWindowResizePolicy</field>
    <field name="url">classKParts_1_1HtmlSettingsInterface.html#a0fcf7802e2f831ee1449e82713f6f359</field>
    <field name="keywords">JSWindowResizePolicy KParts::HtmlSettingsInterface::JSWindowResizePolicy KParts::HtmlSettingsInterface</field>
    <field name="text">4.8.2</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::HtmlSettingsInterface::JSWindowStatusPolicy</field>
    <field name="url">classKParts_1_1HtmlSettingsInterface.html#a88188ac567388141e0b1b988ae71961f</field>
    <field name="keywords">JSWindowStatusPolicy KParts::HtmlSettingsInterface::JSWindowStatusPolicy KParts::HtmlSettingsInterface</field>
    <field name="text">4.8.2</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::HtmlSettingsInterface::~HtmlSettingsInterface</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1HtmlSettingsInterface.html#a044f53f15e82bc3c209d578849812cfd</field>
    <field name="keywords">KParts::HtmlSettingsInterface::~HtmlSettingsInterface KParts::HtmlSettingsInterface</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::HtmlSettingsInterface::htmlSettingsProperty</field>
    <field name="args">(HtmlSettingsType type) const =0</field>
    <field name="url">classKParts_1_1HtmlSettingsInterface.html#a00b2a2f9ce6f7b505ab0bbfa4f71eca5</field>
    <field name="keywords">htmlSettingsProperty KParts::HtmlSettingsInterface::htmlSettingsProperty KParts::HtmlSettingsInterface</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::HtmlSettingsInterface::setHtmlSettingsProperty</field>
    <field name="args">(HtmlSettingsType type, const QVariant &amp;value)=0</field>
    <field name="url">classKParts_1_1HtmlSettingsInterface.html#ad345737d10028b838bb1324568d813f3</field>
    <field name="keywords">setHtmlSettingsProperty KParts::HtmlSettingsInterface::setHtmlSettingsProperty KParts::HtmlSettingsInterface</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::HtmlSettingsInterface::javascriptAdviceToText</field>
    <field name="args">(JavaScriptAdvice advice)</field>
    <field name="url">classKParts_1_1HtmlSettingsInterface.html#a3c3addaf95ebd946a56da4e6726c1113</field>
    <field name="keywords">javascriptAdviceToText KParts::HtmlSettingsInterface::javascriptAdviceToText KParts::HtmlSettingsInterface</field>
    <field name="text">If advice is not either JavaScriptAccept or JavaScriptReject this function returns a NULL string 4.8.2</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::HtmlSettingsInterface::splitDomainAdvice</field>
    <field name="args">(const QString &amp;text, QString &amp;domain, JavaScriptAdvice &amp;javaAdvice, JavaScriptAdvice &amp;javaScriptAdvice)</field>
    <field name="url">classKParts_1_1HtmlSettingsInterface.html#a3383a89c4a79dcb879473098cf2ef671</field>
    <field name="keywords">splitDomainAdvice KParts::HtmlSettingsInterface::splitDomainAdvice KParts::HtmlSettingsInterface</field>
    <field name="text">If text is empty or does not contain the proper delimiter this function will set domain to text and the other two parameters to JavaScriptDunno 4.8.2</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::HtmlSettingsInterface::textToJavascriptAdvice</field>
    <field name="args">(const QString &amp;text)</field>
    <field name="url">classKParts_1_1HtmlSettingsInterface.html#ae96f92e3cab638765debd7b318a983e9</field>
    <field name="keywords">textToJavascriptAdvice KParts::HtmlSettingsInterface::textToJavascriptAdvice KParts::HtmlSettingsInterface</field>
    <field name="text">If text is not either or this function returns JavaScriptDunno 4.8.2</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::ListingFilterExtension</field>
    <field name="url">classKParts_1_1ListingFilterExtension.html</field>
    <field name="keywords">ListingFilterExtension</field>
    <field name="text">This extension is intended to be implemented by parts that provide listing services e.g file management parts and is intended to provide a generic API for filtering any listing through keywords wildcard characters and/or content-type Examples To show items that only match the term To show items that only match To show items that only match the wildcard string To show items that match multiple mime types e.g text/html application/xml 4.9.2</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::ListingFilterExtension::FilterMode</field>
    <field name="url">classKParts_1_1ListingFilterExtension.html#a041ca874c3e56fa51472e8fe1a1d468f</field>
    <field name="keywords">FilterMode KParts::ListingFilterExtension::FilterMode KParts::ListingFilterExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::ListingFilterExtension::MimeType</field>
    <field name="url">classKParts_1_1ListingFilterExtension.html#a041ca874c3e56fa51472e8fe1a1d468faa2a85fba42da8d43d3cc230e7dd2186f</field>
    <field name="keywords">MimeType KParts::ListingFilterExtension::MimeType KParts::ListingFilterExtension</field>
    <field name="text">Filter by mime type e.g</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::ListingFilterExtension::SubString</field>
    <field name="url">classKParts_1_1ListingFilterExtension.html#a041ca874c3e56fa51472e8fe1a1d468fac130123afa132f5f3299484cd7ab55e9</field>
    <field name="keywords">SubString KParts::ListingFilterExtension::SubString KParts::ListingFilterExtension</field>
    <field name="text">Filter by matching any part of a file or directory name e.g</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::ListingFilterExtension::WildCard</field>
    <field name="url">classKParts_1_1ListingFilterExtension.html#a041ca874c3e56fa51472e8fe1a1d468fa3abdf9850531a6fc903e652685855fa4</field>
    <field name="keywords">WildCard KParts::ListingFilterExtension::WildCard KParts::ListingFilterExtension</field>
    <field name="text">Filter by using wildcard matches e.g</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ListingFilterExtension::ListingFilterExtension</field>
    <field name="args">(KParts::ReadOnlyPart *parent)</field>
    <field name="url">classKParts_1_1ListingFilterExtension.html#a26a2fc2b4e5bc0d58b448f311d6fc3f7</field>
    <field name="keywords">ListingFilterExtension KParts::ListingFilterExtension::ListingFilterExtension KParts::ListingFilterExtension</field>
    <field name="text">Constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ListingFilterExtension::~ListingFilterExtension</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1ListingFilterExtension.html#af10f490a8152ea657185a4eecab6f6fa</field>
    <field name="keywords">KParts::ListingFilterExtension::~ListingFilterExtension KParts::ListingFilterExtension</field>
    <field name="text">Destructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ListingFilterExtension::filter</field>
    <field name="args">(FilterMode mode) const =0</field>
    <field name="url">classKParts_1_1ListingFilterExtension.html#ab498f287b01766cafbb2de8615d3a763</field>
    <field name="keywords">filter KParts::ListingFilterExtension::filter KParts::ListingFilterExtension</field>
    <field name="text">mode the desired filter mode as specified in FilterMode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ListingFilterExtension::setFilter</field>
    <field name="args">(FilterMode mode, const QVariant &amp;filter)=0</field>
    <field name="url">classKParts_1_1ListingFilterExtension.html#add79e2235c1de7906e68adb4c094e3a4</field>
    <field name="keywords">setFilter KParts::ListingFilterExtension::setFilter KParts::ListingFilterExtension</field>
    <field name="text">To remove a filter for a given filter mode simply call this function with the desired mode and the filter parameter set to a NULL variant The second parameter can be mode the desired filter mode as specified in FilterMode filters a list of filter texts based on the selected mode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ListingFilterExtension::supportedFilterModes</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1ListingFilterExtension.html#aba4a88733c6ac5936d24210f21091711</field>
    <field name="keywords">supportedFilterModes KParts::ListingFilterExtension::supportedFilterModes KParts::ListingFilterExtension</field>
    <field name="text">By default this function returns None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ListingFilterExtension::supportsMultipleFilters</field>
    <field name="args">(FilterMode mode) const</field>
    <field name="url">classKParts_1_1ListingFilterExtension.html#a0a2034d777edfaa522d8648b0c02b370</field>
    <field name="keywords">supportsMultipleFilters KParts::ListingFilterExtension::supportsMultipleFilters KParts::ListingFilterExtension</field>
    <field name="text">By default this function returns false</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ListingFilterExtension::childObject</field>
    <field name="args">(QObject *obj)</field>
    <field name="url">classKParts_1_1ListingFilterExtension.html#a464dc516a11c4a8019d9cdaa05513384</field>
    <field name="keywords">childObject KParts::ListingFilterExtension::childObject KParts::ListingFilterExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::ListingNotificationExtension</field>
    <field name="url">classKParts_1_1ListingNotificationExtension.html</field>
    <field name="keywords">ListingNotificationExtension</field>
    <field name="text">This extension is intended for implementation by parts that provide listing services e.g file management and is intended to notify about changes to a given listing For example if file management part implemented this extension it would emit itemsDeleted and itemsAdded signal whenever new files or folders are deleted and added to a directory respectively 4.9.2</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::ListingNotificationExtension::NotificationEventType</field>
    <field name="url">classKParts_1_1ListingNotificationExtension.html#ac36e19f0084977025c497a428c126d1e</field>
    <field name="keywords">NotificationEventType KParts::ListingNotificationExtension::NotificationEventType KParts::ListingNotificationExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::ListingNotificationExtension::ItemsAdded</field>
    <field name="url">classKParts_1_1ListingNotificationExtension.html#ac36e19f0084977025c497a428c126d1ea2689e25d3cfef944b5e4a4bc699ddb4e</field>
    <field name="keywords">ItemsAdded KParts::ListingNotificationExtension::ItemsAdded KParts::ListingNotificationExtension</field>
    <field name="text">New items added to the listing</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::ListingNotificationExtension::ItemsDeleted</field>
    <field name="url">classKParts_1_1ListingNotificationExtension.html#ac36e19f0084977025c497a428c126d1eab36ff763bb33b14e79e89faf1405ad2f</field>
    <field name="keywords">ItemsDeleted KParts::ListingNotificationExtension::ItemsDeleted KParts::ListingNotificationExtension</field>
    <field name="text">Items deleted from the listing</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::ListingNotificationExtension::listingEvent</field>
    <field name="args">(KParts::ListingNotificationExtension::NotificationEventType, const KFileItemList &amp;)</field>
    <field name="url">classKParts_1_1ListingNotificationExtension.html#a919b31c86ec1f15cc889799d5ffd4cc1</field>
    <field name="keywords">listingEvent KParts::ListingNotificationExtension::listingEvent KParts::ListingNotificationExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ListingNotificationExtension::ListingNotificationExtension</field>
    <field name="args">(KParts::ReadOnlyPart *parent)</field>
    <field name="url">classKParts_1_1ListingNotificationExtension.html#ac5d481c41ab9389648b40f3d9ce53ce8</field>
    <field name="keywords">ListingNotificationExtension KParts::ListingNotificationExtension::ListingNotificationExtension KParts::ListingNotificationExtension</field>
    <field name="text">Constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ListingNotificationExtension::~ListingNotificationExtension</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1ListingNotificationExtension.html#a6a4e356f2cd6b90dd2a180dfc07e629e</field>
    <field name="keywords">KParts::ListingNotificationExtension::~ListingNotificationExtension KParts::ListingNotificationExtension</field>
    <field name="text">Destructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ListingNotificationExtension::supportedNotificationEventTypes</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1ListingNotificationExtension.html#a65a7a2ef7a8334fad8020a4feb86adc7</field>
    <field name="keywords">supportedNotificationEventTypes KParts::ListingNotificationExtension::supportedNotificationEventTypes KParts::ListingNotificationExtension</field>
    <field name="text">By default this function returns None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ListingNotificationExtension::childObject</field>
    <field name="args">(QObject *obj)</field>
    <field name="url">classKParts_1_1ListingNotificationExtension.html#a839b7efcbd71d9d1c4eaf0d1a354d353</field>
    <field name="keywords">childObject KParts::ListingNotificationExtension::childObject KParts::ListingNotificationExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::LiveConnectExtension</field>
    <field name="url">classKParts_1_1LiveConnectExtension.html</field>
    <field name="keywords">LiveConnectExtension</field>
    <field name="text">a call from JavaScript from a HTML page which embeds this part A part can have an object hierarchy by using objid as a reference to an object</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::LiveConnectExtension::partEvent</field>
    <field name="args">(const unsigned long objid, const QString &amp;event, const KParts::LiveConnectExtension::ArgList &amp;args)</field>
    <field name="url">classKParts_1_1LiveConnectExtension.html#a0cb4efb5b26992f31ae44f3d4a6ba2a1</field>
    <field name="keywords">partEvent KParts::LiveConnectExtension::partEvent KParts::LiveConnectExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::LiveConnectExtension::call</field>
    <field name="args">(const unsigned long objid, const QString &amp;func, const QStringList &amp;args, Type &amp;type, unsigned long &amp;retobjid, QString &amp;value)</field>
    <field name="url">classKParts_1_1LiveConnectExtension.html#a8af89d03bcefd24bb9c099deb80ca5ae</field>
    <field name="keywords">call KParts::LiveConnectExtension::call KParts::LiveConnectExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::LiveConnectExtension::get</field>
    <field name="args">(const unsigned long objid, const QString &amp;field, Type &amp;type, unsigned long &amp;retobjid, QString &amp;value)</field>
    <field name="url">classKParts_1_1LiveConnectExtension.html#a46722a5f382f4d0173396f879e050c66</field>
    <field name="keywords">get KParts::LiveConnectExtension::get KParts::LiveConnectExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::LiveConnectExtension::put</field>
    <field name="args">(const unsigned long objid, const QString &amp;field, const QString &amp;value)</field>
    <field name="url">classKParts_1_1LiveConnectExtension.html#ae0bc85bde992773d5bf3235d9772de9d</field>
    <field name="keywords">put KParts::LiveConnectExtension::put KParts::LiveConnectExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::LiveConnectExtension::unregister</field>
    <field name="args">(const unsigned long objid)</field>
    <field name="url">classKParts_1_1LiveConnectExtension.html#ac5aa145601a74a7ac1a84baee4690fc4</field>
    <field name="keywords">unregister KParts::LiveConnectExtension::unregister KParts::LiveConnectExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::MainWindow</field>
    <field name="url">classKParts_1_1MainWindow.html</field>
    <field name="keywords">MainWindow</field>
    <field name="text">It implements all internal interfaces in the case of a KMainWindow as host the builder and servant interface for menu merging Inherit your main window from this class and don t forget to call setupGUI() before you call createGUI() on the KPart For example you should not pass the Default flag to setupGUI() since it contains the Create flag that is not supposed to be used from this class setupGUI createGUI</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::MainWindow::MainWindow</field>
    <field name="args">(QWidget *parent=0, Qt::WindowFlags f=KDE_DEFAULT_WINDOWFLAGS)</field>
    <field name="url">classKParts_1_1MainWindow.html#a3a5e07b7a5a176d0d2b4b76dc63e0825</field>
    <field name="keywords">MainWindow KParts::MainWindow::MainWindow KParts::MainWindow</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::MainWindow::~MainWindow</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1MainWindow.html#ae98d00a93bc118200eeef9f9bba1dba7</field>
    <field name="keywords">KParts::MainWindow::~MainWindow KParts::MainWindow</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartBase::PartBase</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1PartBase.html#afd87c7912f9feef662662dbfb66ee110</field>
    <field name="keywords">PartBase KParts::PartBase::PartBase KParts::PartBase PartBase KParts::PartBase::PartBase KParts::PartBase PartBase KParts::PartBase::PartBase KParts::PartBase PartBase KParts::PartBase::PartBase KParts::PartBase PartBase KParts::PartBase::PartBase KParts::PartBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartBase::~PartBase</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1PartBase.html#a95d451269133053c06247ec4cc647afc</field>
    <field name="keywords">KParts::PartBase::~PartBase KParts::PartBase KParts::PartBase::~PartBase KParts::PartBase KParts::PartBase::~PartBase KParts::PartBase KParts::PartBase::~PartBase KParts::PartBase KParts::PartBase::~PartBase KParts::PartBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartBase::setPartObject</field>
    <field name="args">(QObject *object)</field>
    <field name="url">classKParts_1_1PartBase.html#ad672e8e40af0aed3c5edff69f737d920</field>
    <field name="keywords">setPartObject KParts::PartBase::setPartObject KParts::PartBase setPartObject KParts::PartBase::setPartObject KParts::PartBase setPartObject KParts::PartBase::setPartObject KParts::PartBase setPartObject KParts::PartBase::setPartObject KParts::PartBase setPartObject KParts::PartBase::setPartObject KParts::PartBase</field>
    <field name="text">Called by KParts::Part to specify the parent object for plugin objects</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KParts::MainWindow::createGUI</field>
    <field name="args">(KParts::Part *part)</field>
    <field name="url">classKParts_1_1MainWindow.html#af96742c32da821dd7350deebc0a65382</field>
    <field name="keywords">createGUI KParts::MainWindow::createGUI KParts::MainWindow</field>
    <field name="text">In a main window with multiple parts being shown e.g as in Konqueror you need to connect this slot to the KPartManager::activePartChanged() signal part The active part set to 0L if no part</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KParts::MainWindow::saveNewToolbarConfig</field>
    <field name="args">() override</field>
    <field name="url">classKParts_1_1MainWindow.html#aa312f0eff55e1a2b69bff4e27e195187</field>
    <field name="keywords">saveNewToolbarConfig KParts::MainWindow::saveNewToolbarConfig KParts::MainWindow</field>
    <field name="text">configureToolbars()</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KParts::MainWindow::setWindowTitleHandling</field>
    <field name="args">(bool enabled)</field>
    <field name="url">classKParts_1_1MainWindow.html#aa97d90473a0899f30b729b16d3f096ed</field>
    <field name="keywords">setWindowTitleHandling KParts::MainWindow::setWindowTitleHandling KParts::MainWindow</field>
    <field name="text">By default a part always changes the window title when the document changes This value must be set before calling createGUI enabled boolean to enable or disable the window title handling 5.24</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KParts::MainWindow::slotSetStatusBarText</field>
    <field name="args">(const QString &amp;)</field>
    <field name="url">classKParts_1_1MainWindow.html#af391fc98a82478ee389a3357d487141f</field>
    <field name="keywords">slotSetStatusBarText KParts::MainWindow::slotSetStatusBarText KParts::MainWindow</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartBase::loadPlugins</field>
    <field name="args">(QObject *parent, KXMLGUIClient *parentGUIClient, const KAboutData &amp;aboutData)</field>
    <field name="url">classKParts_1_1PartBase.html#abdc6495c1dd313ee16e903ce396a1df0</field>
    <field name="keywords">loadPlugins KParts::PartBase::loadPlugins KParts::PartBase loadPlugins KParts::PartBase::loadPlugins KParts::PartBase loadPlugins KParts::PartBase::loadPlugins KParts::PartBase loadPlugins KParts::PartBase::loadPlugins KParts::PartBase loadPlugins KParts::PartBase::loadPlugins KParts::PartBase</field>
    <field name="text">If you call this method in an already constructed GUI like when the user has changed which plugins are enabled you need to add the new plugins to the KXMLGUIFactory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartBase::setComponentData</field>
    <field name="args">(const KAboutData &amp;componentData)</field>
    <field name="url">classKParts_1_1PartBase.html#ac9088a2da884260f9dafa07513ae9af1</field>
    <field name="keywords">setComponentData KParts::PartBase::setComponentData KParts::PartBase setComponentData KParts::PartBase::setComponentData KParts::PartBase setComponentData KParts::PartBase::setComponentData KParts::PartBase setComponentData KParts::PartBase::setComponentData KParts::PartBase setComponentData KParts::PartBase::setComponentData KParts::PartBase</field>
    <field name="text">Call this first in the inherited class constructor because it loads the i18n catalogs</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartBase::setComponentData</field>
    <field name="args">(const KAboutData &amp;pluginData, bool loadPlugins)</field>
    <field name="url">classKParts_1_1PartBase.html#ad508aa84a1e2109e5dcdabe3bdde3af8</field>
    <field name="keywords">setComponentData KParts::PartBase::setComponentData KParts::PartBase setComponentData KParts::PartBase::setComponentData KParts::PartBase setComponentData KParts::PartBase::setComponentData KParts::PartBase setComponentData KParts::PartBase::setComponentData KParts::PartBase setComponentData KParts::PartBase::setComponentData KParts::PartBase</field>
    <field name="text">Call this first in the inherited class constructor because it loads the i18n catalogs It is recommended to call setComponentData with loadPlugins set to false and to load plugins at the end of your part constructor in the case of KParts::MainWindow plugins are automatically loaded in createGUI anyway so set loadPlugins to false for KParts::MainWindow as well</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartBase::setPluginInterfaceVersion</field>
    <field name="args">(int version)</field>
    <field name="url">classKParts_1_1PartBase.html#a5a9ed59560edb848e787c4b3cee878b1</field>
    <field name="keywords">setPluginInterfaceVersion KParts::PartBase::setPluginInterfaceVersion KParts::PartBase setPluginInterfaceVersion KParts::PartBase::setPluginInterfaceVersion KParts::PartBase setPluginInterfaceVersion KParts::PartBase::setPluginInterfaceVersion KParts::PartBase setPluginInterfaceVersion KParts::PartBase::setPluginInterfaceVersion KParts::PartBase setPluginInterfaceVersion KParts::PartBase::setPluginInterfaceVersion KParts::PartBase</field>
    <field name="text">Increase both numbers every time a binary incompatible change in the application s plugin interface is made version the interface version that plugins must have in order to be loaded For a KParts::Part call this before setComponentData For a KParts::MainWindow call this before createGUI</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartBase::setPluginLoadingMode</field>
    <field name="args">(PluginLoadingMode loadingMode)</field>
    <field name="url">classKParts_1_1PartBase.html#a49e418df2d77f5f915aa7addfeec455e</field>
    <field name="keywords">setPluginLoadingMode KParts::PartBase::setPluginLoadingMode KParts::PartBase setPluginLoadingMode KParts::PartBase::setPluginLoadingMode KParts::PartBase setPluginLoadingMode KParts::PartBase::setPluginLoadingMode KParts::PartBase setPluginLoadingMode KParts::PartBase::setPluginLoadingMode KParts::PartBase setPluginLoadingMode KParts::PartBase::setPluginLoadingMode KParts::PartBase</field>
    <field name="text">loadingMode see PluginLoadingMode For a KParts::Part call this before setComponentData For a KParts::MainWindow call this before createGUI</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::PartBase::PluginLoadingMode</field>
    <field name="url">classKParts_1_1PartBase.html#a73b04eba759c3505ac722b2ceaaa8b76</field>
    <field name="keywords">PluginLoadingMode KParts::PartBase::PluginLoadingMode KParts::PartBase PluginLoadingMode KParts::PartBase::PluginLoadingMode KParts::PartBase PluginLoadingMode KParts::PartBase::PluginLoadingMode KParts::PartBase PluginLoadingMode KParts::PartBase::PluginLoadingMode KParts::PartBase PluginLoadingMode KParts::PartBase::PluginLoadingMode KParts::PartBase</field>
    <field name="text">The value in the KConfig object of the KAboutData object always overrides LoadPlugins and LoadPluginsIfEnabled</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::PartBase::DoNotLoadPlugins</field>
    <field name="url">classKParts_1_1PartBase.html#a73b04eba759c3505ac722b2ceaaa8b76a3ffe0a5005d5e1d00b4d3fd8c4d51a1e</field>
    <field name="keywords">DoNotLoadPlugins KParts::PartBase::DoNotLoadPlugins KParts::PartBase DoNotLoadPlugins KParts::PartBase::DoNotLoadPlugins KParts::PartBase DoNotLoadPlugins KParts::PartBase::DoNotLoadPlugins KParts::PartBase DoNotLoadPlugins KParts::PartBase::DoNotLoadPlugins KParts::PartBase DoNotLoadPlugins KParts::PartBase::DoNotLoadPlugins KParts::PartBase</field>
    <field name="text">Don t load any plugins at all</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::PartBase::LoadPlugins</field>
    <field name="url">classKParts_1_1PartBase.html#a73b04eba759c3505ac722b2ceaaa8b76aeff505f5627f1539e03730d042e39522</field>
    <field name="keywords">LoadPlugins KParts::PartBase::LoadPlugins KParts::PartBase LoadPlugins KParts::PartBase::LoadPlugins KParts::PartBase LoadPlugins KParts::PartBase::LoadPlugins KParts::PartBase LoadPlugins KParts::PartBase::LoadPlugins KParts::PartBase LoadPlugins KParts::PartBase::LoadPlugins KParts::PartBase</field>
    <field name="text">Load new plugins automatically Can be overridden by the plugin if it sets EnabledByDefault false in the corresponding desktop file</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::PartBase::LoadPluginsIfEnabled</field>
    <field name="url">classKParts_1_1PartBase.html#a73b04eba759c3505ac722b2ceaaa8b76aeaf6ca999ef635e22e3f52234226e931</field>
    <field name="keywords">LoadPluginsIfEnabled KParts::PartBase::LoadPluginsIfEnabled KParts::PartBase LoadPluginsIfEnabled KParts::PartBase::LoadPluginsIfEnabled KParts::PartBase LoadPluginsIfEnabled KParts::PartBase::LoadPluginsIfEnabled KParts::PartBase LoadPluginsIfEnabled KParts::PartBase::LoadPluginsIfEnabled KParts::PartBase LoadPluginsIfEnabled KParts::PartBase::LoadPluginsIfEnabled KParts::PartBase</field>
    <field name="text">New plugins are disabled by default Can be overridden by the plugin if it sets EnabledByDefault true in the corresponding desktop file</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::OpenUrlArguments</field>
    <field name="url">classKParts_1_1OpenUrlArguments.html</field>
    <field name="keywords">OpenUrlArguments</field>
    <field name="text">For instance reload() indicates that the url should be loaded from the network even if it matches the current url of the part All setter methods in this class are for the class that calls openUrl usually the hosting application all the getter methods are for the part</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::OpenUrlArguments::actionRequestedByUser</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1OpenUrlArguments.html#abd9e74a1158df3cba7891370c2302528</field>
    <field name="keywords">actionRequestedByUser KParts::OpenUrlArguments::actionRequestedByUser KParts::OpenUrlArguments</field>
    <field name="text">False if the URL should be opened due to an external event like javascript popups or automatic redirections This is true by default 4.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::OpenUrlArguments::metaData</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1OpenUrlArguments.html#a50ea6eeacb4b93758a19e678071c7942</field>
    <field name="keywords">metaData KParts::OpenUrlArguments::metaData KParts::OpenUrlArguments</field>
    <field name="text">This method can be used to add or retrieve metadata KIO::TransferJob etc</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::OpenUrlArguments::mimeType</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1OpenUrlArguments.html#a48d610cf52d43303cba3c15865c33be5</field>
    <field name="keywords">mimeType KParts::OpenUrlArguments::mimeType KParts::OpenUrlArguments</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::OpenUrlArguments::reload</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1OpenUrlArguments.html#ad97f2508f4aa720704af0e85eb3ed4c2</field>
    <field name="keywords">reload KParts::OpenUrlArguments::reload KParts::OpenUrlArguments</field>
    <field name="text">true to indicate that the part should reload the URL i.e the cache shouldn t be used forced reload</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::OpenUrlArguments::setReload</field>
    <field name="args">(bool b)</field>
    <field name="url">classKParts_1_1OpenUrlArguments.html#a2b9d7ac959db074ef06697de8f4e7a14</field>
    <field name="keywords">setReload KParts::OpenUrlArguments::setReload KParts::OpenUrlArguments</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::OpenUrlArguments::xOffset</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1OpenUrlArguments.html#a33abc6853f32dc9d9a0c19778af2c787</field>
    <field name="keywords">xOffset KParts::OpenUrlArguments::xOffset KParts::OpenUrlArguments</field>
    <field name="text">This is saved into the history and restored when going back in the history</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::OpenUrlArguments::yOffset</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1OpenUrlArguments.html#a9f390a732bb66282908df5bcf1e33d4c</field>
    <field name="keywords">yOffset KParts::OpenUrlArguments::yOffset KParts::OpenUrlArguments</field>
    <field name="text">This is saved into the history and restored when going back in the history</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::OpenUrlEvent</field>
    <field name="url">classKParts_1_1OpenUrlEvent.html</field>
    <field name="keywords">OpenUrlEvent</field>
    <field name="text">Applications can use this event to send this information to interested plugins The event should be sent before opening the URL in the part so that the plugins can use part() url() to get the old URL</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::Part</field>
    <field name="url">classKParts_1_1Part.html</field>
    <field name="keywords">Part</field>
    <field name="text">A is a GUI component featuring A widget embeddedable in any application GUI elements that will be merged in the user interface menubars toolbars About the widget Note that KParts::Part does not inherit QWidget This is due to the fact that the will probably not be a mere QWidget but an elaborate one That s why when implementing your KParts::Part or derived you should call KParts::Part::setWidget() in your constructor About the GUI elements Those elements trigger actions defined by the part action() The layout of the actions in the GUI is defined by an XML file setXMLFile() See also ReadOnlyPart and ReadWritePart which define the framework for a part and for an part Use Part directly only if your part doesn t fit into those</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::Part::setStatusBarText</field>
    <field name="args">(const QString &amp;text)</field>
    <field name="url">classKParts_1_1Part.html#a809740a79edf0fa0bbe1dd982a6c4d35</field>
    <field name="keywords">setStatusBarText KParts::Part::setStatusBarText KParts::Part setStatusBarText KParts::Part::setStatusBarText KParts::Part setStatusBarText KParts::Part::setStatusBarText KParts::Part</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::Part::setWindowCaption</field>
    <field name="args">(const QString &amp;caption)</field>
    <field name="url">classKParts_1_1Part.html#a00982292ef3d8b80dedeb5fed2376099</field>
    <field name="keywords">setWindowCaption KParts::Part::setWindowCaption KParts::Part setWindowCaption KParts::Part::setWindowCaption KParts::Part setWindowCaption KParts::Part::setWindowCaption KParts::Part</field>
    <field name="text">this signal has only an effect on the window title if window title handling is enabled KParts::MainWindow::setWindowTitleHandling</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::Part</field>
    <field name="args">(QObject *parent=0)</field>
    <field name="url">classKParts_1_1Part.html#aee55422c867e8e10fd3f713a74249357</field>
    <field name="keywords">Part KParts::Part::Part KParts::Part Part KParts::Part::Part KParts::Part Part KParts::Part::Part KParts::Part</field>
    <field name="text">parent Parent object of the part</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::~Part</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1Part.html#a1710faabd37355a2a4380b904ea37642</field>
    <field name="keywords">KParts::Part::~Part KParts::Part KParts::Part::~Part KParts::Part KParts::Part::~Part KParts::Part</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::embed</field>
    <field name="args">(QWidget *parentWidget)</field>
    <field name="url">classKParts_1_1Part.html#ae4a4d92e9f945a898755bbffde3dd0d5</field>
    <field name="keywords">embed KParts::Part::embed KParts::Part embed KParts::Part::embed KParts::Part embed KParts::Part::embed KParts::Part</field>
    <field name="text">You don t need to do this if you created the widget with the correct parent widget this is just a QWidget::reparent() Note that the Part is still the holder of the QWidget meaning that if you delete the Part then the widget gets destroyed as well and vice-versa This method is not recommended since creating the widget with the correct parent is simpler anyway</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::hitTest</field>
    <field name="args">(QWidget *widget, const QPoint &amp;globalPos)</field>
    <field name="url">classKParts_1_1Part.html#a1a008e13075413a25e6005dffb9a1bd4</field>
    <field name="keywords">hitTest KParts::Part::hitTest KParts::Part hitTest KParts::Part::hitTest KParts::Part hitTest KParts::Part::hitTest KParts::Part</field>
    <field name="text">This is called by the part manager to ask whether a part should be activated when clicking somewhere In most cases the default implementation is enough Reimplement this if your part has child parts in some areas like in khtml or koffice widget the part widget being clicked usually the same as widget() except in koffice globalPos the mouse coordinates in global coordinates</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::iconLoader</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1Part.html#ad0590a12e373494880f51eb459cf238c</field>
    <field name="keywords">iconLoader KParts::Part::iconLoader KParts::Part iconLoader KParts::Part::iconLoader KParts::Part iconLoader KParts::Part::iconLoader KParts::Part</field>
    <field name="text">icons installed into this part s own directories as opposed to standard kde icons Make sure to call setComponentData before calling iconLoader</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::isSelectable</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1Part.html#a33f9cf35587d5e7072eb435cfa1e6066</field>
    <field name="keywords">isSelectable KParts::Part::isSelectable KParts::Part isSelectable KParts::Part::isSelectable KParts::Part isSelectable KParts::Part::isSelectable KParts::Part</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::manager</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1Part.html#ae8752779c1e3664796ddd9ebf51b0c64</field>
    <field name="keywords">manager KParts::Part::manager KParts::Part manager KParts::Part::manager KParts::Part manager KParts::Part::manager KParts::Part</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::setAutoDeletePart</field>
    <field name="args">(bool autoDeletePart)</field>
    <field name="url">classKParts_1_1Part.html#aa645dcacf25b33211e9d64e9eb65a29a</field>
    <field name="keywords">setAutoDeletePart KParts::Part::setAutoDeletePart KParts::Part setAutoDeletePart KParts::Part::setAutoDeletePart KParts::Part setAutoDeletePart KParts::Part::setAutoDeletePart KParts::Part</field>
    <field name="text">The hosting application can call setAutoDeletePart(false) to disable this behavior to be able to delete the widget and then the part independently This is a method for the hosting application only Part subclasses should never call this</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::setAutoDeleteWidget</field>
    <field name="args">(bool autoDeleteWidget)</field>
    <field name="url">classKParts_1_1Part.html#ad2a08cc79d77952e389780eb63b68052</field>
    <field name="keywords">setAutoDeleteWidget KParts::Part::setAutoDeleteWidget KParts::Part setAutoDeleteWidget KParts::Part::setAutoDeleteWidget KParts::Part setAutoDeleteWidget KParts::Part::setAutoDeleteWidget KParts::Part</field>
    <field name="text">The hosting application can call setAutoDeleteWidget(false) to disable this behavior given that the widget is usually deleted by its parent widget anyway This is a method for the hosting application only Part subclasses should never call this</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::setManager</field>
    <field name="args">(PartManager *manager)</field>
    <field name="url">classKParts_1_1Part.html#a6e2136ed1fc42f74f36472f00dd759bb</field>
    <field name="keywords">setManager KParts::Part::setManager KParts::Part setManager KParts::Part::setManager KParts::Part setManager KParts::Part::setManager KParts::Part</field>
    <field name="text">Used by the part manager</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::setSelectable</field>
    <field name="args">(bool selectable)</field>
    <field name="url">classKParts_1_1Part.html#a770220e0beb227ba286b09df93ce3d15</field>
    <field name="keywords">setSelectable KParts::Part::setSelectable KParts::Part setSelectable KParts::Part::setSelectable KParts::Part setSelectable KParts::Part::setSelectable KParts::Part</field>
    <field name="text">selectable Indicates whether the part is selectable or not</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::widget</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1Part.html#a2d2efd56fe23904104c48dc56371c03d</field>
    <field name="keywords">widget KParts::Part::widget KParts::Part widget KParts::Part::widget KParts::Part widget KParts::Part::widget KParts::Part</field>
    <field name="text">The widget defined by this part set by setWidget()</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KParts::Part::slotWidgetDestroyed</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1Part.html#ae6789f7047afd8d87ade140428cbe7b3</field>
    <field name="keywords">slotWidgetDestroyed KParts::Part::slotWidgetDestroyed KParts::Part slotWidgetDestroyed KParts::Part::slotWidgetDestroyed KParts::Part slotWidgetDestroyed KParts::Part::slotWidgetDestroyed KParts::Part</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::customEvent</field>
    <field name="args">(QEvent *event) override</field>
    <field name="url">classKParts_1_1Part.html#a5774787704b5ea74ac8d23a7a5adc2bb</field>
    <field name="keywords">customEvent KParts::Part::customEvent KParts::Part customEvent KParts::Part::customEvent KParts::Part customEvent KParts::Part::customEvent KParts::Part</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::guiActivateEvent</field>
    <field name="args">(GUIActivateEvent *event)</field>
    <field name="url">classKParts_1_1Part.html#aac6f064a320fa83b31bf67520df3761f</field>
    <field name="keywords">guiActivateEvent KParts::Part::guiActivateEvent KParts::Part</field>
    <field name="text">Reimplement this if you don t want to reimplement event and test for the event yourself or even install an event filter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::hostContainer</field>
    <field name="args">(const QString &amp;containerName)</field>
    <field name="url">classKParts_1_1Part.html#a79d27796d0a5fb6b1be321b8367b0e7e</field>
    <field name="keywords">hostContainer KParts::Part::hostContainer KParts::Part hostContainer KParts::Part::hostContainer KParts::Part hostContainer KParts::Part::hostContainer KParts::Part</field>
    <field name="text">a container widget owned by the Part s GUI</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::loadPlugins</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1Part.html#a95c41d68c9667995a86cd142f1cd14de</field>
    <field name="keywords">loadPlugins KParts::Part::loadPlugins KParts::Part loadPlugins KParts::Part::loadPlugins KParts::Part loadPlugins KParts::Part::loadPlugins KParts::Part</field>
    <field name="text">Normally you want to call this at the end of the part constructor if you used setComponentData(componentData, false) 4.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::partActivateEvent</field>
    <field name="args">(PartActivateEvent *event)</field>
    <field name="url">classKParts_1_1Part.html#ab268f00ee4e3984a2ea21c364c09681f</field>
    <field name="keywords">partActivateEvent KParts::Part::partActivateEvent KParts::Part partActivateEvent KParts::Part::partActivateEvent KParts::Part partActivateEvent KParts::Part::partActivateEvent KParts::Part</field>
    <field name="text">Reimplement this if you don t want to reimplement event and test for the event yourself or even install an event filter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::partSelectEvent</field>
    <field name="args">(PartSelectEvent *event)</field>
    <field name="url">classKParts_1_1Part.html#a20573e8db0c4f08d3ff04422df51b461</field>
    <field name="keywords">partSelectEvent KParts::Part::partSelectEvent KParts::Part partSelectEvent KParts::Part::partSelectEvent KParts::Part partSelectEvent KParts::Part::partSelectEvent KParts::Part</field>
    <field name="text">Reimplement this if you don t want to reimplement event and test for the event yourself or even install an event filter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Part::setWidget</field>
    <field name="args">(QWidget *widget)</field>
    <field name="url">classKParts_1_1Part.html#a399fea8c8f8d4ee321118d1ec85775db</field>
    <field name="keywords">setWidget KParts::Part::setWidget KParts::Part setWidget KParts::Part::setWidget KParts::Part setWidget KParts::Part::setWidget KParts::Part</field>
    <field name="text">Call this in the Part-inherited class constructor</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::PartActivateEvent</field>
    <field name="url">classKParts_1_1PartActivateEvent.html</field>
    <field name="keywords">PartActivateEvent</field>
    <field name="text">Each time the active part changes it will send first a PartActivateEvent with activated false part oldActivePart widget oldActiveWidget and then another PartActivateEvent with activated true part newPart widget newWidget KParts::Part::partActivateEvent</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::PartBase</field>
    <field name="url">classKParts_1_1PartBase.html</field>
    <field name="keywords">PartBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::PartManager</field>
    <field name="url">classKParts_1_1PartManager.html</field>
    <field name="keywords">PartManager</field>
    <field name="text">Applications that want to embed parts without merging GUIs only use a KParts::PartManager Those who want to merge GUIs use a KParts::MainWindow for example in addition to a part manager Parts know about the part manager to add nested parts to it See also KParts::Part::manager() and KParts::Part::setManager()</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::PartManager::Reason</field>
    <field name="url">classKParts_1_1PartManager.html#a2210acbbe8638df29b112c48e4d9cfb3</field>
    <field name="keywords">Reason KParts::PartManager::Reason KParts::PartManager</field>
    <field name="text">To test for use ReasonLeftClick NoReason usually means explicit activation with setActivePart</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::PartManager::SelectionPolicy</field>
    <field name="url">classKParts_1_1PartManager.html#a7db25fb7e7f91548fa15566b3af4bb34</field>
    <field name="keywords">SelectionPolicy KParts::PartManager::SelectionPolicy KParts::PartManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::PartManager::activePartChanged</field>
    <field name="args">(KParts::Part *newPart)</field>
    <field name="url">classKParts_1_1PartManager.html#a9142dcbea26a78a91d4075a223594e3d</field>
    <field name="keywords">activePartChanged KParts::PartManager::activePartChanged KParts::PartManager</field>
    <field name="text">setActivePart()</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::PartManager::partAdded</field>
    <field name="args">(KParts::Part *part)</field>
    <field name="url">classKParts_1_1PartManager.html#a0ddd1f334b7c397dcb2b11b418604a3f</field>
    <field name="keywords">partAdded KParts::PartManager::partAdded KParts::PartManager</field>
    <field name="text">addPart()</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::PartManager::partRemoved</field>
    <field name="args">(KParts::Part *part)</field>
    <field name="url">classKParts_1_1PartManager.html#afacc58788662a9e2eb73cc9418d442d8</field>
    <field name="keywords">partRemoved KParts::PartManager::partRemoved KParts::PartManager</field>
    <field name="text">removePart()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::PartManager</field>
    <field name="args">(QWidget *parent)</field>
    <field name="url">classKParts_1_1PartManager.html#a657476303c48dde9899e2cae30992b1f</field>
    <field name="keywords">PartManager KParts::PartManager::PartManager KParts::PartManager</field>
    <field name="text">parent The toplevel widget window dialog the partmanager should monitor for activation/selection events</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::PartManager</field>
    <field name="args">(QWidget *topLevel, QObject *parent)</field>
    <field name="url">classKParts_1_1PartManager.html#a1b27480e6562e748d2d935c59fee83ea</field>
    <field name="keywords">PartManager KParts::PartManager::PartManager KParts::PartManager</field>
    <field name="text">topLevel The toplevel widget window dialog the partmanager should monitor for activation/selection events parent The parent QObject</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::activationButtonMask</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1PartManager.html#a0698b986d0da6a3c8b69930d566a04ec</field>
    <field name="keywords">activationButtonMask KParts::PartManager::activationButtonMask KParts::PartManager</field>
    <field name="text">setActivationButtonMask</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::activePart</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1PartManager.html#a61316b59da1590f8f736078bd9e9ca7b</field>
    <field name="keywords">activePart KParts::PartManager::activePart KParts::PartManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::activeWidget</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1PartManager.html#a339ddeed8cab9fa609b24b1a1a2aa61b</field>
    <field name="keywords">activeWidget KParts::PartManager::activeWidget KParts::PartManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::addManagedTopLevelWidget</field>
    <field name="args">(const QWidget *topLevel)</field>
    <field name="url">classKParts_1_1PartManager.html#afbfa76cfcc8b4b9912fb798ca1184b62</field>
    <field name="keywords">addManagedTopLevelWidget KParts::PartManager::addManagedTopLevelWidget KParts::PartManager</field>
    <field name="text">Usually a PartManager only listens for events for activation/selection for one toplevel widget and its children the one specified in the constructor Sometimes however like for example when using the KDE dockwidget library it is necessary to extend this</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::addPart</field>
    <field name="args">(Part *part, bool setActive=true)</field>
    <field name="url">classKParts_1_1PartManager.html#aeb3d51831fac7978fe6779b95266dbc5</field>
    <field name="keywords">addPart KParts::PartManager::addPart KParts::PartManager</field>
    <field name="text">Sets it to the active part automatically if setActive is true default</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::allowNestedParts</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1PartManager.html#a04c81c8b4346d28f21a8c87804050784</field>
    <field name="keywords">allowNestedParts KParts::PartManager::allowNestedParts KParts::PartManager</field>
    <field name="text">setAllowNestedParts</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::eventFilter</field>
    <field name="args">(QObject *obj, QEvent *ev) override</field>
    <field name="url">classKParts_1_1PartManager.html#a3d55ca6f6701b59cca40136631c9d755</field>
    <field name="keywords">eventFilter KParts::PartManager::eventFilter KParts::PartManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::ignoreScrollBars</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1PartManager.html#a56a3302db9e021597322ec5fe4a6c39e</field>
    <field name="keywords">ignoreScrollBars KParts::PartManager::ignoreScrollBars KParts::PartManager</field>
    <field name="text">setIgnoreScrollBars</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::parts</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1PartManager.html#a8a0dc8557ef168d7910364707b0ce1c8</field>
    <field name="keywords">parts KParts::PartManager::parts KParts::PartManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::reason</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1PartManager.html#a52fdbc45e587ee66a6dc99d882ecf270</field>
    <field name="keywords">reason KParts::PartManager::reason KParts::PartManager</field>
    <field name="text">the reason for the last activePartChanged signal emitted Reason</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::removeManagedTopLevelWidget</field>
    <field name="args">(const QWidget *topLevel)</field>
    <field name="url">classKParts_1_1PartManager.html#aeb33df2081fe50cdcd6272921aa33bdd</field>
    <field name="keywords">removeManagedTopLevelWidget KParts::PartManager::removeManagedTopLevelWidget KParts::PartManager</field>
    <field name="text">addManagedTopLevelWidget</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::removePart</field>
    <field name="args">(Part *part)</field>
    <field name="url">classKParts_1_1PartManager.html#a167a0221dd0dbdff7e259e3be9eb3cba</field>
    <field name="keywords">removePart KParts::PartManager::removePart KParts::PartManager</field>
    <field name="text">Sets the active part to 0 if part is the activePart()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::replacePart</field>
    <field name="args">(Part *oldPart, Part *newPart, bool setActive=true)</field>
    <field name="url">classKParts_1_1PartManager.html#a7eb0fe00720363cf9b5c7a368b317779</field>
    <field name="keywords">replacePart KParts::PartManager::replacePart KParts::PartManager</field>
    <field name="text">This is an optimised version of removePart addPart</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::selectedPart</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1PartManager.html#ad8dfe171b719066fdd7434c2a0cbd244</field>
    <field name="keywords">selectedPart KParts::PartManager::selectedPart KParts::PartManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::selectedWidget</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1PartManager.html#a9b34dc25af741706469b174b49b28eb3</field>
    <field name="keywords">selectedWidget KParts::PartManager::selectedWidget KParts::PartManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::selectionPolicy</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1PartManager.html#ada9a2e31714fdb72038934cb2e53d4cf</field>
    <field name="keywords">selectionPolicy KParts::PartManager::selectionPolicy KParts::PartManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::setActivationButtonMask</field>
    <field name="args">(short int buttonMask)</field>
    <field name="url">classKParts_1_1PartManager.html#a1db711b8ec907e877dbc443cb5766874</field>
    <field name="keywords">setActivationButtonMask KParts::PartManager::setActivationButtonMask KParts::PartManager</field>
    <field name="text">By default it reacts on all mouse buttons LMB/MMB/RMB buttonMask a combination of Qt::ButtonState values e.g Qt::LeftButton Qt::MidButton</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::setActivePart</field>
    <field name="args">(Part *part, QWidget *widget=0)</field>
    <field name="url">classKParts_1_1PartManager.html#a55ded6525a6cee17d796f1d2aa4d4092</field>
    <field name="keywords">setActivePart KParts::PartManager::setActivePart KParts::PartManager</field>
    <field name="text">The active part receives activation events widget can be used to specify which widget was responsible for the activation This is important if you have multiple views for a document/part like in KOffice</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::setAllowNestedParts</field>
    <field name="args">(bool allow)</field>
    <field name="url">classKParts_1_1PartManager.html#af2080b98531d980a28248f9249aeccfe</field>
    <field name="keywords">setAllowNestedParts KParts::PartManager::setAllowNestedParts KParts::PartManager</field>
    <field name="text">This is a property the shell has to set/specify Per default we assume that the shell cannot handle nested parts However in case of a KOffice shell for example we allow nested parts A Part is nested a child part if its parent object inherits KParts::Part If a child part is activated and nested parts are not allowed/handled then the top parent part in the tree is activated</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::setIgnoreScrollBars</field>
    <field name="args">(bool ignore)</field>
    <field name="url">classKParts_1_1PartManager.html#a042e63414928bdda99a34ac71b74d5f6</field>
    <field name="keywords">setIgnoreScrollBars KParts::PartManager::setIgnoreScrollBars KParts::PartManager</field>
    <field name="text">If the partmanager ignores them then clicking on the scrollbars of a non-active/non-selected part will not change the selection or activation state The default value is false read scrollbars are NOT ignored</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::setSelectedPart</field>
    <field name="args">(Part *part, QWidget *widget=0)</field>
    <field name="url">classKParts_1_1PartManager.html#af09d9efcf5c3ab4ff3c234d3cef0aec9</field>
    <field name="keywords">setSelectedPart KParts::PartManager::setSelectedPart KParts::PartManager</field>
    <field name="text">The selected part receives selection events widget can be used to specify which widget was responsible for the selection This is important if you have multiple views for a document/part like in KOffice</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::setSelectionPolicy</field>
    <field name="args">(SelectionPolicy policy)</field>
    <field name="url">classKParts_1_1PartManager.html#a86fd76d971c0d7707e795e84f49da898</field>
    <field name="keywords">setSelectionPolicy KParts::PartManager::setSelectionPolicy KParts::PartManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KParts::PartManager::slotManagedTopLevelWidgetDestroyed</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1PartManager.html#abd0c651ab3014ab805b518f1fa570572</field>
    <field name="keywords">slotManagedTopLevelWidgetDestroyed KParts::PartManager::slotManagedTopLevelWidgetDestroyed KParts::PartManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KParts::PartManager::slotObjectDestroyed</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1PartManager.html#aa1fe880348e22dd2fc24ad9981e9e88f</field>
    <field name="keywords">slotObjectDestroyed KParts::PartManager::slotObjectDestroyed KParts::PartManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KParts::PartManager::slotWidgetDestroyed</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1PartManager.html#addb6b1f857a9daa8f272afa291a1d1eb</field>
    <field name="keywords">slotWidgetDestroyed KParts::PartManager::slotWidgetDestroyed KParts::PartManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::PartManager::setIgnoreExplictFocusRequests</field>
    <field name="args">(bool)</field>
    <field name="url">classKParts_1_1PartManager.html#ad856335eeec779d702b796677cd4528f</field>
    <field name="keywords">setIgnoreExplictFocusRequests KParts::PartManager::setIgnoreExplictFocusRequests KParts::PartManager</field>
    <field name="text">By default this option is set to false Set it to true to prevent the part from sending explicit set focus requests to the client application 4.10</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::PartSelectEvent</field>
    <field name="url">classKParts_1_1PartSelectEvent.html</field>
    <field name="keywords">PartSelectEvent</field>
    <field name="text">KParts::PartManager::setSelectionPolicy</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::Plugin</field>
    <field name="url">classKParts_1_1Plugin.html</field>
    <field name="keywords">Plugin</field>
    <field name="text">The XML of those plugins looks exactly like of the shell or parts with one small difference The document tag should have an additional attribute named and contain the name of the library implementing the plugin If you want this plugin to be used by a part you need to install the rc file under the directory KDEDIR/share/apps usually where instancename is the name of the part s instance You should also install a desktop file with the same name KPluginInfo For a tutorial on how to write plugins see</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Plugin::Plugin</field>
    <field name="args">(QObject *parent=0)</field>
    <field name="url">classKParts_1_1Plugin.html#a503f1b81d74d4c085cb0e165832e901a</field>
    <field name="keywords">Plugin KParts::Plugin::Plugin KParts::Plugin</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Plugin::~Plugin</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1Plugin.html#aee4cc1864a2afa84a9ad935153f3fe39</field>
    <field name="keywords">KParts::Plugin::~Plugin KParts::Plugin</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Plugin::localXMLFile</field>
    <field name="args">() const override</field>
    <field name="url">classKParts_1_1Plugin.html#a4bda4ecd4b8fc594757df150e2c83da3</field>
    <field name="keywords">localXMLFile KParts::Plugin::localXMLFile KParts::Plugin</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Plugin::xmlFile</field>
    <field name="args">() const override</field>
    <field name="url">classKParts_1_1Plugin.html#a836f1796d73c47db7c0cd637a6bd7686</field>
    <field name="keywords">xmlFile KParts::Plugin::xmlFile KParts::Plugin</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Plugin::loadPlugins</field>
    <field name="args">(QObject *parent, const QString &amp;instance)</field>
    <field name="url">classKParts_1_1Plugin.html#a97318b5990912f6171d2a8da8f2aeb00</field>
    <field name="keywords">loadPlugins KParts::Plugin::loadPlugins KParts::Plugin</field>
    <field name="text">It is recommended to use the last loadPlugins method instead to support enabling and disabling of plugins</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Plugin::loadPlugins</field>
    <field name="args">(QObject *parent, const QList&lt; PluginInfo &gt; &amp;pluginInfos)</field>
    <field name="url">classKParts_1_1Plugin.html#a8363c7e6e997758390fef1afade6da24</field>
    <field name="keywords">loadPlugins KParts::Plugin::loadPlugins KParts::Plugin</field>
    <field name="text">It is recommended to use the last loadPlugins method instead to support enabling and disabling of plugins</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Plugin::loadPlugins</field>
    <field name="args">(QObject *parent, const QList&lt; PluginInfo &gt; &amp;pluginInfos, const QString &amp;instance)</field>
    <field name="url">classKParts_1_1Plugin.html#a2e43021b93f534a5ef8317daa2771ebf</field>
    <field name="keywords">loadPlugins KParts::Plugin::loadPlugins KParts::Plugin</field>
    <field name="text">It is recommended to use the last loadPlugins method instead to support enabling and disabling of plugins</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Plugin::loadPlugins</field>
    <field name="args">(QObject *parent, KXMLGUIClient *parentGUIClient, const QString &amp;instance, bool enableNewPluginsByDefault=true, int interfaceVersionRequired=0)</field>
    <field name="url">classKParts_1_1Plugin.html#a248f1215c1a452065c77c6ba35885153</field>
    <field name="keywords">loadPlugins KParts::Plugin::loadPlugins KParts::Plugin</field>
    <field name="text">This method uses the KConfig object of the given instance to find out which plugins are enabled and which are disabled What happens by default i.e for new plugins that are not in that config file is controlled by enableNewPluginsByDefault It can be overridden by the plugin if it sets the X-KDE-PluginInfo-EnabledByDefault key in the desktop file with the same name as the rc file If a disabled plugin is already loaded it will be removed from the GUI factory and deleted If you change the binary interface offered by your part you can avoid crashes from old plugins lying around by setting X-KDE-InterfaceVersion 2 in the desktop files of the plugins and passing 2 to interfaceVersionRequired so that the old plugins are not loaded Increase both numbers every time a binary incompatible change in the application s plugin interface is made This method is automatically called by KParts::Part and by KParts::MainWindow PartBase::setPluginLoadingMode PartBase::setPluginInterfaceVersion If you call this method in an already constructed GUI like when the user has changed which plugins are enabled you need to add the new plugins to the KXMLGUIFactory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::Plugin::pluginObjects</field>
    <field name="args">(QObject *parent)</field>
    <field name="url">classKParts_1_1Plugin.html#a259e811d2fdba1b7862fc5f30e5d7e28</field>
    <field name="keywords">pluginObjects KParts::Plugin::pluginObjects KParts::Plugin</field>
    <field name="text">This functions basically iterates over the children of the given object and returns those that inherit from KParts::Plugin</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::ReadOnlyPart</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html</field>
    <field name="keywords">ReadOnlyPart</field>
    <field name="text">This class takes care of network transparency for you in the simplest way downloading to a temporary file then letting the part load from the temporary file To use the built-in network transparency you only need to implement openFile() not openUrl() To implement network transparency differently e.g for progressive loading like a web browser does for instance or to prevent network transparency but why would you do that you can override openUrl() KParts Application can use the signals to show feedback while the URL is being loaded ReadOnlyPart handles the window caption by setting it to the current URL set in openUrl() and each time the part is activated If you want another caption set it in openFile() and if the part might ever be used with a part manager in guiActivateEvent()</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::ReadOnlyPart::canceled</field>
    <field name="args">(const QString &amp;errMsg)</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#ab1083f7c30e868d66e1f326b94851d8c</field>
    <field name="keywords">canceled KParts::ReadOnlyPart::canceled KParts::ReadOnlyPart canceled KParts::ReadOnlyPart::canceled KParts::ReadOnlyPart</field>
    <field name="text">errMsg the error message empty if the user canceled the loading voluntarily</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::ReadOnlyPart::completed</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a7dbe7a0dd64ed631d7d7fc763167de31</field>
    <field name="keywords">completed KParts::ReadOnlyPart::completed KParts::ReadOnlyPart completed KParts::ReadOnlyPart::completed KParts::ReadOnlyPart</field>
    <field name="text">Hosting apps will want to know when the process of loading the data is finished so that they can access the data when everything is loaded</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::ReadOnlyPart::completed</field>
    <field name="args">(bool pendingAction)</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a48ddc679f4b303102237f8e33b29c904</field>
    <field name="keywords">completed KParts::ReadOnlyPart::completed KParts::ReadOnlyPart completed KParts::ReadOnlyPart::completed KParts::ReadOnlyPart</field>
    <field name="text">An example of this is the meta-refresh tags on web pages used to reload/redirect after a certain period of time This signal is useful if you want to give the user the ability to cancel such pending actions pendingAction true if a pending action exists false otherwise</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::ReadOnlyPart::started</field>
    <field name="args">(KIO::Job *)</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a1839e6f2741b7fca77cd4b04b5acdc6d</field>
    <field name="keywords">started KParts::ReadOnlyPart::started KParts::ReadOnlyPart started KParts::ReadOnlyPart::started KParts::ReadOnlyPart</field>
    <field name="text">If using a KIO::Job it sets the job in the signal so that progress information can be shown Otherwise job is 0</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::ReadOnlyPart::urlChanged</field>
    <field name="args">(const QUrl &amp;url)</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a4407ef7bb67f18b963dc062bd8040e66</field>
    <field name="keywords">urlChanged KParts::ReadOnlyPart::urlChanged KParts::ReadOnlyPart urlChanged KParts::ReadOnlyPart::urlChanged KParts::ReadOnlyPart</field>
    <field name="text">4.10</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KParts::ReadOnlyPart::openUrl</field>
    <field name="args">(const QUrl &amp;url)</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a2d7ce3e9a4d68e36f1e2f6cb016670da</field>
    <field name="keywords">openUrl KParts::ReadOnlyPart::openUrl KParts::ReadOnlyPart openUrl KParts::ReadOnlyPart::openUrl KParts::ReadOnlyPart</field>
    <field name="text">Otherwise reimplement openFile() only If you reimplement it don t forget to set the caption usually with emit setWindowCaption url.prettyUrl()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::ReadOnlyPart</field>
    <field name="args">(QObject *parent=0)</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a874486b9af2a3135e84df9b3dcd569f7</field>
    <field name="keywords">ReadOnlyPart KParts::ReadOnlyPart::ReadOnlyPart KParts::ReadOnlyPart ReadOnlyPart KParts::ReadOnlyPart::ReadOnlyPart KParts::ReadOnlyPart</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::~ReadOnlyPart</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a9e6ac2807367409576ee2f4b369118e7</field>
    <field name="keywords">KParts::ReadOnlyPart::~ReadOnlyPart KParts::ReadOnlyPart KParts::ReadOnlyPart::~ReadOnlyPart KParts::ReadOnlyPart</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::arguments</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a56da65f13e8071941e8119eaee85eace</field>
    <field name="keywords">arguments KParts::ReadOnlyPart::arguments KParts::ReadOnlyPart arguments KParts::ReadOnlyPart::arguments KParts::ReadOnlyPart</field>
    <field name="text">the arguments that were used to open this URL</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::browserExtension</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a18975c92231cd2f902055cd8ca837106</field>
    <field name="keywords">browserExtension KParts::ReadOnlyPart::browserExtension KParts::ReadOnlyPart browserExtension KParts::ReadOnlyPart::browserExtension KParts::ReadOnlyPart</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::closeStream</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#aa828fc225a2f32563624053f80f40257</field>
    <field name="keywords">closeStream KParts::ReadOnlyPart::closeStream KParts::ReadOnlyPart closeStream KParts::ReadOnlyPart::closeStream KParts::ReadOnlyPart</field>
    <field name="text">With some data types text html closeStream might never actually be called in the case of continuous streams for instance plain text or HTML data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::closeUrl</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#ab189d22c6f431b8b892cbfe8a4d0f946</field>
    <field name="keywords">closeUrl KParts::ReadOnlyPart::closeUrl KParts::ReadOnlyPart</field>
    <field name="text">document for instance when switching to another url note that openUrl() calls it automatically in this case If the current URL is not fully loaded yet aborts loading Deletes the temporary file used when the url is remote always true but the return value exists for reimplementations</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::isProgressInfoEnabled</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a1066f7ec170ffba4aef5e94604a27fe0</field>
    <field name="keywords">isProgressInfoEnabled KParts::ReadOnlyPart::isProgressInfoEnabled KParts::ReadOnlyPart isProgressInfoEnabled KParts::ReadOnlyPart::isProgressInfoEnabled KParts::ReadOnlyPart</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::openStream</field>
    <field name="args">(const QString &amp;mimeType, const QUrl &amp;url)</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a22cb48e2c6ab9d7b4b40a0585fefb405</field>
    <field name="keywords">openStream KParts::ReadOnlyPart::openStream KParts::ReadOnlyPart openStream KParts::ReadOnlyPart::openStream KParts::ReadOnlyPart</field>
    <field name="text">This is an alternative to openUrl which allows the user of the part to load the data itself and send it progressively to the part mimeType the type of data that is going to be sent to this part url the URL representing this data Although not directly used every ReadOnlyPart has a URL see url() so this simply sets it true if the part supports progressive loading and accepts data false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::setArguments</field>
    <field name="args">(const OpenUrlArguments &amp;arguments)</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#aab893a47747cad8bb29f1f95316140de</field>
    <field name="keywords">setArguments KParts::ReadOnlyPart::setArguments KParts::ReadOnlyPart setArguments KParts::ReadOnlyPart::setArguments KParts::ReadOnlyPart</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::setProgressInfoEnabled</field>
    <field name="args">(bool show)</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a2d8af6ecaf7d70e2670af6420fee7af3</field>
    <field name="keywords">setProgressInfoEnabled KParts::ReadOnlyPart::setProgressInfoEnabled KParts::ReadOnlyPart setProgressInfoEnabled KParts::ReadOnlyPart::setProgressInfoEnabled KParts::ReadOnlyPart</field>
    <field name="text">Use this if you provide another way of displaying progress info e.g a statusbar using the signals emitted by this class and/or those emitted by the Job given by started</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::url</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a7738e261780c6ac5d9de08b069afe543</field>
    <field name="keywords">url KParts::ReadOnlyPart::url KParts::ReadOnlyPart url KParts::ReadOnlyPart::url KParts::ReadOnlyPart</field>
    <field name="text">The current URL</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::writeStream</field>
    <field name="args">(const QByteArray &amp;data)</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#aea4c1981f0f9bea442450895a43b4bcb</field>
    <field name="keywords">writeStream KParts::ReadOnlyPart::writeStream KParts::ReadOnlyPart writeStream KParts::ReadOnlyPart::writeStream KParts::ReadOnlyPart</field>
    <field name="text">openStream must have been called previously and must have returned true true if the data was accepted by the part If false is returned the application should stop sending data and doesn t have to call closeStream</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::abortLoad</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#aa23121934cc4a6419a85d911142b2abc</field>
    <field name="keywords">abortLoad KParts::ReadOnlyPart::abortLoad KParts::ReadOnlyPart abortLoad KParts::ReadOnlyPart::abortLoad KParts::ReadOnlyPart</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::guiActivateEvent</field>
    <field name="args">(GUIActivateEvent *event) override</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#af6b4ad8bc010422aba489ca8a68deba6</field>
    <field name="keywords">guiActivateEvent KParts::ReadOnlyPart::guiActivateEvent KParts::ReadOnlyPart guiActivateEvent KParts::ReadOnlyPart::guiActivateEvent KParts::ReadOnlyPart</field>
    <field name="text">Technical note this is done with GUIActivateEvent and not with PartActivateEvent because it s handled by the mainwindow which gets the even after the PartActivateEvent events have been sent</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::isLocalFileTemporary</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a577bf2ace32aedddca4d3fc4a43cc7db</field>
    <field name="keywords">isLocalFileTemporary KParts::ReadOnlyPart::isLocalFileTemporary KParts::ReadOnlyPart isLocalFileTemporary KParts::ReadOnlyPart::isLocalFileTemporary KParts::ReadOnlyPart</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::localFilePath</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#ade4d077c20fcc1e4b0ddaf760f010b2a</field>
    <field name="keywords">localFilePath KParts::ReadOnlyPart::localFilePath KParts::ReadOnlyPart localFilePath KParts::ReadOnlyPart::localFilePath KParts::ReadOnlyPart</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::openFile</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a83657296ba8c8b17592a1a16b7fb8e1a</field>
    <field name="keywords">openFile KParts::ReadOnlyPart::openFile KParts::ReadOnlyPart openFile KParts::ReadOnlyPart::openFile KParts::ReadOnlyPart</field>
    <field name="text">The default implementation is simply return false</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::setLocalFilePath</field>
    <field name="args">(const QString &amp;localFilePath)</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a50bbf4b06d031cb046102981c1ff1e27</field>
    <field name="keywords">setLocalFilePath KParts::ReadOnlyPart::setLocalFilePath KParts::ReadOnlyPart setLocalFilePath KParts::ReadOnlyPart::setLocalFilePath KParts::ReadOnlyPart</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::setLocalFileTemporary</field>
    <field name="args">(bool temp)</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a84452e9039419eb69ede96ec6e741e21</field>
    <field name="keywords">setLocalFileTemporary KParts::ReadOnlyPart::setLocalFileTemporary KParts::ReadOnlyPart setLocalFileTemporary KParts::ReadOnlyPart::setLocalFileTemporary KParts::ReadOnlyPart</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadOnlyPart::setUrl</field>
    <field name="args">(const QUrl &amp;url)</field>
    <field name="url">classKParts_1_1ReadOnlyPart.html#a0be6bf63d9ddb3ad42d347c274678ada</field>
    <field name="keywords">setUrl KParts::ReadOnlyPart::setUrl KParts::ReadOnlyPart setUrl KParts::ReadOnlyPart::setUrl KParts::ReadOnlyPart</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::ReadWritePart</field>
    <field name="url">classKParts_1_1ReadWritePart.html</field>
    <field name="keywords">ReadWritePart</field>
    <field name="text">This class handles network transparency for you Anything that can open a URL allow modifications and save to the same URL or a different one A read-write part can be set to read-only mode using setReadWrite() Part writers Any part inheriting ReadWritePart should check isReadWrite before allowing any action that modifies the part The part probably wants to reimplement setReadWrite disable those actions Don t forget to call the parent setReadWrite</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::ReadWritePart::sigQueryClose</field>
    <field name="args">(bool *handled, bool *abortClosing)</field>
    <field name="url">classKParts_1_1ReadWritePart.html#adb7caee3c74e13b22dd922f67a68f830</field>
    <field name="keywords">sigQueryClose KParts::ReadWritePart::sigQueryClose KParts::ReadWritePart</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KParts::ReadWritePart::save</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1ReadWritePart.html#abd2f5a4ce68f32b6f21635b7f97ce63a</field>
    <field name="keywords">save KParts::ReadWritePart::save KParts::ReadWritePart</field>
    <field name="text">You can connect this to the action Calls saveFile() and saveToUrl() no need to reimplement</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KParts::ReadWritePart::setModified</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1ReadWritePart.html#af62573db9600db7c877a05f57d81f3e8</field>
    <field name="keywords">setModified KParts::ReadWritePart::setModified KParts::ReadWritePart</field>
    <field name="text">This is a slot for convenience since it simply calls setModified(true) so that you can connect it to a signal like textChanged()</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KParts::ReadWritePart::waitSaveComplete</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1ReadWritePart.html#a93827f9da0f3fdcdbb2c53710afe43ae</field>
    <field name="keywords">waitSaveComplete KParts::ReadWritePart::waitSaveComplete KParts::ReadWritePart</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadWritePart::ReadWritePart</field>
    <field name="args">(QObject *parent=0)</field>
    <field name="url">classKParts_1_1ReadWritePart.html#a457ff937481a4b2d10c136ae90bae8fc</field>
    <field name="keywords">ReadWritePart KParts::ReadWritePart::ReadWritePart KParts::ReadWritePart</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadWritePart::~ReadWritePart</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1ReadWritePart.html#ad69aa70703adae4f0973a002b3054e47</field>
    <field name="keywords">KParts::ReadWritePart::~ReadWritePart KParts::ReadWritePart</field>
    <field name="text">In KMainWindow::queryClose() for instance they should allow closing only if the return value of closeUrl() was true This allows to cancel</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadWritePart::closeUrl</field>
    <field name="args">() override</field>
    <field name="url">classKParts_1_1ReadWritePart.html#ae9d19e3faf1c9a79678653d34e36246b</field>
    <field name="keywords">closeUrl KParts::ReadWritePart::closeUrl KParts::ReadWritePart</field>
    <field name="text">document for instance when switching to another url note that openUrl() calls it automatically in this case If the current URL is not fully loaded yet aborts loading If isModified() queryClose() will be called false on cancel</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadWritePart::closeUrl</field>
    <field name="args">(bool promptToSave)</field>
    <field name="url">classKParts_1_1ReadWritePart.html#aac29e29d109c5f0a12898d0b746a5a72</field>
    <field name="keywords">closeUrl KParts::ReadWritePart::closeUrl KParts::ReadWritePart</field>
    <field name="text">For example if you call queryClose() from KMainWindow::queryClose() you would not want to prompt again when closing the url Equivalent to promptToSave closeUrl() ReadOnlyPart::closeUrl()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadWritePart::isModified</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1ReadWritePart.html#a7f8c59e327e0a2ffbfecb961e00685c1</field>
    <field name="keywords">isModified KParts::ReadWritePart::isModified KParts::ReadWritePart</field>
    <field name="text">true if the document has been modified</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadWritePart::isReadWrite</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1ReadWritePart.html#ae338c1d8c5a6a0531a0e4414aa2e6f02</field>
    <field name="keywords">isReadWrite KParts::ReadWritePart::isReadWrite KParts::ReadWritePart</field>
    <field name="text">true if the part is in read-write mode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadWritePart::queryClose</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1ReadWritePart.html#a51ead3990f91223ed2ebeb8dfa0d60ec</field>
    <field name="keywords">queryClose KParts::ReadWritePart::queryClose KParts::ReadWritePart</field>
    <field name="text">This method is meant to be called from KMainWindow::queryClose() It will also be called from closeUrl() true if closeUrl() can be called without the user losing important data false if the user chooses to cancel</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadWritePart::saveAs</field>
    <field name="args">(const QUrl &amp;url)</field>
    <field name="url">classKParts_1_1ReadWritePart.html#a58f440b315af918d2c9bb2aa5ff182a4</field>
    <field name="keywords">saveAs KParts::ReadWritePart::saveAs KParts::ReadWritePart</field>
    <field name="text">Calls save() no need to reimplement</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadWritePart::setModified</field>
    <field name="args">(bool modified)</field>
    <field name="url">classKParts_1_1ReadWritePart.html#a8d6fe0168095b3333dc80884888f02f2</field>
    <field name="keywords">setModified KParts::ReadWritePart::setModified KParts::ReadWritePart</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadWritePart::setReadWrite</field>
    <field name="args">(bool readwrite=true)</field>
    <field name="url">classKParts_1_1ReadWritePart.html#a09288e0b4b17a2790e5375763d7bf72c</field>
    <field name="keywords">setReadWrite KParts::ReadWritePart::setReadWrite KParts::ReadWritePart</field>
    <field name="text">readwrite set to true to enable readwrite mode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadWritePart::saveFile</field>
    <field name="args">()=0</field>
    <field name="url">classKParts_1_1ReadWritePart.html#a599af24081c3dc1c261c04dce1de4f41</field>
    <field name="keywords">saveFile KParts::ReadWritePart::saveFile KParts::ReadWritePart</field>
    <field name="text">You need to implement it to save to the local file The framework takes care of re-uploading afterwards true on success false on failure On failure the function should inform the user about the problem with an appropriate message box Standard error messages can be constructed using KIO::buildErrorString() in combination with the error codes defined in kio/global.h</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ReadWritePart::saveToUrl</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1ReadWritePart.html#a6b8f01446db1864e1e2c7430fdb2522e</field>
    <field name="keywords">saveToUrl KParts::ReadWritePart::saveToUrl KParts::ReadWritePart</field>
    <field name="text">Uploads the file if url is remote This will emit started() and either completed() or canceled() in case you want to provide feedback true on success false on failure</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::ScriptableExtension</field>
    <field name="url">classKParts_1_1ScriptableExtension.html</field>
    <field name="keywords">ScriptableExtension</field>
    <field name="text">See Script Value Types for how values are passed to/from various methods here 4.5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::childObject</field>
    <field name="args">(QObject *obj)</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#a2c00711c6fd9f186204b2e7b2b05d9f3</field>
    <field name="keywords">childObject KParts::ScriptableExtension::childObject KParts::ScriptableExtension</field>
    <field name="text">Convenience method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::adapterFromLiveConnect</field>
    <field name="args">(QObject *parentObj, LiveConnectExtension *oldApi)</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#abf008da85bad132f4aa0271be83b189e</field>
    <field name="keywords">adapterFromLiveConnect KParts::ScriptableExtension::adapterFromLiveConnect KParts::ScriptableExtension</field>
    <field name="text">The bridge s parent will be the parentObj</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::setHost</field>
    <field name="args">(ScriptableExtension *host)</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#ac643fa084835c8fc07abd9072c1a079c</field>
    <field name="keywords">setHost KParts::ScriptableExtension::setHost KParts::ScriptableExtension</field>
    <field name="text">It s the responsibility of a parent part to call this method on all of its kids ScriptableExtensions as soon as possible</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::host</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#a44f2c6c0c8eb8401570cc0d4a421c293</field>
    <field name="keywords">host KParts::ScriptableExtension::host KParts::ScriptableExtension</field>
    <field name="text">May be 0 if setHost was not called or not call yet</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::rootObject</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#ae7cda27315d93b72f10ef307b54518da</field>
    <field name="keywords">rootObject KParts::ScriptableExtension::rootObject KParts::ScriptableExtension</field>
    <field name="text">For example for an HTML part it would represent a Window object May be undefined or null</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::enclosingObject</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#a1654d1f14b8f3184c4a2c4e382826aee</field>
    <field name="keywords">enclosingObject KParts::ScriptableExtension::enclosingObject KParts::ScriptableExtension</field>
    <field name="text">For example if the host is an HTML part it would return a DOM node of an object handled by this part May be undefined or null Implemented in terms of objectForKid</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::ScriptableExtension::ScriptLanguage</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#ae24e9c2e1e132201ddc092b8b069be23</field>
    <field name="keywords">ScriptLanguage KParts::ScriptableExtension::ScriptLanguage KParts::ScriptableExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::ScriptableExtension::EnumLimit</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#ae24e9c2e1e132201ddc092b8b069be23a0609cfd03f0802c4af4ccae88f385f67</field>
    <field name="keywords">EnumLimit KParts::ScriptableExtension::EnumLimit KParts::ScriptableExtension</field>
    <field name="text">also known as JavaScript</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::callAsFunction</field>
    <field name="args">(ScriptableExtension *callerPrincipal, quint64 objId, const ArgList &amp;args)</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#a41f258c2cccfd31f87b8d60980e5a2aa</field>
    <field name="keywords">callAsFunction KParts::ScriptableExtension::callAsFunction KParts::ScriptableExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::callFunctionReference</field>
    <field name="args">(ScriptableExtension *callerPrincipal, quint64 objId, const QString &amp;f, const ArgList &amp;args)</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#a99084f24f74962637bf45281ed32c0bb</field>
    <field name="keywords">callFunctionReference KParts::ScriptableExtension::callFunctionReference KParts::ScriptableExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::callAsConstructor</field>
    <field name="args">(ScriptableExtension *callerPrincipal, quint64 objId, const ArgList &amp;args)</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#a14991a56d4b905c0448cc1deb8a213a4</field>
    <field name="keywords">callAsConstructor KParts::ScriptableExtension::callAsConstructor KParts::ScriptableExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::hasProperty</field>
    <field name="args">(ScriptableExtension *callerPrincipal, quint64 objId, const QString &amp;propName)</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#ae64716ad4cefb3777187319d25606b9c</field>
    <field name="keywords">hasProperty KParts::ScriptableExtension::hasProperty KParts::ScriptableExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::get</field>
    <field name="args">(ScriptableExtension *callerPrincipal, quint64 objId, const QString &amp;propName)</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#ad968f9b9f7534c454e78633af2a10afd</field>
    <field name="keywords">get KParts::ScriptableExtension::get KParts::ScriptableExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::put</field>
    <field name="args">(ScriptableExtension *callerPrincipal, quint64 objId, const QString &amp;propName, const QVariant &amp;value)</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#a8f511ed16298fd9be98e6f847183c8eb</field>
    <field name="keywords">put KParts::ScriptableExtension::put KParts::ScriptableExtension</field>
    <field name="text">Returns true on success</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::removeProperty</field>
    <field name="args">(ScriptableExtension *callerPrincipal, quint64 objId, const QString &amp;propName)</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#a5090ab0afbbcc803c72dc794f7ca2333</field>
    <field name="keywords">removeProperty KParts::ScriptableExtension::removeProperty KParts::ScriptableExtension</field>
    <field name="text">Returns true on success</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::enumerateProperties</field>
    <field name="args">(ScriptableExtension *callerPrincipal, quint64 objId, QStringList *result)</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#af7c4dfc8abfbfd8124b33c008a87be71</field>
    <field name="keywords">enumerateProperties KParts::ScriptableExtension::enumerateProperties KParts::ScriptableExtension</field>
    <field name="text">Returns true on success</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::setException</field>
    <field name="args">(ScriptableExtension *callerPrincipal, const QString &amp;message)</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#a089d0b759be7b52bd456d0afd60b9c9e</field>
    <field name="keywords">setException KParts::ScriptableExtension::setException KParts::ScriptableExtension</field>
    <field name="text">Returns true on success</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::evaluateScript</field>
    <field name="args">(ScriptableExtension *callerPrincipal, quint64 contextObjectId, const QString &amp;code, ScriptLanguage language=ECMAScript)</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#a956bfc7f44f8da93096b6ee40561604c</field>
    <field name="keywords">evaluateScript KParts::ScriptableExtension::evaluateScript KParts::ScriptableExtension</field>
    <field name="text">The parameter language specifies the language to execute it as Use isScriptLanguageSupported to check for support</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::isScriptLanguageSupported</field>
    <field name="args">(ScriptLanguage lang) const</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#a1ff4db8fe6525a7b855ed126185f544c</field>
    <field name="keywords">isScriptLanguageSupported KParts::ScriptableExtension::isScriptLanguageSupported KParts::ScriptableExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::acquire</field>
    <field name="args">(quint64 objid)</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#abb87ddfdc7a9088996ae8ac83d1bbcfd</field>
    <field name="keywords">acquire KParts::ScriptableExtension::acquire KParts::ScriptableExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::release</field>
    <field name="args">(quint64 objid)</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#a00a64a6f3650f510d92ce8dbc21da67f</field>
    <field name="keywords">release KParts::ScriptableExtension::release KParts::ScriptableExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::acquireValue</field>
    <field name="args">(const QVariant &amp;v)</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#aa41c2be19933cfa8470ee0aeaf8879e2</field>
    <field name="keywords">acquireValue KParts::ScriptableExtension::acquireValue KParts::ScriptableExtension</field>
    <field name="text">a copy of the passed in value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::ScriptableExtension::releaseValue</field>
    <field name="args">(const QVariant &amp;v)</field>
    <field name="url">classKParts_1_1ScriptableExtension.html#a3cbf441c3bb2ccc3d734031c345e92e8</field>
    <field name="keywords">releaseValue KParts::ScriptableExtension::releaseValue KParts::ScriptableExtension</field>
    <field name="text">a copy of the passed in value</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">KParts::ScriptableExtension::Exception</field>
    <field name="url">structKParts_1_1ScriptableExtension_1_1Exception.html</field>
    <field name="keywords">Exception</field>
    <field name="text">May not be passed in as a parameter only returned</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">KParts::ScriptableExtension::Exception::message</field>
    <field name="url">structKParts_1_1ScriptableExtension_1_1Exception.html#aa077475854a1ee79ac8905a2e07be407</field>
    <field name="keywords">message KParts::ScriptableExtension::Exception::message KParts::ScriptableExtension::Exception</field>
    <field name="text">This should be assumed to be low-level in particular it might not be translated and should only be displayed in low-level debugging tools and the like</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">KParts::ScriptableExtension::FunctionRef</field>
    <field name="url">structKParts_1_1ScriptableExtension_1_1FunctionRef.html</field>
    <field name="keywords">FunctionRef</field>
    <field name="text">Essentially if you have a base.field(something) call the base needs to be passed as the this to the function and these references can be used to resolve that</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">KParts::ScriptableExtension::Null</field>
    <field name="url">structKParts_1_1ScriptableExtension_1_1Null.html</field>
    <field name="keywords">Null</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">KParts::ScriptableExtension::Object</field>
    <field name="url">structKParts_1_1ScriptableExtension_1_1Object.html</field>
    <field name="keywords">Object</field>
    <field name="text">Objects are reference-counted with the following protocol 1 Return values from methods rootObject() enclosingObject() and get() are already acquired by the producer so the consumer should release them when done 2 During a call the caller guarantees that all the arguments will be live for the calls duration but the callee must acquire them if it stores it for longer than that acquire acquireValue release releaseValue</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">KParts::ScriptableExtension::Undefined</field>
    <field name="url">structKParts_1_1ScriptableExtension_1_1Undefined.html</field>
    <field name="keywords">Undefined</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::SelectorInterface</field>
    <field name="url">classKParts_1_1SelectorInterface.html</field>
    <field name="keywords">SelectorInterface</field>
    <field name="text">Example const QList&lt;SelectorInterface::Element&gt; elements selectorInterface- querySelectorAll alternate</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KParts::SelectorInterface::QueryMethod</field>
    <field name="url">classKParts_1_1SelectorInterface.html#a90fe11660661a423709a52c91a969dce</field>
    <field name="keywords">QueryMethod KParts::SelectorInterface::QueryMethod KParts::SelectorInterface</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::SelectorInterface::None</field>
    <field name="url">classKParts_1_1SelectorInterface.html#a90fe11660661a423709a52c91a969dcea75dbd3a4d444c3a5f3ec94c2c20c2322</field>
    <field name="keywords">None KParts::SelectorInterface::None KParts::SelectorInterface</field>
    <field name="text">Quering is not possible</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::SelectorInterface::EntireContent</field>
    <field name="url">classKParts_1_1SelectorInterface.html#a90fe11660661a423709a52c91a969dceac39e4ace6e5f56e828ee81b7d1589d4d</field>
    <field name="keywords">EntireContent KParts::SelectorInterface::EntireContent KParts::SelectorInterface</field>
    <field name="text">Query or can query the entire content</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KParts::SelectorInterface::SelectedContent</field>
    <field name="url">classKParts_1_1SelectorInterface.html#a90fe11660661a423709a52c91a969dcea98dd4d0cb11e9068d9c017a6c666ce83</field>
    <field name="keywords">SelectedContent KParts::SelectorInterface::SelectedContent KParts::SelectorInterface</field>
    <field name="text">Query or can query only the user selected content if any</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::SelectorInterface::~SelectorInterface</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1SelectorInterface.html#a01573870d1fdd7143defe395acd359fd</field>
    <field name="keywords">KParts::SelectorInterface::~SelectorInterface KParts::SelectorInterface</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::SelectorInterface::querySelector</field>
    <field name="args">(const QString &amp;query, QueryMethod method) const =0</field>
    <field name="url">classKParts_1_1SelectorInterface.html#a704329531ffbb8abe80c97daaea01b4d</field>
    <field name="keywords">querySelector KParts::SelectorInterface::querySelector KParts::SelectorInterface</field>
    <field name="text">Note that since the returned item is static snapshot i.e not live it will not be updated when the document changes If the quering method specified by method is not supported or cannot be handled then a null element is returned supportedQueryMethods QueryMethod</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::SelectorInterface::querySelectorAll</field>
    <field name="args">(const QString &amp;query, QueryMethod method) const =0</field>
    <field name="url">classKParts_1_1SelectorInterface.html#afe199d585952b4aeb1717122753616b3</field>
    <field name="keywords">querySelectorAll KParts::SelectorInterface::querySelectorAll KParts::SelectorInterface</field>
    <field name="text">Note that since the returned list is static snapshot i.e not live it will not be updated when the document changes If the quering method specified by method is not supported or cannot be handled then an empty list is returned supportedQueryMethods QueryMethod</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::SelectorInterface::supportedQueryMethods</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1SelectorInterface.html#a9dacc1505b77025c221a718ee64753c6</field>
    <field name="keywords">supportedQueryMethods KParts::SelectorInterface::supportedQueryMethods KParts::SelectorInterface</field>
    <field name="text">By default this function returns None QueryMethod</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::StatusBarExtension</field>
    <field name="url">classKParts_1_1StatusBarExtension.html</field>
    <field name="keywords">StatusBarExtension</field>
    <field name="text">Every part can use this class to customize the statusbar as long as it is active Add items via addStatusBarItem and remove an item with removeStatusBarItem IMPORTANT do NOT add any items immediately after constructing the extension Give the application time to set the statusbar in the extension if necessary</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::StatusBarExtension::addStatusBarItem</field>
    <field name="args">(QWidget *widget, int stretch, bool permanent)</field>
    <field name="url">classKParts_1_1StatusBarExtension.html#aff7f43b3ad6d835b95440fb849aec498</field>
    <field name="keywords">addStatusBarItem KParts::StatusBarExtension::addStatusBarItem KParts::StatusBarExtension</field>
    <field name="text">If you use this method instead of using statusBar() directly this extension will take care of removing the items when the parts GUI is deactivated and will re-add them when it is reactivated The parameters are the same as QStatusBar::addWidget() Note that you can t use KStatusBar methods inserting text items by id but you can create a KStatusBarLabel with a dummy id instead and use it directly in order to get the same look and feel widget the widget to add stretch the stretch factor 0 for a minimum size permanent passed to QStatusBar::addWidget as the bool Note that the item isn t really permanent though it goes away when the part is unactivated This simply controls whether temporary messages hide the widget and whether it s added to the left or to the right side that the widget does not technically become a child of the StatusBarExtension in a QObject sense However it will be deleted when the StatusBarExtension is deleted IMPORTANT do NOT add any items immediately after constructing the extension Give the application time to set the statusbar in the extension if necessary</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::StatusBarExtension::eventFilter</field>
    <field name="args">(QObject *watched, QEvent *ev) override</field>
    <field name="url">classKParts_1_1StatusBarExtension.html#a03fbcb219341e685f833874554db01b9</field>
    <field name="keywords">eventFilter KParts::StatusBarExtension::eventFilter KParts::StatusBarExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::StatusBarExtension::removeStatusBarItem</field>
    <field name="args">(QWidget *widget)</field>
    <field name="url">classKParts_1_1StatusBarExtension.html#a7ca2fab9855765fa917b373d7b828922</field>
    <field name="keywords">removeStatusBarItem KParts::StatusBarExtension::removeStatusBarItem KParts::StatusBarExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::StatusBarExtension::setStatusBar</field>
    <field name="args">(QStatusBar *status)</field>
    <field name="url">classKParts_1_1StatusBarExtension.html#a5a166bb2d7421164540040f07ae5b2bd</field>
    <field name="keywords">setStatusBar KParts::StatusBarExtension::setStatusBar KParts::StatusBarExtension</field>
    <field name="text">If it doesn t do this the statusbar used will be the one of the KMainWindow in which the part is embedded Konqueror uses this to assign a view-statusbar to the part The part should never call this method!</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::StatusBarExtension::statusBar</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1StatusBarExtension.html#a000309678c1c95baf3d433498b4b67d3</field>
    <field name="keywords">statusBar KParts::StatusBarExtension::statusBar KParts::StatusBarExtension</field>
    <field name="text">the statusbar of the KMainWindow in which this part is currently embedded WARNING this could return 0L</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::StatusBarExtension::childObject</field>
    <field name="args">(QObject *obj)</field>
    <field name="url">classKParts_1_1StatusBarExtension.html#ab3b379fbe78a969493bf464aa5fd16c5</field>
    <field name="keywords">childObject KParts::StatusBarExtension::childObject KParts::StatusBarExtension</field>
    <field name="text">Convenience method</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::TextExtension</field>
    <field name="url">classKParts_1_1TextExtension.html</field>
    <field name="keywords">TextExtension</field>
    <field name="text">For instance the text-to-speech plugin uses this to speak the whole text from the part or the selected text The translation plugin uses it for translating the selected text and so on 4.6</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KParts::TextExtension::selectionChanged</field>
    <field name="args">()</field>
    <field name="url">classKParts_1_1TextExtension.html#a4d5e1cb28d1faa2dbccef3bb41c058f9</field>
    <field name="keywords">selectionChanged KParts::TextExtension::selectionChanged KParts::TextExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::TextExtension::completeText</field>
    <field name="args">(Format format) const</field>
    <field name="url">classKParts_1_1TextExtension.html#a94bfd640a5ec9d348f63686882f554fe</field>
    <field name="keywords">completeText KParts::TextExtension::completeText KParts::TextExtension</field>
    <field name="text">If the format is not supported the part must return an empty string</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::TextExtension::currentPage</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1TextExtension.html#acfa732fce2f56ec7c28e6ea2397d6684</field>
    <field name="keywords">currentPage KParts::TextExtension::currentPage KParts::TextExtension</field>
    <field name="text">Otherwise returns 0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::TextExtension::findText</field>
    <field name="args">(const QString &amp;string, KFind::SearchOptions options) const</field>
    <field name="url">classKParts_1_1TextExtension.html#aef108ddeb8d99dab02ddba87dec0526e</field>
    <field name="keywords">findText KParts::TextExtension::findText KParts::TextExtension</field>
    <field name="text">If any text matches string then it will be selected/highlighted To find the next matching text simply call this function again with the same search text until it returns false To clear a selection just pass an empty string Note that parts that implement this extension might not support all the options available in KFind::SearchOptions</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::TextExtension::hasSelection</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1TextExtension.html#a36404bf6dd994e509bec36ea4b5ad8b7</field>
    <field name="keywords">hasSelection KParts::TextExtension::hasSelection KParts::TextExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::TextExtension::pageCount</field>
    <field name="args">() const</field>
    <field name="url">classKParts_1_1TextExtension.html#abdbd61e124bb78bcc37261dbd83d3c5e</field>
    <field name="keywords">pageCount KParts::TextExtension::pageCount KParts::TextExtension</field>
    <field name="text">Otherwise returns 0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::TextExtension::pageText</field>
    <field name="args">(Format format) const</field>
    <field name="url">classKParts_1_1TextExtension.html#a3e5bb85cf4bfdcf410f64e19ed350785</field>
    <field name="keywords">pageText KParts::TextExtension::pageText KParts::TextExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::TextExtension::selectedText</field>
    <field name="args">(Format format) const</field>
    <field name="url">classKParts_1_1TextExtension.html#a5bf13fab6c672a9461151ff965937df2</field>
    <field name="keywords">selectedText KParts::TextExtension::selectedText KParts::TextExtension</field>
    <field name="text">If the format is not supported the part must return an empty string</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KParts::TextExtension::childObject</field>
    <field name="args">(QObject *obj)</field>
    <field name="url">classKParts_1_1TextExtension.html#aea72f87a190bd3cb81b51fa0119aa958</field>
    <field name="keywords">childObject KParts::TextExtension::childObject KParts::TextExtension</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KParts::WindowArgs</field>
    <field name="url">classKParts_1_1WindowArgs.html</field>
    <field name="keywords">WindowArgs</field>
    <field name="text">The primary reason for this is the javascript window.open function</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">index</field>
    <field name="url">index.html</field>
    <field name="keywords"></field>
    <field name="text">KParts Plugin framework for user interface components Introduction This library implements the framework for KDE parts which are elaborate widgets with a user-interface defined in terms of actions menu items toolbar icons Usage If you are using CMake you need to have or similar in your CMakeLists.txt file and you need to link to KF5::Parts The main class is KParts::Part This or one of its subclasses is what authors of parts implement and how users of parts interact with them Applications wishing to embed a part need to inherit their main window from KParts::MainWindow and provide a so-called shell GUI which provides a basic skeleton GUI with part-independent functionality/actions Some KParts applications won t be specific to a given part but expect to be able to embed for instance all types of viewers out there For this the basic functionality of any viewer has been implemented in KParts::ReadOnlyPart which viewer-like parts should inherit from The same applies to KParts::ReadWritePart which is for editor-like parts You can add actions to an existing KParts app from defining the code for those actions in a shared library This mechanism is obviously called plugins and implemented by KParts::Plugin For a complete and very simple example of how to use KParts to display any kind of file i.e making a generic viewer see the documentation for KParts::ComponentFactory::createPartInstanceFromQuery</field>
  </doc>
</add>
