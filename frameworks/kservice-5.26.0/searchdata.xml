<?xml version="1.0" encoding="UTF-8"?>
<add>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KAutostartPrivate KAutostartPrivate df copyIfNeededChecked false KAutostartPrivate df copyIfNeeded QString name KDesktopFile df copyIfNeededChecked KAutostartPrivate::copyIfNeeded copyIfNeededChecked QString local QStandardPaths::writableLocation QStandardPaths::GenericConfigLocation QLatin1String name QFile::exists local QString global QStandardPaths::locate QStandardPaths::GenericConfigLocation QLatin1String name global isEmpty KDesktopFile newDf df copyTo local df newDf df KDesktopFile QStandardPaths::GenericConfigLocation QStringLiteral name copyIfNeededChecked</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">KAutostart::KAutostart QString entryName QObject parent QObject parent d new KAutostartPrivate entryName isEmpty d name QCoreApplication::applicationName d name entryName d name endsWith QLatin1String d name append QStringLiteral QString path QStandardPaths::locate QStandardPaths::GenericConfigLocation QStringLiteral d name path isEmpty d df KDesktopFile QStandardPaths::GenericConfigLocation QStringLiteral d name d copyIfNeededChecked d df KDesktopFile path KAutostart::~KAutostart d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text">KAutostart::setAutostarts autostart currentAutostartState d df desktopGroup readEntry currentAutostartState autostart d copyIfNeeded d df desktopGroup writeEntry autostart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00111</field>
    <field name="keywords"></field>
    <field name="text">KAutostart::autostarts QString environment Conditions check starts d df desktopGroup exists starts starts d df desktopGroup readEntry environment isEmpty starts starts checkAllowedEnvironment environment check CheckCommand starts starts d df tryExec check CheckCondition starts starts checkStartCondition starts KAutostart::checkStartCondition QString condition d df desktopGroup readEntry condition isEmpty QStringList list condition split QLatin1Char list count list isEmpty list isEmpty KConfig config list KConfig::NoGlobals KConfigGroup cg config list defaultValue list toLower QLatin1String cg readEntry list defaultValue</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00157</field>
    <field name="keywords"></field>
    <field name="text">KAutostart::checkAllowedEnvironment QString environment QStringList allowed allowedEnvironments allowed isEmpty allowed contains environment QStringList excluded excludedEnvironments excluded isEmpty excluded contains environment</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00172</field>
    <field name="keywords"></field>
    <field name="text">QString KAutostart::command d df desktopGroup readEntry QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00177</field>
    <field name="keywords"></field>
    <field name="text">KAutostart::setCommand QString command d df desktopGroup readEntry QString command d copyIfNeeded d df desktopGroup writeEntry command</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00187</field>
    <field name="keywords"></field>
    <field name="text">QString KAutostart::visibleName d df readName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00192</field>
    <field name="keywords"></field>
    <field name="text">KAutostart::setVisibleName QString name d df desktopGroup readEntry QString name d copyIfNeeded d df desktopGroup writeEntry name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00202</field>
    <field name="keywords"></field>
    <field name="text">KAutostart::isServiceRegistered QString entryName QString localDir QStandardPaths::writableLocation QStandardPaths::GenericConfigLocation QLatin1String QFile::exists localDir entryName QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00208</field>
    <field name="keywords"></field>
    <field name="text">QString KAutostart::commandToCheck d df desktopGroup readPathEntry QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00213</field>
    <field name="keywords"></field>
    <field name="text">KAutostart::setCommandToCheck QString exec d df desktopGroup readEntry QString exec d copyIfNeeded d df desktopGroup writePathEntry exec KAutostart::StartPhase readEntry KConfigGroup group key KAutostart::StartPhase aDefault QByteArray data group readEntry key QByteArray data isNull aDefault data data KAutostart::BaseDesktop data data KAutostart::DesktopServices data data KAutostart::Applications aDefault</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00244</field>
    <field name="keywords"></field>
    <field name="text">KAutostart::StartPhase KAutostart::startPhase readEntry d df desktopGroup Applications</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00249</field>
    <field name="keywords"></field>
    <field name="text">KAutostart::setStartPhase KAutostart::StartPhase phase QString data QStringLiteral phase BaseDesktop data QStringLiteral DesktopServices data QStringLiteral Applications d df desktopGroup readEntry QString data d copyIfNeeded d df desktopGroup writeEntry data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00272</field>
    <field name="keywords"></field>
    <field name="text">QStringList KAutostart::allowedEnvironments d df desktopGroup readXdgListEntry</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00277</field>
    <field name="keywords"></field>
    <field name="text">KAutostart::setAllowedEnvironments QStringList environments d df desktopGroup readEntry QStringList environments d copyIfNeeded d df desktopGroup writeXdgListEntry environments</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00287</field>
    <field name="keywords"></field>
    <field name="text">KAutostart::addToAllowedEnvironments QString environment QStringList envs allowedEnvironments envs contains environment envs append environment setAllowedEnvironments envs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00299</field>
    <field name="keywords"></field>
    <field name="text">KAutostart::removeFromAllowedEnvironments QString environment QStringList envs allowedEnvironments index envs indexOf environment index envs removeAt index setAllowedEnvironments envs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00312</field>
    <field name="keywords"></field>
    <field name="text">QStringList KAutostart::excludedEnvironments d df desktopGroup readXdgListEntry</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00317</field>
    <field name="keywords"></field>
    <field name="text">KAutostart::setExcludedEnvironments QStringList environments d df desktopGroup readEntry QStringList environments d copyIfNeeded d df desktopGroup writeXdgListEntry environments</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00327</field>
    <field name="keywords"></field>
    <field name="text">KAutostart::addToExcludedEnvironments QString environment QStringList envs excludedEnvironments envs contains environment envs append environment setExcludedEnvironments envs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00339</field>
    <field name="keywords"></field>
    <field name="text">KAutostart::removeFromExcludedEnvironments QString environment QStringList envs excludedEnvironments index envs indexOf environment index envs removeAt index setExcludedEnvironments envs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.cpp</field>
    <field name="url">kautostart_8cpp_source.html#l00352</field>
    <field name="keywords"></field>
    <field name="text">QString KAutostart::startAfter d df desktopGroup readEntry</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.h</field>
    <field name="url">kautostart_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KAutostartPrivate QStringList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.h</field>
    <field name="url">kautostart_8h_source.html#l00050</field>
    <field name="keywords"></field>
    <field name="text">KSERVICE_EXPORT KAutostart QObject Q_OBJECT KAutostart QString entryName QString QObject parent KAutostart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.h</field>
    <field name="url">kautostart_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">Condition NoConditions</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.h</field>
    <field name="url">kautostart_8h_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text">CheckCommand</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.h</field>
    <field name="url">kautostart_8h_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text">CheckCondition</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.h</field>
    <field name="url">kautostart_8h_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text">CheckAll Q_DECLARE_FLAGS Conditions Condition</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.h</field>
    <field name="url">kautostart_8h_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text">enum StartPhase</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.h</field>
    <field name="url">kautostart_8h_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text">BaseDesktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.h</field>
    <field name="url">kautostart_8h_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text">DesktopServices</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautostart.h</field>
    <field name="url">kautostart_8h_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text">Applications setAutostarts autostart autostarts QString environment QString Conditions check NoConditions QString command setCommand QString command QString visibleName setVisibleName QString entryName isServiceRegistered QString entryName QString commandToCheck setCommandToCheck QString exec StartPhase startPhase setStartPhase StartPhase phase QStringList allowedEnvironments setAllowedEnvironments QStringList environments addToAllowedEnvironments QString environment removeFromAllowedEnvironments QString environment QStringList excludedEnvironments setExcludedEnvironments QStringList environments addToExcludedEnvironments QString environment removeFromExcludedEnvironments QString environment QString startAfter checkAllowedEnvironment QString environment checkStartCondition KAutostartPrivate d Q_DECLARE_OPERATORS_FOR_FLAGS KAutostart::Conditions</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kbuildmimetypefactory.cpp</field>
    <field name="url">kbuildmimetypefactory_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KBuildMimeTypeFactory::KBuildMimeTypeFactory KSycoca db KMimeTypeFactory db m_resourceList KSycocaResourceList m_resourceList add QStringLiteral QStringLiteral KBuildMimeTypeFactory::~KBuildMimeTypeFactory m_resourceList KSycocaEntry::List KBuildMimeTypeFactory::allEntries assert sycoca isBuilding m_entryDict values KSycocaEntry KBuildMimeTypeFactory::createEntry QString file Q_ASSERT file startsWith QLatin1String pos file lastIndexOf pos QStringRef dirName file leftRef pos dirName QLatin1String dot file lastIndexOf dot QString name file left dot MimeTypeEntry e MimeTypeEntry file name e KBuildMimeTypeFactory::saveHeader QDataStream str KSycocaFactory::saveHeader str KBuildMimeTypeFactory::save QDataStream str KSycocaFactory::save str str qint32 endOfFactoryData str device pos saveHeader str str device seek endOfFactoryData KMimeTypeFactory::MimeTypeEntry::Ptr KBuildMimeTypeFactory::createFakeMimeType QString name QString file name KSycocaEntry::Ptr entry m_entryDict value file entry MimeTypeEntry e MimeTypeEntry file name entry e Q_ASSERT entry entry isValid addEntry entry KMimeTypeFactory::MimeTypeEntry::Ptr static_cast&lt;MimeTypeEntry *&gt; entry data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kbuildservicefactory.cpp</field>
    <field name="url">kbuildservicefactory_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KBuildServiceFactory::KBuildServiceFactory KServiceTypeFactory serviceTypeFactory KBuildMimeTypeFactory mimeTypeFactory KBuildServiceGroupFactory serviceGroupFactory KServiceFactory serviceTypeFactory sycoca m_nameMemoryHash m_relNameMemoryHash m_menuIdMemoryHash m_dupeDict m_serviceTypeFactory serviceTypeFactory m_mimeTypeFactory mimeTypeFactory m_serviceGroupFactory serviceGroupFactory m_resourceList KSycocaResourceList m_resourceList add QStringLiteral QStringLiteral m_nameDict KSycocaDict m_relNameDict KSycocaDict m_menuIdDict KSycocaDict KBuildServiceFactory::~KBuildServiceFactory m_resourceList KService::Ptr KBuildServiceFactory::findServiceByDesktopName QString name m_nameMemoryHash value name KService::Ptr KBuildServiceFactory::findServiceByDesktopPath QString name m_relNameMemoryHash value name KService::Ptr KBuildServiceFactory::findServiceByMenuId QString menuId m_menuIdMemoryHash value menuId KSycocaEntry KBuildServiceFactory::createEntry QString file Q_ASSERT file startsWith QLatin1String QStringRef name file midRef file lastIndexOf name endsWith QLatin1String KService serv QDir::isAbsolutePath file serv KService file KDesktopFile desktopFile QStandardPaths::GenericDataLocation QStringLiteral file serv KService desktopFile file serv isValid serv isDeleted serv serv isDeleted qCWarning SYCOCA file serv KBuildServiceFactory::saveHeader QDataStream str KSycocaFactory::saveHeader str str qint32 m_nameDictOffset str qint32 m_relNameDictOffset str qint32 m_offerListOffset str qint32 m_menuIdDictOffset KBuildServiceFactory::save QDataStream str KSycocaFactory::save str m_nameDictOffset str device pos m_nameDict save str m_relNameDictOffset str device pos m_relNameDict save str saveOfferList str m_menuIdDictOffset str device pos m_menuIdDict save str endOfFactoryData str device pos saveHeader str str device seek endOfFactoryData KBuildServiceFactory::collectInheritedServices QSet&lt;QString&gt; visitedMimes Q_FOREACH QString mimeType m_mimeTypeFactory allMimeTypes collectInheritedServices mimeType visitedMimes KBuildServiceFactory::collectInheritedServices QString mimeTypeName QSet&lt;QString&gt; visitedMimes visitedMimes contains mimeTypeName visitedMimes insert mimeTypeName mimeTypeInheritanceLevel QMimeDatabase db QMimeType qmime db mimeTypeForName mimeTypeName Q_FOREACH QString parentMimeType qmime parentMimeTypes parentMimeType db mimeTypeForName parentMimeType name collectInheritedServices parentMimeType visitedMimes mimeTypeInheritanceLevel QList&lt;KServiceOffer&gt; offers m_offerHash offersFor parentMimeType QList&lt;KServiceOffer&gt;::const_iterator itserv offers begin QList&lt;KServiceOffer&gt;::const_iterator endserv offers end itserv endserv itserv m_offerHash hasRemovedOffer mimeTypeName service KServiceOffer offer itserv offer setMimeTypeInheritanceLevel mimeTypeInheritanceLevel m_offerHash addServiceOffer mimeTypeName offer KBuildServiceFactory::postProcessServices KSycocaEntryDict::const_iterator itserv m_entryDict constBegin KSycocaEntryDict::const_iterator endserv m_entryDict constEnd itserv endserv itserv KSycocaEntry::Ptr entry itserv KService::Ptr service static_cast&lt;KService*&gt; entry data service isDeleted QString parent service parentApp parent isEmpty m_serviceGroupFactory addNewChild parent KSycocaEntry::Ptr service QString name service desktopEntryName KService::Ptr dup m_nameMemoryHash value name dup dup storageId endsWith service storageId m_nameDict remove name dup dup m_nameDict add name entry m_nameMemoryHash insert name service QString relName service entryPath m_relNameDict add relName entry m_relNameMemoryHash insert relName service QString menuId service menuId menuId isEmpty m_menuIdDict add menuId entry m_menuIdMemoryHash insert menuId service populateServiceTypes KBuildServiceFactory::populateServiceTypes QMimeDatabase db KSycocaEntryDict::const_iterator itserv m_entryDict constBegin KSycocaEntryDict::const_iterator endserv m_entryDict constEnd itserv endserv itserv KService::Ptr service static_cast&lt;KService*&gt; data QVector&lt;KService::ServiceTypeAndPreference&gt; serviceTypeList service _k_accessServiceTypes i i serviceTypeList count i QString stName serviceTypeList i serviceType KServiceType::Ptr serviceType m_serviceTypeFactory findServiceTypeByName stName serviceType preference serviceTypeList i preference QString parent serviceType parentServiceType parent isEmpty serviceTypeList append KService::ServiceTypeAndPreference preference parent m_offerHash addServiceOffer stName KServiceOffer service preference service allowAsDefault KServiceOffer offer service serviceTypeList i preference service allowAsDefault QMimeType mime db mimeTypeForName stName mime isValid stName startsWith QLatin1String m_mimeTypeFactory createFakeMimeType stName m_offerHash addServiceOffer stName offer shouldAdd QString otherType service serviceTypes stName otherType mime inherits otherType db mimeTypeForName otherType name mime name shouldAdd shouldAdd m_offerHash addServiceOffer mime name offer KMimeAssociations mimeAssociations m_offerHash mimeAssociations parseAllMimeAppsList collectInheritedServices offersOffset offerEntrySize qint32 offerHash m_offerHash serviceTypeData it offerHash constBegin end offerHash constEnd it end it QString stName it key ServiceTypeOffersData offersData it value numOffers offersData offers count KServiceType::Ptr serviceType m_serviceTypeFactory findServiceTypeByName stName serviceType serviceType setServiceOffersOffset offersOffset offersOffset offerEntrySize numOffers KMimeTypeFactory::MimeTypeEntry::Ptr entry m_mimeTypeFactory findMimeTypeEntryByName stName entry entry setServiceOffersOffset offersOffset offersOffset offerEntrySize numOffers stName startsWith QLatin1String entry m_mimeTypeFactory createFakeMimeType stName entry setServiceOffersOffset offersOffset offersOffset offerEntrySize numOffers qWarning stName KBuildServiceFactory::saveOfferList QDataStream str m_offerListOffset str device pos offerHash m_offerHash serviceTypeData it offerHash constBegin end offerHash constEnd it end it QString stName it key ServiceTypeOffersData offersData it value QList&lt;KServiceOffer&gt; offers offersData offers qStableSort offers offset KServiceType::Ptr serviceType m_serviceTypeFactory findServiceTypeByName stName serviceType offset serviceType offset KMimeTypeFactory::MimeTypeEntry::Ptr entry m_mimeTypeFactory findMimeTypeEntryByName stName entry offset entry offset offset qDebug stName QList&lt;KServiceOffer&gt;::const_iterator it2 offers constBegin it2 offers constEnd it2 Q_ASSERT service offset str qint32 offset str qint32 service offset str qint32 preference str qint32 mimeTypeInheritanceLevel str qint32 KBuildServiceFactory::addEntry KSycocaEntry::Ptr newEntry Q_ASSERT newEntry m_dupeDict contains newEntry KService::Ptr service static_cast&lt;KService*&gt; newEntry data m_dupeDict insert newEntry KSycocaFactory::addEntry newEntry</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kbuildservicegroupfactory.cpp</field>
    <field name="url">kbuildservicegroupfactory_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KBuildServiceGroupFactory::KBuildServiceGroupFactory KSycoca db KServiceGroupFactory db m_resourceList KSycocaResourceList m_baseGroupDict KSycocaDict KBuildServiceGroupFactory::~KBuildServiceGroupFactory m_resourceList KServiceGroup KBuildServiceGroupFactory::createEntry QString qCWarning SYCOCA KBuildServiceGroupFactory::addNewEntryTo QString menuName KService::Ptr newEntry KSycocaEntry::Ptr ptr m_entryDict value menuName KServiceGroup::Ptr entry ptr ptr isType KST_KServiceGroup entry KServiceGroup::Ptr static_cast&lt;KServiceGroup*&gt; ptr data entry qCWarning SYCOCA menuName newEntry name entry addEntry KSycocaEntry::Ptr newEntry KServiceGroup::Ptr KBuildServiceGroupFactory::addNew QString menuName QString file KServiceGroup::Ptr entry isDeleted KSycocaEntry::Ptr ptr m_entryDict value menuName ptr qCWarning SYCOCA menuName file KServiceGroup::Ptr static_cast&lt;KServiceGroup*&gt; ptr data entry entry KServiceGroup file menuName entry d_func m_childCount addEntry KSycocaEntry::Ptr entry menuName QString parent menuName left menuName length i parent lastIndexOf i parent parent left i parent KServiceGroup::Ptr parentEntry ptr m_entryDict value parent ptr ptr isType KST_KServiceGroup parentEntry KServiceGroup::Ptr static_cast&lt;KServiceGroup*&gt; ptr data parentEntry qCWarning SYCOCA menuName file isDeleted entry isDeleted parentEntry addEntry KSycocaEntry::Ptr entry entry KBuildServiceGroupFactory::addNewChild QString parent KSycocaEntry::Ptr newEntry QString name parent KServiceGroup::Ptr entry KSycocaEntry::Ptr ptr m_entryDict value name ptr ptr isType KST_KServiceGroup entry KServiceGroup::Ptr static_cast&lt;KServiceGroup*&gt; ptr data entry entry KServiceGroup name addEntry KSycocaEntry::Ptr entry newEntry entry addEntry newEntry KBuildServiceGroupFactory::addEntry KSycocaEntry::Ptr newEntry KSycocaFactory::addEntry newEntry KServiceGroup::Ptr serviceGroup static_cast&lt;KServiceGroup*&gt; newEntry data serviceGroup d_func m_serviceList clear serviceGroup baseGroupName isEmpty m_baseGroupDict add serviceGroup baseGroupName newEntry KBuildServiceGroupFactory::saveHeader QDataStream str KSycocaFactory::saveHeader str str qint32 m_baseGroupDictOffset KBuildServiceGroupFactory::save QDataStream str KSycocaFactory::save str m_baseGroupDictOffset str device pos m_baseGroupDict save str endOfFactoryData str device pos saveHeader str str device seek endOfFactoryData KServiceGroup::Ptr KBuildServiceGroupFactory::findGroupByDesktopPath QString _name deep assert sycoca isBuilding Q_UNUSED deep KSycocaEntry::Ptr group m_entryDict value _name KServiceGroup::Ptr static_cast&lt;KServiceGroup*&gt; group data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kbuildservicetypefactory.cpp</field>
    <field name="url">kbuildservicetypefactory_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KBuildServiceTypeFactory::KBuildServiceTypeFactory KSycoca db KServiceTypeFactory db m_resourceList KSycocaResourceList m_resourceList add QStringLiteral QStringLiteral KBuildServiceTypeFactory::~KBuildServiceTypeFactory m_resourceList KServiceType::Ptr KBuildServiceTypeFactory::findServiceTypeByName QString _name assert sycoca isBuilding KSycocaEntry::Ptr servType m_entryDict value _name KServiceType::Ptr static_cast&lt;KServiceType*&gt; servType data KSycocaEntry KBuildServiceTypeFactory::createEntry QString file QString name file pos name lastIndexOf pos name name mid pos name isEmpty KDesktopFile desktopFile QStandardPaths::GenericDataLocation file KConfigGroup desktopGroup desktopFile desktopGroup desktopGroup readEntry QString type desktopGroup readEntry type QLatin1String qCWarning SYCOCA desktopFile fileName type QString serviceType desktopGroup readEntry serviceType isEmpty qCWarning SYCOCA desktopFile fileName KServiceType e KServiceType desktopFile e isDeleted e e isValid qCWarning SYCOCA file e e KBuildServiceTypeFactory::saveHeader QDataStream str KSycocaFactory::saveHeader str str qint32 m_propertyTypeDict count QMap&lt;QString, int&gt;::ConstIterator it m_propertyTypeDict constBegin it m_propertyTypeDict constEnd it str it key qint32 it value KBuildServiceTypeFactory::save QDataStream str KSycocaFactory::save str endOfFactoryData str device pos saveHeader str str device seek endOfFactoryData KBuildServiceTypeFactory::addEntry KSycocaEntry::Ptr newEntry KSycocaFactory::addEntry newEntry KServiceType::Ptr serviceType static_cast&lt;KServiceType*&gt; newEntry data QMap&lt;QString, QVariant::Type&gt; pd serviceType propertyDefs QMap&lt;QString, QVariant::Type&gt;::ConstIterator pit pd begin pit pd end pit QString pit key QMap&lt;QString, int&gt;::iterator dictit m_propertyTypeDict find property dictit m_propertyTypeDict end m_propertyTypeDict insert property pit value dictit static_cast&lt;int&gt; pit value qCWarning SYCOCA serviceType name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kbuildsycoca.cpp</field>
    <field name="url">kbuildsycoca_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">s_cSycocaPath KBuildSycocaInterface::~KBuildSycocaInterface KBuildSycoca::KBuildSycoca globalDatabase KSycoca true m_allEntries m_currentFactory m_ctimeFactory m_ctimeDict m_currentEntryDict m_serviceGroupEntryDict m_vfolder m_newTimestamp m_globalDatabase globalDatabase m_menuTest false m_changed false KBuildSycoca::~KBuildSycoca qDeleteAll factories factories clear KSycocaEntry::Ptr KBuildSycoca::createEntry QString file addToFactory quint32 timeStamp m_ctimeFactory dict ctime file m_resource timeStamp timeStamp calcResourceHash m_resourceSubdir file KSycocaEntry::Ptr entry m_allEntries Q_ASSERT m_ctimeDict quint32 oldTimestamp m_ctimeDict ctime file m_resource file contains QLatin1String qDebug file oldTimestamp timeStamp timeStamp timeStamp oldTimestamp m_currentFactory d m_serviceFactory entry m_currentEntryDict value file left file length entry m_currentEntryDict value file file contains QLatin1String qDebug file entry m_ctimeDict remove file m_resource oldTimestamp m_changed m_ctimeDict remove file m_resource qDebug file m_changed qDebug file m_ctimeFactory dict addCTime file m_resource timeStamp entry entry m_currentFactory createEntry file entry entry isValid addToFactory m_currentFactory addEntry entry m_tempStorage append entry entry KSycocaEntry::Ptr KService::Ptr KBuildSycoca::createService QString path KSycocaEntry::Ptr entry createEntry path KService::Ptr static_cast&lt;KService*&gt; entry data KBuildSycoca::build QList&lt;KBSEntryDict *&gt; KBSEntryDictList KBSEntryDictList entryDictList KBSEntryDict serviceEntryDict entryDictList reserve factories size i Q_FOREACH KSycocaFactory factory factories KBSEntryDict entryDict KBSEntryDict m_allEntries Q_FOREACH KSycocaEntry::Ptr entry m_allEntries i entryDict insert entry entryPath entry factory d m_serviceFactory serviceEntryDict entryDict factory m_buildServiceGroupFactory m_serviceGroupEntryDict entryDict entryDictList append entryDict Q_FOREACH QString dir factoryResourceDirs qint64 stamp KSycocaUtilsPrivate::visitResourceDirectory dir stamp QFileInfo info stamp qMax stamp info lastModified toMSecsSinceEpoch m_allResourceDirs insert dir stamp QMap&lt;QString, QByteArray&gt; allResourcesSubDirs Q_FOREACH KSycocaFactory factory factories KSycocaResourceList list factory resourceList list Q_FOREACH KSycocaResource res list allResourcesSubDirs insert res subdir res resource m_ctimeFactory KCTimeFactory QMap&lt;QString, QByteArray&gt;::ConstIterator it1 allResourcesSubDirs constBegin it1 allResourcesSubDirs constEnd it1 m_changed m_resourceSubdir it1 key m_resource it1 value QSet&lt;QString&gt; relFiles QStringList dirs QStandardPaths::locateAll QStandardPaths::GenericDataLocation m_resourceSubdir QStandardPaths::LocateDirectory Q_FOREACH QString dir dirs QDirIterator it dir QDirIterator::Subdirectories it hasNext QString filePath it next Q_ASSERT filePath startsWith dir QString relPath filePath mid dir length relFiles insert relPath KBSEntryDictList::const_iterator ed_it entryDictList constBegin KBSEntryDictList::const_iterator ed_end entryDictList constEnd KSycocaFactoryList::const_iterator it factories constBegin KSycocaFactoryList::const_iterator end factories constEnd it end it ed_it m_currentFactory m_currentEntryDict ed_it ed_end ed_it KSycocaResourceList list m_currentFactory resourceList list Q_FOREACH KSycocaResource res list res resource it1 entryPath relFiles constBegin entryPath relFiles constEnd entryPath endsWith res extension createEntry entryPath m_changed m_allEntries m_changedResources append m_resource m_ctimeDict m_ctimeDict isEmpty QStringList resources m_ctimeDict remainingResourceList qDebug resources m_changedResources resources result createVFolder m_changedResources isEmpty m_ctimeDict m_ctimeDict isEmpty createVFolder m_menuTest m_resource m_resourceSubdir QStringLiteral m_currentFactory d m_serviceFactory m_currentEntryDict serviceEntryDict m_changed m_vfolder VFolderMenu d m_serviceFactory m_trackId isEmpty m_vfolder setTrackId m_trackId VFolderMenu::SubMenu kdeMenu m_vfolder parseMenu QStringLiteral APPLICATIONS_MENU_NAME KServiceGroup::Ptr entry m_buildServiceGroupFactory addNew QStringLiteral kdeMenu directoryFile KServiceGroup::Ptr entry setLayoutInfo kdeMenu layoutList createMenu QString QString kdeMenu Q_FOREACH QString dir m_vfolder allDirectories dir endsWith dir chop m_allResourceDirs contains dir qint64 stamp KSycocaUtilsPrivate::visitResourceDirectory dir stamp QFileInfo info stamp qMax stamp info lastModified toMSecsSinceEpoch m_allResourceDirs insert dir stamp m_changed m_allEntries m_changedResources append m_resource m_menuTest result qDeleteAll entryDictList result KBuildSycoca::createMenu QString caption_ QString name_ VFolderMenu::SubMenu menu QString caption caption_ QString name name_ VFolderMenu::SubMenu subMenu menu subMenus QString subName name subMenu name QString directoryFile subMenu directoryFile directoryFile isEmpty directoryFile subName QStringLiteral quint32 timeStamp m_ctimeFactory dict ctime directoryFile m_resource timeStamp timeStamp calcResourceHash m_resourceSubdir directoryFile KServiceGroup::Ptr entry m_allEntries quint32 oldTimestamp m_ctimeDict ctime directoryFile m_resource timeStamp timeStamp oldTimestamp KSycocaEntry::Ptr group m_serviceGroupEntryDict value subName group entry KServiceGroup::Ptr static_cast&lt;KServiceGroup*&gt; group data entry directoryEntryPath directoryFile entry timeStamp m_ctimeFactory dict addCTime directoryFile m_resource timeStamp entry m_buildServiceGroupFactory addNew subName subMenu directoryFile entry subMenu isDeleted entry setLayoutInfo subMenu layoutList m_menuTest entry noDisplay createMenu caption entry caption subName subMenu caption isEmpty caption name isEmpty name KService::Ptr p menu items m_menuTest menu isDeleted p noDisplay printf qPrintable caption qPrintable p menuId qPrintable QStandardPaths::locate QStandardPaths::ApplicationsLocation p entryPath m_buildServiceGroupFactory addNewEntryTo name p KBuildSycoca::recreate incremental QFileInfo fi KSycoca::absoluteFilePath m_globalDatabase KSycoca::GlobalDatabase KSycoca::LocalDatabase QDir mkpath fi absolutePath qCWarning SYCOCA fi absolutePath QString path fi absoluteFilePath QLockFile lockFile path QLatin1String lockFile tryLock qDebug KBUILDSYCOCA_EXENAME lockFile lock qCWarning SYCOCA path needsRebuild QByteArray qSycocaPath QFile::encodeName path s_cSycocaPath qSycocaPath data m_allEntries m_ctimeDict incremental checkGlobalHeader qDebug KSycoca oldSycoca KSycoca::self m_allEntries KSycocaEntryListList m_ctimeDict KCTimeDict m_allEntries append KSycocaPrivate::self serviceTypeFactory allEntries m_allEntries append KSycocaPrivate::self mimeTypeFactory allEntries m_allEntries append KSycocaPrivate::self serviceGroupFactory allEntries m_allEntries append KSycocaPrivate::self serviceFactory allEntries KCTimeFactory ctimeInfo KCTimeFactory oldSycoca m_ctimeDict ctimeInfo loadDict s_cSycocaPath QSaveFile database path openedOK database open QIODevice::WriteOnly openedOK database error QFile::WriteError QFile::exists path QFile::remove path openedOK database open QIODevice::WriteOnly openedOK qCWarning SYCOCA path database errorString QDataStream str QDataStream database str setVersion QDataStream::Qt_5_3 m_newTimestamp QDateTime::currentMSecsSinceEpoch qDebug nospace path KSycoca::version KBuildServiceTypeFactory buildServiceTypeFactory KBuildServiceTypeFactory d m_serviceTypeFactory buildServiceTypeFactory KBuildMimeTypeFactory buildMimeTypeFactory KBuildMimeTypeFactory d m_mimeTypeFactory buildMimeTypeFactory m_buildServiceGroupFactory KBuildServiceGroupFactory d m_serviceGroupFactory m_buildServiceGroupFactory d m_serviceFactory KBuildServiceFactory buildServiceTypeFactory buildMimeTypeFactory m_buildServiceGroupFactory build save str str status QDataStream::Ok database cancelWriting str str qEnvironmentVariableIsSet uid QString qgetenv toInt gid QString qgetenv toInt uid gid fchown database handle uid gid database commit qCWarning SYCOCA database fileName m_globalDatabase QString oldSycoca QStandardPaths::writableLocation QStandardPaths::GenericCacheLocation QLatin1String QFile::exists oldSycoca QFile::remove oldSycoca link QFile::encodeName path constData QFile::encodeName oldSycoca constData QFile::copy path oldSycoca QFile::copy path oldSycoca str str database cancelWriting m_menuTest qDebug m_globalDatabase QString appsDir QStandardPaths::writableLocation QStandardPaths::ApplicationsLocation QDir remove appsDir d m_sycocaStrategy KSycocaPrivate::StrategyMemFile KMemFile::fileContentsChanged path m_ctimeDict m_allEntries m_vfolder KBuildSycoca::save QDataStream str str device seek qint32 KSycoca::version KBuildServiceFactory serviceFactory Q_FOREACH KSycocaFactory factory factories qint32 aId qint32 aOffset aId factory factoryId aId KST_KServiceFactory serviceFactory KBuildServiceFactory factory aOffset factory offset aId aOffset qint32 QStandardPaths::standardLocations QStandardPaths::GenericDataLocation join QString QLatin1Char m_newTimestamp QLocale bcp47Name calcResourceHash QStringLiteral QStringLiteral m_allResourceDirs keys it m_allResourceDirs constBegin it m_allResourceDirs constEnd it it value serviceFactory serviceFactory postProcessServices qDebug Q_FOREACH KSycocaFactory factory factories factory save str str status QDataStream::Ok endOfData str device pos str device seek qint32 KSycoca::version Q_FOREACH KSycocaFactory factory factories qint32 aId qint32 aOffset aId factory factoryId aOffset factory offset aId aOffset qint32 str device seek endOfData QStringList KBuildSycoca::factoryResourceDirs QStringList dirs NULL dirs NULL dirs dirs QStringList dirs KServiceTypeFactory::resourceDirs dirs KMimeTypeFactory::resourceDirs dirs KServiceFactory::resourceDirs dirs QStringList KBuildSycoca::existingResourceDirs QStringList dirs NULL dirs NULL dirs dirs QStringList factoryResourceDirs QStringList::Iterator it dirs begin it dirs end QFileInfo inf it inf exists inf isReadable it dirs erase it it dirs quint32 updateHash QString file quint32 hash QFileInfo fi file fi isReadable fi isFile hash fi lastModified toTime_t hash quint32 KBuildSycoca::calcResourceHash QString resourceSubDir QString filename quint32 hash QDir::isRelativePath filename updateHash filename hash QStringList files QStandardPaths::locateAll QStandardPaths::GenericDataLocation resourceSubDir QLatin1Char filename Q_FOREACH QString file files hash updateHash file hash hash filename endsWith QLatin1String filename endsWith QLatin1String qCWarning SYCOCA filename files Q_ASSERT hash hash KBuildSycoca::checkGlobalHeader QString current_language QLocale bcp47Name quint32 current_update_sig KBuildSycoca::calcResourceHash QStringLiteral QStringLiteral QString current_prefixes QStandardPaths::standardLocations QStandardPaths::GenericDataLocation join QString QLatin1Char KSycocaHeader header KSycocaPrivate::self readSycocaHeader Q_ASSERT header prefixes split contains QDir::homePath current_update_sig header updateSignature current_language header language current_prefixes header prefixes header timeStamp KBuildSycoca::sycocaPath s_cSycocaPath</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kbuildsycoca_main.cpp</field>
    <field name="url">kbuildsycoca__main_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">crashHandler KBuildSycoca::sycocaPath unlink KBuildSycoca::sycocaPath main argc argv QCoreApplication app argc argv KLocalizedString::setApplicationDomain KAboutData about QStringLiteral KBUILDSYCOCA_EXENAME i18nc QStringLiteral KSERVICE_VERSION_STRING i18nc KAboutLicense::GPL i18nc about addAuthor i18nc i18nc QStringLiteral about addAuthor i18nc i18nc QStringLiteral KAboutData::setApplicationData about QCommandLineParser parser about setupCommandLine parser parser addVersionOption parser addHelpOption parser addOption QCommandLineOption QStringLiteral i18nc parser addOption QCommandLineOption QStringLiteral i18nc parser addOption QCommandLineOption QStringLiteral i18nc parser addOption QCommandLineOption QStringLiteral i18nc parser addOption QCommandLineOption QStringLiteral i18nc parser addOption QCommandLineOption QStringLiteral i18nc parser addOption QCommandLineOption QStringLiteral i18nc QStringLiteral parser addOption QCommandLineOption QStringLiteral i18nc parser process app about processCommandLine parser bGlobalDatabase parser isSet QStringLiteral bMenuTest parser isSet QStringLiteral parser isSet QStringLiteral QStandardPaths::enableTestMode bGlobalDatabase QStringList paths QStandardPaths::standardLocations QStandardPaths::GenericDataLocation paths size qputenv paths at toLocal8Bit KCrash::setEmergencySaveFunction crashHandler fprintf stderr KBUILDSYCOCA_EXENAME incremental bGlobalDatabase parser isSet QStringLiteral KBuildSycoca sycoca bGlobalDatabase parser isSet QStringLiteral sycoca setTrackId parser value QStringLiteral sycoca setMenuTest bMenuTest sycoca recreate incremental</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kctimefactory.cpp</field>
    <field name="url">kctimefactory_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QString key QString path QByteArray resource QString::fromLatin1 resource QLatin1Char path KCTimeDict::addCTime QString path QByteArray resource quint32 ctime Q_ASSERT ctime assert path isEmpty m_hash insert key path resource ctime quint32 KCTimeDict::ctime QString path QByteArray resource m_hash value key path resource KCTimeDict::remove QString path QByteArray resource m_hash remove key path resource KCTimeDict::dump qDebug m_hash keys QStringList KCTimeDict::remainingResourceList QSet&lt;QString&gt; resources Hash::const_iterator it m_hash constBegin Hash::const_iterator end m_hash constEnd it end it QString key it key QString res key left key indexOf resources insert res resources toList KCTimeDict::load QDataStream str QString key quint32 ctime str key ctime key isEmpty m_hash insert key ctime KCTimeDict::save QDataStream str Hash::const_iterator it m_hash constBegin Hash::const_iterator end m_hash constEnd it end it str it key it value str QString quint32 KCTimeFactory::KCTimeFactory KSycoca db KSycocaFactory KST_CTimeInfo db m_ctimeDict sycoca isBuilding QDataStream str stream m_dictOffset m_dictOffset KCTimeFactory::~KCTimeFactory KCTimeFactory::saveHeader QDataStream str KSycocaFactory::saveHeader str str m_dictOffset KCTimeFactory::save QDataStream str KSycocaFactory::save str m_dictOffset str device pos m_ctimeDict save str endOfFactoryData str device pos saveHeader str str device seek endOfFactoryData KCTimeDict KCTimeFactory::loadDict KCTimeDict dict QDataStream str stream assert str str device seek m_dictOffset dict load str dict</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdbusservicestarter.cpp</field>
    <field name="url">kdbusservicestarter_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KDBusServiceStarterPrivate KDBusServiceStarterPrivate q KDBusServiceStarterPrivate q KDBusServiceStarter q Q_GLOBAL_STATIC KDBusServiceStarterPrivate privateObject KDBusServiceStarter KDBusServiceStarter::self privateObject q KDBusServiceStarter Q_ASSERT privateObject q privateObject q KDBusServiceStarter::KDBusServiceStarter Q_ASSERT privateObject q privateObject q KDBusServiceStarter::~KDBusServiceStarter</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdbusservicestarter.cpp</field>
    <field name="url">kdbusservicestarter_8cpp_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">KDBusServiceStarter::findServiceFor QString serviceType QString _constraint QString error QString pDBusService flags QString constraint _constraint constraint isEmpty constraint QLatin1String constraint QLatin1String KService::List offers KServiceTypeTrader::self query serviceType constraint offers isEmpty error error i18n serviceType qWarning serviceType KService::Ptr ptr offers first QString dbusService ptr property QStringLiteral toString QDBusConnection::sessionBus interface isServiceRegistered dbusService QString err startServiceFor serviceType constraint err dbusService flags error error err qWarning dbusService serviceType err pDBusService pDBusService dbusService</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdbusservicestarter.cpp</field>
    <field name="url">kdbusservicestarter_8cpp_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text">KDBusServiceStarter::startServiceFor QString serviceType QString constraint QString error QString dbusService KService::List offers KServiceTypeTrader::self query serviceType constraint offers isEmpty KService::Ptr ptr offers first KToolInvocation::startServiceByDesktopPath ptr entryPath QStringList error dbusService</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdbusservicestarter.h</field>
    <field name="url">kdbusservicestarter_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KDBusServiceStarterPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdbusservicestarter.h</field>
    <field name="url">kdbusservicestarter_8h_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">KSERVICE_EXPORT KDBusServiceStarter KDBusServiceStarter findServiceFor QString serviceType QString constraint QString QString error QString dbusService flags startServiceFor QString serviceType QString constraint QString QString error QString dbusService flags KDBusServiceStarterPrivate KDBusServiceStarter KDBusServiceStarter</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmemfile.cpp</field>
    <field name="url">kmemfile_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KMemFile::Private sharedInfoData shmCounter qint64 shmDataSize sharedInfoData memset Private KMemFile _parent readWritePos shmDataSize parent _parent QString getShmKey iCounter QString getShmKey QString filename iCounter loadContentsFromFile close QString filename QSharedMemory shmInfo QSharedMemory shmData qint64 readWritePos qint64 shmDataSize KMemFile parent QString KMemFile::Private::getShmKey iCounter getShmKey filename iCounter QString KMemFile::Private::getShmKey QString filename iCounter QByteArray tmp QString QDir filename canonicalPath QString::number iCounter toUtf8 QString::fromLatin1 QCryptographicHash::hash tmp QCryptographicHash::Sha1 KMemFile::Private::loadContentsFromFile QFile f filename f exists close parent setErrorString QCoreApplication::translate arg filename f open QIODevice::ReadOnly close parent setErrorString QCoreApplication::translate arg filename sharedInfoData infoPtr sharedInfoData shmInfo data infoPtr shmDataSize f size shmData setKey getShmKey infoPtr shmCounter shmData create infoPtr shmDataSize close parent setErrorString QCoreApplication::translate arg filename shmData lock qint64 size qint64 bytesRead data shmData data bytesRead f read data infoPtr shmDataSize bytesRead infoPtr shmDataSize close parent setErrorString QCoreApplication::translate arg filename shmDataSize size shmData unlock KMemFile::Private::close shmData unlock shmData detach shmInfo unlock shmInfo detach readWritePos shmDataSize KMemFile::KMemFile QString filename QObject parent QIODevice parent d new Private this d filename filename KMemFile::~KMemFile close d KMemFile::close QIODevice::close isOpen d close KMemFile::isSequential KMemFile::open OpenMode mode isOpen QIODevice::open mode mode QIODevice::ReadOnly setErrorString QCoreApplication::translate QFile::exists d filename setErrorString QCoreApplication::translate arg d filename QSharedMemory lock QDir d filename canonicalPath lock lock Private::sharedInfoData infoPtr d shmInfo setKey d getShmKey d shmInfo attach QSharedMemory::ReadWrite d shmInfo create Private::sharedInfoData lock unlock setErrorString QCoreApplication::translate arg d filename d shmInfo lock infoPtr Private::sharedInfoData d shmInfo data memset infoPtr Private::sharedInfoData infoPtr shmCounter d loadContentsFromFile d shmInfo unlock d shmInfo detach lock unlock d shmInfo lock infoPtr Private::sharedInfoData d shmInfo data d shmData setKey d getShmKey infoPtr shmCounter d shmData attach QSharedMemory::ReadOnly d loadContentsFromFile d shmInfo unlock d shmInfo detach lock unlock d shmDataSize infoPtr shmDataSize d shmInfo unlock lock unlock setOpenMode mode KMemFile::seek qint64 pos d shmDataSize pos setErrorString QCoreApplication::translate d readWritePos pos QIODevice::seek pos qint64 KMemFile::size d shmDataSize qint64 KMemFile::readData data qint64 maxSize openMode QIODevice::ReadOnly qint64 maxRead size d readWritePos qint64 bytesToRead qMin maxRead maxSize src d shmData data memcpy data src d readWritePos bytesToRead d readWritePos bytesToRead bytesToRead qint64 KMemFile::writeData qint64 KMemFile::fileContentsChanged QString filename QSharedMemory lock QDir filename canonicalPath lock lock QSharedMemory shmData Private::getShmKey filename shmData attach shmData lock Private::sharedInfoData infoPtr Private::sharedInfoData shmData data infoPtr shmCounter infoPtr shmDataSize shmData unlock</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmimeassociations.cpp</field>
    <field name="url">kmimeassociations_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KMimeAssociations::KMimeAssociations KOfferHash offerHash KServiceFactory serviceFactory m_offerHash offerHash m_serviceFactory serviceFactory KMimeAssociations::parseAllMimeAppsList QStringList mimeappsFileNames QString desktops QString::fromLocal8Bit qgetenv QString desktop desktops split QLatin1Char QString::SkipEmptyParts mimeappsFileNames append desktop toLower QLatin1String mimeappsFileNames append QStringLiteral QStringList mimeappsDirs QStandardPaths::standardLocations QStandardPaths::GenericConfigLocation QStandardPaths::standardLocations QStandardPaths::ApplicationsLocation QStringList mimeappsFiles QString dir mimeappsDirs QString file mimeappsFileNames QString filePath dir file QFile::exists filePath mimeappsFiles append filePath basePreference QListIterator&lt;QString&gt; mimeappsIter mimeappsFiles mimeappsIter toBack mimeappsIter hasPrevious QString mimeappsFile mimeappsIter previous parseMimeAppsList mimeappsFile basePreference basePreference KMimeAssociations::parseMimeAppsList QString file basePreference KConfig profile file KConfig::SimpleConfig file endsWith QLatin1String parseAddedAssociations KConfigGroup profile file basePreference parseRemovedAssociations KConfigGroup profile file parseAddedAssociations KConfigGroup profile file basePreference parseRemovedAssociations KConfigGroup profile file parseAddedAssociations KConfigGroup profile file basePreference KMimeAssociations::parseAddedAssociations KConfigGroup group QString file basePreference Q_UNUSED file QMimeDatabase db Q_FOREACH QString mimeName group keyList QStringList services group readXdgListEntry mimeName QString resolvedMimeName mimeName startsWith mimeName db mimeTypeForName mimeName name resolvedMimeName isEmpty qCDebug SYCOCA file mimeName group name pref basePreference Q_FOREACH QString service services KService::Ptr pService m_serviceFactory findServiceByStorageId service pService qDebug SYCOCA file service group name m_offerHash addServiceOffer resolvedMimeName KServiceOffer pService pref pService allowAsDefault pref KMimeAssociations::parseRemovedAssociations KConfigGroup group QString file Q_UNUSED file Q_FOREACH QString mime group keyList QStringList services group readXdgListEntry mime Q_FOREACH QString service services KService::Ptr pService m_serviceFactory findServiceByStorageId service pService m_offerHash removeServiceOffer mime pService KOfferHash::addServiceOffer QString serviceType KServiceOffer offer KService::Ptr service offer service ServiceTypeOffersData data m_serviceTypeData serviceType QList&lt;KServiceOffer&gt; offers data offers QSet&lt;KService::Ptr&gt; offerSet data offerSet offerSet contains service offers append offer offerSet insert service QMutableListIterator&lt;KServiceOffer&gt; sfit data offers sfit hasNext sfit next service service sfit value setPreference qMax sfit value preference offer preference KOfferHash::removeServiceOffer QString serviceType KService::Ptr service ServiceTypeOffersData data m_serviceTypeData serviceType data removedOffers insert service data offerSet remove service QMutableListIterator&lt;KServiceOffer&gt; sfit data offers sfit hasNext sfit next service storageId service storageId sfit remove KOfferHash::hasRemovedOffer QString serviceType KService::Ptr service QHash&lt;QString, ServiceTypeOffersData&gt;::const_iterator it m_serviceTypeData find serviceType it m_serviceTypeData end removedOffers contains service</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmimetypefactory.cpp</field>
    <field name="url">kmimetypefactory_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">servicesDebugArea KMimeTypeFactory::KMimeTypeFactory KSycoca db KSycocaFactory KST_KMimeTypeFactory db KMimeTypeFactory::~KMimeTypeFactory KMimeTypeFactory::entryOffset QString mimeTypeName sycocaDict assert sycoca isBuilding offset sycocaDict find_string mimeTypeName toLower offset KMimeTypeFactory::serviceOffersOffset QString mimeTypeName offset entryOffset mimeTypeName toLower offset MimeTypeEntry::Ptr newMimeType createEntry offset newMimeType newMimeType name mimeTypeName toLower newMimeType serviceOffersOffset KMimeTypeFactory::MimeTypeEntry KMimeTypeFactory::createEntry offset KSycocaType type QDataStream str sycoca findEntry offset type str type KST_KMimeTypeEntry qWarning int type MimeTypeEntry newEntry MimeTypeEntry str offset newEntry newEntry isValid qWarning newEntry newEntry newEntry QStringList KMimeTypeFactory::allMimeTypes QStringList result KSycocaEntry::List list allEntries KSycocaEntry::List::ConstIterator it list begin it list end it Q_ASSERT isType KST_KMimeTypeEntry MimeTypeEntry::Ptr mimeType static_cast&lt;MimeTypeEntry*&gt; data result append mimeType name result KMimeTypeFactory::MimeTypeEntry::Ptr KMimeTypeFactory::findMimeTypeEntryByName QString name Q_ASSERT sycoca isBuilding KSycocaEntry::Ptr servType m_entryDict value name toLower MimeTypeEntry::Ptr static_cast&lt;MimeTypeEntry*&gt; servType data QStringList KMimeTypeFactory::resourceDirs KSycocaFactory::allDirectories QStringLiteral KMimeTypeFactory::MimeTypeEntryPrivate KSycocaEntryPrivate K_SYCOCATYPE KST_KMimeTypeEntry KSycocaEntryPrivate MimeTypeEntryPrivate QString file QString name KSycocaEntryPrivate file m_name name m_serviceOffersOffset MimeTypeEntryPrivate QDataStream s offset KSycocaEntryPrivate s offset m_serviceOffersOffset s m_name m_serviceOffersOffset QString name m_name save QDataStream s QString m_name m_serviceOffersOffset KMimeTypeFactory::MimeTypeEntryPrivate::save QDataStream s KSycocaEntryPrivate::save s s m_name m_serviceOffersOffset KMimeTypeFactory::MimeTypeEntry::MimeTypeEntry QString file QString name KSycocaEntry new MimeTypeEntryPrivate file name toLower KMimeTypeFactory::MimeTypeEntry::MimeTypeEntry QDataStream s offset KSycocaEntry new MimeTypeEntryPrivate s offset KMimeTypeFactory::MimeTypeEntry::~MimeTypeEntry KMimeTypeFactory::MimeTypeEntry::serviceOffersOffset Q_D MimeTypeEntry d m_serviceOffersOffset KMimeTypeFactory::MimeTypeEntry::setServiceOffersOffset off Q_D MimeTypeEntry d m_serviceOffersOffset off</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmimetypetrader.cpp</field>
    <field name="url">kmimetypetrader_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KMimeTypeTraderPrivate KMimeTypeTraderPrivate KMimeTypeTraderSingleton KMimeTypeTrader instance Q_GLOBAL_STATIC KMimeTypeTraderSingleton s_self</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmimetypetrader.cpp</field>
    <field name="url">kmimetypetrader_8cpp_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">KMimeTypeTrader KMimeTypeTrader self s_self instance KMimeTypeTrader::KMimeTypeTrader d KMimeTypeTraderPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmimetypetrader.cpp</field>
    <field name="url">kmimetypetrader_8cpp_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">KMimeTypeTrader::~KMimeTypeTrader d KServiceOfferList mimeTypeSycocaOffers QString mimeType KServiceOfferList lst QMimeDatabase db QString mime db mimeTypeForName mimeType name mime isEmpty mimeType startsWith QLatin1String qWarning mimeType lst mime mimeType KSycoca::self ensureCacheValid KMimeTypeFactory factory KSycocaPrivate::self mimeTypeFactory offset factory entryOffset mime offset mimeType startsWith QLatin1String qDebug mimeType lst serviceOffersOffset factory serviceOffersOffset mime serviceOffersOffset lst KSycocaPrivate::self serviceFactory offers offset serviceOffersOffset lst KService::List mimeTypeSycocaServiceOffers QString mimeType KService::List lst QMimeDatabase db QString mime db mimeTypeForName mimeType name mime isEmpty mimeType startsWith QLatin1String qWarning mimeType lst mime mimeType KSycoca::self ensureCacheValid KMimeTypeFactory factory KSycocaPrivate::self mimeTypeFactory offset factory entryOffset mime offset qWarning mimeType lst serviceOffersOffset factory serviceOffersOffset mime serviceOffersOffset lst KSycocaPrivate::self serviceFactory serviceOffers offset serviceOffersOffset lst KMimeTypeTrader::filterMimeTypeOffers KServiceOfferList list QString genericServiceType KServiceType::Ptr genericServiceTypePtr KServiceType::serviceType genericServiceType CHECK_SERVICETYPE genericServiceTypePtr KSycoca::self ensureCacheValid QMutableListIterator&lt;KServiceOffer&gt; it list it hasNext KService::Ptr servPtr it next service KSycocaPrivate::self serviceFactory hasOffer genericServiceTypePtr offset genericServiceTypePtr serviceOffersOffset servPtr offset servPtr showInCurrentDesktop it remove KMimeTypeTrader::filterMimeTypeOffers KService::List list QString genericServiceType KServiceType::Ptr genericServiceTypePtr KServiceType::serviceType genericServiceType CHECK_SERVICETYPE genericServiceTypePtr KSycoca::self ensureCacheValid QMutableListIterator&lt;KService::Ptr&gt; it list it hasNext KService::Ptr servPtr it next KSycocaPrivate::self serviceFactory hasOffer genericServiceTypePtr offset genericServiceTypePtr serviceOffersOffset servPtr offset servPtr showInCurrentDesktop it remove</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmimetypetrader.cpp</field>
    <field name="url">kmimetypetrader_8cpp_source.html#l00172</field>
    <field name="keywords"></field>
    <field name="text">KService::List KMimeTypeTrader::query QString mimeType QString genericServiceType QString constraint KService::List lst mimeTypeSycocaServiceOffers mimeType filterMimeTypeOffers lst genericServiceType KServiceTypeTrader::applyConstraints lst constraint lst</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmimetypetrader.cpp</field>
    <field name="url">kmimetypetrader_8cpp_source.html#l00187</field>
    <field name="keywords"></field>
    <field name="text">KService::Ptr KMimeTypeTrader::preferredService QString mimeType QString genericServiceType KServiceOfferList offers mimeTypeSycocaOffers mimeType Q_ASSERT genericServiceType isEmpty filterMimeTypeOffers offers genericServiceType KServiceOfferList::const_iterator itOff offers constBegin itOff offers constEnd allowAsDefault service KService::Ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmimetypetrader.h</field>
    <field name="url">kmimetypetrader_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KMimeTypeTraderPrivate KServiceOffer QList&lt;KServiceOffer&gt; KServiceOfferList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmimetypetrader.h</field>
    <field name="url">kmimetypetrader_8h_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">KSERVICE_EXPORT KMimeTypeTrader KMimeTypeTrader KService::List query QString mimeType QString genericServiceType QStringLiteral QString constraint QString KService::Ptr preferredService QString mimeType QString genericServiceType QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmimetypetrader.h</field>
    <field name="url">kmimetypetrader_8h_source.html#l00122</field>
    <field name="keywords"></field>
    <field name="text">T createPartInstanceFromQuery QString mimeType QWidget parentWidget QObject parent QString constraint QString QVariantList args QVariantList QString error KService::List offers query mimeType QStringLiteral constraint Q_FOREACH KService::Ptr ptr offers T component ptr template createInstance&lt;T&gt; parentWidget parent args error component error error clear component error error QCoreApplication::translate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmimetypetrader.h</field>
    <field name="url">kmimetypetrader_8h_source.html#l00157</field>
    <field name="keywords"></field>
    <field name="text">T createInstanceFromQuery QString mimeType QString serviceType QObject parent QString constraint QString QVariantList args QVariantList QString error KService::List offers query mimeType serviceType constraint Q_FOREACH KService::Ptr ptr offers T component ptr template createInstance&lt;T&gt; parent args error component error error clear component error error QCoreApplication::translate KMimeTypeTrader KMimeTypeTrader KMimeTypeTraderPrivate d filterMimeTypeOffers KServiceOfferList list QString genericServiceType filterMimeTypeOffers KService::List list QString genericServiceType KMimeTypeTraderSingleton</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">GlobalQStringLiteral s_hiddenKey GlobalQStringLiteral s_nameKey Name GlobalQStringLiteral s_commentKey Comment GlobalQStringLiteral s_iconKey Icon GlobalQStringLiteral s_libraryKey X KDE Library GlobalQStringLiteral s_authorKey X KDE PluginInfo Author GlobalQStringLiteral s_emailKey X KDE PluginInfo Email GlobalQStringLiteral s_pluginNameKey X KDE PluginInfo Name GlobalQStringLiteral s_versionKey X KDE PluginInfo Version GlobalQStringLiteral s_websiteKey X KDE PluginInfo Website GlobalQStringLiteral s_categoryKey X KDE PluginInfo Category GlobalQStringLiteral s_licenseKey X KDE PluginInfo License GlobalQStringLiteral s_dependenciesKey X KDE PluginInfo Depends GlobalQStringLiteral s_serviceTypesKey ServiceTypes GlobalQStringLiteral s_xKDEServiceTypes X KDE ServiceTypes GlobalQStringLiteral s_mimeTypeKey MimeType GlobalQStringLiteral s_formFactorsKey X KDE FormFactors GlobalQStringLiteral s_enabledbyDefaultKey X KDE PluginInfo EnabledByDefault GlobalQStringLiteral s_enabledKey Enabled GlobalQStringLiteral s_jsonDescriptionKey Description GlobalQStringLiteral s_jsonAuthorsKey Authors GlobalQStringLiteral s_jsonEmailKey Email GlobalQStringLiteral s_jsonCategoryKey Category GlobalQStringLiteral s_jsonDependenciesKey Dependencies GlobalQStringLiteral s_jsonEnabledByDefaultKey EnabledByDefault GlobalQStringLiteral s_jsonFormFactorsKey FormFactors GlobalQStringLiteral s_jsonLicenseKey License GlobalQStringLiteral s_jsonIdKey Id GlobalQStringLiteral s_jsonVersionKey Version GlobalQStringLiteral s_jsonWebsiteKey Website GlobalQStringLiteral s_jsonMimeTypesKey MimeTypes GlobalQStringLiteral s_jsonKPluginKey KPlugin class KPluginInfoPrivate public QSharedData KPluginInfoPrivate hidden false pluginenabled false kcmservicesCached false QStringList deserializeList QString data hidden pluginenabled kcmservicesCached KPluginMetaData metaData KConfigGroup config KService::Ptr service QList&lt;KService::Ptr&gt; kcmservices setMetaData KPluginMetaData md warnOnOldStyle QStringList KPluginInfoPrivate::deserializeList QString data data isEmpty QStringList data QLatin1String QStringList QString QStringList value QString val val reserve data size quoted p p data length p quoted val data p quoted data p unicode quoted data p unicode data p unicode val squeeze value append val val clear val reserve data size p val data p value append val value QJsonObject mapToJsonKPluginKey QString name QString description QStringList dependencies QStringList serviceTypes QStringList formFactors T data Func accessor QJsonObject kplugin kplugin s_nameKey name kplugin s_jsonDescriptionKey description kplugin s_iconKey accessor data s_iconKey QJsonObject authors authors s_nameKey accessor data s_authorKey authors s_jsonEmailKey accessor data s_emailKey kplugin s_jsonAuthorsKey authors kplugin s_jsonCategoryKey accessor data s_categoryKey QJsonValue enabledByDefault accessor data s_enabledbyDefaultKey enabledByDefault isBool enabledByDefault enabledByDefault toString compare QLatin1String Qt::CaseInsensitive kplugin s_jsonEnabledByDefaultKey enabledByDefault kplugin s_jsonLicenseKey accessor data s_licenseKey kplugin s_jsonIdKey accessor data s_pluginNameKey kplugin s_jsonVersionKey accessor data s_versionKey kplugin s_jsonWebsiteKey accessor data s_websiteKey kplugin s_jsonFormFactorsKey QJsonArray::fromStringList formFactors kplugin s_serviceTypesKey QJsonArray::fromStringList serviceTypes kplugin s_jsonDependenciesKey QJsonArray::fromStringList dependencies QJsonValue mimeTypes accessor data s_mimeTypeKey mimeTypes isString QStringList mimeList KPluginInfoPrivate::deserializeList mimeTypes toString mimeList isEmpty mimeTypes QJsonArray::fromStringList mimeList mimeTypes QJsonValue kplugin s_jsonMimeTypesKey mimeTypes kplugin KPluginMetaData fromCompatibilityJson QJsonObject json QString lib QString metaDataFile warnOnOldStyle QStringList serviceTypes KPluginMetaData::readStringList json s_xKDEServiceTypes serviceTypes isEmpty serviceTypes KPluginMetaData::readStringList json s_serviceTypesKey QJsonObject obj json QString name KPluginMetaData::readTranslatedString json s_nameKey warnOnOldStyle qWarning qPrintable lib QString description KPluginMetaData::readTranslatedString json s_commentKey QStringList formfactors KPluginMetaData::readStringList json s_jsonFormFactorsKey QJsonObject kplugin mapToJsonKPluginKey name description KPluginMetaData::readStringList json s_dependenciesKey serviceTypes formfactors json QJsonObject o QString key o value key obj insert s_jsonKPluginKey kplugin KPluginMetaData obj lib metaDataFile KPluginInfoPrivate::setMetaData KPluginMetaData md warnOnOldStyle QJsonObject json md rawData json contains s_jsonKPluginKey metaData fromCompatibilityJson json md fileName md metaDataFileName warnOnOldStyle metaData md</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00245</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::KPluginInfo KPluginMetaData md d new KPluginInfoPrivate d setMetaData md d metaData isValid d reset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00254</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::KPluginInfo QString filename d new KPluginInfoPrivate KDesktopFile file filename KConfigGroup cg file desktopGroup cg exists qWarning filename d reset d hidden cg readEntry s_hiddenKey d hidden d setMetaData KPluginMetaData file fileName d metaData isValid qWarning file fileName d reset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00277</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::KPluginInfo QVariantList args QString libraryPath d new KPluginInfoPrivate QString metaData QStringLiteral QVariant v args v canConvert QVariantMap QVariantMap m v toMap QVariant _metadata m value metaData _metadata canConvert QVariantMap QVariantMap map _metadata toMap map value s_hiddenKey toBool d hidden d setMetaData KPluginMetaData QJsonObject::fromVariantMap map libraryPath d metaData isValid d reset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00302</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::KPluginInfo KService::Ptr service d new KPluginInfoPrivate service d d service service service isDeleted d hidden KSycoca::self ensureCacheValid QJsonObject json QString key service propertyNames QVariant::Type t KSycocaPrivate::self serviceTypeFactory findPropertyTypeByName key t QVariant::Invalid t QVariant::String QVariant v service property key t v isValid json key QJsonValue::fromVariant v QStringList services service serviceTypes services isEmpty QMimeDatabase db QStringList mimeTypes mimeTypes reserve services size QStringList newServiceTypes newServiceTypes reserve services size QString s services db mimeTypeForName s isValid mimeTypes s newServiceTypes s json s_mimeTypeKey QJsonArray::fromStringList mimeTypes json s_xKDEServiceTypes QJsonArray::fromStringList newServiceTypes json s_serviceTypesKey QJsonValue d setMetaData KPluginMetaData json service library service entryPath d metaData isValid d reset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00358</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::KPluginInfo d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00363</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::isValid d data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00368</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::KPluginInfo KPluginInfo rhs d rhs d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00373</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo KPluginInfo::operator= KPluginInfo rhs d rhs d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00379</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::operator== KPluginInfo rhs d rhs d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00384</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::operator!= KPluginInfo rhs d rhs d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00389</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::operator&lt; KPluginInfo rhs category rhs category category rhs category name rhs name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00400</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::operator&gt; KPluginInfo rhs category rhs category category rhs category name rhs name KPluginInfo::~KPluginInfo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00416</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KPluginInfo&gt; KPluginInfo::fromServices KService::List services KConfigGroup config QList&lt;KPluginInfo&gt; infolist KService::List::ConstIterator it services begin it services end it KPluginInfo info it info isValid info setConfig config infolist info infolist</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00431</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KPluginInfo&gt; KPluginInfo::fromFiles QStringList files KConfigGroup config QList&lt;KPluginInfo&gt; infolist QStringList::ConstIterator it files begin it files end it KPluginInfo info it info setConfig config infolist info infolist</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00442</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KPluginInfo&gt; KPluginInfo::fromKPartsInstanceName QString name KConfigGroup config QStringList files QStringList dirs QStandardPaths::locateAll QStandardPaths::GenericDataLocation name QStringLiteral QStandardPaths::LocateDirectory Q_FOREACH QString dir dirs QDirIterator it dir QStringList QStringLiteral it hasNext files append it next fromFiles files config</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00455</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::isHidden KPLUGININFO_ISVALID_ASSERTION d hidden</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00461</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::setPluginEnabled enabled KPLUGININFO_ISVALID_ASSERTION d pluginenabled enabled</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00468</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::isPluginEnabled KPLUGININFO_ISVALID_ASSERTION d pluginenabled</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00475</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::isPluginEnabledByDefault KPLUGININFO_ISVALID_ASSERTION d metaData isEnabledByDefault</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00482</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginInfo::name KPLUGININFO_ISVALID_ASSERTION d metaData name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00488</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginInfo::comment KPLUGININFO_ISVALID_ASSERTION d metaData description</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00494</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginInfo::icon KPLUGININFO_ISVALID_ASSERTION d metaData iconName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00500</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginInfo::entryPath KPLUGININFO_ISVALID_ASSERTION d metaData metaDataFileName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00506</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginInfo::author KPLUGININFO_ISVALID_ASSERTION QList&lt;KAboutPerson&gt; authors d metaData authors authors isEmpty QString authors name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00513</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginInfo::email KPLUGININFO_ISVALID_ASSERTION QList&lt;KAboutPerson&gt; authors d metaData authors authors isEmpty QString authors emailAddress</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00520</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginInfo::category KPLUGININFO_ISVALID_ASSERTION d metaData category</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00526</field>
    <field name="keywords"></field>
    <field name="text">QStringList KPluginInfo::formFactors KPLUGININFO_ISVALID_ASSERTION d metaData formFactors</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00532</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginInfo::pluginName KPLUGININFO_ISVALID_ASSERTION d metaData pluginId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00538</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginInfo::libraryPath KPLUGININFO_ISVALID_ASSERTION d metaData fileName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00544</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginInfo::version KPLUGININFO_ISVALID_ASSERTION d metaData version</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00550</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginInfo::website KPLUGININFO_ISVALID_ASSERTION d metaData website</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00556</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginInfo::license KPLUGININFO_ISVALID_ASSERTION d metaData license KAboutLicense KPluginInfo::fullLicense KPLUGININFO_ISVALID_ASSERTION KAboutLicense::byKeyword d license</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00570</field>
    <field name="keywords"></field>
    <field name="text">QStringList KPluginInfo::dependencies KPLUGININFO_ISVALID_ASSERTION d metaData dependencies</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00576</field>
    <field name="keywords"></field>
    <field name="text">QStringList KPluginInfo::serviceTypes KPLUGININFO_ISVALID_ASSERTION d metaData serviceTypes d metaData mimeTypes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00583</field>
    <field name="keywords"></field>
    <field name="text">KService::Ptr KPluginInfo::service KPLUGININFO_ISVALID_ASSERTION d service</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00589</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KService::Ptr&gt; KPluginInfo::kcmServices KPLUGININFO_ISVALID_ASSERTION d kcmservicesCached d kcmservices KServiceTypeTrader::self query QStringLiteral QLatin1Char pluginName QStringLiteral d kcmservicesCached d kcmservices</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00603</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::setConfig KConfigGroup config KPLUGININFO_ISVALID_ASSERTION d config config</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00609</field>
    <field name="keywords"></field>
    <field name="text">KConfigGroup KPluginInfo::config KPLUGININFO_ISVALID_ASSERTION d config</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00615</field>
    <field name="keywords"></field>
    <field name="text">QVariant KPluginInfo::property QString key KPLUGININFO_ISVALID_ASSERTION d service d service property key QVariant result d metaData rawData value key toVariant result isValid KSycoca::self ensureCacheValid QVariant::Type t KSycocaPrivate::self serviceTypeFactory findPropertyTypeByName key t QVariant::StringList result canConvert QString result KPluginInfoPrivate::deserializeList result toString result canConvert QVariantList QVariantList list result toList QStringList newResult QVariant value list newResult value toString result newResult qWarning result result key s_authorKey RETURN_WITH_DEPRECATED_WARNING author key s_categoryKey RETURN_WITH_DEPRECATED_WARNING category key s_commentKey RETURN_WITH_DEPRECATED_WARNING comment key s_dependenciesKey RETURN_WITH_DEPRECATED_WARNING dependencies key s_emailKey RETURN_WITH_DEPRECATED_WARNING email key s_enabledbyDefaultKey RETURN_WITH_DEPRECATED_WARNING isPluginEnabledByDefault key s_libraryKey RETURN_WITH_DEPRECATED_WARNING libraryPath key s_licenseKey RETURN_WITH_DEPRECATED_WARNING license key s_nameKey RETURN_WITH_DEPRECATED_WARNING name key s_pluginNameKey RETURN_WITH_DEPRECATED_WARNING pluginName key s_serviceTypesKey RETURN_WITH_DEPRECATED_WARNING serviceTypes key s_versionKey RETURN_WITH_DEPRECATED_WARNING version key s_websiteKey RETURN_WITH_DEPRECATED_WARNING website key s_xKDEServiceTypes RETURN_WITH_DEPRECATED_WARNING serviceTypes key s_formFactorsKey RETURN_WITH_DEPRECATED_WARNING formFactors result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00686</field>
    <field name="keywords"></field>
    <field name="text">QVariantMap KPluginInfo::properties d metaData rawData toVariantMap</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00691</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::save KConfigGroup config KPLUGININFO_ISVALID_ASSERTION config isValid config writeEntry pluginName s_enabledKey isPluginEnabled d config isValid qWarning d config writeEntry pluginName s_enabledKey isPluginEnabled</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00706</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::load KConfigGroup config KPLUGININFO_ISVALID_ASSERTION config isValid setPluginEnabled config readEntry pluginName s_enabledKey isPluginEnabledByDefault d config isValid qWarning setPluginEnabled d config readEntry pluginName s_enabledKey isPluginEnabledByDefault</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00721</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::defaults setPluginEnabled isPluginEnabledByDefault uint qHash KPluginInfo p qHash reinterpret_cast&lt;quint64&gt; p d data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00732</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo KPluginInfo::fromMetaData KPluginMetaData md KPluginInfo md</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00737</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaData KPluginInfo::toMetaData KPLUGININFO_ISVALID_ASSERTION d metaData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00743</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaData KPluginInfo::toMetaData KPluginInfo info info toMetaData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00748</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::List KPluginInfo::fromMetaData QVector&lt;KPluginMetaData&gt; list KPluginInfo::List ret ret reserve list size KPluginMetaData md list ret append KPluginInfo::fromMetaData md ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.cpp</field>
    <field name="url">kplugininfo_8cpp_source.html#l00758</field>
    <field name="keywords"></field>
    <field name="text">QVector&lt;KPluginMetaData&gt; KPluginInfo::toMetaData KPluginInfo::List list QVector&lt;KPluginMetaData&gt; ret ret reserve list size KPluginInfo info list ret append info toMetaData ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.h</field>
    <field name="url">kplugininfo_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaData KPluginInfoPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugininfo.h</field>
    <field name="url">kplugininfo_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">KSERVICE_EXPORT KPluginInfo QList&lt;KPluginInfo&gt; List KPluginInfo QString filename KSERVICE_DEPRECATED KPluginInfo KService::Ptr service KPluginInfo QVariantList args QString libraryPath QString KPluginInfo KPluginMetaData md KPluginInfo KPluginInfo KSERVICE_DEPRECATED KPluginInfo::List fromServices KService::List services KConfigGroup config KConfigGroup KPluginInfo::List fromFiles QStringList files KConfigGroup config KConfigGroup KPluginInfo::List fromKPartsInstanceName QString componentName KConfigGroup config KConfigGroup isHidden setPluginEnabled enabled isPluginEnabled isPluginEnabledByDefault QVariant property QString key QVariantMap properties QString name QString comment QString icon QString entryPath QString author QString email QString category QString pluginName QString version QString website QString license KAboutLicense fullLicense QStringList dependencies QStringList serviceTypes QStringList formFactors QString libraryPath KService::Ptr service QList&lt;KService::Ptr&gt; kcmServices setConfig KConfigGroup config KConfigGroup config save KConfigGroup config KConfigGroup load KConfigGroup config KConfigGroup defaults isValid KPluginInfo KPluginInfo copy KPluginInfo operator= KPluginInfo rhs operator== KPluginInfo rhs operator!= KPluginInfo rhs operator&lt; KPluginInfo rhs operator&gt; KPluginInfo rhs KPluginTrader KPluginMetaData toMetaData KPluginMetaData toMetaData KPluginInfo info KPluginInfo fromMetaData KPluginMetaData meta QVector&lt;KPluginMetaData&gt; toMetaData KPluginInfo::List list KPluginInfo::List fromMetaData QVector&lt;KPluginMetaData&gt; list KSERVICE_EXPORT uint qHash KPluginInfo QExplicitlySharedDataPointer&lt;KPluginInfoPrivate&gt; d KSERVICE_EXPORT uint qHash KPluginInfo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugintrader.cpp</field>
    <field name="url">kplugintrader_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KTraderParse KPluginTraderSingleton KPluginTrader instance Q_GLOBAL_STATIC KPluginTraderSingleton s_globalPluginTrader</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugintrader.cpp</field>
    <field name="url">kplugintrader_8cpp_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">KPluginTrader KPluginTrader self s_globalPluginTrader instance KPluginTrader::KPluginTrader d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugintrader.cpp</field>
    <field name="url">kplugintrader_8cpp_source.html#l00053</field>
    <field name="keywords"></field>
    <field name="text">KPluginTrader::~KPluginTrader KPluginTrader::applyConstraints KPluginInfo::List lst QString constraint lst isEmpty constraint isEmpty ParseTreeBase::Ptr constr parseConstraints constraint ParseTreeBase pConstraintTree constr data constr lst clear KPluginInfo::List::iterator it lst begin it lst end matchConstraintPlugin pConstraintTree it lst it lst erase it it</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugintrader.cpp</field>
    <field name="url">kplugintrader_8cpp_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::List KPluginTrader::query QString subDirectory QString servicetype QString constraint filter KPluginMetaData md types md serviceTypes types isEmpty types contains servicetype data md rawData jsonTypes data value QStringLiteral toVariant toStringList jsonTypes isEmpty jsonTypes contains servicetype data value QStringLiteral toVariant toStringList contains servicetype QVector&lt;KPluginMetaData&gt; plugins servicetype isEmpty KPluginLoader::findPlugins subDirectory KPluginLoader::findPlugins subDirectory filter KPluginInfo::List lst KPluginInfo::fromMetaData plugins applyConstraints lst constraint lst</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugintrader.h</field>
    <field name="url">kplugintrader_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KPluginTraderPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugintrader.h</field>
    <field name="url">kplugintrader_8h_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text">KSERVICE_EXPORT KPluginTrader KPluginTrader KPluginInfo::List query QString subDirectory QString serviceType QString QString constraint QString KPluginTrader</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugintrader.h</field>
    <field name="url">kplugintrader_8h_source.html#l00189</field>
    <field name="keywords"></field>
    <field name="text">T createInstanceFromQuery QString subDirectory QString serviceType QString QString constraint QString QObject parent QVariantList args QVariantList QString error createInstanceFromQuery&lt;T&gt; subDirectory serviceType constraint parent args error</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kplugintrader.h</field>
    <field name="url">kplugintrader_8h_source.html#l00218</field>
    <field name="keywords"></field>
    <field name="text">T createInstanceFromQuery QString subDirectory QString serviceType QString constraint QObject parent QWidget parentWidget QVariantList args QVariantList QString error Q_UNUSED parentWidget Q_UNUSED args error error clear KPluginInfo::List offers query subDirectory serviceType constraint Q_FOREACH KPluginInfo info offers KPluginLoader loader info libraryPath QVariantList argsWithMetaData QVariantList loader metaData toVariantMap KPluginFactory factory loader factory factory T component factory create T parent argsWithMetaData component component error error isEmpty error QCoreApplication::translate applyConstraints KPluginInfo::List lst QString constraint KPluginTrader KPluginTrader KPluginTrader other KPluginTrader operator= KPluginTrader rhs KPluginTraderPrivate d KPluginTraderSingleton</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QDataStream operator&lt;&lt; QDataStream s KService::ServiceTypeAndPreference st s st preference st serviceType s QDataStream operator&gt;&gt; QDataStream s KService::ServiceTypeAndPreference st s st preference st serviceType s KServicePrivate::init KDesktopFile config KService q QString entryPath q entryPath absPath QDir::isRelativePath entryPath KConfigGroup desktopGroup KDesktopFile config desktopGroup QMap&lt;QString, QString&gt; entryMap desktopGroup entryMap entryMap remove QStringLiteral entryMap remove QStringLiteral q setDeleted desktopGroup readEntry entryMap remove QStringLiteral q isDeleted m_bValid m_strName config readName entryMap remove QStringLiteral m_strName isEmpty m_strName entryPath i m_strName lastIndexOf QLatin1Char m_strName m_strName mid i i m_strName lastIndexOf QLatin1Char i m_strName truncate i m_strType config readType entryMap remove QStringLiteral m_strType isEmpty m_strType QStringLiteral m_strType QLatin1String m_strType QLatin1String qWarning entryPath m_strType m_bValid m_strExec desktopGroup readEntry QString entryMap remove QStringLiteral m_strType QLatin1String m_strExec isEmpty qWarning entryPath m_strType m_bValid config tryExec q setDeleted m_bValid QStandardPaths::StandardLocation resource config resource m_strType QLatin1String resource QStandardPaths::ApplicationsLocation absPath qWarning entryPath m_strType QStandardPaths::displayName resource m_bValid m_strType QLatin1String resource QStandardPaths::GenericDataLocation absPath qWarning entryPath m_strType QStandardPaths::displayName resource m_bValid QString _name KServiceUtilPrivate::completeBaseName entryPath m_strIcon config readIcon entryMap remove QStringLiteral m_bTerminal desktopGroup readEntry entryMap remove QStringLiteral m_strTerminalOptions desktopGroup readEntry entryMap remove QStringLiteral m_strPath config readPath entryMap remove QStringLiteral m_strComment config readComment entryMap remove QStringLiteral m_strGenName config readGenericName entryMap remove QStringLiteral QString _untranslatedGenericName desktopGroup readEntryUntranslated _untranslatedGenericName isEmpty entryMap insert QStringLiteral _untranslatedGenericName m_lstFormFactors desktopGroup readEntry QStringList entryMap remove QStringLiteral m_lstKeywords desktopGroup readXdgListEntry QStringList entryMap remove QStringLiteral m_lstKeywords desktopGroup readEntry QStringList entryMap remove QStringLiteral categories desktopGroup readXdgListEntry entryMap remove QStringLiteral m_strLibrary desktopGroup readEntry entryMap remove QStringLiteral m_strLibrary isEmpty m_strType QLatin1String qWarning entryPath m_strType QStringList lstServiceTypes desktopGroup readEntry QStringList entryMap remove QStringLiteral lstServiceTypes desktopGroup readEntry QStringList entryMap remove QStringLiteral lstServiceTypes desktopGroup readXdgListEntry entryMap remove QStringLiteral m_strType QLatin1String lstServiceTypes contains QLatin1String lstServiceTypes QStringLiteral m_initialPreference desktopGroup readEntry entryMap remove QStringLiteral m_serviceTypes reserve lstServiceTypes size QListIterator&lt;QString&gt; st_it lstServiceTypes st_it hasNext QString st st_it next st isEmpty qWarning entryPath initialPreference m_initialPreference st_it hasNext isNumber val st_it peekNext toInt isNumber isNumber initialPreference val st_it next m_serviceTypes push_back KService::ServiceTypeAndPreference initialPreference st entryMap contains QLatin1String parseActions config q QString dbusStartupType desktopGroup readEntry toLower entryMap remove QStringLiteral dbusStartupType QLatin1String m_DBUSStartusType KService::DBusUnique dbusStartupType QLatin1String m_DBUSStartusType KService::DBusMulti m_DBUSStartusType KService::DBusNone m_strDesktopEntryName _name toLower m_bAllowAsDefault desktopGroup readEntry entryMap remove QStringLiteral QMap&lt;QString, QString&gt;::Iterator entry entryMap find QStringLiteral entry entryMap end QString key entry key m_mapProps insert key QVariant desktopGroup readEntryUntranslated key m_mapProps insert key QStringLiteral QVariant entry entryMap erase entry QMap&lt;QString, QString&gt;::ConstIterator it entryMap constBegin it entryMap constEnd it QString key it key key contains QLatin1Char m_mapProps insert key QVariant it KServicePrivate::parseActions KDesktopFile config KService q QStringList keys config readActions keys isEmpty QStringList::ConstIterator it keys begin QStringList::ConstIterator end keys end it end it QString group it group QLatin1String m_actions append KServiceAction group QString QString QString config hasActionGroup group KConfigGroup cg config actionGroup group cg hasKey cg hasKey qWarning group q entryPath m_actions append KServiceAction group cg readEntry cg readEntry cg readEntry cg readEntry qWarning q entryPath group KServicePrivate::load QDataStream s qint8 def term qint8 dst initpref s m_strType m_strName m_strExec m_strIcon term m_strTerminalOptions m_strPath m_strComment def m_mapProps m_strLibrary dst m_strDesktopEntryName initpref m_lstKeywords m_strGenName categories menuId m_actions m_serviceTypes m_lstFormFactors m_bAllowAsDefault bool def m_bTerminal bool term m_DBUSStartusType KService::DBusStartupType dst m_initialPreference initpref m_bValid KServicePrivate::save QDataStream s KSycocaEntryPrivate::save s qint8 def m_bAllowAsDefault initpref m_initialPreference qint8 term m_bTerminal qint8 dst qint8 m_DBUSStartusType s m_strType m_strName m_strExec m_strIcon term m_strTerminalOptions m_strPath m_strComment def m_mapProps m_strLibrary dst m_strDesktopEntryName initpref m_lstKeywords m_strGenName categories menuId m_actions m_serviceTypes m_lstFormFactors</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00362</field>
    <field name="keywords"></field>
    <field name="text">KService::KService QString _name QString _exec QString _icon KSycocaEntry new KServicePrivate QString Q_D KService d m_strType QStringLiteral d m_strName _name d m_strExec _exec d m_strIcon _icon d m_bTerminal d m_bAllowAsDefault d m_initialPreference</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00375</field>
    <field name="keywords"></field>
    <field name="text">KService::KService QString _fullpath KSycocaEntry new KServicePrivate _fullpath Q_D KService KDesktopFile config _fullpath d init config</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00384</field>
    <field name="keywords"></field>
    <field name="text">KService::KService KDesktopFile config QString entryPath KSycocaEntry new KServicePrivate entryPath isEmpty config fileName entryPath Q_D KService d init config KService::KService QDataStream _str _offset KSycocaEntry KServicePrivate _str _offset KService::~KService</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00401</field>
    <field name="keywords"></field>
    <field name="text">KService::hasServiceType QString serviceType Q_D KService d m_bValid KServiceType::Ptr ptr KServiceType::serviceType serviceType ptr serviceOffset offset serviceOffset KSycoca::self ensureCacheValid KSycocaPrivate::self serviceFactory hasOffer ptr offset ptr serviceOffersOffset serviceOffset QVector&lt;ServiceTypeAndPreference&gt;::ConstIterator it d m_serviceTypes begin it d m_serviceTypes end it QString st serviceType st ptr name KServiceType::Ptr p KServiceType::serviceType st p p inherits ptr name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00440</field>
    <field name="keywords"></field>
    <field name="text">KService::hasMimeType QString mimeType Q_D KService QMimeDatabase db QString mime db mimeTypeForName mimeType name mime isEmpty serviceOffset offset serviceOffset KSycoca::self ensureCacheValid KMimeTypeFactory factory KSycocaPrivate::self mimeTypeFactory mimeOffset factory entryOffset mime serviceOffersOffset factory serviceOffersOffset mime serviceOffersOffset KSycocaPrivate::self serviceFactory hasOffer mimeOffset serviceOffersOffset serviceOffset QVector&lt;ServiceTypeAndPreference&gt;::ConstIterator it d m_serviceTypes begin it d m_serviceTypes end it QString st serviceType st mime QVariant KServicePrivate::property QString _name property _name QVariant::Invalid QVariant makeStringVariant QString isNull QVariant QVariant</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00491</field>
    <field name="keywords"></field>
    <field name="text">QVariant KService::property QString _name QVariant::Type t Q_D KService d property _name t QVariant KServicePrivate::property QString _name QVariant::Type t _name QLatin1String QVariant m_strType _name QLatin1String QVariant m_strName _name QLatin1String makeStringVariant m_strExec _name QLatin1String makeStringVariant m_strIcon _name QLatin1String QVariant m_bTerminal _name QLatin1String makeStringVariant m_strTerminalOptions _name QLatin1String makeStringVariant m_strPath _name QLatin1String makeStringVariant m_strComment _name QLatin1String makeStringVariant m_strGenName _name QLatin1String QVariant serviceTypes _name QLatin1String QVariant m_bAllowAsDefault _name QLatin1String QVariant m_initialPreference _name QLatin1String makeStringVariant m_strLibrary _name QLatin1String QVariant path _name QLatin1String QVariant m_strDesktopEntryName _name QLatin1String QVariant categories _name QLatin1String QVariant m_lstKeywords _name QLatin1String QVariant m_lstFormFactors t QVariant::Invalid KSycoca::self ensureCacheValid t KSycocaPrivate::self serviceTypeFactory findPropertyTypeByName _name t QVariant::Invalid qDebug _name QVariant QMap&lt;QString, QVariant&gt;::ConstIterator it m_mapProps find _name it m_mapProps end it isValid QVariant t QVariant::String it KConfigGroup::convertToQVariant _name toUtf8 constData it toString toUtf8 t QStringList KServicePrivate::propertyNames QStringList res QMap&lt;QString, QVariant&gt;::ConstIterator it m_mapProps begin it m_mapProps end it res append it key res append QStringLiteral res append QStringLiteral res append QStringLiteral res append QStringLiteral res append QStringLiteral res append QStringLiteral res append QStringLiteral res append QStringLiteral res append QStringLiteral res append QStringLiteral res append QStringLiteral res append QStringLiteral res append QStringLiteral res append QStringLiteral res append QStringLiteral res append QStringLiteral res append QStringLiteral res append QStringLiteral res</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00598</field>
    <field name="keywords"></field>
    <field name="text">KService::List KService::allServices KSycoca::self ensureCacheValid KSycocaPrivate::self serviceFactory allServices</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00604</field>
    <field name="keywords"></field>
    <field name="text">KService::Ptr KService::serviceByDesktopPath QString _name KSycoca::self ensureCacheValid KSycocaPrivate::self serviceFactory findServiceByDesktopPath _name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00610</field>
    <field name="keywords"></field>
    <field name="text">KService::Ptr KService::serviceByDesktopName QString _name KSycoca::self ensureCacheValid KSycocaPrivate::self serviceFactory findServiceByDesktopName _name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00616</field>
    <field name="keywords"></field>
    <field name="text">KService::Ptr KService::serviceByMenuId QString _name KSycoca::self ensureCacheValid KSycocaPrivate::self serviceFactory findServiceByMenuId _name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00622</field>
    <field name="keywords"></field>
    <field name="text">KService::Ptr KService::serviceByStorageId QString _storageId KSycoca::self ensureCacheValid KSycocaPrivate::self serviceFactory findServiceByStorageId _storageId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00628</field>
    <field name="keywords"></field>
    <field name="text">KService::substituteUid QVariant v property QStringLiteral QVariant::Bool v isValid v toBool</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00634</field>
    <field name="keywords"></field>
    <field name="text">QString KService::username QString user QVariant v property QStringLiteral QVariant::String user v isValid v toString QString user isEmpty user QString::fromLocal8Bit qgetenv user isEmpty user QStringLiteral user</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00649</field>
    <field name="keywords"></field>
    <field name="text">KService::showInCurrentDesktop Q_D KService QStringList currentDesktops QString::fromLatin1 qgetenv currentDesktops isEmpty currentDesktops QStringLiteral QMap&lt;QString, QVariant&gt;::ConstIterator it d m_mapProps find QStringLiteral it d m_mapProps end it isValid QStringList aList it toString split QLatin1Char QString desktop currentDesktops aList contains desktop it d m_mapProps find QStringLiteral it d m_mapProps end it isValid QStringList aList it toString split QLatin1Char QString desktop currentDesktops aList contains desktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00685</field>
    <field name="keywords"></field>
    <field name="text">KService::showOnCurrentPlatform Q_D KService QString platform QCoreApplication::instance property toString platform isEmpty it d m_mapProps find QStringLiteral it d m_mapProps end it isValid QStringList aList it toString split QLatin1Char aList contains platform it d m_mapProps find QStringLiteral it d m_mapProps end it isValid QStringList aList it toString split QLatin1Char aList contains platform</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00711</field>
    <field name="keywords"></field>
    <field name="text">KService::noDisplay qvariant_cast&lt;bool&gt; property QStringLiteral QVariant::Bool showInCurrentDesktop showOnCurrentPlatform KAuthorized::authorizeControlModule storageId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00732</field>
    <field name="keywords"></field>
    <field name="text">QString KService::untranslatedGenericName QVariant v property QStringLiteral QVariant::String v isValid v toString QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00738</field>
    <field name="keywords"></field>
    <field name="text">QString KService::parentApp Q_D KService QMap&lt;QString, QVariant&gt;::ConstIterator it d m_mapProps find QStringLiteral it d m_mapProps end it isValid QString it toString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00749</field>
    <field name="keywords"></field>
    <field name="text">QString KService::pluginKeyword Q_D KService QMap&lt;QString, QVariant&gt;::ConstIterator it d m_mapProps find QStringLiteral it d m_mapProps end it isValid QString it toString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00760</field>
    <field name="keywords"></field>
    <field name="text">QString KService::docPath Q_D KService QMap&lt;QString, QVariant&gt;::ConstIterator it d m_mapProps find QStringLiteral it d m_mapProps end it isValid it d m_mapProps find QStringLiteral it d m_mapProps end it isValid QString it toString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00774</field>
    <field name="keywords"></field>
    <field name="text">KService::allowMultipleFiles Q_D KService d m_strExec contains QLatin1String d m_strExec contains QLatin1String d m_strExec contains QLatin1String d m_strExec contains QLatin1String</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00782</field>
    <field name="keywords"></field>
    <field name="text">QStringList KService::categories Q_D KService d categories</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00788</field>
    <field name="keywords"></field>
    <field name="text">QString KService::menuId Q_D KService d menuId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00794</field>
    <field name="keywords"></field>
    <field name="text">KService::setMenuId QString _menuId Q_D KService d menuId _menuId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00800</field>
    <field name="keywords"></field>
    <field name="text">QString KService::storageId Q_D KService d storageId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00807</field>
    <field name="keywords"></field>
    <field name="text">QString KService::locateLocal Q_D KService d menuId isEmpty entryPath startsWith QLatin1String QDir::isRelativePath entryPath d categories isEmpty KDesktopFile::locateLocal entryPath QStandardPaths::writableLocation QStandardPaths::GenericDataLocation QLatin1String d menuId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00818</field>
    <field name="keywords"></field>
    <field name="text">QString KService::newServicePath showInMenu QString suggestedName QString menuId QStringList reservedMenuIds Q_UNUSED showInMenu QString base suggestedName QString result i i i result base QStringLiteral result base QStringLiteral arg i reservedMenuIds reservedMenuIds contains result KService::Ptr s serviceByMenuId result s QStandardPaths::locate QStandardPaths::GenericDataLocation QLatin1String result isEmpty menuId menuId result QStandardPaths::writableLocation QStandardPaths::GenericDataLocation QLatin1String result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00855</field>
    <field name="keywords"></field>
    <field name="text">KService::isApplication Q_D KService d m_strType QLatin1String</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00861</field>
    <field name="keywords"></field>
    <field name="text">QString KService::exec Q_D KService d m_strType QLatin1String d m_strExec isEmpty qWarning entryPath d m_strType d m_strExec</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00871</field>
    <field name="keywords"></field>
    <field name="text">QString KService::library Q_D KService d m_strLibrary</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00877</field>
    <field name="keywords"></field>
    <field name="text">QString KService::icon Q_D KService d m_strIcon</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00883</field>
    <field name="keywords"></field>
    <field name="text">QString KService::terminalOptions Q_D KService d m_strTerminalOptions</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00889</field>
    <field name="keywords"></field>
    <field name="text">KService::terminal Q_D KService d m_bTerminal</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00895</field>
    <field name="keywords"></field>
    <field name="text">QString KService::desktopEntryName Q_D KService d m_strDesktopEntryName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00901</field>
    <field name="keywords"></field>
    <field name="text">KService::DBusStartupType KService::dbusStartupType Q_D KService d m_DBUSStartusType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00907</field>
    <field name="keywords"></field>
    <field name="text">QString KService::path Q_D KService d m_strPath</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00913</field>
    <field name="keywords"></field>
    <field name="text">QString KService::comment Q_D KService d m_strComment</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00919</field>
    <field name="keywords"></field>
    <field name="text">QString KService::genericName Q_D KService d m_strGenName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00925</field>
    <field name="keywords"></field>
    <field name="text">QStringList KService::keywords Q_D KService d m_lstKeywords QStringList KServicePrivate::serviceTypes QStringList ret QVector&lt;KService::ServiceTypeAndPreference&gt;::const_iterator it m_serviceTypes begin it m_serviceTypes end it Q_ASSERT serviceType isEmpty ret append serviceType ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00942</field>
    <field name="keywords"></field>
    <field name="text">QStringList KService::serviceTypes Q_D KService d serviceTypes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00948</field>
    <field name="keywords"></field>
    <field name="text">QStringList KService::mimeTypes Q_D KService QStringList ret QMimeDatabase db QVector&lt;KService::ServiceTypeAndPreference&gt;::const_iterator it d m_serviceTypes begin it d m_serviceTypes end it QString sv serviceType db mimeTypeForName sv isValid ret append sv ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00963</field>
    <field name="keywords"></field>
    <field name="text">KService::allowAsDefault Q_D KService d m_bAllowAsDefault</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00969</field>
    <field name="keywords"></field>
    <field name="text">KService::initialPreference Q_D KService d m_initialPreference</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00975</field>
    <field name="keywords"></field>
    <field name="text">KService::setTerminal b Q_D KService d m_bTerminal b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00981</field>
    <field name="keywords"></field>
    <field name="text">KService::setTerminalOptions QString options Q_D KService d m_strTerminalOptions options</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l00987</field>
    <field name="keywords"></field>
    <field name="text">KService::setExec QString exec Q_D KService exec isEmpty d m_strExec exec d path clear QVector&lt;KService::ServiceTypeAndPreference&gt; KService::_k_accessServiceTypes Q_D KService d m_serviceTypes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l01003</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KServiceAction&gt; KService::actions Q_D KService d m_actions</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.cpp</field>
    <field name="url">kservice_8cpp_source.html#l01009</field>
    <field name="keywords"></field>
    <field name="text">KService::operator KPluginName isValid KPluginName::fromErrorString i18n library isEmpty KPluginName::fromErrorString i18n entryPath KPluginName library</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.h</field>
    <field name="url">kservice_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KServiceType QDataStream KDesktopFile QWidget KServicePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.h</field>
    <field name="url">kservice_8h_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">KSERVICE_EXPORT KService KSycocaEntry QExplicitlySharedDataPointer&lt;KService&gt; Ptr QList&lt;Ptr&gt; List KService QString name QString exec QString icon KService QString fullpath KService KDesktopFile config QString entryPath QString KService isApplication QString exec QString library QString icon terminal QString terminalOptions substituteUid QString username QString desktopEntryName QString menuId QString storageId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.h</field>
    <field name="url">kservice_8h_source.html#l00175</field>
    <field name="keywords"></field>
    <field name="text">DBusStartupType DBusNone DBusUnique DBusMulti DBusStartupType dbusStartupType QString path QString comment QString genericName QString untranslatedGenericName QStringList keywords QStringList categories QStringList mimeTypes QStringList serviceTypes hasServiceType QString serviceTypePtr hasMimeType QString mimeType allowAsDefault QList&lt;KServiceAction&gt; actions allowMultipleFiles initialPreference noDisplay</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.h</field>
    <field name="url">kservice_8h_source.html#l00313</field>
    <field name="keywords"></field>
    <field name="text">KSERVICE_DEPRECATED showInKDE showInCurrentDesktop showInCurrentDesktop showOnCurrentPlatform QString parentApp QString pluginKeyword QString docPath QVariant property QString _name QVariant::Type t KSycocaEntry::property QString locateLocal setMenuId QString menuId setTerminal b setTerminalOptions QString options setExec QString exec Ptr serviceByDesktopPath QString _path Ptr serviceByDesktopName QString _name Ptr serviceByMenuId QString _menuId Ptr serviceByStorageId QString _storageId List allServices QString newServicePath showInMenu QString suggestedName QString menuId QStringList reservedMenuIds</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.h</field>
    <field name="url">kservice_8h_source.html#l00498</field>
    <field name="keywords"></field>
    <field name="text">T createInstance QObject parent QVariantList args QVariantList QString error createInstance&lt;T&gt; parent args error</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservice.h</field>
    <field name="url">kservice_8h_source.html#l00518</field>
    <field name="keywords"></field>
    <field name="text">T createInstance QWidget parentWidget QObject parent QVariantList args QVariantList QString error KPluginLoader pluginLoader KPluginFactory factory pluginLoader factory factory QVariantList argsWithMetaData args argsWithMetaData pluginLoader metaData toVariantMap T o factory template create&lt;T&gt; parentWidget parent pluginKeyword argsWithMetaData o error error QCoreApplication::translate arg name QString::fromLatin1 T::staticMetaObject className pluginKeyword o error error pluginLoader errorString pluginLoader unload KPluginName KBuildServiceFactory ServiceTypeAndPreference ServiceTypeAndPreference preference serviceType ServiceTypeAndPreference pref QString servType preference pref serviceType servType preference QString serviceType QVector&lt;ServiceTypeAndPreference&gt; _k_accessServiceTypes QDataStream operator&gt;&gt; QDataStream ServiceTypeAndPreference QDataStream operator&lt;&lt; QDataStream ServiceTypeAndPreference Q_DISABLE_COPY KService Q_DECLARE_PRIVATE KService KServiceFactory KService QDataStream str offset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceaction.cpp</field>
    <field name="url">kserviceaction_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KServiceActionPrivate QSharedData KServiceActionPrivate QString name QString text QString icon QString exec noDisplay m_name name m_text text m_icon icon m_exec exec m_noDisplay noDisplay QString m_name QString m_text QString m_icon QString m_exec QVariant m_data m_noDisplay</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceaction.cpp</field>
    <field name="url">kserviceaction_8cpp_source.html#l00039</field>
    <field name="keywords"></field>
    <field name="text">KServiceAction::KServiceAction d new KServiceActionPrivate QString QString QString QString false</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceaction.cpp</field>
    <field name="url">kserviceaction_8cpp_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">KServiceAction::KServiceAction QString name QString text QString icon QString exec noDisplay d new KServiceActionPrivate name text icon exec noDisplay</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceaction.cpp</field>
    <field name="url">kserviceaction_8cpp_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">KServiceAction::~KServiceAction</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceaction.cpp</field>
    <field name="url">kserviceaction_8cpp_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">KServiceAction::KServiceAction KServiceAction other d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceaction.cpp</field>
    <field name="url">kserviceaction_8cpp_source.html#l00060</field>
    <field name="keywords"></field>
    <field name="text">KServiceAction KServiceAction::operator= KServiceAction other d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceaction.cpp</field>
    <field name="url">kserviceaction_8cpp_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">QVariant KServiceAction::data d m_data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceaction.cpp</field>
    <field name="url">kserviceaction_8cpp_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">KServiceAction::setData QVariant data d m_data data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceaction.cpp</field>
    <field name="url">kserviceaction_8cpp_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text">QString KServiceAction::name d m_name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceaction.cpp</field>
    <field name="url">kserviceaction_8cpp_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">QString KServiceAction::text d m_text</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceaction.cpp</field>
    <field name="url">kserviceaction_8cpp_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text">QString KServiceAction::icon d m_icon</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceaction.cpp</field>
    <field name="url">kserviceaction_8cpp_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text">QString KServiceAction::exec d m_exec</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceaction.cpp</field>
    <field name="url">kserviceaction_8cpp_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text">KServiceAction::noDisplay d m_noDisplay</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceaction.cpp</field>
    <field name="url">kserviceaction_8cpp_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text">KServiceAction::isSeparator d m_name QLatin1String QDataStream operator&gt;&gt; QDataStream str KServiceAction act KServiceActionPrivate d act d str d m_name str d m_text str d m_icon str d m_exec str d m_data str d m_noDisplay str QDataStream operator&lt;&lt; QDataStream str KServiceAction act KServiceActionPrivate d act d str d m_name str d m_text str d m_icon str d m_exec str d m_data str d m_noDisplay str</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceaction.h</field>
    <field name="url">kserviceaction_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QVariant KServiceActionPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceaction.h</field>
    <field name="url">kserviceaction_8h_source.html#l00034</field>
    <field name="keywords"></field>
    <field name="text">KSERVICE_EXPORT KServiceAction KServiceAction QString name QString text QString icon QString exec noDisplay KServiceAction KServiceAction KServiceAction KServiceAction other KServiceAction operator= KServiceAction other setData QVariant userData QVariant data QString name QString text QString icon QString exec noDisplay isSeparator QSharedDataPointer&lt;KServiceActionPrivate&gt; d KSERVICE_EXPORT QDataStream operator&gt;&gt; QDataStream str KServiceAction act KSERVICE_EXPORT QDataStream operator&lt;&lt; QDataStream str KServiceAction act KSERVICE_EXPORT QDataStream operator&gt;&gt; QDataStream str KServiceAction act KSERVICE_EXPORT QDataStream operator&lt;&lt; QDataStream str KServiceAction act</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicefactory.cpp</field>
    <field name="url">kservicefactory_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">servicesDebugArea KServiceFactory::KServiceFactory KSycoca db KSycocaFactory KST_KServiceFactory db m_nameDict m_relNameDict m_menuIdDict m_offerListOffset m_nameDictOffset m_relNameDictOffset m_menuIdDictOffset sycoca isBuilding QDataStream str stream Q_ASSERT str str qint32 i i m_nameDictOffset i i m_relNameDictOffset i i m_offerListOffset i i m_menuIdDictOffset i saveOffset str device pos m_nameDict KSycocaDict str m_nameDictOffset m_relNameDict KSycocaDict str m_relNameDictOffset m_menuIdDict KSycocaDict str m_menuIdDictOffset str device seek saveOffset KServiceFactory::~KServiceFactory m_nameDict m_relNameDict m_menuIdDict KService::Ptr KServiceFactory::findServiceByName QString _name sycocaDict KService::Ptr offset sycocaDict find_string _name offset KService::Ptr KService::Ptr newService createEntry offset newService newService name _name KService::Ptr newService KService::Ptr KServiceFactory::findServiceByDesktopName QString _name m_nameDict KService::Ptr offset m_nameDict find_string _name offset KService::Ptr KService::Ptr newService createEntry offset newService newService desktopEntryName _name KService::Ptr newService KService::Ptr KServiceFactory::findServiceByDesktopPath QString _name m_relNameDict KService::Ptr offset m_relNameDict find_string _name offset KService::Ptr KService::Ptr newService createEntry offset newService qDebug newService newService entryPath _name KService::Ptr newService KService::Ptr KServiceFactory::findServiceByMenuId QString _menuId m_menuIdDict KService::Ptr offset m_menuIdDict find_string _menuId offset KService::Ptr KService::Ptr newService createEntry offset newService newService menuId _menuId KService::Ptr newService KService::Ptr KServiceFactory::findServiceByStorageId QString _storageId KService::Ptr service findServiceByMenuId _storageId service service service findServiceByDesktopPath _storageId service service QDir::isRelativePath _storageId QFile::exists _storageId KService::Ptr KService _storageId QString tmp _storageId tmp tmp mid tmp lastIndexOf QLatin1Char tmp endsWith QLatin1String tmp truncate tmp length tmp endsWith QLatin1String tmp truncate tmp length service findServiceByDesktopName tmp service KService KServiceFactory::createEntry offset KSycocaType type QDataStream str sycoca findEntry offset type type KST_KService qWarning int type KService newEntry KService str offset newEntry isValid qWarning newEntry newEntry newEntry KService::List KServiceFactory::allServices KService::List result KSycocaEntry::List list allEntries KSycocaEntry::List::const_iterator it list begin KSycocaEntry::List::const_iterator end list end it end it KSycocaEntry::Ptr entry it entry isType KST_KService KService::Ptr service static_cast&lt;KService*&gt; entry data result append service result QStringList KServiceFactory::resourceDirs KSycocaFactory::allDirectories QStringLiteral KSycocaFactory::allDirectories QStringLiteral QList&lt;KServiceOffer&gt; KServiceFactory::offers serviceTypeOffset serviceOffersOffset QList&lt;KServiceOffer&gt; list QDataStream str stream str device seek m_offerListOffset serviceOffersOffset qint32 aServiceTypeOffset aServiceOffset initialPreference mimeTypeInheritanceLevel aServiceTypeOffset aServiceTypeOffset aServiceOffset initialPreference mimeTypeInheritanceLevel aServiceTypeOffset serviceTypeOffset savedPos str device pos KService serv createEntry aServiceOffset serv KService::Ptr servPtr serv list append KServiceOffer servPtr initialPreference mimeTypeInheritanceLevel servPtr allowAsDefault str device seek savedPos list KService::List KServiceFactory::serviceOffers serviceTypeOffset serviceOffersOffset KService::List list QDataStream str stream str device seek m_offerListOffset serviceOffersOffset qint32 aServiceTypeOffset aServiceOffset initialPreference mimeTypeInheritanceLevel aServiceTypeOffset aServiceTypeOffset aServiceOffset initialPreference mimeTypeInheritanceLevel aServiceTypeOffset serviceTypeOffset savedPos str device pos KService serv createEntry aServiceOffset serv list append KService::Ptr serv str device seek savedPos list KServiceFactory::hasOffer serviceTypeOffset serviceOffersOffset testedServiceOffset QDataStream str stream savedPos str device pos str device seek m_offerListOffset serviceOffersOffset found qint32 aServiceTypeOffset aServiceOffset initialPreference mimeTypeInheritanceLevel found aServiceTypeOffset aServiceTypeOffset aServiceOffset initialPreference mimeTypeInheritanceLevel aServiceTypeOffset serviceTypeOffset aServiceOffset testedServiceOffset found str device seek savedPos found KServiceFactory::virtual_hook data KSycocaFactory::virtual_hook data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00030</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroup::KServiceGroup QString name KSycocaEntry new KServiceGroupPrivate name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00035</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroup::KServiceGroup QString configFile QString _relpath KSycocaEntry new KServiceGroupPrivate _relpath Q_D KServiceGroup QString cfg configFile cfg isEmpty cfg _relpath QLatin1String d load cfg KServiceGroupPrivate::load QString cfg directoryEntryPath cfg KDesktopFile desktopFile cfg KConfigGroup config desktopFile desktopGroup m_strCaption config readEntry m_strIcon config readEntry m_strComment config readEntry deleted config readEntry m_bNoDisplay desktopFile noDisplay m_strBaseGroupName config readEntry suppressGenericNames config readEntry QStringList m_strCaption isEmpty m_strCaption path m_strCaption endsWith QLatin1Char m_strCaption m_strCaption left m_strCaption length i m_strCaption lastIndexOf QLatin1Char i m_strCaption m_strCaption mid i m_strIcon isEmpty m_strIcon QStringLiteral KServiceGroup::KServiceGroup QDataStream _str offset deep KSycocaEntry KServiceGroupPrivate _str offset Q_D KServiceGroup d m_bDeep deep d load _str KServiceGroup::~KServiceGroup</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text">QString KServiceGroup::relPath entryPath</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00098</field>
    <field name="keywords"></field>
    <field name="text">QString KServiceGroup::caption Q_D KServiceGroup d m_strCaption</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text">QString KServiceGroup::icon Q_D KServiceGroup d m_strIcon</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text">QString KServiceGroup::comment Q_D KServiceGroup d m_strComment</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00116</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroup::childCount Q_D KServiceGroup d childCount KServiceGroupPrivate::childCount m_childCount m_childCount KServiceGroup::List::ConstIterator it m_serviceList begin it m_serviceList end it KSycocaEntry::Ptr p it p isType KST_KService KService::Ptr service static_cast&lt;KService*&gt; p data service noDisplay m_childCount p isType KST_KServiceGroup KServiceGroup::Ptr serviceGroup static_cast&lt;KServiceGroup*&gt; p data m_childCount serviceGroup childCount m_childCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00144</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroup::showInlineHeader Q_D KServiceGroup d m_bShowInlineHeader</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00150</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroup::showEmptyMenu Q_D KServiceGroup d m_bShowEmptyMenu</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00156</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroup::inlineAlias Q_D KServiceGroup d m_bInlineAlias KServiceGroup::setInlineAlias _b Q_D KServiceGroup d m_bInlineAlias _b KServiceGroup::setShowEmptyMenu _b Q_D KServiceGroup d m_bShowEmptyMenu _b KServiceGroup::setShowInlineHeader _b Q_D KServiceGroup d m_bShowInlineHeader _b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00180</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroup::inlineValue Q_D KServiceGroup d m_inlineValue KServiceGroup::setInlineValue _val Q_D KServiceGroup d m_inlineValue _val</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00192</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroup::allowInline Q_D KServiceGroup d m_bAllowInline KServiceGroup::setAllowInline _b Q_D KServiceGroup d m_bAllowInline _b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00204</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroup::noDisplay Q_D KServiceGroup d m_bNoDisplay d m_strCaption startsWith QLatin1Char</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00210</field>
    <field name="keywords"></field>
    <field name="text">QStringList KServiceGroup::suppressGenericNames Q_D KServiceGroup d suppressGenericNames KServiceGroupPrivate::load QDataStream s QStringList groupList qint8 noDisplay qint8 _showEmptyMenu qint8 inlineHeader qint8 _inlineAlias qint8 _allowInline s m_strCaption m_strIcon m_strComment groupList m_strBaseGroupName m_childCount noDisplay suppressGenericNames directoryEntryPath sortOrder _showEmptyMenu inlineHeader _inlineAlias _allowInline m_bNoDisplay noDisplay m_bShowEmptyMenu _showEmptyMenu m_bShowInlineHeader inlineHeader m_bInlineAlias _inlineAlias m_bAllowInline _allowInline m_bDeep Q_FOREACH QString path groupList path endsWith QLatin1Char KServiceGroup::Ptr serviceGroup serviceGroup KSycocaPrivate::self serviceGroupFactory findGroupByDesktopPath path serviceGroup m_serviceList append KServiceGroup::SPtr serviceGroup KService::Ptr service service KSycocaPrivate::self serviceFactory findServiceByDesktopPath path service m_serviceList append KServiceGroup::SPtr service</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00254</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroup::addEntry KSycocaEntry::Ptr entry Q_D KServiceGroup d m_serviceList append entry KServiceGroupPrivate::save QDataStream s KSycocaEntryPrivate::save s QStringList groupList Q_FOREACH KSycocaEntry::Ptr p m_serviceList p isType KST_KService KService::Ptr service static_cast&lt;KService*&gt; p data groupList append service entryPath p isType KST_KServiceGroup KServiceGroup::Ptr serviceGroup static_cast&lt;KServiceGroup*&gt; p data groupList append serviceGroup relPath void childCount qint8 noDisplay m_bNoDisplay qint8 _showEmptyMenu m_bShowEmptyMenu qint8 inlineHeader m_bShowInlineHeader qint8 _inlineAlias m_bInlineAlias qint8 _allowInline m_bAllowInline s m_strCaption m_strIcon m_strComment groupList m_strBaseGroupName m_childCount noDisplay suppressGenericNames directoryEntryPath sortOrder _showEmptyMenu inlineHeader _inlineAlias _allowInline</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00290</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KServiceGroup::Ptr&gt; KServiceGroup::groupEntries EntriesOptions options Q_D KServiceGroup sort options SortEntries options AllowSeparators QList&lt;KServiceGroup::Ptr&gt; list List tmp d entries sort options ExcludeNoDisplay options AllowSeparators options SortByGenericName SPtr ptr tmp ptr isType KST_KServiceGroup KServiceGroup::Ptr serviceGroup static_cast&lt;KServiceGroup*&gt; ptr data list append serviceGroup ptr isType KST_KServiceSeparator list append KServiceGroup::Ptr static_cast&lt;KServiceGroup *&gt; KSycocaEntry sort ptr isType KST_KService list</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00309</field>
    <field name="keywords"></field>
    <field name="text">KService::List KServiceGroup::serviceEntries EntriesOptions options Q_D KServiceGroup sort options SortEntries options AllowSeparators QList&lt;KService::Ptr&gt; list List tmp d entries sort options ExcludeNoDisplay options AllowSeparators options SortByGenericName foundService SPtr ptr tmp ptr isType KST_KService list append KService::Ptr static_cast&lt;KService*&gt; ptr data foundService ptr isType KST_KServiceSeparator foundService list append KService::Ptr static_cast&lt;KService *&gt; KSycocaEntry list KServiceGroup::List</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00328</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroup::entries sort Q_D KServiceGroup d entries sort KServiceGroup::List KServiceGroup::entries sort excludeNoDisplay Q_D KServiceGroup d entries sort excludeNoDisplay KServiceGroup::List</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00342</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroup::entries sort excludeNoDisplay allowSeparators sortByGenericName Q_D KServiceGroup d entries sort excludeNoDisplay allowSeparators sortByGenericName addItem KServiceGroup::List sorted KSycocaEntry::Ptr p addSeparator addSeparator sorted isEmpty sorted append KSycocaEntry::Ptr KServiceSeparator sorted append p addSeparator KServiceGroup::List KServiceGroupPrivate::entries KServiceGroup group sort excludeNoDisplay allowSeparators sortByGenericName KSycoca::self ensureCacheValid KServiceGroup::Ptr grp m_bDeep grp KSycocaPrivate::self serviceGroupFactory findGroupByDesktopPath path group grp data group KServiceGroup::List sort group d_func m_serviceList QMap&lt;QByteArray, KServiceGroup::SPtr&gt; SortedContainer SortedContainer slist SortedContainer glist Q_FOREACH KSycocaEntry::Ptr p group d_func m_serviceList noDisplay p isType KST_KServiceGroup KServiceGroup p data noDisplay KService p data noDisplay excludeNoDisplay noDisplay SortedContainer list p isType KST_KServiceGroup glist slist QString name p isType KST_KServiceGroup name KServiceGroup p data caption sortByGenericName name KService p data genericName QLatin1Char p name name p name QLatin1Char KService p data genericName QByteArray nameStr name toLocal8Bit QByteArray key key resize name length ln strxfrm key data nameStr constData key size ln key resize ln ln key size ln strxfrm key data nameStr constData key size ln key nameStr key nameStr list insert key KServiceGroup::SPtr p sortOrder isEmpty sortOrder QStringLiteral sortOrder QStringLiteral sortOrder QStringLiteral QString rp path rp QLatin1String rp clear Q_FOREACH QString item sortOrder item isEmpty item QLatin1Char QString groupPath rp item mid QLatin1Char SortedContainer::iterator it2 glist begin it2 glist end it2 KServiceGroup::Ptr group static_cast&lt;KServiceGroup*&gt; it2 value data group relPath groupPath glist erase it2 item QLatin1Char SortedContainer::iterator it2 slist begin it2 slist end it2 KService::Ptr service static_cast&lt;KService*&gt; it2 value data service menuId item slist erase it2 KServiceGroup::List sorted needSeparator QStringList::ConstIterator it sortOrder constBegin it sortOrder constEnd it QString item it item isEmpty item QLatin1Char item QLatin1String allowSeparators needSeparator item contains QLatin1String QString tmp item tmp tmp remove QStringLiteral QStringList optionAttribute tmp split QLatin1Char QString::SkipEmptyParts optionAttribute isEmpty optionAttribute append tmp showEmptyMenu showInline showInlineHeader showInlineAlias inlineValue QStringList::Iterator it3 optionAttribute begin it3 optionAttribute end it3 parseAttribute it3 showEmptyMenu showInline showInlineHeader showInlineAlias inlineValue SortedContainer::Iterator it2 glist begin it2 glist end it2 KServiceGroup::Ptr group static_cast&lt;KServiceGroup*&gt; it2 value data group setShowEmptyMenu showEmptyMenu group setAllowInline showInline group setShowInlineHeader showInlineHeader group setInlineAlias showInlineAlias group setInlineValue inlineValue item QLatin1String SortedContainer::const_iterator it2 glist constBegin it2 glist constEnd it2 addItem sorted it2 value needSeparator item QLatin1String SortedContainer::const_iterator it2 slist constBegin it2 slist constEnd it2 addItem sorted it2 value needSeparator item QLatin1String SortedContainer::Iterator it_s slist begin SortedContainer::Iterator it_g glist begin it_s slist end it_g glist end addItem sorted it_g value needSeparator it_g it_g glist end addItem sorted it_s value needSeparator it_s it_g key it_s key addItem sorted it_g value needSeparator it_g addItem sorted it_s value needSeparator it_s item QLatin1Char QString groupPath rp item mid QLatin1Char KServiceGroup::List::ConstIterator it2 group d_func m_serviceList constBegin it2 group d_func m_serviceList constEnd it2 isType KST_KServiceGroup KServiceGroup::Ptr group static_cast&lt;KServiceGroup*&gt; data group relPath groupPath excludeNoDisplay group noDisplay it QString nextItem it sortOrder constEnd QString it nextItem startsWith QLatin1String QString tmp nextItem tmp tmp remove QStringLiteral QStringList optionAttribute tmp split QLatin1Char QString::SkipEmptyParts optionAttribute isEmpty optionAttribute append tmp bShowEmptyMenu bShowInline bShowInlineHeader bShowInlineAlias inlineValue Q_FOREACH QString opt_attr optionAttribute parseAttribute opt_attr bShowEmptyMenu bShowInline bShowInlineHeader bShowInlineAlias inlineValue group setShowEmptyMenu bShowEmptyMenu group setAllowInline bShowInline group setShowInlineHeader bShowInlineHeader group setInlineAlias bShowInlineAlias group setInlineValue inlineValue it addItem sorted KServiceGroup::SPtr group needSeparator KServiceGroup::List::ConstIterator it2 group d_func m_serviceList constBegin it2 group d_func m_serviceList constEnd it2 isType KST_KService KService::Ptr service static_cast&lt;KService*&gt; data service menuId item excludeNoDisplay service noDisplay addItem sorted it2 needSeparator sorted KServiceGroupPrivate::parseAttribute QString item showEmptyMenu showInline showInlineHeader showInlineAlias inlineValue item QLatin1String showEmptyMenu item QLatin1String showEmptyMenu item QLatin1String showInline item QLatin1String showInline item QLatin1String showInlineHeader item QLatin1String showInlineHeader item QLatin1String showInlineAlias item QLatin1String showInlineAlias item contains QLatin1String QString tmp item tmp tmp remove QStringLiteral tmp tmp remove QLatin1Char ok _inlineValue tmp toInt ok ok _inlineValue inlineValue _inlineValue qDebug item</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00649</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroup::setLayoutInfo QStringList layout Q_D KServiceGroup d sortOrder layout</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00655</field>
    <field name="keywords"></field>
    <field name="text">QStringList KServiceGroup::layoutInfo Q_D KServiceGroup d sortOrder KServiceGroup::Ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00662</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroup::root KSycoca::self ensureCacheValid KSycocaPrivate::self serviceGroupFactory findGroupByDesktopPath QStringLiteral KServiceGroup::Ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00669</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroup::group QString relPath relPath isEmpty root KSycoca::self ensureCacheValid KSycocaPrivate::self serviceGroupFactory findGroupByDesktopPath relPath KServiceGroup::Ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00679</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroup::childGroup QString parent KSycoca::self ensureCacheValid KSycocaPrivate::self serviceGroupFactory findGroupByDesktopPath QString::fromLatin1 parent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00685</field>
    <field name="keywords"></field>
    <field name="text">QString KServiceGroup::baseGroupName d_func m_strBaseGroupName QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.cpp</field>
    <field name="url">kservicegroup_8cpp_source.html#l00691</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroup::directoryEntryPath Q_D KServiceGroup d directoryEntryPath KServiceSeparatorPrivate KSycocaEntryPrivate K_SYCOCATYPE KST_KServiceSeparator KSycocaEntryPrivate KServiceSeparatorPrivate QString name KSycocaEntryPrivate name QString name QString KServiceSeparatorPrivate::name QStringLiteral KServiceSeparator::KServiceSeparator KSycocaEntry KServiceSeparatorPrivate QStringLiteral KServiceSeparator::~KServiceSeparator</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.h</field>
    <field name="url">kservicegroup_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KBuildServiceGroupFactory KServiceGroupPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.h</field>
    <field name="url">kservicegroup_8h_source.html#l00061</field>
    <field name="keywords"></field>
    <field name="text">KSERVICE_EXPORT KServiceGroup KSycocaEntry KBuildServiceGroupFactory QExplicitlySharedDataPointer&lt;KServiceGroup&gt; Ptr QExplicitlySharedDataPointer&lt;KSycocaEntry&gt; SPtr QList&lt;SPtr&gt; List KServiceGroup QString name KServiceGroup QString _fullpath QString _relpath KServiceGroup QString relPath QString caption QString icon QString comment childCount noDisplay showEmptyMenu setShowEmptyMenu b showInlineHeader setShowInlineHeader _b inlineAlias setInlineAlias _b allowInline setAllowInline _b inlineValue setInlineValue _val QStringList suppressGenericNames setLayoutInfo QStringList layout QStringList layoutInfo List entries sorted excludeNoDisplay allowSeparators sortByGenericName List entries sorted excludeNoDisplay List entries sorted</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroup.h</field>
    <field name="url">kservicegroup_8h_source.html#l00197</field>
    <field name="keywords"></field>
    <field name="text">EntriesOption NoOptions SortEntries ExcludeNoDisplay AllowSeparators SortByGenericName Q_DECLARE_FLAGS EntriesOptions EntriesOption QList&lt;Ptr&gt; groupEntries EntriesOptions options ExcludeNoDisplay KService::List serviceEntries EntriesOptions options ExcludeNoDisplay QString baseGroupName QString directoryEntryPath Ptr root Ptr group QString relPath Ptr childGroup QString parent addEntry KSycocaEntry::Ptr entry KServiceGroupFactory KServiceGroup QDataStream _str offset deep Q_DECLARE_PRIVATE KServiceGroup</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicegroupfactory.cpp</field>
    <field name="url">kservicegroupfactory_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KServiceGroupFactory::KServiceGroupFactory KSycoca db KSycocaFactory KST_KServiceGroupFactory db m_baseGroupDict m_baseGroupDictOffset sycoca isBuilding QDataStream str stream str qint32 i i m_baseGroupDictOffset i saveOffset str device pos m_baseGroupDict KSycocaDict str m_baseGroupDictOffset str device seek saveOffset KServiceGroupFactory::~KServiceGroupFactory m_baseGroupDict KServiceGroup::Ptr KServiceGroupFactory::findGroupByDesktopPath QString _name deep sycocaDict KServiceGroup::Ptr offset sycocaDict find_string _name offset KServiceGroup::Ptr KServiceGroup::Ptr newGroup createGroup offset deep newGroup newGroup relPath _name newGroup newGroup KServiceGroup::Ptr KServiceGroupFactory::findBaseGroup QString _baseGroupName deep m_baseGroupDict KServiceGroup::Ptr offset m_baseGroupDict find_string _baseGroupName offset KServiceGroup::Ptr KServiceGroup::Ptr newGroup createGroup offset deep newGroup newGroup baseGroupName _baseGroupName newGroup newGroup KServiceGroup KServiceGroupFactory::createGroup offset deep KSycocaType type QDataStream str sycoca findEntry offset type type KST_KServiceGroup qWarning int type KServiceGroup newEntry KServiceGroup str offset deep newEntry isValid qWarning newEntry newEntry newEntry KServiceGroup KServiceGroupFactory::createEntry offset createGroup offset KServiceGroupFactory::virtual_hook data KSycocaFactory::virtual_hook data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceoffer.cpp</field>
    <field name="url">kserviceoffer_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KServiceOfferPrivate KServiceOfferPrivate preference mimeTypeInheritanceLevel bAllowAsDefault false pService preference mimeTypeInheritanceLevel bAllowAsDefault KService::Ptr pService</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceoffer.cpp</field>
    <field name="url">kserviceoffer_8cpp_source.html#l00039</field>
    <field name="keywords"></field>
    <field name="text">KServiceOffer::KServiceOffer d new KServiceOfferPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceoffer.cpp</field>
    <field name="url">kserviceoffer_8cpp_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">KServiceOffer::KServiceOffer KServiceOffer _o d new KServiceOfferPrivate d _o d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceoffer.cpp</field>
    <field name="url">kserviceoffer_8cpp_source.html#l00050</field>
    <field name="keywords"></field>
    <field name="text">KServiceOffer::KServiceOffer KService::Ptr _service _pref mimeTypeInheritanceLevel _default d new KServiceOfferPrivate d pService _service d preference _pref d mimeTypeInheritanceLevel mimeTypeInheritanceLevel d bAllowAsDefault _default KServiceOffer::~KServiceOffer d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceoffer.cpp</field>
    <field name="url">kserviceoffer_8cpp_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">KServiceOffer KServiceOffer::operator= KServiceOffer rhs rhs d rhs d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceoffer.cpp</field>
    <field name="url">kserviceoffer_8cpp_source.html#l00074</field>
    <field name="keywords"></field>
    <field name="text">KServiceOffer::operator&lt;  KServiceOffer _o d mimeTypeInheritanceLevel _o d mimeTypeInheritanceLevel d mimeTypeInheritanceLevel _o d mimeTypeInheritanceLevel _o d bAllowAsDefault d bAllowAsDefault _o d bAllowAsDefault d bAllowAsDefault _o d preference d preference</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceoffer.cpp</field>
    <field name="url">kserviceoffer_8cpp_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text">KServiceOffer::allowAsDefault d bAllowAsDefault</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceoffer.cpp</field>
    <field name="url">kserviceoffer_8cpp_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text">KServiceOffer::preference d preference</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceoffer.cpp</field>
    <field name="url">kserviceoffer_8cpp_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text">KServiceOffer::setPreference p d preference p</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceoffer.cpp</field>
    <field name="url">kserviceoffer_8cpp_source.html#l00112</field>
    <field name="keywords"></field>
    <field name="text">KService::Ptr KServiceOffer::service d pService</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceoffer.cpp</field>
    <field name="url">kserviceoffer_8cpp_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text">KServiceOffer::isValid d preference</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceoffer.cpp</field>
    <field name="url">kserviceoffer_8cpp_source.html#l00122</field>
    <field name="keywords"></field>
    <field name="text">KServiceOffer::setMimeTypeInheritanceLevel level d mimeTypeInheritanceLevel level</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceoffer.cpp</field>
    <field name="url">kserviceoffer_8cpp_source.html#l00127</field>
    <field name="keywords"></field>
    <field name="text">KServiceOffer::mimeTypeInheritanceLevel d mimeTypeInheritanceLevel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceoffer.h</field>
    <field name="url">kserviceoffer_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KServiceOfferPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kserviceoffer.h</field>
    <field name="url">kserviceoffer_8h_source.html#l00039</field>
    <field name="keywords"></field>
    <field name="text">KSERVICE_EXPORT KServiceOffer KServiceOffer KServiceOffer KServiceOffer KServiceOffer KService::Ptr service pref mimeTypeInheritanceLevel allowedAsDefault KServiceOffer operator&lt;  KServiceOffer KServiceOffer operator= KServiceOffer other allowAsDefault preference setPreference p KService::Ptr service isValid setMimeTypeInheritanceLevel level mimeTypeInheritanceLevel KServiceOfferPrivate d QList&lt;KServiceOffer&gt; KServiceOfferList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetype.cpp</field>
    <field name="url">kservicetype_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">servicesDebugArea QDataStream QString QVariant QDataStream QMap&lt;QString, QVariant&gt; QDataStream operator&lt;&lt; &lt;QString, QVariant&gt; QDataStream QMap&lt;QString, QVariant&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetype.cpp</field>
    <field name="url">kservicetype_8cpp_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">KServiceType::KServiceType KDesktopFile config KSycocaEntry new KServiceTypePrivate config fileName Q_D KServiceType d init config KServiceTypePrivate::init KDesktopFile config KConfigGroup desktopGroup config desktopGroup m_strName desktopGroup readEntry m_strComment desktopGroup readEntry deleted desktopGroup readEntry QString sDerived desktopGroup readEntry m_bDerived sDerived isEmpty m_bDerived m_mapProps insert QStringLiteral sDerived QStringList tmpList config groupList QStringList::const_iterator gIt tmpList begin gIt tmpList end gIt startsWith QLatin1String KConfigGroup cg config gIt QVariant v QVariant::nameToType cg readEntry toLatin1 constData v cg readEntry v v isValid m_mapProps insert mid v gIt tmpList begin gIt tmpList end gIt startsWith QLatin1String KConfigGroup cg config gIt m_mapPropDefs insert mid QVariant::nameToType cg readEntry toLatin1 constData KServiceType::KServiceType QDataStream _str offset KSycocaEntry KServiceTypePrivate _str offset Q_D KServiceType d load _str KServiceTypePrivate::load QDataStream _str qint8 b QString dummy _str m_strName dummy m_strComment m_mapProps m_mapPropDefs b m_serviceOffersOffset m_bDerived m_mapProps contains QLatin1String KServiceTypePrivate::save QDataStream _str KSycocaEntryPrivate::save _str _str m_strName QString m_strComment m_mapProps m_mapPropDefs qint8 m_serviceOffersOffset KServiceType::~KServiceType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetype.cpp</field>
    <field name="url">kservicetype_8cpp_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text">QString KServiceType::parentServiceType QVariant v property QStringLiteral v toString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetype.cpp</field>
    <field name="url">kservicetype_8cpp_source.html#l00126</field>
    <field name="keywords"></field>
    <field name="text">KServiceType::inherits QString servTypeName name servTypeName QString st parentServiceType st isEmpty KServiceType::Ptr ptr KServiceType::serviceType st ptr ptr name servTypeName st ptr parentServiceType QVariant KServiceTypePrivate::property QString _name QVariant v _name QLatin1String v QVariant m_strName _name QLatin1String v QVariant m_strComment v m_mapProps value _name v QStringList KServiceTypePrivate::propertyNames QStringList res m_mapProps keys res append QStringLiteral res append QStringLiteral res QVariant::Type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetype.cpp</field>
    <field name="url">kservicetype_8cpp_source.html#l00171</field>
    <field name="keywords"></field>
    <field name="text">KServiceType::propertyDef QString _name Q_D KServiceType QVariant::Type d m_mapPropDefs value _name QVariant::Invalid QStringList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetype.cpp</field>
    <field name="url">kservicetype_8cpp_source.html#l00178</field>
    <field name="keywords"></field>
    <field name="text">KServiceType::propertyDefNames Q_D KServiceType d m_mapPropDefs keys</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetype.cpp</field>
    <field name="url">kservicetype_8cpp_source.html#l00184</field>
    <field name="keywords"></field>
    <field name="text">KServiceType::Ptr KServiceType::serviceType QString _name KSycoca::self ensureCacheValid KSycocaPrivate::self serviceTypeFactory findServiceTypeByName _name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetype.cpp</field>
    <field name="url">kservicetype_8cpp_source.html#l00190</field>
    <field name="keywords"></field>
    <field name="text">KServiceType::List KServiceType::allServiceTypes KSycoca::self ensureCacheValid KSycocaPrivate::self serviceTypeFactory allServiceTypes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetype.cpp</field>
    <field name="url">kservicetype_8cpp_source.html#l00196</field>
    <field name="keywords"></field>
    <field name="text">KServiceType::Ptr KServiceType::parentType Q_D KServiceType d m_parentTypeLoaded d parentType d m_parentTypeLoaded QString parentSt parentServiceType parentSt isEmpty KServiceType::Ptr KSycoca::self ensureCacheValid d parentType KSycocaPrivate::self serviceTypeFactory findServiceTypeByName parentSt d parentType qWarning entryPath parentSt d parentType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetype.cpp</field>
    <field name="url">kservicetype_8cpp_source.html#l00218</field>
    <field name="keywords"></field>
    <field name="text">KServiceType::setServiceOffersOffset offset Q_D KServiceType Q_ASSERT offset d m_serviceOffersOffset offset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetype.cpp</field>
    <field name="url">kservicetype_8cpp_source.html#l00225</field>
    <field name="keywords"></field>
    <field name="text">KServiceType::serviceOffersOffset Q_D KServiceType d serviceOffersOffset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetype.cpp</field>
    <field name="url">kservicetype_8cpp_source.html#l00231</field>
    <field name="keywords"></field>
    <field name="text">QString KServiceType::comment Q_D KServiceType d comment</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetype.cpp</field>
    <field name="url">kservicetype_8cpp_source.html#l00237</field>
    <field name="keywords"></field>
    <field name="text">KServiceType::isDerived Q_D KServiceType d m_bDerived</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetype.cpp</field>
    <field name="url">kservicetype_8cpp_source.html#l00243</field>
    <field name="keywords"></field>
    <field name="text">QMap&lt;QString, QVariant::Type&gt; KServiceType::propertyDefs Q_D KServiceType d m_mapPropDefs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetype.h</field>
    <field name="url">kservicetype_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KDesktopFile KServiceTypePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetype.h</field>
    <field name="url">kservicetype_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">KSERVICE_EXPORT KServiceType KSycocaEntry QExplicitlySharedDataPointer&lt;KServiceType&gt; Ptr QList&lt;Ptr&gt; List KServiceType KDesktopFile config KServiceType QString comment isDerived QString parentServiceType inherits QString servTypeName QVariant::Type propertyDef QString _name QStringList propertyDefNames QMap&lt;QString, QVariant::Type&gt; propertyDefs Ptr parentType setServiceOffersOffset offset serviceOffersOffset Ptr serviceType QString _name List allServiceTypes KServiceTypeFactory KServiceType QDataStream _str offset Q_DECLARE_PRIVATE KServiceType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypefactory.cpp</field>
    <field name="url">kservicetypefactory_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KServiceTypeFactory::KServiceTypeFactory KSycoca db KSycocaFactory KST_KServiceTypeFactory db sycoca isBuilding QDataStream str stream Q_ASSERT_X str str qint32 n n n KSycoca::flagError QString string qint32 i n n str i m_propertyTypeDict insert i KServiceTypeFactory::~KServiceTypeFactory sycoca isBuilding KServiceTypeProfile::clearCache KServiceType::Ptr KServiceTypeFactory::findServiceTypeByName QString _name sycocaDict KServiceType::Ptr assert sycoca isBuilding offset sycocaDict find_string _name offset KServiceType::Ptr KServiceType::Ptr newServiceType createEntry offset newServiceType newServiceType name _name newServiceType newServiceType QVariant::Type KServiceTypeFactory::findPropertyTypeByName QString _name sycocaDict QVariant::Invalid assert sycoca isBuilding QVariant::Type m_propertyTypeDict value _name QVariant::Invalid KServiceType::List KServiceTypeFactory::allServiceTypes KServiceType::List result KSycocaEntry::List list allEntries KSycocaEntry::List::ConstIterator it list begin it list end it isType KST_KServiceType KServiceType::Ptr newServiceType static_cast&lt;KServiceType*&gt; data result append newServiceType result QStringList KServiceTypeFactory::resourceDirs KSycocaFactory::allDirectories QStringLiteral KServiceType KServiceTypeFactory::createEntry offset KSycocaType type QDataStream str sycoca findEntry offset type str type KST_KServiceType qWarning int type KServiceType newEntry KServiceType str offset newEntry newEntry isValid qWarning newEntry newEntry newEntry KServiceTypeFactory::virtual_hook data KSycocaFactory::virtual_hook data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypeprofile.cpp</field>
    <field name="url">kservicetypeprofile_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KServiceTypeProfiles QHash KServiceTypeProfiles m_parsed ensureParsed KServiceTypeProfiles clear clear QMutexLocker lock m_mutex qDeleteAll QHash&lt;QString, KServiceTypeProfileEntry *&gt;::clear m_parsed hasProfile QString serviceType QMutexLocker lock m_mutex ensureParsed contains serviceType ensureParsed QMutex m_mutex m_parsed Q_GLOBAL_STATIC KServiceTypeProfiles s_serviceTypeProfiles KServiceTypeProfiles::ensureParsed m_parsed m_parsed KConfig configFile QStringLiteral KConfig::NoGlobals QStringList tmpList configFile groupList QStringList::const_iterator aIt tmpList begin aIt tmpList end aIt QString type aIt KConfigGroup config configFile type count config readEntry KServiceTypeProfileEntry p value type p p KServiceTypeProfileEntry insert type p i i count i QString num QString::fromLatin1 QString::number i QString serviceId config readEntry num QLatin1String QString serviceId isEmpty pref config readEntry num QLatin1String p addService serviceId pref</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypeprofile.cpp</field>
    <field name="url">kservicetypeprofile_8cpp_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text">KServiceTypeProfile::clearCache s_serviceTypeProfiles exists s_serviceTypeProfiles clear</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypeprofile.cpp</field>
    <field name="url">kservicetypeprofile_8cpp_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text">KServiceTypeProfile KServiceOfferList sortServiceTypeOffers KServiceOfferList list QString servicetype KServiceOfferList KServiceTypeProfile::sortServiceTypeOffers KServiceOfferList list QString serviceType QMutexLocker lock s_serviceTypeProfiles m_mutex s_serviceTypeProfiles ensureParsed KServiceTypeProfileEntry profile s_serviceTypeProfiles value serviceType KServiceOfferList offers KServiceOfferList::const_iterator it list begin KServiceOfferList::const_iterator end list end it end it KService::Ptr servPtr service foundInProfile profile QMap&lt;QString, int&gt;::ConstIterator it2 profile m_mapServices constFind servPtr storageId it2 profile m_mapServices constEnd pref it2 value pref offers append KServiceOffer servPtr pref servPtr allowAsDefault foundInProfile foundInProfile offers append KServiceOffer servPtr profile preference servPtr allowAsDefault qStableSort offers offers</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypeprofile.cpp</field>
    <field name="url">kservicetypeprofile_8cpp_source.html#l00169</field>
    <field name="keywords"></field>
    <field name="text">KServiceTypeProfile::hasProfile QString serviceType s_serviceTypeProfiles hasProfile serviceType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypeprofile.cpp</field>
    <field name="url">kservicetypeprofile_8cpp_source.html#l00174</field>
    <field name="keywords"></field>
    <field name="text">KServiceTypeProfile::writeServiceTypeProfile QString serviceType KService::List services KService::List disabledServices KConfig configFile QStringLiteral KConfig::SimpleConfig configFile deleteGroup serviceType KConfigGroup config configFile serviceType count services count config writeEntry count disabledServices count KService::List::ConstIterator servit services begin i servit services end servit i servit QString num QString::fromLatin1 QString::number i config writeEntry num QLatin1String storageId config writeEntry num QLatin1String count i servit disabledServices begin servit disabledServices end servit i servit QString num QString::fromLatin1 QString::number i config writeEntry num QLatin1String storageId config writeEntry num QLatin1String configFile sync clearCache</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypeprofile.cpp</field>
    <field name="url">kservicetypeprofile_8cpp_source.html#l00218</field>
    <field name="keywords"></field>
    <field name="text">KServiceTypeProfile::deleteServiceTypeProfile QString serviceType KConfig config QStringLiteral KConfig::SimpleConfig config deleteGroup serviceType config sync s_serviceTypeProfiles exists s_serviceTypeProfiles take serviceType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypeprofile.h</field>
    <field name="url">kservicetypeprofile_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KServiceTypeProfile KSERVICE_EXPORT writeServiceTypeProfile QString serviceType KService::List services KService::List disabledServices KService::List KSERVICE_EXPORT deleteServiceTypeProfile QString serviceType KSERVICE_EXPORT hasProfile QString serviceType clearCache</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypetrader.cpp</field>
    <field name="url">kservicetypetrader_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KTraderParse KServiceTypeProfile KServiceOfferList sortServiceTypeOffers KServiceOfferList list QString servicetype KServiceTypeTraderSingleton KServiceTypeTrader instance Q_GLOBAL_STATIC KServiceTypeTraderSingleton s_globalServiceTypeTrader</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypetrader.cpp</field>
    <field name="url">kservicetypetrader_8cpp_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">KServiceTypeTrader KServiceTypeTrader self s_globalServiceTypeTrader instance KServiceTypeTrader::KServiceTypeTrader d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypetrader.cpp</field>
    <field name="url">kservicetypetrader_8cpp_source.html#l00059</field>
    <field name="keywords"></field>
    <field name="text">KServiceTypeTrader::~KServiceTypeTrader</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypetrader.cpp</field>
    <field name="url">kservicetypetrader_8cpp_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">KServiceTypeTrader::applyConstraints KService::List lst QString constraint lst isEmpty constraint isEmpty ParseTreeBase::Ptr constr parseConstraints constraint ParseTreeBase pConstraintTree constr data constr lst clear KService::List::iterator it lst begin it lst end matchConstraint pConstraintTree it lst it lst erase it it dumpOfferList KServiceOfferList offers OfferList::Iterator itOff offers begin itOff offers end itOff endif KServiceOfferList KServiceTypeTrader::weightedOffers QString serviceType KSycoca::self ensureCacheValid KServiceType::Ptr servTypePtr KSycocaPrivate::self serviceTypeFactory findServiceTypeByName serviceType servTypePtr qWarning serviceType KServiceOfferList servTypePtr serviceOffersOffset KServiceOfferList KServiceOfferList services KSycocaPrivate::self serviceFactory offers servTypePtr offset servTypePtr serviceOffersOffset KServiceOfferList offers KServiceTypeProfile::sortServiceTypeOffers services serviceType dumpOfferList offers offers</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypetrader.cpp</field>
    <field name="url">kservicetypetrader_8cpp_source.html#l00127</field>
    <field name="keywords"></field>
    <field name="text">KService::List KServiceTypeTrader::defaultOffers QString serviceType QString constraint KSycoca::self ensureCacheValid KServiceType::Ptr servTypePtr KSycocaPrivate::self serviceTypeFactory findServiceTypeByName serviceType servTypePtr qWarning serviceType KService::List servTypePtr serviceOffersOffset KService::List KService::List lst KSycocaPrivate::self serviceFactory serviceOffers servTypePtr offset servTypePtr serviceOffersOffset applyConstraints lst constraint lst</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypetrader.cpp</field>
    <field name="url">kservicetypetrader_8cpp_source.html#l00150</field>
    <field name="keywords"></field>
    <field name="text">KService::List KServiceTypeTrader::query QString serviceType QString constraint KServiceTypeProfile::hasProfile serviceType defaultOffers serviceType constraint KService::List lst KServiceOfferList offers weightedOffers serviceType KServiceOfferList::const_iterator itOff offers begin itOff offers end itOff lst append service applyConstraints lst constraint lst</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypetrader.cpp</field>
    <field name="url">kservicetypetrader_8cpp_source.html#l00176</field>
    <field name="keywords"></field>
    <field name="text">KService::Ptr KServiceTypeTrader::preferredService QString serviceType KServiceOfferList offers weightedOffers serviceType KServiceOfferList::const_iterator itOff offers begin itOff offers end allowAsDefault service KService::Ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypetrader.h</field>
    <field name="url">kservicetypetrader_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KServiceOffer QList&lt;KServiceOffer&gt; KServiceOfferList KServiceTypeTraderPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypetrader.h</field>
    <field name="url">kservicetypetrader_8h_source.html#l00072</field>
    <field name="keywords"></field>
    <field name="text">KSERVICE_EXPORT KServiceTypeTrader KServiceTypeTrader KService::List query QString servicetype QString constraint QString KService::List defaultOffers QString serviceType QString constraint QString KService::Ptr preferredService QString serviceType KServiceTypeTrader</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypetrader.h</field>
    <field name="url">kservicetypetrader_8h_source.html#l00155</field>
    <field name="keywords"></field>
    <field name="text">T createInstanceFromQuery QString serviceType QString constraint QString QObject parent QVariantList args QVariantList QString error createInstanceFromQuery&lt;T&gt; serviceType parent constraint args error</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kservicetypetrader.h</field>
    <field name="url">kservicetypetrader_8h_source.html#l00180</field>
    <field name="keywords"></field>
    <field name="text">T createInstanceFromQuery QString serviceType QWidget parentWidget QObject parent QString constraint QString QVariantList args QVariantList QString error KService::List offers query serviceType constraint error error clear Q_FOREACH KService::Ptr ptr offers T component ptr template createInstance&lt;T&gt; parentWidget parent args error component component error error isEmpty error QCoreApplication::translate applyConstraints KService::List lst QString constraint KServiceTypeTrader KServiceTypeTrader KServiceTypeTrader other KServiceTypeTrader operator= KServiceTypeTrader rhs KServiceOfferList weightedOffers QString serviceType KServiceTypeTraderPrivate d KServiceTypeTraderSingleton</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QDataStream operator&gt;&gt; QDataStream in KSycocaHeader h in h prefixes h timeStamp h language h updateSignature in Q_DECLARE_OPERATORS_FOR_FLAGS KSycocaPrivate::BehaviorsIfNotFound KSycocaPrivate::KSycocaPrivate KSycoca q databaseStatus DatabaseNotOpen readError false timeStamp m_databasePath updateSig m_haveListeners false m_globalDatabase false q q sycoca_size sycoca_mmap m_mmapFile m_device m_mimeTypeFactory m_serviceTypeFactory m_serviceFactory m_serviceGroupFactory m_sycocaStrategy StrategyMemFile m_sycocaStrategy StrategyMmap KConfigGroup config KSharedConfig::openConfig setStrategyFromString config readEntry KSycocaPrivate::setStrategyFromString QString strategy strategy QLatin1String m_sycocaStrategy StrategyMmap strategy QLatin1String m_sycocaStrategy StrategyFile strategy QLatin1String m_sycocaStrategy StrategyMemFile strategy isEmpty qCWarning SYCOCA strategy KSycocaPrivate::tryMmap Q_ASSERT m_databasePath isEmpty m_mmapFile QFile m_databasePath canRead m_mmapFile open QIODevice::ReadOnly Q_ASSERT canRead canRead fcntl m_mmapFile handle F_SETFD FD_CLOEXEC sycoca_size m_mmapFile size mmapRet mmap sycoca_size PROT_READ MAP_SHARED m_mmapFile handle mmapRet MAP_FAILED mmapRet qCDebug SYCOCA nospace sycoca_size sycoca_mmap sycoca_mmap mmapRet void posix_madvise mmapRet sycoca_size POSIX_MADV_WILLNEED</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00165</field>
    <field name="keywords"></field>
    <field name="text">KSycoca::version KSYCOCA_VERSION KSycocaSingleton KSycocaSingleton KSycocaSingleton hasSycoca m_threadSycocas hasLocalData KSycoca sycoca m_threadSycocas hasLocalData m_threadSycocas setLocalData KSycoca m_threadSycocas localData setSycoca KSycoca s m_threadSycocas setLocalData s QThreadStorage&lt;KSycoca *&gt; m_threadSycocas Q_GLOBAL_STATIC KSycocaSingleton ksycocaInstance QString KSycocaPrivate::findDatabase Q_ASSERT databaseStatus DatabaseNotOpen m_globalDatabase QString path KSycoca::absoluteFilePath QFileInfo info path canRead info isReadable canRead QString globalPath KSycoca::absoluteFilePath KSycoca::GlobalDatabase globalPath isEmpty info setFile globalPath canRead info isReadable canRead m_globalDatabase path globalPath canRead m_haveListeners m_fileWatcher addFile path path m_fileWatcher addFile path QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00230</field>
    <field name="keywords"></field>
    <field name="text">KSycoca::KSycoca d new KSycocaPrivate this connect d m_fileWatcher KDirWatch::created connect d m_fileWatcher KDirWatch::dirty KSycocaPrivate::openDatabase openDummyIfNotFound Q_ASSERT databaseStatus DatabaseNotOpen m_device m_device m_databasePath isEmpty m_databasePath findDatabase result m_databasePath isEmpty qCDebug SYCOCA m_databasePath m_dbLastModified QFileInfo m_databasePath lastModified checkVersion m_databasePath clear openDummyIfNotFound m_sycocaStrategy StrategyDummyBuffer QDataStream str stream str qint32 KSYCOCA_VERSION str qint32 result result KSycocaAbstractDevice KSycocaPrivate::device m_device m_device Q_ASSERT m_databasePath isEmpty KSycocaAbstractDevice device m_device m_sycocaStrategy StrategyDummyBuffer device KSycocaBufferDevice device device open QIODevice::ReadOnly m_sycocaStrategy StrategyMmap tryMmap device KSycocaMmapDevice sycoca_mmap sycoca_size device device open QIODevice::ReadOnly device device device m_sycocaStrategy StrategyMemFile device KSycocaMemFileDevice m_databasePath device device open QIODevice::ReadOnly device device device device KSycocaFileDevice m_databasePath device device open QIODevice::ReadOnly qCWarning SYCOCA m_databasePath device m_device device m_device QDataStream KSycocaPrivate::stream m_device databaseStatus DatabaseNotOpen checkDatabase KSycocaPrivate::IfNotFoundRecreate KSycocaPrivate::IfNotFoundOpenDummy device m_device stream KSycocaPrivate::slotDatabaseChanged changeList QStringList QStringLiteral QStringLiteral QStringLiteral QStringLiteral qCDebug SYCOCA QThread::currentThread closeDatabase m_databasePath findDatabase emit q databaseChanged emit q databaseChanged changeList KMimeTypeFactory KSycocaPrivate::mimeTypeFactory m_mimeTypeFactory m_mimeTypeFactory KMimeTypeFactory q m_mimeTypeFactory KServiceTypeFactory KSycocaPrivate::serviceTypeFactory m_serviceTypeFactory m_serviceTypeFactory KServiceTypeFactory q m_serviceTypeFactory KServiceFactory KSycocaPrivate::serviceFactory m_serviceFactory m_serviceFactory KServiceFactory q m_serviceFactory KServiceGroupFactory KSycocaPrivate::serviceGroupFactory m_serviceGroupFactory m_serviceGroupFactory KServiceGroupFactory q m_serviceGroupFactory KSycocaPrivate::addLocalResourceDir QString path allResourceDirs insert path timeStamp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00387</field>
    <field name="keywords"></field>
    <field name="text">KSycoca::KSycoca d new KSycocaPrivate this</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00392</field>
    <field name="keywords"></field>
    <field name="text">KSycoca KSycoca::self KSycoca s ksycocaInstance sycoca Q_ASSERT s s KSycoca::~KSycoca d closeDatabase d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00408</field>
    <field name="keywords"></field>
    <field name="text">KSycoca::isAvailable d checkDatabase KSycocaPrivate::IfNotFoundDoNothing KSycocaPrivate::closeDatabase m_device m_device qDeleteAll m_factories m_factories clear m_mimeTypeFactory m_serviceFactory m_serviceTypeFactory m_serviceGroupFactory sycoca_mmap munmap const_cast&lt;char *&gt; sycoca_mmap sycoca_size sycoca_mmap m_mmapFile m_mmapFile databaseStatus DatabaseNotOpen m_databasePath clear timeStamp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00445</field>
    <field name="keywords"></field>
    <field name="text">KSycoca::addFactory KSycocaFactory factory d addFactory factory</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00451</field>
    <field name="keywords"></field>
    <field name="text">KSycoca::isChanged type d changeList contains QString::fromLatin1 type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00457</field>
    <field name="keywords"></field>
    <field name="text">QDataStream KSycoca::findEntry offset KSycocaType type QDataStream str stream Q_ASSERT str str device seek offset qint32 aType str aType type KSycocaType aType str KSycocaFactoryList KSycoca::factories d factories KSycocaPrivate::checkVersion QDataStream m_str device stream Q_ASSERT m_str m_str device seek qint32 aVersion m_str aVersion aVersion KSYCOCA_VERSION qCDebug SYCOCA aVersion KSYCOCA_VERSION databaseStatus BadVersion databaseStatus DatabaseOK KSERVICE_EXPORT kservice_require_kded KSERVICE_EXPORT kservice_require_kded KSycocaPrivate::checkDatabase BehaviorsIfNotFound ifNotFound databaseStatus DatabaseOK checkVersion closeDatabase openDatabase ifNotFound IfNotFoundOpenDummy checkVersion qAppName KBUILDSYCOCA_EXENAME ifNotFound IfNotFoundDoNothing checkDirectories m_lastCheck start ifNotFound IfNotFoundRecreate buildSycoca</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00534</field>
    <field name="keywords"></field>
    <field name="text">QDataStream KSycoca::findFactory KSycocaFactoryId d checkDatabase KSycocaPrivate::IfNotFoundRecreate QDataStream str stream Q_ASSERT str qint32 aId qint32 aOffset str aId aId qCWarning SYCOCA int str aOffset aId str device seek aOffset str KSycoca::needsRebuild d needsRebuild KSycocaHeader KSycocaPrivate::readSycocaHeader KSycocaHeader header checkDatabase KSycocaPrivate::IfNotFoundDoNothing header QDataStream str stream qint64 oldPos str device pos Q_ASSERT str qint32 aId qint32 aOffset str aId aId str aOffset QStringList directoryList str header directoryList allResourceDirs clear i i directoryList count i qint64 mtime str mtime allResourceDirs insert directoryList at i mtime str device seek oldPos timeStamp header timeStamp language header language updateSig header updateSignature m_globalDatabase QString dataHome QStandardPaths::writableLocation QStandardPaths::GenericDataLocation addLocalResourceDir dataHome QLatin1String addLocalResourceDir dataHome QLatin1String addLocalResourceDir dataHome QLatin1String addLocalResourceDir dataHome QLatin1String header TimestampChecker TimestampChecker m_now QDateTime::currentDateTime checkTimestamps QMap&lt;QString, qint64&gt; dirs Q_ASSERT dirs isEmpty it dirs begin it dirs end it QString dir it key qint64 lastStamp it value visitor QFileInfo fi QDateTime mtime fi lastModified mtime toMSecsSinceEpoch lastStamp mtime m_now qCDebug SYCOCA fi filePath mtime qCDebug SYCOCA fi filePath mtime QDateTime::fromMSecsSinceEpoch lastStamp KSycocaUtilsPrivate::visitResourceDirectory dir visitor QDateTime m_now KSycocaPrivate::checkDirectories needsRebuild buildSycoca KSycocaPrivate::needsRebuild timeStamp databaseStatus DatabaseOK void readSycocaHeader timeStamp TimestampChecker checkTimestamps allResourceDirs KSycocaPrivate::buildSycoca KBuildSycoca builder builder recreate closeDatabase openDatabase qCDebug SYCOCA checkVersion qCDebug SYCOCA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00702</field>
    <field name="keywords"></field>
    <field name="text">quint32 KSycoca::timeStamp d timeStamp void d readSycocaHeader d timeStamp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00710</field>
    <field name="keywords"></field>
    <field name="text">quint32 KSycoca::updateSignature d timeStamp void d readSycocaHeader d updateSig</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00718</field>
    <field name="keywords"></field>
    <field name="text">QString KSycoca::absoluteFilePath DatabaseType type QStringList paths QStandardPaths::standardLocations QStandardPaths::GenericDataLocation QString suffix QLatin1Char QLocale bcp47Name type GlobalDatabase QString fileName QStringLiteral suffix QString path QStandardPaths::locate QStandardPaths::GenericDataLocation QStringLiteral fileName path isEmpty paths count QString paths at QStringLiteral fileName path QByteArray ksycoca_env qgetenv ksycoca_env isEmpty QByteArray pathHash QCryptographicHash::hash paths join QString QLatin1Char toUtf8 QCryptographicHash::Sha1 suffix QLatin1Char QString::fromLatin1 pathHash toBase64 suffix replace suffix replace QString fileName QStringLiteral suffix QStandardPaths::writableLocation QStandardPaths::GenericCacheLocation QLatin1Char fileName QFile::decodeName ksycoca_env</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00752</field>
    <field name="keywords"></field>
    <field name="text">QString KSycoca::language d language isEmpty void d readSycocaHeader d language</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00760</field>
    <field name="keywords"></field>
    <field name="text">QStringList KSycoca::allResourceDirs d timeStamp void d readSycocaHeader d allResourceDirs keys</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00768</field>
    <field name="keywords"></field>
    <field name="text">KSycoca::flagError qCWarning SYCOCA KSycoca sycoca sycoca d readError sycoca d readError qAppName KBUILDSYCOCA_EXENAME sycoca isBuilding KBuildSycoca builder void builder recreate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00783</field>
    <field name="keywords"></field>
    <field name="text">KSycoca::isBuilding</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00788</field>
    <field name="keywords"></field>
    <field name="text">KSycoca::disableAutoRebuild qCWarning SYCOCA QDataStream KSycoca::stream d stream KSycoca::connectNotify QMetaMethod signal signal name d m_haveListeners d m_haveListeners d m_databasePath isEmpty d m_databasePath d findDatabase d m_fileWatcher addFile d m_databasePath KSycoca::clearCaches ksycocaInstance exists ksycocaInstance hasSycoca ksycocaInstance sycoca d closeDatabase KSERVICE_EXPORT ksycoca_ms_between_checks KSERVICE_EXPORT ksycoca_ms_between_checks</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.cpp</field>
    <field name="url">ksycoca_8cpp_source.html#l00819</field>
    <field name="keywords"></field>
    <field name="text">KSycoca::ensureCacheValid qAppName KBUILDSYCOCA_EXENAME d databaseStatus KSycocaPrivate::DatabaseOK d checkDatabase KSycocaPrivate::IfNotFoundRecreate d m_lastCheck isValid d m_lastCheck elapsed ksycoca_ms_between_checks d m_lastCheck start QFileInfo info d m_databasePath info lastModified d m_dbLastModified d checkDirectories d closeDatabase</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.h</field>
    <field name="url">ksycoca_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QDataStream KSycocaFactory KSycocaFactoryList KSycocaPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.h</field>
    <field name="url">ksycoca_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">KSERVICE_EXPORT KSycoca QObject Q_OBJECT KSycoca</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycoca.h</field>
    <field name="url">ksycoca_8h_source.html#l00060</field>
    <field name="keywords"></field>
    <field name="text">LocalDatabase GlobalDatabase DatabaseType KSycoca KSycoca KSycoca version isAvailable QDataStream findEntry offset KSycocaType type QDataStream findFactory KSycocaFactoryId QString absoluteFilePath DatabaseType type LocalDatabase KSERVICE_DEPRECATED QString language KSERVICE_DEPRECATED quint32 timeStamp KSERVICE_DEPRECATED quint32 updateSignature QStringList allResourceDirs addFactory KSycocaFactory isBuilding KSERVICE_DEPRECATED disableAutoRebuild KSERVICE_DEPRECATED isChanged type flagError ensureCacheValid Q_SIGNALS databaseChanged databaseChanged QStringList changedResources KSycocaFactoryList factories QDataStream stream KSycocaFactory KSycocaDict connectNotify QMetaMethod signal Q_DECL_OVERRIDE clearCaches needsRebuild KBuildSycoca Kded KSycocaPrivate KSycocaXdgDirsTest Q_DISABLE_COPY KSycoca KSycocaPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocadevices.cpp</field>
    <field name="url">ksycocadevices_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KSycocaAbstractDevice::~KSycocaAbstractDevice m_stream QDataStream KSycocaAbstractDevice::stream m_stream m_stream QDataStream device m_stream setVersion QDataStream::Qt_5_3 m_stream KSycocaMmapDevice::KSycocaMmapDevice sycoca_mmap sycoca_size m_buffer QBuffer m_buffer setData QByteArray::fromRawData sycoca_mmap sycoca_size KSycocaMmapDevice::~KSycocaMmapDevice m_buffer QIODevice KSycocaMmapDevice::device m_buffer KSycocaFileDevice::KSycocaFileDevice QString path m_database QFile path void fcntl m_database handle F_SETFD FD_CLOEXEC KSycocaFileDevice::~KSycocaFileDevice m_database QIODevice KSycocaFileDevice::device m_database KSycocaMemFileDevice::KSycocaMemFileDevice QString path m_database KMemFile path KSycocaMemFileDevice::~KSycocaMemFileDevice m_database QIODevice KSycocaMemFileDevice::device m_database KSycocaBufferDevice::KSycocaBufferDevice m_buffer QBuffer KSycocaBufferDevice::~KSycocaBufferDevice m_buffer QIODevice KSycocaBufferDevice::device m_buffer</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocadict.cpp</field>
    <field name="url">ksycocadict_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">string_entry string_entry QString _key KSycocaEntry::Ptr _payload hash length _key length keyStr _key key keyStr unicode payload _payload uint hash length QString keyStr QChar key KSycocaEntry::Ptr payload KSycocaDictStringList QList KSycocaDictStringList qDeleteAll KSycocaDictPrivate KSycocaDictPrivate stream offset hashTableSize KSycocaDictPrivate qint32 offsetForKey QString key quint32 hashKey QString key KSycocaDictStringList stringlist QDataStream stream qint64 offset quint32 hashTableSize QList&lt;qint32&gt; hashList KSycocaDict::KSycocaDict d new KSycocaDictPrivate KSycocaDict::KSycocaDict QDataStream str offset d new KSycocaDictPrivate d stream str d offset offset quint32 test1 test2 str device seek offset test1 test2 test1 x000fffff test2 KSycoca::flagError d hashTableSize d offset str device seek offset d hashTableSize d hashList d offset str device pos KSycocaDict::~KSycocaDict d KSycocaDict::add QString key KSycocaEntry::Ptr payload key isEmpty payload d stringlist append string_entry key payload KSycocaDict::remove QString key d found KSycocaDictStringList::Iterator it d stringlist begin it d stringlist end it string_entry entry it entry keyStr key d stringlist erase it entry found found qDebug key KSycocaDict::find_string QString key Q_ASSERT d qint32 offset d offsetForKey key offset offset offset offset offset d stream device seek offset d stream offset offset QString dupkey d stream dupkey dupkey key offset QList&lt;int&gt; KSycocaDict::findMultiString QString key qint32 offset d offsetForKey key QList&lt;int&gt; offsetList offset offsetList offset offsetList append offset offsetList offset offset d stream device seek offset d stream offset offset QString dupkey d stream dupkey dupkey key offsetList append offset offsetList uint KSycocaDict::count d d stringlist count KSycocaDict::clear d d uint KSycocaDictPrivate::hashKey QString key len key length uint h i i hashList count i pos hashList i pos pos pos pos pos len h h key len pos cell pos pos pos len h h key pos cell h calcDiversity KSycocaDictStringList stringlistp inPos uint sz inPos KSycocaDictStringList stringlist stringlistp QBitArray matrix sz pos inPos pos inPos it stringlist constBegin end stringlist constEnd it end it string_entry entry it rpos entry length pos rpos uint hash entry hash entry key rpos cell matrix setBit hash sz pos inPos it stringlist constBegin end stringlist constEnd it end it string_entry entry it pos &lt; entry-&gt; length uint hash entry hash entry key pos cell matrix setBit hash sz matrix count addDiversity KSycocaDictStringList stringlistp pos pos KSycocaDictStringList stringlist stringlistp pos pos pos it stringlist constBegin end stringlist constEnd it end it string_entry entry it rpos entry length pos rpos entry hash entry hash entry key rpos cell pos pos it stringlist constBegin end stringlist constEnd it end it string_entry entry it pos &lt; entry-&gt; length entry hash entry hash entry key pos cell KSycocaDict::save QDataStream str count d hashTableSize d hashList clear str d hashTableSize str d hashList d offset str device pos maxLength KSycocaDictStringList::const_iterator it d stringlist constBegin it d stringlist constEnd it string_entry entry it entry hash entry length maxLength maxLength entry length sz count sz sz sz sz sz sz d hashList clear QVector&lt;int&gt; oldvec maxLength oldvec fill mindiv lastDiv divsum divnum maxDiv maxPos pos maxLength pos maxLength pos oldvec pos maxLength mindiv oldvec pos maxLength diversity calcDiversity d stringlist pos sz diversity maxDiv maxDiv diversity maxPos pos oldvec pos maxLength diversity divsum diversity divnum divnum mindiv divsum divnum maxDiv lastDiv lastDiv maxDiv addDiversity d stringlist maxPos d hashList append maxPos it d stringlist constBegin it d stringlist constEnd it hash d hashKey keyStr d hashTableSize sz hashtable_entry string_entry entry QList&lt;string_entry *&gt; duplicates qint64 duplicate_offset hashtable_entry hashTable hashtable_entry sz i i sz i hashTable i entry hashTable i duplicates it d stringlist constBegin it d stringlist constEnd it string_entry entry it hash entry hash sz hashTable hash entry hashTable hash entry entry hashTable hash duplicates hashTable hash duplicates QList&lt;string_entry *&gt; hashTable hash duplicates append hashTable hash entry hashTable hash duplicate_offset hashTable hash duplicates append entry str d hashTableSize str d hashList d offset str device pos pass pass pass str device seek d offset uint i i d hashTableSize i qint32 tmpid hashTable i entry tmpid hashTable i duplicates tmpid hashTable i entry payload offset tmpid hashTable i duplicate_offset str tmpid uint i i d hashTableSize i QList&lt;string_entry *&gt; dups hashTable i duplicates dups hashTable i duplicate_offset str device pos Q_FOREACH string_entry dup dups qint32 offset dup payload offset offset QString storageId dup payload storageId qDebug storageId dup payload data dup payload isType KST_KService KService::Ptr service static_cast&lt;KService*&gt; dup payload data qDebug service storageId service entryPath Q_ASSERT_X offset QByteArray dup payload storageId toLatin1 dup payload entryPath toLatin1 constData str offset str dup keyStr str qint32 uint i i d hashTableSize i hashTable i duplicates hashTable qint32 KSycocaDictPrivate::offsetForKey QString key stream offset qCWarning SYCOCA KBUILDSYCOCA_EXENAME hashTableSize uint hash hashKey key hashTableSize qint32 off offset qint32 hash stream device seek off qint32 retOffset retOffset retOffset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocaentry.cpp</field>
    <field name="url">ksycocaentry_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KSycocaEntryPrivate::KSycocaEntryPrivate QDataStream _str iOffset offset iOffset deleted false _str path KSycocaEntry::KSycocaEntry d_ptr KSycocaEntry::KSycocaEntry KSycocaEntryPrivate d d_ptr d KSycocaEntry::~KSycocaEntry d_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocaentry.cpp</field>
    <field name="url">ksycocaentry_8cpp_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">KSycocaEntry::isType KSycocaType t d_ptr isType t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocaentry.cpp</field>
    <field name="url">ksycocaentry_8cpp_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">KSycocaType KSycocaEntry::sycocaType d_ptr sycocaType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocaentry.cpp</field>
    <field name="url">ksycocaentry_8cpp_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">QString KSycocaEntry::entryPath Q_D KSycocaEntry d path</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocaentry.cpp</field>
    <field name="url">ksycocaentry_8cpp_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">QString KSycocaEntry::storageId Q_D KSycocaEntry d storageId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocaentry.cpp</field>
    <field name="url">ksycocaentry_8cpp_source.html#l00068</field>
    <field name="keywords"></field>
    <field name="text">KSycocaEntry::isDeleted Q_D KSycocaEntry d deleted</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocaentry.cpp</field>
    <field name="url">ksycocaentry_8cpp_source.html#l00074</field>
    <field name="keywords"></field>
    <field name="text">KSycocaEntry::setDeleted deleted Q_D KSycocaEntry d deleted deleted KSycocaEntry::isSeparator d_ptr isType KST_KServiceSeparator KSycocaEntry::offset Q_D KSycocaEntry d offset KSycocaEntryPrivate::save QDataStream s offset s device pos s qint32 sycocaType path</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocaentry.cpp</field>
    <field name="url">ksycocaentry_8cpp_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text">KSycocaEntry::isValid Q_D KSycocaEntry d d isValid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocaentry.cpp</field>
    <field name="url">ksycocaentry_8cpp_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text">QString KSycocaEntry::name Q_D KSycocaEntry d name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocaentry.cpp</field>
    <field name="url">ksycocaentry_8cpp_source.html#l00109</field>
    <field name="keywords"></field>
    <field name="text">QStringList KSycocaEntry::propertyNames Q_D KSycocaEntry d propertyNames</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocaentry.cpp</field>
    <field name="url">ksycocaentry_8cpp_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text">QVariant KSycocaEntry::property QString name Q_D KSycocaEntry d property name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocaentry.h</field>
    <field name="url">ksycocaentry_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KSycocaEntryPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocaentry.h</field>
    <field name="url">ksycocaentry_8h_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">KSERVICE_EXPORT KSycocaEntry QSharedData KSycocaEntry KSycocaEntry isType KSycocaType t KSycocaType sycocaType QExplicitlySharedDataPointer&lt;KSycocaEntry&gt; Ptr QList&lt;Ptr&gt; List QString name QString entryPath QString storageId isValid isDeleted QVariant property QString name QStringList propertyNames setDeleted deleted isSeparator KSycocaEntry KSycocaEntryPrivate d KSycocaEntryPrivate d_ptr KSycocaFactory KBuildServiceFactory KMimeTypeTrader KServiceTypeTrader KService KSycocaDict KSycocaDictTest offset Q_DISABLE_COPY KSycocaEntry Q_DECLARE_PRIVATE KSycocaEntry</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocafactory.cpp</field>
    <field name="url">ksycocafactory_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KSycocaFactoryPrivate KSycocaFactoryPrivate mOffset m_sycocaDictOffset m_beginEntryOffset m_endEntryOffset KSycocaFactoryPrivate m_sycocaDict mOffset m_sycocaDictOffset m_beginEntryOffset m_endEntryOffset KSycocaDict m_sycocaDict KSycocaFactory::KSycocaFactory KSycocaFactoryId factory_id KSycoca sycoca m_resourceList m_entryDict m_str m_sycoca sycoca d new KSycocaFactoryPrivate m_sycoca isBuilding m_str m_sycoca findFactory factory_id qint32 i i d m_sycocaDictOffset i i d m_beginEntryOffset i i d m_endEntryOffset i QDataStream str stream saveOffset str device pos d m_sycocaDict KSycocaDict str d m_sycocaDictOffset saveOffset str device seek saveOffset m_entryDict KSycocaEntryDict d m_sycocaDict KSycocaDict d m_beginEntryOffset d m_endEntryOffset m_sycoca addFactory KSycocaFactory::~KSycocaFactory m_entryDict d KSycocaFactory::saveHeader QDataStream str str device seek d mOffset str qint32 d m_sycocaDictOffset str qint32 d m_beginEntryOffset str qint32 d m_endEntryOffset KSycocaFactory::save QDataStream str m_entryDict d m_sycocaDict d mOffset str device pos d m_sycocaDictOffset saveHeader str d m_beginEntryOffset str device pos entryCount Q_FOREACH KSycocaEntry::Ptr entry m_entryDict entry d_ptr save str entryCount d m_endEntryOffset str device pos str qint32 entryCount Q_FOREACH KSycocaEntry::Ptr entry m_entryDict str qint32 entry data offset d m_sycocaDictOffset str device pos d m_sycocaDict save str endOfFactoryData str device pos saveHeader str str device seek endOfFactoryData KSycocaFactory::addEntry KSycocaEntry::Ptr newEntry m_entryDict d m_sycocaDict KSycocaEntry::Ptr oldEntry m_entryDict value newEntry storageId oldEntry removeEntry newEntry storageId QString name newEntry storageId m_entryDict insert name newEntry d m_sycocaDict add name newEntry KSycocaFactory::removeEntry QString entryName m_entryDict d m_sycocaDict m_entryDict remove entryName d m_sycocaDict remove entryName KSycocaEntry::List KSycocaFactory::allEntries KSycocaEntry::List list QDataStream str stream str list str device seek d m_endEntryOffset qint32 entryCount entryCount entryCount qCWarning SYCOCA QThread::currentThread KSycoca::flagError list qint32 offsetList qint32 entryCount i i entryCount i offsetList i i i entryCount i KSycocaEntry newEntry createEntry offsetList i newEntry list append KSycocaEntry::Ptr newEntry offsetList list KSycocaFactory::offset d mOffset KSycocaResourceList KSycocaFactory::resourceList m_resourceList KSycocaDict KSycocaFactory::sycocaDict d m_sycocaDict KSycocaFactory::isEmpty d m_beginEntryOffset d m_endEntryOffset QDataStream KSycocaFactory::stream m_str QStringList KSycocaFactory::allDirectories QString subdir QStringList topDirs QStandardPaths::standardLocations QStandardPaths::GenericDataLocation QStringList dirs dirs reserve topDirs size QStringList::const_iterator dir topDirs constBegin dir topDirs constEnd dir dirs append dir QLatin1Char subdir dirs KSycocaFactory::virtual_hook</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocatype.h</field>
    <field name="url">ksycocatype_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocatype.h</field>
    <field name="url">ksycocatype_8h_source.html#l00031</field>
    <field name="keywords"></field>
    <field name="text">KSycocaType KST_KSycocaEntry KST_KService KST_KServiceType KST_KMimeType KST_KMimeTypeEntry KST_KServiceGroup KST_KServiceSeparator KST_KCustom</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksycocatype.h</field>
    <field name="url">ksycocatype_8h_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">KSycocaFactoryId KST_KServiceFactory KST_KServiceTypeFactory KST_KServiceGroupFactory KST_KMimeTypeFactory KST_CTimeInfo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation.cpp</field>
    <field name="url">ktoolinvocation_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KToolInvocationSingleton KToolInvocation instance Q_GLOBAL_STATIC KToolInvocationSingleton s_self KToolInvocation KToolInvocation::self s_self instance KToolInvocation::KToolInvocation QObject d KToolInvocation::~KToolInvocation printError QString text QString error error error text qWarning text KToolInvocation::isMainThreadActive QString error QCoreApplication::instance QCoreApplication::instance thread QThread::currentThread printError i18n error KToolInvocation::startServiceInternal _function QString _name QStringList URLs QString error QString serviceName pid QByteArray startup_id noWait QString workdir QString QLatin1String _function KToolInvocation::ensureKdeinitRunning QDBusMessage msg QDBusMessage::createMethodCall QStringLiteral QStringLiteral QStringLiteral msg _name URLs QLatin1String msg workdir QStringList envs QByteArray s startup_id emit kapplication_hook envs s msg envs msg QString::fromLatin1 s startsWith QLatin1String msg noWait QDBusMessage reply QDBusConnection::sessionBus call msg QDBus::Block INT_MAX reply type QDBusMessage::ReplyMessage QDBusReply&lt;QString&gt; replyObj reply replyObj error type QDBusError::NoReply printError i18n _name error QString rpl reply arguments count reply arguments at toString reply errorMessage printError i18n rpl error EINVAL noWait Q_ASSERT reply arguments count serviceName serviceName reply arguments at toString error error reply arguments at toString pid pid reply arguments at toInt reply arguments at toInt</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation.cpp</field>
    <field name="url">ktoolinvocation_8cpp_source.html#l00131</field>
    <field name="keywords"></field>
    <field name="text">KToolInvocation::startServiceByName QString _name QString URL QString error QString serviceName pid QByteArray startup_id noWait isMainThreadActive error EINVAL QStringList URLs URL isEmpty URLs append URL startServiceInternal _name URLs error serviceName pid startup_id noWait</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation.cpp</field>
    <field name="url">ktoolinvocation_8cpp_source.html#l00150</field>
    <field name="keywords"></field>
    <field name="text">KToolInvocation::startServiceByName QString _name QStringList URLs QString error QString serviceName pid QByteArray startup_id noWait isMainThreadActive error EINVAL startServiceInternal _name URLs error serviceName pid startup_id noWait</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation.cpp</field>
    <field name="url">ktoolinvocation_8cpp_source.html#l00164</field>
    <field name="keywords"></field>
    <field name="text">KToolInvocation::startServiceByDesktopPath QString _name QString URL QString error QString serviceName pid QByteArray startup_id noWait isMainThreadActive error EINVAL QStringList URLs URL isEmpty URLs append URL startServiceInternal _name URLs error serviceName pid startup_id noWait</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation.cpp</field>
    <field name="url">ktoolinvocation_8cpp_source.html#l00181</field>
    <field name="keywords"></field>
    <field name="text">KToolInvocation::startServiceByDesktopPath QString _name QStringList URLs QString error QString serviceName pid QByteArray startup_id noWait isMainThreadActive error EINVAL startServiceInternal _name URLs error serviceName pid startup_id noWait</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation.cpp</field>
    <field name="url">ktoolinvocation_8cpp_source.html#l00194</field>
    <field name="keywords"></field>
    <field name="text">KToolInvocation::startServiceByDesktopName QString _name QString URL QString error QString serviceName pid QByteArray startup_id noWait isMainThreadActive error EINVAL QStringList URLs URL isEmpty URLs append URL startServiceInternal _name URLs error serviceName pid startup_id noWait</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation.cpp</field>
    <field name="url">ktoolinvocation_8cpp_source.html#l00211</field>
    <field name="keywords"></field>
    <field name="text">KToolInvocation::startServiceByDesktopName QString _name QStringList URLs QString error QString serviceName pid QByteArray startup_id noWait isMainThreadActive error EINVAL startServiceInternal _name URLs error serviceName pid startup_id noWait</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation.cpp</field>
    <field name="url">ktoolinvocation_8cpp_source.html#l00224</field>
    <field name="keywords"></field>
    <field name="text">KToolInvocation::kdeinitExec QString name QStringList args QString error pid QByteArray startup_id isMainThreadActive error EINVAL startServiceInternal name args error pid startup_id</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation.cpp</field>
    <field name="url">ktoolinvocation_8cpp_source.html#l00236</field>
    <field name="keywords"></field>
    <field name="text">KToolInvocation::kdeinitExecWait QString name QStringList args QString error pid QByteArray startup_id isMainThreadActive error EINVAL startServiceInternal name args error pid startup_id</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation.cpp</field>
    <field name="url">ktoolinvocation_8cpp_source.html#l00247</field>
    <field name="keywords"></field>
    <field name="text">KToolInvocation::invokeMailer QString address QString subject QByteArray startup_id isMainThreadActive invokeMailer address QString QString subject QString QString QStringList startup_id</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation.cpp</field>
    <field name="url">ktoolinvocation_8cpp_source.html#l00257</field>
    <field name="keywords"></field>
    <field name="text">KToolInvocation::invokeMailer QUrl mailtoURL QByteArray startup_id allowAttachments isMainThreadActive QString address mailtoURL path QString subject QString cc QString bcc QString body QList&lt;QPair&lt;QString, QString&gt; queryItems QUrlQuery mailtoURL queryItems QChar comma QChar::fromLatin1 QStringList attachURLs i i queryItems count i QString q queryItems at i first toLower QString value queryItems at i second q QLatin1String subject value q QLatin1String cc cc isEmpty value cc comma value q QLatin1String bcc bcc isEmpty value bcc comma value q QLatin1String body value allowAttachments q QLatin1String attachURLs push_back value allowAttachments q QLatin1String attachURLs push_back value q QLatin1String address address isEmpty value address comma value invokeMailer address cc bcc subject body QString attachURLs startup_id</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation.cpp</field>
    <field name="url">ktoolinvocation_8cpp_source.html#l00295</field>
    <field name="keywords"></field>
    <field name="text">KToolInvocation::ensureKdeinitRunning KDEInitInterface::ensureKdeinitRunning</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation.h</field>
    <field name="url">ktoolinvocation_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QUrl KToolInvocationPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation.h</field>
    <field name="url">ktoolinvocation_8h_source.html#l00070</field>
    <field name="keywords"></field>
    <field name="text">KSERVICE_EXPORT KToolInvocation QObject Q_OBJECT KToolInvocation KToolInvocation KToolInvocation Q_SLOTS KSERVICE_DEPRECATED invokeMailer QString address QString subject QByteArray startup_id QByteArray KSERVICE_DEPRECATED invokeMailer QUrl mailtoURL QByteArray startup_id QByteArray allowAttachments invokeMailer QString to QString cc QString bcc QString subject QString body QString messageFile QString QStringList attachURLs QStringList QByteArray startup_id QByteArray KSERVICE_DEPRECATED invokeBrowser QString url QByteArray startup_id QByteArray invokeTerminal QString command QString workdir QString QByteArray startup_id KSERVICE_DEPRECATED startServiceByName QString _name QString URL QString error QString serviceName pid QByteArray startup_id QByteArray noWait KSERVICE_DEPRECATED startServiceByName QString _name QStringList URLs QStringList QString error QString serviceName pid QByteArray startup_id QByteArray noWait startServiceByDesktopPath QString _name QString URL QString error QString serviceName pid QByteArray startup_id QByteArray noWait startServiceByDesktopPath QString _name QStringList URLs QStringList QString error QString serviceName pid QByteArray startup_id QByteArray noWait startServiceByDesktopName QString _name QString URL QString error QString serviceName pid QByteArray startup_id QByteArray noWait startServiceByDesktopName QString _name QStringList URLs QStringList QString error QString serviceName pid QByteArray startup_id QByteArray noWait kdeinitExec QString name QStringList args QStringList QString error pid QByteArray startup_id QByteArray kdeinitExecWait QString name QStringList args QStringList QString error pid QByteArray startup_id QByteArray ensureKdeinitRunning Q_SIGNALS kapplication_hook QStringList env QByteArray startup_id startServiceInternal _function QString _name QStringList URLs QString error QString serviceName pid QByteArray startup_id noWait QString workdir QString isMainThreadActive QString error KToolInvocationPrivate d KToolInvocationSingleton</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation_win.cpp</field>
    <field name="url">ktoolinvocation__win_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation_win.cpp</field>
    <field name="url">ktoolinvocation__win_8cpp_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">KToolInvocation::invokeBrowser QString url QByteArray startup_id QString sOpen QString::fromLatin1 ShellExecuteW LPCWSTR sOpen utf16 LPCWSTR url utf16 SW_NORMAL SHELLEXECUTEINFO cShellExecuteInfo cShellExecuteInfo cbSize SHELLEXECUTEINFO cShellExecuteInfo fMask SEE_MASK_NOCLOSEPROCESS cShellExecuteInfo hwnd NULL cShellExecuteInfo lpVerb L cShellExecuteInfo lpFile LPCWSTR url utf16 cShellExecuteInfo nShow SW_SHOWNORMAL ShellExecuteEx cShellExecuteInfo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation_win.cpp</field>
    <field name="url">ktoolinvocation__win_8cpp_source.html#l00053</field>
    <field name="keywords"></field>
    <field name="text">KToolInvocation::invokeMailer QString _to QString _cc QString _bcc QString subject QString body QString QStringList attachURLs QByteArray startup_id QUrl url QLatin1String _to QUrlQuery query query addQueryItem QStringLiteral subject query addQueryItem QStringLiteral _cc query addQueryItem QStringLiteral _bcc query addQueryItem QStringLiteral body QString attachURL attachURLs query addQueryItem QStringLiteral attachURL url setQuery query QString sOpen QLatin1String ShellExecuteW LPCWSTR sOpen utf16 LPCWSTR url url utf16 SW_NORMAL SHELLEXECUTEINFO cShellExecuteInfo cShellExecuteInfo cbSize SHELLEXECUTEINFO cShellExecuteInfo fMask SEE_MASK_NOCLOSEPROCESS cShellExecuteInfo hwnd NULL cShellExecuteInfo lpVerb L cShellExecuteInfo lpFile LPCWSTR url url utf16 cShellExecuteInfo nShow SW_SHOWNORMAL ShellExecuteEx cShellExecuteInfo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation_win.cpp</field>
    <field name="url">ktoolinvocation__win_8cpp_source.html#l00084</field>
    <field name="keywords"></field>
    <field name="text">KToolInvocation::invokeTerminal QString command QString workdir QByteArray startup_id</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktoolinvocation_x11.cpp</field>
    <field name="url">ktoolinvocation__x11_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QStringList splitEmailAddressList QString aStr QStringList list aStr isEmpty list QString addr uint addrstart commentlevel insidequote index index aStr length index aStr index toLatin1 commentlevel insidequote insidequote insidequote commentlevel insidequote commentlevel commentlevel list index insidequote commentlevel addr aStr mid addrstart index addrstart addr isEmpty list addr simplified addrstart index insidequote commentlevel addr aStr mid addrstart aStr length addrstart addr isEmpty list addr simplified list KToolInvocation::invokeMailer QString _to QString _cc QString _bcc QString subject QString body QString QStringList attachURLs QByteArray startup_id isMainThreadActive KConfig config QStringLiteral KConfigGroup defaultsGrp config QString group defaultsGrp readEntry KConfigGroup profileGrp config QStringLiteral arg group QString command profileGrp readPathEntry QString QString to cc bcc command isEmpty command QLatin1String command endsWith QLatin1String command QStringLiteral _to isEmpty QUrl url url setScheme QStringLiteral url setPath _to to QString::fromLatin1 url toEncoded _cc isEmpty QUrl url url setScheme QStringLiteral url setPath _cc cc QString::fromLatin1 url toEncoded _bcc isEmpty QUrl url url setScheme QStringLiteral url setPath _bcc bcc QString::fromLatin1 url toEncoded to _to cc _cc bcc _bcc command contains QLatin1Char command QLatin1String profileGrp readEntry KConfigGroup confGroup KSharedConfig::openConfig QString preferredTerminal confGroup readPathEntry QStringLiteral command preferredTerminal QString::fromLatin1 command QStringList cmdTokens KShell::splitArgs command QString cmd cmdTokens takeFirst QUrl url QUrlQuery query to isEmpty QStringList tos splitEmailAddressList to url setPath tos first tos erase tos begin QStringList::ConstIterator it tos constBegin it tos constEnd it query addQueryItem QStringLiteral it QStringList ccs splitEmailAddressList cc QStringList::ConstIterator it ccs constBegin it ccs constEnd it query addQueryItem QStringLiteral it QStringList bccs splitEmailAddressList bcc QStringList::ConstIterator it bccs constBegin it bccs constEnd it query addQueryItem QStringLiteral it QStringList::ConstIterator it attachURLs constBegin it attachURLs constEnd it query addQueryItem QStringLiteral it subject isEmpty query addQueryItem QStringLiteral subject body isEmpty query addQueryItem QStringLiteral body url setQuery query to isEmpty url hasQuery url setScheme QStringLiteral QHash&lt;QChar, QString&gt; keyMap keyMap insert QLatin1Char to keyMap insert QLatin1Char subject keyMap insert QLatin1Char cc keyMap insert QLatin1Char bcc keyMap insert QLatin1Char body keyMap insert QLatin1Char url toString QString attachlist attachURLs join QLatin1Char attachlist prepend QLatin1Char attachlist append QLatin1Char keyMap insert QLatin1Char attachlist i i cmdTokens count i cmdTokens at i QLatin1String attachURLs isEmpty cmdTokens removeAt i QString previousStr cmdTokens at i cmdTokens removeAt i currentPos i Q_FOREACH QString url attachURLs cmdTokens insert currentPos previousStr cmdTokens insert currentPos url i QString str KMacroExpander::expandMacros cmdTokens at i keyMap cmdTokens i str QString error kdeinitExec cmd cmdTokens error NULL startup_id KMessage::message KMessage::Error i18n error i18n KToolInvocation::invokeBrowser QString url QByteArray startup_id isMainThreadActive QStringList args args url QString error QString exe QString xdg_open QStandardPaths::findExecutable QStringLiteral qEnvironmentVariableIsEmpty exe xdg_open exe isEmpty KConfigGroup config KSharedConfig::openConfig QString browserApp config readPathEntry QString browserApp isEmpty exe browserApp exe startsWith QLatin1Char exe exe mid QStringList cmdTokens KShell::splitArgs exe exe cmdTokens takeFirst args cmdTokens args KService::Ptr service KService::serviceByStorageId exe service startServiceByDesktopPath service entryPath args error startup_id KMessage::message KMessage::Error i18n error i18n KService::Ptr htmlApp KMimeTypeTrader::self preferredService QStringLiteral htmlApp QString entryPath htmlApp entryPath entryPath endsWith QLatin1String entryPath remove entryPath length QString error pid err startServiceByDesktopPath entryPath url error pid startup_id err KMessage::message KMessage::Error i18n error i18n exe xdg_open exe isEmpty exe QStringLiteral kdeinitExec exe args error NULL startup_id KMessage::message KMessage::Error i18n error i18n KToolInvocation::invokeTerminal QString command QString workdir QByteArray startup_id isMainThreadActive KConfigGroup confGroup KSharedConfig::openConfig QString exec confGroup readPathEntry QStringLiteral command isEmpty exec QLatin1String exec QString::fromLatin1 exec QLatin1String exec QString::fromLatin1 exec QString::fromLatin1 command QStringList cmdTokens KShell::splitArgs exec QString cmd cmdTokens takeFirst exec QLatin1String workdir isEmpty cmdTokens QStringLiteral cmdTokens workdir QString error startServiceInternal cmd cmdTokens error NULL startup_id workdir KMessage::message KMessage::Error i18n error i18n</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktraderparse.cpp</field>
    <field name="url">ktraderparse_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KTraderParse_mainParse _code KTraderParse ParsingData ParseTreeBase::Ptr ptr QByteArray buffer KTraderParse Q_GLOBAL_STATIC QThreadStorage&lt;ParsingData *&gt; s_parsingData ParseTreeBase::Ptr KTraderParse::parseConstraints QString _constr ParsingData data ParsingData s_parsingData setLocalData data data buffer _constr toUtf8 KTraderParse_mainParse data buffer constData ParseTreeBase::Ptr ret data ptr s_parsingData setLocalData ret KTraderParse_setParseTree _ptr1 ParsingData data s_parsingData localData data ptr ParseTreeBase _ptr1 KTraderParse_error err qWarning s_parsingData localData buffer err KTraderParse_newOR _ptr1 _ptr2 ParseTreeOR static_cast&lt;ParseTreeBase *&gt; _ptr1 static_cast&lt;ParseTreeBase *&gt; _ptr2 KTraderParse_newAND _ptr1 _ptr2 ParseTreeAND static_cast&lt;ParseTreeBase *&gt; _ptr1 static_cast&lt;ParseTreeBase *&gt; _ptr2 KTraderParse_newCMP _ptr1 _ptr2 _i ParseTreeCMP static_cast&lt;ParseTreeBase *&gt; _ptr1 static_cast&lt;ParseTreeBase *&gt; _ptr2 _i KTraderParse_newIN _ptr1 _ptr2 _cs ParseTreeIN static_cast&lt;ParseTreeBase *&gt; _ptr1 static_cast&lt;ParseTreeBase *&gt; _ptr2 _cs Qt::CaseSensitive Qt::CaseInsensitive KTraderParse_newSubstringIN _ptr1 _ptr2 _cs ParseTreeIN static_cast&lt;ParseTreeBase *&gt; _ptr1 static_cast&lt;ParseTreeBase *&gt; _ptr2 _cs Qt::CaseSensitive Qt::CaseInsensitive KTraderParse_newMATCH _ptr1 _ptr2 _cs ParseTreeMATCH static_cast&lt;ParseTreeBase *&gt; _ptr1 static_cast&lt;ParseTreeBase *&gt; _ptr2 _cs Qt::CaseSensitive Qt::CaseInsensitive KTraderParse_newCALC _ptr1 _ptr2 _i ParseTreeCALC static_cast&lt;ParseTreeBase *&gt; _ptr1 static_cast&lt;ParseTreeBase *&gt; _ptr2 _i KTraderParse_newBRACKETS _ptr1 ParseTreeBRACKETS static_cast&lt;ParseTreeBase *&gt; _ptr1 KTraderParse_newNOT _ptr1 ParseTreeNOT static_cast&lt;ParseTreeBase *&gt; _ptr1 KTraderParse_newEXIST _ptr1 ParseTreeEXIST t ParseTreeEXIST _ptr1 free _ptr1 t KTraderParse_newID _ptr1 ParseTreeID t ParseTreeID _ptr1 free _ptr1 t KTraderParse_newSTRING _ptr1 ParseTreeSTRING t ParseTreeSTRING _ptr1 free _ptr1 t KTraderParse_newNUM _i ParseTreeNUM _i KTraderParse_newFLOAT _f ParseTreeDOUBLE _f KTraderParse_newBOOL _b ParseTreeBOOL _b KTraderParse_newMAX2 _id ParseTreeMAX2 t ParseTreeMAX2 _id free _id t KTraderParse_newMIN2 _id ParseTreeMIN2 t ParseTreeMIN2 _id free _id t KTraderParse_destroy node ParsingData data s_parsingData localData ParseTreeBase p ParseTreeBase node p data ptr data p</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktraderparsetree.cpp</field>
    <field name="url">ktraderparsetree_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KTraderParse QVariant ParseContext::property QString _key service service property _key info isValid info property _key QVariant ParseTreeOR::eval ParseContext _context ParseContext c1 _context ParseContext c2 _context m_pLeft eval c1 c1 type ParseContext::T_BOOL _context b c1 b _context type ParseContext::T_BOOL c1 b m_pRight eval c2 c2 type ParseContext::T_BOOL _context b c1 b c2 b _context type ParseContext::T_BOOL ParseTreeAND::eval ParseContext _context _context type ParseContext::T_BOOL ParseContext c1 _context ParseContext c2 _context m_pLeft eval c1 c1 type ParseContext::T_BOOL c1 b _context b m_pRight eval c2 c2 type ParseContext::T_BOOL _context b c1 b c2 b ParseTreeCALC::eval ParseContext _context ParseContext c1 _context ParseContext c2 _context m_pLeft eval c1 m_pRight eval c2 c1 type ParseContext::T_NUM c1 type ParseContext::T_DOUBLE c1 type ParseContext::T_BOOL c2 type ParseContext::T_NUM c2 type ParseContext::T_DOUBLE c2 type ParseContext::T_BOOL c1 type ParseContext::T_BOOL c2 type ParseContext::T_BOOL c1 type ParseContext::T_NUM c2 type ParseContext::T_DOUBLE c1 type ParseContext::T_DOUBLE c1 f c1 i c1 type ParseContext::T_DOUBLE c2 type ParseContext::T_NUM c2 type ParseContext::T_DOUBLE c2 f c2 i c1 type ParseContext::T_BOOL c2 type ParseContext::T_NUM c1 type ParseContext::T_NUM c1 b c1 i c1 i c1 type ParseContext::T_BOOL c2 type ParseContext::T_DOUBLE c1 type ParseContext::T_DOUBLE c1 b c1 f c1 f c1 type ParseContext::T_NUM c2 type ParseContext::T_BOOL c2 type ParseContext::T_NUM c2 b c2 i c2 i c1 type ParseContext::T_DOUBLE c2 type ParseContext::T_BOOL c2 type ParseContext::T_DOUBLE c2 b c2 f c2 f _context type c1 type m_cmd c1 type ParseContext::T_DOUBLE _context f c1 f c2 f c1 type ParseContext::T_NUM _context i c1 i c2 i c1 type ParseContext::T_DOUBLE _context f c1 f c2 f c1 type ParseContext::T_NUM _context i c1 i c2 i c1 type ParseContext::T_DOUBLE _context f c1 f c2 f c1 type ParseContext::T_NUM _context i c1 i c2 i c1 type ParseContext::T_DOUBLE _context f c1 f c2 f c1 type ParseContext::T_NUM _context i c1 i c2 i ParseTreeCMP::eval ParseContext _context ParseContext c1 _context ParseContext c2 _context m_pLeft eval c1 m_pRight eval c2 c1 type ParseContext::T_NUM c2 type ParseContext::T_DOUBLE c1 type ParseContext::T_DOUBLE c1 f c1 i c1 type ParseContext::T_DOUBLE c2 type ParseContext::T_NUM c2 type ParseContext::T_DOUBLE c2 f c2 i _context type ParseContext::T_BOOL m_cmd c1 type c2 type _context b c1 type ParseContext::T_STRING m_cmd _context b QString::compare c1 str c2 str Qt::CaseInsensitive _context b c1 str c2 str c1 type ParseContext::T_BOOL _context b c1 b c2 b c1 type ParseContext::T_DOUBLE _context b qFuzzyCompare c1 f c2 f c1 type ParseContext::T_NUM _context b c1 i c2 i c1 type c2 type _context b c1 type ParseContext::T_STRING m_cmd _context b QString::compare c1 str c2 str Qt::CaseInsensitive _context b c1 str c2 str c1 type ParseContext::T_BOOL _context b c1 b c2 b c1 type ParseContext::T_DOUBLE _context b qFuzzyCompare c1 f c2 f c1 type ParseContext::T_NUM _context b c1 i c2 i c1 type c2 type _context b c1 type ParseContext::T_DOUBLE _context b c1 f c2 f c1 type ParseContext::T_NUM _context b c1 i c2 i _context b c1 type c2 type _context b c1 type ParseContext::T_DOUBLE _context b c1 f c2 f c1 type ParseContext::T_NUM _context b c1 i c2 i _context b c1 type c2 type _context b c1 type ParseContext::T_DOUBLE _context b c1 f c2 f c1 type ParseContext::T_NUM _context b c1 i c2 i _context b c1 type c2 type _context b c1 type ParseContext::T_DOUBLE _context b c1 f c2 f c1 type ParseContext::T_NUM _context b c1 i c2 i _context b ParseTreeNOT::eval ParseContext _context ParseContext c1 _context m_pLeft eval c1 c1 type ParseContext::T_BOOL _context b c1 b _context type ParseContext::T_BOOL ParseTreeEXIST::eval ParseContext _context _context type ParseContext::T_BOOL QVariant prop _context property m_id _context b prop isValid ParseTreeMATCH::eval ParseContext _context _context type ParseContext::T_BOOL ParseContext c1 _context ParseContext c2 _context m_pLeft eval c1 m_pRight eval c2 c1 type ParseContext::T_STRING c2 type ParseContext::T_STRING _context b c2 str contains c1 str m_cs ParseTreeIN::eval ParseContext _context _context type ParseContext::T_BOOL ParseContext c1 _context ParseContext c2 _context m_pLeft eval c1 m_pRight eval c2 c1 type ParseContext::T_NUM c2 type ParseContext::T_SEQ c2 seq begin type QVariant::Int QList&lt;QVariant&gt;::ConstIterator it c2 seq constBegin QList&lt;QVariant&gt;::ConstIterator end c2 seq constEnd _context b it end it type QVariant::Int toInt c1 i _context b c1 type ParseContext::T_DOUBLE c2 type ParseContext::T_SEQ c2 seq begin type QVariant::Double QList&lt;QVariant&gt;::ConstIterator it c2 seq constBegin QList&lt;QVariant&gt;::ConstIterator end c2 seq constEnd _context b it end it type QVariant::Double qFuzzyCompare toDouble c1 i _context b c1 type ParseContext::T_STRING c2 type ParseContext::T_STR_SEQ m_substring _context b QString c2 strSeq contains c1 str m_cs _context b _context b c2 strSeq contains c1 str m_cs ParseTreeID::eval ParseContext _context QVariant prop _context property m_str prop isValid prop type QVariant::String _context str prop toString _context type ParseContext::T_STRING prop type QVariant::Int _context i prop toInt _context type ParseContext::T_NUM prop type QVariant::Bool _context b prop toBool _context type ParseContext::T_BOOL prop type QVariant::Double _context f prop toDouble _context type ParseContext::T_DOUBLE prop type QVariant::List _context seq prop toList _context type ParseContext::T_SEQ prop type QVariant::StringList _context strSeq prop toStringList _context type ParseContext::T_STR_SEQ ParseTreeMIN2::eval ParseContext _context _context type ParseContext::T_DOUBLE QVariant prop _context property m_strId prop isValid _context initMaxima m_strId QMap&lt;QString, PreferencesMaxima&gt;::Iterator it _context maxima find m_strId it _context maxima end prop type QVariant::Int it value type PreferencesMaxima::PM_INT _context f double prop toInt it value iMin it value iMax it value iMin prop type QVariant::Double it value type PreferencesMaxima::PM_DOUBLE _context f prop toDouble it value fMin it value fMax it value fMin ParseTreeMAX2::eval ParseContext _context _context type ParseContext::T_DOUBLE QVariant prop _context property m_strId prop isValid _context initMaxima m_strId QMap&lt;QString, PreferencesMaxima&gt;::Iterator it _context maxima find m_strId it _context maxima end prop type QVariant::Int it value type PreferencesMaxima::PM_INT _context f double prop toInt it value iMin it value iMax it value iMin prop type QVariant::Double it value type PreferencesMaxima::PM_DOUBLE _context f prop toDouble it value fMin it value fMax it value fMin matchConstraint ParseTreeBase _tree KService::Ptr _service KService::List _list _tree QMap&lt;QString, PreferencesMaxima&gt; maxima ParseContext c _service _list maxima _tree eval c c type ParseContext::T_BOOL c b matchConstraintPlugin ParseTreeBase _tree KPluginInfo _info KPluginInfo::List _list _tree QMap&lt;QString, PreferencesMaxima&gt; maxima ParseContext c _info _list maxima _tree eval c c type ParseContext::T_BOOL c b ParseContext::initMaxima QString _prop QVariant prop property _prop prop isValid prop type QVariant::Int prop type QVariant::Double QMap&lt;QString, PreferencesMaxima&gt;::Iterator it maxima find _prop it maxima end it value type PreferencesMaxima::PM_DOUBLE it value type PreferencesMaxima::PM_INT PreferencesMaxima extrema prop type QVariant::Int extrema type PreferencesMaxima::PM_INVALID_INT extrema type PreferencesMaxima::PM_INVALID_DOUBLE QVariantList offerValues service KService::List::ConstIterator oit offers cbegin oit offers cend oit offerValues property _prop info isValid KPluginInfo::List::ConstIterator oit pluginOffers cbegin oit pluginOffers cend oit offerValues property _prop QVariant p offerValues p isValid extrema type PreferencesMaxima::PM_INVALID_INT extrema type PreferencesMaxima::PM_INT extrema iMin p toInt extrema iMax p toInt extrema type PreferencesMaxima::PM_INT p toInt extrema iMin extrema iMin p toInt p toInt extrema iMax extrema iMax p toInt extrema type PreferencesMaxima::PM_INVALID_DOUBLE extrema type PreferencesMaxima::PM_DOUBLE extrema fMin p toDouble extrema fMax p toDouble extrema type PreferencesMaxima::PM_DOUBLE p toDouble it value fMin extrema fMin p toDouble p toDouble it value fMax extrema fMax p toDouble maxima insert _prop extrema extrema type PreferencesMaxima::PM_DOUBLE extrema type PreferencesMaxima::PM_INT ParseTreeBase::~ParseTreeBase ParseTreeSTRING::eval ParseContext _context _context type ParseContext::T_STRING _context str m_str ParseTreeNUM::eval ParseContext _context _context type ParseContext::T_NUM _context i m_int ParseTreeBRACKETS::eval ParseContext _context m_pLeft eval _context ParseTreeDOUBLE::eval ParseContext _context _context type ParseContext::T_DOUBLE _context f m_double ParseTreeBOOL::eval ParseContext _context _context type ParseContext::T_BOOL _context b m_bool</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sycocadebug.cpp</field>
    <field name="url">sycocadebug_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_LOGGING_CATEGORY SYCOCA QtWarningMsg Q_LOGGING_CATEGORY SYCOCA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">sycocadebug.h</field>
    <field name="url">sycocadebug_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_DECLARE_LOGGING_CATEGORY SYCOCA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">vfolder_menu.cpp</field>
    <field name="url">vfolder__menu_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">foldNode QDomElement docElem QDomElement e QMap&lt;QString, QDomElement&gt; dupeList QString s QString s isEmpty s e text QMap&lt;QString, QDomElement&gt;::iterator it dupeList find s it dupeList end docElem removeChild it dupeList erase it dupeList insert s e replaceNode QDomElement docElem QDomNode n QStringList list QString tag QStringList::ConstIterator it list begin it list end it QDomElement e docElem ownerDocument createElement tag QDomText txt docElem ownerDocument createTextNode it e appendChild txt docElem insertAfter e n QDomNode next n nextSibling docElem removeChild n n next VFolderMenu::registerFile QString file i file lastIndexOf i QString dir file left i registerDirectory dir VFolderMenu::registerDirectory QString directory m_allDirectories append directory QStringList VFolderMenu::allDirectories m_allDirectories isEmpty m_allDirectories m_allDirectories sort QStringList::Iterator it m_allDirectories begin QString previous it it m_allDirectories end startsWith previous startsWith previous Qt::CaseInsensitive endif it m_allDirectories erase it previous it it m_allDirectories track QString menuId QString menuName QHash&lt;QString, KService::Ptr&gt; includeList QHash&lt;QString, KService::Ptr&gt; excludeList QHash&lt;QString, KService::Ptr&gt; itemList QString comment itemList contains menuId printf qPrintable menuName qPrintable comment includeList contains menuId excludeList contains menuId VFolderMenu::includeItems QHash&lt;QString, KService::Ptr&gt; items1 QHash&lt;QString, KService::Ptr&gt; items2 KService::Ptr p items2 items1 insert p menuId p VFolderMenu::matchItems QHash&lt;QString, KService::Ptr&gt; items1 QHash&lt;QString, KService::Ptr&gt; items2 KService::Ptr p items1 QString p menuId items2 contains items1 remove VFolderMenu::excludeItems QHash&lt;QString, KService::Ptr&gt; items1 QHash&lt;QString, KService::Ptr&gt; items2 KService::Ptr p items2 items1 remove p menuId VFolderMenu::SubMenu VFolderMenu::takeSubMenu SubMenu parentMenu QString menuName i menuName indexOf QString s1 i menuName left i menuName QString s2 menuName mid i QList&lt;SubMenu *&gt;::Iterator it parentMenu subMenus begin it parentMenu subMenus end it SubMenu menu it menu name s1 i parentMenu subMenus erase it menu takeSubMenu menu s2 VFolderMenu::mergeMenu SubMenu menu1 SubMenu menu2 reversePriority m_track track m_trackId menu1 name menu1 items menu1 excludeItems menu2 items QStringLiteral arg menu2 name track m_trackId menu1 name menu1 items menu1 excludeItems menu2 excludeItems QStringLiteral arg menu2 name reversePriority excludeItems menu2 items menu1 excludeItems includeItems menu1 items menu2 items excludeItems menu2 excludeItems menu1 items includeItems menu1 excludeItems menu2 excludeItems excludeItems menu1 items menu2 excludeItems includeItems menu1 items menu2 items includeItems menu1 excludeItems menu2 excludeItems menu1 isDeleted menu2 isDeleted menu2 subMenus isEmpty SubMenu subMenu menu2 subMenus takeFirst insertSubMenu menu1 subMenu name subMenu reversePriority reversePriority menu1 directoryFile isEmpty menu1 directoryFile menu2 directoryFile menu1 defaultLayoutNode isNull menu1 defaultLayoutNode menu2 defaultLayoutNode menu1 layoutNode isNull menu1 layoutNode menu2 layoutNode menu2 directoryFile isEmpty menu1 directoryFile menu2 directoryFile menu2 defaultLayoutNode isNull menu1 defaultLayoutNode menu2 defaultLayoutNode menu2 layoutNode isNull menu1 layoutNode menu2 layoutNode m_track track m_trackId menu1 name menu1 items menu1 excludeItems menu2 items QStringLiteral arg menu2 name track m_trackId menu1 name menu1 items menu1 excludeItems menu2 excludeItems QStringLiteral arg menu2 name menu2 VFolderMenu::insertSubMenu SubMenu parentMenu QString menuName SubMenu newMenu reversePriority i menuName indexOf QString s1 menuName left i QString s2 menuName mid i SubMenu menu parentMenu subMenus menu name s1 i mergeMenu menu newMenu reversePriority insertSubMenu menu s2 newMenu reversePriority i newMenu name menuName parentMenu subMenus append newMenu SubMenu menu SubMenu menu name s1 parentMenu subMenus append menu insertSubMenu menu s2 newMenu VFolderMenu::insertService SubMenu parentMenu QString name KService::Ptr newService i name indexOf i parentMenu items insert newService menuId newService QString s1 name left i QString s2 name mid i SubMenu menu parentMenu subMenus menu name s1 insertService menu s2 newService SubMenu menu SubMenu menu name s1 parentMenu subMenus append menu insertService menu s2 newService VFolderMenu::VFolderMenu KServiceFactory serviceFactory KBuildSycocaInterface kbuildsycocaInterface m_appsInfo m_rootMenu m_currentMenu m_track false m_serviceFactory serviceFactory m_kbuildsycocaInterface kbuildsycocaInterface m_usedAppsDict reserve initDirs VFolderMenu::~VFolderMenu qDeleteAll m_appsInfoList m_rootMenu KService::Ptr VFolderMenu::findApplication QString relPath AppsInfo info m_appsInfoStack info applications contains relPath KService::Ptr s info applications relPath s s KService::Ptr VFolderMenu::addApplication QString KService::Ptr service service setMenuId m_appsInfo applications insert service m_serviceFactory addEntry KSycocaEntry::Ptr service VFolderMenu::buildApplicationIndex unusedOnly AppsInfo info m_appsInfoList info dictCategories clear QMutableHashIterator&lt;QString, KService::Ptr&gt; it info applications it hasNext KService::Ptr s it next value unusedOnly m_usedAppsDict contains s menuId it remove Q_FOREACH QString cat s categories info dictCategories cat append s VFolderMenu::createAppsInfo m_appsInfo m_appsInfo AppsInfo m_appsInfoStack prepend m_appsInfo m_appsInfoList append m_appsInfo m_currentMenu apps_info m_appsInfo VFolderMenu::loadAppsInfo m_appsInfo m_currentMenu apps_info m_appsInfo m_appsInfoStack isEmpty m_appsInfoStack first m_appsInfo m_appsInfoStack prepend m_appsInfo VFolderMenu::unloadAppsInfo m_appsInfo m_currentMenu apps_info m_appsInfo m_appsInfoStack first m_appsInfo m_appsInfoStack removeAll m_appsInfo m_appsInfo QString VFolderMenu::absoluteDir QString _dir QString baseDir keepRelativeToCfg QString dir _dir QDir::isRelativePath dir dir baseDir dir relative QDir::isRelativePath dir relative keepRelativeToCfg relative dir QStandardPaths::locate QStandardPaths::GenericConfigLocation QStringLiteral dir QStandardPaths::LocateDirectory relative QString resolved QDir dir canonicalPath resolved isEmpty dir resolved dir endsWith dir dir tagBaseDir QDomDocument doc QString tag QString dir QDomNodeList mergeFileList doc elementsByTagName tag i i mergeFileList count i QDomAttr attr doc createAttribute QStringLiteral attr setValue dir mergeFileList item i toElement setAttributeNode attr tagBasePath QDomDocument doc QString tag QString path QDomNodeList mergeFileList doc elementsByTagName tag i i mergeFileList count i QDomAttr attr doc createAttribute QStringLiteral attr setValue path mergeFileList item i toElement setAttributeNode attr QDomDocument VFolderMenu::loadDoc QDomDocument doc m_docInfo path isEmpty doc QFile file m_docInfo path file open QIODevice::ReadOnly qCWarning SYCOCA m_docInfo path doc QString errorMsg errorRow errorCol doc setContent file errorMsg errorRow errorCol qCWarning SYCOCA m_docInfo path errorRow errorCol errorMsg file close doc file close tagBaseDir doc QStringLiteral m_docInfo baseDir tagBasePath doc QStringLiteral m_docInfo path tagBaseDir doc QStringLiteral m_docInfo baseDir tagBaseDir doc QStringLiteral m_docInfo baseDir tagBaseDir doc QStringLiteral m_docInfo baseDir tagBaseDir doc QStringLiteral m_docInfo baseDir doc VFolderMenu::mergeFile QDomElement parent QDomNode mergeHere QDomDocument doc loadDoc QDomElement docElem doc documentElement QDomNode n docElem firstChild QDomNode last mergeHere n isNull QDomElement e n toElement QDomNode next n nextSibling e isNull e tagName parent insertAfter n last last n docElem removeChild n n next VFolderMenu::mergeMenus QDomElement docElem QString name QMap&lt;QString, QDomElement&gt; menuNodes QMap&lt;QString, QDomElement&gt; directoryNodes QMap&lt;QString, QDomElement&gt; appDirNodes QMap&lt;QString, QDomElement&gt; directoryDirNodes QMap&lt;QString, QDomElement&gt; legacyDirNodes QDomElement defaultLayoutNode QDomElement layoutNode QDomNode n docElem firstChild n isNull QDomElement e n toElement e isNull e tagName QLatin1String replaceNode docElem n m_defaultAppDirs QStringLiteral e tagName QLatin1String replaceNode docElem n m_defaultDirectoryDirs QStringLiteral e tagName QLatin1String replaceNode docElem n m_defaultMergeDirs QStringLiteral e tagName QLatin1String foldNode docElem e appDirNodes e tagName QLatin1String foldNode docElem e directoryDirNodes e tagName QLatin1String foldNode docElem e legacyDirNodes e tagName QLatin1String foldNode docElem e directoryNodes e tagName QLatin1String QString orig QDomNode n2 e firstChild n2 isNull QDomElement e2 n2 toElement e2 tagName QLatin1String orig e2 text n2 n2 nextSibling foldNode docElem e appDirNodes orig e tagName QLatin1String QString name mergeMenus e name QMap&lt;QString, QDomElement&gt;::iterator it menuNodes find name it menuNodes end QDomElement docElem2 it QDomNode n2 docElem2 firstChild QDomNode first e firstChild n2 isNull QDomElement e2 n2 toElement QDomNode n3 n2 nextSibling e insertBefore n2 first docElem2 removeChild n2 n2 n3 docElem removeChild docElem2 menuNodes erase it menuNodes insert name e e tagName QLatin1String e attribute QStringLiteral QLatin1String pushDocInfoParent e attribute QStringLiteral e attribute QStringLiteral pushDocInfo e text e attribute QStringLiteral m_docInfo path isEmpty mergeFile docElem n popDocInfo QDomNode last n n n nextSibling docElem removeChild last e tagName QLatin1String QString dir absoluteDir e text e attribute QStringLiteral Q_ASSERT dir endsWith relative QDir::isRelativePath dir QStringList dirs QStandardPaths::locateAll QStandardPaths::GenericConfigLocation QStringLiteral dir QStandardPaths::LocateDirectory Q_FOREACH QString menuDir dirs registerDirectory menuDir QStringList fileList Q_FOREACH QString menuDir dirs QStringList fileNames QDir menuDir entryList QStringList QStringLiteral Q_FOREACH QString file fileNames QString fileToAdd relative dir file menuDir file fileList contains fileToAdd fileList append fileToAdd Q_FOREACH QString file fileList pushDocInfo file mergeFile docElem n popDocInfo QDomNode last n n n nextSibling docElem removeChild last e tagName QLatin1String name e text e tagName QLatin1String defaultLayoutNode isNull docElem removeChild defaultLayoutNode defaultLayoutNode e e tagName QLatin1String layoutNode isNull docElem removeChild layoutNode layoutNode e n n nextSibling QString makeRelative QString dir QString canonical QDir dir canonicalPath Q_FOREACH QString base QStandardPaths::locateAll QStandardPaths::GenericConfigLocation QLatin1String QStandardPaths::LocateDirectory canonical startsWith base canonical mid base length dir VFolderMenu::pushDocInfo QString fileName QString baseDir m_docInfoStack push m_docInfo baseDir isEmpty QDir::isRelativePath baseDir m_docInfo baseDir makeRelative baseDir m_docInfo baseDir baseDir QString baseName fileName QDir::isRelativePath baseName registerFile baseName baseName m_docInfo baseDir baseName m_docInfo path locateMenuFile fileName m_docInfo path isEmpty m_docInfo baseDir clear m_docInfo baseName clear qDebug fileName i i baseName lastIndexOf i m_docInfo baseDir baseName left i m_docInfo baseName baseName mid i baseName length i m_docInfo baseDir clear m_docInfo baseName baseName left baseName length VFolderMenu::pushDocInfoParent QString basePath QString baseDir m_docInfoStack push m_docInfo m_docInfo baseDir baseDir QString fileName basePath mid basePath lastIndexOf m_docInfo baseName fileName left fileName length QString baseName QDir::cleanPath m_docInfo baseDir fileName QStringList result QStandardPaths::locateAll QStandardPaths::GenericConfigLocation QStringLiteral baseName result isEmpty result at basePath result removeFirst result count m_docInfo path clear m_docInfo path result at VFolderMenu::popDocInfo m_docInfo m_docInfoStack pop QString VFolderMenu::locateMenuFile QString fileName QDir::isRelativePath fileName QFile::exists fileName fileName QString QString result QString xdgMenuPrefix QString::fromLocal8Bit qgetenv xdgMenuPrefix isEmpty QFileInfo fileInfo fileName QString fileNameOnly fileInfo fileName fileNameOnly startsWith xdgMenuPrefix fileNameOnly xdgMenuPrefix fileNameOnly QString baseName QDir::cleanPath m_docInfo baseDir fileInfo path fileNameOnly result QStandardPaths::locate QStandardPaths::GenericConfigLocation QStringLiteral baseName result isEmpty QString baseName QDir::cleanPath m_docInfo baseDir fileName result QStandardPaths::locate QStandardPaths::GenericConfigLocation QStringLiteral baseName result QString VFolderMenu::locateDirectoryFile QString fileName fileName isEmpty QString QDir::isRelativePath fileName QFile::exists fileName fileName QString QStringList::ConstIterator it m_directoryDirs constBegin it m_directoryDirs constEnd it QString tmp fileName QFile::exists tmp tmp QString VFolderMenu::initDirs m_defaultAppDirs QStandardPaths::standardLocations QStandardPaths::ApplicationsLocation m_defaultDirectoryDirs QStandardPaths::locateAll QStandardPaths::GenericDataLocation QStringLiteral QStandardPaths::LocateDirectory VFolderMenu::loadMenu QString fileName m_defaultMergeDirs clear fileName endsWith QLatin1String pushDocInfo fileName m_defaultMergeDirs QStringLiteral m_doc loadDoc popDocInfo m_doc isNull m_docInfo path isEmpty qCritical fileName m_allDirectories endl qCWarning SYCOCA m_docInfo path QDomElement e m_doc documentElement QString name mergeMenus e name VFolderMenu::processCondition QDomElement domElem QHash&lt;QString, KService::Ptr&gt; items domElem tagName QLatin1String QDomNode n domElem firstChild n isNull QDomElement e n toElement n n nextSibling e isNull processCondition e items QHash&lt;QString, KService::Ptr&gt; andItems n isNull QDomElement e n toElement e tagName QLatin1String QDomNode n2 e firstChild n2 isNull QDomElement e2 n2 toElement andItems clear processCondition e2 andItems excludeItems items andItems n2 n2 nextSibling andItems clear processCondition e andItems matchItems items andItems n n nextSibling domElem tagName QLatin1String QDomNode n domElem firstChild n isNull QDomElement e n toElement n n nextSibling e isNull processCondition e items QHash&lt;QString, KService::Ptr&gt; orItems n isNull QDomElement e n toElement e isNull orItems clear processCondition e orItems includeItems items orItems n n nextSibling domElem tagName QLatin1String FOR_ALL_APPLICATIONS it KService::Ptr s it value items insert s menuId s FOR_ALL_APPLICATIONS_END QHash&lt;QString, KService::Ptr&gt; notItems QDomNode n domElem firstChild n isNull QDomElement e n toElement e isNull notItems clear processCondition e notItems excludeItems items notItems n n nextSibling domElem tagName QLatin1String FOR_CATEGORY domElem text it KService::Ptr s it items insert s menuId s FOR_CATEGORY_END domElem tagName QLatin1String FOR_ALL_APPLICATIONS it KService::Ptr s it value items insert s menuId s FOR_ALL_APPLICATIONS_END domElem tagName QLatin1String QString filename domElem text KService::Ptr s findApplication filename s items insert filename s VFolderMenu::loadApplications QString dir QString prefix QDirIterator it dir it hasNext it next QFileInfo fi it fileInfo QString fn fi fileName fi isDir fi isBundle fn QLatin1String fn QLatin1String loadApplications fi filePath prefix fn fi isFile fn endsWith QLatin1String KService::Ptr service m_kbuildsycocaInterface createService fi absoluteFilePath service addApplication prefix fn service VFolderMenu::processLegacyDir QString dir QString relDir QString prefix QHash&lt;QString, KService::Ptr&gt; items QDirIterator it dir it hasNext it next QFileInfo fi it fileInfo QString fn fi fileName fi isDir fn QLatin1String fn QLatin1String SubMenu parentMenu m_currentMenu m_currentMenu SubMenu m_currentMenu name fn m_currentMenu directoryFile fi absoluteFilePath QStringLiteral parentMenu subMenus append m_currentMenu processLegacyDir fi filePath relDir fn prefix m_currentMenu parentMenu fi isFile fn endsWith QLatin1String KService::Ptr service m_kbuildsycocaInterface createService fi absoluteFilePath service QString prefix fn addApplication service items insert service menuId service service categories isEmpty m_currentMenu items insert service markUsedApplications items VFolderMenu::processMenu QDomElement docElem pass SubMenu parentMenu m_currentMenu oldDirectoryDirsCount m_directoryDirs count QString name QString directoryFile onlyUnallocated isDeleted QDomElement defaultLayoutNode QDomElement layoutNode QDomElement query QDomNode n docElem firstChild n isNull QDomElement e n toElement e tagName QLatin1String name e text e tagName QLatin1String directoryFile e text e tagName QLatin1String QString dir absoluteDir e text e attribute QStringLiteral m_directoryDirs prepend dir e tagName QLatin1String onlyUnallocated e tagName QLatin1String onlyUnallocated e tagName QLatin1String isDeleted e tagName QLatin1String isDeleted e tagName QLatin1String defaultLayoutNode e e tagName QLatin1String layoutNode e n n nextSibling pass m_currentMenu parentMenu SubMenu menu parentMenu subMenus menu name name m_currentMenu menu m_currentMenu m_currentMenu SubMenu m_currentMenu name name parentMenu parentMenu subMenus append m_currentMenu m_rootMenu m_currentMenu directoryFile isEmpty QString tmp locateDirectoryFile directoryFile tmp isEmpty m_currentMenu directoryFile tmp m_currentMenu isDeleted isDeleted m_currentMenu defaultLayoutNode defaultLayoutNode m_currentMenu layoutNode layoutNode parentMenu SubMenu menu parentMenu subMenus menu name name m_currentMenu menu m_currentMenu m_rootMenu pass QDomElement query QDomNode n docElem firstChild n isNull QDomElement e n toElement e tagName QLatin1String createAppsInfo QString dir absoluteDir e text e attribute QStringLiteral registerDirectory dir loadApplications dir QString e tagName QLatin1String createAppsInfo QString dir absoluteDir e text e attribute QStringLiteral QString prefix e attributes namedItem QStringLiteral toAttr value SubMenu oldMenu m_currentMenu m_currentMenu SubMenu registerDirectory dir processLegacyDir dir QString prefix m_legacyNodes insert dir m_currentMenu m_currentMenu oldMenu n n nextSibling loadAppsInfo pass onlyUnallocated pass onlyUnallocated n docElem firstChild n isNull QDomElement e n toElement e tagName QLatin1String QHash&lt;QString, KService::Ptr&gt; items QDomNode n2 e firstChild n2 isNull QDomElement e2 n2 toElement items clear processCondition e2 items m_track track m_trackId m_currentMenu name m_currentMenu items m_currentMenu excludeItems items QStringLiteral includeItems m_currentMenu items items excludeItems m_currentMenu excludeItems items markUsedApplications items m_track track m_trackId m_currentMenu name m_currentMenu items m_currentMenu excludeItems items QStringLiteral n2 n2 nextSibling e tagName QLatin1String QHash&lt;QString, KService::Ptr&gt; items QDomNode n2 e firstChild n2 isNull QDomElement e2 n2 toElement items clear processCondition e2 items m_track track m_trackId m_currentMenu name m_currentMenu items m_currentMenu excludeItems items QStringLiteral excludeItems m_currentMenu items items includeItems m_currentMenu excludeItems items m_track track m_trackId m_currentMenu name m_currentMenu items m_currentMenu excludeItems items QStringLiteral n2 n2 nextSibling n n nextSibling n docElem firstChild n isNull QDomElement e n toElement e tagName QLatin1String processMenu e pass pass e tagName QLatin1String QString dir absoluteDir e text e attribute QStringLiteral SubMenu legacyMenu m_legacyNodes dir legacyMenu mergeMenu m_currentMenu legacyMenu n n nextSibling pass n docElem firstChild n isNull QDomElement e n toElement e tagName QLatin1String QString orig QString dest QDomNode n2 e firstChild n2 isNull QDomElement e2 n2 toElement e2 tagName QLatin1String orig e2 text e2 tagName QLatin1String dest e2 text n2 n2 nextSibling orig isEmpty dest isEmpty SubMenu menu takeSubMenu m_currentMenu orig menu insertSubMenu m_currentMenu dest menu n n nextSibling unloadAppsInfo m_directoryDirs count oldDirectoryDirsCount m_directoryDirs pop_front m_currentMenu parentMenu QString parseAttribute QDomElement e QString option QString SHOW_EMPTY QStringLiteral e hasAttribute SHOW_EMPTY QString str e attribute SHOW_EMPTY str QLatin1String option str QLatin1String option QString INLINE QStringLiteral e hasAttribute INLINE QString str e attribute INLINE str QLatin1String option str QLatin1String option qDebug str e hasAttribute QStringLiteral ok value e attribute QStringLiteral toInt ok ok option QStringLiteral arg value e hasAttribute QStringLiteral QString str e attribute QStringLiteral str QLatin1String option QStringLiteral str QLatin1String option QStringLiteral qDebug str e hasAttribute QStringLiteral e attribute QStringLiteral QLatin1String QString str e attribute QStringLiteral str QLatin1String option str QLatin1String option qDebug str option isEmpty option option prepend QStringLiteral option QStringList parseLayoutNode QDomElement docElem QStringList layout QString optionDefaultLayout docElem tagName QLatin1String optionDefaultLayout parseAttribute docElem optionDefaultLayout isEmpty layout append optionDefaultLayout mergeTagExists QDomNode n docElem firstChild n isNull QDomElement e n toElement e tagName QLatin1String layout append QStringLiteral e tagName QLatin1String layout append e text e tagName QLatin1String layout append e text QString option parseAttribute e option isEmpty layout append option e tagName QLatin1String QString type e attributeNode QStringLiteral value type QLatin1String layout append QStringLiteral type QLatin1String layout append QStringLiteral type QLatin1String layout append QStringLiteral mergeTagExists n n nextSibling mergeTagExists layout append QStringLiteral layout append QStringLiteral qCWarning SYCOCA layout VFolderMenu::layoutMenu VFolderMenu::SubMenu menu QStringList defaultLayout menu defaultLayoutNode isNull defaultLayout parseLayoutNode menu defaultLayoutNode menu layoutNode isNull menu layoutList defaultLayout menu layoutList parseLayoutNode menu layoutNode menu layoutList isEmpty menu layoutList defaultLayout VFolderMenu::SubMenu subMenu menu subMenus layoutMenu subMenu defaultLayout VFolderMenu::markUsedApplications QHash&lt;QString, KService::Ptr&gt; items KService::Ptr p items m_usedAppsDict insert p menuId VFolderMenu::SubMenu VFolderMenu::parseMenu QString file m_appsInfo QStringList dirs QStandardPaths::locateAll QStandardPaths::GenericConfigLocation QStringLiteral QStandardPaths::LocateDirectory QStringList::ConstIterator it dirs begin it dirs end it registerDirectory it loadMenu file m_rootMenu m_rootMenu m_currentMenu QDomElement docElem m_doc documentElement pass pass pass processMenu docElem pass pass buildApplicationIndex buildApplicationIndex QStringList defaultLayout defaultLayout QStringLiteral defaultLayout QStringLiteral layoutMenu m_rootMenu defaultLayout m_rootMenu VFolderMenu::setTrackId QString m_track isEmpty m_trackId id</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">deprecated</field>
    <field name="url">deprecated.html</field>
    <field name="keywords"></field>
    <field name="text">Deprecated List Member KPluginInfo fromServices const KService::List services const KConfigGroup config KConfigGroup() since 5.0 use Q|K PluginLoader instead and build the metadata into the plugins using K_PLUGIN_FACTORY_WITH_JSON Member KPluginInfo KPluginInfo const KService::Ptr service since 5.0 use Q|K PluginLoader instead and build the metadata into the plugin using K_PLUGIN_FACTORY_WITH_JSON Member KService showInKDE const since 5.0 use showInCurrentDesktop() Member KSycoca disableAutoRebuild since 5.15 it only outputs a warning Member KSycoca isChanged const char use the signal databaseChanged(QStringList) instead Member KToolInvocation invokeBrowser const QString url const QByteArray startup_id QByteArray() since 5.0 use QDesktopServices::openUrl(url) Member KToolInvocation invokeMailer const QString address const QString subject const QByteArray startup_id QByteArray() since 5.0 use QDesktopServices::openUrl(mailtoURL) using QUrl::setPath(address) and a query item of for the subject Member KToolInvocation invokeMailer const QUrl mailtoURL const QByteArray startup_id QByteArray() bool allowAttachments false since 5.0 use QDesktopServices::openUrl(mailtoURL) Member KToolInvocation startServiceByDesktopName const QString _name const QStringList URLs QStringList() QString 0 QString 0 int 0 const QByteArray startup_id QByteArray() bool noWait false since 5.0 use QDBusConnectionInterface::startService to start a unique application in order to make dbus calls to it after ensuring that it installs a dbus org.kde.serviceName.service file Otherwise just use QProcess or KRun Member KToolInvocation startServiceByDesktopName const QString _name const QString URL QString 0 QString 0 int 0 const QByteArray startup_id QByteArray() bool noWait false since 5.0 use QDBusConnectionInterface::startService to start a unique application in order to make dbus calls to it after ensuring that it installs a dbus org.kde.serviceName.service file Otherwise just use QProcess or KRun Member KToolInvocation startServiceByDesktopPath const QString _name const QStringList URLs QStringList() QString 0 QString 0 int 0 const QByteArray startup_id QByteArray() bool noWait false since 5.0 use QDBusConnectionInterface::startService to start a unique application in order to make dbus calls to it after ensuring that it installs a dbus org.kde.serviceName.service file Otherwise just use QProcess or KRun Member KToolInvocation startServiceByDesktopPath const QString _name const QString URL QString 0 QString 0 int 0 const QByteArray startup_id QByteArray() bool noWait false since 5.0 use QDBusConnectionInterface::startService to start a unique application in order to make dbus calls to it after ensuring that it installs a dbus org.kde.serviceName.service file Otherwise just use QProcess or KRun Member KToolInvocation startServiceByName const QString _name const QStringList URLs QStringList() QString 0 QString 0 int 0 const QByteArray startup_id QByteArray() bool noWait false Use startServiceByDesktopName or startServiceByDesktopPath Member KToolInvocation startServiceByName const QString _name const QString URL QString 0 QString 0 int 0 const QByteArray startup_id QByteArray() bool noWait false Use startServiceByDesktopName or startServiceByDesktopPath</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KAutostart</field>
    <field name="url">classKAutostart.html</field>
    <field name="keywords">KAutostart</field>
    <field name="text">This is useful for applications that wish to offer a configurable means to allow the application to be autostarted By using this class you future-proof your applications against potential future or platform-specific changes to the autostart mechanism(s) Typical usage might look like</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KAutostart::Condition</field>
    <field name="url">classKAutostart.html#aac167eb8f4e0592692ca9f9106cd87cd</field>
    <field name="keywords">Condition KAutostart::Condition KAutostart</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KAutostart::CheckCommand</field>
    <field name="url">classKAutostart.html#aac167eb8f4e0592692ca9f9106cd87cdafc4060c72bd1a8a66671d09156460a85</field>
    <field name="keywords">CheckCommand KAutostart::CheckCommand KAutostart</field>
    <field name="text">an executable that is checked for existence by name</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KAutostart::CheckCondition</field>
    <field name="url">classKAutostart.html#aac167eb8f4e0592692ca9f9106cd87cdadae692567deb385021e4f722ea4054f6</field>
    <field name="keywords">CheckCondition KAutostart::CheckCondition KAutostart</field>
    <field name="text">autostart condition will be checked too KDE-specific 4.3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KAutostart::CheckAll</field>
    <field name="url">classKAutostart.html#aac167eb8f4e0592692ca9f9106cd87cda8674a74d4438321ff2fa4fa3892d5350</field>
    <field name="keywords">CheckAll KAutostart::CheckAll KAutostart</field>
    <field name="text">all necessary conditions will be checked 4.3</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KAutostart::StartPhase</field>
    <field name="url">classKAutostart.html#a236414b40affcf3f0e961642ca704c54</field>
    <field name="keywords">StartPhase KAutostart::StartPhase KAutostart</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KAutostart::BaseDesktop</field>
    <field name="url">classKAutostart.html#a236414b40affcf3f0e961642ca704c54a142c3761ad02fb518220a12bd2f8672b</field>
    <field name="keywords">BaseDesktop KAutostart::BaseDesktop KAutostart</field>
    <field name="text">the essential desktop services such as panels and window managers</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KAutostart::DesktopServices</field>
    <field name="url">classKAutostart.html#a236414b40affcf3f0e961642ca704c54a6b2bc7939f7da4c4df23663446f655bd</field>
    <field name="keywords">DesktopServices KAutostart::DesktopServices KAutostart</field>
    <field name="text">services that should be available before most interactive applications start but that aren t part of the base desktop This would include things such as clipboard managers and mouse gesture tools</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KAutostart::Applications</field>
    <field name="url">classKAutostart.html#a236414b40affcf3f0e961642ca704c54af672395d2f6141f2be4da7f36c88d69b</field>
    <field name="keywords">Applications KAutostart::Applications KAutostart</field>
    <field name="text">everything else that doesn t belong in the above two categories including most system tray applications system monitors and interactive applications</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::KAutostart</field>
    <field name="args">(const QString &amp;entryName=QString(), QObject *parent=0)</field>
    <field name="url">classKAutostart.html#ae2d3fddeed0985fa5da274cdfe47d4ba</field>
    <field name="keywords">KAutostart KAutostart::KAutostart KAutostart</field>
    <field name="text">If the service already exists in the system then the values associated with that service such as the executable command will be loaded as well Note that unless this service is explicitly set to autostart simply creating a KAutostart object will not result in the service being autostarted on next log in If no such service is already registered and the command to be executed on startup is not the same as entryName then you will want to set the associated command with setExec(const QString&amp;) setExec entryName the name used to identify the service If none is provided then it uses the name registered with KAboutData parent QObject</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::addToAllowedEnvironments</field>
    <field name="args">(const QString &amp;environment)</field>
    <field name="url">classKAutostart.html#ac4d771ccc9ce7cc527628f0f3f1f43a4</field>
    <field name="keywords">addToAllowedEnvironments KAutostart::addToAllowedEnvironments KAutostart</field>
    <field name="text">setAllowedEnvironments() removeFromAllowedEnvironments()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::addToExcludedEnvironments</field>
    <field name="args">(const QString &amp;environment)</field>
    <field name="url">classKAutostart.html#a5d808ed101f0f54a254e6e7779cc320b</field>
    <field name="keywords">addToExcludedEnvironments KAutostart::addToExcludedEnvironments KAutostart</field>
    <field name="text">removeFromExcludedEnvironments()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::allowedEnvironments</field>
    <field name="args">() const</field>
    <field name="url">classKAutostart.html#a0ab2ee175323234c94ed1a51e8458f90</field>
    <field name="keywords">allowedEnvironments KAutostart::allowedEnvironments KAutostart</field>
    <field name="text">this service is allowed to start in Use checkAllowedEnvironment() or autostarts() for actual checks This does not take other autostart conditions into account If any environment is added to the allowed environments list then only those environments will be allowed to autoload the service It is not allowed to specify both allowed and excluded environments at the same time setAllowedEnvironments()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::autostarts</field>
    <field name="args">(const QString &amp;environment=QString(), Conditions check=NoConditions) const</field>
    <field name="url">classKAutostart.html#a58cee8e01a3cc6162bd4b8001eb00993</field>
    <field name="keywords">autostarts KAutostart::autostarts KAutostart</field>
    <field name="text">environment if provided the check will be performed as if being loaded in that environment check autostart conditions to check for see commandToCheck() setAutostarts()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::checkAllowedEnvironment</field>
    <field name="args">(const QString &amp;environment) const</field>
    <field name="url">classKAutostart.html#a6ecdee3f65a70b96ab6ed15f44b5367c</field>
    <field name="keywords">checkAllowedEnvironment KAutostart::checkAllowedEnvironment KAutostart</field>
    <field name="text">4.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::command</field>
    <field name="args">() const</field>
    <field name="url">classKAutostart.html#a6b0b4faa76f4b05825ae058adcaa998c</field>
    <field name="keywords">command KAutostart::command KAutostart</field>
    <field name="text">setCommand()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::commandToCheck</field>
    <field name="args">() const</field>
    <field name="url">classKAutostart.html#a1c9ee569325999bf364fd789ad0e07ca</field>
    <field name="keywords">commandToCheck KAutostart::commandToCheck KAutostart</field>
    <field name="text">If the executable is not found in the user s environment it will not autostart setCommandToCheck()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::excludedEnvironments</field>
    <field name="args">() const</field>
    <field name="url">classKAutostart.html#ad89799cc5731390a3a42a66e7437c71a</field>
    <field name="keywords">excludedEnvironments KAutostart::excludedEnvironments KAutostart</field>
    <field name="text">Use checkAllowedEnvironment() or autostarts() for actual checks This does not take other autostart conditions such as into account It is not allowed to specify both allowed and excluded environments at the same time setExcludedEnvironments()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::removeFromAllowedEnvironments</field>
    <field name="args">(const QString &amp;environment)</field>
    <field name="url">classKAutostart.html#a073847144497536b7b698c300b2d0b27</field>
    <field name="keywords">removeFromAllowedEnvironments KAutostart::removeFromAllowedEnvironments KAutostart</field>
    <field name="text">addToAllowedEnvironments()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::removeFromExcludedEnvironments</field>
    <field name="args">(const QString &amp;environment)</field>
    <field name="url">classKAutostart.html#a93d9d6a0e9f1e744d1d232e2a543278a</field>
    <field name="keywords">removeFromExcludedEnvironments KAutostart::removeFromExcludedEnvironments KAutostart</field>
    <field name="text">addToExcludedEnvironments()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::setAllowedEnvironments</field>
    <field name="args">(const QStringList &amp;environments)</field>
    <field name="url">classKAutostart.html#a467c862d5ab11ea9162696b4d0a1350d</field>
    <field name="keywords">setAllowedEnvironments KAutostart::setAllowedEnvironments KAutostart</field>
    <field name="text">allowedEnvironments() addToAllowedEnvironments()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::setAutostarts</field>
    <field name="args">(bool autostart)</field>
    <field name="url">classKAutostart.html#a6167064562b180610ec0cd43f1d63ad2</field>
    <field name="keywords">setAutostarts KAutostart::setAutostarts KAutostart</field>
    <field name="text">autostart will register with the autostart facility when true and deregister when false autostarts()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::setCommand</field>
    <field name="args">(const QString &amp;command)</field>
    <field name="url">classKAutostart.html#a9628fd49e7076d8bc44805cde0f6d3df</field>
    <field name="keywords">setCommand KAutostart::setCommand KAutostart</field>
    <field name="text">command()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::setCommandToCheck</field>
    <field name="args">(const QString &amp;exec)</field>
    <field name="url">classKAutostart.html#a58c78e7ee66ead0c2aac782607d9d2fe</field>
    <field name="keywords">setCommandToCheck KAutostart::setCommandToCheck KAutostart</field>
    <field name="text">commandToCheck()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::setExcludedEnvironments</field>
    <field name="args">(const QStringList &amp;environments)</field>
    <field name="url">classKAutostart.html#a37bb9f8b777302e3973e3c09fd377b04</field>
    <field name="keywords">setExcludedEnvironments KAutostart::setExcludedEnvironments KAutostart</field>
    <field name="text">excludedEnvironments() addToExcludedEnvironments()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::setStartPhase</field>
    <field name="args">(StartPhase phase)</field>
    <field name="url">classKAutostart.html#a0e68a733fc632d4c1846d689c158cb15</field>
    <field name="keywords">setStartPhase KAutostart::setStartPhase KAutostart</field>
    <field name="text">Note that this is KDE specific and may not work in other environments StartPhase startPhase()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::setVisibleName</field>
    <field name="args">(const QString &amp;entryName)</field>
    <field name="url">classKAutostart.html#a405425ceea4ebfc556d5f25332ca3679</field>
    <field name="keywords">setVisibleName KAutostart::setVisibleName KAutostart</field>
    <field name="text">visibleName()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::startAfter</field>
    <field name="args">() const</field>
    <field name="url">classKAutostart.html#a942ebf49920d1d4b663b5d0b945c6fb6</field>
    <field name="keywords">startAfter KAutostart::startAfter KAutostart</field>
    <field name="text">4.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::startPhase</field>
    <field name="args">() const</field>
    <field name="url">classKAutostart.html#a5c15da7b67ce9e8519b71b01db96621b</field>
    <field name="keywords">startPhase KAutostart::startPhase KAutostart</field>
    <field name="text">Note that this is KDE specific and may not work in other environments StartPhase setStartPhase()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::visibleName</field>
    <field name="args">() const</field>
    <field name="url">classKAutostart.html#a2023014339058e6902f1083f7663d70e</field>
    <field name="keywords">visibleName KAutostart::visibleName KAutostart</field>
    <field name="text">setVisibleName() setEntryName()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutostart::isServiceRegistered</field>
    <field name="args">(const QString &amp;entryName)</field>
    <field name="url">classKAutostart.html#ae2a9825e17fc6ba701f17d0104005de7</field>
    <field name="keywords">isServiceRegistered KAutostart::isServiceRegistered KAutostart</field>
    <field name="text">Does not check whether or not it is set to actually autostart or not entryName the name of the service to check for</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KDBusServiceStarter</field>
    <field name="url">classKDBusServiceStarter.html</field>
    <field name="keywords">KDBusServiceStarter</field>
    <field name="text">The default implementation starts new processes but this interface can also be reimplemented by specific applications to provide dlopened in-process DBus objects This interface is similar to the startServiceByName() function found in QDBusBusService but with the added benefit of using KTrader and therefore additional constraints and the ability to search the standard KDE dirs David Faure</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDBusServiceStarter::findServiceFor</field>
    <field name="args">(const QString &amp;serviceType, const QString &amp;constraint=QString(), QString *error=0, QString *dbusService=0, int flags=0)</field>
    <field name="url">classKDBusServiceStarter.html#a651ff7878a2d701950260c87dc77ca5e</field>
    <field name="keywords">findServiceFor KDBusServiceStarter::findServiceFor KDBusServiceStarter</field>
    <field name="text">The trader is queried to find the preferred application for this serviceType with the constraint that its X-DBus-ServiceName property must be defined Then the DBus server is checked If the service is not available this method will call startServiceFor to start it serviceType the type of service we re looking for constraint see KServiceTypeTrader error On failure error contains a description of the error that occurred If the pointer is 0 the argument will be ignored dbusService On success dbusService contains the DBus service name under which this service is available If the pointer is 0 the argument will be ignored flags for future extensions currently unused an error code indicating success 0 or failure 0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDBusServiceStarter::startServiceFor</field>
    <field name="args">(const QString &amp;serviceType, const QString &amp;constraint=QString(), QString *error=0, QString *dbusService=0, int flags=0)</field>
    <field name="url">classKDBusServiceStarter.html#a0f5acc6003f03bc399baa6c250afac02</field>
    <field name="keywords">startServiceFor KDBusServiceStarter::startServiceFor KDBusServiceStarter</field>
    <field name="text">The default implementation uses KServiceTypeTrader to find the preferred Application and then starts it using KToolInvocation::startService However applications like kontact can reimplement this method to provide an in-process way of loading the implementation for this service type serviceType the type of service we re looking for constraint see KServiceTypeTrader error On failure error contains a description of the error that occurred If the pointer is 0 the argument will be ignored dbusService On success dbusService contains the DBus service name under which this service is available If the pointer is 0 the argument will be ignored flags for future extensions currently unused an error code indicating success 0 or failure 0</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KMimeTypeTrader</field>
    <field name="url">classKMimeTypeTrader.html</field>
    <field name="keywords">KMimeTypeTrader</field>
    <field name="text">Example say that you want to the list of all KParts components that can handle HTML Our code would look like If you want to get the preferred KParts component for text/html you could use preferredService although if this is about loading that component you would use createPartInstanceFromQuery directly KServiceTypeTrader KService</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMimeTypeTrader::~KMimeTypeTrader</field>
    <field name="args">()</field>
    <field name="url">classKMimeTypeTrader.html#a75df888a08b1677a75a4af2420b7a736</field>
    <field name="keywords">KMimeTypeTrader::~KMimeTypeTrader KMimeTypeTrader</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMimeTypeTrader::preferredService</field>
    <field name="args">(const QString &amp;mimeType, const QString &amp;genericServiceType=QStringLiteral(&quot;Application&quot;))</field>
    <field name="url">classKMimeTypeTrader.html#a2d47ab9e1ccf018bcb86431cb0ef7a9a</field>
    <field name="keywords">preferredService KMimeTypeTrader::preferredService KMimeTypeTrader</field>
    <field name="text">This is almost like query() first() except that it also checks if the service is allowed as a preferred service see KService::allowAsDefault mimeType the mime type see query() genericServiceType the service type see query() the preferred service or 0 if no service is available</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMimeTypeTrader::query</field>
    <field name="args">(const QString &amp;mimeType, const QString &amp;genericServiceType=QStringLiteral(&quot;Application&quot;), const QString &amp;constraint=QString()) const</field>
    <field name="url">classKMimeTypeTrader.html#a3b2f28553615ae5231754d5e2cee0c8c</field>
    <field name="keywords">query KMimeTypeTrader::query KMimeTypeTrader</field>
    <field name="text">Example usage To get list of applications that can handle a given mimetype set genericServiceType to which is the default To get list of embeddable components that can handle a given mimetype set genericServiceType to The constraint parameter is used to limit the possible choices returned based on the constraints you give it The constraint language is rather full The most common keywords are AND OR NOT IN and EXIST all used in an almost spoken-word form An example is The keys used in the query Type ServiceTypes Library are all fields found in the desktop files mimeType A mime type like text/plain or text/html genericServiceType a basic service type like KParts/ReadOnlyPart or Application constraint A constraint to limit the choices returned QString() to get all services that can handle the given mimetype A list of services that satisfy the query sorted by preference preferred service first</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMimeTypeTrader::createInstanceFromQuery</field>
    <field name="args">(const QString &amp;mimeType, const QString &amp;serviceType, QObject *parent=0, const QString &amp;constraint=QString(), const QVariantList &amp;args=QVariantList(), QString *error=0)</field>
    <field name="url">classKMimeTypeTrader.html#a6a6016ddfd96aa13c71d1065d0cfbeeb</field>
    <field name="keywords">createInstanceFromQuery KMimeTypeTrader::createInstanceFromQuery KMimeTypeTrader</field>
    <field name="text">mimeType A mime type like text/plain or text/html serviceType a basic service type parent the parent object for the plugin itself constraint A constraint to limit the choices returned QString() to get all services that can handle the given mimetype args A list of arguments passed to the service component error The string passed here will contain an error description A pointer to the newly created object or a null pointer if the factory was unable to create an object of the given type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMimeTypeTrader::createPartInstanceFromQuery</field>
    <field name="args">(const QString &amp;mimeType, QWidget *parentWidget=0, QObject *parent=0, const QString &amp;constraint=QString(), const QVariantList &amp;args=QVariantList(), QString *error=0)</field>
    <field name="url">classKMimeTypeTrader.html#acf6ce3a1fe9271204bde0ce05e38ac98</field>
    <field name="keywords">createPartInstanceFromQuery KMimeTypeTrader::createPartInstanceFromQuery KMimeTypeTrader</field>
    <field name="text">Example mimeType the mimetype which this part is associated with parentWidget the parent widget will be set as the parent of the part s widget parent the parent object for the part itself constraint an optional constraint to pass to the trader args A list of arguments passed to the service component error The string passed here will contain an error description A pointer to the newly created object or a null pointer if the factory was unable to create an object of the given type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMimeTypeTrader::self</field>
    <field name="args">()</field>
    <field name="url">classKMimeTypeTrader.html#aeb8aabd5ac20751c4d536ab5bdd0540b</field>
    <field name="keywords">self KMimeTypeTrader::self KMimeTypeTrader</field>
    <field name="text">You will need to use this to access the KMimeTypeTrader functionality since the constructors are protected Static KMimeTypeTrader instance</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KPluginInfo</field>
    <field name="url">classKPluginInfo.html</field>
    <field name="keywords">KPluginInfo</field>
    <field name="text">This holds all the information about a plugin there is It s used for the user to decide whether he wants to use this plugin or not Matthias Kretz</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::KPluginInfo</field>
    <field name="args">(const QString &amp;filename)</field>
    <field name="url">classKPluginInfo.html#afd34697033cf2873834e81f17752a249</field>
    <field name="keywords">KPluginInfo KPluginInfo::KPluginInfo KPluginInfo</field>
    <field name="text">The file should be of the following form The Name and Comment fields must always be present The keys you may add further entries which will be available using property() The Website Category Require keys are optional For EnabledByDefault look at isPluginEnabledByDefault filename The filename of the desktop file resource If filename is relative you need to specify a resource type e.g KStandardDirs Otherwise resource isn t used</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::KPluginInfo</field>
    <field name="args">(const KService::Ptr service)</field>
    <field name="url">classKPluginInfo.html#a9a1dc91305cbcc4467dd8faefd9c54be</field>
    <field name="keywords">KPluginInfo KPluginInfo::KPluginInfo KPluginInfo</field>
    <field name="text">The desktop file should look like this In the first three entries the Icon entry is optional since 5.0 use Q|K PluginLoader instead and build the metadata into the plugin using K_PLUGIN_FACTORY_WITH_JSON</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::KPluginInfo</field>
    <field name="args">(const QVariantList &amp;args, const QString &amp;libraryPath=QString())</field>
    <field name="url">classKPluginInfo.html#ac644167de07fd370a518de99786dbf1c</field>
    <field name="keywords">KPluginInfo KPluginInfo::KPluginInfo KPluginInfo</field>
    <field name="text">These arguments should contain the plugin s metadata as read from QPluginLoader::metaData() This constructor uses the metadata read from the QVariantList It reads the first QVariantMap it finds in a field called Use Q|K PluginLoader and build the metadata into the plugin using K_PLUGIN_FACTORY_WITH_JSON You can use the desktoptojson tool to generate a json file from your desktop file The json file should look like this args QVariantList with arguments should contain a QVariantMap keyed as provided by QPluginLoader::metaData() libraryPath The path to the plugin file on disk K_PLUGIN_FACTORY_WITH_JSON() KPluginFactory::factory() 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::KPluginInfo</field>
    <field name="args">(const KPluginMetaData &amp;md)</field>
    <field name="url">classKPluginInfo.html#ae4241fd0b6f35dcd9bb6a3d401dd671b</field>
    <field name="keywords">KPluginInfo KPluginInfo::KPluginInfo KPluginInfo</field>
    <field name="text">md The KPluginMetaData to read the information from K_PLUGIN_FACTORY_WITH_JSON() KPluginLoader 5.5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::KPluginInfo</field>
    <field name="args">()</field>
    <field name="url">classKPluginInfo.html#ae4fa1c885fec8ade5a158877bb24b80c</field>
    <field name="keywords">KPluginInfo KPluginInfo::KPluginInfo KPluginInfo</field>
    <field name="text">isValid</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::KPluginInfo</field>
    <field name="args">(const KPluginInfo &amp;copy)</field>
    <field name="url">classKPluginInfo.html#aa18bd651ffa8632bdb34af7dc56d4596</field>
    <field name="keywords">KPluginInfo KPluginInfo::KPluginInfo KPluginInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::author</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a81f4547a80d8c5f3575c8daff16ddbaf</field>
    <field name="keywords">author KPluginInfo::author KPluginInfo</field>
    <field name="text">The author of this plugin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::category</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a08dccd40e1acfdcb932a950d62aa9472</field>
    <field name="keywords">category KPluginInfo::category KPluginInfo</field>
    <field name="text">The category of this plugin e.g playlist/skin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::comment</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a75f13fdcb861689116e2498222103da1</field>
    <field name="keywords">comment KPluginInfo::comment KPluginInfo</field>
    <field name="text">A comment describing the plugin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::config</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#ab977ed6e6aaeb39f8a870656eea6684b</field>
    <field name="keywords">config KPluginInfo::config KPluginInfo</field>
    <field name="text">If the KPluginInfo object has a KConfig object set return it else returns an invalid KConfigGroup</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::defaults</field>
    <field name="args">()</field>
    <field name="url">classKPluginInfo.html#ab2d62b88fec5f9fa67f9b18ca87f0234</field>
    <field name="keywords">defaults KPluginInfo::defaults KPluginInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::dependencies</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#af8a6cd53ba0c58e82b782c58d47cefde</field>
    <field name="keywords">dependencies KPluginInfo::dependencies KPluginInfo</field>
    <field name="text">A list of plugins required for this plugin to be enabled Use the pluginName in this list</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::email</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#ace5d314d6c5b9b2a44dc4aebe0bcb758</field>
    <field name="keywords">email KPluginInfo::email KPluginInfo</field>
    <field name="text">The email address of the author</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::entryPath</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#aa44b4a572c4df96a5cc02bba4d28a222</field>
    <field name="keywords">entryPath KPluginInfo::entryPath KPluginInfo</field>
    <field name="text">The file containing the information about the plugin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::formFactors</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a2e3f29b31cf3d4fa428134fd67883902</field>
    <field name="keywords">formFactors KPluginInfo::formFactors KPluginInfo</field>
    <field name="text">A list of FormFactors this plugin offers corresponds to the value in a desktop service file or to the value in the block of the json metadata Formfactor values are freestyle common values are Values are comma-separated 5.14</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::icon</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a4b5615f2f3c219d1c092a1a7c2f92d15</field>
    <field name="keywords">icon KPluginInfo::icon KPluginInfo</field>
    <field name="text">The iconname for this plugin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::isHidden</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a2c4f920e10d53ae0477afecdc0806fcc</field>
    <field name="keywords">isHidden KPluginInfo::isHidden KPluginInfo</field>
    <field name="text">Whether the plugin should be hidden</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::isPluginEnabled</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a9deb8ec530e91935a462e5610eae0fcb</field>
    <field name="keywords">isPluginEnabled KPluginInfo::isPluginEnabled KPluginInfo</field>
    <field name="text">Whether the plugin is currently loaded setPluginEnabled() load()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::isPluginEnabledByDefault</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a2c6f89c894809fd3b40c6bf8a2f804a4</field>
    <field name="keywords">isPluginEnabledByDefault KPluginInfo::isPluginEnabledByDefault KPluginInfo</field>
    <field name="text">The default value whether the plugin is enabled or not Defaults to the value set in the desktop file or if that isn t set to false</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::isValid</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a3b1fb66e61ddda8e3ca8fc6332f0001a</field>
    <field name="keywords">isValid KPluginInfo::isValid KPluginInfo</field>
    <field name="text">Treat invalid KPluginInfo objects like you would treat a null pointer</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::kcmServices</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a531fce84a86216a1e43ac1762bcc5905</field>
    <field name="keywords">kcmServices KPluginInfo::kcmServices KPluginInfo</field>
    <field name="text">A list of Service pointers if the plugin installs one or more KCModule</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::libraryPath</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a53bac006d1b7e89e20c128ed076f7706</field>
    <field name="keywords">libraryPath KPluginInfo::libraryPath KPluginInfo</field>
    <field name="text">The absolute path of the plugin on disk This can be used to load the plugin from using KPluginLoader or QPluginLoader 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::license</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a686ac2922baae9c04fbec1dce1176b34</field>
    <field name="keywords">license KPluginInfo::license KPluginInfo</field>
    <field name="text">The license keyword of this plugin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::load</field>
    <field name="args">(const KConfigGroup &amp;config=KConfigGroup())</field>
    <field name="url">classKPluginInfo.html#aa7d9a5902333528ffca052e7bc406ad8</field>
    <field name="keywords">load KPluginInfo::load KPluginInfo</field>
    <field name="text">config The KConfigGroup holding the information whether plugin is enabled</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::name</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a8c39863d1936db5197c524240eb491ce</field>
    <field name="keywords">name KPluginInfo::name KPluginInfo</field>
    <field name="text">The user visible name of the plugin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::operator!=</field>
    <field name="args">(const KPluginInfo &amp;rhs) const</field>
    <field name="url">classKPluginInfo.html#a6f97cdc48882c8a5c15b53d88bde3801</field>
    <field name="keywords">operator!= KPluginInfo::operator!= KPluginInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::operator&lt;</field>
    <field name="args">(const KPluginInfo &amp;rhs) const</field>
    <field name="url">classKPluginInfo.html#ac1ac1d94b2fc92100ae769fef7dc9733</field>
    <field name="keywords">operator&lt; KPluginInfo::operator&lt; KPluginInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::operator=</field>
    <field name="args">(const KPluginInfo &amp;rhs)</field>
    <field name="url">classKPluginInfo.html#a4d8e87e9b1fa622f452fae1aba0eab84</field>
    <field name="keywords">operator= KPluginInfo::operator= KPluginInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::operator==</field>
    <field name="args">(const KPluginInfo &amp;rhs) const</field>
    <field name="url">classKPluginInfo.html#a932458d1c2ae412804b40dc6e1bb0155</field>
    <field name="keywords">operator== KPluginInfo::operator== KPluginInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::operator&gt;</field>
    <field name="args">(const KPluginInfo &amp;rhs) const</field>
    <field name="url">classKPluginInfo.html#a91b42d945b9b7bf9dc1074e8b6b7fde1</field>
    <field name="keywords">operator&gt; KPluginInfo::operator&gt; KPluginInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::pluginName</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a40f05c5154d54ac0aed75e9fba34acea</field>
    <field name="keywords">pluginName KPluginInfo::pluginName KPluginInfo</field>
    <field name="text">The internal name of the plugin for KParts Plugins this is the same name as set in the rc file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::properties</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a1fb84ddb4574476edfdcc0c97103de51</field>
    <field name="keywords">properties KPluginInfo::properties KPluginInfo</field>
    <field name="text">All properties of this object This can be used to read custom values 5.3 KPluginInfo::property()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::property</field>
    <field name="args">(const QString &amp;key) const</field>
    <field name="url">classKPluginInfo.html#a5113be2858863d954563fcf5de741094</field>
    <field name="keywords">property KPluginInfo::property KPluginInfo</field>
    <field name="text">The value associated to the key You can use it if you want to read custom values To do this you need to define your own servicetype and add it to the ServiceTypes keys</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::save</field>
    <field name="args">(KConfigGroup config=KConfigGroup())</field>
    <field name="url">classKPluginInfo.html#a1ef67ef8d9bbf59f263b44ae081af2f9</field>
    <field name="keywords">save KPluginInfo::save KPluginInfo</field>
    <field name="text">config The KConfigGroup holding the information whether plugin is enabled</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::service</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a7827960deb230c5358a10c35d513e4c7</field>
    <field name="keywords">service KPluginInfo::service KPluginInfo</field>
    <field name="text">The KService object for this plugin You might need it if you want to read custom values To do this you need to define your own servicetype and add it to the ServiceTypes keys Then you can use the KService::property() method to read your keys property()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::serviceTypes</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#ae81a7b45886835af09575080eb8bf28a</field>
    <field name="keywords">serviceTypes KPluginInfo::serviceTypes KPluginInfo</field>
    <field name="text">A list of ServiceTypes this plugin offers 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::setConfig</field>
    <field name="args">(const KConfigGroup &amp;config)</field>
    <field name="url">classKPluginInfo.html#a5e1fd568345bb2093865b4b945d11048</field>
    <field name="keywords">setConfig KPluginInfo::setConfig KPluginInfo</field>
    <field name="text">This will be overridden by the KConfigGroup passed to save() or load() if one is passed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::setPluginEnabled</field>
    <field name="args">(bool enabled)</field>
    <field name="url">classKPluginInfo.html#ac453ae934eb0711dd88647b5d0f0d2dd</field>
    <field name="keywords">setPluginEnabled KPluginInfo::setPluginEnabled KPluginInfo</field>
    <field name="text">isPluginEnabled() save()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::toMetaData</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a54f8b1c76ad327e3916909edc9d1a0f5</field>
    <field name="keywords">toMetaData KPluginInfo::toMetaData KPluginInfo</field>
    <field name="text">a KPluginMetaData object with equivalent meta data 5.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::version</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a4eb4259eb1786d7ec24d66805fa7feca</field>
    <field name="keywords">version KPluginInfo::version KPluginInfo</field>
    <field name="text">The version of the plugin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::website</field>
    <field name="args">() const</field>
    <field name="url">classKPluginInfo.html#a63d29050662d648eb02227fd12bbb9e2</field>
    <field name="keywords">website KPluginInfo::website KPluginInfo</field>
    <field name="text">The website of the plugin/author</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::fromFiles</field>
    <field name="args">(const QStringList &amp;files, const KConfigGroup &amp;config=KConfigGroup())</field>
    <field name="url">classKPluginInfo.html#a452fd05d5272f6d526e607005c001b5b</field>
    <field name="keywords">fromFiles KPluginInfo::fromFiles KPluginInfo</field>
    <field name="text">A list of KPluginInfo objects constructed from a list of filenames If you make a lookup using for example KStandardDirs::findAllResources() you pass the list of files to this function files The list of files to construct the list of KPluginInfo objects from config The config group where to save/load whether the plugin is enabled/disabled</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::fromKPartsInstanceName</field>
    <field name="args">(const QString &amp;componentName, const KConfigGroup &amp;config=KConfigGroup())</field>
    <field name="url">classKPluginInfo.html#aace3e1a76876e98ffb20113930c8c978</field>
    <field name="keywords">fromKPartsInstanceName KPluginInfo::fromKPartsInstanceName KPluginInfo</field>
    <field name="text">A list of KPluginInfo objects for the KParts plugins of a component componentName Use the component name to look up all KParts plugins for it config The config group where to save/load whether the plugin is enabled/disabled</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::fromMetaData</field>
    <field name="args">(const KPluginMetaData &amp;meta)</field>
    <field name="url">classKPluginInfo.html#abb626711e026f4d44a6d542954bad955</field>
    <field name="keywords">fromMetaData KPluginInfo::fromMetaData KPluginInfo</field>
    <field name="text">meta the KPluginMetaData to convert a KPluginInfo object with equivalent meta data 5.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::fromMetaData</field>
    <field name="args">(const QVector&lt; KPluginMetaData &gt; &amp;list)</field>
    <field name="url">classKPluginInfo.html#a7d7f95100d0ce40b9244b3daf2692091</field>
    <field name="keywords">fromMetaData KPluginInfo::fromMetaData KPluginInfo</field>
    <field name="text">list the list of KPluginMetaData objects to convert a list of KPluginInfo objects with equivalent meta data 5.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::fromServices</field>
    <field name="args">(const KService::List &amp;services, const KConfigGroup &amp;config=KConfigGroup())</field>
    <field name="url">classKPluginInfo.html#a641310294d240aa6d82dc014640bf3aa</field>
    <field name="keywords">fromServices KPluginInfo::fromServices KPluginInfo</field>
    <field name="text">A list of KPluginInfo objects constructed from a list of KService objects If you get a trader offer of the plugins you want to use you can just pass them to this function services The list of services to construct the list of KPluginInfo objects from config The config group where to save/load whether the plugin is enabled/disabled since 5.0 use Q|K PluginLoader instead and build the metadata into the plugins using K_PLUGIN_FACTORY_WITH_JSON</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::toMetaData</field>
    <field name="args">(const KPluginInfo &amp;info)</field>
    <field name="url">classKPluginInfo.html#a4024b5ea6c9fc4aa131dde56c48935a6</field>
    <field name="keywords">toMetaData KPluginInfo::toMetaData KPluginInfo</field>
    <field name="text">info the KPluginInfo object to convert a KPluginMetaData object with equivalent meta data 5.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginInfo::toMetaData</field>
    <field name="args">(const KPluginInfo::List &amp;list)</field>
    <field name="url">classKPluginInfo.html#a9dce06b098c7b609d615faf68b00bd6b</field>
    <field name="keywords">toMetaData KPluginInfo::toMetaData KPluginInfo</field>
    <field name="text">list the list of KPluginInfo objects to convert a list of KPluginMetaData objects with equivalent meta data 5.3</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KPluginTrader</field>
    <field name="url">classKPluginTrader.html</field>
    <field name="keywords">KPluginTrader</field>
    <field name="text">KPluginTrader provides an easy way to load a plugin instance from a KPluginFactory or just querying for existing plugins KPluginTrader provides a way for an application to query directories in the Qt plugin paths accessed through QCoreApplication::libraryPaths() Plugins may match a specific set of requirements This allows to find specific plugins at run-time without having to hard-code their names and/or paths KPluginTrader does not search recursively you are rather encouraged to install plugins into specific subdirectories to further speed searching KPluginTrader exclusively searches within the plugin binaries metadata via QPluginLoader::metaData() It does not search these directories recursively KPluginTrader does not use KServiceTypeTrader or KSyCoCa As such it will only find binary plugins If you are looking for a generic way to query for services use KServiceTypeTrader For anything relating to mimetypes type of files use KMimeTypeTrader Example If you want to find all plugins for your application you would define a KMyApp/Plugin servicetype and then you can query the trader for it You can add a constraint in the For instance Please note that when including property names containing arithmetic operators like or then you have to put brackets around the property name in order to correctly separate arithmetic operations from the name So for example a constraint expression like needs to be written as otherwise it could also be interpreted as Subtract the numeric value of the property and from the property and make sure it is greater than 4 Instead of the other meaning make sure that the numeric value of is greater than 4 KMimeTypeTrader KServiceTypeTrader KPluginInfo QCoreApplication::libraryPaths QT_PLUGIN_PATH env variable KPluginFactory kservice_desktop_to_json Cmake macro K_PLUGIN_FACTORY_WITH_JSON macro defined in KPluginFactory 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginTrader::~KPluginTrader</field>
    <field name="args">()</field>
    <field name="url">classKPluginTrader.html#a46b7e49b85b106b3d6976c033327efdc</field>
    <field name="keywords">KPluginTrader::~KPluginTrader KPluginTrader</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginTrader::query</field>
    <field name="args">(const QString &amp;subDirectory, const QString &amp;serviceType=QString(), const QString &amp;constraint=QString())</field>
    <field name="url">classKPluginTrader.html#af3efbd1a45a5b1b384bb44f392592cc2</field>
    <field name="keywords">query KPluginTrader::query KPluginTrader</field>
    <field name="text">It will return a list of plugins that match your specifications Required parameter is the service type and subdirectory This method will append the subDirectory to every path found in QCoreApplication::libraryPaths() append the subDirectory parameter and search through the plugin s metadata KPluginTrader exclusively searches within the plugin binaries metadata via QPluginLoader::metaData() It does not search these directories recursively The constraint parameter is used to limit the possible choices returned based on the constraints you give it The constraint language is rather full The most common keywords are AND OR NOT IN and EXIST all used in an almost spoken-word form An example is If you want to load a list of plugins from a specific subdirectory you can do the following If you have a specific query for just one plugin use the createInstanceFromQuery method The keys used in the query Type ServiceType Exec are all fields found in the json files which are compiled into the plugin binaries subDirectory The subdirectory under the Qt plugin path servicetype A service type like KMyApp/Plugin or KFilePlugin constraint A constraint to limit the choices returned QString() to get all services of the given servicetype A list of services that satisfy the query</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginTrader::createInstanceFromQuery</field>
    <field name="args">(const QString &amp;subDirectory, const QString &amp;serviceType=QString(), const QString &amp;constraint=QString(), QObject *parent=0, const QVariantList &amp;args=QVariantList(), QString *error=0)</field>
    <field name="url">classKPluginTrader.html#a54220c5d965f7660b8bf76b009bb15af</field>
    <field name="keywords">createInstanceFromQuery KPluginTrader::createInstanceFromQuery KPluginTrader</field>
    <field name="text">Example subDirectory The subdirectory under the Qt plugin pathes to search in serviceType The type of service for which to find a plugin constraint An optional constraint to pass to the trader see KTrader parent The parent object for the part itself args A list of arguments passed to the service component error The string passed here will contain an error description A pointer to the newly created object or a null pointer if the factory was unable to create an object of the given type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginTrader::createInstanceFromQuery</field>
    <field name="args">(const QString &amp;subDirectory, const QString &amp;serviceType, const QString &amp;constraint, QObject *parent, QWidget *parentWidget, const QVariantList &amp;args=QVariantList(), QString *error=0)</field>
    <field name="url">classKPluginTrader.html#a67d6904331628dd48c830adbbde49889</field>
    <field name="keywords">createInstanceFromQuery KPluginTrader::createInstanceFromQuery KPluginTrader</field>
    <field name="text">This method works like createInstanceFromQuery const QString const QString const QString QObject* const QVariantList QString* but you can specify an additional parent widget This is important for a KPart for example subDirectory The subdirectory under the Qt plugin pathes to search in serviceType the type of service for which to find a plugin constraint an optional constraint to pass to the trader see KTrader parent the parent object for the part itself parentWidget the parent widget for the plugin args A list of arguments passed to the service component error The string passed here will contain an error description A pointer to the newly created object or a null pointer if the factory was unable to create an object of the given type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginTrader::self</field>
    <field name="args">()</field>
    <field name="url">classKPluginTrader.html#a055bc78100f53a622169c5cc0ba82bce</field>
    <field name="keywords">self KPluginTrader::self KPluginTrader</field>
    <field name="text">You will need to use this to access the KPluginTrader functionality since the constructors are protected Static KPluginTrader instance</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KService</field>
    <field name="url">classKService.html</field>
    <field name="keywords">KService</field>
    <field name="text">The starting point you need is often the static methods like createInstance() The types of service a plugin provides is taken from the accompanying desktop file where the ServiceTypes field is used For a tutorial on how to build a plugin-loading mechanism and how to write plugins in general see KServiceType KServiceGroup Torben Weis</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KService::DBusStartupType</field>
    <field name="url">classKService.html#a6419c30c7fab9341c1df192621f5953a</field>
    <field name="keywords">DBusStartupType KService::DBusStartupType KService</field>
    <field name="text">None This service has no DBUS support Unique This service provides a unique DBUS service The service name is equal to the desktopEntryName Multi This service provides a DBUS service which can be run with multiple instances in parallel The service name of an instance is equal to the desktopEntryName the PID of the process</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::KService</field>
    <field name="args">(const QString &amp;name, const QString &amp;exec, const QString &amp;icon)</field>
    <field name="url">classKService.html#a4f55c41242957e5adfa7fa35d9129651</field>
    <field name="keywords">KService KService::KService KService</field>
    <field name="text">name the name of the service exec the executable icon the name of the icon</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::KService</field>
    <field name="args">(const QString &amp;fullpath)</field>
    <field name="url">classKService.html#adef306dd0e342d8f0963c5f80166537b</field>
    <field name="keywords">KService KService::KService KService</field>
    <field name="text">fullpath Full path to the config file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::KService</field>
    <field name="args">(const KDesktopFile *config, const QString &amp;entryPath=QString())</field>
    <field name="url">classKService.html#a7e0f23ef92085ea1abbab7648ca31eaa</field>
    <field name="keywords">KService KService::KService KService</field>
    <field name="text">config the desktop file to read optional relative path to store for findByName</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::actions</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a2b803e63c688acc295f4d35f50a85dc5</field>
    <field name="keywords">actions KService::actions KService</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::allowAsDefault</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#ad07fa6e162c51c32cf630dba1daa38d8</field>
    <field name="keywords">allowAsDefault KService::allowAsDefault KService</field>
    <field name="text">Left Click in a file manager or KRun in general If not then this service is only available in RMB popups so it must be selected explicitly by the user in order to be used Note that servicemenus supersede this functionality though at least in konqueror true if the service may be used as the default main handler</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::allowMultipleFiles</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a368848f586d803b6ec42dfb680c8f481</field>
    <field name="keywords">allowMultipleFiles KService::allowMultipleFiles KService</field>
    <field name="text">true if multiple files may be passed to this service at startup False if only one file at a time may be passed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::categories</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a00b820439073ef6ef764fa51f15e4ba3</field>
    <field name="keywords">categories KService::categories KService</field>
    <field name="text">the list of VFolder categories</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::comment</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a887c1e73c45ad14e3ade08903a4a0cef</field>
    <field name="keywords">comment KService::comment KService</field>
    <field name="text">the descriptive comment for the service or QString() if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::createInstance</field>
    <field name="args">(QObject *parent=0, const QVariantList &amp;args=QVariantList(), QString *error=0) const</field>
    <field name="url">classKService.html#acfc4d83c58548ea4666ceb3c7f09be1c</field>
    <field name="keywords">createInstance KService::createInstance KService</field>
    <field name="text">parent The parent object see QObject constructor args A list of arguments passed to the factory and possibly to the component see KPluginFactory error A pointer to QString which should receive the error description or 0 A pointer to the newly created object or a null pointer if the factory was unable to create an object of the given type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::createInstance</field>
    <field name="args">(QWidget *parentWidget, QObject *parent, const QVariantList &amp;args=QVariantList(), QString *error=0) const</field>
    <field name="url">classKService.html#aab609cccc0e4a701d6844cb0a9028827</field>
    <field name="keywords">createInstance KService::createInstance KService</field>
    <field name="text">parentWidget A parent widget for the service This is used e g for parts parent The parent object see QObject constructor args A list of arguments passed to the factory and possibly to the component see KPluginFactory error A pointer to QString which should receive the error description or 0 A pointer to the newly created object or a null pointer if the factory was unable to create an object of the given type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::dbusStartupType</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a3d996c876fe73e6518ebec5634f1467f</field>
    <field name="keywords">dbusStartupType KService::dbusStartupType KService</field>
    <field name="text">the DBUSStartupType supported by this service</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::desktopEntryName</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a27990e4af38af93f3164a819808b3bf9</field>
    <field name="keywords">desktopEntryName KService::desktopEntryName KService</field>
    <field name="text">E.g the name of the desktop entry without path or extension or QString() if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::docPath</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#ac729d333293487a0dea99a6f6d162bde</field>
    <field name="keywords">docPath KService::docPath KService</field>
    <field name="text">4.2 the documentation path or QString() if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::exec</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a82ad70f1e2464e417e58217d5f818233</field>
    <field name="keywords">exec KService::exec KService</field>
    <field name="text">the command that the service executes or QString() if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::genericName</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a3b9e540f99e2bd9c643b59b72ba384fd</field>
    <field name="keywords">genericName KService::genericName KService</field>
    <field name="text">the generic name or QString() if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::hasMimeType</field>
    <field name="args">(const QString &amp;mimeType) const</field>
    <field name="url">classKService.html#afb76a4db1be2b604aa382f6888d2aa07</field>
    <field name="keywords">hasMimeType KService::hasMimeType KService</field>
    <field name="text">mimeType The name of the mime type you are interested in determining whether this service supports 4.6</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::hasServiceType</field>
    <field name="args">(const QString &amp;serviceTypePtr) const</field>
    <field name="url">classKService.html#a42a5318a5c153826e50be03f88997a06</field>
    <field name="keywords">hasServiceType KService::hasServiceType KService</field>
    <field name="text">serviceTypePtr The name of the service type you are interested in determining whether this service supports true if the service type you specified is supported otherwise false</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::icon</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#aa0bd082a665935aa5ce78841221625ea</field>
    <field name="keywords">icon KService::icon KService</field>
    <field name="text">the icon associated with the service or QString() if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::initialPreference</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a91d5ef0622f2f6b9e85b245754c7d55c</field>
    <field name="keywords">initialPreference KService::initialPreference KService</field>
    <field name="text">The bigger the value the most preferred the service is the service preference level of the service</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::isApplication</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#adf9a23b6da0122cb70bb40f2f7a0e86e</field>
    <field name="keywords">isApplication KService::isApplication KService</field>
    <field name="text">true if this service is an application i.e it has Type Application in its desktop file and exec() will not be empty</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::keywords</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a283b6306865e1b729409ffd8605b7546</field>
    <field name="keywords">keywords KService::keywords KService</field>
    <field name="text">the list of keywords</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::library</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#abf74cc799ce6bab11474f8440d48a9dc</field>
    <field name="keywords">library KService::library KService</field>
    <field name="text">the name of the library that contains the service s implementation or QString() if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::locateLocal</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a609b01c8b604b6b8be85208268feaf25</field>
    <field name="keywords">locateLocal KService::locateLocal KService</field>
    <field name="text">path that can be used for saving changes to this service</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::menuId</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a645313650f6d92ebc5365c31b886dbd6</field>
    <field name="keywords">menuId KService::menuId KService</field>
    <field name="text">The menu ID is used to add or remove the entry to a menu the menu ID</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::mimeTypes</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a059b1da0d1d5d171ac6c1961ad5a8792</field>
    <field name="keywords">mimeTypes KService::mimeTypes KService</field>
    <field name="text">Note that this doesn t include inherited mimetypes only the mimetypes types listed in the desktop file 4.8.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::noDisplay</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a54399c581f175cb8518be06ab42b4c58</field>
    <field name="keywords">noDisplay KService::noDisplay KService</field>
    <field name="text">true to suppress this service Such services still appear in trader queries i.e in popup menus for instance</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::operator KPluginName</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a1c61f2a3e13fa812ee8c29bcfa382732</field>
    <field name="keywords">operator KPluginName KService::operator KPluginName KService</field>
    <field name="text">This allows expressions like which will use library() as the name of the plugin If the service is not valid or does not have a library KPluginLoader::errorString() will be set appropriately</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::parentApp</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a055c4f813247c104720df34bc68894b1</field>
    <field name="keywords">parentApp KService::parentApp KService</field>
    <field name="text">Useful for e.g plugins the parent application or QString() if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::path</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#adc0266ae0f3fdc2ce6c69a4160e4c8b7</field>
    <field name="keywords">path KService::path KService</field>
    <field name="text">the working directory to run the program in or QString() if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::pluginKeyword</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#ac10ee48058bd7c0a19250e008ed5a9aa</field>
    <field name="keywords">pluginKeyword KService::pluginKeyword KService</field>
    <field name="text">The keyword is defined with X-KDE-PluginKeyword in the desktop file and with K_REGISTER_PLUGIN_WITH_KEYWORD when implementing the plugin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::property</field>
    <field name="args">(const QString &amp;_name, QVariant::Type t) const</field>
    <field name="url">classKService.html#a76a45559bb26ba8d07b58de2427c7283</field>
    <field name="keywords">property KService::property KService</field>
    <field name="text">_name the name of the property t the assumed type of the property the property or invalid if not found KServiceType</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::serviceTypes</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a440c34661e6292491355afe5af0f8188</field>
    <field name="keywords">serviceTypes KService::serviceTypes KService</field>
    <field name="text">the list of service types that are supported Note that this doesn t include inherited servicetypes or mimetypes only the service types listed in the desktop file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::setExec</field>
    <field name="args">(const QString &amp;exec)</field>
    <field name="url">classKService.html#a1d6fd8519b6525de8422f9c8d9e6bb90</field>
    <field name="keywords">setExec KService::setExec KService</field>
    <field name="text">If exec is not empty its value will override the one the one set when this service was created Please note that entryPath is also cleared so the service will no longer be associated with a specific config file 4.11</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::setMenuId</field>
    <field name="args">(const QString &amp;menuId)</field>
    <field name="url">classKService.html#ac428beb293223b4e43719c2c8f5578df</field>
    <field name="keywords">setMenuId KService::setMenuId KService</field>
    <field name="text">Set the menu id</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::setTerminal</field>
    <field name="args">(bool b)</field>
    <field name="url">classKService.html#a83514d6733779a22d0a0c218d4f84953</field>
    <field name="keywords">setTerminal KService::setTerminal KService</field>
    <field name="text">Sets whether to use a terminal or not</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::setTerminalOptions</field>
    <field name="args">(const QString &amp;options)</field>
    <field name="url">classKService.html#a287ca714263203bac828c7d95150c710</field>
    <field name="keywords">setTerminalOptions KService::setTerminalOptions KService</field>
    <field name="text">Sets the terminal options to use</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::showInCurrentDesktop</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#ad1c4ee88d5eb0bb4f8da08aacb56d814</field>
    <field name="keywords">showInCurrentDesktop KService::showInCurrentDesktop KService</field>
    <field name="text">true if the service should be shown KMimeTypeTrader honors this and removes such services from its results 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::showInKDE</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#aef4826fafac8af7d9f3ff284581dccf6</field>
    <field name="keywords">showInKDE KService::showInKDE KService</field>
    <field name="text">true if the service should be shown KMimeTypeTrader honors this and removes such services from its results 4.5 since 5.0 use showInCurrentDesktop()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::showOnCurrentPlatform</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a7cd753b79039668adac755ace7780034</field>
    <field name="keywords">showOnCurrentPlatform KService::showOnCurrentPlatform KService</field>
    <field name="text">on xcb or on wayland true if the service should be shown 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::storageId</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a278d379ed7e66262c4dab4000a8778af</field>
    <field name="keywords">storageId KService::storageId KService</field>
    <field name="text">It will be based on the menu-id when available and otherwise falls back to entryPath() the storage ID</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::substituteUid</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a3c1826b7cb7d94f0c9c8e12ffc6c0626</field>
    <field name="keywords">substituteUid KService::substituteUid KService</field>
    <field name="text">true if the service has to be run under a different uid username()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::terminal</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a3f41cfbbc20ff0a2b23a621b5d51eeff</field>
    <field name="keywords">terminal KService::terminal KService</field>
    <field name="text">true if the service is to be run in a terminal</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::terminalOptions</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a407f833b416e1721d4dc7f69b38a708f</field>
    <field name="keywords">terminalOptions KService::terminalOptions KService</field>
    <field name="text">The service must be a tty-oriented program the terminal options or QString() if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::untranslatedGenericName</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a91264ac5ed247c5dda4ab89f34652b21</field>
    <field name="keywords">untranslatedGenericName KService::untranslatedGenericName KService</field>
    <field name="text">the generic name or QString() if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::username</field>
    <field name="args">() const</field>
    <field name="url">classKService.html#a57a86557cb3f3481f0f6ac56ba66740d</field>
    <field name="keywords">username KService::username KService</field>
    <field name="text">the username under which the service has to be run or QString() if not set substituteUid()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycocaEntry::entryPath</field>
    <field name="args">() const</field>
    <field name="url">classKSycocaEntry.html#a9b09ff62f097ad6b190dcce59899cec5</field>
    <field name="keywords">entryPath KSycocaEntry::entryPath KSycocaEntry entryPath KSycocaEntry::entryPath KSycocaEntry entryPath KSycocaEntry::entryPath KSycocaEntry entryPath KSycocaEntry::entryPath KSycocaEntry</field>
    <field name="text">the path of this entry The path can be absolute or relative The corresponding factory should know relative to what</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycocaEntry::isDeleted</field>
    <field name="args">() const</field>
    <field name="url">classKSycocaEntry.html#a5d850905e3ef323a170d03446f23552f</field>
    <field name="keywords">isDeleted KSycocaEntry::isDeleted KSycocaEntry isDeleted KSycocaEntry::isDeleted KSycocaEntry isDeleted KSycocaEntry::isDeleted KSycocaEntry isDeleted KSycocaEntry::isDeleted KSycocaEntry</field>
    <field name="text">true if deleted</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycocaEntry::isType</field>
    <field name="args">(KSycocaType t) const</field>
    <field name="url">classKSycocaEntry.html#a88dc388711eeb2a9d2cc8c1e632580b7</field>
    <field name="keywords">isType KSycocaEntry::isType KSycocaEntry isType KSycocaEntry::isType KSycocaEntry isType KSycocaEntry::isType KSycocaEntry isType KSycocaEntry::isType KSycocaEntry</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycocaEntry::isValid</field>
    <field name="args">() const</field>
    <field name="url">classKSycocaEntry.html#a3759073883ad2fc631457223bc8cc129</field>
    <field name="keywords">isValid KSycocaEntry::isValid KSycocaEntry isValid KSycocaEntry::isValid KSycocaEntry isValid KSycocaEntry::isValid KSycocaEntry isValid KSycocaEntry::isValid KSycocaEntry</field>
    <field name="text">true if valid</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycocaEntry::name</field>
    <field name="args">() const</field>
    <field name="url">classKSycocaEntry.html#a47cc0b9a4e968ddf6593b9a99696b2a2</field>
    <field name="keywords">name KSycocaEntry::name KSycocaEntry name KSycocaEntry::name KSycocaEntry name KSycocaEntry::name KSycocaEntry name KSycocaEntry::name KSycocaEntry</field>
    <field name="text">the name of this entry</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycocaEntry::property</field>
    <field name="args">(const QString &amp;name) const</field>
    <field name="url">classKSycocaEntry.html#afadf03696e1a19e8f791771564ada80e</field>
    <field name="keywords">property KSycocaEntry::property KSycocaEntry property KSycocaEntry::property KSycocaEntry property KSycocaEntry::property KSycocaEntry property KSycocaEntry::property KSycocaEntry</field>
    <field name="text">Some often used properties have convenience access functions like exec() serviceTypes etc name the name of the property the property or invalid if not found</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycocaEntry::propertyNames</field>
    <field name="args">() const</field>
    <field name="url">classKSycocaEntry.html#afb64d0c6b1c26a0f0b5f2926fa6d17d9</field>
    <field name="keywords">propertyNames KSycocaEntry::propertyNames KSycocaEntry propertyNames KSycocaEntry::propertyNames KSycocaEntry propertyNames KSycocaEntry::propertyNames KSycocaEntry propertyNames KSycocaEntry::propertyNames KSycocaEntry</field>
    <field name="text">That means that some of these properties may be empty the list of supported properties</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycocaEntry::setDeleted</field>
    <field name="args">(bool deleted)</field>
    <field name="url">classKSycocaEntry.html#ac1ad5b6b0858402d63ff5cb6630174e3</field>
    <field name="keywords">setDeleted KSycocaEntry::setDeleted KSycocaEntry setDeleted KSycocaEntry::setDeleted KSycocaEntry setDeleted KSycocaEntry::setDeleted KSycocaEntry setDeleted KSycocaEntry::setDeleted KSycocaEntry</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycocaEntry::storageId</field>
    <field name="args">() const</field>
    <field name="url">classKSycocaEntry.html#a1817b45fae1b0c54fa80a471c5f7c07a</field>
    <field name="keywords">storageId KSycocaEntry::storageId KSycocaEntry storageId KSycocaEntry::storageId KSycocaEntry storageId KSycocaEntry::storageId KSycocaEntry storageId KSycocaEntry::storageId KSycocaEntry</field>
    <field name="text">the unique ID for this entry In practice this is storageId() for KService and name() for everything else 4.2.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycocaEntry::sycocaType</field>
    <field name="args">() const</field>
    <field name="url">classKSycocaEntry.html#ad9f3bd1a835af09339d7e87d23c21366</field>
    <field name="keywords">sycocaType KSycocaEntry::sycocaType KSycocaEntry sycocaType KSycocaEntry::sycocaType KSycocaEntry sycocaType KSycocaEntry::sycocaType KSycocaEntry sycocaType KSycocaEntry::sycocaType KSycocaEntry</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::allServices</field>
    <field name="args">()</field>
    <field name="url">classKService.html#a4adac72b28d0736ae27a095c60bbd2f7</field>
    <field name="keywords">allServices KService::allServices KService</field>
    <field name="text">Useful for being able to to display them in a list box for example More memory consuming than the ones above don t use unless really necessary the list of all services</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::newServicePath</field>
    <field name="args">(bool showInMenu, const QString &amp;suggestedName, QString *menuId=0, const QStringList *reservedMenuIds=0)</field>
    <field name="url">classKService.html#ad7f00a2246788a7626948794f25a138a</field>
    <field name="keywords">newServicePath KService::newServicePath KService</field>
    <field name="text">showInMenu true if the service should be shown in the KDE menu false if the service should be hidden from the menu This argument isn t used anymore use NoDisplay true to hide the service suggestedName name to base the file on if a service with such name already exists a prefix will be added to make it unique menuId If provided menuId will be set to the menu id to use for the KService reservedMenuIds If provided the path and menu id will be chosen in such a way that the new menu id does not conflict with any of the reservedMenuIds The path to use for the new KService</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::serviceByDesktopName</field>
    <field name="args">(const QString &amp;_name)</field>
    <field name="url">classKService.html#a6261ba7fcb0954a985fdba31dc6b6cf7</field>
    <field name="keywords">serviceByDesktopName KService::serviceByDesktopName KService</field>
    <field name="text">For instance or Note that the extension is implicit This is the recommended method safe even if the user moves stuff but note that it assumes that no two entries have the same filename _name the name of the configuration file a pointer to the requested service or 0 if the service is unknown Very important Don t store the result in a KService*</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::serviceByDesktopPath</field>
    <field name="args">(const QString &amp;_path)</field>
    <field name="url">classKService.html#aec0c50b72ff1b356a2fba1e0c4855967</field>
    <field name="keywords">serviceByDesktopPath KService::serviceByDesktopPath KService</field>
    <field name="text">It s usually better to use serviceByStorageId() instead _path the path of the configuration file a pointer to the requested service or 0 if the service is unknown Very important Don t store the result in a KService*</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::serviceByMenuId</field>
    <field name="args">(const QString &amp;_menuId)</field>
    <field name="url">classKService.html#ad07451b574cbd89a315ed3e38a064aa9</field>
    <field name="keywords">serviceByMenuId KService::serviceByMenuId KService</field>
    <field name="text">_menuId the menu id of the service a pointer to the requested service or 0 if the service is unknown Very important Don t store the result in a KService*</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KService::serviceByStorageId</field>
    <field name="args">(const QString &amp;_storageId)</field>
    <field name="url">classKService.html#a18103ccedb6d50a2148af738ca78c721</field>
    <field name="keywords">serviceByStorageId KService::serviceByStorageId KService</field>
    <field name="text">This function will try very hard to find a matching service _storageId the storage id or desktop-file path of the service a pointer to the requested service or 0 if the service is unknown Very important Don t store the result in a KService*</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KSycocaEntry::KSycocaType</field>
    <field name="url">classKSycocaEntry.html#a8d7866d3d103bc78626732de5abed81e</field>
    <field name="keywords">KSycocaType KSycocaEntry::KSycocaType KSycocaEntry KSycocaType KSycocaEntry::KSycocaType KSycocaEntry KSycocaType KSycocaEntry::KSycocaType KSycocaEntry KSycocaType KSycocaEntry::KSycocaType KSycocaEntry</field>
    <field name="text">A KSycocaType is a code out of the KSycocaType enum assigned to each class type derived from KSycocaEntry To use it call the macro K_SYCOCATYPE( your_typecode, parent_class ) at the top of your class definition</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KServiceAction</field>
    <field name="url">classKServiceAction.html</field>
    <field name="keywords">KServiceAction</field>
    <field name="text">KService::actions</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceAction::KServiceAction</field>
    <field name="args">(const QString &amp;name, const QString &amp;text, const QString &amp;icon, const QString &amp;exec, bool noDisplay=false)</field>
    <field name="url">classKServiceAction.html#a391a44303e194bea7cb14de085649702</field>
    <field name="keywords">KServiceAction KServiceAction::KServiceAction KServiceAction</field>
    <field name="text">Normally you don t have to do this KService creates the actions when parsing the desktop file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceAction::KServiceAction</field>
    <field name="args">()</field>
    <field name="url">classKServiceAction.html#a464644a98ce5e7b7869efd2f0cd06b5d</field>
    <field name="keywords">KServiceAction KServiceAction::KServiceAction KServiceAction</field>
    <field name="text">Needed for operator</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceAction::KServiceAction</field>
    <field name="args">(const KServiceAction &amp;other)</field>
    <field name="url">classKServiceAction.html#ae8b8799c9f85f8ed762e8d2a7f009d35</field>
    <field name="keywords">KServiceAction KServiceAction::KServiceAction KServiceAction</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceAction::~KServiceAction</field>
    <field name="args">()</field>
    <field name="url">classKServiceAction.html#a8ead7660b2844d4f03ef5301090c88c9</field>
    <field name="keywords">KServiceAction::~KServiceAction KServiceAction</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceAction::data</field>
    <field name="args">() const</field>
    <field name="url">classKServiceAction.html#acb963c839e5aa44baa0e67d70aee0ef9</field>
    <field name="keywords">data KServiceAction::data KServiceAction</field>
    <field name="text">the action s internal data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceAction::exec</field>
    <field name="args">() const</field>
    <field name="url">classKServiceAction.html#a73a2f64dcc266290b7510f5f5a846ace</field>
    <field name="keywords">exec KServiceAction::exec KServiceAction</field>
    <field name="text">the action s exec command as defined by the Exec key in the desktop action group</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceAction::icon</field>
    <field name="args">() const</field>
    <field name="url">classKServiceAction.html#aaaeb3432ff030c989b67f2b02a3e2a79</field>
    <field name="keywords">icon KServiceAction::icon KServiceAction</field>
    <field name="text">the action s icon as defined by the Icon key in the desktop action group</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceAction::isSeparator</field>
    <field name="args">() const</field>
    <field name="url">classKServiceAction.html#a5bcb10621b0f0c2a47063351e0c97a53</field>
    <field name="keywords">isSeparator KServiceAction::isSeparator KServiceAction</field>
    <field name="text">This is true when the Actions key contains</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceAction::name</field>
    <field name="args">() const</field>
    <field name="url">classKServiceAction.html#a522d2c46798729df69b976881e0fc763</field>
    <field name="keywords">name KServiceAction::name KServiceAction</field>
    <field name="text">the action s internal name For instance Actions Setup and the group Desktop Action Setup define an action with the name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceAction::noDisplay</field>
    <field name="args">() const</field>
    <field name="url">classKServiceAction.html#ad8a6ed54b53a2ba65c86e6e13eaee467</field>
    <field name="keywords">noDisplay KServiceAction::noDisplay KServiceAction</field>
    <field name="text">This is useful for having actions with a known name that the code looks for explicitly like Setup and Root for kscreensaver actions and which should not appear in popup menus true to suppress this service</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceAction::operator=</field>
    <field name="args">(const KServiceAction &amp;other)</field>
    <field name="url">classKServiceAction.html#a5475dac23bf0595172698613b96d36b3</field>
    <field name="keywords">operator= KServiceAction::operator= KServiceAction</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceAction::setData</field>
    <field name="args">(const QVariant &amp;userData)</field>
    <field name="url">classKServiceAction.html#acd5bd26ea009c04720b0fb65d5f79990</field>
    <field name="keywords">setData KServiceAction::setData KServiceAction</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceAction::text</field>
    <field name="args">() const</field>
    <field name="url">classKServiceAction.html#a2606ad4002d66f77df08b0dc45cffcbc</field>
    <field name="keywords">text KServiceAction::text KServiceAction</field>
    <field name="text">the action s text as defined by the Name key in the desktop action group</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KServiceGroup</field>
    <field name="url">classKServiceGroup.html</field>
    <field name="keywords">KServiceGroup</field>
    <field name="text">This class is typically used like this Represents a group of services</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KServiceGroup::EntriesOption</field>
    <field name="url">classKServiceGroup.html#a353eb95e9c765011b878f725152ddd61</field>
    <field name="keywords">EntriesOption KServiceGroup::EntriesOption KServiceGroup</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::KServiceGroup</field>
    <field name="args">(const QString &amp;name)</field>
    <field name="url">classKServiceGroup.html#aa8c35fdbaf9bed3da282e7719f1c2a48</field>
    <field name="keywords">KServiceGroup KServiceGroup::KServiceGroup KServiceGroup</field>
    <field name="text">name the name of the service group</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::KServiceGroup</field>
    <field name="args">(const QString &amp;_fullpath, const QString &amp;_relpath)</field>
    <field name="url">classKServiceGroup.html#a4afbe0ca4bdee578e1397ab448f496c1</field>
    <field name="keywords">KServiceGroup KServiceGroup::KServiceGroup KServiceGroup</field>
    <field name="text">_fullpath full path to the config file _relpath relative path to the config file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::allowInline</field>
    <field name="args">() const</field>
    <field name="url">classKServiceGroup.html#a9e135302533265025d7e6ef807d8033f</field>
    <field name="keywords">allowInline KServiceGroup::allowInline KServiceGroup</field>
    <field name="text">true if we allow to inline menu</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::baseGroupName</field>
    <field name="args">() const</field>
    <field name="url">classKServiceGroup.html#ab54c4ba1787f8e05af1d1a31ad517eb1</field>
    <field name="keywords">baseGroupName KServiceGroup::baseGroupName KServiceGroup</field>
    <field name="text">By default is the kcontrol base group and is the screensavers base group This allows moving the groups without breaking those apps The base group is defined by the X-KDE-BaseGroup key in the directory file the base group name or null if no base group</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::caption</field>
    <field name="args">() const</field>
    <field name="url">classKServiceGroup.html#abd2fc42c31919c2f4c156730f3249f41</field>
    <field name="keywords">caption KServiceGroup::caption KServiceGroup</field>
    <field name="text">the caption of this group</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::childCount</field>
    <field name="args">() const</field>
    <field name="url">classKServiceGroup.html#a299819cfb1c319f5cf5605ca3d8de082</field>
    <field name="keywords">childCount KServiceGroup::childCount KServiceGroup</field>
    <field name="text">the number of child services</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::comment</field>
    <field name="args">() const</field>
    <field name="url">classKServiceGroup.html#a1e345bca464a0d8cc6be246bf55e827d</field>
    <field name="keywords">comment KServiceGroup::comment KServiceGroup</field>
    <field name="text">the descriptive comment for the group if there is one or QString() if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::directoryEntryPath</field>
    <field name="args">() const</field>
    <field name="url">classKServiceGroup.html#a7e0315bd3f803785e9e08a3d4a16551c</field>
    <field name="keywords">directoryEntryPath KServiceGroup::directoryEntryPath KServiceGroup</field>
    <field name="text">The path is either absolute or relative to the resource</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::entries</field>
    <field name="args">(bool sorted, bool excludeNoDisplay, bool allowSeparators, bool sortByGenericName=false)</field>
    <field name="url">classKServiceGroup.html#a53c3ee84bbeeb4b52effb50af9b13e78</field>
    <field name="keywords">entries KServiceGroup::entries KServiceGroup</field>
    <field name="text">sorted true to sort items excludeNoDisplay true to exclude items marked allowSeparators true to allow separator items to be included sortByGenericName true to sort GenericName+Name instead of Name+GenericName the list of entries</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::entries</field>
    <field name="args">(bool sorted=false)</field>
    <field name="url">classKServiceGroup.html#a78a65875af07f209221912b6c8c56c5b</field>
    <field name="keywords">entries KServiceGroup::entries KServiceGroup</field>
    <field name="text">sorted true to sort items the list of entried</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::groupEntries</field>
    <field name="args">(EntriesOptions options=ExcludeNoDisplay)</field>
    <field name="url">classKServiceGroup.html#a84fbc01ae305b700ce2360b2182f2476</field>
    <field name="keywords">groupEntries KServiceGroup::groupEntries KServiceGroup</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::icon</field>
    <field name="args">() const</field>
    <field name="url">classKServiceGroup.html#aa10d4023401b230a5a225fe4cb0d43a4</field>
    <field name="keywords">icon KServiceGroup::icon KServiceGroup</field>
    <field name="text">the name of the icon associated with the group or QString() if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::inlineAlias</field>
    <field name="args">() const</field>
    <field name="url">classKServiceGroup.html#a66aae636c15539cf29c9c865b809479e</field>
    <field name="keywords">inlineAlias KServiceGroup::inlineAlias KServiceGroup</field>
    <field name="text">true to show an inline alias item into menu</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::inlineValue</field>
    <field name="args">() const</field>
    <field name="url">classKServiceGroup.html#adec0bbe2030016f739abdf9c706d3a90</field>
    <field name="keywords">inlineValue KServiceGroup::inlineValue KServiceGroup</field>
    <field name="text">inline limite value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::layoutInfo</field>
    <field name="args">() const</field>
    <field name="url">classKServiceGroup.html#a567aa69be9527394aca2fd5fff6bd716</field>
    <field name="keywords">layoutInfo KServiceGroup::layoutInfo KServiceGroup</field>
    <field name="text">Returns information related to the layout of services in this group</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::noDisplay</field>
    <field name="args">() const</field>
    <field name="url">classKServiceGroup.html#a699192f67a0c0fab4c754aa1b299fd9a</field>
    <field name="keywords">noDisplay KServiceGroup::noDisplay KServiceGroup</field>
    <field name="text">if this group should be hidden from menus while still being in ksycoca true to hide this service group false to display it</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::relPath</field>
    <field name="args">() const</field>
    <field name="url">classKServiceGroup.html#a43bafb47424325de346e96789ae74517</field>
    <field name="keywords">relPath KServiceGroup::relPath KServiceGroup</field>
    <field name="text">the service group s relative path</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::serviceEntries</field>
    <field name="args">(EntriesOptions options=ExcludeNoDisplay)</field>
    <field name="url">classKServiceGroup.html#a7607c43c9ec641b45c41df20684550b5</field>
    <field name="keywords">serviceEntries KServiceGroup::serviceEntries KServiceGroup</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::setLayoutInfo</field>
    <field name="args">(const QStringList &amp;layout)</field>
    <field name="url">classKServiceGroup.html#a0d4b6693d371909b46853d2123287ab0</field>
    <field name="keywords">setLayoutInfo KServiceGroup::setLayoutInfo KServiceGroup</field>
    <field name="text">Sets information related to the layout of services in this group</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::showEmptyMenu</field>
    <field name="args">() const</field>
    <field name="url">classKServiceGroup.html#a9a87a88a51cc62c833c141450025509e</field>
    <field name="keywords">showEmptyMenu KServiceGroup::showEmptyMenu KServiceGroup</field>
    <field name="text">true to show this service group as menu entry is empty false to hide it</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::showInlineHeader</field>
    <field name="args">() const</field>
    <field name="url">classKServiceGroup.html#a95ba636215b7eed1aed8771a05d6acff</field>
    <field name="keywords">showInlineHeader KServiceGroup::showInlineHeader KServiceGroup</field>
    <field name="text">true to show an inline header into menu</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::suppressGenericNames</field>
    <field name="args">() const</field>
    <field name="url">classKServiceGroup.html#a0d50ba9f5d9088b88388e2fedca4d40a</field>
    <field name="keywords">suppressGenericNames KServiceGroup::suppressGenericNames KServiceGroup</field>
    <field name="text">E.g The group might want to suppress the generic name since it s redundant in this particular context</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::childGroup</field>
    <field name="args">(const QString &amp;parent)</field>
    <field name="url">classKServiceGroup.html#a496c863535654d966a8cc264807cdbc7</field>
    <field name="keywords">childGroup KServiceGroup::childGroup KServiceGroup</field>
    <field name="text">parent the name of the service s parent the services group</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::group</field>
    <field name="args">(const QString &amp;relPath)</field>
    <field name="url">classKServiceGroup.html#a467aa6329a262f56c9b834bc444d53cc</field>
    <field name="keywords">group KServiceGroup::group KServiceGroup</field>
    <field name="text">relPath the path of the service group the group with the given relative path name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::root</field>
    <field name="args">()</field>
    <field name="url">classKServiceGroup.html#a15af7f321c6daae6e1ec9fe054b86870</field>
    <field name="keywords">root KServiceGroup::root KServiceGroup</field>
    <field name="text">the root service group</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceGroup::addEntry</field>
    <field name="args">(const KSycocaEntry::Ptr &amp;entry)</field>
    <field name="url">classKServiceGroup.html#ae69e711f3692bf56fa3ed4425a5aa836</field>
    <field name="keywords">addEntry KServiceGroup::addEntry KServiceGroup</field>
    <field name="text">Add a service to this group</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KServiceOffer</field>
    <field name="url">classKServiceOffer.html</field>
    <field name="keywords">KServiceOffer</field>
    <field name="text">This class holds the user-specific preferences of a service whether it can be a default offer or not how big is the preference for this offer Basically it is a reference to a KService a number that represents the user s preference bigger is better and a flag whether the KService can be used as default KService</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceOffer::KServiceOffer</field>
    <field name="args">()</field>
    <field name="url">classKServiceOffer.html#ab6cbeb4a8b3b05e26a7ac159c33f1a3b</field>
    <field name="keywords">KServiceOffer KServiceOffer::KServiceOffer KServiceOffer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceOffer::KServiceOffer</field>
    <field name="args">(const KServiceOffer &amp;)</field>
    <field name="url">classKServiceOffer.html#a507acda1e706a54768b37b2295ab8202</field>
    <field name="keywords">KServiceOffer KServiceOffer::KServiceOffer KServiceOffer</field>
    <field name="text">Shallow copy the KService will not be copied</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceOffer::KServiceOffer</field>
    <field name="args">(const KService::Ptr &amp;service, int pref, int mimeTypeInheritanceLevel, bool allowedAsDefault)</field>
    <field name="url">classKServiceOffer.html#a550ffc6a74e30c8f61d456a6e4c8e738</field>
    <field name="keywords">KServiceOffer KServiceOffer::KServiceOffer KServiceOffer</field>
    <field name="text">service a pointer to the KService pref the user s preference value must be positive bigger is better mimeTypeInheritanceLevel level of mimetype inheritance which allows this service to handling the mimetype 0 if no inheritance involved 1 for parent mimetype etc allowedAsDefault true if the service should be used as default</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceOffer::allowAsDefault</field>
    <field name="args">() const</field>
    <field name="url">classKServiceOffer.html#a14b96dedadeee395e312ac2c9ddd0027</field>
    <field name="keywords">allowAsDefault KServiceOffer::allowAsDefault KServiceOffer</field>
    <field name="text">Left Click in a file manager or KRun in general true if the service is a allowed as default</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceOffer::isValid</field>
    <field name="args">() const</field>
    <field name="url">classKServiceOffer.html#a62c7fd553d64d456ae3a04c2b97b485b</field>
    <field name="keywords">isValid KServiceOffer::isValid KServiceOffer</field>
    <field name="text">A service is valid if its preference value is positive true if the service offer is valid</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceOffer::mimeTypeInheritanceLevel</field>
    <field name="args">() const</field>
    <field name="url">classKServiceOffer.html#a09240e965895ca3419228f3e005a1bdc</field>
    <field name="keywords">mimeTypeInheritanceLevel KServiceOffer::mimeTypeInheritanceLevel KServiceOffer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceOffer::operator&lt;</field>
    <field name="args">(const KServiceOffer &amp;) const</field>
    <field name="url">classKServiceOffer.html#a5b0c65024b33446b974465c0fe66879b</field>
    <field name="keywords">operator&lt; KServiceOffer::operator&lt; KServiceOffer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceOffer::operator=</field>
    <field name="args">(const KServiceOffer &amp;other)</field>
    <field name="url">classKServiceOffer.html#a4d7ed2bd5da92d5fc64b3b07f9ab307d</field>
    <field name="keywords">operator= KServiceOffer::operator= KServiceOffer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceOffer::preference</field>
    <field name="args">() const</field>
    <field name="url">classKServiceOffer.html#ab92f41e90bfce9dfa711750d8125be21</field>
    <field name="keywords">preference KServiceOffer::preference KServiceOffer</field>
    <field name="text">the preference number negative numbers will be returned by invalid service offers</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceOffer::service</field>
    <field name="args">() const</field>
    <field name="url">classKServiceOffer.html#abadcf3501e56320463a1ec6defff933f</field>
    <field name="keywords">service KServiceOffer::service KServiceOffer</field>
    <field name="text">the service this offer is about can be 0 in valid offers or when not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceOffer::setMimeTypeInheritanceLevel</field>
    <field name="args">(int level)</field>
    <field name="url">classKServiceOffer.html#a4d21c872c1a3b419cdfb095143e766d0</field>
    <field name="keywords">setMimeTypeInheritanceLevel KServiceOffer::setMimeTypeInheritanceLevel KServiceOffer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceOffer::setPreference</field>
    <field name="args">(int p)</field>
    <field name="url">classKServiceOffer.html#a49890df3f0e95917b6d5996bb269727c</field>
    <field name="keywords">setPreference KServiceOffer::setPreference KServiceOffer</field>
    <field name="text">Set the preference number only for KMimeTypeTrader</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KServiceType</field>
    <field name="url">classKServiceType.html</field>
    <field name="keywords">KServiceType</field>
    <field name="text">For instance which is the type of all koffice filters is a service type In order to discover services of a given type using KServiceTypeTrader Service types are stored as desktop files in KService KServiceTypeTrader</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceType::KServiceType</field>
    <field name="args">(KDesktopFile *config)</field>
    <field name="url">classKServiceType.html#a5e2c4103211595c5e6bd8e7de9905f77</field>
    <field name="keywords">KServiceType KServiceType::KServiceType KServiceType</field>
    <field name="text">config the configuration file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceType::comment</field>
    <field name="args">() const</field>
    <field name="url">classKServiceType.html#ad6e8a1178ca82a77d013d64842883d08</field>
    <field name="keywords">comment KServiceType::comment KServiceType</field>
    <field name="text">the comment or QString()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceType::inherits</field>
    <field name="args">(const QString &amp;servTypeName) const</field>
    <field name="url">classKServiceType.html#a2cb6414c67bb92faa6937276fee54a1d</field>
    <field name="keywords">inherits KServiceType::inherits KServiceType</field>
    <field name="text">true if this servicetype is or inherits from servTypeName</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceType::isDerived</field>
    <field name="args">() const</field>
    <field name="url">classKServiceType.html#a24d829365269c0f272c91d2e119f733f</field>
    <field name="keywords">isDerived KServiceType::isDerived KServiceType</field>
    <field name="text">true if this service type inherits another one parentServiceType()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceType::parentServiceType</field>
    <field name="args">() const</field>
    <field name="url">classKServiceType.html#a228bf392086f328de39a51cd2e669c42</field>
    <field name="keywords">parentServiceType KServiceType::parentServiceType KServiceType</field>
    <field name="text">the parent service type or QString null if not set isDerived()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceType::parentType</field>
    <field name="args">()</field>
    <field name="url">classKServiceType.html#aa5825091d40517e7e7d7b1456d2a1841</field>
    <field name="keywords">parentType KServiceType::parentType KServiceType</field>
    <field name="text">Pointer to parent service type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceType::propertyDef</field>
    <field name="args">(const QString &amp;_name) const</field>
    <field name="url">classKServiceType.html#a56408bda283e010c8afd4874e7a25df8</field>
    <field name="keywords">propertyDef KServiceType::propertyDef KServiceType</field>
    <field name="text">_name the name of the property the property type or null if not found propertyDefNames</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceType::propertyDefNames</field>
    <field name="args">() const</field>
    <field name="url">classKServiceType.html#a326e1487d960b768f7a00168303a0e1d</field>
    <field name="keywords">propertyDefNames KServiceType::propertyDefNames KServiceType</field>
    <field name="text">Those are properties of the services implementing this servicetype For instance means that all kdevelop plugins have in their desktop file a line like</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceType::propertyDefs</field>
    <field name="args">() const</field>
    <field name="url">classKServiceType.html#a45c8e8a9bf905820e6756c17ea18b631</field>
    <field name="keywords">propertyDefs KServiceType::propertyDefs KServiceType</field>
    <field name="text">for KBuildServiceTypeFactory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceType::serviceOffersOffset</field>
    <field name="args">() const</field>
    <field name="url">classKServiceType.html#a9468a81a19d3984bcd2151b70dbb2724</field>
    <field name="keywords">serviceOffersOffset KServiceType::serviceOffersOffset KServiceType</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceType::setServiceOffersOffset</field>
    <field name="args">(int offset)</field>
    <field name="url">classKServiceType.html#af501ae7b7f95844887fe9e6a709a515d</field>
    <field name="keywords">setServiceOffersOffset KServiceType::setServiceOffersOffset KServiceType</field>
    <field name="text">only used by kbuildsycoca Register offset into offers list</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceType::allServiceTypes</field>
    <field name="args">()</field>
    <field name="url">classKServiceType.html#a1b12478f9d3c657902d5b3bb5db044f5</field>
    <field name="keywords">allServiceTypes KServiceType::allServiceTypes KServiceType</field>
    <field name="text">Useful for showing the list of available servicetypes in a listbox for example More memory consuming than the ones above don t use unless really necessary the list of all services</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceType::serviceType</field>
    <field name="args">(const QString &amp;_name)</field>
    <field name="url">classKServiceType.html#acdcbdb4e036d2b49432db9c71591860c</field>
    <field name="keywords">serviceType KServiceType::serviceType KServiceType</field>
    <field name="text">VERY IMPORTANT don t store the result in a KServiceType _name the name of the service type to search the pointer to the service type or 0</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KServiceTypeTrader</field>
    <field name="url">classKServiceTypeTrader.html</field>
    <field name="keywords">KServiceTypeTrader</field>
    <field name="text">Basically KServiceTypeTrader provides a way for an application to query all KDE services that is applications components plugins that match a specific set of requirements This allows to find specific services at run-time without having to hard-code their names and/or paths For anything relating to mimetypes type of files ignore KServiceTypeTrader and use KMimeTypeTrader instead Example If you want to find all plugins for your application you would define a KMyApp/Plugin servicetype and then you can query the trader for it You can add a constraint in the For instance Please note that when including property names containing arithmetic operators like or then you have to put brackets around the property name in order to correctly separate arithmetic operations from the name So for example a constraint expression like needs to be written as otherwise it could also be interpreted as Subtract the numeric value of the property and from the property and make sure it is greater than 4 Instead of the other meaning make sure that the numeric value of is greater than 4 KMimeTypeTrader KService</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceTypeTrader::~KServiceTypeTrader</field>
    <field name="args">()</field>
    <field name="url">classKServiceTypeTrader.html#a70973235787ca10b98c55f05cea142f2</field>
    <field name="keywords">KServiceTypeTrader::~KServiceTypeTrader KServiceTypeTrader</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceTypeTrader::defaultOffers</field>
    <field name="args">(const QString &amp;serviceType, const QString &amp;constraint=QString()) const</field>
    <field name="url">classKServiceTypeTrader.html#a58b58abad9cf71eb5a36955ad23f7110</field>
    <field name="keywords">defaultOffers KServiceTypeTrader::defaultOffers KServiceTypeTrader</field>
    <field name="text">The sorting will be the one coming from the InitialPreference in the desktop files and services disabled by the user will still be listed here This is used for buttons in GUIs</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceTypeTrader::preferredService</field>
    <field name="args">(const QString &amp;serviceType) const</field>
    <field name="url">classKServiceTypeTrader.html#a4b69ec32ec4b72fee16e07ce9b5a3bdd</field>
    <field name="keywords">preferredService KServiceTypeTrader::preferredService KServiceTypeTrader</field>
    <field name="text">serviceType the service type e.g the preferred service or 0 if no service is available</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceTypeTrader::query</field>
    <field name="args">(const QString &amp;servicetype, const QString &amp;constraint=QString()) const</field>
    <field name="url">classKServiceTypeTrader.html#ae19621269e9dee8814b3e1c1573b6333</field>
    <field name="keywords">query KServiceTypeTrader::query KServiceTypeTrader</field>
    <field name="text">It will return a list of services that match your specifications The only required parameter is the service type This is something like text/plain or text/html The constraint parameter is used to limit the possible choices returned based on the constraints you give it The constraint language is rather full The most common keywords are AND OR NOT IN and EXIST all used in an almost spoken-word form An example is The keys used in the query Type ServiceType Exec are all fields found in the desktop files servicetype A service type like KMyApp/Plugin or KFilePlugin constraint A constraint to limit the choices returned QString() to get all services of the given servicetype A list of services that satisfy the query</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceTypeTrader::applyConstraints</field>
    <field name="args">(KService::List &amp;lst, const QString &amp;constraint)</field>
    <field name="url">classKServiceTypeTrader.html#a230009b23e071259ca6e656cbaf555da</field>
    <field name="keywords">applyConstraints KServiceTypeTrader::applyConstraints KServiceTypeTrader</field>
    <field name="text">public for KMimeTypeTrader</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceTypeTrader::createInstanceFromQuery</field>
    <field name="args">(const QString &amp;serviceType, const QString &amp;constraint=QString(), QObject *parent=0, const QVariantList &amp;args=QVariantList(), QString *error=0)</field>
    <field name="url">classKServiceTypeTrader.html#a5365b1ac89923692060779c9b165d3c0</field>
    <field name="keywords">createInstanceFromQuery KServiceTypeTrader::createInstanceFromQuery KServiceTypeTrader</field>
    <field name="text">Example serviceType the type of service for which to find a plugin constraint an optional constraint to pass to the trader see KTrader parent the parent object for the part itself args A list of arguments passed to the service component error The string passed here will contain an error description A pointer to the newly created object or a null pointer if the factory was unable to create an object of the given type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceTypeTrader::createInstanceFromQuery</field>
    <field name="args">(const QString &amp;serviceType, QWidget *parentWidget, QObject *parent, const QString &amp;constraint=QString(), const QVariantList &amp;args=QVariantList(), QString *error=0)</field>
    <field name="url">classKServiceTypeTrader.html#ad1ae0f400f321156a59cd6b60c94cb8f</field>
    <field name="keywords">createInstanceFromQuery KServiceTypeTrader::createInstanceFromQuery KServiceTypeTrader</field>
    <field name="text">This method works like createInstanceFromQuery(const QString&amp;, const QString&amp;, QObject*, const QVariantList&amp;, QString*) but you can specify an additional parent widget This is important for a KPart for example serviceType the type of service for which to find a plugin parentWidget the parent widget for the plugin parent the parent object for the part itself constraint an optional constraint to pass to the trader see KTrader args A list of arguments passed to the service component error The string passed here will contain an error description A pointer to the newly created object or a null pointer if the factory was unable to create an object of the given type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceTypeTrader::self</field>
    <field name="args">()</field>
    <field name="url">classKServiceTypeTrader.html#a68ee4d96ac56671d763f1525b178a38c</field>
    <field name="keywords">self KServiceTypeTrader::self KServiceTypeTrader</field>
    <field name="text">You will need to use this to access the KServiceTypeTrader functionality since the constructors are protected Static KServiceTypeTrader instance</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KSycoca</field>
    <field name="url">classKSycoca.html</field>
    <field name="keywords">KSycoca</field>
    <field name="text">Read-only SYstem COnfiguration CAche</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KSycoca::DatabaseType</field>
    <field name="url">classKSycoca.html#ae1bd6d33a803e229b3aaf2d9f8e63fb5</field>
    <field name="keywords">DatabaseType KSycoca::DatabaseType KSycoca</field>
    <field name="text">absoluteFilePath()</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KSycoca::databaseChanged</field>
    <field name="args">()</field>
    <field name="url">classKSycoca.html#ae8bb003b63251a73a3c9f126e2aa184a</field>
    <field name="keywords">databaseChanged KSycoca::databaseChanged KSycoca</field>
    <field name="text">Example after creating a desktop file in KOpenWithDialog it must wait until kbuildsycoca5 finishes until the KService::Ptr is available Other examples anything that displays a list of apps or plugins to the user and which is always visible otherwise querying sycoca before showing could be enough</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KSycoca::databaseChanged</field>
    <field name="args">(const QStringList &amp;changedResources)</field>
    <field name="url">classKSycoca.html#a2f5f1f911b215b461c0b5991e6d24a2a</field>
    <field name="keywords">databaseChanged KSycoca::databaseChanged KSycoca</field>
    <field name="text">Another example after creating a desktop file in KOpenWithDialog it must wait until kbuildsycoca5 finishes until the KService::Ptr is available changedResources List of resources where changes were detected This can include the following resources as defined in KStandardDirs apps xdgdata-apps services servicetypes xdgdata-mime</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::KSycoca</field>
    <field name="args">()</field>
    <field name="url">classKSycoca.html#a68829170aff3395a827d4b879d75cd46</field>
    <field name="keywords">KSycoca KSycoca::KSycoca KSycoca</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::addFactory</field>
    <field name="args">(KSycocaFactory *)</field>
    <field name="url">classKSycoca.html#a9c272f63b6942b484bcb780962650d36</field>
    <field name="keywords">addFactory KSycoca::addFactory KSycoca</field>
    <field name="text">add a factory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::allResourceDirs</field>
    <field name="args">()</field>
    <field name="url">classKSycoca.html#a044141a1b252bbf1c567c8a79755fb79</field>
    <field name="keywords">allResourceDirs KSycoca::allResourceDirs KSycoca</field>
    <field name="text">returns all directories with information stored inside sycoca</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::ensureCacheValid</field>
    <field name="args">()</field>
    <field name="url">classKSycoca.html#af7c385f9cd96bcc8bd747d78250ec93a</field>
    <field name="keywords">ensureCacheValid KSycoca::ensureCacheValid KSycoca</field>
    <field name="text">If the database was modified by another process close it so the next use reopens it If the desktop files have been modified more recently than the database update it Update the sycoca file from the files on disk e.g desktop files or mimeapps.list You don t normally have to call this because the next use of KSycoca e.g via KMimeTypeTrader KService etc will notice that the sycoca database is out of date by looking a directory modification times In addition in a full KDE session kded monitors directories to detect changes This is however useful for GUIs that allow to create a new desktop file and then want to ensure it is available immediately in KSycoca This is also useful after modifying a mimeapps.list file KBuildSycocaProgressDialog can also be used instead of this method in GUI apps 5.15</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::findEntry</field>
    <field name="args">(int offset, KSycocaType &amp;type)</field>
    <field name="url">classKSycoca.html#a75d5a2963ac92164bec49312025a28a5</field>
    <field name="keywords">findEntry KSycoca::findEntry KSycoca</field>
    <field name="text">called by factories in read-only mode This is how factories get a stream to an entry</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::findFactory</field>
    <field name="args">(KSycocaFactoryId id)</field>
    <field name="url">classKSycoca.html#a7d9063ed9bc39cc3048dd55beabe3d6e</field>
    <field name="keywords">findFactory KSycoca::findFactory KSycoca</field>
    <field name="text">called by factories in read-only mode Returns stream() but positioned for reading this factory 0 on error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::isBuilding</field>
    <field name="args">()</field>
    <field name="url">classKSycoca.html#a64f1db5717cb6405b97a3603365a4e58</field>
    <field name="keywords">isBuilding KSycoca::isBuilding KSycoca</field>
    <field name="text">true if building i.e if a KBuildSycoca</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::language</field>
    <field name="args">()</field>
    <field name="url">classKSycoca.html#a11a087297d1688850f9d5abfb3992c4e</field>
    <field name="keywords">language KSycoca::language KSycoca</field>
    <field name="text">returns language stored inside database</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::timeStamp</field>
    <field name="args">()</field>
    <field name="url">classKSycoca.html#a0140aeb8c4771b5cf786472385d1e05b</field>
    <field name="keywords">timeStamp KSycoca::timeStamp KSycoca</field>
    <field name="text">returns timestamp of database The database contains all changes made before this time and might contain changes made after that</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::updateSignature</field>
    <field name="args">()</field>
    <field name="url">classKSycoca.html#a55e154170e2e221479a1b5e8a144be87</field>
    <field name="keywords">updateSignature KSycoca::updateSignature KSycoca</field>
    <field name="text">returns update signature of database Signature that keeps track of changes to Touching this file causes the database to be recreated from scratch</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::absoluteFilePath</field>
    <field name="args">(DatabaseType type=LocalDatabase)</field>
    <field name="url">classKSycoca.html#ad6d1393887e2e42c905b92b3f7f2c0e0</field>
    <field name="keywords">absoluteFilePath KSycoca::absoluteFilePath KSycoca</field>
    <field name="text">returns absolute file path of the database For the global database type the database is searched under the share/ksycoca install path Otherwise the value from the environment variable KDESYCOCA is returned if set If not set the path is built based on QStandardPaths cache save location typically cache on Unix Since 5.15 the filename includes language and a sha1 of the directories in GenericDataLocation i.e the directories with the desktop files This allows to have one database per setup when using different install prefixes or when switching languages</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::disableAutoRebuild</field>
    <field name="args">()</field>
    <field name="url">classKSycoca.html#af1b69ada52521c26f5c2717828e23f02</field>
    <field name="keywords">disableAutoRebuild KSycoca::disableAutoRebuild KSycoca</field>
    <field name="text">disables launching of kbuildsycoca since 5.15 it only outputs a warning</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::flagError</field>
    <field name="args">()</field>
    <field name="url">classKSycoca.html#aa541200cf521c85d770b0e840d0b96f6</field>
    <field name="keywords">flagError KSycoca::flagError KSycoca</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::isAvailable</field>
    <field name="args">()</field>
    <field name="url">classKSycoca.html#a77faf824bc48efbb1d913b8ba031b479</field>
    <field name="keywords">isAvailable KSycoca::isAvailable KSycoca</field>
    <field name="text">true if the ksycoca database is available This is usually the case except if KDE isn t installed yet or before kded is started</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::isChanged</field>
    <field name="args">(const char *type)</field>
    <field name="url">classKSycoca.html#a060d1b0f2da2c58ffc0280a2a1f862ea</field>
    <field name="keywords">isChanged KSycoca::isChanged KSycoca</field>
    <field name="text">KStandardDirs for the various resource types This method is meant to be called from the GUI thread only use the signal databaseChanged(QStringList) instead</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::self</field>
    <field name="args">()</field>
    <field name="url">classKSycoca.html#a3f3686ce2ff31b851ac1a08d7c3e1547</field>
    <field name="keywords">self KSycoca::self KSycoca</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::version</field>
    <field name="args">()</field>
    <field name="url">classKSycoca.html#a29fac48ab243076cc3c7744b5a54ab8b</field>
    <field name="keywords">version KSycoca::version KSycoca</field>
    <field name="text">the compiled-in version i.e the one used when writing a new ksycoca</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSycoca::KSycoca</field>
    <field name="args">(bool)</field>
    <field name="url">classKSycoca.html#aeac39f63ee8c2d7462315a55c5398024</field>
    <field name="keywords">KSycoca KSycoca::KSycoca KSycoca</field>
    <field name="text">Building database</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KSycocaEntry</field>
    <field name="url">classKSycocaEntry.html</field>
    <field name="keywords">KSycocaEntry</field>
    <field name="text">You can t create an instance of KSycocaEntry but it provides the common functionality for servicetypes and services</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KToolInvocation</field>
    <field name="url">classKToolInvocation.html</field>
    <field name="keywords">KToolInvocation</field>
    <field name="text">The way a service gets started depends on the X-DBUS-StartupType entry in the desktop file of the service There are three possibilities X-DBUS-StartupType None default Always start a new service don t wait till the service registers with D-Bus X-DBUS-StartupType Multi Always start a new service wait until the service has registered with D-Bus X-DBUS-StartupType Unique Only start the service if it isn t already running wait until the service has registered with D-Bus The desktop file can specify the name that the application will use when registering using X-DBUS-ServiceName org.domain.mykapp Otherwise org.kde.binaryname is assumed The static members apart from self() have to be called from the QApplication main thread Calls to members are only allowed if there is a Q(Core) Application object created If you call the members with signal/slot connections across threads you can t use the return values If a function is called from the wrong thread and it has a return value is returned Investigate if this is really needed or if D-Bus is threadsafe anyway For more details see techbase</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KToolInvocation::kapplication_hook</field>
    <field name="args">(QStringList &amp;env, QByteArray &amp;startup_id)</field>
    <field name="url">classKToolInvocation.html#a567667733c2b9c2b5db7c0e422f57940</field>
    <field name="keywords">kapplication_hook KToolInvocation::kapplication_hook KToolInvocation</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KToolInvocation::invokeBrowser</field>
    <field name="args">(const QString &amp;url, const QByteArray &amp;startup_id=QByteArray())</field>
    <field name="url">classKToolInvocation.html#ade3fd8ddb1f3c2c4b48c435399769eb2</field>
    <field name="keywords">invokeBrowser KToolInvocation::invokeBrowser KToolInvocation</field>
    <field name="text">Note that you should only do this when you know for sure that the browser can handle the URL i.e its mimetype In doubt if the URL can point to an image or anything else than HTML prefer to use new KRun( url ) See also a href techbase for a discussion of invokeBrowser vs KRun url The destination address startup_id for app startup notification for none empty string is the default since 5.0 use QDesktopServices::openUrl(url)</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KToolInvocation::invokeMailer</field>
    <field name="args">(const QString &amp;address, const QString &amp;subject, const QByteArray &amp;startup_id=QByteArray())</field>
    <field name="url">classKToolInvocation.html#a6358ec7c69eae0302a858cf0cd37f8e6</field>
    <field name="keywords">invokeMailer KToolInvocation::invokeMailer KToolInvocation</field>
    <field name="text">address The destination address subject Subject string Can be QString() startup_id for app startup notification for none empty string is the default since 5.0 use QDesktopServices::openUrl(mailtoURL) using QUrl::setPath(address) and a query item of for the subject</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KToolInvocation::invokeMailer</field>
    <field name="args">(const QUrl &amp;mailtoURL, const QByteArray &amp;startup_id=QByteArray(), bool allowAttachments=false)</field>
    <field name="url">classKToolInvocation.html#af65bcb6710530933acc9e784811bc9a9</field>
    <field name="keywords">invokeMailer KToolInvocation::invokeMailer KToolInvocation</field>
    <field name="text">mailtoURL A mailto URL startup_id for app startup notification for none empty string is the default allowAttachments whether attachments specified in mailtoURL should be honoured The default is false do not honor requests for attachments since 5.0 use QDesktopServices::openUrl(mailtoURL)</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KToolInvocation::invokeMailer</field>
    <field name="args">(const QString &amp;to, const QString &amp;cc, const QString &amp;bcc, const QString &amp;subject, const QString &amp;body, const QString &amp;messageFile=QString(), const QStringList &amp;attachURLs=QStringList(), const QByteArray &amp;startup_id=QByteArray())</field>
    <field name="url">classKToolInvocation.html#aafbfe267ee237aba00bd3ef57965e8a5</field>
    <field name="keywords">invokeMailer KToolInvocation::invokeMailer KToolInvocation</field>
    <field name="text">All parameters are optional to The destination address cc The Cc field bcc The Bcc field subject Subject string body A string containing the body of the mail exclusive with messageFile messageFile A file URL containing the body of the mail exclusive with body currently unsupported attachURLs List of URLs to be attached to the mail startup_id for app startup notification for none empty string is the default</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KToolInvocation::invokeTerminal</field>
    <field name="args">(const QString &amp;command, const QString &amp;workdir=QString(), const QByteArray &amp;startup_id=&quot;&quot;)</field>
    <field name="url">classKToolInvocation.html#a3d80bb3c878c35d0eddcee400ea82901</field>
    <field name="keywords">invokeTerminal KToolInvocation::invokeTerminal KToolInvocation</field>
    <field name="text">command the command to execute can be empty workdir the initial working directory can be empty startup_id for app startup notification for none empty string is the default 4.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KToolInvocation::ensureKdeinitRunning</field>
    <field name="args">()</field>
    <field name="url">classKToolInvocation.html#afdc2f8e238c8ec797f52c649dcc159d2</field>
    <field name="keywords">ensureKdeinitRunning KToolInvocation::ensureKdeinitRunning KToolInvocation</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KToolInvocation::kdeinitExec</field>
    <field name="args">(const QString &amp;name, const QStringList &amp;args=QStringList(), QString *error=0, int *pid=0, const QByteArray &amp;startup_id=QByteArray())</field>
    <field name="url">classKToolInvocation.html#a5fda1c2e913e86a05407b4d05f091020</field>
    <field name="keywords">kdeinitExec KToolInvocation::kdeinitExec KToolInvocation</field>
    <field name="text">program name and arguments are converted to according to the local encoding and passed as is to kdeinit name Name of the program to start args Arguments to pass to the program error On failure error contains a description of the error that occurred If the pointer is 0 the argument will be ignored pid On success the process id of the new service will be written here If the pointer is 0 the argument will be ignored startup_id for app startup notification for none empty string is the default an error code indicating success 0 or failure 0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KToolInvocation::kdeinitExecWait</field>
    <field name="args">(const QString &amp;name, const QStringList &amp;args=QStringList(), QString *error=0, int *pid=0, const QByteArray &amp;startup_id=QByteArray())</field>
    <field name="url">classKToolInvocation.html#ad90aff22a1f166a9b5e748bdc9b27b02</field>
    <field name="keywords">kdeinitExecWait KToolInvocation::kdeinitExecWait KToolInvocation</field>
    <field name="text">Like kdeinitExec() but it waits till the program is finished As such it behaves similar to the system function name Name of the program to start args Arguments to pass to the program error On failure error contains a description of the error that occurred If the pointer is 0 the argument will be ignored pid On success the process id of the new service will be written here If the pointer is 0 the argument will be ignored startup_id for app startup notification for none empty string is the default an error code indicating success 0 or failure 0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KToolInvocation::startServiceByDesktopName</field>
    <field name="args">(const QString &amp;_name, const QString &amp;URL, QString *error=0, QString *serviceName=0, int *pid=0, const QByteArray &amp;startup_id=QByteArray(), bool noWait=false)</field>
    <field name="url">classKToolInvocation.html#a83beeda68164e916eccd16b97dcca1e1</field>
    <field name="keywords">startServiceByDesktopName KToolInvocation::startServiceByDesktopName KToolInvocation</field>
    <field name="text">E.g _name the desktop name of the service URL if not empty this URL is passed to the service error On failure error contains a description of the error that occurred If the pointer is 0 the argument will be ignored serviceName On success serviceName contains the D-Bus service name under which this service is available If empty the service does not provide D-Bus services If the pointer is 0 the argument will be ignored pid On success the process id of the new service will be written here If the pointer is 0 the argument will be ignored startup_id for app startup notification for none empty string is the default noWait if set the function does not wait till the service is running an error code indicating success 0 or failure 0 since 5.0 use QDBusConnectionInterface::startService to start a unique application in order to make dbus calls to it after ensuring that it installs a dbus org.kde.serviceName.service file Otherwise just use QProcess or KRun</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KToolInvocation::startServiceByDesktopName</field>
    <field name="args">(const QString &amp;_name, const QStringList &amp;URLs=QStringList(), QString *error=0, QString *serviceName=0, int *pid=0, const QByteArray &amp;startup_id=QByteArray(), bool noWait=false)</field>
    <field name="url">classKToolInvocation.html#a4fe38d3449d3735004c7bf58af668759</field>
    <field name="keywords">startServiceByDesktopName KToolInvocation::startServiceByDesktopName KToolInvocation</field>
    <field name="text">E.g _name the desktop name of the service URLs if not empty these URLs will be passed to the service error On failure error contains a description of the error that occurred If the pointer is 0 the argument will be ignored serviceName On success serviceName contains the D-Bus service name under which this service is available If empty the service does not provide D-Bus services If the pointer is 0 the argument will be ignored pid On success the process id of the new service will be written here If the pointer is 0 the argument will be ignored startup_id for app startup notification for none empty string is the default noWait if set the function does not wait till the service is running an error code indicating success 0 or failure 0 since 5.0 use QDBusConnectionInterface::startService to start a unique application in order to make dbus calls to it after ensuring that it installs a dbus org.kde.serviceName.service file Otherwise just use QProcess or KRun</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KToolInvocation::startServiceByDesktopPath</field>
    <field name="args">(const QString &amp;_name, const QString &amp;URL, QString *error=0, QString *serviceName=0, int *pid=0, const QByteArray &amp;startup_id=QByteArray(), bool noWait=false)</field>
    <field name="url">classKToolInvocation.html#afde14a2e6b17aff22e10ea435506a95a</field>
    <field name="keywords">startServiceByDesktopPath KToolInvocation::startServiceByDesktopPath KToolInvocation</field>
    <field name="text">E.g or _name the path of the desktop file URL if not empty this URL is passed to the service error On failure error contains a description of the error that occurred If the pointer is 0 the argument will be ignored serviceName On success serviceName contains the DCOP name under which this service is available If empty the service does not provide DCOP services If the pointer is 0 the argument will be ignored pid On success the process id of the new service will be written here If the pointer is 0 the argument will be ignored startup_id for app startup notification for none empty string is the default noWait if set the function does not wait till the service is running an error code indicating success 0 or failure 0 since 5.0 use QDBusConnectionInterface::startService to start a unique application in order to make dbus calls to it after ensuring that it installs a dbus org.kde.serviceName.service file Otherwise just use QProcess or KRun</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KToolInvocation::startServiceByDesktopPath</field>
    <field name="args">(const QString &amp;_name, const QStringList &amp;URLs=QStringList(), QString *error=0, QString *serviceName=0, int *pid=0, const QByteArray &amp;startup_id=QByteArray(), bool noWait=false)</field>
    <field name="url">classKToolInvocation.html#ae9ef0bad1e0956e214d7c3cb3d68b28a</field>
    <field name="keywords">startServiceByDesktopPath KToolInvocation::startServiceByDesktopPath KToolInvocation</field>
    <field name="text">E.g or _name the path of the desktop file URLs if not empty these URLs will be passed to the service error On failure error contains a description of the error that occurred If the pointer is 0 the argument will be ignored serviceName On success serviceName contains the DCOP name under which this service is available If empty the service does not provide DCOP services If the pointer is 0 the argument will be ignored pid On success the process id of the new service will be written here If the pointer is 0 the argument will be ignored startup_id for app startup notification for none empty string is the default noWait if set the function does not wait till the service is running an error code indicating success 0 or failure 0 since 5.0 use QDBusConnectionInterface::startService to start a unique application in order to make dbus calls to it after ensuring that it installs a dbus org.kde.serviceName.service file Otherwise just use QProcess or KRun</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KToolInvocation::startServiceByName</field>
    <field name="args">(const QString &amp;_name, const QString &amp;URL, QString *error=0, QString *serviceName=0, int *pid=0, const QByteArray &amp;startup_id=QByteArray(), bool noWait=false)</field>
    <field name="url">classKToolInvocation.html#a41fc5e30117c3c878b4a4e5285873742</field>
    <field name="keywords">startServiceByName KToolInvocation::startServiceByName KToolInvocation</field>
    <field name="text">E.g _name the name of the service URL if not empty this URL is passed to the service error On failure error contains a description of the error that occurred If the pointer is 0 the argument will be ignored serviceName On success serviceName contains the DCOP name under which this service is available If empty the service does not provide DCOP services If the pointer is 0 the argument will be ignored pid On success the process id of the new service will be written here If the pointer is 0 the argument will be ignored startup_id for app startup notification for none empty string is the default noWait if set the function does not wait till the service is running an error code indicating success 0 or failure 0 Use startServiceByDesktopName or startServiceByDesktopPath</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KToolInvocation::startServiceByName</field>
    <field name="args">(const QString &amp;_name, const QStringList &amp;URLs=QStringList(), QString *error=0, QString *serviceName=0, int *pid=0, const QByteArray &amp;startup_id=QByteArray(), bool noWait=false)</field>
    <field name="url">classKToolInvocation.html#acf71ec353e8a6092619afd6317ce785c</field>
    <field name="keywords">startServiceByName KToolInvocation::startServiceByName KToolInvocation</field>
    <field name="text">E.g _name the name of the service URLs if not empty these URLs will be passed to the service error On failure error contains a description of the error that occurred If the pointer is 0 the argument will be ignored serviceName On success serviceName contains the DCOP name under which this service is available If empty the service does not provide DCOP services If the pointer is 0 the argument will be ignored pid On success the process id of the new service will be written here If the pointer is 0 the argument will be ignored startup_id for app startup notification for none empty string is the default noWait if set the function does not wait till the service is running an error code indicating success 0 or failure 0 Use startServiceByDesktopName or startServiceByDesktopPath</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">KServiceTypeProfile</field>
    <field name="url">namespaceKServiceTypeProfile.html</field>
    <field name="keywords">KServiceTypeProfile</field>
    <field name="text">KServiceTypeProfile represents the user s preferences for services of a service type list list of offers including initialPreference servicetype the service type the weighted and sorted offer list used by KServiceTypeTrader It consists of a list of services service offers for the service type that is sorted by the user s preference KServiceTypeTrader uses KServiceTypeProfile to get results sorted according to the user s preference KService KServiceType KServiceTypeTrader Represents the user s preferences for services of a service type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceTypeProfile::clearCache</field>
    <field name="args">()</field>
    <field name="url">namespaceKServiceTypeProfile.html#acca45a03c98ebe7e877387d3a166c877</field>
    <field name="keywords">clearCache KServiceTypeProfile::clearCache KServiceTypeProfile</field>
    <field name="text">for KServiceTypeFactory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceTypeProfile::deleteServiceTypeProfile</field>
    <field name="args">(const QString &amp;serviceType)</field>
    <field name="url">namespaceKServiceTypeProfile.html#ac4a7ae27ba46027edf92249e3a8ef7c5</field>
    <field name="keywords">deleteServiceTypeProfile KServiceTypeProfile::deleteServiceTypeProfile KServiceTypeProfile</field>
    <field name="text">Do not use this for mimetypes serviceType The name of the servicetype</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceTypeProfile::hasProfile</field>
    <field name="args">(const QString &amp;serviceType)</field>
    <field name="url">namespaceKServiceTypeProfile.html#adfd25e203f95a9ca4dca312ff89da53e</field>
    <field name="keywords">hasProfile KServiceTypeProfile::hasProfile KServiceTypeProfile</field>
    <field name="text">for KServiceTypeTrader</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KServiceTypeProfile::writeServiceTypeProfile</field>
    <field name="args">(const QString &amp;serviceType, const KService::List &amp;services, const KService::List &amp;disabledServices=KService::List())</field>
    <field name="url">namespaceKServiceTypeProfile.html#af8c7b2db27370ed098201bb27dab4e04</field>
    <field name="keywords">writeServiceTypeProfile KServiceTypeProfile::writeServiceTypeProfile KServiceTypeProfile</field>
    <field name="text">Do not use this for mimetypes serviceType The name of the servicetype services Ordered list of services from the preferred one to the least preferred one disabledServices List of services which are normally associated with this serviceType but which should be disabled i.e trader queries will not return them</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">index</field>
    <field name="url">index.html</field>
    <field name="keywords"></field>
    <field name="text">KService Plugin framework for desktop services Introduction KService provides a plugin framework for handling desktop services Services can be applications or libraries They can be bound to MIME types or handled by application specific code Usage If you are using CMake you need to have or similar in your CMakeLists.txt file and you need to link to KF5::Service</field>
  </doc>
</add>
