{"name": "knewstuff-5.26.0", "fancyname": "KNewStuff", "docfields": [{"type": "class", "name": "KMoreTools", "url": "classKMoreTools.html", "keyword": "KMoreTools", "text": "This class is one entry point of the KMoreTools API See also KMoreToolsMenuFactory This is a new API published within KNewStuff since April 2015 Its current target are KDE applications which are part of the kdesrcbuild infrastructure Here it is possible to find all usages and to adapt to API changes when needed So if you use this in your own application beware that there might be API changes when more use cases are developed Introduction KMoreTools helps to to build user-configurable menus with tools which might not installed yet These tools may also take URL arguments supplied by the application The user will see a menu item for a tool even if it is not installed in the More section Furthermore it makes long menus shorter by providing a main and more section It provides a Configure menu dialog to make the menu user-configurable It does this in the following ways Provide an API to define external applications for a given context If a defined application is not installed yet the application is optionally still presented to the user with a hint that it is not installed and a link to the homepage later with integration to package managment This increases the discoverability of useful applications the user never heard about yet In case of many applications for a given context it provides a GUI to the user to hand-pick favorite tools This makes it easier for application developers to add alternative application/tool suggestions without worrying about cluttered menus Menu items can be automatically moved to the submenu Reduce translation effort by re-using desktop files of the services added to the menu Details The term refers to a 1 1 copy of a desktop file The kmt-desktopfile is provided by the application that uses KMoreTools and must be installed to subdirectories of e.g e.g generally QStandardPaths::GenericDataLocation uniqueId See KMoreTools::KMoreTools for hints of how to install this correctly using cmake The kmt-desktopfiles are used to get ready-made translations for application name and description even if the application is not installed You can also provide an icon which is used in the not-installed section when the application is not installed yet For details about the resulting menu structure see KMoreToolsMenuBuilder See also outdated Rationale for the section Increase discoverability and visibility of useful free software that have inherently low budget for marketing Make interconnection of different free software packages as effortless as possible in terms of creating and maintaining the menu Provide expert i.e your knowledge to useful free software alternatives to solve a certain task Give novice users hints about tools that are useful in a particular context even if they are not installed Improve self-documentation of applications Presets Before installing desktop files in your application you might take a look at KMoreToolsPresets or KMoreToolsMenuFactory which might already contain the needed tools Screenshots This section shows screenshots of usage examples KSnapshot s Send To menu Last updated 2015-04-17 uncommited demo source code src/kde/kdegraphics/ksnapshot/ksnapshotsendtoactions.cpp Note that the last item in the More menu in the following screenshot was added by KSnapshot s code Send To menu Dolphins s Space info menu Last updated 2015-04-17 uncommited demo source code src/kde/applications/dolphin/src/statusbar/spaceinfotoolsmenu.cpp Space info menu Kate s Project plugin git menu Last updated 2015-03-25 uncommited demo source code src/kde/applications/kate/addons/project/kateprojecttreeviewcontextmenu.cpp All git tools installed Not all git tools installed Configure menu dialog Kate s Project plugin git menu Last updated 2015-04-17 source code src/frameworks/knewstuff/tests/kmoretools/kmoretoolstest.cpp Configure dialog when there are non-installed apps FAQ Why is everything based on desktopfiles With desktopfiles translation can be reused Definition of application icon can be reused They provide a unified interface for dealing with program arguments todo later question KMoreTools::registerServiceByDesktopEntryName() warn if service is not of Type Application KService::isApplication() or just leave it Add support for package managers to install software e.g muon discover maybe kmt-desktopfiles add a config file that can configure the homepage URLs and e.g the package name if needed for package manager support 5.10"}, {"type": "enum", "name": "KMoreTools::ConfigureDialogAccessibleSetting", "url": "classKMoreTools.html#a7d88427253e237dcf632639eeb7bf2eb", "keyword": "ConfigureDialogAccessibleSetting KMoreTools::ConfigureDialogAccessibleSetting KMoreTools", "text": ""}, {"type": "enumvalue", "name": "KMoreTools::ConfigureDialogAccessible_Always", "url": "classKMoreTools.html#a7d88427253e237dcf632639eeb7bf2ebab89b40d0d09ec2c355e2d71df9353790", "keyword": "ConfigureDialogAccessible_Always KMoreTools::ConfigureDialogAccessible_Always KMoreTools", "text": "Always show the menu item default"}, {"type": "enumvalue", "name": "KMoreTools::ConfigureDialogAccessible_Defensive", "url": "classKMoreTools.html#a7d88427253e237dcf632639eeb7bf2ebac7255231a8761dedd3a035d81735edc3", "keyword": "ConfigureDialogAccessible_Defensive KMoreTools::ConfigureDialogAccessible_Defensive KMoreTools", "text": "Defensively show the menu item The menu item will only be shown if there are non-installed apps Rationale suggestion Do not clutter menu more than needed in standard cases But when there are not-installed apps the configure dialog can be used to find out more about these apps Note that the menu item still becomes visible when the user holds the Ctrl key while opening the menu"}, {"type": "enum", "name": "KMoreTools::MenuSection", "url": "classKMoreTools.html#a1a786e8819ac1278162bdcd769600b92", "keyword": "MenuSection KMoreTools::MenuSection KMoreTools", "text": ""}, {"type": "enumvalue", "name": "KMoreTools::MenuSection_Main", "url": "classKMoreTools.html#a1a786e8819ac1278162bdcd769600b92ac3fd9d7e6388b1651a70c74a2b98bf42", "keyword": "MenuSection_Main KMoreTools::MenuSection_Main KMoreTools", "text": "The item is placed in the main section default"}, {"type": "enumvalue", "name": "KMoreTools::MenuSection_More", "url": "classKMoreTools.html#a1a786e8819ac1278162bdcd769600b92ac3dab6105c7e68c45037413f6d6e9dc6", "keyword": "MenuSection_More KMoreTools::MenuSection_More KMoreTools", "text": "The item is placed in the submenu"}, {"type": "enum", "name": "KMoreTools::ServiceLocatingMode", "url": "classKMoreTools.html#abbe97a71ceaaabe7062ef172bb4a6b2e", "keyword": "ServiceLocatingMode KMoreTools::ServiceLocatingMode KMoreTools", "text": ""}, {"type": "enumvalue", "name": "KMoreTools::ServiceLocatingMode_Default", "url": "classKMoreTools.html#abbe97a71ceaaabe7062ef172bb4a6b2ea1168b7028244219cb9c81e8fda582d56", "keyword": "ServiceLocatingMode_Default KMoreTools::ServiceLocatingMode_Default KMoreTools", "text": "by existence of desktop file discoverable by KService"}, {"type": "enumvalue", "name": "KMoreTools::ServiceLocatingMode_ByProvidedExecLine", "url": "classKMoreTools.html#abbe97a71ceaaabe7062ef172bb4a6b2eaf69e651b3a5332fc2210a37ab881f6e4", "keyword": "ServiceLocatingMode_ByProvidedExecLine KMoreTools::ServiceLocatingMode_ByProvidedExecLine KMoreTools", "text": "by existence of executable defined in the TryExec or Exec line of the provided kmt-desktopfile"}, {"type": "function", "name": "KMoreTools::KMoreTools", "url": "classKMoreTools.html#a8f06d79730b6a07002b1aabc687b3ee3", "keyword": "KMoreTools KMoreTools::KMoreTools KMoreTools", "text": "uniqueId defines two things 1 the config section name where the user settings done by the Configure dialog will be stored 2 the location where the kmt-desktopfiles should be installed because there they will be searched by default If uniqueId contains slashes they will result in subdirectories The default location can be overriden by registerServiceByDesktopEntryName s kmtDesktopfileSubdir parameter This is currently used in KMoreToolsPresets implementation to separate the kmt-desktopfiles location from the user s config section name Install Desktopfiles Example 1 CMakeFileLists.txt if uniqueId Example 2 About KDE_INSTALL_DATADIR_KF5 In general KDE_INSTALL_DATADIR_KF5 ends up in To use it you need to add to your CMakeLists.txt"}, {"type": "function", "name": "KMoreTools::menuBuilder", "url": "classKMoreTools.html#a19a9a6dd9402685db5020f3aaa8e254e", "keyword": "menuBuilder KMoreTools::menuBuilder KMoreTools", "text": "the interface to build the menu It is a singleton instance for each different userConfigPostfix which is by default So repeated calls with same parameter will return the same object The pointer lives as long as KMoreTools userConfigPostfix is empty by default You can use it to specify a postfix for the user config section So you can build different menus which can be configured separately This is used in unit tests to separated test cases KMoreToolsMenuBuilder::clear()"}, {"type": "function", "name": "KMoreTools::registerServiceByDesktopEntryName", "url": "classKMoreTools.html#a01b27ab2c217357df20a4a9dde8d13eb", "keyword": "registerServiceByDesktopEntryName KMoreTools::registerServiceByDesktopEntryName KMoreTools", "text": "If the method is called more than once for the same desktopEntryName the service is located again and the old service is replaced with the new one desktopEntryName is the name of the desktopfile without the desktop extension The desktop file is either already installed Then the information of the installed file is used or not installed and kmt-desktopfile is present Then the information of the app-local copy of desktopfile located in the kmt-desktopfiles directory is used or not installed and no kmt-desktopfile provided In this case KMoreToolsService::setHomepageUrl should be used so that at least a website link can be displayed kmtDesktopfileSubdir when not empty overrides the uniqueId parameter from the ctor when it comes to searching a kmt-desktopfile Default value is the empty string serviceLocatingMode ServiceLocatingMode_ByProvidedExecLine Some programs don t install a desktop file of their own e.g gitk If set to true then installed desktop files are not searched but the provided in kmt-desktopfiles will be used to extract exec line The exec line will be used to determine if the executable is installed a KMoreToolsService pointer which lives as long as KMoreTools so do not store it for later use nullptr if the kmt provided desktop file is faulty This kind of error must be fixed before you ship your application This case is only used for unit tests"}, {"type": "class", "name": "KMoreToolsMenuBuilder", "url": "classKMoreToolsMenuBuilder.html", "keyword": "KMoreToolsMenuBuilder", "text": "Depending on if the added service is installed or not a section will be automatically added to the generated menu 5.10"}, {"type": "function", "name": "KMoreToolsMenuBuilder::addMenuItem", "url": "classKMoreToolsMenuBuilder.html#ab09665613ae80a0d99bf8751776aaa34", "keyword": "addMenuItem KMoreToolsMenuBuilder::addMenuItem KMoreToolsMenuBuilder", "text": "If the service is not installed it will be shown in the section registeredService will be added to a the menu A unique menu itemId will be generated automatically from the desktopEntryName See also KMoreToolsMenuItem::id() defaultLocation is KMoreTools::MenuSection_Main by default The registeredService- isInstalled() result will be respected E.g if the service is not installed it will be placed in the section in the more location of the menu even if defaultLocation was main location See also KMoreToolsMenuItem ctor KMoreToolsMenuItem::action()"}, {"type": "function", "name": "KMoreToolsMenuBuilder::addMenuItem", "url": "classKMoreToolsMenuBuilder.html#ad634d1592c61f24e0caaca2ad49b8a10", "keyword": "addMenuItem KMoreToolsMenuBuilder::addMenuItem KMoreToolsMenuBuilder", "text": "action to be added to the menu itemId is a unique for this menu id for the item The itemId may be not unique Then a unique id is generated automatically by using some postfix But it is better if you specify something sensible because the itemId is used to find the items in the user config Otherwise the user config can be messed up if the order or number of default menu items changes NOTE that the QAction::text is NOT used to generate the unique id because the text is translated and therefore not stable KMoreToolsMenuItem::action()"}, {"type": "function", "name": "KMoreToolsMenuBuilder::buildByAppendingToMenu", "url": "classKMoreToolsMenuBuilder.html#a7ed6d0d90ccb31c5d9a45916c0345f56", "keyword": "buildByAppendingToMenu KMoreToolsMenuBuilder::buildByAppendingToMenu KMoreToolsMenuBuilder", "text": "menu the menu where the items should be appended to configureDialogAccessibleSetting determines when the menu item should be added to the menu moreMenu if not nullptr then it will be set to the pointer to the menu in case it was created Otherwise the pointer will set to nullptr This can be used to add some custom items to the menu"}, {"type": "function", "name": "KMoreToolsMenuBuilder::clear", "url": "classKMoreToolsMenuBuilder.html#afffe6429258bfa2e8cbee9e2742396a0", "keyword": "clear KMoreToolsMenuBuilder::clear KMoreToolsMenuBuilder", "text": "This can be useful if the menuBuilder is reused more than once KMoreToolsService::menuBuilder"}, {"type": "function", "name": "KMoreToolsMenuBuilder::setInitialItemTextTemplate", "url": "classKMoreToolsMenuBuilder.html#ab9434be004caab6dc1c56bfbee4a2f91", "keyword": "setInitialItemTextTemplate KMoreToolsMenuBuilder::setInitialItemTextTemplate KMoreToolsMenuBuilder", "text": "see KMoreToolsService::formatString see KMoreToolsMenuItem::setInitialItemText The default template text is"}, {"type": "class", "name": "KMoreToolsMenuFactory", "url": "classKMoreToolsMenuFactory.html", "keyword": "KMoreToolsMenuFactory", "text": "Creates a QMenu from a list of grouping names For details on available grouping names see KMoreToolsPresets::registerServicesByGroupingNames 5.10"}, {"type": "function", "name": "KMoreToolsMenuFactory::KMoreToolsMenuFactory", "url": "classKMoreToolsMenuFactory.html#accae0a5b5ecee3738f3c35c7cc6bd6ab", "keyword": "KMoreToolsMenuFactory KMoreToolsMenuFactory::KMoreToolsMenuFactory KMoreToolsMenuFactory", "text": "uniqueId defines the config section name where the user settings done by the Configure dialog will be stored For more information about the parameter see KMoreTools::KMoreTools"}, {"type": "function", "name": "KMoreToolsMenuFactory::createMenuFromGroupingNames", "url": "classKMoreToolsMenuFactory.html#a64895c35f2e3ace9aa6f22d80e06598e", "keyword": "createMenuFromGroupingNames KMoreToolsMenuFactory::createMenuFromGroupingNames KMoreToolsMenuFactory", "text": "The menu is lazy in a sense that the items are not added until the menu is about to be shown NOTE This means if the menu is not shown as would be by e.g calling exec() then the menu stays empty For details on available grouping names see KMoreToolsPresets::registerServicesByGroupingNames For each grouping name there might be special handlings that take the optional given url into account if needed By default the url is empty Furthermore some selected menu items will be put into the menu section by default The grouping name There is a special grouping name note the colon If this name is given in the list all further groupings are put into the More section by default NOTE that this method overrides a previously created QMenu* instance of the same KMoreToolsMenuFactory instance The reason is that the internal KMoreTools pointer is reused todo solve this or rename the class the created QMenu which includes a Main and maybe a More section and an item that starts configure dialog where the user can configure the menu see KMoreTools"}, {"type": "function", "name": "KMoreToolsMenuFactory::fillMenuFromGroupingNames", "url": "classKMoreToolsMenuFactory.html#ac60624bda193e08843f0c8e9a5612c0a", "keyword": "fillMenuFromGroupingNames KMoreToolsMenuFactory::fillMenuFromGroupingNames KMoreToolsMenuFactory", "text": "This is useful to create lazy menus by connecting QMenu::aboutToShow WARN 1 KMoreToolsMenuFactory must live as long as you would like to use the menu WARN 2 You must NOT reuse an existing KMoreToolsMenuFactory instance to create a different menu 5.11"}, {"type": "class", "name": "KMoreToolsMenuItem", "url": "classKMoreToolsMenuItem.html", "keyword": "KMoreToolsMenuItem", "text": "The service might be installed or not The corresponding QAction will be created for installed services that for not-installed services action() returns nullptr 5.10"}, {"type": "function", "name": "KMoreToolsMenuItem::action", "url": "classKMoreToolsMenuItem.html#a4805b1773d5f609d3bfe819af711cecd", "keyword": "action KMoreToolsMenuItem::action KMoreToolsMenuItem", "text": "the corresponding QAction which will be added to the actual menu when underlying service is installed or else if not installed nullptr So you can change the created action as you desire We return nullptr because not-installed services will get a submenu with other items like opening a website instead of an single action To change the item s text even for not-installed services use initialItemText() Note that once the method was invoked the first time the action is created an then reused Case 2 KMoreToolsMenuBuilder::addMenuItem was called with QAction* argument The added action will be returned KMoreToolsService::isInstalled"}, {"type": "function", "name": "KMoreToolsMenuItem::defaultLocation", "url": "classKMoreToolsMenuItem.html#ae455889b574fcf9fe24936eb57d666a9", "keyword": "defaultLocation KMoreToolsMenuItem::defaultLocation KMoreToolsMenuItem", "text": ""}, {"type": "function", "name": "KMoreToolsMenuItem::id", "url": "classKMoreToolsMenuItem.html#ac8a42320c4aa42e1e22a3247c686edd3", "keyword": "id KMoreToolsMenuItem::id KMoreToolsMenuItem", "text": "It is possible to add the same service more than once and then hopefully change the action text When the order of those are changed the id will not be consistent because internally an increasing number is used If you have issues with this you can solve this by manually calling setId e.g desktopEntryName x"}, {"type": "function", "name": "KMoreToolsMenuItem::initialItemText", "url": "classKMoreToolsMenuItem.html#aea2d778cfd49b5492dffe41739c87483", "keyword": "initialItemText KMoreToolsMenuItem::initialItemText KMoreToolsMenuItem", "text": ""}, {"type": "function", "name": "KMoreToolsMenuItem::registeredService", "url": "classKMoreToolsMenuItem.html#a5e3eca32623db44092d921d7c893ce19", "keyword": "registeredService KMoreToolsMenuItem::registeredService KMoreToolsMenuItem", "text": "the underlying KMoreToolsService instance see KMoreToolsMenuBuilder::addMenuItem with KKmoreToolsService* argument Or nullptr when KMoreToolsMenuBuilder::addMenuItem with QAction* argument was used"}, {"type": "function", "name": "KMoreToolsMenuItem::setId", "url": "classKMoreToolsMenuItem.html#a03be99092850a3bef38f71d1fac8833f", "keyword": "setId KMoreToolsMenuItem::setId KMoreToolsMenuItem", "text": "todo make sure that if this is called uniqueness of ids will be assured todo make sure to show error if the id contains characters other than alphanumerica dashes and underscores etc"}, {"type": "function", "name": "KMoreToolsMenuItem::setInitialItemText", "url": "classKMoreToolsMenuItem.html#a78e6ddf172651dab13afc17234989a86", "keyword": "setInitialItemText KMoreToolsMenuItem::setInitialItemText KMoreToolsMenuItem", "text": "Menu items of a non-installed service will get this text If the service is installed and you would like to change the item text you can retrieve the created QAction action() and modify the text using QAction s methods QAction::setText() initialItemText() action() You can use the static method KMoreToolsService::formatString here"}, {"type": "class", "name": "KMoreToolsPresets", "url": "classKMoreToolsPresets.html", "keyword": "KMoreToolsPresets", "text": "registerServiceByDesktopEntryName creates a KMoreToolsService instance from a given desktopEntryName registerServicesByGroupingNames takes a list of a set of predefined grouping names and returns a list KMoreToolsService instances Remember a KMoreToolsService represents a service which might or might not be installed on the current maschine The groupings defined here are used for the KMoreToolsMenuFactory todo later Probably it would make sense to move the methods of this class to KMoreToolsMenuFactory because grouping names and special handling are too much coupled anyway 5.10"}, {"type": "function", "name": "KMoreToolsPresets::registerServiceByDesktopEntryName", "url": "classKMoreToolsPresets.html#a81725b42dec67f7562054e5e2f2eb126", "keyword": "registerServiceByDesktopEntryName KMoreToolsPresets::registerServiceByDesktopEntryName KMoreToolsPresets", "text": "If the kmt-desktopfile is missing the service is still created but with no translations and icon if the service is not installed Associates a homepage URL because a regular desktop file has got no field for this information Adds some corrections to faulty upstream desktop files Corrected desktop filenames end with kmt-edition.desktop todo how to avoid the question when a non-installed kmt-edition desktopfile is used but the program is installed Possible solution install all kmt-edition files to proper desktop file location the added KMoreToolsService"}, {"type": "function", "name": "KMoreToolsPresets::registerServicesByGroupingNames", "url": "classKMoreToolsPresets.html#ab6c052ed579347d83d35ce3df6cc1ae4", "keyword": "registerServicesByGroupingNames KMoreToolsPresets::registerServicesByGroupingNames KMoreToolsPresets", "text": "The most popular or recommended tools will be listed first Available grouping names listed in alphabetical order Disk usage tools as currently used in dolphin Some take 1 URL argument pointing to a directory Disk partition tools as currently used in dolphin Tools to find files on disk You can specify 1 URL argument that points to the directory where the search should be started Collection of git clients which all take 1 URL argument pointing to a directory within a git repository It may not be the git repo s root dir e.g Git clients and actions e.g View History for a specific file to be used in a file tree context menu e.g in kate s project plugin 1 URL argument can be provided that points to a directory or a file within a git repository e.g e.g Browse for icons on your system e.g those under Collection of screenshot-taking tools Tools to monitor the running processes on the system Tools to view system logs Tools for counting down the time and maybe trigger custom a action For URL arguments see also QUrl::fromLocalFile Services which are present in more than one grouping are only added once to the resulting list"}, {"type": "class", "name": "KMoreToolsService", "url": "classKMoreToolsService.html", "keyword": "KMoreToolsService", "text": "A registered service can either be installed isInstalled() true or if not found on the system not installed isInstalled() false 5.10"}, {"type": "function", "name": "KMoreToolsService::desktopEntryName", "url": "classKMoreToolsService.html#a4e39fffa9ab80b9ccc85a579ddd6f65c", "keyword": "desktopEntryName KMoreToolsService::desktopEntryName KMoreToolsService", "text": "the desktop entry name which the service is identified by and with which it was registered see registerServiceByDesktopEntryName Filename without desktop e.g if the desktop file is named then the desktop entry name is"}, {"type": "function", "name": "KMoreToolsService::formatString", "url": "classKMoreToolsService.html#ac0e491417c113632654045bf2e4ecde4", "keyword": "formatString KMoreToolsService::formatString KMoreToolsService", "text": "formatString supports the following placeholders which are replaced by the corresponding desktop file entries If a value for a placeholder is not available or empty e.g if no desktop file is available not installed or not provided via kmt-desktopfiles then the next one is used until 3 is reached which is always available Example the formatString is but the GenericName field is not available So is used If this is also not available is used KMoreToolsMenuItem::setInitialItemText KMoreToolsMenuBuilder::setInitialItemTextTemplate"}, {"type": "function", "name": "KMoreToolsService::homepageUrl", "url": "classKMoreToolsService.html#ade63acc643c18fd49f34c604050c9396", "keyword": "homepageUrl KMoreToolsService::homepageUrl KMoreToolsService", "text": "setHomepageUrl()"}, {"type": "function", "name": "KMoreToolsService::icon", "url": "classKMoreToolsService.html#abe7eb0aba5e90ae3ad46912a70ebfb29", "keyword": "icon KMoreToolsService::icon KMoreToolsService", "text": "Icon from installed desktop file If 1 is not found not found then icon from kmt desktop file which is then searched in the kmt-desktopfiles directory must have extension svg or png If 2 is not not found then no icon"}, {"type": "function", "name": "KMoreToolsService::installedService", "url": "classKMoreToolsService.html#aa5306c3c5e4d14116483b336f47905be", "keyword": "installedService KMoreToolsService::installedService KMoreToolsService", "text": "the KService represented by an installed desktop file that this might be nullptr even if isInstalled() is true This can only happen when ServiceLocatingMode::ServiceLocatingMode_ByProvidedExecLine is used in registerServiceByDesktopEntryName Then the kmt-desktopfile s Exec line is used to determine if a program is installed"}, {"type": "function", "name": "KMoreToolsService::isInstalled", "url": "classKMoreToolsService.html#a40df661cb83d9e86a19e1287496f889f", "keyword": "isInstalled KMoreToolsService::isInstalled KMoreToolsService", "text": "true if the desktopfile with the given desktopname name of the desktop file without the desktop is installed on the system"}, {"type": "function", "name": "KMoreToolsService::kmtProvidedIcon", "url": "classKMoreToolsService.html#a526b7c4cb4e7194187e9faaeb52a2237", "keyword": "kmtProvidedIcon KMoreToolsService::kmtProvidedIcon KMoreToolsService", "text": "the icon provided by the KMoreTools user and not the installed one e.g QGit currently has got a blank icon installed"}, {"type": "function", "name": "KMoreToolsService::kmtProvidedService", "url": "classKMoreToolsService.html#a761af486dd1ab21125cd9c0cb0c9a68b", "keyword": "kmtProvidedService KMoreToolsService::kmtProvidedService KMoreToolsService", "text": "a non-null KService::Ptr if app-local kmt-desktopfile is found and valid"}, {"type": "function", "name": "KMoreToolsService::maxUrlArgCount", "url": "classKMoreToolsService.html#aa2cc3fd6dc0a9a31d324e4670a799d16", "keyword": "maxUrlArgCount KMoreToolsService::maxUrlArgCount KMoreToolsService", "text": "setMaxUrlArgCount()"}, {"type": "function", "name": "KMoreToolsService::setExec", "url": "classKMoreToolsService.html#acf7f68328de1d294e39b535f91678fb7", "keyword": "setExec KMoreToolsService::setExec KMoreToolsService", "text": "Will only apply if the service is installed KService::setExec"}, {"type": "function", "name": "KMoreToolsService::setHomepageUrl", "url": "classKMoreToolsService.html#a5c380628a6de4b5981b23301a5cdc97d", "keyword": "setHomepageUrl KMoreToolsService::setHomepageUrl KMoreToolsService", "text": "This way the user gets some information of how to install the application"}, {"type": "function", "name": "KMoreToolsService::setMaxUrlArgCount", "url": "classKMoreToolsService.html#a92ca5b5b53036bc9ef577e2fa12e1246", "keyword": "setMaxUrlArgCount KMoreToolsService::setMaxUrlArgCount KMoreToolsService", "text": "In the context of connecting the action trigger signal we need to know the maximum number of URL arguments a given service can accept Usaually a number between 0 and 1 Sometimes 2 E.g kdf must not be called with any positional argument E.g gitg can be called with zero or one arguments"}, {"type": "class", "name": "KNS3::Button", "url": "classKNS3_1_1Button.html", "keyword": "Button", "text": "4.4"}, {"type": "signal", "name": "KNS3::Button::aboutToShowDialog", "url": "classKNS3_1_1Button.html#a3cd111f38ea8945184c5a23322f01fbf", "keyword": "aboutToShowDialog KNS3::Button::aboutToShowDialog KNS3::Button", "text": ""}, {"type": "signal", "name": "KNS3::Button::dialogFinished", "url": "classKNS3_1_1Button.html#a47d152b00b9671640723d0d04c0218ce", "keyword": "dialogFinished KNS3::Button::dialogFinished KNS3::Button", "text": ""}, {"type": "function", "name": "KNS3::Button::Button", "url": "classKNS3_1_1Button.html#ac33bf01bdd76a8006b3324027bb0518b", "keyword": "Button KNS3::Button::Button KNS3::Button", "text": "text describing what is being downloaded It should be a text beginning with for consistency configFile the name of the knsrc file parent the parent widget"}, {"type": "function", "name": "KNS3::Button::Button", "url": "classKNS3_1_1Button.html#ae463ee0875d5d8154d032a0437df68d9", "keyword": "Button KNS3::Button::Button KNS3::Button", "text": "parent the parent widget"}, {"type": "function", "name": "KNS3::Button::setButtonText", "url": "classKNS3_1_1Button.html#aaf6f68f4bb46d22bec4aa92c97432986", "keyword": "setButtonText KNS3::Button::setButtonText KNS3::Button", "text": "will be prefaced with i18n"}, {"type": "function", "name": "KNS3::Button::setConfigFile", "url": "classKNS3_1_1Button.html#a3a306a0ca5043137b44a5352d34c3dc8", "keyword": "setConfigFile KNS3::Button::setConfigFile KNS3::Button", "text": ""}, {"type": "class", "name": "KNS3::DownloadDialog", "url": "classKNS3_1_1DownloadDialog.html", "keyword": "DownloadDialog", "text": "The download dialog will present items to the user for installation updates and removal Preview images as well as other meta information can be seen The Dialog is configured by a knsrc file containing the KHotNewStuff configuration Your application should install a file called knsrc The file could look like this for wallpapers KNewStuff3 ProvidersUrl Categories KDE Wallpaper 1920x1200 KDE Wallpaper 1600x1200 XdgTargetDir wallpapers Uncompress archive Uncompress can be one of always never or archive always assume all downloaded files are archives and need to be extracted never never try to extract the file archive if the file is an archive uncompress it otherwise just pass it on You have different options to set the target install directory StandardResource not available in KF5 use XdgTargetDir instead TargetDir since KF5 this is equivalent to XdgTargetDir XdgTargetDir a directory in the directory such as local/share/wallpapers This is what QStandardPaths::writableLocation(QStandardPaths::GenericDataLocation) QLatin1Char name will return 4.4"}, {"type": "function", "name": "KNS3::DownloadDialog::DownloadDialog", "url": "classKNS3_1_1DownloadDialog.html#a834b656234a43b7db62a5d4b6eb6b0d8", "keyword": "DownloadDialog KNS3::DownloadDialog::DownloadDialog KNS3::DownloadDialog", "text": "It will try to find a appname.knsrc file with the configuration Appname is the name of your application as provided in the about data- parent the parent of the dialog"}, {"type": "function", "name": "KNS3::DownloadDialog::DownloadDialog", "url": "classKNS3_1_1DownloadDialog.html#ad103693bb02ed773af077f78f023048d", "keyword": "DownloadDialog KNS3::DownloadDialog::DownloadDialog KNS3::DownloadDialog", "text": "Manually specify the name of a knsrc file where the KHotNewStuff configuration can be found configFile the name of the configuration file parent the parent of the dialog"}, {"type": "function", "name": "KNS3::DownloadDialog::~DownloadDialog", "url": "classKNS3_1_1DownloadDialog.html#a9630731160f0ecabbd0dfee2a8dd9752", "keyword": "KNS3::DownloadDialog::~DownloadDialog KNS3::DownloadDialog", "text": ""}, {"type": "function", "name": "KNS3::DownloadDialog::changedEntries", "url": "classKNS3_1_1DownloadDialog.html#ab21a8606b64d6876bd3124b3d4f2de3e", "keyword": "changedEntries KNS3::DownloadDialog::changedEntries KNS3::DownloadDialog", "text": "the list of entries"}, {"type": "function", "name": "KNS3::DownloadDialog::installedEntries", "url": "classKNS3_1_1DownloadDialog.html#a939f12b0b268da1046490dddecceecad", "keyword": "installedEntries KNS3::DownloadDialog::installedEntries KNS3::DownloadDialog", "text": "the list of entries"}, {"type": "function", "name": "KNS3::DownloadDialog::setTitle", "url": "classKNS3_1_1DownloadDialog.html#ae9005e1a682cfb81a3c0f50129c448e2", "keyword": "setTitle KNS3::DownloadDialog::setTitle KNS3::DownloadDialog", "text": "title the title of the application or category or whatever"}, {"type": "function", "name": "KNS3::DownloadDialog::title", "url": "classKNS3_1_1DownloadDialog.html#afdf451400e44c7c6dfae7f123b47b6a0", "keyword": "title KNS3::DownloadDialog::title KNS3::DownloadDialog", "text": "the current title"}, {"type": "class", "name": "KNS3::DownloadManager", "url": "classKNS3_1_1DownloadManager.html", "keyword": "DownloadManager", "text": "This class can be used to search for KNewStuff items without using the widgets and to look for updates of already installed items without showing the dialog 4.5"}, {"type": "signal", "name": "KNS3::DownloadManager::entryStatusChanged", "url": "classKNS3_1_1DownloadManager.html#afe4224b31c378b184e2fe6d69e78bebb", "keyword": "entryStatusChanged KNS3::DownloadManager::entryStatusChanged KNS3::DownloadManager", "text": "Use KNS3::Entry::status() to check the current status entry the item that has been updated"}, {"type": "signal", "name": "KNS3::DownloadManager::errorFound", "url": "classKNS3_1_1DownloadManager.html#ad735a5f35ccc3bbcce58d32803594dfe", "keyword": "errorFound KNS3::DownloadManager::errorFound KNS3::DownloadManager", "text": ""}, {"type": "signal", "name": "KNS3::DownloadManager::searchResult", "url": "classKNS3_1_1DownloadManager.html#aac805c0cdbf21ad73ee863cbb3b95042", "keyword": "searchResult KNS3::DownloadManager::searchResult KNS3::DownloadManager", "text": "This can be the list of updates after checkForUpdates or the result of a search entries the list of results entries is empty when nothing was found"}, {"type": "function", "name": "KNS3::DownloadManager::DownloadManager", "url": "classKNS3_1_1DownloadManager.html#a306431712c20e7ffc0fceff0d935f3a4", "keyword": "DownloadManager KNS3::DownloadManager::DownloadManager KNS3::DownloadManager", "text": "Appname is the name of your application as provided in the about data- parent the parent of the dialog"}, {"type": "function", "name": "KNS3::DownloadManager::DownloadManager", "url": "classKNS3_1_1DownloadManager.html#ad8847c442886035bb94357e40a59672d", "keyword": "DownloadManager KNS3::DownloadManager::DownloadManager KNS3::DownloadManager", "text": "Manually specifying the name of the knsrc file configFile the name of the configuration file parent"}, {"type": "function", "name": "KNS3::DownloadManager::~DownloadManager", "url": "classKNS3_1_1DownloadManager.html#abb67275a951d706a3108a0d307ea9113", "keyword": "KNS3::DownloadManager::~DownloadManager KNS3::DownloadManager", "text": ""}, {"type": "function", "name": "KNS3::DownloadManager::checkForUpdates", "url": "classKNS3_1_1DownloadManager.html#a9edf5c7349aafd0515ac8380678ab118", "keyword": "checkForUpdates KNS3::DownloadManager::checkForUpdates KNS3::DownloadManager", "text": "Use searchResult to get notified as soon as an update has been found"}, {"type": "function", "name": "KNS3::DownloadManager::installEntry", "url": "classKNS3_1_1DownloadManager.html#a437c42194ef7227cbd3e367aaadab0e0", "keyword": "installEntry KNS3::DownloadManager::installEntry KNS3::DownloadManager", "text": "entry"}, {"type": "function", "name": "KNS3::DownloadManager::search", "url": "classKNS3_1_1DownloadManager.html#a03eede16c976ae580bd4d1e5ae1deddc", "keyword": "search KNS3::DownloadManager::search KNS3::DownloadManager", "text": "searchResult will be emitted with the requested list"}, {"type": "function", "name": "KNS3::DownloadManager::setSearchOrder", "url": "classKNS3_1_1DownloadManager.html#adf3a397f0a0620b92c0b4ebd0c31c486", "keyword": "setSearchOrder KNS3::DownloadManager::setSearchOrder KNS3::DownloadManager", "text": "This depends on the server Note that this function does not trigger a search Use search after setting this SortOrder order"}, {"type": "function", "name": "KNS3::DownloadManager::setSearchTerm", "url": "classKNS3_1_1DownloadManager.html#a56b6b247d90ee03eb802af530009012c", "keyword": "setSearchTerm KNS3::DownloadManager::setSearchTerm KNS3::DownloadManager", "text": "Note that this function does not trigger a search Use search after setting this searchTerm"}, {"type": "function", "name": "KNS3::DownloadManager::uninstallEntry", "url": "classKNS3_1_1DownloadManager.html#ae66981cec5cebc3c32c0967124e0a3ac", "keyword": "uninstallEntry KNS3::DownloadManager::uninstallEntry KNS3::DownloadManager", "text": "entry The entry which will be uninstalled 4.7"}, {"type": "class", "name": "KNS3::DownloadWidget", "url": "classKNS3_1_1DownloadWidget.html", "keyword": "DownloadWidget", "text": "The download widget will present items to the user for installation updates and removal Preview images as well as other meta information can be seen The Dialog is configured by a knsrc file containing the KHotNewStuff configuration Your application should install a file called knsrc The file could look like this for wallpapers KNewStuff3 ProvidersUrl Categories KDE Wallpaper 1920x1200 KDE Wallpaper 1600x1200 StandardResource wallpaper Uncompress archive Uncompress can be one of always never or archive always assume all downloaded files are archives and need to be extracted never never try to extract the file archive if the file is an archive uncompress it otherwise just pass it on You have different options to set the target install directory StandardResource not available in KF5 use XdgTargetDir instead TargetDir since KF5 this is equivalent to XdgTargetDir XdgTargetDir a directory in the directory such as local/share/wallpapers This is what QStandardPaths::writableLocation(QStandardPaths::GenericDataLocation) QLatin1Char name will return 4.5"}, {"type": "function", "name": "KNS3::DownloadWidget::DownloadWidget", "url": "classKNS3_1_1DownloadWidget.html#aff7426f15763d53da3be37f9c3387df2", "keyword": "DownloadWidget KNS3::DownloadWidget::DownloadWidget KNS3::DownloadWidget", "text": "It will try to find a appname.knsrc file with the configuration Appname is the name of your application as provided in the about data- parent the parent of the dialog"}, {"type": "function", "name": "KNS3::DownloadWidget::DownloadWidget", "url": "classKNS3_1_1DownloadWidget.html#ac216f776e3ec318340b81e98494f4889", "keyword": "DownloadWidget KNS3::DownloadWidget::DownloadWidget KNS3::DownloadWidget", "text": "Manually specify the name of a knsrc file where the KHotNewStuff configuration can be found configFile the name of the configuration file parent the parent of the dialog"}, {"type": "function", "name": "KNS3::DownloadWidget::~DownloadWidget", "url": "classKNS3_1_1DownloadWidget.html#a2046e7ee6773b715be89f402f457b7f0", "keyword": "KNS3::DownloadWidget::~DownloadWidget KNS3::DownloadWidget", "text": ""}, {"type": "function", "name": "KNS3::DownloadWidget::changedEntries", "url": "classKNS3_1_1DownloadWidget.html#aadf71a68fc832b12a4737e637f11e0ed", "keyword": "changedEntries KNS3::DownloadWidget::changedEntries KNS3::DownloadWidget", "text": "the list of entries"}, {"type": "function", "name": "KNS3::DownloadWidget::installedEntries", "url": "classKNS3_1_1DownloadWidget.html#acd8b8aff71265ab815d2cabc3dee4f92", "keyword": "installedEntries KNS3::DownloadWidget::installedEntries KNS3::DownloadWidget", "text": "the list of entries"}, {"type": "function", "name": "KNS3::DownloadWidget::setTitle", "url": "classKNS3_1_1DownloadWidget.html#ae12ff2e7497b4809245e7b43e4a718e2", "keyword": "setTitle KNS3::DownloadWidget::setTitle KNS3::DownloadWidget", "text": "title the title of the application or category or whatever"}, {"type": "function", "name": "KNS3::DownloadWidget::title", "url": "classKNS3_1_1DownloadWidget.html#a445c5d6c81001393f516a7a4000133d2", "keyword": "title KNS3::DownloadWidget::title KNS3::DownloadWidget", "text": "the current title"}, {"type": "class", "name": "KNS3::Entry", "url": "classKNS3_1_1Entry.html", "keyword": "Entry", "text": "This class provides information about the entries that have been installed while the new stuff dialog was shown It is a minimal version that only gives applications what they need to know 4.4"}, {"type": "enum", "name": "KNS3::Entry::Status", "url": "classKNS3_1_1Entry.html#a5291ab25da39bb8676b7b71d6eac3501", "keyword": "Status KNS3::Entry::Status KNS3::Entry", "text": "An entry will be downloadable from the provider s site prior to the download Once downloaded and installed it will be either installed or updateable implying an out-of-date installation Finally the entry can be deleted and hence show up as downloadable again Entries not taking part in this cycle for example those in upload have an invalid status"}, {"type": "function", "name": "KNS3::Entry::category", "url": "classKNS3_1_1Entry.html#a6b235c8bf91d75c9e997080f02123f02", "keyword": "category KNS3::Entry::category KNS3::Entry", "text": "object category"}, {"type": "function", "name": "KNS3::Entry::changelog", "url": "classKNS3_1_1Entry.html#a85c98ddb133e9afb9a31f8851f436cf9", "keyword": "changelog KNS3::Entry::changelog KNS3::Entry", "text": "the asset s change log 5.23"}, {"type": "function", "name": "KNS3::Entry::id", "url": "classKNS3_1_1Entry.html#ad362596032965b2de281bda82c70d71f", "keyword": "id KNS3::Entry::id KNS3::Entry", "text": "It is guaranteed to be unique for one provider Id and ProviderId together identifiy this entry the id 4.5"}, {"type": "function", "name": "KNS3::Entry::installedFiles", "url": "classKNS3_1_1Entry.html#ac3cda5535cd904d96677e765c56b1076", "keyword": "installedFiles KNS3::Entry::installedFiles KNS3::Entry", "text": "file names"}, {"type": "function", "name": "KNS3::Entry::license", "url": "classKNS3_1_1Entry.html#af6b57d104508b4e4cf4959a3301f993f", "keyword": "license KNS3::Entry::license KNS3::Entry", "text": "object license"}, {"type": "function", "name": "KNS3::Entry::name", "url": "classKNS3_1_1Entry.html#a7acf40627656ad54256c82219644043d", "keyword": "name KNS3::Entry::name KNS3::Entry", "text": "object name"}, {"type": "function", "name": "KNS3::Entry::numberOfComments", "url": "classKNS3_1_1Entry.html#ad1324ba88d154a03d79d686dc5b25ce1", "keyword": "numberOfComments KNS3::Entry::numberOfComments KNS3::Entry", "text": "the number of comments in the asset 5.23"}, {"type": "function", "name": "KNS3::Entry::previewImages", "url": "classKNS3_1_1Entry.html#a3053f9e602192696127b978160aac7d3", "keyword": "previewImages KNS3::Entry::previewImages KNS3::Entry", "text": "a list of full previews of the asset 5.23"}, {"type": "function", "name": "KNS3::Entry::previewThumbnails", "url": "classKNS3_1_1Entry.html#a12f162c82b133ed36c445aa3112b5c6e", "keyword": "previewThumbnails KNS3::Entry::previewThumbnails KNS3::Entry", "text": "a list of urls to small previews to be displayed as thumbnails 5.23"}, {"type": "function", "name": "KNS3::Entry::providerId", "url": "classKNS3_1_1Entry.html#a1613a96ed03734cf7d7bad584296ea74", "keyword": "providerId KNS3::Entry::providerId KNS3::Entry", "text": "the Id of the Provider 4.5"}, {"type": "function", "name": "KNS3::Entry::rating", "url": "classKNS3_1_1Entry.html#a74b5b87340f16f4b06cf98475a3e747a", "keyword": "rating KNS3::Entry::rating KNS3::Entry", "text": "the rating of the asset between 0 and 100 5.23"}, {"type": "function", "name": "KNS3::Entry::shortSummary", "url": "classKNS3_1_1Entry.html#ab3ba8cccdc64dbd9694abd0e3f8a2eb1", "keyword": "shortSummary KNS3::Entry::shortSummary KNS3::Entry", "text": "a short one-line summary of the asset 5.23"}, {"type": "function", "name": "KNS3::Entry::size", "url": "classKNS3_1_1Entry.html#a6303fe87417666895cd4b96723575f52", "keyword": "size KNS3::Entry::size KNS3::Entry", "text": "the advertised disk size of the asset 5.23"}, {"type": "function", "name": "KNS3::Entry::status", "url": "classKNS3_1_1Entry.html#ad6e33b507272dbf91eafc6fea1cfa046", "keyword": "status KNS3::Entry::status KNS3::Entry", "text": "Current status of the entry"}, {"type": "function", "name": "KNS3::Entry::summary", "url": "classKNS3_1_1Entry.html#aa72b49b4f66682e2e0a0cde2830f3fcf", "keyword": "summary KNS3::Entry::summary KNS3::Entry", "text": "object description"}, {"type": "function", "name": "KNS3::Entry::uninstalledFiles", "url": "classKNS3_1_1Entry.html#a2bf534b02f2bba3dd373218121b6baa2", "keyword": "uninstalledFiles KNS3::Entry::uninstalledFiles KNS3::Entry", "text": "file names"}, {"type": "function", "name": "KNS3::Entry::updateVersion", "url": "classKNS3_1_1Entry.html#a672ef5285f52ab65449a34e0483d0c9a", "keyword": "updateVersion KNS3::Entry::updateVersion KNS3::Entry", "text": "the available version If the entry is not updateable it will be the same as version version() 5.23"}, {"type": "function", "name": "KNS3::Entry::url", "url": "classKNS3_1_1Entry.html#a098684eb8debb0df146a17c2d35e2c1d", "keyword": "url KNS3::Entry::url KNS3::Entry", "text": "if available an url identifying the asset 5.23"}, {"type": "function", "name": "KNS3::Entry::version", "url": "classKNS3_1_1Entry.html#aaa573d05ce59ef9cb5f2838224c423d7", "keyword": "version KNS3::Entry::version KNS3::Entry", "text": "object version installedVersion()"}, {"type": "class", "name": "KNS3::UploadDialog", "url": "classKNS3_1_1UploadDialog.html", "keyword": "UploadDialog", "text": "Using this dialog data can easily be uploaded to the Hotstuff servers Maintainer Jeremy Whiting 4.4"}, {"type": "function", "name": "KNS3::UploadDialog::UploadDialog", "url": "classKNS3_1_1UploadDialog.html#a4deac012d49b673fd348138fd566c1f6", "keyword": "UploadDialog KNS3::UploadDialog::UploadDialog KNS3::UploadDialog", "text": "parent the parent window"}, {"type": "function", "name": "KNS3::UploadDialog::UploadDialog", "url": "classKNS3_1_1UploadDialog.html#a0bad15034720c90c622202b3ff27cc38", "keyword": "UploadDialog KNS3::UploadDialog::UploadDialog KNS3::UploadDialog", "text": "parent the parent window"}, {"type": "function", "name": "KNS3::UploadDialog::~UploadDialog", "url": "classKNS3_1_1UploadDialog.html#a0e591afbc281abe129f649ba94fe4cb6", "keyword": "KNS3::UploadDialog::~UploadDialog KNS3::UploadDialog", "text": ""}, {"type": "function", "name": "KNS3::UploadDialog::selectCategory", "url": "classKNS3_1_1UploadDialog.html#a4dd030a26e7d53a50b166d8df060d797", "keyword": "selectCategory KNS3::UploadDialog::selectCategory KNS3::UploadDialog", "text": "The knsrc file may contain multiple upload categories this sets which one is pre-selected It does not add any new category to the list of available categories category the suggested category for the upload"}, {"type": "function", "name": "KNS3::UploadDialog::setChangelog", "url": "classKNS3_1_1UploadDialog.html#a7b1ab411404e640700bb043f0a3d2190", "keyword": "setChangelog KNS3::UploadDialog::setChangelog KNS3::UploadDialog", "text": "The user can still change this version version"}, {"type": "function", "name": "KNS3::UploadDialog::setDescription", "url": "classKNS3_1_1UploadDialog.html#aeee42c7aa191fe0baa20873eb1782840", "keyword": "setDescription KNS3::UploadDialog::setDescription KNS3::UploadDialog", "text": "The user can still change this description"}, {"type": "function", "name": "KNS3::UploadDialog::setPreviewImageFile", "url": "classKNS3_1_1UploadDialog.html#a18922295e0c9f3e26bb9d4f26cfff55e", "keyword": "setPreviewImageFile KNS3::UploadDialog::setPreviewImageFile KNS3::UploadDialog", "text": "The user can still change this number The number of the preview image to set either 1 2 or 3 file A URL to the file to be used as preview image 4.6"}, {"type": "function", "name": "KNS3::UploadDialog::setPrice", "url": "classKNS3_1_1UploadDialog.html#ab707dbd0a377b6c2357e1e586c772997", "keyword": "setPrice KNS3::UploadDialog::setPrice KNS3::UploadDialog", "text": "The user can still change this version version"}, {"type": "function", "name": "KNS3::UploadDialog::setPriceEnabled", "url": "classKNS3_1_1UploadDialog.html#a870b478b05835ae297d7f0c3b4750294", "keyword": "setPriceEnabled KNS3::UploadDialog::setPriceEnabled KNS3::UploadDialog", "text": "enabled enable the price option it is enabled by default 4.5"}, {"type": "function", "name": "KNS3::UploadDialog::setPriceReason", "url": "classKNS3_1_1UploadDialog.html#af970eb865fb90cef2ae113ba919d373f", "keyword": "setPriceReason KNS3::UploadDialog::setPriceReason KNS3::UploadDialog", "text": "The user can still change this version version"}, {"type": "function", "name": "KNS3::UploadDialog::setUploadFile", "url": "classKNS3_1_1UploadDialog.html#a584005c21b1e4b1b330489c66d9a2781", "keyword": "setUploadFile KNS3::UploadDialog::setUploadFile KNS3::UploadDialog", "text": "This has to be set for the dialog to work before displaying the dialog payloadFile the payload data file"}, {"type": "function", "name": "KNS3::UploadDialog::setUploadName", "url": "classKNS3_1_1UploadDialog.html#a37d97a608462bc2d9b4c63880dc21b92", "keyword": "setUploadName KNS3::UploadDialog::setUploadName KNS3::UploadDialog", "text": "The application can suggest a title which can then be edited by the user before uploading The name field will be left empty if no title was set name the suggested name for the upload"}, {"type": "function", "name": "KNS3::UploadDialog::setVersion", "url": "classKNS3_1_1UploadDialog.html#a913096f22b85fdf741224d655b5d6be6", "keyword": "setVersion KNS3::UploadDialog::setVersion KNS3::UploadDialog", "text": "The user can still change this version"}, {"type": "page", "name": "index", "url": "index.html", "keyword": null, "text": "KNewStuff Framework for downloading and sharing additional application data Introduction The KNewStuff library implements collaborative data sharing for applications It uses libattica to support the Open Collaboration Services specification Usage If you are using CMake you need to have or similar in your CMakeLists.txt file and you need to link to KF5::NewStuff Application authors should use KNS3::DownloadDialog for downloading application content For uploading KNS3::UploadDialog is used Related information such as creation of knsrc files can be found on techbase in the Get Hot New Stuff tutorials"}]}