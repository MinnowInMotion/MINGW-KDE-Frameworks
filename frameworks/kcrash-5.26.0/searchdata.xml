<?xml version="1.0" encoding="UTF-8"?>
<add>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.cpp</field>
    <field name="url">kcrash_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_DECLARE_LOGGING_CATEGORY LOG_KCRASH Q_LOGGING_CATEGORY LOG_KCRASH QtWarningMsg Q_LOGGING_CATEGORY LOG_KCRASH cmd arg_length kcrash_launcher_header</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.cpp</field>
    <field name="url">kcrash_8cpp_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text">KCrash KCRASH_EXPORT loadedByKdeinit setApplicationFilePath QString filePath KCrash::HandlerType s_emergencySaveFunction KCrash::HandlerType s_crashHandler s_appName s_autoRestartCommand s_appPath s_autoRestartArgc s_autoRestartCommandLine s_drkonqiPath s_kdeinit_socket_file KCrash::CrashFlags s_flags s_launchDrKonqi kcrashInitialize KCrash::initialize Q_COREAPP_STARTUP_FUNCTION kcrashInitialize KCrash setApplicationFilePath QString filePath startProcess argc argv waitAndExit LONG WINAPI win32UnhandledExceptionFilter _EXCEPTION_POINTERS exceptionInfo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.cpp</field>
    <field name="url">kcrash_8cpp_source.html#l00125</field>
    <field name="keywords"></field>
    <field name="text">KCrash::initialize s_launchDrKonqi QStringList args QCoreApplication::arguments qEnvironmentVariableIsSet qEnvironmentVariableIsSet KCrash::setDrKonqiEnabled KCrash::setApplicationFilePath QCoreApplication::applicationFilePath</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.cpp</field>
    <field name="url">kcrash_8cpp_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text">KCrash::setEmergencySaveFunction HandlerType saveFunction s_emergencySaveFunction saveFunction s_emergencySaveFunction s_crashHandler setCrashHandler defaultCrashHandler KCrash::HandlerType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.cpp</field>
    <field name="url">kcrash_8cpp_source.html#l00155</field>
    <field name="keywords"></field>
    <field name="text">KCrash::emergencySaveFunction s_emergencySaveFunction KCrashDelaySetHandler QObject KCrashDelaySetHandler startTimer timerEvent QTimerEvent event Q_DECL_OVERRIDE s_crashHandler KCrash::setCrashHandler KCrash::defaultCrashHandler killTimer event timerId deleteLater</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.cpp</field>
    <field name="url">kcrash_8cpp_source.html#l00185</field>
    <field name="keywords"></field>
    <field name="text">KCrash::setFlags KCrash::CrashFlags flags s_flags flags s_flags AutoRestart s_crashHandler qEnvironmentVariableIsSet KCrashDelaySetHandler setCrashHandler defaultCrashHandler KCrash::setApplicationFilePath QString filePath pos filePath lastIndexOf QLatin1Char QString appName filePath mid pos QString appPath filePath left pos s_appName qstrdup QFile::encodeName appName constData s_appPath qstrdup QFile::encodeName appPath constData s_autoRestartCommand s_autoRestartCommand qstrdup QFile::encodeName filePath constData QStringList args QCoreApplication::arguments args filePath s_autoRestartCommandLine s_autoRestartArgc args count s_autoRestartCommandLine args count i i args count i s_autoRestartCommandLine i qstrdup QFile::encodeName args at i constData s_autoRestartCommandLine args count</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.cpp</field>
    <field name="url">kcrash_8cpp_source.html#l00224</field>
    <field name="keywords"></field>
    <field name="text">KCrash::setDrKonqiEnabled enabled launchDrKonqi enabled s_launchDrKonqi launchDrKonqi s_launchDrKonqi launchDrKonqi s_launchDrKonqi s_drkonqiPath QStringList paths QStringList QFile::decodeName qgetenv split QLatin1Char QString::SkipEmptyParts QCoreApplication::applicationDirPath QLibraryInfo::location QLibraryInfo::LibraryExecutablesPath QFile::decodeName CMAKE_INSTALL_FULL_LIBEXECDIR QString exec QStandardPaths::findExecutable QStringLiteral paths exec isEmpty qCDebug LOG_KCRASH paths s_launchDrKonqi s_drkonqiPath qstrdup qPrintable exec s_launchDrKonqi s_crashHandler setCrashHandler defaultCrashHandler</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.cpp</field>
    <field name="url">kcrash_8cpp_source.html#l00253</field>
    <field name="keywords"></field>
    <field name="text">KCrash::isDrKonqiEnabled s_launchDrKonqi getDisplay display result screen colon i display display getenv display display display result malloc strlen display result NULL NULL strcpy result display screen strrchr result colon strrchr result screen screen colon screen i strchr result i i strchr result i result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.cpp</field>
    <field name="url">kcrash_8cpp_source.html#l00297</field>
    <field name="keywords"></field>
    <field name="text">KCrash::setCrashHandler HandlerType handler s_kdeinit_socket_file display getDisplay QString socketFileName QStringLiteral arg QLatin1String display free display QByteArray socketName QFile::encodeName QStandardPaths::writableLocation QStandardPaths::RuntimeLocation QLatin1Char socketFileName s_kdeinit_socket_file qstrdup socketName constData LPTOP_LEVEL_EXCEPTION_FILTER s_previousExceptionFilter NULL handler s_previousExceptionFilter s_previousExceptionFilter SetUnhandledExceptionFilter KCrash::win32UnhandledExceptionFilter handler s_previousExceptionFilter SetUnhandledExceptionFilter s_previousExceptionFilter s_previousExceptionFilter NULL handler handler SIG_DFL sigset_t mask sigemptyset mask signal SIGSEGV handler sigaddset mask SIGSEGV signal SIGBUS handler sigaddset mask SIGBUS signal SIGFPE handler sigaddset mask SIGFPE signal SIGILL handler sigaddset mask SIGILL signal SIGABRT handler sigaddset mask SIGABRT sigprocmask SIG_UNBLOCK mask s_crashHandler handler KCrash::HandlerType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.cpp</field>
    <field name="url">kcrash_8cpp_source.html#l00354</field>
    <field name="keywords"></field>
    <field name="text">KCrash::crashHandler s_crashHandler closeAllFDs rlimit rlp getrlimit RLIMIT_NOFILE rlp i i int rlp rlim_cur i close i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.cpp</field>
    <field name="url">kcrash_8cpp_source.html#l00373</field>
    <field name="keywords"></field>
    <field name="text">KCrash::defaultCrashHandler sig crashRecursionCounter crashRecursionCounter signal SIGALRM SIG_DFL alarm void printstack crashRecursionCounter s_emergencySaveFunction s_emergencySaveFunction sig s_flags AutoRestart s_autoRestartCommand QThread::sleep startProcess s_autoRestartArgc const_cast&lt;const char **&gt; s_autoRestartCommandLine crashRecursionCounter s_flags KeepFDs closeAllFDs QX11Info::display close ConnectionNumber QX11Info::display crashRecursionCounter fprintf stderr crashRecursionCounter fprintf stderr s_appName s_appName s_appPath s_appPath QCoreApplication::applicationPid fprintf stderr i s_autoRestartCommandLine i i fprintf stderr s_autoRestartCommandLine i fprintf stderr fprintf stderr s_appName s_appName s_launchDrKonqi setCrashHandler sig argv i argv i s_drkonqiPath QByteArray platformName QGuiApplication::platformName toUtf8 platformName isEmpty argv i argv i platformName constData platformName QByteArrayLiteral argv i QX11Info::display argv i XDisplayString QX11Info::display argv i getenv argv i argv i s_appName s_appName loadedByKdeinit argv i s_appPath s_appPath argv i argv i s_appPath sigtxt sprintf sigtxt sig argv i argv i sigtxt pidtxt sprintf pidtxt QCoreApplication::applicationPid argv i argv i pidtxt KAboutData about KAboutData::applicationDataPointer about about internalVersion argv i argv i about internalVersion about internalProgramName argv i argv i about internalProgramName about internalBugAddress argv i argv i about internalBugAddress QByteArray startupId KStartupInfo::startupId startupId isNull argv i argv i startupId constData s_flags SaferDialog argv i s_flags AutoRestart s_autoRestartCommand argv i threadId sprintf threadId GetCurrentThreadId argv i argv i threadId argv i NULL startProcess i argv crashRecursionCounter fprintf stderr _exit KCrash::startProcess argc argv waitAndExit QString cmdLine i i argc i cmdLine append QLatin1Char cmdLine append QFile::decodeName argv i cmdLine append QStringLiteral PROCESS_INFORMATION procInfo STARTUPINFOW startupInfo STARTUPINFO ulong CW_USEDEFAULT ulong CW_USEDEFAULT ulong CW_USEDEFAULT ulong CW_USEDEFAULT success CreateProcess cmdLine utf16 NULL NULL CREATE_UNICODE_ENVIRONMENT NULL NULL startupInfo procInfo success waitAndExit WaitForSingleObject procInfo hProcess INFINITE _exit LONG WINAPI KCrash::win32UnhandledExceptionFilter _EXCEPTION_POINTERS exceptionInfo HANDLE hMapFile NULL hMapFile CreateFileMapping INVALID_HANDLE_VALUE NULL PAGE_READWRITE CONTEXT TEXT LPCTSTR pBuf NULL pBuf LPCTSTR MapViewOfFile hMapFile FILE_MAP_ALL_ACCESS CONTEXT CopyMemory PVOID pBuf exceptionInfo ContextRecord CONTEXT s_crashHandler s_crashHandler exceptionInfo ExceptionRecord ExceptionCode CloseHandle hMapFile EXCEPTION_EXECUTE_HANDLER startProcessInternal argc argv waitAndExit directly pid_t startFromKdeinit argc argv pid_t startDirectly argv write_socket sock buffer len read_socket sock buffer len openSocket KCrash::startProcess argc argv waitAndExit startDirectly s_flags AlwaysDirectly startDirectly startProcessInternal argc argv waitAndExit startDirectly startProcessInternal argc argv waitAndExit startProcessInternal argc argv waitAndExit directly fprintf stderr argv directly pid_t pid directly startDirectly argv startFromKdeinit argc argv pid waitAndExit alarm directly waitpid NULL pid prctl PR_SET_PTRACER pid kill pid sleep _exit pid pid_t startFromKdeinit argc argv socket openSocket socket kcrash_launcher_header header header cmd LAUNCHER_EXEC_NEW BUFSIZE CWDSIZE buffer BUFSIZE CWDSIZE pos argcl argc memcpy buffer pos argcl argcl pos argcl i i argc i len strlen argv i pos len BUFSIZE fprintf stderr memcpy buffer pos argv i len pos len env memcpy buffer pos env env pos env s_envVar len strlen s_envVar memcpy buffer pos s_envVar len pos len avoid_loops memcpy buffer pos avoid_loops avoid_loops pos avoid_loops cwd CWDSIZE getcwd cwd CWDSIZE len strlen cwd memcpy buffer pos cwd len pos len header arg_length pos write_socket socket header header write_socket socket buffer pos read_socket socket header header header cmd LAUNCHER_OK pid read_socket socket pid pid pid_t pid pid_t startDirectly argv pid_t pid fork pid fprintf stderr errno setgroups setgid getgid setuid getuid _exit closeAllFDs setenv execvp argv const_cast&lt; char ** &gt; argv fprintf stderr errno _exit pid write_socket sock buffer len ssize_t result bytes_left len bytes_left result write sock buffer bytes_left result buffer result bytes_left result result result errno EINTR errno EAGAIN read_socket sock buffer len ssize_t result bytes_left len bytes_left result read sock buffer bytes_left result buffer result bytes_left result result result errno EINTR errno EAGAIN openSocket sockaddr_un server s_kdeinit_socket_file strlen s_kdeinit_socket_file server sun_path fprintf stderr s_kdeinit_socket_file s socket PF_UNIX SOCK_STREAM s perror server sun_family AF_UNIX strcpy server sun_path s_kdeinit_socket_file printf s_kdeinit_socket_file kde_socklen_t socklen server connect s sockaddr server socklen perror close s s</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.h</field>
    <field name="url">kcrash_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QString KCrash KCRASH_EXPORT initialize KCRASH_EXPORT defaultCrashHandler signal</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.h</field>
    <field name="url">kcrash_8h_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text">void HandlerType int KCRASH_EXPORT setCrashHandler HandlerType handler defaultCrashHandler KCRASH_EXPORT HandlerType crashHandler KCRASH_EXPORT setEmergencySaveFunction HandlerType saveFunction KCRASH_EXPORT HandlerType emergencySaveFunction</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.h</field>
    <field name="url">kcrash_8h_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text">CrashFlag</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.h</field>
    <field name="url">kcrash_8h_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">KeepFDs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.h</field>
    <field name="url">kcrash_8h_source.html#l00122</field>
    <field name="keywords"></field>
    <field name="text">SaferDialog</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.h</field>
    <field name="url">kcrash_8h_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text">AlwaysDirectly</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcrash.h</field>
    <field name="url">kcrash_8h_source.html#l00124</field>
    <field name="keywords"></field>
    <field name="text">AutoRestart Q_DECLARE_FLAGS CrashFlags CrashFlag KCRASH_EXPORT setFlags KCrash::CrashFlags flags KCRASH_EXPORT setDrKonqiEnabled enabled KCRASH_EXPORT isDrKonqiEnabled Q_DECLARE_OPERATORS_FOR_FLAGS KCrash::CrashFlags</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">KCrash</field>
    <field name="url">namespaceKCrash.html</field>
    <field name="keywords">KCrash</field>
    <field name="text">It allows you to set a crash handler function that will be called when your application crashes and also provides a default crash handler that implements the following functionality Launches the KDE crash display application DrKonqi to let the user report the bug and/or debug it Calls an emergency save function that you can set with setEmergencySaveFunction() to attempt to save the application s data Autorestarts your application All the above features are optional and you need to enable them explicitly By default the defaultCrashHandler() will not do anything However if you are using KApplication it will by default enable launching DrKonqi on crashes unless the nocrashhandler argument was passed on the command line or the environment variable KDE_DEBUG is set to any value</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">KCrash::HandlerType</field>
    <field name="args">)(int)</field>
    <field name="url">namespaceKCrash.html#a600b72c20ed993d331fc7af16eab35f6</field>
    <field name="keywords">HandlerType KCrash::HandlerType KCrash</field>
    <field name="text">The function s argument is the number of the signal</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KCrash::CrashFlag</field>
    <field name="url">namespaceKCrash.html#acc3079fc30842fb82fa69d9d82c17b57</field>
    <field name="keywords">CrashFlag KCrash::CrashFlag KCrash</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCrash::KeepFDs</field>
    <field name="url">namespaceKCrash.html#acc3079fc30842fb82fa69d9d82c17b57adff28e937b35b09fba8155f6ad0ff57e</field>
    <field name="keywords">KeepFDs KCrash::KeepFDs KCrash</field>
    <field name="text">don t close all file descriptors immediately</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCrash::SaferDialog</field>
    <field name="url">namespaceKCrash.html#acc3079fc30842fb82fa69d9d82c17b57a47e4bc442cd2e42b9e6991188e2af839</field>
    <field name="keywords">SaferDialog KCrash::SaferDialog KCrash</field>
    <field name="text">start DrKonqi without arbitrary disk access</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCrash::AlwaysDirectly</field>
    <field name="url">namespaceKCrash.html#acc3079fc30842fb82fa69d9d82c17b57a0abed225c59084baa1858c2981b57e14</field>
    <field name="keywords">AlwaysDirectly KCrash::AlwaysDirectly KCrash</field>
    <field name="text">never try to to start DrKonqi via kdeinit Use fork() and exec() instead</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCrash::AutoRestart</field>
    <field name="url">namespaceKCrash.html#acc3079fc30842fb82fa69d9d82c17b57a37954f0d0919cfa8db1b33ceae697759</field>
    <field name="keywords">AutoRestart KCrash::AutoRestart KCrash</field>
    <field name="text">autorestart this application Only sensible for KUniqueApplications 4.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCrash::crashHandler</field>
    <field name="args">()</field>
    <field name="url">namespaceKCrash.html#a0f43ecae9f721f26f5d94e8f28b58df6</field>
    <field name="keywords">crashHandler KCrash::crashHandler KCrash</field>
    <field name="text">the crash handler</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCrash::defaultCrashHandler</field>
    <field name="args">(int signal)</field>
    <field name="url">namespaceKCrash.html#a1858e03d7b38ca03f575265b1010fed8</field>
    <field name="keywords">defaultCrashHandler KCrash::defaultCrashHandler KCrash</field>
    <field name="text">Do not call this function directly Instead use setCrashHandler() to set it as your application s crash handler signal the signal number If you implement your own crash handler you will have to call this function from your implementation if you want to use the features of this namespace</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCrash::emergencySaveFunction</field>
    <field name="args">()</field>
    <field name="url">namespaceKCrash.html#a869171c318888de63f9a47aec991441c</field>
    <field name="keywords">emergencySaveFunction KCrash::emergencySaveFunction KCrash</field>
    <field name="text">the emergency save function</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCrash::initialize</field>
    <field name="args">()</field>
    <field name="url">namespaceKCrash.html#af3cbae2933366133fd4e666568521232</field>
    <field name="keywords">initialize KCrash::initialize KCrash</field>
    <field name="text">This does nothing if is set Call this in your main() to ensure that the crash handler is always launched 5.15</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCrash::isDrKonqiEnabled</field>
    <field name="args">()</field>
    <field name="url">namespaceKCrash.html#acabea15ec5f489a79737172c0cde581d</field>
    <field name="keywords">isDrKonqiEnabled KCrash::isDrKonqiEnabled KCrash</field>
    <field name="text">4.5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCrash::setCrashHandler</field>
    <field name="args">(HandlerType handler=defaultCrashHandler)</field>
    <field name="url">namespaceKCrash.html#a060bea066fee2e0fe824e70ed1dbdd8e</field>
    <field name="keywords">setCrashHandler KCrash::setCrashHandler KCrash</field>
    <field name="text">A crash occurs when one of the following signals is caught SIGSEGV SIGBUS SIGFPE SIGILL SIGABRT handler this can be one of null in which case signal catching is disabled by setting the signal handler for the crash signals to SIG_DFL a user defined function in the form static if in a class void myCrashHandler(int) if handler is omitted the default crash handler is installed If you use setDrKonqiEnabled(true) setEmergencySaveFunction(myfunc) or setFlags(AutoRestart) you do not need to call this function explicitly The default crash handler is automatically installed by those functions if needed However if you set a custom crash handler those functions will not change it</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCrash::setDrKonqiEnabled</field>
    <field name="args">(bool enabled)</field>
    <field name="url">namespaceKCrash.html#a48919f4ca45cf8fff17e8a8c429f8df7</field>
    <field name="keywords">setDrKonqiEnabled KCrash::setDrKonqiEnabled KCrash</field>
    <field name="text">By default launching DrKonqi is enabled when QCoreApplication is created To disable it It is the crash handler s responsibility to launch DrKonqi Therefore if no crash handler is set this method also installs the default crash handler to ensure that DrKonqi will be launched 4.5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCrash::setEmergencySaveFunction</field>
    <field name="args">(HandlerType saveFunction=0)</field>
    <field name="url">namespaceKCrash.html#a51a59b77f8a1dcf95c9bc030d141b027</field>
    <field name="keywords">setEmergencySaveFunction KCrash::setEmergencySaveFunction KCrash</field>
    <field name="text">It is the crash handler s responsibility to call this function Therefore if no crash handler is set the default crash handler is installed to ensure the save function will be called saveFunction the handler to install</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCrash::setFlags</field>
    <field name="args">(KCrash::CrashFlags flags)</field>
    <field name="url">namespaceKCrash.html#a53c777b1a3c6e01f4f71a4e51e02f845</field>
    <field name="keywords">setFlags KCrash::setFlags KCrash</field>
    <field name="text">flags ORed together CrashFlags</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">index</field>
    <field name="url">index.html</field>
    <field name="keywords"></field>
    <field name="text">KCrash Graceful handling of application crashes Introduction KCrash provides support for intercepting and handling application crashes</field>
  </doc>
</add>
