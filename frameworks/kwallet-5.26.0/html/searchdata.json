{"name": "kwallet-5.26.0", "fancyname": "KWallet", "docfields": [{"type": "namespace", "name": "GpgME", "url": "namespaceGpgME.html", "keyword": "GpgME", "text": "This library is free software you can redistribute it and/or modify it under the terms of the GNU Library General Public License version 2 as published by the Free Software Foundation This library is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU Library General Public License for more details You should have received a copy of the GNU Library General Public License along with this library see the file COPYING.LIB If not write to the Free Software Foundation Inc 51 Franklin Street Fifth Floor Boston MA 02110-1301 USA"}, {"type": "namespace", "name": "KWallet", "url": "namespaceKWallet.html", "keyword": "KWallet", "text": "This library is free software you can redistribute it and/or modify it under the terms of the GNU Library General Public License version 2 as published by the Free Software Foundation This library is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU Library General Public License for more details You should have received a copy of the GNU Library General Public License along with this library see the file COPYING.LIB If not write to the Free Software Foundation Inc 51 Franklin Street Fifth Floor Boston MA 02110-1301 USA"}, {"type": "enum", "name": "KWallet::BackendCipherType", "url": "namespaceKWallet.html#a1d12dae1e1df4225120626842392ec8f", "keyword": "BackendCipherType KWallet::BackendCipherType KWallet", "text": ""}, {"type": "enumvalue", "name": "KWallet::BACKEND_CIPHER_BLOWFISH", "url": "namespaceKWallet.html#a1d12dae1e1df4225120626842392ec8faaa02fb36d0d0c619a69103af4e434366", "keyword": "BACKEND_CIPHER_BLOWFISH KWallet::BACKEND_CIPHER_BLOWFISH KWallet", "text": "this is used by freshly allocated wallets"}, {"type": "class", "name": "KWallet::MD5Digest", "url": "classKWallet_1_1MD5Digest.html", "keyword": "MD5Digest", "text": ""}, {"type": "class", "name": "KWallet::Wallet", "url": "classKWallet_1_1Wallet.html", "keyword": "Wallet", "text": "This class implements a generic system-wide Wallet for KDE This is the ONLY public interface George Staikos KDE Wallet Class"}, {"type": "signal", "name": "KWallet::Wallet::folderListUpdated", "url": "classKWallet_1_1Wallet.html#a6b4f07c045d7650ce30aa8df584ca975", "keyword": "folderListUpdated KWallet::Wallet::folderListUpdated KWallet::Wallet", "text": ""}, {"type": "signal", "name": "KWallet::Wallet::folderRemoved", "url": "classKWallet_1_1Wallet.html#abe99da68e094ad218c302c0851692980", "keyword": "folderRemoved KWallet::Wallet::folderRemoved KWallet::Wallet", "text": "folder The folder that was removed"}, {"type": "signal", "name": "KWallet::Wallet::folderUpdated", "url": "classKWallet_1_1Wallet.html#a2b0129c74641130020b7b95a56539580", "keyword": "folderUpdated KWallet::Wallet::folderUpdated KWallet::Wallet", "text": "folder The folder that was updated"}, {"type": "signal", "name": "KWallet::Wallet::walletClosed", "url": "classKWallet_1_1Wallet.html#a697ff23f1fbc85bd6e18f5e6bb078e01", "keyword": "walletClosed KWallet::Wallet::walletClosed KWallet::Wallet", "text": ""}, {"type": "signal", "name": "KWallet::Wallet::walletOpened", "url": "classKWallet_1_1Wallet.html#aef7f7a9d3f2f1e81bb32d1c025e2a799", "keyword": "walletOpened KWallet::Wallet::walletOpened KWallet::Wallet", "text": "success True if the wallet was opened successfully"}, {"type": "function", "name": "KWallet::Wallet::~Wallet", "url": "classKWallet_1_1Wallet.html#a443dc95f50e4a9d8e6d5282e13fedcde", "keyword": "KWallet::Wallet::~Wallet KWallet::Wallet", "text": "Closes the wallet"}, {"type": "function", "name": "KWallet::Wallet::createFolder", "url": "classKWallet_1_1Wallet.html#a13ea912cda6bb610c3888dad2fd52989", "keyword": "createFolder KWallet::Wallet::createFolder KWallet::Wallet", "text": "f the name of the folder to create Returns true if the folder was successfully created"}, {"type": "function", "name": "KWallet::Wallet::currentFolder", "url": "classKWallet_1_1Wallet.html#a5897988799772b275b1ce6b7f96aff5d", "keyword": "currentFolder KWallet::Wallet::currentFolder KWallet::Wallet", "text": "If the folder name is empty it is working in the global folder which is valid but discouraged Returns the current working folder"}, {"type": "function", "name": "KWallet::Wallet::entryList", "url": "classKWallet_1_1Wallet.html#a8f1b80deaefb2aafc956a9dedf3110f8", "keyword": "entryList KWallet::Wallet::entryList KWallet::Wallet", "text": "Returns an empty list if the wallet is not open or if the folder is empty"}, {"type": "function", "name": "KWallet::Wallet::entryType", "url": "classKWallet_1_1Wallet.html#ac70609a0f05f136c45bb6ca516f9fe00", "keyword": "entryType KWallet::Wallet::entryType KWallet::Wallet", "text": "key The key to look up Returns an enumerated type representing the type of the entry"}, {"type": "function", "name": "KWallet::Wallet::folderList", "url": "classKWallet_1_1Wallet.html#a41a0c9ce1bb132ea65f57152d607f719", "keyword": "folderList KWallet::Wallet::folderList KWallet::Wallet", "text": "Returns an empty list if the wallet is not open"}, {"type": "function", "name": "KWallet::Wallet::hasEntry", "url": "classKWallet_1_1Wallet.html#a37950be8a2712446a7a86dca489499d2", "keyword": "hasEntry KWallet::Wallet::hasEntry KWallet::Wallet", "text": "key The key to search for Returns true if the folder contains key"}, {"type": "function", "name": "KWallet::Wallet::hasFolder", "url": "classKWallet_1_1Wallet.html#a75593f21796f7423405dea3a65b74dfe", "keyword": "hasFolder KWallet::Wallet::hasFolder KWallet::Wallet", "text": "f the name of the folder to check for Returns true if the folder exists in the wallet"}, {"type": "function", "name": "KWallet::Wallet::isOpen", "url": "classKWallet_1_1Wallet.html#a4acf596db7d79c10cf2778b6892d4d5f", "keyword": "isOpen KWallet::Wallet::isOpen KWallet::Wallet", "text": "Returns true if the wallet handle is valid and open"}, {"type": "function", "name": "KWallet::Wallet::lockWallet", "url": "classKWallet_1_1Wallet.html#a17fb06745ae8c526baeff2b41fb3c1f0", "keyword": "lockWallet KWallet::Wallet::lockWallet KWallet::Wallet", "text": "It will disconnect all applications using the wallet Returns 0 on success non-zero on error"}, {"type": "function", "name": "KWallet::Wallet::readEntry", "url": "classKWallet_1_1Wallet.html#a8287b46482402cf70d6d8831e4c06473", "keyword": "readEntry KWallet::Wallet::readEntry KWallet::Wallet", "text": "The entry format is unknown except that it is either a QByteArray or a QDataStream which effectively means that it is anything key The key of the entry to read value A buffer to fill with the value Returns 0 on success non-zero on error"}, {"type": "function", "name": "KWallet::Wallet::readEntryList", "url": "classKWallet_1_1Wallet.html#a0d357348d5687dc66f0ecfaf2702f997", "keyword": "readEntryList KWallet::Wallet::readEntryList KWallet::Wallet", "text": "The entry format is unknown except that it is either a QByteArray or a QDataStream which effectively means that it is anything key The key of the entry to read Wildcards are supported value A buffer to fill with the value The key in the map is the entry key Returns 0 on success non-zero on error"}, {"type": "function", "name": "KWallet::Wallet::readMap", "url": "classKWallet_1_1Wallet.html#aa0b5e38d102373e501463daa9c648082", "keyword": "readMap KWallet::Wallet::readMap KWallet::Wallet", "text": "key The key of the entry to read value A map buffer to fill with the value Returns 0 on success non-zero on error Will return an error if the key was not originally written as a map"}, {"type": "function", "name": "KWallet::Wallet::readMapList", "url": "classKWallet_1_1Wallet.html#a937a4191ec43f84798ab5e3e2ca6ad8e", "keyword": "readMapList KWallet::Wallet::readMapList KWallet::Wallet", "text": "key The key of the entry to read Wildcards are supported value A buffer to fill with the value The key in the map is the entry key Returns 0 on success non-zero on error Will return an error if the key was not originally written as a map"}, {"type": "function", "name": "KWallet::Wallet::readPassword", "url": "classKWallet_1_1Wallet.html#ac8d99286d1b1be392fe9a4ec540388ac", "keyword": "readPassword KWallet::Wallet::readPassword KWallet::Wallet", "text": "key The key of the entry to read value A password buffer to fill with the value Returns 0 on success non-zero on error Will return an error if the key was not originally written as a password"}, {"type": "function", "name": "KWallet::Wallet::readPasswordList", "url": "classKWallet_1_1Wallet.html#a6efc9a0c696b662be1528094311b6078", "keyword": "readPasswordList KWallet::Wallet::readPasswordList KWallet::Wallet", "text": "key The key of the entry to read Wildcards are supported value A buffer to fill with the value The key in the map is the entry key Returns 0 on success non-zero on error Will return an error if the key was not originally written as a password"}, {"type": "function", "name": "KWallet::Wallet::removeEntry", "url": "classKWallet_1_1Wallet.html#a24f8b5ae0670de3d1ec57ca1194047f0", "keyword": "removeEntry KWallet::Wallet::removeEntry KWallet::Wallet", "text": "key The key to remove Returns 0 on success non-zero on error"}, {"type": "function", "name": "KWallet::Wallet::removeFolder", "url": "classKWallet_1_1Wallet.html#aaa0b8a3b0eeb3cfb221581ae49c81ceb", "keyword": "removeFolder KWallet::Wallet::removeFolder KWallet::Wallet", "text": "f the name of the folder to remove Returns true if the folder was successfully removed"}, {"type": "function", "name": "KWallet::Wallet::renameEntry", "url": "classKWallet_1_1Wallet.html#a0f0dee017afd3b4d2ed05ae35d0af034", "keyword": "renameEntry KWallet::Wallet::renameEntry KWallet::Wallet", "text": "oldName The original key of the entry newName The new key of the entry Returns 0 on success non-zero on error"}, {"type": "function", "name": "KWallet::Wallet::requestChangePassword", "url": "classKWallet_1_1Wallet.html#aa143f30c1dda14a75c0f5b0ec4458be6", "keyword": "requestChangePassword KWallet::Wallet::requestChangePassword KWallet::Wallet", "text": "w The window id to associate any dialogs with You can pass 0 if you don t have a window the password dialog should associate with"}, {"type": "function", "name": "KWallet::Wallet::setFolder", "url": "classKWallet_1_1Wallet.html#ae3da6744454ec13fb52f41731b215765", "keyword": "setFolder KWallet::Wallet::setFolder KWallet::Wallet", "text": "The folder must exist or this call will fail Create a folder with createFolder() f the name of the folder to make the working folder Returns true if the folder was successfully set"}, {"type": "function", "name": "KWallet::Wallet::sync", "url": "classKWallet_1_1Wallet.html#a130cd4fc92605d7e237d1105a9ef08c5", "keyword": "sync KWallet::Wallet::sync KWallet::Wallet", "text": "You don t normally need to use this It happens automatically on close Returns 0 on success non-zero on error"}, {"type": "function", "name": "KWallet::Wallet::walletName", "url": "classKWallet_1_1Wallet.html#ae3715e8f2018d84c27da165476bc3a70", "keyword": "walletName KWallet::Wallet::walletName KWallet::Wallet", "text": ""}, {"type": "function", "name": "KWallet::Wallet::writeEntry", "url": "classKWallet_1_1Wallet.html#a6d5989cc8fbe7e304a44dadf7de3e635", "keyword": "writeEntry KWallet::Wallet::writeEntry KWallet::Wallet", "text": "Be careful with this it could cause inconsistency in the future since you can put an arbitrary entry type in place key The key of the new entry value The value of the entry entryType The type of the entry Returns 0 on success non-zero on error"}, {"type": "function", "name": "KWallet::Wallet::writeEntry", "url": "classKWallet_1_1Wallet.html#a459ca4c60660976ebcfb53389c015df7", "keyword": "writeEntry KWallet::Wallet::writeEntry KWallet::Wallet", "text": "key The key of the new entry value The value of the entry Returns 0 on success non-zero on error"}, {"type": "function", "name": "KWallet::Wallet::writeMap", "url": "classKWallet_1_1Wallet.html#af859025af4a612a25e24724c9cdada52", "keyword": "writeMap KWallet::Wallet::writeMap KWallet::Wallet", "text": "key The key of the new entry value The value of the map Returns 0 on success non-zero on error"}, {"type": "function", "name": "KWallet::Wallet::writePassword", "url": "classKWallet_1_1Wallet.html#ad855eaa7974e230a5d26abb74fbbc89d", "keyword": "writePassword KWallet::Wallet::writePassword KWallet::Wallet", "text": "key The key of the new entry value The value of the password Returns 0 on success non-zero on error"}, {"type": "function", "name": "KWallet::Wallet::changePassword", "url": "classKWallet_1_1Wallet.html#a76bda5b7832c205296c15b0b84f510a6", "keyword": "changePassword KWallet::Wallet::changePassword KWallet::Wallet", "text": "name The wallet to change the password of w The window id to associate any dialogs with You can pass 0 if you don t have a window the password dialog should associate with"}, {"type": "function", "name": "KWallet::Wallet::closeWallet", "url": "classKWallet_1_1Wallet.html#a31165700f48d8deb3c8568ff551c5c25", "keyword": "closeWallet KWallet::Wallet::closeWallet KWallet::Wallet", "text": "The wallet will only be closed if it is open but not in use rare or if it is forced closed name The name of the wallet to close force Set true to force the wallet closed even if it is in use by others Returns 0 on success non-zero on error"}, {"type": "function", "name": "KWallet::Wallet::deleteWallet", "url": "classKWallet_1_1Wallet.html#a6a01ec7d9c1caf5d45150202b611ff92", "keyword": "deleteWallet KWallet::Wallet::deleteWallet KWallet::Wallet", "text": "The wallet will be forced closed first name The name of the wallet to delete Returns 0 on success non-zero on error"}, {"type": "function", "name": "KWallet::Wallet::disconnectApplication", "url": "classKWallet_1_1Wallet.html#aa95980714151651d98b40b4572681d5b", "keyword": "disconnectApplication KWallet::Wallet::disconnectApplication KWallet::Wallet", "text": "wallet The name of the wallet to disconnect app The name of the application to disconnect Returns true on success false on error"}, {"type": "function", "name": "KWallet::Wallet::folderDoesNotExist", "url": "classKWallet_1_1Wallet.html#ac0e1b26496c6316b1a02c71063d997b3", "keyword": "folderDoesNotExist KWallet::Wallet::folderDoesNotExist KWallet::Wallet", "text": "This does not require decryption of the wallet This is a handy optimization to avoid prompting the user if your data is certainly not in the wallet wallet The wallet to look in folder The folder to look up Returns true if the folder does NOT exist in the wallet or the wallet does not exist"}, {"type": "function", "name": "KWallet::Wallet::FormDataFolder", "url": "classKWallet_1_1Wallet.html#af644bc9318e68cc09b569a762daa3597", "keyword": "FormDataFolder KWallet::Wallet::FormDataFolder KWallet::Wallet", "text": "It is automatically created when a wallet is created but the user may still delete it so you should check for its existence and recreate it if necessary and desired"}, {"type": "function", "name": "KWallet::Wallet::isEnabled", "url": "classKWallet_1_1Wallet.html#aa4967b716b8f2be3647e1725e4b912e8", "keyword": "isEnabled KWallet::Wallet::isEnabled KWallet::Wallet", "text": "Normally you do not need to use this because openWallet() will just fail Returns true if the wallet enabled else false"}, {"type": "function", "name": "KWallet::Wallet::isOpen", "url": "classKWallet_1_1Wallet.html#a82ec0560e99f0ea21f524de8edbca77f", "keyword": "isOpen KWallet::Wallet::isOpen KWallet::Wallet", "text": "name The name of the wallet to check Returns true if the wallet is open else false"}, {"type": "function", "name": "KWallet::Wallet::isUsingKSecretsService", "url": "classKWallet_1_1Wallet.html#acbc3dddd5a1cdd50f94d399fcf1aacab", "keyword": "isUsingKSecretsService KWallet::Wallet::isUsingKSecretsService KWallet::Wallet", "text": "Returns true if the KSecretsService infrastructure is active"}, {"type": "function", "name": "KWallet::Wallet::keyDoesNotExist", "url": "classKWallet_1_1Wallet.html#af480db9d17fdf17c94a333bacdf22785", "keyword": "keyDoesNotExist KWallet::Wallet::keyDoesNotExist KWallet::Wallet", "text": "This does not require decryption of the wallet This is a handy optimization to avoid prompting the user if your data is certainly not in the wallet wallet The wallet to look in folder The folder to look in key The key to look up Returns true if the key does NOT exist in the wallet or the folder or wallet does not exist"}, {"type": "function", "name": "KWallet::Wallet::LocalWallet", "url": "classKWallet_1_1Wallet.html#ab1b58623275af43a137859e13a0f22ed", "keyword": "LocalWallet KWallet::Wallet::LocalWallet KWallet::Wallet", "text": ""}, {"type": "function", "name": "KWallet::Wallet::NetworkWallet", "url": "classKWallet_1_1Wallet.html#a571cde1bda4b8d00b4b43d3eb08530bb", "keyword": "NetworkWallet KWallet::Wallet::NetworkWallet KWallet::Wallet", "text": ""}, {"type": "function", "name": "KWallet::Wallet::openWallet", "url": "classKWallet_1_1Wallet.html#acfdc7a90f734a614cd55f57568854a28", "keyword": "openWallet KWallet::Wallet::openWallet KWallet::Wallet", "text": "The user will be prompted to allow your application to open the wallet and may be prompted for a password You are responsible for deleting this object when you are done with it name The name of the wallet to open ot If Asynchronous the call will return immediately with a non-null pointer to an invalid wallet You must immediately connect the walletOpened() signal to a slot so that you will know when it is opened or when it fails w The window id to associate any dialogs with You can pass 0 if you don t have a window the password dialog should associate with Returns a pointer to the wallet if successful or a null pointer on error or if rejected A null pointer can also be returned if user choose to deactivate the wallet system"}, {"type": "function", "name": "KWallet::Wallet::PasswordFolder", "url": "classKWallet_1_1Wallet.html#a000df53c2ab5e6824ce93d3fcf44ebb7", "keyword": "PasswordFolder KWallet::Wallet::PasswordFolder KWallet::Wallet", "text": "It is automatically created when a wallet is created but the user may still delete it so you should check for its existence and recreate it if necessary and desired"}, {"type": "function", "name": "KWallet::Wallet::users", "url": "classKWallet_1_1Wallet.html#a1aaf970f40573b4e39ae6167f4c2badd", "keyword": "users KWallet::Wallet::users KWallet::Wallet", "text": "wallet The wallet to query Returns a list of all DCOP application IDs using the wallet"}, {"type": "function", "name": "KWallet::Wallet::walletList", "url": "classKWallet_1_1Wallet.html#a48ef2d3a1c1622cce7bb1c1655b2b842", "keyword": "walletList KWallet::Wallet::walletList KWallet::Wallet", "text": "Returns a list of the names of all wallets that are open"}, {"type": "function", "name": "KWallet::Wallet::Wallet", "url": "classKWallet_1_1Wallet.html#a0dc090b1e78c54242ff4e14d8270013e", "keyword": "Wallet KWallet::Wallet::Wallet KWallet::Wallet", "text": "handle The handle for the wallet name The name of the wallet"}, {"type": "function", "name": "KWallet::Wallet::Wallet", "url": "classKWallet_1_1Wallet.html#a9183eb0d05e5cd53058570cb3596b3b0", "keyword": "Wallet KWallet::Wallet::Wallet KWallet::Wallet", "text": ""}, {"type": "function", "name": "KWallet::Wallet::virtual_hook", "url": "classKWallet_1_1Wallet.html#a0e1702f5678c494c39bd1160debdd0b6", "keyword": "virtual_hook KWallet::Wallet::virtual_hook KWallet::Wallet", "text": ""}, {"type": "page", "name": "index", "url": "index.html", "keyword": null, "text": "KWallet Framework Safe desktop-wide storage for passwords Introduction This framework contains two main components Interface to KWallet the safe desktop-wide storage for passwords on KDE work spaces The kwalletd used to safely store the passwords on KDE work spaces The library can be built alone without kwalletd by setting the BUILD_KWALLETD option to OFF"}]}