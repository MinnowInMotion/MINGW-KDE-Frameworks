<?xml version="1.0" encoding="UTF-8"?>
<add>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KComboBoxPrivate KComboBoxPrivate KComboBox parent klineEdit L trapReturnKey false q_ptr parent KComboBoxPrivate init _k_lineEditDeleted KLineEdit klineEdit trapReturnKey KComboBox q_ptr Q_DECLARE_PUBLIC KComboBox KComboBoxPrivate::init Q_Q KComboBox q setCompleter q QComboBox::setAutoCompletion q isEditable q lineEdit setContextMenuPolicy Qt::DefaultContextMenu KComboBoxPrivate::_k_lineEditDeleted Q_Q KComboBox KCompletionBase base KCompletionBase KLineEdit q sender base q delegate q setDelegate L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::KComboBox QWidget parent QComboBox parent d_ptr new KComboBoxPrivate this Q_D KComboBox d init</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00090</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::KComboBox rw QWidget parent QComboBox parent d_ptr new KComboBoxPrivate this Q_D KComboBox d init setEditable rw</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::~KComboBox</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::contains QString text text isEmpty itemCount count i i itemCount i itemText i text</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::cursorPosition isEditable lineEdit cursorPosition</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::setAutoCompletion autocomplete Q_D KComboBox d klineEdit autocomplete d klineEdit setCompletionMode KCompletion::CompletionAuto setCompletionMode KCompletion::CompletionAuto d klineEdit setCompletionMode KCompletion::CompletionPopup setCompletionMode KCompletion::CompletionPopup KComboBox::autoCompletion completionMode KCompletion::CompletionAuto</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::setContextMenuEnabled showMenu Q_D KComboBox d klineEdit d klineEdit setContextMenuPolicy showMenu Qt::DefaultContextMenu Qt::NoContextMenu</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00151</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::setUrlDropsEnabled enable Q_D KComboBox d klineEdit d klineEdit setUrlDropsEnabled enable KComboBox::urlDropsEnabled Q_D KComboBox d klineEdit d klineEdit urlDropsEnabled</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00166</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::setCompletedText QString text marked Q_D KComboBox d klineEdit d klineEdit setCompletedText text marked</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00174</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::setCompletedText QString text Q_D KComboBox d klineEdit d klineEdit setCompletedText text</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00182</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::makeCompletion QString text Q_D KComboBox d klineEdit d klineEdit makeCompletion text text isNull view view keyboardSearch text</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00198</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::rotateText KCompletionBase::KeyBindingType type Q_D KComboBox d klineEdit d klineEdit rotateText type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00206</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::setTrapReturnKey trap Q_D KComboBox d trapReturnKey trap d klineEdit d klineEdit setTrapReturnKey trap qWarning KComboBox::trapReturnKey Q_D KComboBox d trapReturnKey</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00224</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::setEditUrl QUrl url QComboBox::setEditText url toDisplayString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00229</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::addUrl QUrl url QComboBox::addItem url toDisplayString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00234</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::addUrl QIcon icon QUrl url QComboBox::addItem icon url toDisplayString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00239</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::insertUrl index QUrl url QComboBox::insertItem index url toDisplayString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00244</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::insertUrl index QIcon icon QUrl url QComboBox::insertItem index icon url toDisplayString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00249</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::changeUrl index QUrl url QComboBox::setItemText index url toDisplayString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00254</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::changeUrl index QIcon icon QUrl url QComboBox::setItemIcon index icon QComboBox::setItemText index url toDisplayString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00260</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::setCompletedItems QStringList items autosubject Q_D KComboBox d klineEdit d klineEdit setCompletedItems items autosubject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00268</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox KComboBox::completionBox create Q_D KComboBox d klineEdit d klineEdit completionBox create QSize KComboBox::minimumSizeHint Q_D KComboBox QSize size QComboBox::minimumSizeHint isEditable d klineEdit QSize bs d klineEdit clearButtonUsedSize bs isValid size rwidth bs width size rheight qMax size height bs height size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00294</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::setLineEdit QLineEdit edit Q_D KComboBox isEditable edit qstrcmp edit metaObject className edit KLineEdit kedit KLineEdit isEditable kedit setClearButtonShown edit kedit QComboBox::setLineEdit edit d klineEdit qobject_cast KLineEdit edit setDelegate d klineEdit edit connect edit SIGNAL returnPressed SIGNAL returnPressed d klineEdit connect edit SIGNAL destroyed SLOT _k_lineEditDeleted connect d klineEdit SIGNAL returnPressed QString SIGNAL returnPressed QString connect d klineEdit SIGNAL completion QString SIGNAL completion QString connect d klineEdit SIGNAL substringCompletion QString SIGNAL substringCompletion QString connect d klineEdit SIGNAL textRotation KCompletionBase::KeyBindingType SIGNAL textRotation KCompletionBase::KeyBindingType connect d klineEdit SIGNAL completionModeChanged KCompletion::CompletionMode SIGNAL completionModeChanged KCompletion::CompletionMode connect d klineEdit SIGNAL aboutToShowContextMenu QMenu SIGNAL aboutToShowContextMenu QMenu connect d klineEdit SIGNAL completionBoxActivated QString SIGNAL activated QString d klineEdit setTrapReturnKey d trapReturnKey</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00359</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::setCurrentItem QString item insert index sel itemCount count i i itemCount i itemText i item sel i sel insert index insertItem index item sel index addItem item sel count setCurrentIndex sel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.cpp</field>
    <field name="url">kcombobox_8cpp_source.html#l00383</field>
    <field name="keywords"></field>
    <field name="text">KComboBox::setEditable editable editable KLineEdit edit KLineEdit edit setClearButtonShown setLineEdit edit QComboBox::setEditable editable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.h</field>
    <field name="url">kcombobox_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox KComboBoxPrivate QLineEdit QMenu</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.h</field>
    <field name="url">kcombobox_8h_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text">KCOMPLETION_EXPORT KComboBox QComboBox KCompletionBase Q_OBJECT Q_PROPERTY autoCompletion READ autoCompletion WRITE setAutoCompletion Q_PROPERTY urlDropsEnabled READ urlDropsEnabled WRITE setUrlDropsEnabled Q_PROPERTY trapReturnKey READ trapReturnKey WRITE setTrapReturnKey Q_DECLARE_PRIVATE KComboBox KComboBox QWidget parent KComboBox rw QWidget parent KComboBox</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcombobox.h</field>
    <field name="url">kcombobox_8h_source.html#l00180</field>
    <field name="keywords"></field>
    <field name="text">KCOMPLETION_DEPRECATED insertURL QUrl url index insertUrl index count index url KCOMPLETION_DEPRECATED insertURL QPixmap pixmap QUrl url index insertUrl index count index QIcon pixmap url KCOMPLETION_DEPRECATED changeURL QUrl url index changeUrl index url KCOMPLETION_DEPRECATED changeURL QPixmap pixmap QUrl url index changeUrl index QIcon pixmap url setEditUrl QUrl url addUrl QUrl url addUrl QIcon icon QUrl url insertUrl index QUrl url insertUrl index QIcon icon QUrl url changeUrl index QUrl url changeUrl index QIcon icon QUrl url cursorPosition setAutoCompletion autocomplete autoCompletion KCOMPLETION_DEPRECATED setContextMenuEnabled showMenu KCOMPLETION_DEPRECATED setUrlDropsEnabled enable urlDropsEnabled contains QString text setTrapReturnKey trap trapReturnKey KCompletionBox completionBox create setLineEdit QLineEdit setEditable editable Q_SIGNALS returnPressed returnPressed QString completion QString substringCompletion QString textRotation KCompletionBase::KeyBindingType completionModeChanged KCompletion::CompletionMode aboutToShowContextMenu QMenu contextMenu Q_SLOTS rotateText KCompletionBase::KeyBindingType type setCompletedText QString Q_DECL_OVERRIDE setCompletedItems QStringList items autosubject Q_DECL_OVERRIDE setCurrentItem QString item insert index Q_SLOTS makeCompletion QString setCompletedText QString text marked QSize minimumSizeHint Q_DECL_OVERRIDE QScopedPointer&lt;KComboBoxPrivate&gt; d_ptr Q_PRIVATE_SLOT d_func _k_lineEditDeleted</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCompletionPrivate::init completionMode KCompletion::CompletionPopup treeNodeAllocator KCompTreeNode::allocator treeRoot KCompTreeNode beep ignoreCase hasMultipleMatches rotationIndex KCompletionPrivate::addWeightedItem QString item Q_Q KCompletion order KCompletion::Weighted q addItem item uint len item length uint weight index item lastIndexOf QLatin1Char index ok weight item midRef index toUInt ok ok weight len index q addItem item left len weight QString KCompletionPrivate::findCompletion QString QChar ch QString completion KCompTreeNode node treeRoot i i length i ch at i node node find ch node completion ch QString node childrenCount node node firstChild node isNull completion node node node childrenCount hasMultipleMatches completionMode KCompletion::CompletionAuto rotationIndex order KCompletion::Weighted node node firstChild node isNull completion node KCompTreeNode temp_node L count node childrenCount temp_node node firstChild uint weight temp_node weight KCompTreeNode hit temp_node i i count i temp_node node childAt i temp_node weight weight hit temp_node weight hit weight hit isNull node hit completion node completion</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00140</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::KCompletion d_ptr new KCompletionPrivate this Q_D KCompletion d init setOrder Insertion</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00148</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::~KCompletion</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00152</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::setOrder CompOrder order Q_D KCompletion d order order d matches setSorting order KCompletion::CompOrder KCompletion::order Q_D KCompletion d order</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00165</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::setIgnoreCase ignoreCase Q_D KCompletion d ignoreCase ignoreCase KCompletion::ignoreCase Q_D KCompletion d ignoreCase</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00177</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::setItems QStringList itemList clear insertItems itemList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00183</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::insertItems QStringList items Q_D KCompletion weighted d order Weighted QStringList::ConstIterator it weighted it items begin it items end it d addWeightedItem it it items begin it items end it addItem it QStringList KCompletion::items Q_D KCompletion KCompletionMatchesWrapper list addWeight d order Weighted list extractStringsFromNode d treeRoot QString addWeight list list</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00209</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::isEmpty Q_D KCompletion d treeRoot childrenCount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00215</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::postProcessMatch QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00219</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::postProcessMatches QStringList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00223</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::postProcessMatches KCompletionMatches</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00227</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::addItem QString item Q_D KCompletion d matches clear d rotationIndex d lastString clear addItem item</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00237</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::addItem QString item uint weight Q_D KCompletion item isEmpty KCompTreeNode node d treeRoot uint len item length sorted d order Sorted weighted d order Weighted weight uint i i len i node node insert item at i sorted weighted node confirm weight node node insert x0 weighted node confirm weight</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00268</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::removeItem QString item Q_D KCompletion d matches clear d rotationIndex d lastString clear d treeRoot remove item</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00278</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::clear Q_D KCompletion d matches clear d rotationIndex d lastString clear d treeRoot d treeRoot KCompTreeNode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00289</field>
    <field name="keywords"></field>
    <field name="text">QString KCompletion::makeCompletion QString Q_D KCompletion d completionMode CompletionNone QString d matches clear d rotationIndex d hasMultipleMatches d lastMatch d currentMatch d completionMode CompletionShell d lastString d matches findAllCompletions d treeRoot d ignoreCase d hasMultipleMatches QStringList l d matches list postProcessMatches l emit matches l QString QString completion d completionMode CompletionPopup d completionMode CompletionPopupAuto d matches findAllCompletions d treeRoot d ignoreCase d hasMultipleMatches d matches isEmpty completion d matches first completion d findCompletion d hasMultipleMatches emit multipleMatches d lastString string d currentMatch completion postProcessMatch completion isEmpty emit match completion completion</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00348</field>
    <field name="keywords"></field>
    <field name="text">QStringList KCompletion::substringCompletion QString Q_D KCompletion KCompletionMatchesWrapper allItems d order allItems extractStringsFromNode d treeRoot QString QStringList list allItems list list isEmpty list isEmpty postProcessMatches list list QStringList matches QStringList::ConstIterator it list constBegin it list constEnd it QString item it item indexOf Qt::CaseInsensitive postProcessMatch item matches append item matches</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00381</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::setCompletionMode CompletionMode mode Q_D KCompletion d completionMode mode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00387</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::CompletionMode KCompletion::completionMode Q_D KCompletion d completionMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00393</field>
    <field name="keywords"></field>
    <field name="text">QStringList KCompletion::allMatches Q_D KCompletion KCompletionMatchesWrapper matches d order dummy matches findAllCompletions d treeRoot d lastString d ignoreCase dummy QStringList l matches list postProcessMatches l l</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00407</field>
    <field name="keywords"></field>
    <field name="text">KCompletionMatches KCompletion::allWeightedMatches Q_D KCompletion KCompletionMatchesWrapper matches d order dummy matches findAllCompletions d treeRoot d lastString d ignoreCase dummy KCompletionMatches ret matches postProcessMatches ret ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00421</field>
    <field name="keywords"></field>
    <field name="text">QStringList KCompletion::allMatches QString Q_D KCompletion KCompletionMatchesWrapper matches d order dummy matches findAllCompletions d treeRoot d ignoreCase dummy QStringList l matches list postProcessMatches l l</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00432</field>
    <field name="keywords"></field>
    <field name="text">KCompletionMatches KCompletion::allWeightedMatches QString Q_D KCompletion KCompletionMatchesWrapper matches d order dummy matches findAllCompletions d treeRoot d ignoreCase dummy KCompletionMatches ret matches postProcessMatches ret ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00443</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::setSoundsEnabled enable Q_D KCompletion d beep enable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00449</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::soundsEnabled Q_D KCompletion d beep</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00455</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::hasMultipleMatches Q_D KCompletion d hasMultipleMatches</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00464</field>
    <field name="keywords"></field>
    <field name="text">QString KCompletion::nextMatch Q_D KCompletion QString completion d lastMatch d currentMatch d matches isEmpty d matches findAllCompletions d treeRoot d lastString d ignoreCase d hasMultipleMatches d matches isEmpty completion d matches first d currentMatch completion d rotationIndex postProcessMatch completion emit match completion completion QStringList matches d matches list d lastMatch matches d rotationIndex d rotationIndex matches count d rotationIndex completion matches d rotationIndex d currentMatch completion postProcessMatch completion emit match completion completion</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00496</field>
    <field name="keywords"></field>
    <field name="text">QString KCompletion::lastMatch Q_D KCompletion d lastMatch</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.cpp</field>
    <field name="url">kcompletion_8cpp_source.html#l00502</field>
    <field name="keywords"></field>
    <field name="text">QString KCompletion::previousMatch Q_D KCompletion QString completion d lastMatch d currentMatch d matches isEmpty d matches findAllCompletions d treeRoot d lastString d ignoreCase d hasMultipleMatches d matches isEmpty completion d matches last d currentMatch completion d rotationIndex postProcessMatch completion emit match completion completion QStringList matches d matches list d lastMatch matches d rotationIndex d rotationIndex d rotationIndex matches count d rotationIndex completion matches d rotationIndex d currentMatch completion postProcessMatch completion emit match completion completion KCompTreeNode::~KCompTreeNode KCompTreeNode cur m_children begin cur KCompTreeNode next cur m_next m_children remove cur cur next KCompTreeNode KCompTreeNode::insert QChar ch sorted KCompTreeNode child find ch child child KCompTreeNode ch sorted KCompTreeNode prev KCompTreeNode cur m_children begin cur ch cur prev cur cur cur m_next prev m_children insert prev child m_children prepend child m_children append child child confirm child KCompTreeNode::remove QString str QString str QChar x0 QVector&lt;KCompTreeNode *&gt; deletables length KCompTreeNode child L KCompTreeNode parent deletables replace parent i i length i child parent find at i child deletables replace i child parent child i i parent deletables at i child deletables at i child m_children count parent m_children remove child QStringList KCompletionMatchesWrapper::list m_sortedList m_dirty m_sortedList sort m_dirty m_stringList clear QList&lt;KSortableItem&lt;QString&gt; it it m_sortedList constBegin it m_sortedList constEnd it m_stringList prepend value m_compOrder KCompletion::Sorted QCollator c c setCaseSensitivity Qt::CaseSensitive qStableSort m_stringList begin m_stringList end c m_stringList KCompletionMatchesWrapper::findAllCompletions KCompTreeNode treeRoot QString ignoreCase hasMultipleMatches isEmpty ignoreCase extractStringsFromNodeCI treeRoot QString hasMultipleMatches count QChar ch QString completion KCompTreeNode node treeRoot i i length i ch at i node node find ch node completion ch node childrenCount node node firstChild node isNull completion node node childrenCount append node weight completion hasMultipleMatches extractStringsFromNode node completion KCompletionMatchesWrapper::extractStringsFromNode KCompTreeNode node QString beginning addWeight node KCompTreeChildren list node children QString string QString w KCompTreeNode cur list begin cur cur cur m_next beginning node cur node isNull node node node childrenCount node node firstChild node isNull node node node isNull addWeight QLatin1Char w setNum node weight append w append node weight string node node childrenCount extractStringsFromNode node addWeight KCompletionMatchesWrapper::extractStringsFromNodeCI KCompTreeNode node QString beginning QString restString restString isEmpty extractStringsFromNode node beginning QChar ch1 restString at QString newRest restString mid KCompTreeNode child1 child2 child1 node find ch1 child1 extractStringsFromNodeCI child1 beginning QChar child1 newRest ch1 isLetter QChar ch2 ch1 toLower ch1 ch2 ch2 ch1 toUpper ch1 ch2 child2 node find ch2 child2 extractStringsFromNodeCI child2 beginning QChar child2 newRest KCompTreeNodeList::append KCompTreeNode item m_count m_last m_last item m_last m_next m_first item m_last m_next item item m_next m_last item KCompTreeNodeList::prepend KCompTreeNode item m_count m_last m_last item m_last m_next m_first item item m_next m_first m_first item KCompTreeNodeList::insert KCompTreeNode after KCompTreeNode item after append item m_count item m_next after m_next after m_next item after m_last m_last item KCompTreeNode KCompTreeNodeList::remove KCompTreeNode item m_first item KCompTreeNode cur item m_first m_first m_first m_next cur m_first cur cur m_next item cur cur m_next cur cur m_next item m_next item m_last m_last cur m_count item KCompTreeNode KCompTreeNodeList::at uint index KCompTreeNode cur m_first index cur cur cur m_next cur QSharedPointer&lt;KZoneAllocator&gt; KCompTreeNode::m_alloc KZoneAllocator</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.h</field>
    <field name="url">kcompletion_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCompTreeNode KCompletionPrivate KCompletionMatchesWrapper KCompletionMatches</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.h</field>
    <field name="url">kcompletion_8h_source.html#l00125</field>
    <field name="keywords"></field>
    <field name="text">KCOMPLETION_EXPORT KCompletion QObject Q_ENUMS CompOrder Q_PROPERTY CompOrder order READ order WRITE setOrder Q_PROPERTY ignoreCase READ ignoreCase WRITE setIgnoreCase Q_PROPERTY QStringList items READ items WRITE setItems Q_OBJECT Q_DECLARE_PRIVATE KCompletion</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.h</field>
    <field name="url">kcompletion_8h_source.html#l00142</field>
    <field name="keywords"></field>
    <field name="text">CompletionMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.h</field>
    <field name="url">kcompletion_8h_source.html#l00146</field>
    <field name="keywords"></field>
    <field name="text">CompletionNone</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.h</field>
    <field name="url">kcompletion_8h_source.html#l00150</field>
    <field name="keywords"></field>
    <field name="text">CompletionAuto</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.h</field>
    <field name="url">kcompletion_8h_source.html#l00154</field>
    <field name="keywords"></field>
    <field name="text">CompletionMan</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.h</field>
    <field name="url">kcompletion_8h_source.html#l00158</field>
    <field name="keywords"></field>
    <field name="text">CompletionShell</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.h</field>
    <field name="url">kcompletion_8h_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text">CompletionPopup</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.h</field>
    <field name="url">kcompletion_8h_source.html#l00167</field>
    <field name="keywords"></field>
    <field name="text">CompletionPopupAuto</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.h</field>
    <field name="url">kcompletion_8h_source.html#l00174</field>
    <field name="keywords"></field>
    <field name="text">CompOrder Sorted</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.h</field>
    <field name="url">kcompletion_8h_source.html#l00175</field>
    <field name="keywords"></field>
    <field name="text">Insertion</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.h</field>
    <field name="url">kcompletion_8h_source.html#l00176</field>
    <field name="keywords"></field>
    <field name="text">Weighted KCompletion KCompletion QStringList substringCompletion QString QString lastMatch QStringList items isEmpty setCompletionMode CompletionMode mode CompletionMode completionMode setOrder CompOrder order CompOrder order setIgnoreCase ignoreCase ignoreCase QStringList allMatches QStringList allMatches QString KCompletionMatches allWeightedMatches KCompletionMatches allWeightedMatches QString setSoundsEnabled enable soundsEnabled hasMultipleMatches Q_SLOTS QString makeCompletion QString QString previousMatch QString nextMatch</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.h</field>
    <field name="url">kcompletion_8h_source.html#l00411</field>
    <field name="keywords"></field>
    <field name="text">KCOMPLETION_DEPRECATED slotMakeCompletion QString void makeCompletion</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.h</field>
    <field name="url">kcompletion_8h_source.html#l00422</field>
    <field name="keywords"></field>
    <field name="text">KCOMPLETION_DEPRECATED slotPreviousMatch void previousMatch</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletion.h</field>
    <field name="url">kcompletion_8h_source.html#l00433</field>
    <field name="keywords"></field>
    <field name="text">KCOMPLETION_DEPRECATED slotNextMatch void nextMatch insertItems QStringList items setItems QStringList itemList addItem QString item addItem QString item uint weight removeItem QString item clear Q_SIGNALS match QString item matches QStringList matchlist multipleMatches postProcessMatch QString match postProcessMatches QStringList matchList postProcessMatches KCompletionMatches matches Q_DISABLE_COPY KCompletion QScopedPointer&lt;KCompletionPrivate&gt; d_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBasePrivate KCompletionBasePrivate KCompletionBase parent q_ptr parent KCompletionBasePrivate init autoDeleteCompletionObject handleSignals emitSignals KCompletion::CompletionMode completionMode QPointer&lt;KCompletion&gt; completionObject KCompletionBase::KeyBindingMap keyBindingMap KCompletionBase delegate KCompletionBase q_ptr Q_DECLARE_PUBLIC KCompletionBase KCompletionBasePrivate::~KCompletionBasePrivate autoDeleteCompletionObject completionObject completionObject KCompletionBasePrivate::init Q_Q KCompletionBase completionMode KCompletion::CompletionPopup delegate q useGlobalKeyBindings q setAutoDeleteCompletionObject q setHandleSignals q setEmitSignals</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00068</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase::KCompletionBase d_ptr new KCompletionBasePrivate this Q_D KCompletionBase d init</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase::~KCompletionBase</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase::setDelegate KCompletionBase delegate Q_D KCompletionBase d delegate delegate delegate delegate setAutoDeleteCompletionObject d autoDeleteCompletionObject delegate setHandleSignals d handleSignals delegate setEmitSignals d emitSignals delegate setCompletionMode d completionMode delegate setKeyBindingMap d keyBindingMap</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase KCompletionBase::delegate Q_D KCompletionBase d delegate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text">KCompletion KCompletionBase::completionObject handleSignals Q_D KCompletionBase d delegate d delegate completionObject handleSignals d completionObject setCompletionObject KCompletion handleSignals d autoDeleteCompletionObject d completionObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase::setCompletionObject KCompletion completionObject handleSignals Q_D KCompletionBase d delegate d delegate setCompletionObject completionObject handleSignals d autoDeleteCompletionObject completionObject d completionObject d completionObject d completionObject completionObject setAutoDeleteCompletionObject setHandleSignals handleSignals setEmitSignals d completionObject isNull</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00136</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase::setHandleSignals handle Q_D KCompletionBase d delegate d delegate setHandleSignals handle d handleSignals handle</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00146</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase::isCompletionObjectAutoDeleted Q_D KCompletionBase d delegate d delegate isCompletionObjectAutoDeleted d autoDeleteCompletionObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00153</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase::setAutoDeleteCompletionObject autoDelete Q_D KCompletionBase d delegate d delegate setAutoDeleteCompletionObject autoDelete d autoDeleteCompletionObject autoDelete</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00163</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase::setEnableSignals enable Q_D KCompletionBase d delegate d delegate setEnableSignals enable d emitSignals enable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00173</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase::handleSignals Q_D KCompletionBase d delegate d delegate handleSignals d handleSignals</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00179</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase::emitSignals Q_D KCompletionBase d delegate d delegate emitSignals d emitSignals</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00185</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase::setEmitSignals emitRotationSignals Q_D KCompletionBase d delegate d delegate setEmitSignals emitRotationSignals d emitSignals emitRotationSignals</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00195</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase::setCompletionMode KCompletion::CompletionMode mode Q_D KCompletionBase d delegate d delegate setCompletionMode mode d completionMode mode d completionObject d completionMode KCompletion::CompletionNone d completionObject setCompletionMode d completionMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00211</field>
    <field name="keywords"></field>
    <field name="text">KCompletion::CompletionMode KCompletionBase::completionMode Q_D KCompletionBase d delegate d delegate completionMode d completionMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00217</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase::setKeyBinding KeyBindingType item QList&lt;QKeySequence&gt; cut Q_D KCompletionBase d delegate d delegate setKeyBinding item cut cut isEmpty KeyBindingMap::Iterator it d keyBindingMap begin it d keyBindingMap end it it value cut d keyBindingMap insert item cut</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00234</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;QKeySequence&gt; KCompletionBase::keyBinding KeyBindingType item Q_D KCompletionBase d delegate d delegate keyBinding item d keyBindingMap item</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00240</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase::useGlobalKeyBindings Q_D KCompletionBase d delegate d delegate useGlobalKeyBindings d keyBindingMap clear d keyBindingMap insert TextCompletion QList&lt;QKeySequence&gt; d keyBindingMap insert PrevCompletionMatch QList&lt;QKeySequence&gt; d keyBindingMap insert NextCompletionMatch QList&lt;QKeySequence&gt; d keyBindingMap insert SubstringCompletion QList&lt;QKeySequence&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00255</field>
    <field name="keywords"></field>
    <field name="text">KCompletion KCompletionBase::compObj Q_D KCompletionBase d delegate d delegate compObj KCompletion d completionObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00262</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase::KeyBindingMap KCompletionBase::keyBindingMap Q_D KCompletionBase d delegate d delegate keyBindingMap d keyBindingMap</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00268</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase::setKeyBindingMap KCompletionBase::KeyBindingMap keyBindingMap Q_D KCompletionBase d delegate d delegate setKeyBindingMap keyBindingMap d keyBindingMap keyBindingMap</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.cpp</field>
    <field name="url">kcompletionbase_8cpp_source.html#l00279</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBase::virtual_hook</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.h</field>
    <field name="url">kcompletionbase_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBasePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.h</field>
    <field name="url">kcompletionbase_8h_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">KCOMPLETION_EXPORT KCompletionBase Q_DECLARE_PRIVATE KCompletionBase</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.h</field>
    <field name="url">kcompletionbase_8h_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">enum KeyBindingType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.h</field>
    <field name="url">kcompletionbase_8h_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">TextCompletion</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.h</field>
    <field name="url">kcompletionbase_8h_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">PrevCompletionMatch</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.h</field>
    <field name="url">kcompletionbase_8h_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">NextCompletionMatch</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.h</field>
    <field name="url">kcompletionbase_8h_source.html#l00070</field>
    <field name="keywords"></field>
    <field name="text">SubstringCompletion QMap&lt;KeyBindingType, QList&lt;QKeySequence&gt; KeyBindingMap KCompletionBase KCompletionBase KCompletion completionObject handleSignals setCompletionObject KCompletion completionObject handleSignals setHandleSignals handle isCompletionObjectAutoDeleted setAutoDeleteCompletionObject autoDelete setEnableSignals enable handleSignals emitSignals setEmitSignals emitRotationSignals setCompletionMode KCompletion::CompletionMode mode KCompletion::CompletionMode completionMode setKeyBinding KeyBindingType item QList&lt;QKeySequence&gt; key QList&lt;QKeySequence&gt; keyBinding KeyBindingType item</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.h</field>
    <field name="url">kcompletionbase_8h_source.html#l00266</field>
    <field name="keywords"></field>
    <field name="text">KCOMPLETION_DEPRECATED QList&lt;QKeySequence&gt; getKeyBinding KeyBindingType item keyBinding item useGlobalKeyBindings setCompletedText QString text setCompletedItems QStringList items autoSuggest KCompletion compObj KeyBindingMap keyBindingMap</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbase.h</field>
    <field name="url">kcompletionbase_8h_source.html#l00339</field>
    <field name="keywords"></field>
    <field name="text">KCOMPLETION_DEPRECATED KeyBindingMap getKeyBindings keyBindingMap setKeyBindingMap KeyBindingMap keyBindingMap setDelegate KCompletionBase delegate KCompletionBase delegate virtual_hook data Q_DISABLE_COPY KCompletionBase QScopedPointer&lt;KCompletionBasePrivate&gt; d_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBoxPrivate KCompletionBoxPrivate KCompletionBox parent q_ptr parent init cancelled _k_itemClicked QListWidgetItem QWidget m_parent QString cancelText tabHandling upwardBox emitSelected KCompletionBox q_ptr Q_DECLARE_PUBLIC KCompletionBox</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::KCompletionBox QWidget parent QListWidget parent d_ptr new KCompletionBoxPrivate this Q_D KCompletionBox d m_parent parent d init KCompletionBoxPrivate::init Q_Q KCompletionBox tabHandling upwardBox emitSelected q setProperty x001000 q setAttribute Qt::WA_ShowWithoutActivating q setWindowFlags Qt::Window Qt::FramelessWindowHint Qt::BypassWindowManagerHint q setUniformItemSizes q setLineWidth q setFrameStyle QFrame::Box QFrame::Plain q setVerticalScrollBarPolicy Qt::ScrollBarAsNeeded q setHorizontalScrollBarPolicy Qt::ScrollBarAlwaysOff q connect q QListWidget::itemDoubleClicked q KCompletionBox::slotActivated q connect q SIGNAL itemClicked QListWidgetItem SLOT _k_itemClicked QListWidgetItem</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::~KCompletionBox Q_D KCompletionBox d m_parent L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00089</field>
    <field name="keywords"></field>
    <field name="text">QStringList KCompletionBox::items QStringList list i i count i QListWidgetItem currItem item i list append currItem text list</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::slotActivated QListWidgetItem item item hide emit activated item text</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00112</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::eventFilter QObject o QEvent e Q_D KCompletionBox type e type QWidget wid qobject_cast QWidget o o wid wid d m_parent type QEvent::Move type QEvent::Resize resizeAndReposition wid wid windowFlags Qt::Window type QEvent::Move wid d m_parent window hide type QEvent::MouseButtonPress wid isAncestorOf wid d emitSelected currentItem qobject_cast&lt;QScrollBar *&gt; o Q_ASSERT currentItem emit currentTextChanged currentItem text hide e accept wid wid isAncestorOf d m_parent isVisible type QEvent::KeyPress QKeyEvent ev QKeyEvent e ev key Qt::Key_Backtab d tabHandling ev modifiers Qt::NoButton ev modifiers Qt::ShiftModifier up ev accept Qt::Key_Tab d tabHandling ev modifiers Qt::NoButton down count KLineEdit parent qobject_cast KLineEdit d m_parent parent parent doCompletion currentItem text hide ev accept Qt::Key_Down down ev accept Qt::Key_Up selectedItems isEmpty mapToGlobal QPoint y d m_parent mapToGlobal QPoint y up down ev accept Qt::Key_PageUp pageUp ev accept Qt::Key_PageDown pageDown ev accept Qt::Key_Escape d cancelled ev accept Qt::Key_Enter Qt::Key_Return ev modifiers Qt::ShiftModifier hide ev accept Qt::Key_End ev modifiers Qt::ControlModifier end ev accept Qt::Key_Home ev modifiers Qt::ControlModifier home ev accept type QEvent::ShortcutOverride QKeyEvent ev QKeyEvent e ev key Qt::Key_Down Qt::Key_Up Qt::Key_PageUp Qt::Key_PageDown Qt::Key_Escape Qt::Key_Enter Qt::Key_Return ev accept Qt::Key_Tab Qt::Key_Backtab ev modifiers Qt::NoButton ev modifiers Qt::ShiftModifier ev accept Qt::Key_Home Qt::Key_End ev modifiers Qt::ControlModifier ev accept type QEvent::FocusOut QFocusEvent QFocusEvent e event reason Qt::PopupFocusReason reason Qt::ActiveWindowFocusReason QApplication::activeWindow endif hide QListWidget::eventFilter o e</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00272</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::popup count hide block signalsBlocked blockSignals setCurrentRow blockSignals block clearSelection isVisible show size height sizeHint height resizeAndReposition</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00290</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::resizeAndReposition Q_D KCompletionBox currentGeom height QPoint currentPos pos QRect geom calculateGeometry resize geom size x currentPos x y currentPos y d m_parent isVisible QPoint orig globalPositionHint QRect screenSize QApplication::desktop screenGeometry orig x orig x geom x y orig y geom y x width screenSize right x screenSize right width y height screenSize bottom y y height d m_parent height d upwardBox d upwardBox y currentGeom height move x y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00324</field>
    <field name="keywords"></field>
    <field name="text">QPoint KCompletionBox::globalPositionHint Q_D KCompletionBox d m_parent QPoint d m_parent mapToGlobal QPoint d m_parent height</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00333</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::setVisible visible Q_D KCompletionBox visible d upwardBox d m_parent resizeAndReposition qApp installEventFilter qApp sendPostedEvents d m_parent qApp removeEventFilter d cancelText clear QListWidget::setVisible visible</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00365</field>
    <field name="keywords"></field>
    <field name="text">QRect KCompletionBox::calculateGeometry Q_D KCompletionBox QRect visualRect count visualRect visualItemRect item isValid QRect x y ih visualRect height h qMin ih count ih frameWidth w d m_parent d m_parent width QListWidget::minimumSizeHint width w qMax QListWidget::minimumSizeHint width w QRect x y w h QSize KCompletionBox::sizeHint calculateGeometry size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00387</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::down row currentRow lastRow count row lastRow setCurrentRow row lastRow setCurrentRow</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00401</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::up row currentRow row setCurrentRow row lastRow count lastRow setCurrentRow lastRow</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00415</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::pageDown selectionModel setCurrentIndex moveCursor QAbstractItemView::MovePageDown Qt::NoModifier QItemSelectionModel::SelectCurrent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00420</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::pageUp selectionModel setCurrentIndex moveCursor QAbstractItemView::MovePageUp Qt::NoModifier QItemSelectionModel::SelectCurrent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00425</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::home setCurrentRow</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00430</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::end setCurrentRow count</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00435</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::setTabHandling enable Q_D KCompletionBox d tabHandling enable KCompletionBox::isTabHandling Q_D KCompletionBox d tabHandling</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00447</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::setCancelledText QString text Q_D KCompletionBox d cancelText text QString KCompletionBox::cancelledText Q_D KCompletionBox d cancelText KCompletionBoxPrivate::cancelled Q_Q KCompletionBox cancelText isNull emit q userCancelled cancelText q isVisible q hide KCompletionBoxItem QListWidgetItem reuse QString newText text newText setText newText</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00484</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::insertItems QStringList items index block signalsBlocked blockSignals QListWidget::insertItems index items blockSignals block setCurrentRow</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00493</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::setItems QStringList items block signalsBlocked blockSignals rowIndex count addItems items dirty QStringList::ConstIterator it items constBegin QStringList::ConstIterator itEnd items constEnd it itEnd it rowIndex count changed KCompletionBoxItem item rowIndex reuse it dirty dirty changed dirty addItem it rowIndex rowIndex count dirty rowIndex count QListWidgetItem item takeItem rowIndex Q_ASSERT item item isVisible size height sizeHint height resizeAndReposition blockSignals block KCompletionBoxPrivate::_k_itemClicked QListWidgetItem item Q_Q KCompletionBox item q hide emit q currentTextChanged item text emit q activated item text</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.cpp</field>
    <field name="url">kcompletionbox_8cpp_source.html#l00553</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox::setActivateOnSelect doEmit Q_D KCompletionBox d emitSelected doEmit KCompletionBox::activateOnSelect Q_D KCompletionBox d emitSelected</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.h</field>
    <field name="url">kcompletionbox_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBoxPrivate QEvent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.h</field>
    <field name="url">kcompletionbox_8h_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">KCOMPLETION_EXPORT KCompletionBox QListWidget Q_OBJECT Q_DECLARE_PRIVATE KCompletionBox Q_PROPERTY isTabHandling READ isTabHandling WRITE setTabHandling Q_PROPERTY QString cancelledText READ cancelledText WRITE setCancelledText Q_PROPERTY activateOnSelect READ activateOnSelect WRITE setActivateOnSelect KCompletionBox QWidget parent KCompletionBox QSize sizeHint Q_DECL_OVERRIDE activateOnSelect QStringList items isTabHandling QString cancelledText Q_SLOTS insertItems QStringList items index setItems QStringList items popup setTabHandling enable setCancelledText QString text setActivateOnSelect doEmit down up pageDown pageUp home end setVisible visible Q_DECL_OVERRIDE Q_SIGNALS activated QString userCancelled QString QRect calculateGeometry</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionbox.h</field>
    <field name="url">kcompletionbox_8h_source.html#l00213</field>
    <field name="keywords"></field>
    <field name="text">KCOMPLETION_DEPRECATED sizeAndPosition resizeAndReposition resizeAndReposition eventFilter QObject QEvent Q_DECL_OVERRIDE QPoint globalPositionHint Q_SLOTS slotActivated QListWidgetItem QScopedPointer&lt;KCompletionBoxPrivate&gt; d_ptr Q_PRIVATE_SLOT d_func _k_itemClicked QListWidgetItem</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionmatches.cpp</field>
    <field name="url">kcompletionmatches_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCompletionMatchesPrivate KCompletionMatchesPrivate sort KCompletionMatches parent sorting sort q_ptr parent sorting KCompletionMatches q_ptr Q_DECLARE_PUBLIC KCompletionMatches</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionmatches.cpp</field>
    <field name="url">kcompletionmatches_8cpp_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">KCompletionMatches::KCompletionMatches KCompletionMatches o KSortableList QString int d_ptr new KCompletionMatchesPrivate o sorting this KCompletionMatches::operator= o</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionmatches.cpp</field>
    <field name="url">kcompletionmatches_8cpp_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">KCompletionMatches KCompletionMatches::operator= KCompletionMatches o Q_D KCompletionMatches o KCompletionMatchesList::operator= o d sorting o sorting</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionmatches.cpp</field>
    <field name="url">kcompletionmatches_8cpp_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">KCompletionMatches::KCompletionMatches sort_P d_ptr new KCompletionMatchesPrivate sort_P this</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionmatches.cpp</field>
    <field name="url">kcompletionmatches_8cpp_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">KCompletionMatches::KCompletionMatches KCompletionMatchesWrapper matches d_ptr new KCompletionMatchesPrivate matches sorting this matches m_sortedList L KCompletionMatchesList::operator= matches m_sortedList QStringList l matches list QStringList::ConstIterator it l begin it l end it prepend KSortableItem&lt;QString, int&gt; it</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionmatches.cpp</field>
    <field name="url">kcompletionmatches_8cpp_source.html#l00077</field>
    <field name="keywords"></field>
    <field name="text">KCompletionMatches::~KCompletionMatches</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionmatches.cpp</field>
    <field name="url">kcompletionmatches_8cpp_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">QStringList KCompletionMatches::list sort_P Q_D KCompletionMatches d sorting sort_P KCompletionMatches sort QStringList stringList ConstIterator it begin it end it stringList prepend value stringList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionmatches.cpp</field>
    <field name="url">kcompletionmatches_8cpp_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text">KCompletionMatches::sorting Q_D KCompletionMatches d sorting</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionmatches.cpp</field>
    <field name="url">kcompletionmatches_8cpp_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text">KCompletionMatches::removeDuplicates Iterator it1 it2 it1 begin it1 end it1 it2 it1 it2 it2 end value value first qMax key key it2 erase it2 it2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionmatches.h</field>
    <field name="url">kcompletionmatches_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCompletionMatchesWrapper KCompletionMatchesPrivate KSortableList&lt;QString&gt; KCompletionMatchesList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompletionmatches.h</field>
    <field name="url">kcompletionmatches_8h_source.html#l00052</field>
    <field name="keywords"></field>
    <field name="text">KCOMPLETION_EXPORT KCompletionMatches KCompletionMatchesList Q_DECLARE_PRIVATE KCompletionMatches KCompletionMatches sort KCompletionMatches KCompletionMatches KCompletionMatches operator= KCompletionMatches KCompletionMatches KCompletionMatchesWrapper matches KCompletionMatches removeDuplicates QStringList list sort sorting QScopedPointer&lt;KCompletionMatchesPrivate&gt; d_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.cpp</field>
    <field name="url">khistorycombobox_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KHistoryComboBoxPrivate KHistoryComboBoxPrivate KHistoryComboBox parent q_ptr parent init useCompletion rotateUp rotateDown _k_clear _k_addContextMenuItems QMenu _k_simulateActivated QString QString typedText KPixmapProvider pixmapProvider KHistoryComboBox q_ptr currentIndex rotated Q_DECLARE_PUBLIC KHistoryComboBox KHistoryComboBoxPrivate::init useCompletion Q_Q KHistoryComboBox q setMaxCount useCompletion q completionObject setOrder KCompletion::Weighted q setInsertPolicy KHistoryComboBox::NoInsert currentIndex rotated pixmapProvider L QByteArray histControl qgetenv histControl histControl q setDuplicatesEnabled q connect q SIGNAL aboutToShowContextMenu QMenu SLOT _k_addContextMenuItems QMenu q connect q SIGNAL activated SLOT reset q connect q SIGNAL returnPressed QString SLOT reset q connect q SIGNAL returnPressed QString SLOT _k_simulateActivated QString Qt::QueuedConnection</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.cpp</field>
    <field name="url">khistorycombobox_8cpp_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text">KHistoryComboBox::KHistoryComboBox QWidget parent KComboBox true parent d_ptr new KHistoryComboBoxPrivate this Q_D KHistoryComboBox d init</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.cpp</field>
    <field name="url">khistorycombobox_8cpp_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">KHistoryComboBox::KHistoryComboBox useCompletion QWidget parent KComboBox true parent d_ptr new KHistoryComboBoxPrivate this Q_D KHistoryComboBox d init useCompletion</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.cpp</field>
    <field name="url">khistorycombobox_8cpp_source.html#l00129</field>
    <field name="keywords"></field>
    <field name="text">KHistoryComboBox::~KHistoryComboBox Q_D KHistoryComboBox d pixmapProvider</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.cpp</field>
    <field name="url">khistorycombobox_8cpp_source.html#l00135</field>
    <field name="keywords"></field>
    <field name="text">KHistoryComboBox::setHistoryItems QStringList items setHistoryItems items</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.cpp</field>
    <field name="url">khistorycombobox_8cpp_source.html#l00140</field>
    <field name="keywords"></field>
    <field name="text">KHistoryComboBox::setHistoryItems QStringList items setCompletionList QStringList insertingItems items KComboBox::clear itemCount insertingItems count toRemove itemCount maxCount toRemove itemCount insertingItems clear i i toRemove i insertingItems pop_front insertItems insertingItems setCompletionList useCompletion KCompletion comp completionObject comp setOrder KCompletion::Insertion comp setItems insertingItems comp setOrder KCompletion::Weighted clearEditText QStringList KHistoryComboBox::historyItems QStringList list itemCount count i i itemCount i list append itemText i list</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.cpp</field>
    <field name="url">khistorycombobox_8cpp_source.html#l00182</field>
    <field name="keywords"></field>
    <field name="text">KHistoryComboBox::useCompletion compObj</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.cpp</field>
    <field name="url">khistorycombobox_8cpp_source.html#l00187</field>
    <field name="keywords"></field>
    <field name="text">KHistoryComboBox::clearHistory QString temp currentText KComboBox::clear useCompletion completionObject clear setEditText temp KHistoryComboBoxPrivate::_k_addContextMenuItems QMenu menu Q_Q KHistoryComboBox menu menu addSeparator QAction clearHistory menu addAction QIcon::fromTheme QStringLiteral KHistoryComboBox::tr q SLOT _k_clear q count clearHistory setEnabled</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.cpp</field>
    <field name="url">khistorycombobox_8cpp_source.html#l00211</field>
    <field name="keywords"></field>
    <field name="text">KHistoryComboBox::addToHistory QString item Q_D KHistoryComboBox item isEmpty count item itemText wasCurrent duplicatesEnabled i itemCount count i itemCount itemText i item wasCurrent wasCurrent i currentIndex removeItem i itemCount i d pixmapProvider insertItem d pixmapProvider pixmapFor item iconSize height item insertItem item wasCurrent setCurrentIndex useComp useCompletion last count mc maxCount stopAt qMax mc rmIndex last rmIndex stopAt rmIndex QString rmItem itemText rmIndex removeItem rmIndex useComp contains rmItem completionObject removeItem rmItem useComp completionObject addItem item</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.cpp</field>
    <field name="url">khistorycombobox_8cpp_source.html#l00269</field>
    <field name="keywords"></field>
    <field name="text">KHistoryComboBox::removeFromHistory QString item item isEmpty removed QString temp currentText i itemCount count i itemCount item itemText i removed removeItem i itemCount i removed useCompletion completionObject removeItem item setEditText temp removed KHistoryComboBoxPrivate::rotateUp Q_Q KHistoryComboBox currentIndex typedText q currentText currentIndex last q count QString currText q currentText currentIndex last currText q itemText currentIndex q itemText currentIndex isEmpty currentIndex currentIndex q count rotated currentIndex q count typedText q itemText currentIndex q setEditText typedText q setCurrentIndex currentIndex KHistoryComboBoxPrivate::rotateDown Q_Q KHistoryComboBox currentIndex typedText q currentText currentIndex QString currText q currentText currentIndex currText q itemText currentIndex q itemText currentIndex isEmpty currentIndex currentIndex rotated currentIndex rotated currentIndex q count q setEditText q itemText currentIndex currentIndex q currentText typedText q setEditText typedText q setCurrentIndex currentIndex</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.cpp</field>
    <field name="url">khistorycombobox_8cpp_source.html#l00376</field>
    <field name="keywords"></field>
    <field name="text">KHistoryComboBox::keyPressEvent QKeyEvent e Q_D KHistoryComboBox event_key e key e modifiers KStandardShortcut::rotateUp contains event_key d rotateUp KStandardShortcut::rotateDown contains event_key d rotateDown KComboBox::keyPressEvent e</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.cpp</field>
    <field name="url">khistorycombobox_8cpp_source.html#l00390</field>
    <field name="keywords"></field>
    <field name="text">KHistoryComboBox::wheelEvent QWheelEvent ev Q_D KHistoryComboBox QAbstractItemView iv view iv iv isVisible QApplication::sendEvent iv ev ev delta d rotateUp d rotateDown ev accept</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.cpp</field>
    <field name="url">khistorycombobox_8cpp_source.html#l00408</field>
    <field name="keywords"></field>
    <field name="text">KHistoryComboBox::setPixmapProvider KPixmapProvider provider Q_D KHistoryComboBox d pixmapProvider provider d pixmapProvider d pixmapProvider provider count QStringList items historyItems clear insertItems items</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.cpp</field>
    <field name="url">khistorycombobox_8cpp_source.html#l00428</field>
    <field name="keywords"></field>
    <field name="text">KHistoryComboBox::insertItems QStringList items Q_D KHistoryComboBox QStringList::ConstIterator it items constBegin QStringList::ConstIterator itEnd items constEnd it itEnd QString item it item isEmpty d pixmapProvider addItem d pixmapProvider pixmapFor item iconSize height item addItem item it KHistoryComboBoxPrivate::_k_clear Q_Q KHistoryComboBox q clearHistory emit q cleared KHistoryComboBoxPrivate::_k_simulateActivated QString text Q_Q KHistoryComboBox q insertPolicy q NoInsert q findText text Qt::MatchFixedString Qt::MatchCaseSensitive emit q activated text q insertPolicy q InsertAtCurrent q count q maxCount emit q activated text</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.cpp</field>
    <field name="url">khistorycombobox_8cpp_source.html#l00475</field>
    <field name="keywords"></field>
    <field name="text">KPixmapProvider KHistoryComboBox::pixmapProvider Q_D KHistoryComboBox d pixmapProvider</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.cpp</field>
    <field name="url">khistorycombobox_8cpp_source.html#l00481</field>
    <field name="keywords"></field>
    <field name="text">KHistoryComboBox::reset Q_D KHistoryComboBox d currentIndex d rotated</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.h</field>
    <field name="url">khistorycombobox_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KPixmapProvider KHistoryComboBoxPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">khistorycombobox.h</field>
    <field name="url">khistorycombobox_8h_source.html#l00050</field>
    <field name="keywords"></field>
    <field name="text">KCOMPLETION_EXPORT KHistoryComboBox KComboBox Q_OBJECT Q_DECLARE_PRIVATE KHistoryComboBox Q_PROPERTY QStringList historyItems READ historyItems WRITE setHistoryItems KHistoryComboBox QWidget parent KHistoryComboBox useCompletion QWidget parent KHistoryComboBox setHistoryItems QStringList items setHistoryItems QStringList items setCompletionList QStringList historyItems removeFromHistory QString item setPixmapProvider KPixmapProvider provider KPixmapProvider pixmapProvider QComboBox::insertItems Q_SLOTS addToHistory QString item clearHistory reset Q_SIGNALS cleared keyPressEvent QKeyEvent Q_DECL_OVERRIDE wheelEvent QWheelEvent ev Q_DECL_OVERRIDE insertItems QStringList items useCompletion QScopedPointer&lt;KHistoryComboBoxPrivate&gt; d_ptr Q_PRIVATE_SLOT d_func _k_clear Q_PRIVATE_SLOT d_func _k_addContextMenuItems QMenu Q_PRIVATE_SLOT d_func _k_simulateActivated QString Q_DISABLE_COPY KHistoryComboBox</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KLineEditStyle KLineEditPrivate::~KLineEditPrivate style data KLineEditPrivate::_k_textChanged QString text Q_Q KLineEdit completionRunning text userText userText text emit q userTextChanged text emit q textEdited text KLineEditPrivate::updateUserText QString text Q_Q KLineEdit completionRunning text userText userText text q setModified emit q userTextChanged text emit q textEdited text emit q textChanged text KLineEditPrivate::adjustForReadOnly style style data m_overlap style data m_overlap QRect KLineEditStyle::subElementRect SubElement element QStyleOption option QWidget widget element SE_LineEditContents KLineEditStyle unconstThis KLineEditStyle m_sentinel unconstThis m_subStyle clear unconstThis m_sentinel QStyle s m_subStyle m_subStyle data baseStyle QRect rect s subElementRect SE_LineEditContents option widget unconstThis m_sentinel option direction Qt::LeftToRight rect adjusted m_overlap rect adjusted m_overlap QProxyStyle::subElementRect element option widget KLineEditPrivate::s_backspacePerformsCompletion KLineEditPrivate::s_initialized KLineEditPrivate::init Q_Q KLineEdit completionBox L handleURLDrops trapReturnKeyEvents userSelection autoSuggest disableRestoreSelection enableSqueezedText completionRunning s_initialized KConfigGroup config KSharedConfig::openConfig s_backspacePerformsCompletion config readEntry s_initialized clearButton clickInClear wideEnoughForClear urlDropEventFilter LineEditUrlDropEventFilter q QString metaMsg KLineEdit::tr italicizePlaceholder metaMsg trimmed QString possibleTripleClick bgRole q backgroundRole q QLineEdit::setContextMenuPolicy Qt::DefaultContextMenu KCursor::setAutoHideCursor q KCompletion::CompletionMode mode q completionMode autoSuggest mode KCompletion::CompletionMan mode KCompletion::CompletionPopupAuto mode KCompletion::CompletionAuto q connect q SIGNAL selectionChanged q SLOT _k_restoreSelectionColors handleURLDrops q installEventFilter urlDropEventFilter QPalette p q palette previousHighlightedTextColor isValid previousHighlightedTextColor p color QPalette::Normal QPalette::HighlightedText previousHighlightColor isValid previousHighlightColor p color QPalette::Normal QPalette::Highlight style KLineEditStyle q style q setStyle style data q connect q SIGNAL textChanged QString q SLOT _k_textChanged QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00188</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::KLineEdit QString QWidget parent QLineEdit string parent d_ptr new KLineEditPrivate this Q_D KLineEdit d init</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00195</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::KLineEdit QWidget parent QLineEdit parent d_ptr new KLineEditPrivate this Q_D KLineEdit d init</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00202</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::~KLineEdit QString KLineEdit::clickMessage placeholderText</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00213</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setClearButtonShown show Q_D KLineEdit show d clearButton d clearButton KLineEditButton d clearButton setObjectName QStringLiteral d clearButton setCursor Qt::ArrowCursor d clearButton setToolTip tr d _k_updateClearButtonIcon text d updateClearButton connect SIGNAL textChanged QString SLOT _k_updateClearButtonIcon QString disconnect SIGNAL textChanged QString SLOT _k_updateClearButtonIcon QString d clearButton d clearButton d clickInClear d style d style data m_overlap</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00240</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::isClearButtonShown Q_D KLineEdit d clearButton</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00246</field>
    <field name="keywords"></field>
    <field name="text">QSize KLineEdit::clearButtonUsedSize Q_D KLineEdit QSize s d clearButton frameWidth style pixelMetric QStyle::PM_DefaultFrameWidth s d clearButton sizeHint s rwidth frameWidth s KLineEditPrivate::_k_updateClearButtonIcon QString text Q_Q KLineEdit clearButton q isReadOnly adjustForReadOnly clearButton pixmap isNull QString iconName q layoutDirection Qt::LeftToRight size clearButton style pixelMetric QStyle::PM_SmallIconSize q clearButton setPixmap QIcon::fromTheme iconName pixmap size size wideEnoughForClear text length clearButton animateVisible clearButton animateVisible KLineEditPrivate::updateClearButton Q_Q KLineEdit clearButton q isReadOnly adjustForReadOnly QSize geom q size frameWidth q style pixelMetric QStyle::PM_DefaultFrameWidth q buttonWidth clearButton sizeHint width QSize newButtonSize buttonWidth geom height QFontMetrics fm q font em fm width QStringLiteral wideEnough geom width em buttonWidth frameWidth newButtonSize clearButton size clearButton resize newButtonSize style style data m_overlap wideEnough buttonWidth frameWidth q layoutDirection Qt::LeftToRight clearButton move geom width frameWidth buttonWidth clearButton move frameWidth wideEnough wideEnoughForClear wideEnoughForClear wideEnough _k_updateClearButtonIcon q text</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00332</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setCompletionMode KCompletion::CompletionMode mode Q_D KLineEdit KCompletion::CompletionMode oldMode completionMode oldMode mode oldMode KCompletion::CompletionPopup oldMode KCompletion::CompletionPopupAuto d completionBox d completionBox isVisible d completionBox hide echoMode QLineEdit::Normal mode KCompletion::CompletionNone KAuthorized::authorize QStringLiteral mode KCompletion::CompletionNone mode KCompletion::CompletionPopupAuto mode KCompletion::CompletionAuto mode KCompletion::CompletionMan d autoSuggest d autoSuggest KCompletionBase::setCompletionMode mode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00364</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setCompletionModeDisabled KCompletion::CompletionMode mode disable Q_D KLineEdit d disableCompletionMap mode disable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00370</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setCompletedText QString t marked Q_D KLineEdit d autoSuggest QString txt text t txt setText t marked setSelection t length txt length t length setUserSelection setUserSelection</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00391</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setCompletedText QString text KCompletion::CompletionMode mode completionMode marked mode KCompletion::CompletionAuto mode KCompletion::CompletionMan mode KCompletion::CompletionPopup mode KCompletion::CompletionPopupAuto setCompletedText text marked</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00401</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::rotateText KCompletionBase::KeyBindingType type KCompletion comp compObj comp type KCompletionBase::PrevCompletionMatch type KCompletionBase::NextCompletionMatch QString input type KCompletionBase::PrevCompletionMatch input comp previousMatch input comp nextMatch input isEmpty input displayText setCompletedText input hasSelectedText</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00423</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::makeCompletion QString text Q_D KLineEdit KCompletion comp compObj KCompletion::CompletionMode mode completionMode comp mode KCompletion::CompletionNone QString match comp makeCompletion text mode KCompletion::CompletionPopup mode KCompletion::CompletionPopupAuto match isEmpty d completionBox d completionBox hide d completionBox clear setCompletedItems comp allMatches match isEmpty match text mode KCompletion::CompletionShell setUserSelection d autoSuggest setCompletedText match</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00462</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setReadOnly readOnly Q_D KLineEdit readOnly isReadOnly QLineEdit::setReadOnly readOnly readOnly d bgRole backgroundRole setBackgroundRole QPalette::Window d enableSqueezedText d squeezedText isEmpty d squeezedText text d setSqueezedText d clearButton d clearButton animateVisible d adjustForReadOnly d squeezedText isEmpty setText d squeezedText d squeezedText clear setBackgroundRole d bgRole d updateClearButton</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00495</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setSqueezedText QString text setSqueezedTextEnabled setText text</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00501</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setSqueezedTextEnabled enable Q_D KLineEdit d enableSqueezedText enable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00507</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::isSqueezedTextEnabled Q_D KLineEdit d enableSqueezedText</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00513</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setText QString text Q_D KLineEdit d enableSqueezedText isReadOnly d squeezedText text d setSqueezedText QLineEdit::setText text KLineEditPrivate::setSqueezedText Q_Q KLineEdit squeezedStart squeezedEnd QString fullText squeezedText fullLength fullText length QFontMetrics fm q fontMetrics labelWidth q size width q style pixelMetric QStyle::PM_DefaultFrameWidth textWidth fm width fullText textWidth labelWidth QString squeezedText QStringLiteral squeezedWidth fm width squeezedText letters fullText length labelWidth squeezedWidth textWidth squeezedText fullText left letters fullText right letters squeezedWidth fm width squeezedText squeezedWidth labelWidth letters squeezedText fullText left letters fullText right letters squeezedWidth fm width squeezedText squeezedWidth labelWidth letters fullLength letters squeezedText fullText left letters fullText right letters squeezedWidth labelWidth letters squeezedText fullText left letters fullText right letters squeezedWidth fm width squeezedText squeezedWidth labelWidth letters letters q QLineEdit::setText fullText q QLineEdit::setText squeezedText squeezedStart letters squeezedEnd fullText length letters q setToolTip fullText q QLineEdit::setText fullText q setToolTip QLatin1String QToolTip::showText q pos QString q setCursorPosition</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00587</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::copy Q_D KLineEdit d copySqueezedText QLineEdit::copy KLineEditPrivate::copySqueezedText copy Q_Q KLineEdit squeezedText isEmpty squeezedStart KLineEdit that KLineEdit q that hasSelectedText start q selectionStart end start q selectedText length start squeezedStart start start squeezedStart squeezedEnd start squeezedStart start squeezedStart end squeezedStart end end squeezedStart squeezedEnd end squeezedStart end squeezedEnd start end QString t squeezedText t t mid start end start q disconnect QApplication::clipboard SIGNAL selectionChanged q QApplication::clipboard setText t copy QClipboard::Clipboard QClipboard::Selection q connect QApplication::clipboard SIGNAL selectionChanged q SLOT _q_clipboardChanged</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00628</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::resizeEvent QResizeEvent ev Q_D KLineEdit d squeezedText isEmpty d setSqueezedText d updateClearButton QLineEdit::resizeEvent ev</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l00639</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::keyPressEvent QKeyEvent e Q_D KLineEdit key e key e modifiers KStandardShortcut::copy contains key copy KStandardShortcut::paste contains key isReadOnly paste KStandardShortcut::pasteSelection contains key QString text QApplication::clipboard text QClipboard::Selection insert text deselect KStandardShortcut::cut contains key isReadOnly cut KStandardShortcut::undo contains key isReadOnly undo KStandardShortcut::redo contains key isReadOnly redo KStandardShortcut::deleteWordBack contains key cursorWordBackward hasSelectedText isReadOnly del e accept KStandardShortcut::deleteWordForward contains key cursorWordForward hasSelectedText isReadOnly del e accept KStandardShortcut::backwardWord contains key cursorWordBackward e accept KStandardShortcut::forwardWord contains key cursorWordForward e accept KStandardShortcut::beginningOfLine contains key home e accept KStandardShortcut::endOfLine contains key end e accept echoMode QLineEdit::Normal completionMode KCompletion::CompletionNone e key Qt::Key_Return e key Qt::Key_Enter trap d completionBox d completionBox isVisible stopEvent trap d trapReturnKeyEvents e modifiers Qt::NoButton e modifiers Qt::KeypadModifier stopEvent emit QLineEdit::returnPressed e accept emit returnPressed displayText trap d completionBox hide deselect setCursorPosition text length stopEvent KeyBindingMap keys keyBindingMap KCompletion::CompletionMode mode completionMode noModifier e modifiers Qt::NoButton e modifiers Qt::ShiftModifier e modifiers Qt::KeypadModifier mode KCompletion::CompletionAuto mode KCompletion::CompletionPopupAuto mode KCompletion::CompletionMan noModifier d userSelection hasSelectedText e key Qt::Key_Right e key Qt::Key_Left e modifiers Qt::NoButton QString old_txt text d disableRestoreSelection start selectionStart deselect QLineEdit::keyPressEvent e cPosition cursorPosition setText old_txt setSelection old_txt length cPosition old_txt length e key Qt::Key_Right cPosition start d updateUserText text d disableRestoreSelection e key Qt::Key_Escape hasSelectedText d userSelection del setUserSelection e ignore mode KCompletion::CompletionAuto mode KCompletion::CompletionMan noModifier QString keycode e text keycode isEmpty keycode unicode isPrint e key Qt::Key_Backspace e key Qt::Key_Delete hasUserSelection d userSelection hadSelection hasSelectedText cursorNotAtEnd start selectionStart cPos cursorPosition hadSelection hasUserSelection start cPos del setCursorPosition cPos cursorNotAtEnd d disableRestoreSelection QLineEdit::keyPressEvent e d disableRestoreSelection QString txt text len txt length hasSelectedText len e key Qt::Key_Backspace hadSelection hasUserSelection cursorNotAtEnd backspace txt text len txt length d s_backspacePerformsCompletion len d autoSuggest e key Qt::Key_Delete d autoSuggest doCompletion txt e key Qt::Key_Backspace e key Qt::Key_Delete d autoSuggest e accept mode KCompletion::CompletionPopup mode KCompletion::CompletionPopupAuto noModifier e text isEmpty QString old_txt text hasUserSelection d userSelection hadSelection hasSelectedText cursorNotAtEnd start selectionStart cPos cursorPosition QString keycode e text hadSelection hasUserSelection start cPos keycode isEmpty keycode unicode isPrint e key Qt::Key_Backspace e key Qt::Key_Delete del setCursorPosition cPos cursorNotAtEnd selectedLength selectedText length d disableRestoreSelection QLineEdit::keyPressEvent e d disableRestoreSelection selectedLength selectedText length hasUserSelection d _k_restoreSelectionColors QString txt text len txt length txt old_txt txt e text len keycode isEmpty keycode unicode isPrint e key Qt::Key_Backspace e key Qt::Key_Delete e key Qt::Key_Backspace hadSelection hasUserSelection cursorNotAtEnd backspace txt text len txt length d s_backspacePerformsCompletion d autoSuggest e key Qt::Key_Delete d autoSuggest d completionBox d completionBox setCancelledText txt doCompletion txt e key Qt::Key_Backspace e key Qt::Key_Delete mode KCompletion::CompletionPopupAuto d autoSuggest e accept len d completionBox d completionBox isVisible d completionBox hide mode KCompletion::CompletionShell QList&lt;QKeySequence&gt; cut keys TextCompletion isEmpty cut KStandardShortcut::shortcut KStandardShortcut::TextCompletion cut keys TextCompletion cut contains key QString txt text len txt length cursorPosition len len doCompletion txt d completionBox d completionBox hide QList&lt;QKeySequence&gt; cut keys PrevCompletionMatch isEmpty cut KStandardShortcut::shortcut KStandardShortcut::PrevCompletion cut keys PrevCompletionMatch cut contains key emitSignals emit textRotation KCompletionBase::PrevCompletionMatch handleSignals rotateText KCompletionBase::PrevCompletionMatch keys NextCompletionMatch isEmpty cut KStandardShortcut::shortcut KStandardShortcut::NextCompletion cut keys NextCompletionMatch cut contains key emitSignals emit textRotation KCompletionBase::NextCompletionMatch handleSignals rotateText KCompletionBase::NextCompletionMatch compObj QList&lt;QKeySequence&gt; cut keys SubstringCompletion isEmpty cut KStandardShortcut::shortcut KStandardShortcut::SubstringCompletion cut keys SubstringCompletion cut contains key emitSignals emit substringCompletion text handleSignals setCompletedItems compObj substringCompletion text e accept selectedLength selectedText length QLineEdit::keyPressEvent e selectedLength selectedText length d _k_restoreSelectionColors</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01005</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::mouseDoubleClickEvent QMouseEvent e Q_D KLineEdit e button Qt::LeftButton d possibleTripleClick QTimer::singleShot QApplication::doubleClickInterval SLOT _k_tripleClickTimeout QLineEdit::mouseDoubleClickEvent e</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01016</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::mousePressEvent QMouseEvent e Q_D KLineEdit e button Qt::LeftButton e button Qt::MidButton d clearButton d clickInClear d clearButton childAt e pos d clearButton underMouse d clickInClear d possibleTripleClick e button Qt::LeftButton d possibleTripleClick selectAll e accept e button Qt::MidButton hasSelectedText isReadOnly QApplication::clipboard text QClipboard::Selection length backspace QLineEdit::mousePressEvent e</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01048</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::mouseReleaseEvent QMouseEvent e Q_D KLineEdit d clickInClear d clearButton childAt e pos d clearButton underMouse QString newText e button Qt::MidButton newText QApplication::clipboard text QClipboard::Selection setText newText setSelection text size del emit clearButtonClicked emit textChanged newText d clickInClear e accept QLineEdit::mouseReleaseEvent e QApplication::clipboard supportsSelection e button Qt::LeftButton d copySqueezedText KLineEditPrivate::_k_tripleClickTimeout possibleTripleClick</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01085</field>
    <field name="keywords"></field>
    <field name="text">QMenu KLineEdit::createStandardContextMenu Q_D KLineEdit QMenu popup QLineEdit::createStandardContextMenu isReadOnly QList&lt;QAction *&gt; actionList popup actions UndoAct RedoAct Separator1 CutAct CopyAct PasteAct DeleteAct ClearAct Separator2 SelectAllAct NCountActs QAction separatorAction L idx actionList indexOf actionList DeleteAct idx actionList count separatorAction actionList at idx separatorAction QAction clearAllAction QAction QIcon::fromTheme QStringLiteral tr clearAllAction setShortcuts QKeySequence::keyBindings QKeySequence::DeleteCompleteLine connect clearAllAction QAction::triggered QLineEdit::clear text isEmpty clearAllAction setEnabled popup insertAction separatorAction clearAllAction compObj isReadOnly KAuthorized::authorize QStringLiteral QMenu subMenu popup addMenu QIcon::fromTheme QStringLiteral tr connect subMenu SIGNAL triggered QAction SLOT _k_completionMenuActivated QAction popup addSeparator QActionGroup ag QActionGroup d noCompletionAction ag addAction tr d shellCompletionAction ag addAction tr d autoCompletionAction ag addAction tr d popupCompletionAction ag addAction tr d shortAutoCompletionAction ag addAction tr d popupAutoCompletionAction ag addAction tr subMenu addActions ag actions d shellCompletionAction setCheckable d noCompletionAction setCheckable d popupCompletionAction setCheckable d autoCompletionAction setCheckable d shortAutoCompletionAction setCheckable d popupAutoCompletionAction setCheckable d shellCompletionAction setEnabled d disableCompletionMap KCompletion::CompletionShell d noCompletionAction setEnabled d disableCompletionMap KCompletion::CompletionNone d popupCompletionAction setEnabled d disableCompletionMap KCompletion::CompletionPopup d autoCompletionAction setEnabled d disableCompletionMap KCompletion::CompletionAuto d shortAutoCompletionAction setEnabled d disableCompletionMap KCompletion::CompletionMan d popupAutoCompletionAction setEnabled d disableCompletionMap KCompletion::CompletionPopupAuto KCompletion::CompletionMode mode completionMode d noCompletionAction setChecked mode KCompletion::CompletionNone d shellCompletionAction setChecked mode KCompletion::CompletionShell d popupCompletionAction setChecked mode KCompletion::CompletionPopup d autoCompletionAction setChecked mode KCompletion::CompletionAuto d shortAutoCompletionAction setChecked mode KCompletion::CompletionMan d popupAutoCompletionAction setChecked mode KCompletion::CompletionPopupAuto KCompletion::CompletionMode defaultMode KCompletion::CompletionPopup mode defaultMode d disableCompletionMap defaultMode subMenu addSeparator d defaultAction subMenu addAction tr popup</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01166</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::contextMenuEvent QContextMenuEvent e QLineEdit::contextMenuPolicy Qt::DefaultContextMenu QMenu popup createStandardContextMenu emit aboutToShowContextMenu popup popup exec e globalPos popup KLineEditPrivate::_k_completionMenuActivated QAction act Q_Q KLineEdit KCompletion::CompletionMode oldMode q completionMode act noCompletionAction q setCompletionMode KCompletion::CompletionNone act shellCompletionAction q setCompletionMode KCompletion::CompletionShell act autoCompletionAction q setCompletionMode KCompletion::CompletionAuto act popupCompletionAction q setCompletionMode KCompletion::CompletionPopup act shortAutoCompletionAction q setCompletionMode KCompletion::CompletionMan act popupAutoCompletionAction q setCompletionMode KCompletion::CompletionPopupAuto act defaultAction q setCompletionMode KCompletion::CompletionPopup oldMode q completionMode oldMode KCompletion::CompletionPopup oldMode KCompletion::CompletionPopupAuto completionBox completionBox isVisible completionBox hide emit q completionModeChanged q completionMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01215</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::event QEvent ev Q_D KLineEdit KCursor::autoHideEventFilter ev ev type QEvent::ShortcutOverride QKeyEvent e QKeyEvent ev d overrideShortcut e ev accept ev type QEvent::ApplicationPaletteChange ev type QEvent::PaletteChange QPalette p QApplication::palette d previousHighlightedTextColor p color QPalette::Normal QPalette::HighlightedText d previousHighlightColor p color QPalette::Normal QPalette::Highlight setUserSelection d userSelection ev type QEvent::StyleChange qobject_cast&lt;KLineEditStyle *&gt; style qstrcmp style metaObject className QLatin1String style metaObject className d lastStyleClass KLineEditStyle kleStyle d style data kleStyle d style kleStyle KLineEditStyle style kleStyle m_subStyle style d lastStyleClass QLatin1String style metaObject className setStyle kleStyle d lastStyleClass clear ev type QEvent::ApplicationLayoutDirectionChange ev type QEvent::LayoutDirectionChange d _k_updateClearButtonIcon text d updateClearButton QLineEdit::event ev</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01263</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setUrlDropsEnabled enable Q_D KLineEdit enable d handleURLDrops installEventFilter d urlDropEventFilter d handleURLDrops enable d handleURLDrops removeEventFilter d urlDropEventFilter d handleURLDrops KLineEdit::urlDropsEnabled Q_D KLineEdit d handleURLDrops</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01282</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setTrapReturnKey trap Q_D KLineEdit d trapReturnKeyEvents trap</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01288</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::trapReturnKey Q_D KLineEdit d trapReturnKeyEvents</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01294</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setUrl QUrl url setText url toDisplayString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01299</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setCompletionBox KCompletionBox box Q_D KLineEdit d completionBox d completionBox box handleSignals connect d completionBox SIGNAL currentTextChanged QString SLOT _k_completionBoxTextChanged QString connect d completionBox KCompletionBox::userCancelled KLineEdit::userCancelled connect d completionBox SIGNAL activated QString SIGNAL completionBoxActivated QString connect d completionBox SIGNAL activated QString SIGNAL textEdited QString setEditText KLineEdit edit QString text edit wasModified edit isModified edit setText text edit setModified wasModified</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01334</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::userCancelled QString cancelText Q_D KLineEdit completionMode KCompletion::CompletionPopupAuto setEditText cancelText hasSelectedText d userSelection deselect d autoSuggest start selectionStart QString s text remove selectionStart selectedText length setEditText s setCursorPosition start d autoSuggest KLineEditPrivate::overrideShortcut QKeyEvent e Q_Q KLineEdit QList&lt;QKeySequence&gt; scKey key e key e modifiers KLineEdit::KeyBindingMap keys q keyBindingMap keys KLineEdit::TextCompletion isEmpty scKey KStandardShortcut::shortcut KStandardShortcut::TextCompletion scKey keys KLineEdit::TextCompletion scKey contains key keys KLineEdit::NextCompletionMatch isEmpty scKey KStandardShortcut::shortcut KStandardShortcut::NextCompletion scKey keys KLineEdit::NextCompletionMatch scKey contains key keys KLineEdit::PrevCompletionMatch isEmpty scKey KStandardShortcut::shortcut KStandardShortcut::PrevCompletion scKey keys KLineEdit::PrevCompletionMatch scKey contains key KStandardShortcut::copy contains key KStandardShortcut::paste contains key KStandardShortcut::cut contains key KStandardShortcut::undo contains key KStandardShortcut::redo contains key KStandardShortcut::deleteWordBack contains key KStandardShortcut::deleteWordForward contains key KStandardShortcut::forwardWord contains key KStandardShortcut::backwardWord contains key KStandardShortcut::beginningOfLine contains key KStandardShortcut::endOfLine contains key e matches QKeySequence::SelectAll qApp platformName QLatin1String key Qt::CTRL Qt::Key_E key Qt::CTRL Qt::Key_U completionBox completionBox isVisible key e key Qt::KeyboardModifiers modifiers e modifiers key Qt::Key_Backtab key Qt::Key_Tab modifiers Qt::NoModifier modifiers Qt::ShiftModifier</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01436</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setCompletedItems QStringList items autoSuggest Q_D KLineEdit QString txt d completionBox d completionBox isVisible txt completionBox cancelledText txt text items isEmpty items count txt items first completionBox d completionBox isVisible QListWidgetItem currentItem d completionBox currentItem QString currentSelection currentItem currentSelection currentItem text d completionBox setItems items QList&lt;QListWidgetItem *&gt; matchedItems d completionBox findItems currentSelection Qt::MatchExactly QListWidgetItem matchedItem matchedItems isEmpty matchedItems first matchedItem blocked d completionBox blockSignals d completionBox setCurrentItem matchedItem d completionBox blockSignals blocked d completionBox setCurrentRow txt isEmpty d completionBox setCancelledText txt d completionBox setItems items d completionBox popup d autoSuggest autoSuggest index items first indexOf txt QString newText items first mid index setUserSelection setCompletedText newText d completionBox d completionBox isVisible d completionBox hide</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01494</field>
    <field name="keywords"></field>
    <field name="text">KCompletionBox KLineEdit::completionBox create Q_D KLineEdit create d completionBox setCompletionBox KCompletionBox d completionBox setObjectName QStringLiteral d completionBox setFont font d completionBox</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01506</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setCompletionObject KCompletion comp handle KCompletion oldComp compObj oldComp handleSignals disconnect oldComp SIGNAL matches QStringList SLOT setCompletedItems QStringList comp handle connect comp SIGNAL matches QStringList SLOT setCompletedItems QStringList KCompletionBase::setCompletionObject comp handle</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01520</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setUserSelection userSelection Q_D KLineEdit d userSelection userSelection d updateUserText text QPalette p palette userSelection p setColor QPalette::Highlight d previousHighlightColor p setColor QPalette::HighlightedText d previousHighlightedTextColor QColor color p color QPalette::Disabled QPalette::Text p setColor QPalette::HighlightedText color color p color QPalette::Active QPalette::Base p setColor QPalette::Highlight color d userSelection userSelection setPalette p KLineEditPrivate::_k_restoreSelectionColors Q_Q KLineEdit disableRestoreSelection q setUserSelection KLineEditPrivate::_k_completionBoxTextChanged QString text Q_Q KLineEdit text isEmpty q setText text q setModified q end</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01566</field>
    <field name="keywords"></field>
    <field name="text">QString KLineEdit::originalText Q_D KLineEdit d enableSqueezedText isReadOnly d squeezedText text</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01576</field>
    <field name="keywords"></field>
    <field name="text">QString KLineEdit::userText Q_D KLineEdit d userText</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01582</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::autoSuggest Q_D KLineEdit d autoSuggest KLineEdit::paintEvent QPaintEvent ev Q_D KLineEdit echoMode Password d threeStars setAttribute Qt::WA_UpdatesDisabled blockSignals QString oldText text isModifiedState isModified setText oldText oldText oldText QLineEdit::paintEvent ev setText oldText setModified isModifiedState blockSignals setAttribute Qt::WA_UpdatesDisabled QLineEdit::paintEvent ev</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01616</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setClickMessage QString msg setPlaceholderText msg</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01623</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setContextMenuEnabled showMenu QLineEdit::setContextMenuPolicy showMenu Qt::DefaultContextMenu Qt::NoContextMenu</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01630</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::isContextMenuEnabled contextMenuPolicy Qt::DefaultContextMenu</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01636</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::setPasswordMode passwordMode Q_D KLineEdit passwordMode KConfigGroup cg KSharedConfig::openConfig QString val cg readEntry val QLatin1String setEchoMode NoEcho d threeStars val QLatin1String setEchoMode Password setEchoMode Normal KLineEdit::passwordMode echoMode NoEcho echoMode Password</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.cpp</field>
    <field name="url">klineedit_8cpp_source.html#l01658</field>
    <field name="keywords"></field>
    <field name="text">KLineEdit::doCompletion QString text Q_D KLineEdit emitSignals emit completion text d completionRunning handleSignals makeCompletion text d completionRunning</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.h</field>
    <field name="url">klineedit_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QAction QMenu KCompletionBox QUrl KLineEditPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klineedit.h</field>
    <field name="url">klineedit_8h_source.html#l00151</field>
    <field name="keywords"></field>
    <field name="text">KCOMPLETION_EXPORT KLineEdit QLineEdit KCompletionBase KComboBox KLineEditStyle Q_OBJECT Q_DECLARE_PRIVATE KLineEdit Q_PROPERTY contextMenuEnabled READ isContextMenuEnabled WRITE setContextMenuEnabled Q_PROPERTY urlDropsEnabled READ urlDropsEnabled WRITE setUrlDropsEnabled Q_PROPERTY trapEnterKeyEvent READ trapReturnKey WRITE setTrapReturnKey Q_PROPERTY squeezedTextEnabled READ isSqueezedTextEnabled WRITE setSqueezedTextEnabled Q_PROPERTY QString clickMessage READ clickMessage WRITE setClickMessage Q_PROPERTY showClearButton READ isClearButtonShown WRITE setClearButtonShown Q_PROPERTY passwordMode READ passwordMode WRITE setPasswordMode KLineEdit QString QWidget parent KLineEdit QWidget parent KLineEdit setUrl QUrl url setCompletionMode KCompletion::CompletionMode mode Q_DECL_OVERRIDE setCompletionModeDisabled KCompletion::CompletionMode mode disable KCOMPLETION_DEPRECATED setContextMenuEnabled showMenu KCOMPLETION_DEPRECATED isContextMenuEnabled setUrlDropsEnabled enable urlDropsEnabled setTrapReturnKey trap trapReturnKey KCompletionBox completionBox create setCompletionObject KCompletion handle Q_DECL_OVERRIDE copy setSqueezedTextEnabled enable isSqueezedTextEnabled QString originalText QString userText setCompletionBox KCompletionBox box KCOMPLETION_DEPRECATED setClickMessage QString msg KCOMPLETION_DEPRECATED QString clickMessage setClearButtonShown show isClearButtonShown QSize clearButtonUsedSize doCompletion QString text Q_SIGNALS completionBoxActivated QString returnPressed QString completion QString substringCompletion QString QT_MOC_COMPAT userTextChanged QString textRotation KCompletionBase::KeyBindingType completionModeChanged KCompletion::CompletionMode aboutToShowContextMenu QMenu contextMenu clearButtonClicked Q_SLOTS setReadOnly rotateText KCompletionBase::KeyBindingType type setCompletedText QString Q_DECL_OVERRIDE setCompletedItems QStringList items autoSuggest Q_DECL_OVERRIDE setSqueezedText QString text setText QString setPasswordMode passwordMode passwordMode Q_SLOTS makeCompletion QString userCancelled QString cancelText event QEvent Q_DECL_OVERRIDE resizeEvent QResizeEvent Q_DECL_OVERRIDE keyPressEvent QKeyEvent Q_DECL_OVERRIDE mousePressEvent QMouseEvent Q_DECL_OVERRIDE mouseReleaseEvent QMouseEvent Q_DECL_OVERRIDE mouseDoubleClickEvent QMouseEvent Q_DECL_OVERRIDE contextMenuEvent QContextMenuEvent Q_DECL_OVERRIDE QMenu createStandardContextMenu setCompletedText QString setUserSelection userSelection autoSuggest paintEvent QPaintEvent ev Q_DECL_OVERRIDE QScopedPointer&lt;KLineEditPrivate&gt; d_ptr Q_PRIVATE_SLOT d_func _k_textChanged QString Q_PRIVATE_SLOT d_func _k_completionMenuActivated QAction Q_PRIVATE_SLOT d_func _k_tripleClickTimeout Q_PRIVATE_SLOT d_func _k_restoreSelectionColors Q_PRIVATE_SLOT d_func _k_completionBoxTextChanged QString Q_PRIVATE_SLOT d_func _k_updateClearButtonIcon QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpixmapprovider.cpp</field>
    <field name="url">kpixmapprovider_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KPixmapProvider::~KPixmapProvider</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpixmapprovider.cpp</field>
    <field name="url">kpixmapprovider_8cpp_source.html#l00025</field>
    <field name="keywords"></field>
    <field name="text">KPixmapProvider::virtual_hook</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpixmapprovider.h</field>
    <field name="url">kpixmapprovider_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpixmapprovider.h</field>
    <field name="url">kpixmapprovider_8h_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">KCOMPLETION_EXPORT KPixmapProvider KPixmapProvider QPixmap pixmapFor QString text size virtual_hook data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00035</field>
    <field name="keywords"></field>
    <field name="text">KSortableItem QPair</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">KSortableItem Key i T t QPair Key T i t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">KSortableItem KSortableItem&lt;T, Key&gt; rhs QPair Key T rhs first rhs second</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">KSortableItem</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00059</field>
    <field name="keywords"></field>
    <field name="text">KSortableItem&lt;T, Key&gt; operator= KSortableItem&lt;T, Key&gt; i first i first second i second</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">operator&gt;  KSortableItem&lt;T, Key&gt; i2 i2 first this first</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text">operator&lt; (const KSortableItem&lt;T, Key&gt; i2 first i2 first</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">operator&gt;=  KSortableItem&lt;T, Key&gt; i2 first i2 first</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text">operator&lt;= (const KSortableItem&lt;T, Key&gt; i2 i2 first first</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text">operator==  KSortableItem&lt;T, Key&gt; i2 first i2 first</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00111</field>
    <field name="keywords"></field>
    <field name="text">operator!=  KSortableItem&lt;T, Key&gt; i2 first i2 first</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00119</field>
    <field name="keywords"></field>
    <field name="text">T value second</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00127</field>
    <field name="keywords"></field>
    <field name="text">T value second</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text">KCOMPLETION_DEPRECATED Key index first</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00145</field>
    <field name="keywords"></field>
    <field name="text">Key key first</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text">KSortableList QList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00170</field>
    <field name="keywords"></field>
    <field name="text">insert Key i T t QList&lt;KSortableItem&lt;T, Key&gt; KSortableItem&lt;T, Key&gt; i t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00180</field>
    <field name="keywords"></field>
    <field name="text">T operator[] Key i QList&lt;KSortableItem&lt;T, Key&gt; i value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00189</field>
    <field name="keywords"></field>
    <field name="text">T operator[] Key i QList&lt;KSortableItem&lt;T, Key&gt; i value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksortablelist.h</field>
    <field name="url">ksortablelist_8h_source.html#l00197</field>
    <field name="keywords"></field>
    <field name="text">sort qSort uint qHash KSortableItem&lt;T, K&gt; Q_ASSERT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzoneallocator.cpp</field>
    <field name="url">kzoneallocator_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KZoneAllocator::MemBlock MemBlock s size s ref older newer begin s MemBlock begin is_in ptr begin ptr begin size ptr size ref begin MemBlock older MemBlock newer KZoneAllocator::Private Private currentBlock blockSize blockOffset log2 num_blocks hashList hashSize hashDirty true MemBlock currentBlock quintptr blockSize quintptr blockOffset log2 num_blocks MemList hashList hashSize hashDirty KZoneAllocator::KZoneAllocator _blockSize d new Private d blockSize _blockSize d blockSize d log2 d blockOffset d blockSize KZoneAllocator::~KZoneAllocator count d hashList i i d hashSize i d hashList i d hashList d hashList MemBlock next d currentBlock d currentBlock next next d currentBlock older d currentBlock count count fprintf stderr count d KZoneAllocator::insertHash MemBlock b quintptr adr quintptr b begin d blockSize quintptr end quintptr b begin d blockSize adr end quintptr key adr d log2 key key d hashSize d hashList key d hashList key QList&lt;MemBlock *&gt; d hashList key append b adr d blockSize KZoneAllocator::addBlock MemBlock b b newer b older d currentBlock d currentBlock b older newer b d currentBlock b d num_blocks d hashList d num_blocks d hashSize d hashSize d hashDirty d hashList d hashDirty insertHash b KZoneAllocator::initHash d hashList i i d hashSize i d hashList i d hashList d hashList d hashSize d hashSize d num_blocks d hashSize d hashSize d hashSize d hashSize d hashSize d hashList QList&lt;MemBlock *&gt; d hashSize memset d hashList QList&lt;MemBlock *&gt; d hashSize d hashDirty MemBlock b d currentBlock b b b older insertHash b KZoneAllocator::delBlock MemBlock b d hashList d hashDirty quintptr adr quintptr b begin d blockSize quintptr end quintptr b begin d blockSize adr end quintptr key adr d log2 key key d hashSize d hashList key QList&lt;MemBlock *&gt; list d hashList key QList&lt;MemBlock *&gt;::Iterator it list begin QList&lt;MemBlock *&gt;::Iterator endit list end it endit it it b list erase it adr d blockSize b older b older newer b newer b newer b newer older b older b d currentBlock d currentBlock d blockOffset d blockSize b d num_blocks KZoneAllocator::allocate _size alignment _size _size alignment alignment _size d blockOffset d blockSize _size d blockSize qDebug d blockSize addBlock MemBlock d blockSize d blockOffset result d currentBlock begin d blockOffset d currentBlock ref d blockOffset _size result KZoneAllocator::deallocate ptr d hashDirty initHash quintptr key quintptr ptr d log2 d hashSize QList&lt;MemBlock *&gt; list d hashList key list QList&lt;MemBlock *&gt;::ConstIterator it list begin QList&lt;MemBlock *&gt;::ConstIterator endit list end it endit it MemBlock cur it cur is_in ptr cur ref cur d currentBlock delBlock cur d blockOffset KZoneAllocator::free_since ptr d hashList d hashDirty MemBlock b removed b d currentBlock b b b older removed b is_in ptr d hashSize d num_blocks removed d hashDirty d currentBlock d currentBlock is_in ptr d currentBlock d currentBlock older delBlock d currentBlock newer d blockOffset ptr d currentBlock begin</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">deprecated</field>
    <field name="url">deprecated.html</field>
    <field name="keywords"></field>
    <field name="text">Deprecated List Member KComboBox insertURL const QUrl url int index since 4.5 Member KComboBox setContextMenuEnabled bool showMenu since 4.5 use setContextMenuPolicy instead Member KComboBox setUrlDropsEnabled bool enable since 5.0 Use lineEdit() installEventFilter with a LineEditUrlDropEventFilter Member KCompletion slotMakeCompletion const QString string since 5.0 use makeCompletion() instead Member KCompletion slotNextMatch since 5.0 use nextMatch() instead Member KCompletion slotPreviousMatch since 5.0 use previousMatch() instead Member KCompletionBase getKeyBinding KeyBindingType item const since 5.0 use keyBinding instead Member KCompletionBase getKeyBindings const since 5.0 use keyBindingMap instead Member KCompletionBox sizeAndPosition since 5.0 use resizeAndReposition instead Member KLineEdit clickMessage const since 5.0 use QLineEdit::placeholderText instead Member KLineEdit isContextMenuEnabled const since 4.5 use contextMenuPolicy instead Member KLineEdit setClickMessage const QString msg since 5.0 use QLineEdit::setPlaceholderText instead Member KLineEdit setContextMenuEnabled bool showMenu since 4.5 use setContextMenuPolicy instead Member KLineEdit userTextChanged const QString since 4.5 You probably want to connect to textEdited() instead which is emitted whenever the text is actually changed by the user by typing or accepting autocompletion without side effects from suggested autocompletion either userTextChanged isn t needed anymore Member KSortableItem T Key index const use key()</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KComboBox</field>
    <field name="url">classKComboBox.html</field>
    <field name="keywords">KComboBox</field>
    <field name="text">This widget inherits from QComboBox and implements the following additional features a completion object that provides both automatic and manual text completion as well as text rotation configurable key bindings to activate these features a popup menu item that can be used to allow the user to change the text completion mode on the fly To support these new features KComboBox emits a few additional signals such as completion(const QString&amp;) and textRotation(KeyBindingType) The completion signal can be connected to a slot that will assist the user in filling out the remaining text while the rotation signal can be used to traverse through all possible matches whenever text completion results in multiple matches Additionally the returnPressed() and returnPressed(const QString&amp;) signals are emitted when the user presses the Enter/Return key KCombobox by default creates a completion object when you invoke the completionObject(bool) member function for the first time or explicitly use setCompletionObject(KCompletion*, bool) to assign your own completion object Additionally to make this widget more functional KComboBox will by default handle text rotation and completion events internally whenever a completion object is created through either one of the methods mentioned above If you do not need this functionality simply use KCompletionBase::setHandleSignals(bool) or alternatively set the boolean parameter in the setCompletionObject call to false Beware The completion object can be deleted on you especially if a call such as setEditable(false) is made Store the pointer at your own risk and consider using QPointer&lt;KCompletion&gt; The default key bindings for completion and rotation are determined from the global settings in KStandardShortcut These values however can be overridden locally by invoking KCompletionBase::setKeyBinding() The values can easily be reverted back to the default settings by calling useGlobalSettings() An alternate method would be to default individual key bindings by using setKeyBinding() with the default second argument A non-editable combo box only has one completion mode CompletionAuto Unlike an editable combo box the CompletionAuto mode works by matching any typed key with the first letter of entries in the combo box Please note that if you call setEditable(false) to change an editable combo box to a non-editable one the text completion object associated with the combo box will no longer exist unless you created the completion object yourself and assigned it to this widget or you called setAutoDeleteCompletionObject(false) In other words do not do the following A read-only KComboBox will have the same background color as a disabled KComboBox but its foreground color will be the one used for the editable mode This differs from QComboBox s implementation and is done to give visual distinction between the three different modes disabled read-only and editable Usage To enable the basic completion feature To use your own completion object Note that you have to either delete the allocated completion object when you don t need it anymore or call setAutoDeleteCompletionObject(true) Miscellaneous function calls KDE Combo Boxes one non-editable one editable with KUrlCompletion Dawit Alemayehu</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KComboBox::aboutToShowContextMenu</field>
    <field name="args">(QMenu *contextMenu)</field>
    <field name="url">classKComboBox.html#a0baa47d14aa71fd460e22d3fe0b13ad9</field>
    <field name="keywords">aboutToShowContextMenu KComboBox::aboutToShowContextMenu KComboBox aboutToShowContextMenu KComboBox::aboutToShowContextMenu KComboBox</field>
    <field name="text">The signal allows you to add your own entries into the context menu Note that you must not store the pointer to the QPopupMenu since it is created and deleted on demand Otherwise you can crash your app contextMenu the context menu about to be displayed</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KComboBox::completion</field>
    <field name="args">(const QString &amp;)</field>
    <field name="url">classKComboBox.html#aba01e87084e255186af8e5b9d23c5ad9</field>
    <field name="keywords">completion KComboBox::completion KComboBox completion KComboBox::completion KComboBox</field>
    <field name="text">The argument is the current text being edited Note that this signal is not available when the widget is non-editable or the completion mode is set to CompletionNone</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KComboBox::completionModeChanged</field>
    <field name="args">(KCompletion::CompletionMode)</field>
    <field name="url">classKComboBox.html#a42f757eab9404fe7b0968cfd1901c9f0</field>
    <field name="keywords">completionModeChanged KComboBox::completionModeChanged KComboBox completionModeChanged KComboBox::completionModeChanged KComboBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KComboBox::returnPressed</field>
    <field name="args">()</field>
    <field name="url">classKComboBox.html#acf72efbbe3d2ce2de2a648cf71b8f5ac</field>
    <field name="keywords">returnPressed KComboBox::returnPressed KComboBox returnPressed KComboBox::returnPressed KComboBox</field>
    <field name="text">Note that this signal is only emitted when the widget is editable</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KComboBox::returnPressed</field>
    <field name="args">(const QString &amp;)</field>
    <field name="url">classKComboBox.html#a016a019754037011cdf73a42651b9f3f</field>
    <field name="keywords">returnPressed KComboBox::returnPressed KComboBox returnPressed KComboBox::returnPressed KComboBox</field>
    <field name="text">The argument is the current text being edited This signal is just like returnPressed() except that it contains the current text as its argument Note that this signal is only emitted when the widget is editable</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KComboBox::substringCompletion</field>
    <field name="args">(const QString &amp;)</field>
    <field name="url">classKComboBox.html#a056cb4bc158ae9688d78e067c17fecb0</field>
    <field name="keywords">substringCompletion KComboBox::substringCompletion KComboBox substringCompletion KComboBox::substringCompletion KComboBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KComboBox::textRotation</field>
    <field name="args">(KCompletionBase::KeyBindingType)</field>
    <field name="url">classKComboBox.html#a7d892aff1ad8f076ea6ab888550b8c48</field>
    <field name="keywords">textRotation KComboBox::textRotation KComboBox textRotation KComboBox::textRotation KComboBox</field>
    <field name="text">The argument indicates which key binding was pressed In this case this can be either one of four values PrevCompletionMatch NextCompletionMatch RotateUp or RotateDown Note that this signal is not emitted if the completion mode is set to CompletionNone KCompletionBase::setKeyBinding() for details</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KComboBox::rotateText</field>
    <field name="args">(KCompletionBase::KeyBindingType type)</field>
    <field name="url">classKComboBox.html#aebabebf3535c0cc7fbfd5704a47bb149</field>
    <field name="keywords">rotateText KComboBox::rotateText KComboBox rotateText KComboBox::rotateText KComboBox</field>
    <field name="text">Depending on the value of the argument this function either iterates through the history list of this widget or all the possible matches in whenever multiple matches result from a text completion request Note that the all-possible-match iteration will not work if there are no previous matches i.e no text has been completed and the shell history list rotation is only available if the insertion policy for this widget is set either QComobBox::AtTop or QComboBox::AtBottom For other insertion modes whatever has been typed by the user when the rotation event was initiated will be lost type The key binding invoked</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KComboBox::setCompletedItems</field>
    <field name="args">(const QStringList &amp;items, bool autosubject=true) override</field>
    <field name="url">classKComboBox.html#aedfe397c81e68abf8cd18a61547bfdd8</field>
    <field name="keywords">setCompletedItems KComboBox::setCompletedItems KComboBox setCompletedItems KComboBox::setCompletedItems KComboBox</field>
    <field name="text">The popup will be shown immediately</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KComboBox::setCompletedText</field>
    <field name="args">(const QString &amp;) override</field>
    <field name="url">classKComboBox.html#ac7e9649c248b64acd934dd614f517691</field>
    <field name="keywords">setCompletedText KComboBox::setCompletedText KComboBox setCompletedText KComboBox::setCompletedText KComboBox</field>
    <field name="text">This function is an implementation for KCompletionBase::setCompletedText</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KComboBox::setCurrentItem</field>
    <field name="args">(const QString &amp;item, bool insert=false, int index=-1)</field>
    <field name="url">classKComboBox.html#a633c4dc51b0ea801e2efbb505e0e341d</field>
    <field name="keywords">setCurrentItem KComboBox::setCurrentItem KComboBox setCurrentItem KComboBox::setCurrentItem KComboBox</field>
    <field name="text">If there is no such item it is inserted at position index if insert is true Otherwise no item is selected</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::KComboBox</field>
    <field name="args">(QWidget *parent=0)</field>
    <field name="url">classKComboBox.html#a1039e9d79d859bd56b5e4e343cd140f6</field>
    <field name="keywords">KComboBox KComboBox::KComboBox KComboBox KComboBox KComboBox::KComboBox KComboBox</field>
    <field name="text">parent The parent object of this widget</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::KComboBox</field>
    <field name="args">(bool rw, QWidget *parent=0)</field>
    <field name="url">classKComboBox.html#a30b12fa0cf330683f47949e44e0a204d</field>
    <field name="keywords">KComboBox KComboBox::KComboBox KComboBox KComboBox KComboBox::KComboBox KComboBox</field>
    <field name="text">rw When true widget will be editable parent The parent object of this widget</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::~KComboBox</field>
    <field name="args">()</field>
    <field name="url">classKComboBox.html#a553f223552b1ac4b1217a1e611820a7e</field>
    <field name="keywords">KComboBox::~KComboBox KComboBox KComboBox::~KComboBox KComboBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::addUrl</field>
    <field name="args">(const QUrl &amp;url)</field>
    <field name="url">classKComboBox.html#aeb872144a47bc0edcc820a8be7f8a6d6</field>
    <field name="keywords">addUrl KComboBox::addUrl KComboBox addUrl KComboBox::addUrl KComboBox</field>
    <field name="text">QUrl::toDisplayString() is used so that the url is properly decoded for displaying</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::addUrl</field>
    <field name="args">(const QIcon &amp;icon, const QUrl &amp;url)</field>
    <field name="url">classKComboBox.html#a93201230dc79f9ce29e4899cb3257b84</field>
    <field name="keywords">addUrl KComboBox::addUrl KComboBox addUrl KComboBox::addUrl KComboBox</field>
    <field name="text">QUrl::toDisplayString() is used so that the url is properly decoded for displaying</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::autoCompletion</field>
    <field name="args">() const</field>
    <field name="url">classKComboBox.html#a1c6c566f035822dedd54cbbfa6ef3510</field>
    <field name="keywords">autoCompletion KComboBox::autoCompletion KComboBox autoCompletion KComboBox::autoCompletion KComboBox</field>
    <field name="text">Returns true if the current completion mode is set to automatic See its more comprehensive replacement completionMode() true when completion mode is automatic</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::changeUrl</field>
    <field name="args">(int index, const QUrl &amp;url)</field>
    <field name="url">classKComboBox.html#a769c1de3138c63b28e668ef83d0b8b2e</field>
    <field name="keywords">changeUrl KComboBox::changeUrl KComboBox changeUrl KComboBox::changeUrl KComboBox</field>
    <field name="text">QUrl::toDisplayString() is used so that the url is properly decoded for displaying</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::changeUrl</field>
    <field name="args">(int index, const QIcon &amp;icon, const QUrl &amp;url)</field>
    <field name="url">classKComboBox.html#a922bbe0ca73203be89f6debf65b80c74</field>
    <field name="keywords">changeUrl KComboBox::changeUrl KComboBox changeUrl KComboBox::changeUrl KComboBox</field>
    <field name="text">QUrl::toDisplayString() is used so that the url is properly decoded for displaying</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::completionBox</field>
    <field name="args">(bool create=true)</field>
    <field name="url">classKComboBox.html#acf349780217a9e85f0e20b63f023a120</field>
    <field name="keywords">completionBox KComboBox::completionBox KComboBox completionBox KComboBox::completionBox KComboBox</field>
    <field name="text">the completion box that is used in completion mode CompletionPopup and CompletionPopupAuto This method will create a completion box by calling KLineEdit::completionBox if none is there yet create Set this to false if you don t want the box to be created i.e to test if it is available</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::contains</field>
    <field name="args">(const QString &amp;text) const</field>
    <field name="url">classKComboBox.html#a41448d6efe67c015a39e5aea99eb3075</field>
    <field name="keywords">contains KComboBox::contains KComboBox contains KComboBox::contains KComboBox</field>
    <field name="text">If text is an empty string false is returned true if an item with the string text is in the combo box</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::cursorPosition</field>
    <field name="args">() const</field>
    <field name="url">classKComboBox.html#ab2c7a552f8267bfa4dd72b7f9c0d1ce2</field>
    <field name="keywords">cursorPosition KComboBox::cursorPosition KComboBox cursorPosition KComboBox::cursorPosition KComboBox</field>
    <field name="text">This method always returns a if the combo box is not editable read-only Current cursor position</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::insertURL</field>
    <field name="args">(const QUrl &amp;url, int index=-1)</field>
    <field name="url">classKComboBox.html#ad77f6825e714b82fc44e14bc003bdc03</field>
    <field name="keywords">insertURL KComboBox::insertURL KComboBox insertURL KComboBox::insertURL KComboBox</field>
    <field name="text">since 4.5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::insertUrl</field>
    <field name="args">(int index, const QUrl &amp;url)</field>
    <field name="url">classKComboBox.html#a91184f32bdd3ae49a5955c372be91c7b</field>
    <field name="keywords">insertUrl KComboBox::insertUrl KComboBox insertUrl KComboBox::insertUrl KComboBox</field>
    <field name="text">QUrl::toDisplayString() is used so that the url is properly decoded for displaying</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::insertUrl</field>
    <field name="args">(int index, const QIcon &amp;icon, const QUrl &amp;url)</field>
    <field name="url">classKComboBox.html#ab76dbc5ea0a2d1bd984a965685adf483</field>
    <field name="keywords">insertUrl KComboBox::insertUrl KComboBox insertUrl KComboBox::insertUrl KComboBox</field>
    <field name="text">QUrl::toDisplayString() is used so that the url is properly decoded for displaying</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::setAutoCompletion</field>
    <field name="args">(bool autocomplete)</field>
    <field name="url">classKComboBox.html#ae14aa07f44ab4ef1767586afe592155c</field>
    <field name="keywords">setAutoCompletion KComboBox::setAutoCompletion KComboBox setAutoCompletion KComboBox::setAutoCompletion KComboBox</field>
    <field name="text">If true the completion mode will be set to automatic Otherwise it is defaulted to the global setting This method has been replaced by the more comprehensive setCompletionMode() autocomplete Flag to enable/disable automatic completion mode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::setContextMenuEnabled</field>
    <field name="args">(bool showMenu)</field>
    <field name="url">classKComboBox.html#a5daf26b4c50406073c1c87302d7c8605</field>
    <field name="keywords">setContextMenuEnabled KComboBox::setContextMenuEnabled KComboBox setContextMenuEnabled KComboBox::setContextMenuEnabled KComboBox</field>
    <field name="text">This method only works if this widget is editable and allows you to enable/disable the context menu It does nothing if invoked for a non-editable combo box By default the context menu is created if this widget is editable Call this function with the argument set to false to disable the popup menu showMenu If true show the context menu since 4.5 use setContextMenuPolicy instead</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::setEditable</field>
    <field name="args">(bool editable)</field>
    <field name="url">classKComboBox.html#a924d0614f9661b116f37e0ffe4f7aefe</field>
    <field name="keywords">setEditable KComboBox::setEditable KComboBox setEditable KComboBox::setEditable KComboBox</field>
    <field name="text">Note that QComboBox::setEditable is not virtual so do not use a KComboBox in a QComboBox pointer</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::setEditUrl</field>
    <field name="args">(const QUrl &amp;url)</field>
    <field name="url">classKComboBox.html#a5cad84aaf8e8a847968ca80b70c53c44</field>
    <field name="keywords">setEditUrl KComboBox::setEditUrl KComboBox setEditUrl KComboBox::setEditUrl KComboBox</field>
    <field name="text">It uses QUrl::toDisplayString() so that the url is properly decoded for displaying</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::setLineEdit</field>
    <field name="args">(QLineEdit *)</field>
    <field name="url">classKComboBox.html#afc70af07d7562b48cb370ce8f7ad336e</field>
    <field name="keywords">setLineEdit KComboBox::setLineEdit KComboBox setLineEdit KComboBox::setLineEdit KComboBox</field>
    <field name="text">API remains unaffected Note that QComboBox::setLineEdit is not virtual in Qt4 do not use a KComboBox in a QComboBox pointer NOTE Only editable combo boxes can have a line editor As such any attempt to assign a line edit to a non-editable combo box will simply be ignored</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::setTrapReturnKey</field>
    <field name="args">(bool trap)</field>
    <field name="url">classKComboBox.html#a8e871fd7d8d6e67539e5db44b9b9b1dd</field>
    <field name="keywords">setTrapReturnKey KComboBox::setTrapReturnKey KComboBox setTrapReturnKey KComboBox::setTrapReturnKey KComboBox</field>
    <field name="text">Call this method with trap equal to true to make KComboBox stop these events The signals will still be emitted of course Only affects editable combo boxes setTrapReturnKey()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::setUrlDropsEnabled</field>
    <field name="args">(bool enable)</field>
    <field name="url">classKComboBox.html#ac75e989a53f5a2d9dbaadedfdfb6567d</field>
    <field name="keywords">setUrlDropsEnabled KComboBox::setUrlDropsEnabled KComboBox setUrlDropsEnabled KComboBox::setUrlDropsEnabled KComboBox</field>
    <field name="text">If enabled and the user drops an URL the decoded URL will be inserted Otherwise the default behavior of QComboBox is used which inserts the encoded URL enable If true insert decoded URLs since 5.0 Use lineEdit() installEventFilter with a LineEditUrlDropEventFilter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::trapReturnKey</field>
    <field name="args">() const</field>
    <field name="url">classKComboBox.html#a701a0ca8e3ceb3c4da0e9ab4e4d2c2e5</field>
    <field name="keywords">trapReturnKey KComboBox::trapReturnKey KComboBox trapReturnKey KComboBox::trapReturnKey KComboBox</field>
    <field name="text">true if key events of Key_Return or Key_Enter will be stopped false if they will be propagated setTrapReturnKey</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::urlDropsEnabled</field>
    <field name="args">() const</field>
    <field name="url">classKComboBox.html#a71410fb7c4bf30ea750deffd9bfdf79f</field>
    <field name="keywords">urlDropsEnabled KComboBox::urlDropsEnabled KComboBox urlDropsEnabled KComboBox::urlDropsEnabled KComboBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::KCompletionBase</field>
    <field name="args">()</field>
    <field name="url">classKCompletionBase.html#abb765129aafb3ddc0f93396e15b5895f</field>
    <field name="keywords">KCompletionBase KCompletionBase::KCompletionBase KCompletionBase KCompletionBase KCompletionBase::KCompletionBase KCompletionBase KCompletionBase KCompletionBase::KCompletionBase KCompletionBase KCompletionBase KCompletionBase::KCompletionBase KCompletionBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::~KCompletionBase</field>
    <field name="args">()</field>
    <field name="url">classKCompletionBase.html#aafb6c36afdbf57a4fe2c5d2c35bec540</field>
    <field name="keywords">KCompletionBase::~KCompletionBase KCompletionBase KCompletionBase::~KCompletionBase KCompletionBase KCompletionBase::~KCompletionBase KCompletionBase KCompletionBase::~KCompletionBase KCompletionBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::completionMode</field>
    <field name="args">() const</field>
    <field name="url">classKCompletionBase.html#aa3274a03fda14abab97517f21e0c0bc5</field>
    <field name="keywords">completionMode KCompletionBase::completionMode KCompletionBase completionMode KCompletionBase::completionMode KCompletionBase completionMode KCompletionBase::completionMode KCompletionBase completionMode KCompletionBase::completionMode KCompletionBase</field>
    <field name="text">the completion mode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::completionObject</field>
    <field name="args">(bool handleSignals=true)</field>
    <field name="url">classKCompletionBase.html#a74c9984be0f58991223870468bc1e7b1</field>
    <field name="keywords">completionObject KCompletionBase::completionObject KCompletionBase completionObject KCompletionBase::completionObject KCompletionBase completionObject KCompletionBase::completionObject KCompletionBase completionObject KCompletionBase::completionObject KCompletionBase</field>
    <field name="text">If the completion object does not exist it is automatically created and by default handles all the completion signals internally unless handleSignals is set to false It is also automatically destroyed when the destructor is called You can change this default behavior using the setAutoDeleteCompletionObject and setHandleSignals member functions See also compObj handleSignals if true handles completion signals internally a pointer to the completion object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::compObj</field>
    <field name="args">() const</field>
    <field name="url">classKCompletionBase.html#a6149f64b6caa298f805cce30ee96be15</field>
    <field name="keywords">compObj KCompletionBase::compObj KCompletionBase compObj KCompletionBase::compObj KCompletionBase compObj KCompletionBase::compObj KCompletionBase compObj KCompletionBase::compObj KCompletionBase</field>
    <field name="text">This method is only different from completionObject() in that it does not create a new KCompletion object even if the internal pointer is NULL Use this method to get the pointer to a completion object when inheriting so that you will not inadvertently create it the completion object or NULL if one does not exist</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::emitSignals</field>
    <field name="args">() const</field>
    <field name="url">classKCompletionBase.html#a76fcf9fa0b0d67c084b7966a9dfc1f9f</field>
    <field name="keywords">emitSignals KCompletionBase::emitSignals KCompletionBase emitSignals KCompletionBase::emitSignals KCompletionBase emitSignals KCompletionBase::emitSignals KCompletionBase emitSignals KCompletionBase::emitSignals KCompletionBase</field>
    <field name="text">true if signals are emitted</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::getKeyBinding</field>
    <field name="args">(KeyBindingType item) const</field>
    <field name="url">classKCompletionBase.html#a7196510e106b06597e5aaf4321005f55</field>
    <field name="keywords">getKeyBinding KCompletionBase::getKeyBinding KCompletionBase getKeyBinding KCompletionBase::getKeyBinding KCompletionBase getKeyBinding KCompletionBase::getKeyBinding KCompletionBase getKeyBinding KCompletionBase::getKeyBinding KCompletionBase</field>
    <field name="text">since 5.0 use keyBinding instead</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::handleSignals</field>
    <field name="args">() const</field>
    <field name="url">classKCompletionBase.html#a026664667cefa574456f504faf64e045</field>
    <field name="keywords">handleSignals KCompletionBase::handleSignals KCompletionBase handleSignals KCompletionBase::handleSignals KCompletionBase handleSignals KCompletionBase::handleSignals KCompletionBase handleSignals KCompletionBase::handleSignals KCompletionBase</field>
    <field name="text">true if this signals are handled internally</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::isCompletionObjectAutoDeleted</field>
    <field name="args">() const</field>
    <field name="url">classKCompletionBase.html#abdbb955ddfbb365de5fec3bd88b7e95c</field>
    <field name="keywords">isCompletionObjectAutoDeleted KCompletionBase::isCompletionObjectAutoDeleted KCompletionBase isCompletionObjectAutoDeleted KCompletionBase::isCompletionObjectAutoDeleted KCompletionBase isCompletionObjectAutoDeleted KCompletionBase::isCompletionObjectAutoDeleted KCompletionBase isCompletionObjectAutoDeleted KCompletionBase::isCompletionObjectAutoDeleted KCompletionBase</field>
    <field name="text">See setCompletionObject() and enableCompletion() for details true if the completion object will be deleted automatically</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::keyBinding</field>
    <field name="args">(KeyBindingType item) const</field>
    <field name="url">classKCompletionBase.html#a01fe83bcc89f915b5cec43a38aa2ef59</field>
    <field name="keywords">keyBinding KCompletionBase::keyBinding KCompletionBase keyBinding KCompletionBase::keyBinding KCompletionBase keyBinding KCompletionBase::keyBinding KCompletionBase keyBinding KCompletionBase::keyBinding KCompletionBase</field>
    <field name="text">This method returns the key binding used to activate the feature given by item If the binding contains modifier key(s) the sum of the modifier key and the actual key code is returned item the item to check the key binding used for the feature given by item 5.0 setKeyBinding</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::setAutoDeleteCompletionObject</field>
    <field name="args">(bool autoDelete)</field>
    <field name="url">classKCompletionBase.html#aa2481a5de4ea868b5abe05b6f2416a68</field>
    <field name="keywords">setAutoDeleteCompletionObject KCompletionBase::setAutoDeleteCompletionObject KCompletionBase setAutoDeleteCompletionObject KCompletionBase::setAutoDeleteCompletionObject KCompletionBase setAutoDeleteCompletionObject KCompletionBase::setAutoDeleteCompletionObject KCompletionBase setAutoDeleteCompletionObject KCompletionBase::setAutoDeleteCompletionObject KCompletionBase</field>
    <field name="text">If the argument is set to true the completion object is deleted when this widget s destructor is called autoDelete if true delete completion object on destruction</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::setCompletedItems</field>
    <field name="args">(const QStringList &amp;items, bool autoSuggest=true)=0</field>
    <field name="url">classKCompletionBase.html#a3aef13c5c03d5e1813d1da2566acd0ba</field>
    <field name="keywords">setCompletedItems KCompletionBase::setCompletedItems KCompletionBase setCompletedItems KCompletionBase::setCompletedItems KCompletionBase setCompletedItems KCompletionBase::setCompletedItems KCompletionBase setCompletedItems KCompletionBase::setCompletedItems KCompletionBase</field>
    <field name="text">items the list of completed items autoSuggest if true the first element of items is automatically completed i.e preselected</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::setCompletedText</field>
    <field name="args">(const QString &amp;text)=0</field>
    <field name="url">classKCompletionBase.html#a4aaa12b7b3900f3ac4c0cc22774bd212</field>
    <field name="keywords">setCompletedText KCompletionBase::setCompletedText KCompletionBase setCompletedText KCompletionBase::setCompletedText KCompletionBase setCompletedText KCompletionBase::setCompletedText KCompletionBase setCompletedText KCompletionBase::setCompletedText KCompletionBase</field>
    <field name="text">This function is intended to allow external completion implementations to set completed text appropriately It is mostly relevant when the completion mode is set to CompletionAuto and CompletionManual modes See KCompletionBase::setCompletedText Does nothing in CompletionPopup mode as all available matches will be shown in the popup text the completed text to be set in the widget</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::setCompletionMode</field>
    <field name="args">(KCompletion::CompletionMode mode)</field>
    <field name="url">classKCompletionBase.html#a098af39b5fb14b70be93424a8e1d8baa</field>
    <field name="keywords">setCompletionMode KCompletionBase::setCompletionMode KCompletionBase setCompletionMode KCompletionBase::setCompletionMode KCompletionBase setCompletionMode KCompletionBase::setCompletionMode KCompletionBase</field>
    <field name="text">mode Completion type CompletionMode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::setCompletionObject</field>
    <field name="args">(KCompletion *completionObject, bool handleSignals=true)</field>
    <field name="url">classKCompletionBase.html#a65cde4820556682dc0cf392ba50ade1a</field>
    <field name="keywords">setCompletionObject KCompletionBase::setCompletionObject KCompletionBase setCompletionObject KCompletionBase::setCompletionObject KCompletionBase setCompletionObject KCompletionBase::setCompletionObject KCompletionBase</field>
    <field name="text">This method assigns the completion object and sets it up to automatically handle the completion and rotation signals internally You should use this function if you want to share one completion object among your widgets or need to use a customized completion object The object assigned through this method is not deleted when this object s destructor is invoked unless you explicitly call setAutoDeleteCompletionObject after calling this method Be sure to set the bool argument to false if you want to handle the completion signals yourself completionObject a KCompletion or a derived child object handleCompletionSignals if true handles completion signals internally</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::setEmitSignals</field>
    <field name="args">(bool emitRotationSignals)</field>
    <field name="url">classKCompletionBase.html#a0808dfb76db6caaa923f49fef6b09eba</field>
    <field name="keywords">setEmitSignals KCompletionBase::setEmitSignals KCompletionBase setEmitSignals KCompletionBase::setEmitSignals KCompletionBase setEmitSignals KCompletionBase::setEmitSignals KCompletionBase setEmitSignals KCompletionBase::setEmitSignals KCompletionBase</field>
    <field name="text">emitRotationSignals if false disables the emission of rotation signals</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::setEnableSignals</field>
    <field name="args">(bool enable)</field>
    <field name="url">classKCompletionBase.html#ab8cdaf74f10ee3e8df4b382a93df8fda</field>
    <field name="keywords">setEnableSignals KCompletionBase::setEnableSignals KCompletionBase setEnableSignals KCompletionBase::setEnableSignals KCompletionBase setEnableSignals KCompletionBase::setEnableSignals KCompletionBase setEnableSignals KCompletionBase::setEnableSignals KCompletionBase</field>
    <field name="text">Invoking this function with enable set to false will cause the completion and rotation signals not to be emitted However unlike setting the completion object to NULL using setCompletionObject disabling the emission of the signals through this method does not affect the current completion object There is no need to invoke this function by default When a completion object is created through completionObject or setCompletionObject these signals are set to emit automatically Also note that disabling this signals will not necessarily interfere with the objects ability to handle these events internally See setHandleSignals enable if false disables the emission of completion and rotation signals</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::setHandleSignals</field>
    <field name="args">(bool handle)</field>
    <field name="url">classKCompletionBase.html#a58de94406fccd3eea9b0075e987cb309</field>
    <field name="keywords">setHandleSignals KCompletionBase::setHandleSignals KCompletionBase setHandleSignals KCompletionBase::setHandleSignals KCompletionBase setHandleSignals KCompletionBase::setHandleSignals KCompletionBase setHandleSignals KCompletionBase::setHandleSignals KCompletionBase</field>
    <field name="text">This function simply assigns a boolean value that indicates whether it should handle rotation and completion events or not Note that this does not stop the object from emitting signals when these events occur handle if true it handles completion and rotation internally</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::setKeyBinding</field>
    <field name="args">(KeyBindingType item, const QList&lt; QKeySequence &gt; &amp;key)</field>
    <field name="url">classKCompletionBase.html#a772c270be4f369ef0fc3337cddeaf11f</field>
    <field name="keywords">setKeyBinding KCompletionBase::setKeyBinding KCompletionBase setKeyBinding KCompletionBase::setKeyBinding KCompletionBase setKeyBinding KCompletionBase::setKeyBinding KCompletionBase setKeyBinding KCompletionBase::setKeyBinding KCompletionBase</field>
    <field name="text">When the keys set by this function are pressed a signal defined by the inheriting widget will be activated If the default value or 0 is specified by the second parameter then the key binding as defined in the global setting should be used This method returns false when key is negative or the supplied key binding conflicts with another one set for another feature NOTE To use a modifier key Shift Ctrl Alt as part of the key binding simply sum up the values of the modifier and the actual key For example to use CTRL+E supply as the second argument to this function item the feature whose key binding needs to be set TextCompletion the manual completion key binding PrevCompletionMatch the previous match key for multiple completion NextCompletionMatch the next match key for for multiple completion SubstringCompletion the key for substring completion key key binding used to rotate down in a list true if key binding is successfully set keyBinding</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::useGlobalKeyBindings</field>
    <field name="args">()</field>
    <field name="url">classKCompletionBase.html#acb5942c5dbc1e01353cc3d199226e234</field>
    <field name="keywords">useGlobalKeyBindings KCompletionBase::useGlobalKeyBindings KCompletionBase useGlobalKeyBindings KCompletionBase::useGlobalKeyBindings KCompletionBase useGlobalKeyBindings KCompletionBase::useGlobalKeyBindings KCompletionBase useGlobalKeyBindings KCompletionBase::useGlobalKeyBindings KCompletionBase</field>
    <field name="text">This method changes the values of the key bindings for rotation and completion features to the default values provided in KGlobalSettings NOTE By default inheriting widgets should use the global key bindings so that there is no need to call this method</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KComboBox::makeCompletion</field>
    <field name="args">(const QString &amp;)</field>
    <field name="url">classKComboBox.html#a5135d425795f13e479871cf8110c6855</field>
    <field name="keywords">makeCompletion KComboBox::makeCompletion KComboBox makeCompletion KComboBox::makeCompletion KComboBox</field>
    <field name="text">Note this method is not invoked if the completion mode is set to CompletionNone Also if the mode is set to CompletionShell and multiple matches are found this method will complete the text to the first match with a beep to indicate that there are more matches Then any successive completion key event iterates through the remaining matches This way the rotation functionality is left to iterate through the list as usual</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KComboBox::setCompletedText</field>
    <field name="args">(const QString &amp;text, bool marked)</field>
    <field name="url">classKComboBox.html#a25f37bb5d41d483ffcccbd2cd3c5a0b5</field>
    <field name="keywords">setCompletedText KComboBox::setCompletedText KComboBox setCompletedText KComboBox::setCompletedText KComboBox</field>
    <field name="text">text The text to be set in the line edit marked Whether the text inserted should be highlighted</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::delegate</field>
    <field name="args">() const</field>
    <field name="url">classKCompletionBase.html#a003700966e3afc29239858f9a942ec37</field>
    <field name="keywords">delegate KCompletionBase::delegate KCompletionBase delegate KCompletionBase::delegate KCompletionBase delegate KCompletionBase::delegate KCompletionBase delegate KCompletionBase::delegate KCompletionBase</field>
    <field name="text">the delegation object or 0 if there is none setDelegate()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::getKeyBindings</field>
    <field name="args">() const</field>
    <field name="url">classKCompletionBase.html#af609c46716ccb4f134a7c3cc84b9fd20</field>
    <field name="keywords">getKeyBindings KCompletionBase::getKeyBindings KCompletionBase getKeyBindings KCompletionBase::getKeyBindings KCompletionBase getKeyBindings KCompletionBase::getKeyBindings KCompletionBase getKeyBindings KCompletionBase::getKeyBindings KCompletionBase</field>
    <field name="text">since 5.0 use keyBindingMap instead</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::keyBindingMap</field>
    <field name="args">() const</field>
    <field name="url">classKCompletionBase.html#a4e92fbd2b705b0de0a3e38c70e94e62d</field>
    <field name="keywords">keyBindingMap KCompletionBase::keyBindingMap KCompletionBase keyBindingMap KCompletionBase::keyBindingMap KCompletionBase keyBindingMap KCompletionBase::keyBindingMap KCompletionBase keyBindingMap KCompletionBase::keyBindingMap KCompletionBase</field>
    <field name="text">This method is the same as getKeyBinding() except that it returns the whole keymap containing the key bindings the key binding used for the feature given by item 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::setDelegate</field>
    <field name="args">(KCompletionBase *delegate)</field>
    <field name="url">classKCompletionBase.html#a1a0a46386d209f27653794dad5014b4c</field>
    <field name="keywords">setDelegate KCompletionBase::setDelegate KCompletionBase setDelegate KCompletionBase::setDelegate KCompletionBase setDelegate KCompletionBase::setDelegate KCompletionBase setDelegate KCompletionBase::setDelegate KCompletionBase</field>
    <field name="text">If a delegation object is set all function calls will be forwarded to the delegation object delegate the delegation object or 0 to remove it</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::setKeyBindingMap</field>
    <field name="args">(KeyBindingMap keyBindingMap)</field>
    <field name="url">classKCompletionBase.html#ab999fe13691f295fa4c1a949e57d66bf</field>
    <field name="keywords">setKeyBindingMap KCompletionBase::setKeyBindingMap KCompletionBase setKeyBindingMap KCompletionBase::setKeyBindingMap KCompletionBase setKeyBindingMap KCompletionBase::setKeyBindingMap KCompletionBase setKeyBindingMap KCompletionBase::setKeyBindingMap KCompletionBase</field>
    <field name="text">keyBindingMap</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBase::virtual_hook</field>
    <field name="args">(int id, void *data)</field>
    <field name="url">classKCompletionBase.html#a72eb5e416deca15bac4c68419a943513</field>
    <field name="keywords">virtual_hook KCompletionBase::virtual_hook KCompletionBase virtual_hook KCompletionBase::virtual_hook KCompletionBase virtual_hook KCompletionBase::virtual_hook KCompletionBase virtual_hook KCompletionBase::virtual_hook KCompletionBase</field>
    <field name="text">Unused in this class</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KCompletionBase::KeyBindingType</field>
    <field name="url">classKCompletionBase.html#afcb3584e759d233cf9acabf6a5d4ab4b</field>
    <field name="keywords">KeyBindingType KCompletionBase::KeyBindingType KCompletionBase KeyBindingType KCompletionBase::KeyBindingType KCompletionBase KeyBindingType KCompletionBase::KeyBindingType KCompletionBase KeyBindingType KCompletionBase::KeyBindingType KCompletionBase</field>
    <field name="text">The default key bindings for these items are defined in KStandardShortcut</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCompletionBase::TextCompletion</field>
    <field name="url">classKCompletionBase.html#afcb3584e759d233cf9acabf6a5d4ab4bab533a930960cd953ee3300a107966697</field>
    <field name="keywords">TextCompletion KCompletionBase::TextCompletion KCompletionBase TextCompletion KCompletionBase::TextCompletion KCompletionBase TextCompletion KCompletionBase::TextCompletion KCompletionBase TextCompletion KCompletionBase::TextCompletion KCompletionBase</field>
    <field name="text">Text completion by default Ctrl-E</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCompletionBase::PrevCompletionMatch</field>
    <field name="url">classKCompletionBase.html#afcb3584e759d233cf9acabf6a5d4ab4ba40960fd71ae86bb95b8c4d892fc03953</field>
    <field name="keywords">PrevCompletionMatch KCompletionBase::PrevCompletionMatch KCompletionBase PrevCompletionMatch KCompletionBase::PrevCompletionMatch KCompletionBase PrevCompletionMatch KCompletionBase::PrevCompletionMatch KCompletionBase PrevCompletionMatch KCompletionBase::PrevCompletionMatch KCompletionBase</field>
    <field name="text">Switch to previous completion by default Ctrl-Up</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCompletionBase::NextCompletionMatch</field>
    <field name="url">classKCompletionBase.html#afcb3584e759d233cf9acabf6a5d4ab4ba38a04db77ca51dca3c68e95d9566b6e9</field>
    <field name="keywords">NextCompletionMatch KCompletionBase::NextCompletionMatch KCompletionBase NextCompletionMatch KCompletionBase::NextCompletionMatch KCompletionBase NextCompletionMatch KCompletionBase::NextCompletionMatch KCompletionBase NextCompletionMatch KCompletionBase::NextCompletionMatch KCompletionBase</field>
    <field name="text">Switch to next completion by default Ctrl-Down</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCompletionBase::SubstringCompletion</field>
    <field name="url">classKCompletionBase.html#afcb3584e759d233cf9acabf6a5d4ab4ba381b8a3ec8dc1bf135e671adf71de719</field>
    <field name="keywords">SubstringCompletion KCompletionBase::SubstringCompletion KCompletionBase SubstringCompletion KCompletionBase::SubstringCompletion KCompletionBase SubstringCompletion KCompletionBase::SubstringCompletion KCompletionBase SubstringCompletion KCompletionBase::SubstringCompletion KCompletionBase</field>
    <field name="text">Substring completion by default Ctrl-T</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KCompletion</field>
    <field name="url">classKCompletion.html</field>
    <field name="keywords">KCompletion</field>
    <field name="text">This class offers easy use of or on QString objects A common use is completing filenames or URLs see KUrlCompletion() But it is not limited to URL-completion everything should be completable! The user should be able to complete email addresses telephone numbers commands SQL queries Every time your program knows what the user can type into an edit field you should offer completion With KCompletion this is very easy and if you are using a line edit widget KLineEdit it is even easier Basically you tell a KCompletion object what strings should be completable and whenever completion should be invoked you call makeCompletion() KLineEdit and an editable KComboBox even do this automatically for you KCompletion offers the completed string via the signal match() and all matching strings when the result is ambiguous via the method allMatches() Notice auto completion shell completion and manual completion work slightly differently auto completion always returns a complete item as match When more than one matching item is available it will deliver just the first one depending on sorting order Iterating over all matches is possible via nextMatch() and previousMatch() popup completion works in the same way the only difference being that the completed items are not put into the edit widget but into a separate popup box manual completion works the same way as auto completion except that it is not invoked automatically while the user is typing but only when the user presses a special key The difference of manual and auto completion is therefore only visible in UI classes KCompletion needs to know whether to deliver partial matches shell completion or whole matches auto/manual completion therefore KCompletion::CompletionMan and KCompletion::CompletionAuto have the exact same effect in KCompletion shell completion works like in a shell when multiple matches are available the longest possible string of all matches is returned i.e only a partial item Iterating over all matching items complete not partial is possible via nextMatch() and previousMatch() As an application programmer you do not normally have to worry about the different completion modes KCompletion handles that for you according to the setting setCompletionMode() The default setting is globally configured by the user and read from completionMode() A short example In shell-completion mode this will be in auto-completion mode it will be as that is alphabetically smaller If setOrder was set to Insertion would be completed in auto-completion mode as that was inserted before You can dynamically update the completable items by removing and adding them whenever you want For advanced usage you could even use multiple KCompletion objects E.g imagine an editor like kwrite with multiple open files You could store items of each file in a different KCompletion object so that you know and tell the user where a completion comes from Note KCompletion does not work with strings that contain 0x0 characters unicode null as this is used internally as a delimiter You may inherit from KCompletion and override makeCompletion() in special cases like reading directories or urls and then supplying the contents to KCompletion as KUrlCompletion does but this is usually not necessary Carsten Pfeiffer</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KCompletion::CompletionMode</field>
    <field name="url">classKCompletion.html#a927c284d89e41d976412201b68ca67e9</field>
    <field name="keywords">CompletionMode KCompletion::CompletionMode KCompletion</field>
    <field name="text">See the styleguide 5.0</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCompletion::CompletionNone</field>
    <field name="url">classKCompletion.html#a927c284d89e41d976412201b68ca67e9a103ff6b05ac57027f6cbd47a7806f263</field>
    <field name="keywords">CompletionNone KCompletion::CompletionNone KCompletion</field>
    <field name="text">No completion is used</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCompletion::CompletionAuto</field>
    <field name="url">classKCompletion.html#a927c284d89e41d976412201b68ca67e9a75558e348f18fff4b6a0bb406625d03a</field>
    <field name="keywords">CompletionAuto KCompletion::CompletionAuto KCompletion</field>
    <field name="text">Text is automatically filled in whenever possible</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCompletion::CompletionMan</field>
    <field name="url">classKCompletion.html#a927c284d89e41d976412201b68ca67e9a8cf32b45e4256834bc183a66d355b6a3</field>
    <field name="keywords">CompletionMan KCompletion::CompletionMan KCompletion</field>
    <field name="text">Same as automatic but shortest match is used for completion</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCompletion::CompletionShell</field>
    <field name="url">classKCompletion.html#a927c284d89e41d976412201b68ca67e9aa62055e80f1fac714994a179f99eabc7</field>
    <field name="keywords">CompletionShell KCompletion::CompletionShell KCompletion</field>
    <field name="text">Completes text much in the same way as a typical shell would</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCompletion::CompletionPopup</field>
    <field name="url">classKCompletion.html#a927c284d89e41d976412201b68ca67e9ab7d2690df288094515a12c902c00df36</field>
    <field name="keywords">CompletionPopup KCompletion::CompletionPopup KCompletion</field>
    <field name="text">Lists all possible matches in a popup list box to choose from</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCompletion::CompletionPopupAuto</field>
    <field name="url">classKCompletion.html#a927c284d89e41d976412201b68ca67e9a6988c584d6699bfa473641e9720efb5e</field>
    <field name="keywords">CompletionPopupAuto KCompletion::CompletionPopupAuto KCompletion</field>
    <field name="text">Lists all possible matches in a popup list box to choose from and automatically fills the result whenever possible</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KCompletion::CompOrder</field>
    <field name="url">classKCompletion.html#a88eb49b5b89f48f9296b136f6bfa9a62</field>
    <field name="keywords">CompOrder KCompletion::CompOrder KCompletion</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCompletion::Sorted</field>
    <field name="url">classKCompletion.html#a88eb49b5b89f48f9296b136f6bfa9a62ac0b1933cc325bb144982ab09c02376db</field>
    <field name="keywords">Sorted KCompletion::Sorted KCompletion</field>
    <field name="text">Use alphabetically sorted order</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCompletion::Insertion</field>
    <field name="url">classKCompletion.html#a88eb49b5b89f48f9296b136f6bfa9a62a2011ff90476ea031ab999c12a06e548a</field>
    <field name="keywords">Insertion KCompletion::Insertion KCompletion</field>
    <field name="text">Use order of insertion</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCompletion::Weighted</field>
    <field name="url">classKCompletion.html#a88eb49b5b89f48f9296b136f6bfa9a62a968d39944eede4761a23cce8a8b06f52</field>
    <field name="keywords">Weighted KCompletion::Weighted KCompletion</field>
    <field name="text">Use weighted order</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KCompletion::match</field>
    <field name="args">(const QString &amp;item)</field>
    <field name="url">classKCompletion.html#aa9df404d9a37d5b57ede9dd90f765116</field>
    <field name="keywords">match KCompletion::match KCompletion</field>
    <field name="text">In particular makeCompletion() previousMatch() and nextMatch() all emit this signal makeCompletion() will only emit it when a match is found but the other methods will alwasy emit it and so may emit it with an empty string item the matching item or QString() if there were no more matching items</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KCompletion::matches</field>
    <field name="args">(const QStringList &amp;matchlist)</field>
    <field name="url">classKCompletion.html#a5b32b1facc011ba6d9cc2de31447e62b</field>
    <field name="keywords">matches KCompletion::matches KCompletion</field>
    <field name="text">matchlist the list of all matching items</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KCompletion::multipleMatches</field>
    <field name="args">()</field>
    <field name="url">classKCompletion.html#a3ba213b48f41e2404150250f44626a55</field>
    <field name="keywords">multipleMatches KCompletion::multipleMatches KCompletion</field>
    <field name="text">hasMultipleMatches</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletion::addItem</field>
    <field name="args">(const QString &amp;item)</field>
    <field name="url">classKCompletion.html#ac2e280254dc163f153077ec882f05513</field>
    <field name="keywords">addItem KCompletion::addItem KCompletion</field>
    <field name="text">Resets the current item state previousMatch() and nextMatch() won t work the next time they are called item the item to add</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletion::addItem</field>
    <field name="args">(const QString &amp;item, uint weight)</field>
    <field name="url">classKCompletion.html#a09e854a3c6d3950a9fbeb8b2cf3ecd47</field>
    <field name="keywords">addItem KCompletion::addItem KCompletion</field>
    <field name="text">Resets the current item state previousMatch() and nextMatch() won t work the next time they are called Sets the weight of the item to weight or adds it to the current weight if the item is already available The weight has to be greater than 1 to take effect default weight is 1 item the item to add weight the weight of the item default is 1</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletion::clear</field>
    <field name="args">()</field>
    <field name="url">classKCompletion.html#aa83d65e9084382a6ecfcf5ff2b465a9f</field>
    <field name="keywords">clear KCompletion::clear KCompletion</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletion::insertItems</field>
    <field name="args">(const QStringList &amp;items)</field>
    <field name="url">classKCompletion.html#a13b8fb6f3cd37d817418c873d1032c8d</field>
    <field name="keywords">insertItems KCompletion::insertItems KCompletion</field>
    <field name="text">It does the same as setItems() but without calling clear() before items the items to insert</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletion::makeCompletion</field>
    <field name="args">(const QString &amp;string)</field>
    <field name="url">classKCompletion.html#a43b597e5d237650cc4b0e3dec50c4d2f</field>
    <field name="keywords">makeCompletion KCompletion::makeCompletion KCompletion</field>
    <field name="text">Will either return the first matching item if there is more than one match or QString() if no match is found In the latter case a sound will be emitted depending on soundsEnabled() If a match is found it will be emitted via the signal match() If this is called twice or more with the same string while no items were added or removed in the meantime all available completions will be emitted via the signal matches() This happens only in shell-completion mode string the string to complete the matching item or QString() if there is no matching item substringCompletion</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletion::nextMatch</field>
    <field name="args">()</field>
    <field name="url">classKCompletion.html#a0b42db3a570daa789b59f8b41474ad90</field>
    <field name="keywords">nextMatch KCompletion::nextMatch KCompletion</field>
    <field name="text">When reaching the last item the list is rotated so it will return the first match and a sound is emitted depending on soundsEnabled() the next item from the list of matching items When there is no match QString() is returned and a sound is emitted</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletion::previousMatch</field>
    <field name="args">()</field>
    <field name="url">classKCompletion.html#a9b293993541d8ed3c6ca4c67941554f2</field>
    <field name="keywords">previousMatch KCompletion::previousMatch KCompletion</field>
    <field name="text">When reaching the beginning the list is rotated so it will return the last match and a sound is emitted depending on soundsEnabled() the next item from the list of matching items When there is no match QString() is returned and a sound is emitted</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletion::removeItem</field>
    <field name="args">(const QString &amp;item)</field>
    <field name="url">classKCompletion.html#a31ee8cc67ea1228ef88b0ab3e1be644d</field>
    <field name="keywords">removeItem KCompletion::removeItem KCompletion</field>
    <field name="text">Resets the current item state previousMatch() and nextMatch() won t work the next time they are called item the item to remove</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletion::setItems</field>
    <field name="args">(const QStringList &amp;itemList)</field>
    <field name="url">classKCompletion.html#aecf680a90533b2cbdb920a848e1bb813</field>
    <field name="keywords">setItems KCompletion::setItems KCompletion</field>
    <field name="text">Removes all previous items Notice when order() Weighted then the weighting is looked up for every item in the stringlist Every item should have appended where number is an unsigned integer specifying the weighting If you don t like this call setOrder(KCompletion::Insertion) before calling setItems() itemList the list of items that are available for completion items</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletion::slotMakeCompletion</field>
    <field name="args">(const QString &amp;string)</field>
    <field name="url">classKCompletion.html#addbbcdf12afab6f5e1de7b108ea33b62</field>
    <field name="keywords">slotMakeCompletion KCompletion::slotMakeCompletion KCompletion</field>
    <field name="text">Same as makeCompletion() but in this case as a slot string the string to complete makeCompletion since 5.0 use makeCompletion() instead</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletion::slotNextMatch</field>
    <field name="args">()</field>
    <field name="url">classKCompletion.html#af676f5cf491f4d90ed9f120f92300219</field>
    <field name="keywords">slotNextMatch KCompletion::slotNextMatch KCompletion</field>
    <field name="text">Same as nextMatch() but in this case as a slot nextMatch since 5.0 use nextMatch() instead</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletion::slotPreviousMatch</field>
    <field name="args">()</field>
    <field name="url">classKCompletion.html#a4ee5b0552fb56444b5462680eee628a8</field>
    <field name="keywords">slotPreviousMatch KCompletion::slotPreviousMatch KCompletion</field>
    <field name="text">Same as previousMatch() but in this case as a slot previousMatch since 5.0 use previousMatch() instead</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::KCompletion</field>
    <field name="args">()</field>
    <field name="url">classKCompletion.html#a67121e28f073bfc134479845cd2a2a84</field>
    <field name="keywords">KCompletion KCompletion::KCompletion KCompletion</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::~KCompletion</field>
    <field name="args">()</field>
    <field name="url">classKCompletion.html#aed35537eb98e398d9da29df0cdbf5404</field>
    <field name="keywords">KCompletion::~KCompletion KCompletion</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::allMatches</field>
    <field name="args">()</field>
    <field name="url">classKCompletion.html#a5e31436d86b23b8c04b5a59a0249df65</field>
    <field name="keywords">allMatches KCompletion::allMatches KCompletion</field>
    <field name="text">It might take some time if you have a lot of items a list of all matches for the last completed string substringCompletion</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::allMatches</field>
    <field name="args">(const QString &amp;string)</field>
    <field name="url">classKCompletion.html#aa5ad9a50eb978b94242f060fdb68bfa3</field>
    <field name="keywords">allMatches KCompletion::allMatches KCompletion</field>
    <field name="text">string the string to match the list of all matches</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::allWeightedMatches</field>
    <field name="args">()</field>
    <field name="url">classKCompletion.html#adbefa19cf6f8c44b151e6bba5f830938</field>
    <field name="keywords">allWeightedMatches KCompletion::allWeightedMatches KCompletion</field>
    <field name="text">It might take some time if you have a lot of items The matches are returned as KCompletionMatches which also keeps the weight of the matches allowing you to modify some matches or merge them with matches from another call to allWeightedMatches() and sort the matches after that in order to have the matches ordered correctly a list of all completion matches substringCompletion</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::allWeightedMatches</field>
    <field name="args">(const QString &amp;string)</field>
    <field name="url">classKCompletion.html#a6581be3dcb875c4c5a4b4b1b34d97773</field>
    <field name="keywords">allWeightedMatches KCompletion::allWeightedMatches KCompletion</field>
    <field name="text">string the string to match a list of all matches</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::completionMode</field>
    <field name="args">() const</field>
    <field name="url">classKCompletion.html#aaf79e516fa2571f4e4bb62676216e5d3</field>
    <field name="keywords">completionMode KCompletion::completionMode KCompletion</field>
    <field name="text">the current completion mode default is CompletionPopup setCompletionMode CompletionMode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::hasMultipleMatches</field>
    <field name="args">() const</field>
    <field name="url">classKCompletion.html#ac6529b902b28542afec9f149ca82712e</field>
    <field name="keywords">hasMultipleMatches KCompletion::hasMultipleMatches KCompletion</field>
    <field name="text">true if there is more than one match multipleMatches</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::ignoreCase</field>
    <field name="args">() const</field>
    <field name="url">classKCompletion.html#ab578758792d55020b1b676dcd2cb6587</field>
    <field name="keywords">ignoreCase KCompletion::ignoreCase KCompletion</field>
    <field name="text">Default is false case sensitive true if the case will be ignored setIgnoreCase</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::isEmpty</field>
    <field name="args">() const</field>
    <field name="url">classKCompletion.html#a5b28387a34700956d86e7e2f509fdb98</field>
    <field name="keywords">isEmpty KCompletion::isEmpty KCompletion</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::items</field>
    <field name="args">() const</field>
    <field name="url">classKCompletion.html#a7f51bc348dfc5bfebab12082c99bf310</field>
    <field name="keywords">items KCompletion::items KCompletion</field>
    <field name="text">This is useful if you need to save the state of a KCompletion object and restore it later Important note when order() Weighted then every item in the stringlist has its weight appended delimited by a colon E.g an item might look like where 4 is the weight This is necessary so that you can save the items along with its weighting on disk and load them back with setItems() restoring its weight as well If you really don t want the appended weightings call setOrder( KCompletion::Insertion ) before calling items() a list of all items setItems</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::lastMatch</field>
    <field name="args">() const</field>
    <field name="url">classKCompletion.html#ad1929345c4514c06ac6c2d860071ee14</field>
    <field name="keywords">lastMatch KCompletion::lastMatch KCompletion</field>
    <field name="text">Might be useful if you need to check whether a completion is different from the last one the last match QString() is returned when there is no last match</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::order</field>
    <field name="args">() const</field>
    <field name="url">classKCompletion.html#a3d9a1c98c82819e166727e744b94e1d1</field>
    <field name="keywords">order KCompletion::order KCompletion</field>
    <field name="text">the current completion order setOrder</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::setCompletionMode</field>
    <field name="args">(CompletionMode mode)</field>
    <field name="url">classKCompletion.html#a806d98ee8eab5262255cdc04eceec3f0</field>
    <field name="keywords">setCompletionMode KCompletion::setCompletionMode KCompletion</field>
    <field name="text">mode the completion mode CompletionMode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::setIgnoreCase</field>
    <field name="args">(bool ignoreCase)</field>
    <field name="url">classKCompletion.html#a99c356a9776a61aeaec7979a242ea51f</field>
    <field name="keywords">setIgnoreCase KCompletion::setIgnoreCase KCompletion</field>
    <field name="text">E.g makeCompletion might return Default is false case sensitive ignoreCase true to ignore the case ignoreCase</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::setOrder</field>
    <field name="args">(CompOrder order)</field>
    <field name="url">classKCompletion.html#a77257091180054bb7d6cf280dae1dad2</field>
    <field name="keywords">setOrder KCompletion::setOrder KCompletion</field>
    <field name="text">in the order of insertion sorted alphabetically weighted Choosing weighted makes KCompletion perform an implicit weighting based on how often an item is inserted Imagine a web browser with a location bar where the user enters URLs The more often a URL is entered the higher priority it gets Note Setting the order to sorted only affects new inserted items already existing items will stay in the current order So you probably want to call setOrder(Sorted) before inserting items if you want everything sorted Default is insertion order order the new order order</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::setSoundsEnabled</field>
    <field name="args">(bool enable)</field>
    <field name="url">classKCompletion.html#a8414e207f782085f4cd38cb462542cdb</field>
    <field name="keywords">setSoundsEnabled KCompletion::setSoundsEnabled KCompletion</field>
    <field name="text">makeCompletion() can t find a match there is a partial completion multiple matches in Shell-completion mode nextMatch() or previousMatch() hit the last possible match and the list is rotated KNotifyClient() is used to emit the sounds enable true to enable sounds soundsEnabled</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::soundsEnabled</field>
    <field name="args">() const</field>
    <field name="url">classKCompletion.html#a4714a802d1204f38836190b44b2023bd</field>
    <field name="keywords">soundsEnabled KCompletion::soundsEnabled KCompletion</field>
    <field name="text">Default is enabled true if sounds are enabled setSoundsEnabled</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::substringCompletion</field>
    <field name="args">(const QString &amp;string) const</field>
    <field name="url">classKCompletion.html#a8a29cf04496d576dc2489f2fb1248bfa</field>
    <field name="keywords">substringCompletion KCompletion::substringCompletion KCompletion</field>
    <field name="text">string the string to complete a list of items which contain text as a substring i.e not necessarily at the beginning makeCompletion</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::postProcessMatch</field>
    <field name="args">(QString *match) const</field>
    <field name="url">classKCompletion.html#aa6c51f0c61d01fd4c799880d55c957a4</field>
    <field name="keywords">postProcessMatch KCompletion::postProcessMatch KCompletion</field>
    <field name="text">You can override this method to modify the string that will be emitted This is necessary e.g in KUrlCompletion() where files with spaces in their names are shown escaped but stored unescaped inside KCompletion Never delete that pointer! Default implementation does nothing match the match to process postProcessMatches</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::postProcessMatches</field>
    <field name="args">(QStringList *matchList) const</field>
    <field name="url">classKCompletion.html#a535e00dfaffc58e29233b31d3248f0b1</field>
    <field name="keywords">postProcessMatches KCompletion::postProcessMatches KCompletion</field>
    <field name="text">You can override this method to modify the found items before match() or matches() are emitted Never delete that pointer! Default implementation does nothing matchList the matches to process postProcessMatch</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletion::postProcessMatches</field>
    <field name="args">(KCompletionMatches *matches) const</field>
    <field name="url">classKCompletion.html#a7e322919634ccc7860e70fd34c86ce08</field>
    <field name="keywords">postProcessMatches KCompletion::postProcessMatches KCompletion</field>
    <field name="text">You can override this method to modify the found items before match() or matches() are emitted Never delete that pointer! Default implementation does nothing matches the matches to process postProcessMatch</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KCompletionBase</field>
    <field name="url">classKCompletionBase.html</field>
    <field name="keywords">KCompletionBase</field>
    <field name="text">This is a convenience class that provides the basic functions needed to add text completion support into widgets All that is required is an implementation for the pure virtual function setCompletedText() Refer to KLineEdit or KComboBox to see how easily such support can be added using this as a base class An abstract class for adding text completion support to widgets Dawit Alemayehu</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KCompletionBox</field>
    <field name="url">classKCompletionBox.html</field>
    <field name="keywords">KCompletionBox</field>
    <field name="text">A little utility class for like KLineEdit or KComboBox KCompletionBox is a listbox displayed as a rectangle without any window decoration usually directly under the lineedit or combobox It is filled with all possible matches for a completion so the user can select the one he wants It is used when KCompletion::CompletionMode CompletionPopup or CompletionPopupAuto Carsten Pfeiffer</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KCompletionBox::activated</field>
    <field name="args">(const QString &amp;)</field>
    <field name="url">classKCompletionBox.html#a3608a457b6466be137fd24549e4cc36a</field>
    <field name="keywords">activated KCompletionBox::activated KCompletionBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KCompletionBox::userCancelled</field>
    <field name="args">(const QString &amp;)</field>
    <field name="url">classKCompletionBox.html#a4f4c759719847ecd180e65bfd7fede86</field>
    <field name="keywords">userCancelled KCompletionBox::userCancelled KCompletionBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletionBox::down</field>
    <field name="args">()</field>
    <field name="url">classKCompletionBox.html#abe15cc623385077deb1aa29a1a0de5fe</field>
    <field name="keywords">down KCompletionBox::down KCompletionBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletionBox::end</field>
    <field name="args">()</field>
    <field name="url">classKCompletionBox.html#a68bcf7116f1d6c26c2683dba78fb8548</field>
    <field name="keywords">end KCompletionBox::end KCompletionBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletionBox::home</field>
    <field name="args">()</field>
    <field name="url">classKCompletionBox.html#a72c17b3905949c4b47fc33cf41326049</field>
    <field name="keywords">home KCompletionBox::home KCompletionBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletionBox::insertItems</field>
    <field name="args">(const QStringList &amp;items, int index=-1)</field>
    <field name="url">classKCompletionBox.html#a0e7740f8acfda3c06455b4e205548419</field>
    <field name="keywords">insertItems KCompletionBox::insertItems KCompletionBox</field>
    <field name="text">Does not clear the items before index determines at which position items will be inserted defaults to appending them at the end</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletionBox::pageDown</field>
    <field name="args">()</field>
    <field name="url">classKCompletionBox.html#adf582e591583372153ede6a8e925dc64</field>
    <field name="keywords">pageDown KCompletionBox::pageDown KCompletionBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletionBox::pageUp</field>
    <field name="args">()</field>
    <field name="url">classKCompletionBox.html#aaaf16e434ec11a1d1dadb8acd8efd55c</field>
    <field name="keywords">pageUp KCompletionBox::pageUp KCompletionBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletionBox::popup</field>
    <field name="args">()</field>
    <field name="url">classKCompletionBox.html#adb114b16cd57f23985999e75deb73099</field>
    <field name="keywords">popup KCompletionBox::popup KCompletionBox</field>
    <field name="text">Depending on the screensize and the position of the parent this may be a different place however the default is to pop it up and the lower left corner of the parent Make sure to hide() the box when appropriate</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletionBox::setActivateOnSelect</field>
    <field name="args">(bool doEmit)</field>
    <field name="url">classKCompletionBox.html#a95323c5f57badda9dbdda72fd065d672</field>
    <field name="keywords">setActivateOnSelect KCompletionBox::setActivateOnSelect KCompletionBox</field>
    <field name="text">By default the selected() signal is emitted doEmit false if the signal should not be emitted</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletionBox::setCancelledText</field>
    <field name="args">(const QString &amp;text)</field>
    <field name="url">classKCompletionBox.html#a7c7607a493b4cb207c613f1abd90a28a</field>
    <field name="keywords">setCancelledText KCompletionBox::setCancelledText KCompletionBox</field>
    <field name="text">If the cancelled text is not set through this function the userCancelled signal will not be emitted userCancelled( const QString&amp; ) text the text to be emitted if the user cancels this box</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletionBox::setItems</field>
    <field name="args">(const QStringList &amp;items)</field>
    <field name="url">classKCompletionBox.html#a6b85cdf4a048565f61ce070750845de8</field>
    <field name="keywords">setItems KCompletionBox::setItems KCompletionBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletionBox::setTabHandling</field>
    <field name="args">(bool enable)</field>
    <field name="url">classKCompletionBox.html#ae048988dd55c5c39bd2e64c52be05bef</field>
    <field name="keywords">setTabHandling KCompletionBox::setTabHandling KCompletionBox</field>
    <field name="text">On by default but should be turned off when used in combination with KUrlCompletion When off KLineEdit handles Tab itself making it select the current item from the completion box which is particularly useful when using KUrlCompletion isTabHandling</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletionBox::setVisible</field>
    <field name="args">(bool visible) override</field>
    <field name="url">classKCompletionBox.html#aecaaa0b9390cf8905a59446c6b3a5dce</field>
    <field name="keywords">setVisible KCompletionBox::setVisible KCompletionBox</field>
    <field name="text">API is unaffected Call it only if you really need it i.e the widget was hidden before to have better performance</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletionBox::up</field>
    <field name="args">()</field>
    <field name="url">classKCompletionBox.html#a0789111fff26d5e7966aa8e0d4edac55</field>
    <field name="keywords">up KCompletionBox::up KCompletionBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBox::KCompletionBox</field>
    <field name="args">(QWidget *parent=0)</field>
    <field name="url">classKCompletionBox.html#a17f94ce41b891fc15325425be3bd7782</field>
    <field name="keywords">KCompletionBox KCompletionBox::KCompletionBox KCompletionBox</field>
    <field name="text">The parent widget is used to give the focus back when pressing the up-button on the very first item</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBox::~KCompletionBox</field>
    <field name="args">()</field>
    <field name="url">classKCompletionBox.html#a7c86c4c783499bc467ea8465595427b9</field>
    <field name="keywords">KCompletionBox::~KCompletionBox KCompletionBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBox::activateOnSelect</field>
    <field name="args">() const</field>
    <field name="url">classKCompletionBox.html#a4cd3f59694bcdd49cc530a42c37b7714</field>
    <field name="keywords">activateOnSelect KCompletionBox::activateOnSelect KCompletionBox</field>
    <field name="text">true if selecting an item results in the emission of the selected() signal</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBox::cancelledText</field>
    <field name="args">() const</field>
    <field name="url">classKCompletionBox.html#a63bf4bbca7dd4cf2e5aec93955a24a84</field>
    <field name="keywords">cancelledText KCompletionBox::cancelledText KCompletionBox</field>
    <field name="text">the text set via setCancelledText() or QString()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBox::isTabHandling</field>
    <field name="args">() const</field>
    <field name="url">classKCompletionBox.html#ab0552852052c23bf30b1caf2318e27e1</field>
    <field name="keywords">isTabHandling KCompletionBox::isTabHandling KCompletionBox</field>
    <field name="text">true if this widget is handling Tab-key events to traverse the items in the dropdown list otherwise false Default is true setTabHandling</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBox::items</field>
    <field name="args">() const</field>
    <field name="url">classKCompletionBox.html#ac649d00b60b7a0d31fa0f547e8780b56</field>
    <field name="keywords">items KCompletionBox::items KCompletionBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompletionBox::slotActivated</field>
    <field name="args">(QListWidgetItem *)</field>
    <field name="url">classKCompletionBox.html#a1577e14b5112c4fc44fc4d6f5129ea6c</field>
    <field name="keywords">slotActivated KCompletionBox::slotActivated KCompletionBox</field>
    <field name="text">Emits activated() with the item</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBox::calculateGeometry</field>
    <field name="args">() const</field>
    <field name="url">classKCompletionBox.html#ae30c0d6821e6572a699fa1e2347c8003</field>
    <field name="keywords">calculateGeometry KCompletionBox::calculateGeometry KCompletionBox</field>
    <field name="text">This matches the geometry and position normally used by K/QComboBox when used with one</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBox::eventFilter</field>
    <field name="args">(QObject *, QEvent *) override</field>
    <field name="url">classKCompletionBox.html#abf4dd77d21a44adb7fbbd3b365b41654</field>
    <field name="keywords">eventFilter KCompletionBox::eventFilter KCompletionBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBox::globalPositionHint</field>
    <field name="args">() const</field>
    <field name="url">classKCompletionBox.html#ac150acac8743808bd1689a864098b267</field>
    <field name="keywords">globalPositionHint KCompletionBox::globalPositionHint KCompletionBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBox::resizeAndReposition</field>
    <field name="args">()</field>
    <field name="url">classKCompletionBox.html#a42a69bf36eb83fedeec330b745aa0eed</field>
    <field name="keywords">resizeAndReposition KCompletionBox::resizeAndReposition KCompletionBox</field>
    <field name="text">5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionBox::sizeAndPosition</field>
    <field name="args">()</field>
    <field name="url">classKCompletionBox.html#a5dca87586a4128f2256409d3d71c407e</field>
    <field name="keywords">sizeAndPosition KCompletionBox::sizeAndPosition KCompletionBox</field>
    <field name="text">since 5.0 use resizeAndReposition instead</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KCompletionMatches</field>
    <field name="url">classKCompletionMatches.html</field>
    <field name="keywords">KCompletionMatches</field>
    <field name="text">It also keeps the weight of the matches allowing you to modify some matches or merge them with matches from another call to allWeightedMatches() and sort the matches after that in order to have the matches ordered correctly Example a simplified example of what Konqueror s completion does List for keeping matches returned from KCompletion</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionMatches::KCompletionMatches</field>
    <field name="args">(bool sort)</field>
    <field name="url">classKCompletionMatches.html#a2871cda6b55df67ecb27e25b0efa2e18</field>
    <field name="keywords">KCompletionMatches KCompletionMatches::KCompletionMatches KCompletionMatches</field>
    <field name="text">sort if false the matches won t be sorted before the conversion use only if you re sure the sorting is not needed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionMatches::KCompletionMatches</field>
    <field name="args">(const KCompletionMatches &amp;)</field>
    <field name="url">classKCompletionMatches.html#a8ec8720de1970a068b54c01e2bd39769</field>
    <field name="keywords">KCompletionMatches KCompletionMatches::KCompletionMatches KCompletionMatches</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionMatches::KCompletionMatches</field>
    <field name="args">(const KCompletionMatchesWrapper &amp;matches)</field>
    <field name="url">classKCompletionMatches.html#aeacdd7b074f8f6c15f8453dac959d5e7</field>
    <field name="keywords">KCompletionMatches KCompletionMatches::KCompletionMatches KCompletionMatches</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionMatches::~KCompletionMatches</field>
    <field name="args">()</field>
    <field name="url">classKCompletionMatches.html#ac16c28e7c14738cb557affdcfd42ac57</field>
    <field name="keywords">KCompletionMatches::~KCompletionMatches KCompletionMatches</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionMatches::list</field>
    <field name="args">(bool sort=true) const</field>
    <field name="url">classKCompletionMatches.html#a7724afe2b37033235e04fd23063fda36</field>
    <field name="keywords">list KCompletionMatches::list KCompletionMatches</field>
    <field name="text">sort if false the matches won t be sorted before the conversion use only if you re sure the sorting is not needed the list of matches</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionMatches::operator=</field>
    <field name="args">(const KCompletionMatches &amp;)</field>
    <field name="url">classKCompletionMatches.html#acb9ad7dd7f9b70881a0a222c6b86023d</field>
    <field name="keywords">operator= KCompletionMatches::operator= KCompletionMatches</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionMatches::removeDuplicates</field>
    <field name="args">()</field>
    <field name="url">classKCompletionMatches.html#a97e81d4cbda35fc0af9e4df9421d67eb</field>
    <field name="keywords">removeDuplicates KCompletionMatches::removeDuplicates KCompletionMatches</field>
    <field name="text">Needed only when you merged several matches results and there s a possibility of duplicates</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompletionMatches::sorting</field>
    <field name="args">() const</field>
    <field name="url">classKCompletionMatches.html#a9ad4dd926e220f29dfd6400220d5f8fe</field>
    <field name="keywords">sorting KCompletionMatches::sorting KCompletionMatches</field>
    <field name="text">true if the matches won t be sorted</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableList::insert</field>
    <field name="args">(Key i, const T &amp;t)</field>
    <field name="url">classKSortableList.html#aef558054a890e60158c0a14814c95ba8</field>
    <field name="keywords">insert KSortableList::insert KSortableList&lt; T, Key &gt; insert KSortableList::insert KSortableList&lt; T, Key &gt;</field>
    <field name="text">i the first value t the second value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableList::operator[]</field>
    <field name="args">(Key i)</field>
    <field name="url">classKSortableList.html#ac97117e46fc1cce1458149f7750e065a</field>
    <field name="keywords">operator[] KSortableList::operator[] KSortableList&lt; T, Key &gt; operator[] KSortableList::operator[] KSortableList&lt; T, Key &gt;</field>
    <field name="text">the first value of the KSortableItem</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableList::operator[]</field>
    <field name="args">(Key i) const</field>
    <field name="url">classKSortableList.html#a37e9005eb72399ef8d9a68386c6e3ef7</field>
    <field name="keywords">operator[] KSortableList::operator[] KSortableList&lt; T, Key &gt; operator[] KSortableList::operator[] KSortableList&lt; T, Key &gt;</field>
    <field name="text">the first value of the KSortableItem</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableList::sort</field>
    <field name="args">()</field>
    <field name="url">classKSortableList.html#abea8a8bdee279293d43521875de17e97</field>
    <field name="keywords">sort KSortableList::sort KSortableList&lt; T, Key &gt; sort KSortableList::sort KSortableList&lt; T, Key &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KHistoryComboBox</field>
    <field name="url">classKHistoryComboBox.html</field>
    <field name="keywords">KHistoryComboBox</field>
    <field name="text">A combobox which implements a history like a unix shell You can navigate through all the items by using the Up or Down arrows configurable of course Additionally weighted completion is available So you should load and save the completion list to preserve the weighting between sessions KHistoryComboBox obeys the HISTCONTROL environment variable to determine whether duplicates in the history should be tolerated in addToHistory() or not During construction of KHistoryComboBox duplicates will be disabled when HISTCONTROL is set to or Otherwise duplicates are enabled by default KDE History Combo Box Carsten Pfeiffer</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KHistoryComboBox::cleared</field>
    <field name="args">()</field>
    <field name="url">classKHistoryComboBox.html#ac2f7e9d15f33d1a2bbffd376cb84e0c5</field>
    <field name="keywords">cleared KHistoryComboBox::cleared KHistoryComboBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KHistoryComboBox::addToHistory</field>
    <field name="args">(const QString &amp;item)</field>
    <field name="url">classKHistoryComboBox.html#a214c62c56b5ce6cbdaa96860134212ea</field>
    <field name="keywords">addToHistory KHistoryComboBox::addToHistory KHistoryComboBox</field>
    <field name="text">If maxCount() is reached the first item of the list will be removed If the last inserted item is the same as item it will not be inserted again If duplicatesEnabled() is false any equal existing item will be removed before item is added Note By using this method and not the Q and KComboBox insertItem() methods you make sure that the combobox stays in sync with the completion It would be annoying if completion would give an item not in the combobox and vice versa removeFromHistory QComboBox::setDuplicatesEnabled</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KHistoryComboBox::clearHistory</field>
    <field name="args">()</field>
    <field name="url">classKHistoryComboBox.html#ab1583b7b2648c04b5275f1bddf460842</field>
    <field name="keywords">clearHistory KHistoryComboBox::clearHistory KHistoryComboBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KHistoryComboBox::reset</field>
    <field name="args">()</field>
    <field name="url">classKHistoryComboBox.html#af6ef37548be290c810e1603350393780</field>
    <field name="keywords">reset KHistoryComboBox::reset KHistoryComboBox</field>
    <field name="text">Call this when you manually call setCurrentItem() or clearEdit()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KHistoryComboBox::KHistoryComboBox</field>
    <field name="args">(QWidget *parent=0)</field>
    <field name="url">classKHistoryComboBox.html#ac7afa92dab9a98253d2fab76343d4f4f</field>
    <field name="keywords">KHistoryComboBox KHistoryComboBox::KHistoryComboBox KHistoryComboBox</field>
    <field name="text">A read-only history combobox doesn t make much sense so it is only available as read-write Completion will be used automatically for the items in the combo The insertion-policy is set to NoInsert you have to add the items yourself via the slot addToHistory If you want every item added use Use QComboBox::setMaxCount() to limit the history parent the parent object of this widget</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KHistoryComboBox::KHistoryComboBox</field>
    <field name="args">(bool useCompletion, QWidget *parent=0)</field>
    <field name="url">classKHistoryComboBox.html#a7ff3ab5e95ad677b91ae46fc44b35956</field>
    <field name="keywords">KHistoryComboBox KHistoryComboBox::KHistoryComboBox KHistoryComboBox</field>
    <field name="text">If set to true KHistoryComboBox will sync the completion to the contents of the combobox</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KHistoryComboBox::~KHistoryComboBox</field>
    <field name="args">()</field>
    <field name="url">classKHistoryComboBox.html#abc2d06e0f649c684c1fad32526d2021a</field>
    <field name="keywords">KHistoryComboBox::~KHistoryComboBox KHistoryComboBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KHistoryComboBox::historyItems</field>
    <field name="args">() const</field>
    <field name="url">classKHistoryComboBox.html#aeb91c2f9abca0782f235b04799f30431</field>
    <field name="keywords">historyItems KHistoryComboBox::historyItems KHistoryComboBox</field>
    <field name="text">Empty when this is not a read-write combobox setHistoryItems</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KHistoryComboBox::pixmapProvider</field>
    <field name="args">() const</field>
    <field name="url">classKHistoryComboBox.html#aae6e4b247f8d53b2815b87a713f6cf26</field>
    <field name="keywords">pixmapProvider KHistoryComboBox::pixmapProvider KHistoryComboBox</field>
    <field name="text">the current pixmap provider setPixmapProvider KPixmapProvider</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KHistoryComboBox::removeFromHistory</field>
    <field name="args">(const QString &amp;item)</field>
    <field name="url">classKHistoryComboBox.html#a7386c004edbbb104299d37692f82c442</field>
    <field name="keywords">removeFromHistory KHistoryComboBox::removeFromHistory KHistoryComboBox</field>
    <field name="text">true if at least one item was removed addToHistory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KHistoryComboBox::setHistoryItems</field>
    <field name="args">(const QStringList &amp;items)</field>
    <field name="url">classKHistoryComboBox.html#acefc9d45277820fdc874826da12f6614</field>
    <field name="keywords">setHistoryItems KHistoryComboBox::setHistoryItems KHistoryComboBox</field>
    <field name="text">items might get truncated if it is longer than maxCount() historyItems</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KHistoryComboBox::setHistoryItems</field>
    <field name="args">(const QStringList &amp;items, bool setCompletionList)</field>
    <field name="url">classKHistoryComboBox.html#a274528d64673bbf0b7de2aff289795c8</field>
    <field name="keywords">setHistoryItems KHistoryComboBox::setHistoryItems KHistoryComboBox</field>
    <field name="text">items might get truncated if it is longer than maxCount() Set setCompletionList to true if you don t have a list of completions This tells KHistoryComboBox to use all the items for the completion object as well You won t have the benefit of weighted completion though so normally you should do something like Be sure to use different names for saving with KConfig if you have more than one KHistoryComboBox Note When setCompletionList is true the items are inserted into the KCompletion object with mode KCompletion::Insertion and the mode is set to KCompletion::Weighted afterwards historyItems KComboBox::completionObject KCompletion::setItems KCompletion::items</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KHistoryComboBox::setPixmapProvider</field>
    <field name="args">(KPixmapProvider *provider)</field>
    <field name="url">classKHistoryComboBox.html#a4df681db2180583f4ba5c7cec7bfa4bb</field>
    <field name="keywords">setPixmapProvider KHistoryComboBox::setPixmapProvider KHistoryComboBox</field>
    <field name="text">KPixmapProvider is just an abstract class with the one pure virtual method KPixmapProvider::pixmapFor() This method is called whenever an item is added to the KHistoryComboBoxBox Implement it to return your own custom pixmaps or use the KUrlPixmapProvider from KIO which uses KMimeType::pixmapForUrl to resolve icons Set provider to Q_NULLPTR if you want to disable pixmaps Default no pixmaps pixmapProvider</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KHistoryComboBox::insertItems</field>
    <field name="args">(const QStringList &amp;items)</field>
    <field name="url">classKHistoryComboBox.html#aca5ffa5096d54c74afe664522d33f83d</field>
    <field name="keywords">insertItems KHistoryComboBox::insertItems KHistoryComboBox</field>
    <field name="text">Note duplicatesEnabled() is not honored here Called from setHistoryItems() and setPixmapProvider()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KHistoryComboBox::keyPressEvent</field>
    <field name="args">(QKeyEvent *) override</field>
    <field name="url">classKHistoryComboBox.html#a87787c50b7dddabc67d294724286b264</field>
    <field name="keywords">keyPressEvent KHistoryComboBox::keyPressEvent KHistoryComboBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KHistoryComboBox::useCompletion</field>
    <field name="args">() const</field>
    <field name="url">classKHistoryComboBox.html#afa8b10e3dbb54286aafcebb9413758f3</field>
    <field name="keywords">useCompletion KHistoryComboBox::useCompletion KHistoryComboBox</field>
    <field name="text">if we can modify the completion object or not</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KHistoryComboBox::wheelEvent</field>
    <field name="args">(QWheelEvent *ev) override</field>
    <field name="url">classKHistoryComboBox.html#aeecc622d4b1d724b2c6f512615a7152e</field>
    <field name="keywords">wheelEvent KHistoryComboBox::wheelEvent KHistoryComboBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KLineEdit</field>
    <field name="url">classKLineEdit.html</field>
    <field name="keywords">KLineEdit</field>
    <field name="text">Detail This widget inherits from QLineEdit and implements the following additional functionalities a completion object that provides both automatic and manual text completion as well as multiple match iteration features configurable key-bindings to activate these features and a popup-menu item that can be used to allow the user to set text completion modes on the fly based on their preference To support these new features KLineEdit also emits a few more additional signals These are completion( const QString&amp; ) textRotation( KeyBindingType ) and returnPressed( const QString&amp; ) The completion signal can be connected to a slot that will assist the user in filling out the remaining text The text rotation signal is intended to be used to iterate through the list of all possible matches whenever there is more than one match for the entered text The returnPressed( const QString&amp; ) signals are the same as QLineEdit s except it provides the current text in the widget as its argument whenever appropriate This widget by default creates a completion object when you invoke the completionObject( bool ) member function for the first time or use setCompletionObject( KCompletion*, bool ) to assign your own completion object Additionally to make this widget more functional KLineEdit will by default handle the text rotation and completion events internally when a completion object is created through either one of the methods mentioned above If you do not need this functionality simply use KCompletionBase::setHandleSignals( bool ) or set the boolean parameter in the above functions to false The default key-bindings for completion and rotation is determined from the global settings in KStandardShortcut These values however can be overridden locally by invoking KCompletionBase::setKeyBinding() The values can easily be reverted back to the default setting by simply calling useGlobalSettings() An alternate method would be to default individual key-bindings by using setKeyBinding() with the default second argument If EchoMode for this widget is set to something other than QLineEdit::Normal the completion mode will always be defaulted to CompletionNone This is done purposefully to guard against protected entries such as passwords being cached in KCompletion s list Hence if the EchoMode is not QLineEdit::Normal the completion mode is automatically disabled A read-only KLineEdit will have the same background color as a disabled KLineEdit but its foreground color will be the one used for the read-write mode This differs from QLineEdit s implementation and is done to give visual distinction between the three different modes disabled read-only and read-write KLineEdit has also a password mode which depends of globals KDE settings Use KLineEdit::setPasswordMode instead of QLineEdit::echoMode property to have a password field Usage To enable the basic completion feature To use a customized completion objects or your own completion object Note if you specify your own completion object you have to either delete it when you don t need it anymore or you can tell KLineEdit to delete it for you Miscellaneous function calls KDE Line Edit Widgets with clear-button Dawit Alemayehu</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KLineEdit::aboutToShowContextMenu</field>
    <field name="args">(QMenu *contextMenu)</field>
    <field name="url">classKLineEdit.html#a588fed28f7e9e6d760788b6efb32a4c2</field>
    <field name="keywords">aboutToShowContextMenu KLineEdit::aboutToShowContextMenu KLineEdit</field>
    <field name="text">The signal allows you to add your own entries into the the context menu that is created on demand NOTE Do not store the pointer to the QMenu provided through since it is created and deleted on demand contextMenu the context menu about to be displayed</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KLineEdit::clearButtonClicked</field>
    <field name="args">()</field>
    <field name="url">classKLineEdit.html#aac8618980ad7d3967683c70d6a47c796</field>
    <field name="keywords">clearButtonClicked KLineEdit::clearButtonClicked KLineEdit</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KLineEdit::completion</field>
    <field name="args">(const QString &amp;)</field>
    <field name="url">classKLineEdit.html#ab48964dc7ff75dde1559a70e44e956f5</field>
    <field name="keywords">completion KLineEdit::completion KLineEdit</field>
    <field name="text">Please note that this signal is not emitted if the completion mode is set to CompletionNone or EchoMode is normal</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KLineEdit::completionBoxActivated</field>
    <field name="args">(const QString &amp;)</field>
    <field name="url">classKLineEdit.html#a9c304f4374bb8825797bab161e8ec28d</field>
    <field name="keywords">completionBoxActivated KLineEdit::completionBoxActivated KLineEdit</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KLineEdit::completionModeChanged</field>
    <field name="args">(KCompletion::CompletionMode)</field>
    <field name="url">classKLineEdit.html#aaa7a5f573de6049b5cf63d688620364d</field>
    <field name="keywords">completionModeChanged KLineEdit::completionModeChanged KLineEdit</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KLineEdit::returnPressed</field>
    <field name="args">(const QString &amp;)</field>
    <field name="url">classKLineEdit.html#a8202b1e44f3250e61b2f300d387b7917</field>
    <field name="keywords">returnPressed KLineEdit::returnPressed KLineEdit</field>
    <field name="text">The argument is the current text Note that this signal is not emitted if the widget s EchoMode is set to QLineEdit::EchoMode</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KLineEdit::substringCompletion</field>
    <field name="args">(const QString &amp;)</field>
    <field name="url">classKLineEdit.html#adab7821b3859d88c27447480233d8e21</field>
    <field name="keywords">substringCompletion KLineEdit::substringCompletion KLineEdit</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KLineEdit::textRotation</field>
    <field name="args">(KCompletionBase::KeyBindingType)</field>
    <field name="url">classKLineEdit.html#a950fcb35f90a91bbc1c54d1ea423ed21</field>
    <field name="keywords">textRotation KLineEdit::textRotation KLineEdit</field>
    <field name="text">The argument indicates which key-binding was pressed In KLineEdit s case this can be either one of two values PrevCompletionMatch or NextCompletionMatch See KCompletionBase::setKeyBinding for details Note that this signal is not emitted if the completion mode is set to CompletionNone or echoMode() is not normal</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KLineEdit::userTextChanged</field>
    <field name="args">(const QString &amp;)</field>
    <field name="url">classKLineEdit.html#a04489622e43eb1416c1c284424a6ba04</field>
    <field name="keywords">userTextChanged KLineEdit::userTextChanged KLineEdit</field>
    <field name="text">But not when automatic completion changes the text temporarily 4.2.2 since 4.5 You probably want to connect to textEdited() instead which is emitted whenever the text is actually changed by the user by typing or accepting autocompletion without side effects from suggested autocompletion either userTextChanged isn t needed anymore</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KLineEdit::passwordMode</field>
    <field name="args">() const</field>
    <field name="url">classKLineEdit.html#a26b4a9382893b6250fe58a4768d547c1</field>
    <field name="keywords">passwordMode KLineEdit::passwordMode KLineEdit</field>
    <field name="text">returns true if the lineedit is set to password mode echoing</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KLineEdit::rotateText</field>
    <field name="args">(KCompletionBase::KeyBindingType type)</field>
    <field name="url">classKLineEdit.html#a38075439851dc1c7019aa182e27a7e83</field>
    <field name="keywords">rotateText KLineEdit::rotateText KLineEdit</field>
    <field name="text">This function simply iterates over all possible matches in case multiple matches are found as a result of a text completion request It will have no effect if only a single match is found type The key-binding invoked</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KLineEdit::setCompletedItems</field>
    <field name="args">(const QStringList &amp;items, bool autoSuggest=true) override</field>
    <field name="url">classKLineEdit.html#a899d28546b5a08eef009357fcbfc04b0</field>
    <field name="keywords">setCompletedItems KLineEdit::setCompletedItems KLineEdit</field>
    <field name="text">items list of completion matches to be shown in the completion box autoSuggest true if you want automatic text completion suggestion enabled</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KLineEdit::setCompletedText</field>
    <field name="args">(const QString &amp;) override</field>
    <field name="url">classKLineEdit.html#a08de5133f11de6694d00b48370c749e4</field>
    <field name="keywords">setCompletedText KLineEdit::setCompletedText KLineEdit</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KLineEdit::setPasswordMode</field>
    <field name="args">(bool passwordMode=true)</field>
    <field name="url">classKLineEdit.html#a4f2eb72a6c8f0226ef2a444f3652c36c</field>
    <field name="keywords">setPasswordMode KLineEdit::setPasswordMode KLineEdit</field>
    <field name="text">this change the EchoMode according to KDE preferences passwordMode true to set in password mode</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KLineEdit::setReadOnly</field>
    <field name="args">(bool)</field>
    <field name="url">classKLineEdit.html#a34dd2383e4c75489920ae65d4c0ce86e</field>
    <field name="keywords">setReadOnly KLineEdit::setReadOnly KLineEdit</field>
    <field name="text">Similar to QLineEdit::setReadOnly but also takes care of the background color and the clear button</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KLineEdit::setSqueezedText</field>
    <field name="args">(const QString &amp;text)</field>
    <field name="url">classKLineEdit.html#ab4899f5fd024ef5c21e87ff3ad9ae556</field>
    <field name="keywords">setSqueezedText KLineEdit::setSqueezedText KLineEdit</field>
    <field name="text">This can only be used with read-only line-edits</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KLineEdit::setText</field>
    <field name="args">(const QString &amp;)</field>
    <field name="url">classKLineEdit.html#a48675b4c9e2138b7fe345ffccb9f5b66</field>
    <field name="keywords">setText KLineEdit::setText KLineEdit</field>
    <field name="text">API is not affected</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::KLineEdit</field>
    <field name="args">(const QString &amp;string, QWidget *parent=0)</field>
    <field name="url">classKLineEdit.html#a3f69f000bc9afa8e2b12b22d834b2ef1</field>
    <field name="keywords">KLineEdit KLineEdit::KLineEdit KLineEdit</field>
    <field name="text">string Text to be shown in the edit widget parent The parent widget of the line edit</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::KLineEdit</field>
    <field name="args">(QWidget *parent=0)</field>
    <field name="url">classKLineEdit.html#a4d54f704935c5706322e9c5f8701f851</field>
    <field name="keywords">KLineEdit KLineEdit::KLineEdit KLineEdit</field>
    <field name="text">parent The parent widget of the line edit</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::~KLineEdit</field>
    <field name="args">()</field>
    <field name="url">classKLineEdit.html#a13dca564e4ecae77c87c4aff0ab1e964</field>
    <field name="keywords">KLineEdit::~KLineEdit KLineEdit</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::clearButtonUsedSize</field>
    <field name="args">() const</field>
    <field name="url">classKLineEdit.html#a337f2e9c2a309b9aa5abd0002c0cc18d</field>
    <field name="keywords">clearButtonUsedSize KLineEdit::clearButtonUsedSize KLineEdit</field>
    <field name="text">the size used by the clear button 4.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::clickMessage</field>
    <field name="args">() const</field>
    <field name="url">classKLineEdit.html#aa8d44e0ad872934b62f10574ff09266f</field>
    <field name="keywords">clickMessage KLineEdit::clickMessage KLineEdit</field>
    <field name="text">the message set with setClickMessage since 5.0 use QLineEdit::placeholderText instead</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::completionBox</field>
    <field name="args">(bool create=true)</field>
    <field name="url">classKLineEdit.html#ad3bc57bfc4d530e172162c3a11e34466</field>
    <field name="keywords">completionBox KLineEdit::completionBox KLineEdit</field>
    <field name="text">the completion-box that is used in completion mode CompletionPopup This method will create a completion-box if none is there yet create Set this to false if you don t want the box to be created i.e to test if it is available</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::copy</field>
    <field name="args">() const</field>
    <field name="url">classKLineEdit.html#ae7d737e48be10b3992bf0278c0423942</field>
    <field name="keywords">copy KLineEdit::copy KLineEdit</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::doCompletion</field>
    <field name="args">(const QString &amp;text)</field>
    <field name="url">classKLineEdit.html#ae114a102d3faa28c68695756f9e3fdd2</field>
    <field name="keywords">doCompletion KLineEdit::doCompletion KLineEdit</field>
    <field name="text">This is called automatically when typing a key for instance Emits completion() and/or calls makeCompletion() depending on emitSignals and handleSignals 4.2.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::isClearButtonShown</field>
    <field name="args">() const</field>
    <field name="url">classKLineEdit.html#a4a7093d56bc8a4b416c70b3c28db1ab6</field>
    <field name="keywords">isClearButtonShown KLineEdit::isClearButtonShown KLineEdit</field>
    <field name="text">whether or not the clear button is shown</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::isContextMenuEnabled</field>
    <field name="args">() const</field>
    <field name="url">classKLineEdit.html#aebd7d781c78fcb96e172488483b52302</field>
    <field name="keywords">isContextMenuEnabled KLineEdit::isContextMenuEnabled KLineEdit</field>
    <field name="text">since 4.5 use contextMenuPolicy instead</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::isSqueezedTextEnabled</field>
    <field name="args">() const</field>
    <field name="url">classKLineEdit.html#af76d1c1083102ffa5f82897a7f26d747</field>
    <field name="keywords">isSqueezedTextEnabled KLineEdit::isSqueezedTextEnabled KLineEdit</field>
    <field name="text">This is only valid when the widget is in read-only mode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::originalText</field>
    <field name="args">() const</field>
    <field name="url">classKLineEdit.html#ac3a387b9b3ec65b9ee7801e24b856876</field>
    <field name="keywords">originalText KLineEdit::originalText KLineEdit</field>
    <field name="text">If the widget is not in mode this function returns the same thing as QLineEdit::text() QLineEdit</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::setClearButtonShown</field>
    <field name="args">(bool show)</field>
    <field name="url">classKLineEdit.html#a913223c1430d2d254a076210a8379c69</field>
    <field name="keywords">setClearButtonShown KLineEdit::setClearButtonShown KLineEdit</field>
    <field name="text">This is useful for such things as location or search bars</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::setClickMessage</field>
    <field name="args">(const QString &amp;msg)</field>
    <field name="url">classKLineEdit.html#a99a046759a544bdfd9b0f782cf545b2b</field>
    <field name="keywords">setClickMessage KLineEdit::setClickMessage KLineEdit</field>
    <field name="text">It is often used as indication about the purpose of the line edit since 5.0 use QLineEdit::setPlaceholderText instead</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::setCompletionBox</field>
    <field name="args">(KCompletionBox *box)</field>
    <field name="url">classKLineEdit.html#a674b01f26e0f6e1ee16b68295380afe4</field>
    <field name="keywords">setCompletionBox KLineEdit::setCompletionBox KLineEdit</field>
    <field name="text">This will do nothing if a completion-box already exists box The KCompletionBox to set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::setCompletionMode</field>
    <field name="args">(KCompletion::CompletionMode mode) override</field>
    <field name="url">classKLineEdit.html#a14d0b257525152d33508f416ed2a9b27</field>
    <field name="keywords">setCompletionMode KLineEdit::setCompletionMode KLineEdit</field>
    <field name="text">This function is re-implemented in order to make sure that the EchoMode is acceptable before we set the completion mode See KCompletionBase::setCompletionMode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::setCompletionModeDisabled</field>
    <field name="args">(KCompletion::CompletionMode mode, bool disable=true)</field>
    <field name="url">classKLineEdit.html#ab994396c5de277cdef20462a2a4777f3</field>
    <field name="keywords">setCompletionModeDisabled KLineEdit::setCompletionModeDisabled KLineEdit</field>
    <field name="text">The context menu allows to change the completion mode This method allows to disable some modes</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::setCompletionObject</field>
    <field name="args">(KCompletion *, bool handle=true) override</field>
    <field name="url">classKLineEdit.html#a3a8fd676f4407c177b3e691b3051c5df</field>
    <field name="keywords">setCompletionObject KLineEdit::setCompletionObject KLineEdit</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::setContextMenuEnabled</field>
    <field name="args">(bool showMenu)</field>
    <field name="url">classKLineEdit.html#a08a90926858de58b16bed7db318da4c9</field>
    <field name="keywords">setContextMenuEnabled KLineEdit::setContextMenuEnabled KLineEdit</field>
    <field name="text">This method only works if this widget is editable i.e read-write and allows you to enable/disable the context menu It does nothing if invoked for a none-editable combo-box By default the context menu is created if this widget is editable Call this function with the argument set to false to disable the popup menu showMenu If true show the context menu since 4.5 use setContextMenuPolicy instead</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::setSqueezedTextEnabled</field>
    <field name="args">(bool enable)</field>
    <field name="url">classKLineEdit.html#a36ff757ba9713009672b53648f2bc6e7</field>
    <field name="keywords">setSqueezedTextEnabled KLineEdit::setSqueezedTextEnabled KLineEdit</field>
    <field name="text">Only works for mode Note that once text squeezing is enabled QLineEdit::text() and QLineEdit::displayText() return the squeezed text If you want the original text use originalText QLineEdit</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::setTrapReturnKey</field>
    <field name="args">(bool trap)</field>
    <field name="url">classKLineEdit.html#a2c2d71612ffc771001d817908d4e7911</field>
    <field name="keywords">setTrapReturnKey KLineEdit::setTrapReturnKey KLineEdit</field>
    <field name="text">Call this method with trap true to make KLineEdit stop these events The signals will still be emitted of course trapReturnKey()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::setUrl</field>
    <field name="args">(const QUrl &amp;url)</field>
    <field name="url">classKLineEdit.html#a219a32bf9fe467a7b21db706a0614c9f</field>
    <field name="keywords">setUrl KLineEdit::setUrl KLineEdit</field>
    <field name="text">It uses QUrl::toDisplayString() so that the url is properly decoded for displaying</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::setUrlDropsEnabled</field>
    <field name="args">(bool enable)</field>
    <field name="url">classKLineEdit.html#aaa093c035a4cb233bb99da6cf78ac48f</field>
    <field name="keywords">setUrlDropsEnabled KLineEdit::setUrlDropsEnabled KLineEdit</field>
    <field name="text">If enabled and the user drops an URL the decoded URL will be inserted Otherwise the default behavior of QLineEdit is used which inserts the encoded URL Call setUrlDropsEnabled(false) if you need dropEvent to be called in a KLineEdit subclass enable If true insert decoded URLs</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::trapReturnKey</field>
    <field name="args">() const</field>
    <field name="url">classKLineEdit.html#a1255cf7ec392edeaebc45d112b31c68d</field>
    <field name="keywords">trapReturnKey KLineEdit::trapReturnKey KLineEdit</field>
    <field name="text">true if keyevents of Key_Return or Key_Enter will be stopped or if they will be propagated setTrapReturnKey</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::urlDropsEnabled</field>
    <field name="args">() const</field>
    <field name="url">classKLineEdit.html#a83fe16b22812743af7230243f73ca4b4</field>
    <field name="keywords">urlDropsEnabled KLineEdit::urlDropsEnabled KLineEdit</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::userText</field>
    <field name="args">() const</field>
    <field name="url">classKLineEdit.html#a23d9215182ca3691d2c894b2f48c44fa</field>
    <field name="keywords">userText KLineEdit::userText KLineEdit</field>
    <field name="text">not autocompleted if the widget has autocompletion disabled this function returns the same as QLineEdit::text() 4.2.2</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KLineEdit::makeCompletion</field>
    <field name="args">(const QString &amp;)</field>
    <field name="url">classKLineEdit.html#afca8254520ccc29dca6f616ed0d5926b</field>
    <field name="keywords">makeCompletion KLineEdit::makeCompletion KLineEdit</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KLineEdit::userCancelled</field>
    <field name="args">(const QString &amp;cancelText)</field>
    <field name="url">classKLineEdit.html#af21fbd1c21ee9dcaeb09b7621e587bbf</field>
    <field name="keywords">userCancelled KLineEdit::userCancelled KLineEdit</field>
    <field name="text">Call this function to revert a text completion if the user cancels the request Mostly applies to popup completions</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::autoSuggest</field>
    <field name="args">() const</field>
    <field name="url">classKLineEdit.html#a89b231730dd0d88cee2c8c4ccab98c60</field>
    <field name="keywords">autoSuggest KLineEdit::autoSuggest KLineEdit</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::contextMenuEvent</field>
    <field name="args">(QContextMenuEvent *) override</field>
    <field name="url">classKLineEdit.html#aa8d61394c4d63f0634a338c5f43713db</field>
    <field name="keywords">contextMenuEvent KLineEdit::contextMenuEvent KLineEdit</field>
    <field name="text">API not affected See QLineEdit::contextMenuEvent()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::createStandardContextMenu</field>
    <field name="args">()</field>
    <field name="url">classKLineEdit.html#a4346719b587e5017728c32af22d5a082</field>
    <field name="keywords">createStandardContextMenu KLineEdit::createStandardContextMenu KLineEdit</field>
    <field name="text">API not affected See QLineEdit::createStandardContextMenu()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::event</field>
    <field name="args">(QEvent *) override</field>
    <field name="url">classKLineEdit.html#a07e9cc315c982c74d2044a37b5aad27a</field>
    <field name="keywords">event KLineEdit::event KLineEdit</field>
    <field name="text">API not affected</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::keyPressEvent</field>
    <field name="args">(QKeyEvent *) override</field>
    <field name="url">classKLineEdit.html#a59a3025ce79c9c216bc8725a92934e38</field>
    <field name="keywords">keyPressEvent KLineEdit::keyPressEvent KLineEdit</field>
    <field name="text">API not affected See QLineEdit::keyPressEvent()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::mouseDoubleClickEvent</field>
    <field name="args">(QMouseEvent *) override</field>
    <field name="url">classKLineEdit.html#ad24e4785b1caaab4651cb26a9f475461</field>
    <field name="keywords">mouseDoubleClickEvent KLineEdit::mouseDoubleClickEvent KLineEdit</field>
    <field name="text">API not affected See QWidget::mouseDoubleClickEvent()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::mousePressEvent</field>
    <field name="args">(QMouseEvent *) override</field>
    <field name="url">classKLineEdit.html#ad6c758d97f2dd76e366ea19463dd0d97</field>
    <field name="keywords">mousePressEvent KLineEdit::mousePressEvent KLineEdit</field>
    <field name="text">API not affected See QLineEdit::mousePressEvent()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::mouseReleaseEvent</field>
    <field name="args">(QMouseEvent *) override</field>
    <field name="url">classKLineEdit.html#aaf0cb7a3b593494cef4400c074a7ac7d</field>
    <field name="keywords">mouseReleaseEvent KLineEdit::mouseReleaseEvent KLineEdit</field>
    <field name="text">API not affected See QLineEdit::mouseReleaseEvent()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::resizeEvent</field>
    <field name="args">(QResizeEvent *) override</field>
    <field name="url">classKLineEdit.html#a9895249ac860baf5d1c1fa7355707e6e</field>
    <field name="keywords">resizeEvent KLineEdit::resizeEvent KLineEdit</field>
    <field name="text">API not affected See QLineEdit::resizeEvent()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::setCompletedText</field>
    <field name="args">(const QString &amp;, bool)</field>
    <field name="url">classKLineEdit.html#afc57840fc4dce94cd0a8c3f32a08895c</field>
    <field name="keywords">setCompletedText KLineEdit::setCompletedText KLineEdit</field>
    <field name="text">text marked</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KLineEdit::setUserSelection</field>
    <field name="args">(bool userSelection)</field>
    <field name="url">classKLineEdit.html#a6edd34d42e54a6803984c47de8c305dd</field>
    <field name="keywords">setUserSelection KLineEdit::setUserSelection KLineEdit</field>
    <field name="text">This changes the colors of selections</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KPixmapProvider</field>
    <field name="url">classKPixmapProvider.html</field>
    <field name="keywords">KPixmapProvider</field>
    <field name="text">It will be called whenever an icon is searched for text Used e.g by KHistoryComboBox Carsten Pfeiffer an abstract interface for looking up icons</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPixmapProvider::pixmapFor</field>
    <field name="args">(const QString &amp;text, int size=0)=0</field>
    <field name="url">classKPixmapProvider.html#a79cc0e193d4dfd991de27b87633b03af</field>
    <field name="keywords">pixmapFor KPixmapProvider::pixmapFor KPixmapProvider</field>
    <field name="text">text the text that is associated with the pixmap size the size of the icon in pixels 0 for defaylt size See KIconLoader::StdSize the pixmap for the arguments or null if there is none</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPixmapProvider::virtual_hook</field>
    <field name="args">(int id, void *data)</field>
    <field name="url">classKPixmapProvider.html#a4561de78171af97335cbbdc0dbc7c674</field>
    <field name="keywords">virtual_hook KPixmapProvider::virtual_hook KPixmapProvider</field>
    <field name="text">Unused in this class</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KSortableItem</field>
    <field name="url">classKSortableItem.html</field>
    <field name="keywords">KSortableItem</field>
    <field name="text">KSortableList</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableItem::KSortableItem</field>
    <field name="args">(Key i, const T &amp;t)</field>
    <field name="url">classKSortableItem.html#aa95ff307da319cf3a52cf9ebe0c5d407</field>
    <field name="keywords">KSortableItem KSortableItem::KSortableItem KSortableItem&lt; T, Key &gt;</field>
    <field name="text">i the first value the key t the second value the item</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableItem::KSortableItem</field>
    <field name="args">(const KSortableItem&lt; T, Key &gt; &amp;rhs)</field>
    <field name="url">classKSortableItem.html#a2a0bbe66e512de03666b7f8de35f4d59</field>
    <field name="keywords">KSortableItem KSortableItem::KSortableItem KSortableItem&lt; T, Key &gt;</field>
    <field name="text">rhs the other item to copy</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableItem::KSortableItem</field>
    <field name="args">()</field>
    <field name="url">classKSortableItem.html#ae175f517752ed8835fbfab13a16c5b75</field>
    <field name="keywords">KSortableItem KSortableItem::KSortableItem KSortableItem&lt; T, Key &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableItem::index</field>
    <field name="args">() const</field>
    <field name="url">classKSortableItem.html#a61916acb9410eec028b69d8f85c77a17</field>
    <field name="keywords">index KSortableItem::index KSortableItem&lt; T, Key &gt;</field>
    <field name="text">the first value the key use key()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableItem::key</field>
    <field name="args">() const</field>
    <field name="url">classKSortableItem.html#a13e229fb82b0aa46ccbee79b0c0ef36a</field>
    <field name="keywords">key KSortableItem::key KSortableItem&lt; T, Key &gt;</field>
    <field name="text">the first value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableItem::operator!=</field>
    <field name="args">(const KSortableItem&lt; T, Key &gt; &amp;i2) const</field>
    <field name="url">classKSortableItem.html#a0b7496cb352dccfe8b1eb29a8a696e5b</field>
    <field name="keywords">operator!= KSortableItem::operator!= KSortableItem&lt; T, Key &gt;</field>
    <field name="text">This implementation only compares the first value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableItem::operator&lt;</field>
    <field name="args">(const KSortableItem&lt; T, Key &gt; &amp;i2) const</field>
    <field name="url">classKSortableItem.html#ae83a540d2cc1a323ceec615017ebb52c</field>
    <field name="keywords">operator&lt; KSortableItem::operator&lt; KSortableItem&lt; T, Key &gt;</field>
    <field name="text">This implementation only compares the first value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableItem::operator&lt;=</field>
    <field name="args">(const KSortableItem&lt; T, Key &gt; &amp;i2) const</field>
    <field name="url">classKSortableItem.html#a7da0c4fe251da1b1275cb51f1ceddb33</field>
    <field name="keywords">operator&lt;= KSortableItem::operator&lt;= KSortableItem&lt; T, Key &gt;</field>
    <field name="text">This implementation only compares the first value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableItem::operator=</field>
    <field name="args">(const KSortableItem&lt; T, Key &gt; &amp;i)</field>
    <field name="url">classKSortableItem.html#a38b20a88f121adb95f13e559fd7901bc</field>
    <field name="keywords">operator= KSortableItem::operator= KSortableItem&lt; T, Key &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableItem::operator==</field>
    <field name="args">(const KSortableItem&lt; T, Key &gt; &amp;i2) const</field>
    <field name="url">classKSortableItem.html#ab535233ca0769f695ed5cf23065d3389</field>
    <field name="keywords">operator== KSortableItem::operator== KSortableItem&lt; T, Key &gt;</field>
    <field name="text">This implementation only compares the first value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableItem::operator&gt;</field>
    <field name="args">(const KSortableItem&lt; T, Key &gt; &amp;i2) const</field>
    <field name="url">classKSortableItem.html#a7b5bef77af0975621730cdf35930ae9b</field>
    <field name="keywords">operator&gt; KSortableItem::operator&gt; KSortableItem&lt; T, Key &gt;</field>
    <field name="text">This implementation only compares the first value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableItem::operator&gt;=</field>
    <field name="args">(const KSortableItem&lt; T, Key &gt; &amp;i2) const</field>
    <field name="url">classKSortableItem.html#af12fae5e489f22c1a35cf6ec051b0a63</field>
    <field name="keywords">operator&gt;= KSortableItem::operator&gt;= KSortableItem&lt; T, Key &gt;</field>
    <field name="text">This implementation only compares the first value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableItem::value</field>
    <field name="args">()</field>
    <field name="url">classKSortableItem.html#a7a2aaa7fe3c58c156e6d7cd741b70b70</field>
    <field name="keywords">value KSortableItem::value KSortableItem&lt; T, Key &gt;</field>
    <field name="text">the second value the item</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSortableItem::value</field>
    <field name="args">() const</field>
    <field name="url">classKSortableItem.html#ab4a3683238577db970452e347c8244af</field>
    <field name="keywords">value KSortableItem::value KSortableItem&lt; T, Key &gt;</field>
    <field name="text">the second value the item</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KSortableList</field>
    <field name="url">classKSortableList.html</field>
    <field name="keywords">KSortableList</field>
    <field name="text">This key is used for sorting when calling sort() This allows to temporarily calculate a key and use it for sorting without having to store that key in the items or calculate that key many times for the same item during sorting if that calculation is expensive</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">index</field>
    <field name="url">index.html</field>
    <field name="keywords"></field>
    <field name="text">KCompletion Powerful completion framework including completion-enabled lineedit and combobox Introduction When typing filenames email addresses and other text where the user often wants to select from existing data including what they previously typed rather than enter anything wholly original users often find it helpful if they only need to type the first few characters and then have the application offer them a set of choices or attempt to finish off what they were typing Email clients shells and dialogs often provide this functionality This framework helps implement this in Qt-based applications You can use one of the completion-ready widgets provided by this framework or integrate it into your application s other widgets directly Usage The easiest way to get started is to use a KComboBox KHistoryComboBox or KLineEdit If you want to integrate completion into other parts of the user interface you can use KCompletion to manage and select the possible completions</field>
  </doc>
</add>
