{"name": "karchive-5.26.0", "fancyname": "KArchive", "docfields": [{"type": "page", "name": "deprecated", "url": "deprecated.html", "keyword": null, "text": "Deprecated List Member KArchive writeFile const QString name const QString user const QString group const char qint64 size mode_t perm 0100644 const QDateTime atime QDateTime() const QDateTime mtime QDateTime() const QDateTime ctime QDateTime() since 5.0 use writeFile(const QString&,const QByteArray&,mode_t,const QString&,const QString&,const QDateTime&,const QDateTime&,const QDateTime&) Member KFilterDev device QIODevice const QString mimetype bool autoDeleteInDevice true Use KCompressionDevice Member KFilterDev deviceForFile const QString fileName const QString mimetype QString() bool forceFilter false Use the constructor instead if mimetype is empty or KCompressionDevice if the mimetype is known"}, {"type": "class", "name": "K7Zip", "url": "classK7Zip.html", "keyword": "K7Zip", "text": "Mario Bensi"}, {"type": "function", "name": "K7Zip::K7Zip", "url": "classK7Zip.html#ae631f40a58dcb35d4dddf75dec9f6e72", "keyword": "K7Zip K7Zip::K7Zip K7Zip", "text": "filename is a local path e.g"}, {"type": "function", "name": "K7Zip::K7Zip", "url": "classK7Zip.html#a46251247fccaf4f1498fd356f08748dc", "keyword": "K7Zip K7Zip::K7Zip K7Zip", "text": "The device can be compressed KFilterDev or not QFile etc Do not assume that giving a QFile here will decompress the file in case it s compressed! dev the device to read from If the source is compressed the QIODevice must take care of decompression"}, {"type": "function", "name": "K7Zip::~K7Zip", "url": "classK7Zip.html#a8edd3e9789efbb90a974497551234698", "keyword": "K7Zip::~K7Zip K7Zip", "text": ""}, {"type": "function", "name": "KArchive::addLocalDirectory", "url": "classKArchive.html#ab5a2f90d4003664127e744d078162c34", "keyword": "addLocalDirectory KArchive::addLocalDirectory KArchive addLocalDirectory KArchive::addLocalDirectory KArchive addLocalDirectory KArchive::addLocalDirectory KArchive addLocalDirectory KArchive::addLocalDirectory KArchive addLocalDirectory KArchive::addLocalDirectory KArchive addLocalDirectory KArchive::addLocalDirectory KArchive", "text": "Calls addLocalFile for each file to be added It will also add a path that is a symbolic link to a directory The symbolic link will be dereferenced and the content of the directory it is pointing to added recursively However symbolic links under path will be stored as is path full path to an existing local directory to be added to the archive destName the resulting name or relative path of the file in the archive"}, {"type": "function", "name": "KArchive::addLocalFile", "url": "classKArchive.html#a1e3b4d361c4b57fe8cb956a9b49a85e4", "keyword": "addLocalFile KArchive::addLocalFile KArchive addLocalFile KArchive::addLocalFile KArchive addLocalFile KArchive::addLocalFile KArchive addLocalFile KArchive::addLocalFile KArchive addLocalFile KArchive::addLocalFile KArchive addLocalFile KArchive::addLocalFile KArchive", "text": "The main difference with writeFile is that this method minimizes memory usage by not loading the whole file into memory in one go If fileName is a symbolic link it will be written as is i e it will not be resolved before fileName full path to an existing local file to be added to the archive destName the resulting name or relative path of the file in the archive"}, {"type": "function", "name": "KArchive::close", "url": "classKArchive.html#a13fc5a093095ac0315e692e81aa4fce6", "keyword": "close KArchive::close KArchive close KArchive::close KArchive close KArchive::close KArchive close KArchive::close KArchive close KArchive::close KArchive close KArchive::close KArchive", "text": "Inherited classes might want to reimplement closeArchive instead true if close succeeded without problems open"}, {"type": "function", "name": "KArchive::device", "url": "classKArchive.html#a1126fb09ca2849da19372e62f9498a15", "keyword": "device KArchive::device KArchive device KArchive::device KArchive device KArchive::device KArchive device KArchive::device KArchive device KArchive::device KArchive device KArchive::device KArchive", "text": "the underlying device"}, {"type": "function", "name": "KArchive::directory", "url": "classKArchive.html#a687f8801e5eb0b6476ddd7821c31f627", "keyword": "directory KArchive::directory KArchive directory KArchive::directory KArchive directory KArchive::directory KArchive directory KArchive::directory KArchive directory KArchive::directory KArchive directory KArchive::directory KArchive", "text": "the directory of the archive"}, {"type": "function", "name": "KArchive::fileName", "url": "classKArchive.html#adb8c517921d59a7f48f7090cbcf5efcc", "keyword": "fileName KArchive::fileName KArchive fileName KArchive::fileName KArchive fileName KArchive::fileName KArchive fileName KArchive::fileName KArchive fileName KArchive::fileName KArchive fileName KArchive::fileName KArchive", "text": "the name of the file or QString() if unknown"}, {"type": "function", "name": "KArchive::finishWriting", "url": "classKArchive.html#a28478783281e5f729210ef7ecac9c225", "keyword": "finishWriting KArchive::finishWriting KArchive finishWriting KArchive::finishWriting KArchive finishWriting KArchive::finishWriting KArchive finishWriting KArchive::finishWriting KArchive finishWriting KArchive::finishWriting KArchive finishWriting KArchive::finishWriting KArchive", "text": "size the size of the file prepareWriting()"}, {"type": "function", "name": "KArchive::isOpen", "url": "classKArchive.html#aec27152dc3cc0fa3df28daa8707d968d", "keyword": "isOpen KArchive::isOpen KArchive isOpen KArchive::isOpen KArchive isOpen KArchive::isOpen KArchive isOpen KArchive::isOpen KArchive isOpen KArchive::isOpen KArchive isOpen KArchive::isOpen KArchive", "text": "true if the archive is opened"}, {"type": "function", "name": "KArchive::mode", "url": "classKArchive.html#ac4aa377c4f4fefe55f840aa6ffcb3400", "keyword": "mode KArchive::mode KArchive mode KArchive::mode KArchive mode KArchive::mode KArchive mode KArchive::mode KArchive mode KArchive::mode KArchive mode KArchive::mode KArchive", "text": "the mode in which the archive was opened QIODevice::ReadOnly or QIODevice::WriteOnly open()"}, {"type": "function", "name": "KArchive::open", "url": "classKArchive.html#a5269559282e6cfe2c261ba059e32b66a", "keyword": "open KArchive::open KArchive open KArchive::open KArchive open KArchive::open KArchive open KArchive::open KArchive open KArchive::open KArchive open KArchive::open KArchive", "text": "Inherited classes might want to reimplement openArchive instead mode may be QIODevice::ReadOnly or QIODevice::WriteOnly close"}, {"type": "function", "name": "KArchive::prepareWriting", "url": "classKArchive.html#a7e50420630c3bb44f617ad812b673332", "keyword": "prepareWriting KArchive::prepareWriting KArchive prepareWriting KArchive::prepareWriting KArchive prepareWriting KArchive::prepareWriting KArchive prepareWriting KArchive::prepareWriting KArchive prepareWriting KArchive::prepareWriting KArchive prepareWriting KArchive::prepareWriting KArchive", "text": "For tar.gz files you need to know the size before hand it is needed in the header! For zip files size isn t used This method also allows some file metadata to be set However depending on the archive type not all metadata might be regarded name the name of the file user the user that owns the file group the group that owns the file size the size of the file perm permissions of the file atime time the file was last accessed mtime modification time of the file ctime time of last status change"}, {"type": "function", "name": "KArchive::writeDir", "url": "classKArchive.html#a8e8dad1251bf8b2303b677445dcb86c0", "keyword": "writeDir KArchive::writeDir KArchive writeDir KArchive::writeDir KArchive writeDir KArchive::writeDir KArchive writeDir KArchive::writeDir KArchive writeDir KArchive::writeDir KArchive writeDir KArchive::writeDir KArchive", "text": "KArchive won t write one directory twice This method also allows some file metadata to be set However depending on the archive type not all metadata might be regarded name the name of the directory user the user that owns the directory group the group that owns the directory perm permissions of the directory atime time the file was last accessed mtime modification time of the file ctime time of last status change"}, {"type": "function", "name": "KArchive::writeFile", "url": "classKArchive.html#aa6cf0bf8afebd3681b62e52d417b20bf", "keyword": "writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive", "text": "since 5.0 use writeFile(const QString&,const QByteArray&,mode_t,const QString&,const QString&,const QDateTime&,const QDateTime&,const QDateTime&)"}, {"type": "function", "name": "KArchive::writeFile", "url": "classKArchive.html#aeb615bb1d33578f57f69af2b1e72029d", "keyword": "writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive", "text": "The archive must be opened for writing first The necessary parent directories are created automatically if needed For instance writing does not require creating the directory first This method also allows some file metadata to be set However depending on the archive type not all metadata might be written out name the name of the file data the data to write perm permissions of the file user the user that owns the file group the group that owns the file atime time the file was last accessed mtime modification time of the file ctime time of last status change"}, {"type": "function", "name": "KArchive::writeSymLink", "url": "classKArchive.html#a5625944353172a5dbd229bf1a08d8a91", "keyword": "writeSymLink KArchive::writeSymLink KArchive writeSymLink KArchive::writeSymLink KArchive writeSymLink KArchive::writeSymLink KArchive writeSymLink KArchive::writeSymLink KArchive writeSymLink KArchive::writeSymLink KArchive writeSymLink KArchive::writeSymLink KArchive", "text": "The archive must be opened for writing name name of symbolic link target target of symbolic link user the user that owns the directory group the group that owns the directory perm permissions of the directory atime time the file was last accessed mtime modification time of the file ctime time of last status change"}, {"type": "function", "name": "K7Zip::closeArchive", "url": "classK7Zip.html#a44e7c936b5613c61729ee23b34f25d9a", "keyword": "closeArchive K7Zip::closeArchive K7Zip", "text": "Called by close"}, {"type": "function", "name": "K7Zip::doFinishWriting", "url": "classK7Zip.html#a34c6b2faa847ea99e08839ff186e75cc", "keyword": "doFinishWriting K7Zip::doFinishWriting K7Zip", "text": ""}, {"type": "function", "name": "K7Zip::doPrepareWriting", "url": "classK7Zip.html#af5509064e8d15a5f879deb8e3c690164", "keyword": "doPrepareWriting K7Zip::doPrepareWriting K7Zip", "text": ""}, {"type": "function", "name": "K7Zip::doWriteDir", "url": "classK7Zip.html#a0ae007127015e6c87bfb6dfd11f4377f", "keyword": "doWriteDir K7Zip::doWriteDir K7Zip", "text": ""}, {"type": "function", "name": "K7Zip::doWriteSymLink", "url": "classK7Zip.html#a5a9a0325d0646630a2612bc157923cac", "keyword": "doWriteSymLink K7Zip::doWriteSymLink K7Zip", "text": ""}, {"type": "function", "name": "K7Zip::openArchive", "url": "classK7Zip.html#a390f17f49925c41c6997a4ebf83bdfd3", "keyword": "openArchive K7Zip::openArchive K7Zip", "text": "Parses the directory listing of the archive and creates the KArchiveDirectory/KArchiveFile entries mode the mode of the file"}, {"type": "function", "name": "K7Zip::writeData", "url": "classK7Zip.html#aa83781241d632dd22c4f30cff68a42f8", "keyword": "writeData K7Zip::writeData K7Zip", "text": ""}, {"type": "function", "name": "KArchive::KArchive", "url": "classKArchive.html#a4386c6e12dc034c0687aa8bb738bf25d", "keyword": "KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive", "text": "fileName is a local path e.g from which the archive will be read from or into which the archive will be written depending on the mode given to open()"}, {"type": "function", "name": "KArchive::KArchive", "url": "classKArchive.html#a3efbb71ada0630d90c5af53fedce9b19", "keyword": "KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive", "text": "dev the I/O device where the archive reads its data Note that this can be a file but also a data buffer a compression filter etc For a file in writing mode it is better to use the other constructor though to benefit from the use of QSaveFile when saving"}, {"type": "function", "name": "KArchive::createDevice", "url": "classKArchive.html#a13e286c61a775bb3a004e23ba5f1fa46", "keyword": "createDevice KArchive::createDevice KArchive createDevice KArchive::createDevice KArchive createDevice KArchive::createDevice KArchive createDevice KArchive::createDevice KArchive createDevice KArchive::createDevice KArchive", "text": "By default this method uses QSaveFile when saving and a simple QFile on reading This method is called by open()"}, {"type": "function", "name": "KArchive::findOrCreate", "url": "classKArchive.html#aa5dfd148c5c870da8a2330d0371e3d6e", "keyword": "findOrCreate KArchive::findOrCreate KArchive findOrCreate KArchive::findOrCreate KArchive findOrCreate KArchive::findOrCreate KArchive findOrCreate KArchive::findOrCreate KArchive findOrCreate KArchive::findOrCreate KArchive findOrCreate KArchive::findOrCreate KArchive", "text": "This handles e.g tar files missing directory entries like mico-2.3.0.tar.gz path the path of the directory the directory with the given path"}, {"type": "function", "name": "KArchive::rootDir", "url": "classKArchive.html#a218da40618b5ea5623656d3dbf3d9ecc", "keyword": "rootDir KArchive::rootDir KArchive rootDir KArchive::rootDir KArchive rootDir KArchive::rootDir KArchive rootDir KArchive::rootDir KArchive rootDir KArchive::rootDir KArchive rootDir KArchive::rootDir KArchive", "text": "The default implementation assumes that openArchive() did the parsing so it creates a dummy rootdir if none was set write mode or no in the archive Reimplement this to provide parsing/listing on demand the root directory"}, {"type": "function", "name": "KArchive::setDevice", "url": "classKArchive.html#af39343456c9c458230546b64ffc66a31", "keyword": "setDevice KArchive::setDevice KArchive setDevice KArchive::setDevice KArchive setDevice KArchive::setDevice KArchive setDevice KArchive::setDevice KArchive setDevice KArchive::setDevice KArchive setDevice KArchive::setDevice KArchive", "text": "Note that KArchive will own the device it must be deleted by the derived class"}, {"type": "function", "name": "KArchive::setRootDir", "url": "classKArchive.html#ae12a8b556703e189b9e2ebc886a18319", "keyword": "setRootDir KArchive::setRootDir KArchive setRootDir KArchive::setRootDir KArchive setRootDir KArchive::setRootDir KArchive setRootDir KArchive::setRootDir KArchive setRootDir KArchive::setRootDir KArchive setRootDir KArchive::setRootDir KArchive", "text": ""}, {"type": "class", "name": "KAr", "url": "classKAr.html", "keyword": "KAr", "text": "Writing is not supported A class for reading ar archives Laurence Anderson"}, {"type": "function", "name": "KAr::KAr", "url": "classKAr.html#a39d760ebc3bfdb6b640bd8db8661a605", "keyword": "KAr KAr::KAr KAr", "text": "filename is a local path e.g"}, {"type": "function", "name": "KAr::KAr", "url": "classKAr.html#ab7031223b09f587dd23ca571880fce42", "keyword": "KAr KAr::KAr KAr", "text": "The device can be compressed KFilterDev or not QFile etc dev the device to read from"}, {"type": "function", "name": "KAr::~KAr", "url": "classKAr.html#ae1779281eae030ab09dcc9d272ee8178", "keyword": "KAr::~KAr KAr", "text": ""}, {"type": "function", "name": "KArchive::writeData", "url": "classKArchive.html#aa16180fff07f057fbcb4a23f4c3840dc", "keyword": "writeData KArchive::writeData KArchive writeData KArchive::writeData KArchive writeData KArchive::writeData KArchive writeData KArchive::writeData KArchive", "text": ""}, {"type": "function", "name": "KAr::closeArchive", "url": "classKAr.html#abe954c7a9f94be4038255e056f2c1573", "keyword": "closeArchive KAr::closeArchive KAr", "text": "Called by close"}, {"type": "function", "name": "KAr::doFinishWriting", "url": "classKAr.html#af0537ec98d8c4fcc9c04b689360a22d3", "keyword": "doFinishWriting KAr::doFinishWriting KAr", "text": "This virtual method must be implemented by subclasses size the size of the file finishWriting()"}, {"type": "function", "name": "KAr::doPrepareWriting", "url": "classKAr.html#ac2c892eda0beb9cc94d61ae0b9337755", "keyword": "doPrepareWriting KAr::doPrepareWriting KAr", "text": "Depending on the archive type not all metadata might be used name the name of the file user the user that owns the file group the group that owns the file size the size of the file perm permissions of the file Use 0100644 if you don t have any more specific permissions to set atime time the file was last accessed mtime modification time of the file ctime time of last status change prepareWriting"}, {"type": "function", "name": "KAr::doWriteDir", "url": "classKAr.html#acbe42c2c913f4b89e8a596c1dd78f312", "keyword": "doWriteDir KAr::doWriteDir KAr", "text": "This virtual method must be implemented by subclasses Depending on the archive type not all metadata might be used name the name of the directory user the user that owns the directory group the group that owns the directory perm permissions of the directory Use 040755 if you don t have any other information atime time the file was last accessed mtime modification time of the file ctime time of last status change writeDir"}, {"type": "function", "name": "KAr::doWriteSymLink", "url": "classKAr.html#a1f669857985f78d67e9d4e83666fd21e", "keyword": "doWriteSymLink KAr::doWriteSymLink KAr", "text": "This virtual method must be implemented by subclasses name name of symbolic link target target of symbolic link user the user that owns the directory group the group that owns the directory perm permissions of the directory atime time the file was last accessed mtime modification time of the file ctime time of last status change writeSymLink"}, {"type": "function", "name": "KAr::openArchive", "url": "classKAr.html#a8d994e724271f25c34edfb2237d61399", "keyword": "openArchive KAr::openArchive KAr", "text": "Parses the directory listing of the archive and creates the KArchiveDirectory/KArchiveFile entries"}, {"type": "class", "name": "KArchive", "url": "classKArchive.html", "keyword": "KArchive", "text": "generic class for reading/writing archives David Faure"}, {"type": "function", "name": "KArchive::closeArchive", "url": "classKArchive.html#a52fa0982c4acaf9dcca8df09749e99a0", "keyword": "closeArchive KArchive::closeArchive KArchive", "text": "Called by close"}, {"type": "function", "name": "KArchive::doFinishWriting", "url": "classKArchive.html#a181381217cda7b1d32abd7422b3de4ff", "keyword": "doFinishWriting KArchive::doFinishWriting KArchive", "text": "This virtual method must be implemented by subclasses size the size of the file finishWriting()"}, {"type": "function", "name": "KArchive::doPrepareWriting", "url": "classKArchive.html#a719ec1a1c62c015e993dee72ecb5fce7", "keyword": "doPrepareWriting KArchive::doPrepareWriting KArchive", "text": "Depending on the archive type not all metadata might be used name the name of the file user the user that owns the file group the group that owns the file size the size of the file perm permissions of the file Use 0100644 if you don t have any more specific permissions to set atime time the file was last accessed mtime modification time of the file ctime time of last status change prepareWriting"}, {"type": "function", "name": "KArchive::doWriteDir", "url": "classKArchive.html#a4423297991d66579ea9fbf070f91ff48", "keyword": "doWriteDir KArchive::doWriteDir KArchive", "text": "This virtual method must be implemented by subclasses Depending on the archive type not all metadata might be used name the name of the directory user the user that owns the directory group the group that owns the directory perm permissions of the directory Use 040755 if you don t have any other information atime time the file was last accessed mtime modification time of the file ctime time of last status change writeDir"}, {"type": "function", "name": "KArchive::doWriteSymLink", "url": "classKArchive.html#a4d818a6892534b4f559d3f4612a18dd5", "keyword": "doWriteSymLink KArchive::doWriteSymLink KArchive", "text": "This virtual method must be implemented by subclasses name name of symbolic link target target of symbolic link user the user that owns the directory group the group that owns the directory perm permissions of the directory atime time the file was last accessed mtime modification time of the file ctime time of last status change writeSymLink"}, {"type": "function", "name": "KArchive::openArchive", "url": "classKArchive.html#a868eecf661cda9b0fd26b6c9a1319555", "keyword": "openArchive KArchive::openArchive KArchive", "text": "Called by open mode may be QIODevice::ReadOnly or QIODevice::WriteOnly"}, {"type": "class", "name": "KArchiveDirectory", "url": "classKArchiveDirectory.html", "keyword": "KArchiveDirectory", "text": "A directory in an archive KArchive KArchiveFile"}, {"type": "function", "name": "KArchiveDirectory::KArchiveDirectory", "url": "classKArchiveDirectory.html#a52719e2e8628d139f5454146cb9d41cb", "keyword": "KArchiveDirectory KArchiveDirectory::KArchiveDirectory KArchiveDirectory", "text": "archive the entries archive name the name of the entry access the permissions in unix format date the date in seconds since 1970 user the user that owns the entry group the group that owns the entry symlink the symlink or QString()"}, {"type": "function", "name": "KArchiveDirectory::addEntry", "url": "classKArchiveDirectory.html#a0f5967950552c9e1fb6858fc1c627c19", "keyword": "addEntry KArchiveDirectory::addEntry KArchiveDirectory", "text": "Adds a new entry to the directory"}, {"type": "function", "name": "KArchiveDirectory::copyTo", "url": "classKArchiveDirectory.html#a69a28476a3c50c9a12b214abf3d5a41a", "keyword": "copyTo KArchiveDirectory::copyTo KArchiveDirectory", "text": "dest the directory to extract to recursive if set to true subdirectories are extracted as well true on success false if the directory dest name() couldn t be created"}, {"type": "function", "name": "KArchiveDirectory::entries", "url": "classKArchiveDirectory.html#a583309dbae0b387c7af46a4dad6dfeca", "keyword": "entries KArchiveDirectory::entries KArchiveDirectory", "text": "Note that the list is not sorted it s even in random order due to using a hashtable Use sort() on the result to sort the list by filename the names of all entries in this directory filenames no path"}, {"type": "function", "name": "KArchiveDirectory::entry", "url": "classKArchiveDirectory.html#a837a73bc3eb3b297f2fc1f4a447c4528", "keyword": "entry KArchiveDirectory::entry KArchiveDirectory", "text": "The entry could be a file or a directory use isFile() to find out which one it is name may be etc a pointer to the entry in the directory or a null pointer if there is no such entry"}, {"type": "function", "name": "KArchiveDirectory::file", "url": "classKArchiveDirectory.html#accb3aa3422fb1645adb9189f43fdf948", "keyword": "file KArchiveDirectory::file KArchiveDirectory", "text": "If the entry exists and is a file a KArchiveFile is returned Otherwise a null pointer is returned This is a convenience method for entry() when we know the entry is expected to be a file name may be etc a pointer to the file entry in the directory or a null pointer if there is no such file entry 5.3"}, {"type": "function", "name": "KArchiveDirectory::isDirectory", "url": "classKArchiveDirectory.html#ab0c1a491aed663a566f5cac4ddb3cea1", "keyword": "isDirectory KArchiveDirectory::isDirectory KArchiveDirectory", "text": "true since this entry is a directory"}, {"type": "function", "name": "KArchiveDirectory::removeEntry", "url": "classKArchiveDirectory.html#a717ab9abd24a82779b38e981c4fc1f39", "keyword": "removeEntry KArchiveDirectory::removeEntry KArchiveDirectory", "text": "Adds a new entry to the directory"}, {"type": "function", "name": "KArchiveEntry::KArchiveEntry", "url": "classKArchiveEntry.html#a5c0e3e538520cf9d05d4d3e12ae4594b", "keyword": "KArchiveEntry KArchiveEntry::KArchiveEntry KArchiveEntry KArchiveEntry KArchiveEntry::KArchiveEntry KArchiveEntry KArchiveEntry KArchiveEntry::KArchiveEntry KArchiveEntry KArchiveEntry KArchiveEntry::KArchiveEntry KArchiveEntry", "text": "archive the entries archive name the name of the entry access the permissions in unix format date the date in seconds since 1970 user the user that owns the entry group the group that owns the entry symlink the symlink or QString()"}, {"type": "function", "name": "KArchiveEntry::date", "url": "classKArchiveEntry.html#a5e2fd48f561980ecf22e6b69c91fc5e6", "keyword": "date KArchiveEntry::date KArchiveEntry date KArchiveEntry::date KArchiveEntry date KArchiveEntry::date KArchiveEntry date KArchiveEntry::date KArchiveEntry", "text": "the creation date"}, {"type": "function", "name": "KArchiveEntry::group", "url": "classKArchiveEntry.html#a6bb1dcb1549695273205c2f0068cb942", "keyword": "group KArchiveEntry::group KArchiveEntry group KArchiveEntry::group KArchiveEntry group KArchiveEntry::group KArchiveEntry group KArchiveEntry::group KArchiveEntry", "text": "the group of the file"}, {"type": "function", "name": "KArchiveEntry::isFile", "url": "classKArchiveEntry.html#adbd83295a865f1b305703cab0a3845ae", "keyword": "isFile KArchiveEntry::isFile KArchiveEntry isFile KArchiveEntry::isFile KArchiveEntry", "text": "true if this entry is a file"}, {"type": "function", "name": "KArchiveEntry::name", "url": "classKArchiveEntry.html#a7a3fb99efe15847ef6cb3766d3588fc7", "keyword": "name KArchiveEntry::name KArchiveEntry name KArchiveEntry::name KArchiveEntry name KArchiveEntry::name KArchiveEntry name KArchiveEntry::name KArchiveEntry", "text": "the file name without path"}, {"type": "function", "name": "KArchiveEntry::permissions", "url": "classKArchiveEntry.html#a2356d6ed02a40c7dae6e9101087c232d", "keyword": "permissions KArchiveEntry::permissions KArchiveEntry permissions KArchiveEntry::permissions KArchiveEntry permissions KArchiveEntry::permissions KArchiveEntry permissions KArchiveEntry::permissions KArchiveEntry", "text": "the permissions"}, {"type": "function", "name": "KArchiveEntry::symLinkTarget", "url": "classKArchiveEntry.html#aa0e86e5f1fa8c993463f8dd1ae605d4d", "keyword": "symLinkTarget KArchiveEntry::symLinkTarget KArchiveEntry symLinkTarget KArchiveEntry::symLinkTarget KArchiveEntry symLinkTarget KArchiveEntry::symLinkTarget KArchiveEntry symLinkTarget KArchiveEntry::symLinkTarget KArchiveEntry", "text": "the symlink or QString()"}, {"type": "function", "name": "KArchiveEntry::user", "url": "classKArchiveEntry.html#a2c36d4e2b4f6ef3dc97cc0d69b7c910f", "keyword": "user KArchiveEntry::user KArchiveEntry user KArchiveEntry::user KArchiveEntry user KArchiveEntry::user KArchiveEntry user KArchiveEntry::user KArchiveEntry", "text": "the owner of the file"}, {"type": "class", "name": "KArchiveEntry", "url": "classKArchiveEntry.html", "keyword": "KArchiveEntry", "text": "Base class for the archive-file s directory structure KArchiveFile KArchiveDirectory"}, {"type": "function", "name": "KArchiveEntry::isDirectory", "url": "classKArchiveEntry.html#a519e4edcc7eaeebc1c813e7a4278ca5e", "keyword": "isDirectory KArchiveEntry::isDirectory KArchiveEntry isDirectory KArchiveEntry::isDirectory KArchiveEntry isDirectory KArchiveEntry::isDirectory KArchiveEntry", "text": "true if this entry is a directory"}, {"type": "class", "name": "KArchiveFile", "url": "classKArchiveFile.html", "keyword": "KArchiveFile", "text": "A file in an archive KArchive KArchiveDirectory"}, {"type": "function", "name": "KArchiveFile::KArchiveFile", "url": "classKArchiveFile.html#a0b5589f87f70f4b1a3922040d3b63111", "keyword": "KArchiveFile KArchiveFile::KArchiveFile KArchiveFile KArchiveFile KArchiveFile::KArchiveFile KArchiveFile", "text": "Do not call this KArchive takes care of it archive the entries archive name the name of the entry access the permissions in unix format date the date in seconds since 1970 user the user that owns the entry group the group that owns the entry symlink the symlink or QString() pos the position of the file in the directory size the size of the file"}, {"type": "function", "name": "KArchiveFile::~KArchiveFile", "url": "classKArchiveFile.html#a562c9843552d8613c7c9567809f09b14", "keyword": "KArchiveFile::~KArchiveFile KArchiveFile KArchiveFile::~KArchiveFile KArchiveFile", "text": "Do not call this KArchive takes care of it"}, {"type": "function", "name": "KArchiveFile::copyTo", "url": "classKArchiveFile.html#a0d25262342c7e71a4d13f578959dedae", "keyword": "copyTo KArchiveFile::copyTo KArchiveFile copyTo KArchiveFile::copyTo KArchiveFile", "text": "dest the directory to extract to true on success false if the file dest name() couldn t be created"}, {"type": "function", "name": "KArchiveFile::createDevice", "url": "classKArchiveFile.html#a3c5a708ab462bca4c8b6d64b655ef2fb", "keyword": "createDevice KArchiveFile::createDevice KArchiveFile", "text": "This is obviously for reading only WARNING Note that the ownership of the device is being transferred to the caller who will have to delete it The returned device auto-opens in readonly mode no need to open it the QIODevice of the file"}, {"type": "function", "name": "KArchiveFile::data", "url": "classKArchiveFile.html#a465733787b3f57f0773a239dfad646ed", "keyword": "data KArchiveFile::data KArchiveFile", "text": "Call data() with care only once per file this data isn t cached the content of this file"}, {"type": "function", "name": "KArchiveFile::isFile", "url": "classKArchiveFile.html#ab4e8989d6c9e363b60fd633224991307", "keyword": "isFile KArchiveFile::isFile KArchiveFile isFile KArchiveFile::isFile KArchiveFile", "text": "true since this entry is a file"}, {"type": "function", "name": "KArchiveFile::position", "url": "classKArchiveFile.html#ab45ce3c099691954fefeffe773b742c5", "keyword": "position KArchiveFile::position KArchiveFile position KArchiveFile::position KArchiveFile", "text": "the position of the file"}, {"type": "function", "name": "KArchiveFile::setSize", "url": "classKArchiveFile.html#a46ab3c77fb21b1ca095ba4a155f7d47e", "keyword": "setSize KArchiveFile::setSize KArchiveFile setSize KArchiveFile::setSize KArchiveFile", "text": "s the new size of the file"}, {"type": "function", "name": "KArchiveFile::size", "url": "classKArchiveFile.html#a2006219e1cb0503dbbf0bc96b1f9f80d", "keyword": "size KArchiveFile::size KArchiveFile size KArchiveFile::size KArchiveFile", "text": "the size of the file"}, {"type": "class", "name": "KCompressionDevice", "url": "classKCompressionDevice.html", "keyword": "KCompressionDevice", "text": "file but other usages are possible like a buffer or a socket Use this class to read/write compressed files"}, {"type": "function", "name": "KCompressionDevice::KCompressionDevice", "url": "classKCompressionDevice.html#a19d90470f86e14433eb2f21a7135c856", "keyword": "KCompressionDevice KCompressionDevice::KCompressionDevice KCompressionDevice KCompressionDevice KCompressionDevice::KCompressionDevice KCompressionDevice", "text": "GZip BZip2 etc inputDevice input device autoDeleteInputDevice if true inputDevice will be deleted automatically type the CompressionType to use"}, {"type": "function", "name": "KCompressionDevice::KCompressionDevice", "url": "classKCompressionDevice.html#a134baa7d6ad968471719755f58cea1e5", "keyword": "KCompressionDevice KCompressionDevice::KCompressionDevice KCompressionDevice KCompressionDevice KCompressionDevice::KCompressionDevice KCompressionDevice", "text": "GZip BZip2 etc fileName the name of the file to filter type the CompressionType to use"}, {"type": "function", "name": "KCompressionDevice::~KCompressionDevice", "url": "classKCompressionDevice.html#abd7b288aaf15a0d791e62425f9b8c1cd", "keyword": "KCompressionDevice::~KCompressionDevice KCompressionDevice KCompressionDevice::~KCompressionDevice KCompressionDevice", "text": "Calls close() if the filter device is still open"}, {"type": "function", "name": "KCompressionDevice::close", "url": "classKCompressionDevice.html#a984fa31855f47612817a22e5d25b4181", "keyword": "close KCompressionDevice::close KCompressionDevice close KCompressionDevice::close KCompressionDevice", "text": ""}, {"type": "function", "name": "KCompressionDevice::compressionType", "url": "classKCompressionDevice.html#aa94e4dc51069e6b9fcf20ca3344bbd95", "keyword": "compressionType KCompressionDevice::compressionType KCompressionDevice compressionType KCompressionDevice::compressionType KCompressionDevice", "text": "If the support for the compression requested in the constructor is not available then the device will use None"}, {"type": "function", "name": "KCompressionDevice::open", "url": "classKCompressionDevice.html#ae40ec51fa25dfe0b8844d0cfc143ceb2", "keyword": "open KCompressionDevice::open KCompressionDevice open KCompressionDevice::open KCompressionDevice", "text": ""}, {"type": "function", "name": "KCompressionDevice::seek", "url": "classKCompressionDevice.html#a4d8ab175fe4cd856bebf20d412a172d6", "keyword": "seek KCompressionDevice::seek KCompressionDevice seek KCompressionDevice::seek KCompressionDevice", "text": "Use with care"}, {"type": "function", "name": "KCompressionDevice::setOrigFileName", "url": "classKCompressionDevice.html#a16f277ab56f2d99aceffc698625a8254", "keyword": "setOrigFileName KCompressionDevice::setOrigFileName KCompressionDevice setOrigFileName KCompressionDevice::setOrigFileName KCompressionDevice", "text": "fileName the name of the original file"}, {"type": "function", "name": "KCompressionDevice::setSkipHeaders", "url": "classKCompressionDevice.html#ac798a1e99382a3bbb39da72bd80c9335", "keyword": "setSkipHeaders KCompressionDevice::setSkipHeaders KCompressionDevice setSkipHeaders KCompressionDevice::setSkipHeaders KCompressionDevice", "text": "This way KCompressionDevice with gzip filter can be used as a direct wrapper around zlib this is used by KZip"}, {"type": "function", "name": "KCompressionDevice::filterForCompressionType", "url": "classKCompressionDevice.html#a4146d38b19d20828cdd3327303757013", "keyword": "filterForCompressionType KCompressionDevice::filterForCompressionType KCompressionDevice filterForCompressionType KCompressionDevice::filterForCompressionType KCompressionDevice", "text": "type the type of the compression filter the filter for the type or 0 if not found"}, {"type": "class", "name": "KFilterBase", "url": "classKFilterBase.html", "keyword": "KFilterBase", "text": "It s pretty much internal Don t use directly use KFilterDev instead"}, {"type": "enum", "name": "KFilterBase::FilterFlags", "url": "classKFilterBase.html#a6aea514aa95018abc98c7f4de711e70f", "keyword": "FilterFlags KFilterBase::FilterFlags KFilterBase FilterFlags KFilterBase::FilterFlags KFilterBase FilterFlags KFilterBase::FilterFlags KFilterBase", "text": "4.3"}, {"type": "enum", "name": "KFilterBase::Result", "url": "classKFilterBase.html#a11c71b7d147daff9164114ef565d05a6", "keyword": "Result KFilterBase::Result KFilterBase Result KFilterBase::Result KFilterBase Result KFilterBase::Result KFilterBase", "text": ""}, {"type": "function", "name": "KFilterBase::compress", "url": "classKFilterBase.html#a9640e78ba2da5e4aa34e928b426e16b8", "keyword": "compress KFilterBase::compress KFilterBase", "text": ""}, {"type": "function", "name": "KFilterBase::device", "url": "classKFilterBase.html#acd8b6961025d56d47c735aba28254b44", "keyword": "device KFilterBase::device KFilterBase device KFilterBase::device KFilterBase device KFilterBase::device KFilterBase", "text": "the device on which the filter will work"}, {"type": "function", "name": "KFilterBase::inBufferAvailable", "url": "classKFilterBase.html#acef9fa1b419198bde5f9d8a433d7cd8e", "keyword": "inBufferAvailable KFilterBase::inBufferAvailable KFilterBase", "text": ""}, {"type": "function", "name": "KFilterBase::inBufferEmpty", "url": "classKFilterBase.html#a9d71d8602e9ed2febbe73a55306fb874", "keyword": "inBufferEmpty KFilterBase::inBufferEmpty KFilterBase inBufferEmpty KFilterBase::inBufferEmpty KFilterBase inBufferEmpty KFilterBase::inBufferEmpty KFilterBase", "text": ""}, {"type": "function", "name": "KFilterBase::init", "url": "classKFilterBase.html#a5957e0e8fb8a376f3011e05284b1cb70", "keyword": "init KFilterBase::init KFilterBase", "text": ""}, {"type": "function", "name": "KFilterBase::mode", "url": "classKFilterBase.html#aea4a8777dfad1fb83e7785194b12b680", "keyword": "mode KFilterBase::mode KFilterBase", "text": ""}, {"type": "function", "name": "KFilterBase::outBufferAvailable", "url": "classKFilterBase.html#a0a0bfb0a10281beeec6e2a2a65d32c22", "keyword": "outBufferAvailable KFilterBase::outBufferAvailable KFilterBase", "text": ""}, {"type": "function", "name": "KFilterBase::outBufferFull", "url": "classKFilterBase.html#afe7142cc3bfa9893fad187dae5a87cfc", "keyword": "outBufferFull KFilterBase::outBufferFull KFilterBase outBufferFull KFilterBase::outBufferFull KFilterBase outBufferFull KFilterBase::outBufferFull KFilterBase", "text": ""}, {"type": "function", "name": "KFilterBase::readHeader", "url": "classKFilterBase.html#ad7b7580531a444442caf0daaaa27a283", "keyword": "readHeader KFilterBase::readHeader KFilterBase", "text": ""}, {"type": "function", "name": "KFilterBase::reset", "url": "classKFilterBase.html#aa94bcd1fbb4caff410c6eb3bec89d43c", "keyword": "reset KFilterBase::reset KFilterBase", "text": ""}, {"type": "function", "name": "KFilterBase::setDevice", "url": "classKFilterBase.html#ae0b5719aa1ebe3b43507f45828acfb31", "keyword": "setDevice KFilterBase::setDevice KFilterBase setDevice KFilterBase::setDevice KFilterBase setDevice KFilterBase::setDevice KFilterBase", "text": "dev the device on which the filter will work autodelete if true dev is deleted when the filter is deleted"}, {"type": "function", "name": "KFilterBase::setFilterFlags", "url": "classKFilterBase.html#a741ff7aadcdad956684df276b690582b", "keyword": "setFilterFlags KFilterBase::setFilterFlags KFilterBase setFilterFlags KFilterBase::setFilterFlags KFilterBase setFilterFlags KFilterBase::setFilterFlags KFilterBase", "text": "4.3"}, {"type": "function", "name": "KFilterBase::setInBuffer", "url": "classKFilterBase.html#a332c5aba58f0c01f588de41bb337e15c", "keyword": "setInBuffer KFilterBase::setInBuffer KFilterBase", "text": ""}, {"type": "function", "name": "KFilterBase::setOutBuffer", "url": "classKFilterBase.html#a5e284cc9076c690c5e0969e09ac0df1d", "keyword": "setOutBuffer KFilterBase::setOutBuffer KFilterBase", "text": ""}, {"type": "function", "name": "KFilterBase::terminate", "url": "classKFilterBase.html#a1d5fe556cdc03b2c48b0ec7f87c854a5", "keyword": "terminate KFilterBase::terminate KFilterBase", "text": ""}, {"type": "function", "name": "KFilterBase::uncompress", "url": "classKFilterBase.html#a6f29466c181fbf910a75b4775488b62e", "keyword": "uncompress KFilterBase::uncompress KFilterBase", "text": ""}, {"type": "function", "name": "KFilterBase::writeHeader", "url": "classKFilterBase.html#a7672777b39bdd42c5f2c7121fff34848", "keyword": "writeHeader KFilterBase::writeHeader KFilterBase", "text": ""}, {"type": "function", "name": "KFilterBase::virtual_hook", "url": "classKFilterBase.html#ac44636209bc81d9538a2d35ea238c8b4", "keyword": "virtual_hook KFilterBase::virtual_hook KFilterBase virtual_hook KFilterBase::virtual_hook KFilterBase virtual_hook KFilterBase::virtual_hook KFilterBase", "text": "Unused in this class"}, {"type": "class", "name": "KFilterDev", "url": "classKFilterDev.html", "keyword": "KFilterDev", "text": "file but other usages are possible like a buffer or a socket To simply read/write compressed files see deviceForFile KFilterDev adds MIME type support to KCompressionDevice and also provides compatibility methods for KDE 4 code David Faure"}, {"type": "function", "name": "KFilterDev::KFilterDev", "url": "classKFilterDev.html#a7822f81287541a1952b04305273c9131", "keyword": "KFilterDev KFilterDev::KFilterDev KFilterDev", "text": "5.0 Constructs a KFilterDev for a given FileName fileName the name of the file to filter"}, {"type": "function", "name": "KFilterDev::compressionTypeForMimeType", "url": "classKFilterDev.html#a32ffcfa2ce1245b70605dcf51f6271ae", "keyword": "compressionTypeForMimeType KFilterDev::compressionTypeForMimeType KFilterDev", "text": "Otherwise returns None This handles simple cases like application/x-gzip but also application/x-compressed-tar and inheritance"}, {"type": "function", "name": "KFilterDev::device", "url": "classKFilterDev.html#a15b5dc4093e405e8af6f021095464ee2", "keyword": "device KFilterDev::device KFilterDev", "text": "Use KCompressionDevice Use KCompressionDevice::CompressionType type KFilterDev::compressionTypeForMimeType(mimeType) KCompressionDevice flt(&file, false, type) instead of QIODevice KFilterDev::device(&file, mimeType, false) Creates an i/o device that is able to read from the QIODevice inDevice whether the data is compressed or not Available compression filters gzip/bzip2 etc will automatically be used The compression filter to be used is determined mimetype Pass or to use the corresponding decompression filter Warning application/x-bzip may not be available In that case 0 will be returned The returned QIODevice has to be deleted after using inDevice input device Won t be deleted if autoDeleteInDevice false mimetype the mime type for the filter autoDeleteInDevice if true inDevice will be deleted automatically a KCompressionDevice that filters the original stream Must be deleted after using"}, {"type": "function", "name": "KFilterDev::deviceForFile", "url": "classKFilterDev.html#a4714ddacbcfe6d57702505f7e07da141", "keyword": "deviceForFile KFilterDev::deviceForFile KFilterDev", "text": "Use the constructor instead if mimetype is empty or KCompressionDevice if the mimetype is known Use KFilterDev dev(fileName) instead of QIODevice dev KFilterDev::deviceForFile(fileName) If the mimetype was specified explicitly use KCompressionDevice dev(fileName, KCompressionDevice::GZip) instead of QIODevice dev KFilterDev::deviceForFile fileName Creates an i/o device that is able to read from fileName whether it s compressed or not Available compression filters gzip/bzip2 etc will automatically be used The compression filter to be used is determined from the fileName if mimetype is empty Pass or to force the corresponding decompression filter if available Warning application/x-bzip may not be available In that case a QFile opened on the compressed data will be returned Use KFilterBase::findFilterByMimeType and code similar to what deviceForFile is doing to better control what s happening The returned QIODevice has to be deleted after using fileName the name of the file to filter mimetype the mime type of the file to filter or QString() if unknown forceFilter if true the function will either find a compression filter or return 0 If false it will always return a QIODevice If no filter is available it will return a simple QFile This can be useful if the file is usable without a filter if a filter has been found the KCompressionDevice for the filter If the filter does not exist the return value depends on forceFilter The returned KCompressionDevice has to be deleted after using"}, {"type": "class", "name": "KGzipFilter", "url": "classKGzipFilter.html", "keyword": "KGzipFilter", "text": "This header is not installed"}, {"type": "function", "name": "KGzipFilter::compress", "url": "classKGzipFilter.html#a520486c1186f574a65193553097c3dbe", "keyword": "compress KGzipFilter::compress KGzipFilter", "text": ""}, {"type": "function", "name": "KGzipFilter::inBufferAvailable", "url": "classKGzipFilter.html#a68a8ae632b9709ffa6467db851ed68a3", "keyword": "inBufferAvailable KGzipFilter::inBufferAvailable KGzipFilter", "text": ""}, {"type": "function", "name": "KGzipFilter::init", "url": "classKGzipFilter.html#af5d0a7474c9c282be010dda81849a61e", "keyword": "init KGzipFilter::init KGzipFilter", "text": ""}, {"type": "function", "name": "KGzipFilter::mode", "url": "classKGzipFilter.html#ad41890576384ce05296ae8b78a1fa67d", "keyword": "mode KGzipFilter::mode KGzipFilter", "text": ""}, {"type": "function", "name": "KGzipFilter::outBufferAvailable", "url": "classKGzipFilter.html#a99942744320d54d37c5d8cf0f66198a1", "keyword": "outBufferAvailable KGzipFilter::outBufferAvailable KGzipFilter", "text": ""}, {"type": "function", "name": "KGzipFilter::readHeader", "url": "classKGzipFilter.html#ac615dd80bb7432c7246aa17dab62fc9d", "keyword": "readHeader KGzipFilter::readHeader KGzipFilter", "text": ""}, {"type": "function", "name": "KGzipFilter::reset", "url": "classKGzipFilter.html#a3a1c571d4619bcf548a637a9ec67f7f6", "keyword": "reset KGzipFilter::reset KGzipFilter", "text": ""}, {"type": "function", "name": "KGzipFilter::setInBuffer", "url": "classKGzipFilter.html#a3a00e0969d8897bbad9c7c463bf10103", "keyword": "setInBuffer KGzipFilter::setInBuffer KGzipFilter", "text": ""}, {"type": "function", "name": "KGzipFilter::setOutBuffer", "url": "classKGzipFilter.html#a95d31cb1fe78b3b481c1616cedf26eef", "keyword": "setOutBuffer KGzipFilter::setOutBuffer KGzipFilter", "text": ""}, {"type": "function", "name": "KGzipFilter::terminate", "url": "classKGzipFilter.html#af297b127ab51424e3ef9d98fe38a0dae", "keyword": "terminate KGzipFilter::terminate KGzipFilter", "text": ""}, {"type": "function", "name": "KGzipFilter::uncompress", "url": "classKGzipFilter.html#affd1f648862b2256afc67711108267f4", "keyword": "uncompress KGzipFilter::uncompress KGzipFilter", "text": ""}, {"type": "function", "name": "KGzipFilter::writeHeader", "url": "classKGzipFilter.html#a01aeb5d5d4587046554f71d498891bdc", "keyword": "writeHeader KGzipFilter::writeHeader KGzipFilter", "text": ""}, {"type": "class", "name": "KNoneFilter", "url": "classKNoneFilter.html", "keyword": "KNoneFilter", "text": "This header is not installed"}, {"type": "function", "name": "KNoneFilter::compress", "url": "classKNoneFilter.html#a23fed9b8d64772f104ff99eb14eb0a5d", "keyword": "compress KNoneFilter::compress KNoneFilter", "text": ""}, {"type": "function", "name": "KNoneFilter::inBufferAvailable", "url": "classKNoneFilter.html#aaf73deb35698fcf7f9a58518b4e4f640", "keyword": "inBufferAvailable KNoneFilter::inBufferAvailable KNoneFilter", "text": ""}, {"type": "function", "name": "KNoneFilter::init", "url": "classKNoneFilter.html#ad743e6e718d11eab87f8064add0963a2", "keyword": "init KNoneFilter::init KNoneFilter", "text": ""}, {"type": "function", "name": "KNoneFilter::mode", "url": "classKNoneFilter.html#a6d3b2bee8a45a8dc4959040049e218bd", "keyword": "mode KNoneFilter::mode KNoneFilter", "text": ""}, {"type": "function", "name": "KNoneFilter::outBufferAvailable", "url": "classKNoneFilter.html#a48a941284ac2f3a49302f91d0817fda9", "keyword": "outBufferAvailable KNoneFilter::outBufferAvailable KNoneFilter", "text": ""}, {"type": "function", "name": "KNoneFilter::readHeader", "url": "classKNoneFilter.html#a5766a7a1652a1bbdc991987147b3deb0", "keyword": "readHeader KNoneFilter::readHeader KNoneFilter", "text": ""}, {"type": "function", "name": "KNoneFilter::reset", "url": "classKNoneFilter.html#aa5cca124200a3fbfca71985a4749984b", "keyword": "reset KNoneFilter::reset KNoneFilter", "text": ""}, {"type": "function", "name": "KNoneFilter::setInBuffer", "url": "classKNoneFilter.html#a1c0d5e488f5fcd64427e20585f303de7", "keyword": "setInBuffer KNoneFilter::setInBuffer KNoneFilter", "text": ""}, {"type": "function", "name": "KNoneFilter::setOutBuffer", "url": "classKNoneFilter.html#a987e75f011fefa9e6f9c853d639ab6d3", "keyword": "setOutBuffer KNoneFilter::setOutBuffer KNoneFilter", "text": ""}, {"type": "function", "name": "KNoneFilter::terminate", "url": "classKNoneFilter.html#a59d5e9a685bc75c9281ecab937fc9eb0", "keyword": "terminate KNoneFilter::terminate KNoneFilter", "text": ""}, {"type": "function", "name": "KNoneFilter::uncompress", "url": "classKNoneFilter.html#a610bbb553b9df07f4509f4cac64a5be9", "keyword": "uncompress KNoneFilter::uncompress KNoneFilter", "text": ""}, {"type": "function", "name": "KNoneFilter::writeHeader", "url": "classKNoneFilter.html#a3ab10cd2b95428d3c904c1e07e5dec47", "keyword": "writeHeader KNoneFilter::writeHeader KNoneFilter", "text": ""}, {"type": "class", "name": "KRcc", "url": "classKRcc.html", "keyword": "KRcc", "text": "Writing is not supported A class for reading rcc resources 5.3"}, {"type": "function", "name": "KRcc::KRcc", "url": "classKRcc.html#a7882b7b0e86c126a611144757fc862e2", "keyword": "KRcc KRcc::KRcc KRcc", "text": "filename is a local path e.g"}, {"type": "function", "name": "KRcc::~KRcc", "url": "classKRcc.html#ae7a9778c8a99c75e6bf5c6b542c77342", "keyword": "KRcc::~KRcc KRcc", "text": ""}, {"type": "function", "name": "KRcc::closeArchive", "url": "classKRcc.html#a7d32b3a4e283ba7a66d30c76069c3f33", "keyword": "closeArchive KRcc::closeArchive KRcc", "text": ""}, {"type": "function", "name": "KRcc::doFinishWriting", "url": "classKRcc.html#a4f34239a914071605e4a8b3a67a59c85", "keyword": "doFinishWriting KRcc::doFinishWriting KRcc", "text": "This virtual method must be implemented by subclasses size the size of the file finishWriting()"}, {"type": "function", "name": "KRcc::doPrepareWriting", "url": "classKRcc.html#a9568adce115ae3efacc4d6c3928d0aaf", "keyword": "doPrepareWriting KRcc::doPrepareWriting KRcc", "text": "Depending on the archive type not all metadata might be used name the name of the file user the user that owns the file group the group that owns the file size the size of the file perm permissions of the file Use 0100644 if you don t have any more specific permissions to set atime time the file was last accessed mtime modification time of the file ctime time of last status change prepareWriting"}, {"type": "function", "name": "KRcc::doWriteDir", "url": "classKRcc.html#a01d52e7e4b887813507382a870d66e0b", "keyword": "doWriteDir KRcc::doWriteDir KRcc", "text": "This virtual method must be implemented by subclasses Depending on the archive type not all metadata might be used name the name of the directory user the user that owns the directory group the group that owns the directory perm permissions of the directory Use 040755 if you don t have any other information atime time the file was last accessed mtime modification time of the file ctime time of last status change writeDir"}, {"type": "function", "name": "KRcc::doWriteSymLink", "url": "classKRcc.html#a8822cbee0507ca869254b2b18c32f17d", "keyword": "doWriteSymLink KRcc::doWriteSymLink KRcc", "text": "This virtual method must be implemented by subclasses name name of symbolic link target target of symbolic link user the user that owns the directory group the group that owns the directory perm permissions of the directory atime time the file was last accessed mtime modification time of the file ctime time of last status change writeSymLink"}, {"type": "function", "name": "KRcc::openArchive", "url": "classKRcc.html#a99aa0df3a18ec989d3633549a2e95368", "keyword": "openArchive KRcc::openArchive KRcc", "text": ""}, {"type": "class", "name": "KTar", "url": "classKTar.html", "keyword": "KTar", "text": "KTar allows you to read and write tar archives including those that are compressed using gzip bzip2 or xz Torben Weis David Faure"}, {"type": "function", "name": "KTar::KTar", "url": "classKTar.html#a44b9ab8fd30f0c7ffcf6a4a5c8f2443a", "keyword": "KTar KTar::KTar KTar", "text": "filename is a local path e.g mimetype or Do not use application/x-compressed-tar or similar you only need to specify the compression layer If the mimetype is omitted it will be determined from the filename"}, {"type": "function", "name": "KTar::KTar", "url": "classKTar.html#a93e7ce44e3438619e7cfb91bc879f688", "keyword": "KTar KTar::KTar KTar", "text": "The device can be compressed KFilterDev or not QFile etc Do not assume that giving a QFile here will decompress the file in case it s compressed! dev the device to read from If the source is compressed the QIODevice must take care of decompression"}, {"type": "function", "name": "KTar::~KTar", "url": "classKTar.html#a8388c1acf8491f32ea04a9bc298f2d36", "keyword": "KTar::~KTar KTar", "text": ""}, {"type": "function", "name": "KTar::setOrigFileName", "url": "classKTar.html#a6f104d8a72f38fcc1f5984a7f40a4d59", "keyword": "setOrigFileName KTar::setOrigFileName KTar", "text": "It appears when using in the command for instance Should only be called if the underlying device is a KFilterDev! fileName the original file name"}, {"type": "function", "name": "KTar::closeArchive", "url": "classKTar.html#a963f2c3fc94e0a44c1f24846a8db7a20", "keyword": "closeArchive KTar::closeArchive KTar", "text": "Called by close"}, {"type": "function", "name": "KTar::createDevice", "url": "classKTar.html#a595e1d5daed28aa53a185f260ce8b629", "keyword": "createDevice KTar::createDevice KTar", "text": "By default this method uses QSaveFile when saving and a simple QFile on reading This method is called by open()"}, {"type": "function", "name": "KTar::doFinishWriting", "url": "classKTar.html#a3402a798f13eb00692901885c66b503c", "keyword": "doFinishWriting KTar::doFinishWriting KTar", "text": ""}, {"type": "function", "name": "KTar::doPrepareWriting", "url": "classKTar.html#ac83bfdbafb791894f791e33e3f5e48b7", "keyword": "doPrepareWriting KTar::doPrepareWriting KTar", "text": ""}, {"type": "function", "name": "KTar::doWriteDir", "url": "classKTar.html#ab7e296bf9ad349e68b00b3a5755b0bcd", "keyword": "doWriteDir KTar::doWriteDir KTar", "text": ""}, {"type": "function", "name": "KTar::doWriteSymLink", "url": "classKTar.html#a397a1617c71924cb2bc57122d409f4bd", "keyword": "doWriteSymLink KTar::doWriteSymLink KTar", "text": ""}, {"type": "function", "name": "KTar::openArchive", "url": "classKTar.html#a85ce841ac81b8dbce228e152cda5d555", "keyword": "openArchive KTar::openArchive KTar", "text": "Parses the directory listing of the archive and creates the KArchiveDirectory/KArchiveFile entries mode the mode of the file"}, {"type": "class", "name": "KZip", "url": "classKZip.html", "keyword": "KZip", "text": "You can use it in QIODevice::ReadOnly or in QIODevice::WriteOnly mode and it behaves just as expected It can also be used in QIODevice::ReadWrite mode in this case one can append files to an existing zip archive When you append new files which are not yet in the zip it works as expected i.e the files are appended at the end When you append a file which is already in the file the reference to the old file is dropped and the new one is added to the zip but the old data from the file itself is not deleted it is still in the zipfile So when you want to have a small and garbage-free zipfile just read the contents of the appended zip file and write it to a new one in QIODevice::WriteOnly mode This is especially important when you don t want to leak information of how intermediate versions of files in the zip were looking For more information on the zip fileformat go to Holger Schroeder"}, {"type": "enum", "name": "KZip::Compression", "url": "classKZip.html#ab0654dff75d0f8747b0d90ad39bc2ace", "keyword": "Compression KZip::Compression KZip", "text": ""}, {"type": "enumvalue", "name": "KZip::NoCompression", "url": "classKZip.html#ab0654dff75d0f8747b0d90ad39bc2aceabf73c42b9987176459a29f393baf4e6a", "keyword": "NoCompression KZip::NoCompression KZip", "text": "Uncompressed"}, {"type": "enumvalue", "name": "KZip::DeflateCompression", "url": "classKZip.html#ab0654dff75d0f8747b0d90ad39bc2acea4a8ddbf17f28e126c1e5a297876ada80", "keyword": "DeflateCompression KZip::DeflateCompression KZip", "text": "Deflate compression method"}, {"type": "enum", "name": "KZip::ExtraField", "url": "classKZip.html#a3b1610ecac186076da3f424b6103ff04", "keyword": "ExtraField KZip::ExtraField KZip", "text": ""}, {"type": "enumvalue", "name": "KZip::NoExtraField", "url": "classKZip.html#a3b1610ecac186076da3f424b6103ff04ad5e053e8f68fe61489583558268ed660", "keyword": "NoExtraField KZip::NoExtraField KZip", "text": "No extra field"}, {"type": "enumvalue", "name": "KZip::ModificationTime", "url": "classKZip.html#a3b1610ecac186076da3f424b6103ff04a7b5b655b17f10dfe213d3b2323e601a0", "keyword": "ModificationTime KZip::ModificationTime KZip", "text": "Modification time header"}, {"type": "function", "name": "KZip::KZip", "url": "classKZip.html#a62f0a5753d4ef02f5611b1f8dd7caf50", "keyword": "KZip KZip::KZip KZip", "text": "using the compression filter associated to given mimetype filename is a local path e.g"}, {"type": "function", "name": "KZip::KZip", "url": "classKZip.html#a4e07b57c827771e453a9aa3f6df2102b", "keyword": "KZip KZip::KZip KZip", "text": "The device can be compressed KFilterDev or not QFile etc Do not assume that giving a QFile here will decompress the file in case it s compressed! dev the device to access"}, {"type": "function", "name": "KZip::~KZip", "url": "classKZip.html#a895868321e479a01525fd8a8e9714525", "keyword": "KZip::~KZip KZip", "text": ""}, {"type": "function", "name": "KZip::compression", "url": "classKZip.html#ab525eff29d4425a3bd4230dcde5c8031", "keyword": "compression KZip::compression KZip", "text": "the current compression mode setCompression()"}, {"type": "function", "name": "KZip::extraField", "url": "classKZip.html#aff9413e15927d39a63fcccf5ca8da504", "keyword": "extraField KZip::extraField KZip", "text": "the current type of setExtraField()"}, {"type": "function", "name": "KZip::setCompression", "url": "classKZip.html#a286095b519b20b3a82449f7b5b50e039", "keyword": "setCompression KZip::setCompression KZip", "text": "c the new compression mode compression()"}, {"type": "function", "name": "KZip::setExtraField", "url": "classKZip.html#a5e9a9365ce56a6d1124be7ee8fae360d", "keyword": "setExtraField KZip::setExtraField KZip", "text": "ef the type of extraField()"}, {"type": "function", "name": "KZip::writeData", "url": "classKZip.html#aaa3425245096f000f5a82d5e572ce4f9", "keyword": "writeData KZip::writeData KZip", "text": "data a pointer to the data size the size of the chunk true if successful false otherwise"}, {"type": "function", "name": "KZip::closeArchive", "url": "classKZip.html#a8b732f0df8e83658cabb7eff226941c8", "keyword": "closeArchive KZip::closeArchive KZip", "text": ""}, {"type": "function", "name": "KZip::doFinishWriting", "url": "classKZip.html#a779b54eddb092d2e97503a276b9fddfc", "keyword": "doFinishWriting KZip::doFinishWriting KZip", "text": "size the size of the file true if successful false otherwise"}, {"type": "function", "name": "KZip::doPrepareWriting", "url": "classKZip.html#a5c41f2268fe0ab47b463ea41b9dc4d71", "keyword": "doPrepareWriting KZip::doPrepareWriting KZip", "text": ""}, {"type": "function", "name": "KZip::doWriteDir", "url": "classKZip.html#a1c872c7826c50ccd5b9fc6247dab3923", "keyword": "doWriteDir KZip::doWriteDir KZip", "text": ""}, {"type": "function", "name": "KZip::doWriteSymLink", "url": "classKZip.html#ace30d108e4428e06f33fa7c26eae4cc1", "keyword": "doWriteSymLink KZip::doWriteSymLink KZip", "text": ""}, {"type": "function", "name": "KZip::openArchive", "url": "classKZip.html#a18c321438e2c8f44c5e2dcf69fbdbc5a", "keyword": "openArchive KZip::openArchive KZip", "text": "Parses the directory listing of the archive and creates the KArchiveDirectory/KArchiveFile entries mode the mode of the file"}, {"type": "class", "name": "KZipFileEntry", "url": "classKZipFileEntry.html", "keyword": "KZipFileEntry", "text": ""}, {"type": "function", "name": "KZipFileEntry::KZipFileEntry", "url": "classKZipFileEntry.html#a033d81c2d025339f668b3155277e7657", "keyword": "KZipFileEntry KZipFileEntry::KZipFileEntry KZipFileEntry", "text": "Do not call this KZip takes care of it"}, {"type": "function", "name": "KZipFileEntry::~KZipFileEntry", "url": "classKZipFileEntry.html#afcc1fa146426aa46ce1d2bd716bc40db", "keyword": "KZipFileEntry::~KZipFileEntry KZipFileEntry", "text": "Do not call this"}, {"type": "function", "name": "KZipFileEntry::crc32", "url": "classKZipFileEntry.html#a6a298ae6d8c2ef6db7e31b04d6a10162", "keyword": "crc32 KZipFileEntry::crc32 KZipFileEntry", "text": ""}, {"type": "function", "name": "KZipFileEntry::createDevice", "url": "classKZipFileEntry.html#a7b6664ddcb866653788e03ed9b59c28f", "keyword": "createDevice KZipFileEntry::createDevice KZipFileEntry", "text": "This is obviously for reading only Note that the ownership of the device is being transferred to the caller who will have to delete it The returned device auto-opens in readonly mode no need to open it"}, {"type": "function", "name": "KZipFileEntry::data", "url": "classKZipFileEntry.html#ab51e1c6ece127c3140318389cd4293be", "keyword": "data KZipFileEntry::data KZipFileEntry", "text": "the content of this file Call data() with care only once per file this data isn t cached"}, {"type": "function", "name": "KZipFileEntry::path", "url": "classKZipFileEntry.html#a6c69b7a8e5d55d44c0261fcb14f35173", "keyword": "path KZipFileEntry::path KZipFileEntry", "text": ""}, {"type": "function", "name": "KZipFileEntry::setCompressedSize", "url": "classKZipFileEntry.html#a32ce307aacdabb7b6258e6c47f537823", "keyword": "setCompressedSize KZipFileEntry::setCompressedSize KZipFileEntry", "text": ""}, {"type": "function", "name": "KZipFileEntry::setHeaderStart", "url": "classKZipFileEntry.html#afa03f8127ff0da1acb6f52056a8c5679", "keyword": "setHeaderStart KZipFileEntry::setHeaderStart KZipFileEntry", "text": ""}, {"type": "page", "name": "index", "url": "index.html", "keyword": null, "text": "KArchive Reading creating and manipulating file archives Introduction KArchive provides classes for easy reading creation and manipulation of formats like ZIP and TAR It also provides transparent compression and decompression of data like the GZip format via a subclass of QIODevice Usage If you want to read and write compressed data just create an instance of KCompressionDevice and write to or read from that If you want to read and write archive formats create an instance of the appropriate subclass of KArchive eg K7Zip for 7-Zip files You may need to combine this with usage of KCompressionDevice see the API documentation for the relevant KArchive subclass for details"}]}