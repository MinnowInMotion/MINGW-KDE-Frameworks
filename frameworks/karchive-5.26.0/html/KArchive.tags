<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="class">
    <name>K7Zip</name>
    <filename>classK7Zip.html</filename>
    <base>KArchive</base>
    <member kind="function">
      <type></type>
      <name>K7Zip</name>
      <anchorfile>classK7Zip.html</anchorfile>
      <anchor>ae631f40a58dcb35d4dddf75dec9f6e72</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>K7Zip</name>
      <anchorfile>classK7Zip.html</anchorfile>
      <anchor>a46251247fccaf4f1498fd356f08748dc</anchor>
      <arglist>(QIODevice *dev)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~K7Zip</name>
      <anchorfile>classK7Zip.html</anchorfile>
      <anchor>a8edd3e9789efbb90a974497551234698</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>closeArchive</name>
      <anchorfile>classK7Zip.html</anchorfile>
      <anchor>a44e7c936b5613c61729ee23b34f25d9a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doFinishWriting</name>
      <anchorfile>classK7Zip.html</anchorfile>
      <anchor>a34c6b2faa847ea99e08839ff186e75cc</anchor>
      <arglist>(qint64 size) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doPrepareWriting</name>
      <anchorfile>classK7Zip.html</anchorfile>
      <anchor>af5509064e8d15a5f879deb8e3c690164</anchor>
      <arglist>(const QString &amp;name, const QString &amp;user, const QString &amp;group, qint64 size, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doWriteDir</name>
      <anchorfile>classK7Zip.html</anchorfile>
      <anchor>a0ae007127015e6c87bfb6dfd11f4377f</anchor>
      <arglist>(const QString &amp;name, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doWriteSymLink</name>
      <anchorfile>classK7Zip.html</anchorfile>
      <anchor>a5a9a0325d0646630a2612bc157923cac</anchor>
      <arglist>(const QString &amp;name, const QString &amp;target, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>openArchive</name>
      <anchorfile>classK7Zip.html</anchorfile>
      <anchor>a390f17f49925c41c6997a4ebf83bdfd3</anchor>
      <arglist>(QIODevice::OpenMode mode) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>writeData</name>
      <anchorfile>classK7Zip.html</anchorfile>
      <anchor>aa83781241d632dd22c4f30cff68a42f8</anchor>
      <arglist>(const char *data, qint64 size) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KAr</name>
    <filename>classKAr.html</filename>
    <base>KArchive</base>
    <member kind="function">
      <type></type>
      <name>KAr</name>
      <anchorfile>classKAr.html</anchorfile>
      <anchor>a39d760ebc3bfdb6b640bd8db8661a605</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KAr</name>
      <anchorfile>classKAr.html</anchorfile>
      <anchor>ab7031223b09f587dd23ca571880fce42</anchor>
      <arglist>(QIODevice *dev)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KAr</name>
      <anchorfile>classKAr.html</anchorfile>
      <anchor>ae1779281eae030ab09dcc9d272ee8178</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>closeArchive</name>
      <anchorfile>classKAr.html</anchorfile>
      <anchor>abe954c7a9f94be4038255e056f2c1573</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doFinishWriting</name>
      <anchorfile>classKAr.html</anchorfile>
      <anchor>af0537ec98d8c4fcc9c04b689360a22d3</anchor>
      <arglist>(qint64 size) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doPrepareWriting</name>
      <anchorfile>classKAr.html</anchorfile>
      <anchor>ac2c892eda0beb9cc94d61ae0b9337755</anchor>
      <arglist>(const QString &amp;name, const QString &amp;user, const QString &amp;group, qint64 size, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doWriteDir</name>
      <anchorfile>classKAr.html</anchorfile>
      <anchor>acbe42c2c913f4b89e8a596c1dd78f312</anchor>
      <arglist>(const QString &amp;name, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doWriteSymLink</name>
      <anchorfile>classKAr.html</anchorfile>
      <anchor>a1f669857985f78d67e9d4e83666fd21e</anchor>
      <arglist>(const QString &amp;name, const QString &amp;target, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>openArchive</name>
      <anchorfile>classKAr.html</anchorfile>
      <anchor>a8d994e724271f25c34edfb2237d61399</anchor>
      <arglist>(QIODevice::OpenMode mode) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KArchive</name>
    <filename>classKArchive.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>addLocalDirectory</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>ab5a2f90d4003664127e744d078162c34</anchor>
      <arglist>(const QString &amp;path, const QString &amp;destName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addLocalFile</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a1e3b4d361c4b57fe8cb956a9b49a85e4</anchor>
      <arglist>(const QString &amp;fileName, const QString &amp;destName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>close</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a13fc5a093095ac0315e692e81aa4fce6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QIODevice *</type>
      <name>device</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a1126fb09ca2849da19372e62f9498a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const KArchiveDirectory *</type>
      <name>directory</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a687f8801e5eb0b6476ddd7821c31f627</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>fileName</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>adb8c517921d59a7f48f7090cbcf5efcc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>finishWriting</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a28478783281e5f729210ef7ecac9c225</anchor>
      <arglist>(qint64 size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>aec27152dc3cc0fa3df28daa8707d968d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QIODevice::OpenMode</type>
      <name>mode</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>ac4aa377c4f4fefe55f840aa6ffcb3400</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>open</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a5269559282e6cfe2c261ba059e32b66a</anchor>
      <arglist>(QIODevice::OpenMode mode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>prepareWriting</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a7e50420630c3bb44f617ad812b673332</anchor>
      <arglist>(const QString &amp;name, const QString &amp;user, const QString &amp;group, qint64 size, mode_t perm=0100644, const QDateTime &amp;atime=QDateTime(), const QDateTime &amp;mtime=QDateTime(), const QDateTime &amp;ctime=QDateTime())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>writeData</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>aa16180fff07f057fbcb4a23f4c3840dc</anchor>
      <arglist>(const char *data, qint64 size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeDir</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a8e8dad1251bf8b2303b677445dcb86c0</anchor>
      <arglist>(const QString &amp;name, const QString &amp;user=QString(), const QString &amp;group=QString(), mode_t perm=040755, const QDateTime &amp;atime=QDateTime(), const QDateTime &amp;mtime=QDateTime(), const QDateTime &amp;ctime=QDateTime())</arglist>
    </member>
    <member kind="function">
      <type>KARCHIVE_DEPRECATED bool</type>
      <name>writeFile</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>aa6cf0bf8afebd3681b62e52d417b20bf</anchor>
      <arglist>(const QString &amp;name, const QString &amp;user, const QString &amp;group, const char *data, qint64 size, mode_t perm=0100644, const QDateTime &amp;atime=QDateTime(), const QDateTime &amp;mtime=QDateTime(), const QDateTime &amp;ctime=QDateTime())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeFile</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>aeb615bb1d33578f57f69af2b1e72029d</anchor>
      <arglist>(const QString &amp;name, const QByteArray &amp;data, mode_t perm=0100644, const QString &amp;user=QString(), const QString &amp;group=QString(), const QDateTime &amp;atime=QDateTime(), const QDateTime &amp;mtime=QDateTime(), const QDateTime &amp;ctime=QDateTime())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeSymLink</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a5625944353172a5dbd229bf1a08d8a91</anchor>
      <arglist>(const QString &amp;name, const QString &amp;target, const QString &amp;user=QString(), const QString &amp;group=QString(), mode_t perm=0120755, const QDateTime &amp;atime=QDateTime(), const QDateTime &amp;mtime=QDateTime(), const QDateTime &amp;ctime=QDateTime())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>KArchive</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a4386c6e12dc034c0687aa8bb738bf25d</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>KArchive</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a3efbb71ada0630d90c5af53fedce9b19</anchor>
      <arglist>(QIODevice *dev)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>closeArchive</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a52fa0982c4acaf9dcca8df09749e99a0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>createDevice</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a13e286c61a775bb3a004e23ba5f1fa46</anchor>
      <arglist>(QIODevice::OpenMode mode)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>doFinishWriting</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a181381217cda7b1d32abd7422b3de4ff</anchor>
      <arglist>(qint64 size)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>doPrepareWriting</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a719ec1a1c62c015e993dee72ecb5fce7</anchor>
      <arglist>(const QString &amp;name, const QString &amp;user, const QString &amp;group, qint64 size, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>doWriteDir</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a4423297991d66579ea9fbf070f91ff48</anchor>
      <arglist>(const QString &amp;name, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>doWriteSymLink</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a4d818a6892534b4f559d3f4612a18dd5</anchor>
      <arglist>(const QString &amp;name, const QString &amp;target, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>KArchiveDirectory *</type>
      <name>findOrCreate</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>aa5dfd148c5c870da8a2330d0371e3d6e</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>openArchive</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a868eecf661cda9b0fd26b6c9a1319555</anchor>
      <arglist>(QIODevice::OpenMode mode)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual KArchiveDirectory *</type>
      <name>rootDir</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>a218da40618b5ea5623656d3dbf3d9ecc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setDevice</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>af39343456c9c458230546b64ffc66a31</anchor>
      <arglist>(QIODevice *dev)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setRootDir</name>
      <anchorfile>classKArchive.html</anchorfile>
      <anchor>ae12a8b556703e189b9e2ebc886a18319</anchor>
      <arglist>(KArchiveDirectory *rootDir)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KArchiveDirectory</name>
    <filename>classKArchiveDirectory.html</filename>
    <base>KArchiveEntry</base>
    <member kind="function">
      <type></type>
      <name>KArchiveDirectory</name>
      <anchorfile>classKArchiveDirectory.html</anchorfile>
      <anchor>a52719e2e8628d139f5454146cb9d41cb</anchor>
      <arglist>(KArchive *archive, const QString &amp;name, int access, const QDateTime &amp;date, const QString &amp;user, const QString &amp;group, const QString &amp;symlink)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEntry</name>
      <anchorfile>classKArchiveDirectory.html</anchorfile>
      <anchor>a0f5967950552c9e1fb6858fc1c627c19</anchor>
      <arglist>(KArchiveEntry *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copyTo</name>
      <anchorfile>classKArchiveDirectory.html</anchorfile>
      <anchor>a69a28476a3c50c9a12b214abf3d5a41a</anchor>
      <arglist>(const QString &amp;dest, bool recursive=true) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>entries</name>
      <anchorfile>classKArchiveDirectory.html</anchorfile>
      <anchor>a583309dbae0b387c7af46a4dad6dfeca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const KArchiveEntry *</type>
      <name>entry</name>
      <anchorfile>classKArchiveDirectory.html</anchorfile>
      <anchor>a837a73bc3eb3b297f2fc1f4a447c4528</anchor>
      <arglist>(const QString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>const KArchiveFile *</type>
      <name>file</name>
      <anchorfile>classKArchiveDirectory.html</anchorfile>
      <anchor>accb3aa3422fb1645adb9189f43fdf948</anchor>
      <arglist>(const QString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirectory</name>
      <anchorfile>classKArchiveDirectory.html</anchorfile>
      <anchor>ab0c1a491aed663a566f5cac4ddb3cea1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEntry</name>
      <anchorfile>classKArchiveDirectory.html</anchorfile>
      <anchor>a717ab9abd24a82779b38e981c4fc1f39</anchor>
      <arglist>(KArchiveEntry *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KArchiveEntry</name>
    <filename>classKArchiveEntry.html</filename>
    <member kind="function">
      <type></type>
      <name>KArchiveEntry</name>
      <anchorfile>classKArchiveEntry.html</anchorfile>
      <anchor>a5c0e3e538520cf9d05d4d3e12ae4594b</anchor>
      <arglist>(KArchive *archive, const QString &amp;name, int access, const QDateTime &amp;date, const QString &amp;user, const QString &amp;group, const QString &amp;symlink)</arglist>
    </member>
    <member kind="function">
      <type>QDateTime</type>
      <name>date</name>
      <anchorfile>classKArchiveEntry.html</anchorfile>
      <anchor>a5e2fd48f561980ecf22e6b69c91fc5e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>group</name>
      <anchorfile>classKArchiveEntry.html</anchorfile>
      <anchor>a6bb1dcb1549695273205c2f0068cb942</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDirectory</name>
      <anchorfile>classKArchiveEntry.html</anchorfile>
      <anchor>a519e4edcc7eaeebc1c813e7a4278ca5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isFile</name>
      <anchorfile>classKArchiveEntry.html</anchorfile>
      <anchor>adbd83295a865f1b305703cab0a3845ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classKArchiveEntry.html</anchorfile>
      <anchor>a7a3fb99efe15847ef6cb3766d3588fc7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>mode_t</type>
      <name>permissions</name>
      <anchorfile>classKArchiveEntry.html</anchorfile>
      <anchor>a2356d6ed02a40c7dae6e9101087c232d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>symLinkTarget</name>
      <anchorfile>classKArchiveEntry.html</anchorfile>
      <anchor>aa0e86e5f1fa8c993463f8dd1ae605d4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>user</name>
      <anchorfile>classKArchiveEntry.html</anchorfile>
      <anchor>a2c36d4e2b4f6ef3dc97cc0d69b7c910f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KArchiveFile</name>
    <filename>classKArchiveFile.html</filename>
    <base>KArchiveEntry</base>
    <member kind="function">
      <type></type>
      <name>KArchiveFile</name>
      <anchorfile>classKArchiveFile.html</anchorfile>
      <anchor>a0b5589f87f70f4b1a3922040d3b63111</anchor>
      <arglist>(KArchive *archive, const QString &amp;name, int access, const QDateTime &amp;date, const QString &amp;user, const QString &amp;group, const QString &amp;symlink, qint64 pos, qint64 size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KArchiveFile</name>
      <anchorfile>classKArchiveFile.html</anchorfile>
      <anchor>a562c9843552d8613c7c9567809f09b14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copyTo</name>
      <anchorfile>classKArchiveFile.html</anchorfile>
      <anchor>a0d25262342c7e71a4d13f578959dedae</anchor>
      <arglist>(const QString &amp;dest) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QIODevice *</type>
      <name>createDevice</name>
      <anchorfile>classKArchiveFile.html</anchorfile>
      <anchor>a3c5a708ab462bca4c8b6d64b655ef2fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QByteArray</type>
      <name>data</name>
      <anchorfile>classKArchiveFile.html</anchorfile>
      <anchor>a465733787b3f57f0773a239dfad646ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFile</name>
      <anchorfile>classKArchiveFile.html</anchorfile>
      <anchor>ab4e8989d6c9e363b60fd633224991307</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>position</name>
      <anchorfile>classKArchiveFile.html</anchorfile>
      <anchor>ab45ce3c099691954fefeffe773b742c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classKArchiveFile.html</anchorfile>
      <anchor>a46ab3c77fb21b1ca095ba4a155f7d47e</anchor>
      <arglist>(qint64 s)</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>size</name>
      <anchorfile>classKArchiveFile.html</anchorfile>
      <anchor>a2006219e1cb0503dbbf0bc96b1f9f80d</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCompressionDevice</name>
    <filename>classKCompressionDevice.html</filename>
    <member kind="function">
      <type></type>
      <name>KCompressionDevice</name>
      <anchorfile>classKCompressionDevice.html</anchorfile>
      <anchor>a19d90470f86e14433eb2f21a7135c856</anchor>
      <arglist>(QIODevice *inputDevice, bool autoDeleteInputDevice, CompressionType type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KCompressionDevice</name>
      <anchorfile>classKCompressionDevice.html</anchorfile>
      <anchor>a134baa7d6ad968471719755f58cea1e5</anchor>
      <arglist>(const QString &amp;fileName, CompressionType type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KCompressionDevice</name>
      <anchorfile>classKCompressionDevice.html</anchorfile>
      <anchor>abd7b288aaf15a0d791e62425f9b8c1cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classKCompressionDevice.html</anchorfile>
      <anchor>a984fa31855f47612817a22e5d25b4181</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>CompressionType</type>
      <name>compressionType</name>
      <anchorfile>classKCompressionDevice.html</anchorfile>
      <anchor>aa94e4dc51069e6b9fcf20ca3344bbd95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>open</name>
      <anchorfile>classKCompressionDevice.html</anchorfile>
      <anchor>ae40ec51fa25dfe0b8844d0cfc143ceb2</anchor>
      <arglist>(QIODevice::OpenMode mode) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>seek</name>
      <anchorfile>classKCompressionDevice.html</anchorfile>
      <anchor>a4d8ab175fe4cd856bebf20d412a172d6</anchor>
      <arglist>(qint64) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrigFileName</name>
      <anchorfile>classKCompressionDevice.html</anchorfile>
      <anchor>a16f277ab56f2d99aceffc698625a8254</anchor>
      <arglist>(const QByteArray &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSkipHeaders</name>
      <anchorfile>classKCompressionDevice.html</anchorfile>
      <anchor>ac798a1e99382a3bbb39da72bd80c9335</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KFilterBase *</type>
      <name>filterForCompressionType</name>
      <anchorfile>classKCompressionDevice.html</anchorfile>
      <anchor>a4146d38b19d20828cdd3327303757013</anchor>
      <arglist>(CompressionType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KFilterBase</name>
    <filename>classKFilterBase.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>FilterFlags</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>a6aea514aa95018abc98c7f4de711e70f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Result</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>a11c71b7d147daff9164114ef565d05a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Result</type>
      <name>compress</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>a9640e78ba2da5e4aa34e928b426e16b8</anchor>
      <arglist>(bool finish)=0</arglist>
    </member>
    <member kind="function">
      <type>QIODevice *</type>
      <name>device</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>acd8b6961025d56d47c735aba28254b44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>inBufferAvailable</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>acef9fa1b419198bde5f9d8a433d7cd8e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>inBufferEmpty</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>a9d71d8602e9ed2febbe73a55306fb874</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>init</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>a5957e0e8fb8a376f3011e05284b1cb70</anchor>
      <arglist>(int mode)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>mode</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>aea4a8777dfad1fb83e7785194b12b680</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>outBufferAvailable</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>a0a0bfb0a10281beeec6e2a2a65d32c22</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>outBufferFull</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>afe7142cc3bfa9893fad187dae5a87cfc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>readHeader</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>ad7b7580531a444442caf0daaaa27a283</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>aa94bcd1fbb4caff410c6eb3bec89d43c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDevice</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>ae0b5719aa1ebe3b43507f45828acfb31</anchor>
      <arglist>(QIODevice *dev, bool autodelete=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilterFlags</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>a741ff7aadcdad956684df276b690582b</anchor>
      <arglist>(FilterFlags flags)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setInBuffer</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>a332c5aba58f0c01f588de41bb337e15c</anchor>
      <arglist>(const char *data, uint size)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setOutBuffer</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>a5e284cc9076c690c5e0969e09ac0df1d</anchor>
      <arglist>(char *data, uint maxlen)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>terminate</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>a1d5fe556cdc03b2c48b0ec7f87c854a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Result</type>
      <name>uncompress</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>a6f29466c181fbf910a75b4775488b62e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>writeHeader</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>a7672777b39bdd42c5f2c7121fff34848</anchor>
      <arglist>(const QByteArray &amp;filename)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>virtual_hook</name>
      <anchorfile>classKFilterBase.html</anchorfile>
      <anchor>ac44636209bc81d9538a2d35ea238c8b4</anchor>
      <arglist>(int id, void *data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KFilterDev</name>
    <filename>classKFilterDev.html</filename>
    <base>KCompressionDevice</base>
    <member kind="function">
      <type></type>
      <name>KFilterDev</name>
      <anchorfile>classKFilterDev.html</anchorfile>
      <anchor>a7822f81287541a1952b04305273c9131</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CompressionType</type>
      <name>compressionTypeForMimeType</name>
      <anchorfile>classKFilterDev.html</anchorfile>
      <anchor>a32ffcfa2ce1245b70605dcf51f6271ae</anchor>
      <arglist>(const QString &amp;mimetype)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KARCHIVE_DEPRECATED KCompressionDevice *</type>
      <name>device</name>
      <anchorfile>classKFilterDev.html</anchorfile>
      <anchor>a15b5dc4093e405e8af6f021095464ee2</anchor>
      <arglist>(QIODevice *inDevice, const QString &amp;mimetype, bool autoDeleteInDevice=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KARCHIVE_DEPRECATED KCompressionDevice *</type>
      <name>deviceForFile</name>
      <anchorfile>classKFilterDev.html</anchorfile>
      <anchor>a4714ddacbcfe6d57702505f7e07da141</anchor>
      <arglist>(const QString &amp;fileName, const QString &amp;mimetype=QString(), bool forceFilter=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KGzipFilter</name>
    <filename>classKGzipFilter.html</filename>
    <base>KFilterBase</base>
    <member kind="function">
      <type>Result</type>
      <name>compress</name>
      <anchorfile>classKGzipFilter.html</anchorfile>
      <anchor>a520486c1186f574a65193553097c3dbe</anchor>
      <arglist>(bool finish) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>inBufferAvailable</name>
      <anchorfile>classKGzipFilter.html</anchorfile>
      <anchor>a68a8ae632b9709ffa6467db851ed68a3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classKGzipFilter.html</anchorfile>
      <anchor>af5d0a7474c9c282be010dda81849a61e</anchor>
      <arglist>(int mode) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mode</name>
      <anchorfile>classKGzipFilter.html</anchorfile>
      <anchor>ad41890576384ce05296ae8b78a1fa67d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>outBufferAvailable</name>
      <anchorfile>classKGzipFilter.html</anchorfile>
      <anchor>a99942744320d54d37c5d8cf0f66198a1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readHeader</name>
      <anchorfile>classKGzipFilter.html</anchorfile>
      <anchor>ac615dd80bb7432c7246aa17dab62fc9d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classKGzipFilter.html</anchorfile>
      <anchor>a3a1c571d4619bcf548a637a9ec67f7f6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInBuffer</name>
      <anchorfile>classKGzipFilter.html</anchorfile>
      <anchor>a3a00e0969d8897bbad9c7c463bf10103</anchor>
      <arglist>(const char *data, uint size) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutBuffer</name>
      <anchorfile>classKGzipFilter.html</anchorfile>
      <anchor>a95d31cb1fe78b3b481c1616cedf26eef</anchor>
      <arglist>(char *data, uint maxlen) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>terminate</name>
      <anchorfile>classKGzipFilter.html</anchorfile>
      <anchor>af297b127ab51424e3ef9d98fe38a0dae</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>uncompress</name>
      <anchorfile>classKGzipFilter.html</anchorfile>
      <anchor>affd1f648862b2256afc67711108267f4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeHeader</name>
      <anchorfile>classKGzipFilter.html</anchorfile>
      <anchor>a01aeb5d5d4587046554f71d498891bdc</anchor>
      <arglist>(const QByteArray &amp;fileName) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KNoneFilter</name>
    <filename>classKNoneFilter.html</filename>
    <base>KFilterBase</base>
    <member kind="function">
      <type>Result</type>
      <name>compress</name>
      <anchorfile>classKNoneFilter.html</anchorfile>
      <anchor>a23fed9b8d64772f104ff99eb14eb0a5d</anchor>
      <arglist>(bool finish) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>inBufferAvailable</name>
      <anchorfile>classKNoneFilter.html</anchorfile>
      <anchor>aaf73deb35698fcf7f9a58518b4e4f640</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classKNoneFilter.html</anchorfile>
      <anchor>ad743e6e718d11eab87f8064add0963a2</anchor>
      <arglist>(int mode) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mode</name>
      <anchorfile>classKNoneFilter.html</anchorfile>
      <anchor>a6d3b2bee8a45a8dc4959040049e218bd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>outBufferAvailable</name>
      <anchorfile>classKNoneFilter.html</anchorfile>
      <anchor>a48a941284ac2f3a49302f91d0817fda9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readHeader</name>
      <anchorfile>classKNoneFilter.html</anchorfile>
      <anchor>a5766a7a1652a1bbdc991987147b3deb0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classKNoneFilter.html</anchorfile>
      <anchor>aa5cca124200a3fbfca71985a4749984b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInBuffer</name>
      <anchorfile>classKNoneFilter.html</anchorfile>
      <anchor>a1c0d5e488f5fcd64427e20585f303de7</anchor>
      <arglist>(const char *data, uint size) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutBuffer</name>
      <anchorfile>classKNoneFilter.html</anchorfile>
      <anchor>a987e75f011fefa9e6f9c853d639ab6d3</anchor>
      <arglist>(char *data, uint maxlen) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>terminate</name>
      <anchorfile>classKNoneFilter.html</anchorfile>
      <anchor>a59d5e9a685bc75c9281ecab937fc9eb0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>uncompress</name>
      <anchorfile>classKNoneFilter.html</anchorfile>
      <anchor>a610bbb553b9df07f4509f4cac64a5be9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeHeader</name>
      <anchorfile>classKNoneFilter.html</anchorfile>
      <anchor>a3ab10cd2b95428d3c904c1e07e5dec47</anchor>
      <arglist>(const QByteArray &amp;fileName) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KRcc</name>
    <filename>classKRcc.html</filename>
    <base>KArchive</base>
    <member kind="function">
      <type></type>
      <name>KRcc</name>
      <anchorfile>classKRcc.html</anchorfile>
      <anchor>a7882b7b0e86c126a611144757fc862e2</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KRcc</name>
      <anchorfile>classKRcc.html</anchorfile>
      <anchor>ae7a9778c8a99c75e6bf5c6b542c77342</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>closeArchive</name>
      <anchorfile>classKRcc.html</anchorfile>
      <anchor>a7d32b3a4e283ba7a66d30c76069c3f33</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doFinishWriting</name>
      <anchorfile>classKRcc.html</anchorfile>
      <anchor>a4f34239a914071605e4a8b3a67a59c85</anchor>
      <arglist>(qint64 size) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doPrepareWriting</name>
      <anchorfile>classKRcc.html</anchorfile>
      <anchor>a9568adce115ae3efacc4d6c3928d0aaf</anchor>
      <arglist>(const QString &amp;name, const QString &amp;user, const QString &amp;group, qint64 size, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doWriteDir</name>
      <anchorfile>classKRcc.html</anchorfile>
      <anchor>a01d52e7e4b887813507382a870d66e0b</anchor>
      <arglist>(const QString &amp;name, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doWriteSymLink</name>
      <anchorfile>classKRcc.html</anchorfile>
      <anchor>a8822cbee0507ca869254b2b18c32f17d</anchor>
      <arglist>(const QString &amp;name, const QString &amp;target, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>openArchive</name>
      <anchorfile>classKRcc.html</anchorfile>
      <anchor>a99aa0df3a18ec989d3633549a2e95368</anchor>
      <arglist>(QIODevice::OpenMode mode) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KTar</name>
    <filename>classKTar.html</filename>
    <base>KArchive</base>
    <member kind="function">
      <type></type>
      <name>KTar</name>
      <anchorfile>classKTar.html</anchorfile>
      <anchor>a44b9ab8fd30f0c7ffcf6a4a5c8f2443a</anchor>
      <arglist>(const QString &amp;filename, const QString &amp;mimetype=QString())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KTar</name>
      <anchorfile>classKTar.html</anchorfile>
      <anchor>a93e7ce44e3438619e7cfb91bc879f688</anchor>
      <arglist>(QIODevice *dev)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KTar</name>
      <anchorfile>classKTar.html</anchorfile>
      <anchor>a8388c1acf8491f32ea04a9bc298f2d36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrigFileName</name>
      <anchorfile>classKTar.html</anchorfile>
      <anchor>a6f104d8a72f38fcc1f5984a7f40a4d59</anchor>
      <arglist>(const QByteArray &amp;fileName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>closeArchive</name>
      <anchorfile>classKTar.html</anchorfile>
      <anchor>a963f2c3fc94e0a44c1f24846a8db7a20</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>createDevice</name>
      <anchorfile>classKTar.html</anchorfile>
      <anchor>a595e1d5daed28aa53a185f260ce8b629</anchor>
      <arglist>(QIODevice::OpenMode mode) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doFinishWriting</name>
      <anchorfile>classKTar.html</anchorfile>
      <anchor>a3402a798f13eb00692901885c66b503c</anchor>
      <arglist>(qint64 size) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doPrepareWriting</name>
      <anchorfile>classKTar.html</anchorfile>
      <anchor>ac83bfdbafb791894f791e33e3f5e48b7</anchor>
      <arglist>(const QString &amp;name, const QString &amp;user, const QString &amp;group, qint64 size, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doWriteDir</name>
      <anchorfile>classKTar.html</anchorfile>
      <anchor>ab7e296bf9ad349e68b00b3a5755b0bcd</anchor>
      <arglist>(const QString &amp;name, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doWriteSymLink</name>
      <anchorfile>classKTar.html</anchorfile>
      <anchor>a397a1617c71924cb2bc57122d409f4bd</anchor>
      <arglist>(const QString &amp;name, const QString &amp;target, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>openArchive</name>
      <anchorfile>classKTar.html</anchorfile>
      <anchor>a85ce841ac81b8dbce228e152cda5d555</anchor>
      <arglist>(QIODevice::OpenMode mode) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KZip</name>
    <filename>classKZip.html</filename>
    <base>KArchive</base>
    <member kind="enumeration">
      <type></type>
      <name>Compression</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>ab0654dff75d0f8747b0d90ad39bc2ace</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoCompression</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>ab0654dff75d0f8747b0d90ad39bc2aceabf73c42b9987176459a29f393baf4e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DeflateCompression</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>ab0654dff75d0f8747b0d90ad39bc2acea4a8ddbf17f28e126c1e5a297876ada80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DeflateCompression</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>ab0654dff75d0f8747b0d90ad39bc2acea4a8ddbf17f28e126c1e5a297876ada80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ExtraField</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>a3b1610ecac186076da3f424b6103ff04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoExtraField</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>a3b1610ecac186076da3f424b6103ff04ad5e053e8f68fe61489583558268ed660</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ModificationTime</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>a3b1610ecac186076da3f424b6103ff04a7b5b655b17f10dfe213d3b2323e601a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ModificationTime</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>a3b1610ecac186076da3f424b6103ff04a7b5b655b17f10dfe213d3b2323e601a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoCompression</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>ab0654dff75d0f8747b0d90ad39bc2aceabf73c42b9987176459a29f393baf4e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoExtraField</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>a3b1610ecac186076da3f424b6103ff04ad5e053e8f68fe61489583558268ed660</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KZip</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>a62f0a5753d4ef02f5611b1f8dd7caf50</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KZip</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>a4e07b57c827771e453a9aa3f6df2102b</anchor>
      <arglist>(QIODevice *dev)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KZip</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>a895868321e479a01525fd8a8e9714525</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Compression</type>
      <name>compression</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>ab525eff29d4425a3bd4230dcde5c8031</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ExtraField</type>
      <name>extraField</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>aff9413e15927d39a63fcccf5ca8da504</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCompression</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>a286095b519b20b3a82449f7b5b50e039</anchor>
      <arglist>(Compression c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtraField</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>a5e9a9365ce56a6d1124be7ee8fae360d</anchor>
      <arglist>(ExtraField ef)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeData</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>aaa3425245096f000f5a82d5e572ce4f9</anchor>
      <arglist>(const char *data, qint64 size) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>closeArchive</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>a8b732f0df8e83658cabb7eff226941c8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doFinishWriting</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>a779b54eddb092d2e97503a276b9fddfc</anchor>
      <arglist>(qint64 size) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doPrepareWriting</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>a5c41f2268fe0ab47b463ea41b9dc4d71</anchor>
      <arglist>(const QString &amp;name, const QString &amp;user, const QString &amp;group, qint64 size, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;creationTime) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doWriteDir</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>a1c872c7826c50ccd5b9fc6247dab3923</anchor>
      <arglist>(const QString &amp;name, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>doWriteSymLink</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>ace30d108e4428e06f33fa7c26eae4cc1</anchor>
      <arglist>(const QString &amp;name, const QString &amp;target, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>openArchive</name>
      <anchorfile>classKZip.html</anchorfile>
      <anchor>a18c321438e2c8f44c5e2dcf69fbdbc5a</anchor>
      <arglist>(QIODevice::OpenMode mode) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KZipFileEntry</name>
    <filename>classKZipFileEntry.html</filename>
    <base>KArchiveFile</base>
    <member kind="function">
      <type></type>
      <name>KZipFileEntry</name>
      <anchorfile>classKZipFileEntry.html</anchorfile>
      <anchor>a033d81c2d025339f668b3155277e7657</anchor>
      <arglist>(KZip *zip, const QString &amp;name, int access, const QDateTime &amp;date, const QString &amp;user, const QString &amp;group, const QString &amp;symlink, const QString &amp;path, qint64 start, qint64 uncompressedSize, int encoding, qint64 compressedSize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KZipFileEntry</name>
      <anchorfile>classKZipFileEntry.html</anchorfile>
      <anchor>afcc1fa146426aa46ce1d2bd716bc40db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>crc32</name>
      <anchorfile>classKZipFileEntry.html</anchorfile>
      <anchor>a6a298ae6d8c2ef6db7e31b04d6a10162</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QIODevice *</type>
      <name>createDevice</name>
      <anchorfile>classKZipFileEntry.html</anchorfile>
      <anchor>a7b6664ddcb866653788e03ed9b59c28f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>data</name>
      <anchorfile>classKZipFileEntry.html</anchorfile>
      <anchor>ab51e1c6ece127c3140318389cd4293be</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>path</name>
      <anchorfile>classKZipFileEntry.html</anchorfile>
      <anchor>a6c69b7a8e5d55d44c0261fcb14f35173</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCompressedSize</name>
      <anchorfile>classKZipFileEntry.html</anchorfile>
      <anchor>a32ce307aacdabb7b6258e6c47f537823</anchor>
      <arglist>(qint64 compressedSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeaderStart</name>
      <anchorfile>classKZipFileEntry.html</anchorfile>
      <anchor>afa03f8127ff0da1acb6f52056a8c5679</anchor>
      <arglist>(qint64 headerstart)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>KArchive</title>
    <filename>index</filename>
  </compound>
</tagfile>
