<?xml version="1.0" encoding="UTF-8"?>
<add>
  <doc>
    <field name="type">source</field>
    <field name="name">k7zip.cpp</field>
    <field name="url">k7zip_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">k7zip_signature HeaderType kEnd kHeader kArchiveProperties kAdditionalStreamsInfo kMainStreamsInfo kFilesInfo kPackInfo kUnpackInfo kSubStreamsInfo kSize kCRC kFolder kCodersUnpackSize kNumUnpackStream kEmptyStream kEmptyFile kAnti kName kCTime kATime kMTime kAttributes kComment kEncodedHeader kStartPos kDummy quint64 k_LZMA2 quint64 k_LZMA quint64 k_BCJ quint64 k_BCJ2 quint64 k_PPMD quint64 k_BZip2 quint64 k_AES KARCHIVE_EXPORT K7ZipFileEntry KArchiveFile K7ZipFileEntry K7Zip zip QString name access QDateTime date QString user QString group QString symlink qint64 pos qint64 size QByteArray data K7ZipFileEntry QByteArray data const Q_DECL_OVERRIDE QIODevice createDevice const Q_DECL_OVERRIDE private const QByteArray m_data QBuffer m_buffer K7ZipFileEntry K7ZipFileEntry K7Zip zip const QString name access const QDateTime date const QString user const QString group const QString symlink qint64 pos qint64 size const QByteArray data KArchiveFile zip name access date user group symlink pos size m_data data m_buffer new QBuffer m_buffer setData m_data m_buffer open QIODevice::ReadOnly K7ZipFileEntry::~K7ZipFileEntry m_buffer QByteArray K7ZipFileEntry::data m_data mid position size QIODevice K7ZipFileEntry::createDevice KLimitedIODevice m_buffer position size FileInfo FileInfo size attributes crc attribDefined false crcDefined false hasStream false isDir false QString path quint64 size quint32 attributes quint32 crc attribDefined crcDefined hasStream isDir Folder FolderInfo FolderInfo numInStreams numOutStreams methodID isSimpleCoder numInStreams numOutStreams numInStreams numOutStreams QVector&lt;unsigned char&gt; properties quint64 methodID Folder unpackCRCDefined false unpackCRC Folder qDeleteAll folderInfos Q_DISABLE_COPY Folder quint64 getUnpackSize unpackSizes isEmpty i unpackSizes size i i findBindPairForOutStream i unpackSizes at i getNumOutStreams result i i folderInfos size i result folderInfos at i numOutStreams result quint32 getCoderInStreamIndex quint32 coderIndex quint32 streamIndex quint32 i i coderIndex i streamIndex folderInfos at i numInStreams streamIndex quint32 getCoderOutStreamIndex quint32 coderIndex quint32 streamIndex quint32 i i coderIndex i streamIndex folderInfos at i numOutStreams streamIndex findBindPairForInStream inStreamIndex i i inIndexes size i inIndexes i inStreamIndex i findBindPairForOutStream outStreamIndex i i outIndexes size i outIndexes i outStreamIndex i findPackStreamArrayIndex inStreamIndex i i packedStreams size i packedStreams i inStreamIndex i findInStream quint32 streamIndex quint32 coderIndex quint32 coderStreamIndex coderIndex coderIndex quint32 folderInfos size coderIndex quint32 curSize folderInfos coderIndex numInStreams streamIndex curSize coderStreamIndex streamIndex streamIndex curSize findOutStream quint32 streamIndex quint32 coderIndex quint32 coderStreamIndex coderIndex coderIndex quint32 folderInfos size coderIndex quint32 curSize folderInfos coderIndex numOutStreams streamIndex curSize coderStreamIndex streamIndex streamIndex curSize isEncrypted i folderInfos size i i folderInfos at i methodID k_AES unpackCRCDefined quint32 unpackCRC QVector&lt;FolderInfo *&gt; folderInfos QVector&lt;quint64&gt; inIndexes QVector&lt;quint64&gt; outIndexes QVector&lt;quint64&gt; packedStreams QVector&lt;quint64&gt; unpackSizes K7Zip::K7ZipPrivate K7ZipPrivate K7Zip parent q parent packPos numPackStreams buffer pos end headerSize countSize m_currentFile K7ZipPrivate qDeleteAll folders qDeleteAll fileInfos K7Zip q QVector&lt;bool&gt; packCRCsDefined QVector&lt;quint32&gt; packCRCs QVector&lt;quint64&gt; numUnpackStreamsInFolders QVector&lt;Folder *&gt; folders QVector&lt;FileInfo *&gt; fileInfos QVector&lt;bool&gt; cTimesDefined QVector&lt;quint64&gt; cTimes QVector&lt;bool&gt; aTimesDefined QVector&lt;quint64&gt; aTimes QVector&lt;bool&gt; mTimesDefined QVector&lt;quint64&gt; mTimes QVector&lt;bool&gt; startPositionsDefined QVector&lt;quint64&gt; startPositions QVector&lt;int&gt; fileInfoPopIDs quint64 packPos quint64 numPackStreams QVector&lt;quint64&gt; packSizes QVector&lt;quint64&gt; unpackSizes QVector&lt;bool&gt; digestsDefined QVector&lt;quint32&gt; digests QVector&lt;bool&gt; isAnti buffer quint64 pos quint64 end quint64 headerSize quint64 countSize QByteArray header QByteArray outData K7ZipFileEntry m_currentFile QVector&lt;KArchiveEntry *&gt; m_entryList clear packCRCsDefined clear packCRCs clear numUnpackStreamsInFolders clear qDeleteAll folders folders clear qDeleteAll fileInfos fileInfos clear cTimesDefined clear cTimes clear aTimesDefined clear aTimes clear mTimesDefined clear mTimes clear startPositionsDefined clear startPositions clear fileInfoPopIDs clear packSizes clear unpackSizes clear digestsDefined clear digests clear isAnti clear buffer pos end headerSize countSize readByte quint32 readUInt32 quint64 readUInt64 quint64 readNumber QString readString readHashDigests numItems QVector&lt;bool&gt; digestsDefined QVector&lt;quint32&gt; digests readBoolVector numItems QVector&lt;bool&gt; v readBoolVector2 numItems QVector&lt;bool&gt; v skipData size findAttribute attribute readUInt64DefVector numFiles QVector&lt;quint64&gt; values QVector&lt;bool&gt; defined Folder folderItem readMainStreamsInfo readPackInfo readUnpackInfo readSubStreamsInfo QByteArray readAndDecodePackedStreams readMainStreamInfo createItemsFromEntities KArchiveDirectory QString QByteArray writeByte b writeNumber quint64 value writeBoolVector QVector&lt;bool&gt; boolVector writeUInt32 quint32 value writeUInt64 quint64 value writeHashDigests QVector&lt;bool&gt; digestsDefined QVector&lt;quint32&gt; digests writeAlignedBoolHeader QVector&lt;bool&gt; v numDefined type itemSize writeUInt64DefVector QVector&lt;quint64&gt; v QVector&lt;bool&gt; defined type writeFolder Folder folder writePackInfo quint64 dataOffset QVector&lt;quint64&gt; packedSizes QVector&lt;bool&gt; packedCRCsDefined QVector&lt;quint32&gt; packedCRCs writeUnpackInfo QVector&lt;Folder *&gt; folderItems writeSubStreamsInfo QVector&lt;quint64&gt; unpackSizes QVector&lt;bool&gt; digestsDefined QVector&lt;quint32&gt; digests writeHeader quint64 headerOffset writeSignature writeStartHeader quint64 nextHeaderSize quint32 nextHeaderCRC quint64 nextHeaderOffset QByteArray encodeStream QVector&lt;quint64&gt; packSizes QVector&lt;Folder *&gt; folds</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">k7zip.cpp</field>
    <field name="url">k7zip_8cpp_source.html#l00533</field>
    <field name="keywords"></field>
    <field name="text">K7Zip::K7Zip QString fileName KArchive fileName d new K7ZipPrivate this</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">k7zip.cpp</field>
    <field name="url">k7zip_8cpp_source.html#l00539</field>
    <field name="keywords"></field>
    <field name="text">K7Zip::K7Zip QIODevice dev KArchive dev d new K7ZipPrivate this Q_ASSERT dev</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">k7zip.cpp</field>
    <field name="url">k7zip_8cpp_source.html#l00546</field>
    <field name="keywords"></field>
    <field name="text">K7Zip::~K7Zip isOpen close d K7Zip::K7ZipPrivate::readByte buffer pos end buffer pos quint32 K7Zip::K7ZipPrivate::readUInt32 buffer quint64 pos end qDebug quint32 res GetUi32 buffer pos pos res quint64 K7Zip::K7ZipPrivate::readUInt64 buffer quint64 pos end qDebug quint64 res GetUi64 buffer pos pos res quint64 K7Zip::K7ZipPrivate::readNumber buffer quint64 pos end firstByte buffer pos mask quint64 value i i i firstByte mask quint64 highPart firstByte mask value highPart i value value char buffer pos i mask value QString K7Zip::K7ZipPrivate::readString buffer QString buf buffer pos rem end pos i i i rem i buf i buf i i rem qDebug QString rem i len int rem len len rem qDebug QString QString p i i len i buf p wchar_t GetUi16 buf pos rem p K7Zip::K7ZipPrivate::skipData size buffer pos size end pos size K7Zip::K7ZipPrivate::findAttribute attribute buffer type readByte type attribute type kEnd skipData readNumber K7Zip::K7ZipPrivate::readBoolVector numItems QVector&lt;bool&gt; v buffer b mask i i numItems i mask b readByte mask v append b mask mask K7Zip::K7ZipPrivate::readBoolVector2 numItems QVector&lt;bool&gt; v buffer allAreDefined readByte allAreDefined readBoolVector numItems v i i numItems i v append K7Zip::K7ZipPrivate::readHashDigests numItems QVector&lt;bool&gt; digestsDefined QVector&lt;quint32&gt; digests buffer readBoolVector2 numItems digestsDefined i i numItems i quint32 crc digestsDefined i crc GetUi32 buffer pos pos digests append crc Folder K7Zip::K7ZipPrivate::folderItem buffer Folder folder Folder numCoders readNumber quint64 numInStreamsTotal quint64 numOutStreamsTotal i i numCoders i coderInfo readByte codecIdSize coderInfo codecIdSize qDebug folder Folder::FolderInfo info Folder::FolderInfo std::unique_ptr&lt;unsigned char[]&gt; codecID codecIdSize i i codecIdSize i codecID i readByte j j codecIdSize j codecID codecIdSize j j info methodID id coderInfo x10 info numInStreams readNumber info numOutStreams readNumber info numInStreams info numOutStreams coderInfo x20 propertiesSize readNumber i i propertiesSize i info properties append readByte coderInfo x80 qDebug info folder numInStreamsTotal info numInStreams numOutStreamsTotal info numOutStreams folder folderInfos append info numBindPairs numOutStreamsTotal i i numBindPairs i folder inIndexes append readNumber folder outIndexes append readNumber numPackedStreams numInStreamsTotal numBindPairs numPackedStreams i i numPackedStreams i folder packedStreams append readNumber numPackedStreams quint64 i i numInStreamsTotal i folder findBindPairForInStream i folder packedStreams append i folder packedStreams size folder folder K7Zip::K7ZipPrivate::readUInt64DefVector numFiles QVector&lt;quint64&gt; values QVector&lt;bool&gt; defined buffer readBoolVector2 numFiles defined external readByte external dataIndex readNumber dataIndex &lt; 0 /*|| dataIndex &gt; dataVector Size qDebug i i numFiles i quint64 t defined i t readUInt64 values append t K7Zip::K7ZipPrivate::readPackInfo buffer packPos readNumber numPackStreams readNumber packSizes clear packCRCsDefined clear packCRCs clear findAttribute kSize qDebug quint64 i i numPackStreams i packSizes append readNumber type type readByte type kEnd type kCRC readHashDigests numPackStreams packCRCsDefined packCRCs skipData readNumber packCRCs isEmpty quint64 i i numPackStreams i packCRCsDefined append packCRCs append K7Zip::K7ZipPrivate::readUnpackInfo buffer findAttribute kFolder qDebug numFolders readNumber qDeleteAll folders folders clear external readByte external i i numFolders i folders append folderItem dataIndex readNumber dataIndex &lt; 0 /*|| dataIndex &gt; dataVector Size qDebug qDebug findAttribute kCodersUnpackSize qDebug i i numFolders i Folder folder folders at i numOutStreams folder getNumOutStreams j j numOutStreams j folder unpackSizes append readNumber type readByte type kEnd type kCRC QVector&lt;bool&gt; crcsDefined QVector&lt;quint32&gt; crcs readHashDigests numFolders crcsDefined crcs i i numFolders i Folder folder folders at i folder unpackCRCDefined crcsDefined i folder unpackCRC crcs i skipData readNumber K7Zip::K7ZipPrivate::readSubStreamsInfo buffer numUnpackStreamsInFolders clear type type readByte type kNumUnpackStream i i folders size i numUnpackStreamsInFolders append readNumber type kCRC type kSize type kEnd skipData readNumber numUnpackStreamsInFolders isEmpty i i folders size i numUnpackStreamsInFolders append i i numUnpackStreamsInFolders size i quint64 numSubstreams numUnpackStreamsInFolders at i numSubstreams quint64 sum quint64 j j numSubstreams j type kSize size readNumber unpackSizes append size sum size unpackSizes append folders at i getUnpackSize sum type kSize type readByte numDigests numDigestsTotal i i folders size i quint64 numSubstreams numUnpackStreamsInFolders at i numSubstreams folders at i unpackCRCDefined numDigests numSubstreams numDigestsTotal numSubstreams type kCRC QVector&lt;bool&gt; digestsDefined2 QVector&lt;quint32&gt; digests2 readHashDigests numDigests digestsDefined2 digests2 digestIndex i i folders size i quint64 numSubstreams numUnpackStreamsInFolders at i Folder folder folders at i numSubstreams folder unpackCRCDefined digestsDefined append digests append folder unpackCRC quint64 j j numSubstreams j digestIndex digestsDefined append digestsDefined2 digestIndex digests append digests2 digestIndex type kEnd digestsDefined isEmpty i i numDigestsTotal i digestsDefined append digests append skipData readNumber type readByte uint toTimeT liTime time liTime TICKSPERSEC days time SECSPERDAY secondsInDay time SECSPERDAY hour short secondsInDay SECSPERHOUR secondsInDay secondsInDay SECSPERHOUR minute short secondsInDay SECSPERMIN second short secondsInDay SECSPERMIN cleaps days DAYSPERQUADRICENTENNIUM days cleaps years days DAYSPERNORMALQUADRENNIUM yearday days years DAYSPERNORMALQUADRENNIUM months yearday month year months month short months year short years month short months year short years day short yearday months QDateTime t QDate year month day QTime hour minute second t setTimeSpec Qt::UTC t toTime_t rtlSecondsSince1970ToSpecTime quint32 seconds secs seconds long TICKSPERSEC TICKS_1601_TO_1970 secs K7Zip::K7ZipPrivate::readMainStreamsInfo buffer quint32 type type readByte type quint32 qDebug type kEnd kPackInfo readPackInfo qDebug kUnpackInfo readUnpackInfo qDebug kSubStreamsInfo readSubStreamsInfo qDebug qDebug qDebug getInStream Folder folder quint32 streamIndex seqInStream quint32 coderIndex i i folder packedStreams size i folder packedStreams i streamIndex seqInStream i binderIndex folder findBindPairForInStream streamIndex binderIndex quint32 coderStreamIndex folder findOutStream folder outIndexes binderIndex coderIndex coderStreamIndex quint32 startIndex folder getCoderInStreamIndex coderIndex folder folderInfos coderIndex numInStreams i i int folder folderInfos coderIndex numInStreams i getInStream folder startIndex i seqInStream coderIndex getOutStream Folder folder quint32 streamIndex seqOutStream QVector&lt;quint32&gt; outStreams quint32 outStreamIndex i i folder folderInfos size i Folder::FolderInfo coderInfo folder folderInfos at i j j coderInfo numOutStreams j outStreamIndex folder findBindPairForOutStream outStreamIndex outStreams append outStreamIndex i i outStreams size i outStreams i streamIndex seqOutStream i binderIndex folder findBindPairForOutStream streamIndex binderIndex quint32 coderIndex coderStreamIndex folder findInStream folder inIndexes binderIndex coderIndex coderStreamIndex quint32 startIndex folder getCoderOutStreamIndex coderIndex folder folderInfos coderIndex numOutStreams i i int folder folderInfos coderIndex numOutStreams i getOutStream folder startIndex i seqOutStream kNumTopBits quint32 kTopValue kNumTopBits RangeDecoder pos QByteArray stream quint32 range quint32 code RangeDecoder pos readByte stream pos normalize range kTopValue code code readByte range setStream QByteArray s stream s init code range i i i code code readByte quint32 getThreshold quint32 total code range total decode quint32 start quint32 size code start range range size normalize quint32 decodeDirectBits numTotalBits quint32 r range quint32 c code quint32 result i numTotalBits i i r quint32 t c r c r t result result t r kTopValue c c readByte r range r code c result quint32 DecodeBit quint32 size0 quint32 numTotalBits quint32 newBound range numTotalBits size0 quint32 symbol code newBound symbol range newBound symbol code newBound range newBound normalize symbol kNumBitModelTotalBits quint32 kBitModelTotal kNumBitModelTotalBits CBitModel quint32 prob updateModel quint32 symbol symbol prob kBitModelTotal prob numMoveBits prob prob numMoveBits init prob kBitModelTotal CBitDecoder CBitModel quint32 decode RangeDecoder decoder quint32 newBound decoder range kNumBitModelTotalBits prob decoder code newBound decoder range newBound prob kBitModelTotal prob numMoveBits decoder range kTopValue decoder code decoder code decoder readByte decoder range decoder range newBound decoder code newBound prob prob numMoveBits decoder range kTopValue decoder code decoder code decoder readByte decoder range isJcc b0 b1 b0 x0F b1 xF0 x80 isJ b0 b1 b1 xFE xE8 isJcc b0 b1 getIndex b0 b1 b1 xE8 b0 b1 xE9 kNumMoveBits QByteArray decodeBCJ2 QByteArray mainStream QByteArray callStream QByteArray jumpStream QByteArray rangeBuffer prevByte QByteArray outStream mainStreamPos callStreamPos jumpStreamPos RangeDecoder rangeDecoder rangeDecoder setStream rangeBuffer rangeDecoder init QVector&lt;CBitDecoder&lt;kNumMoveBits&gt; statusDecoder i i i statusDecoder i init quint32 i b quint32 kBurstSize i i kBurstSize i mainStreamPos mainStream size outStream b mainStream mainStreamPos outStream append b isJ prevByte b prevByte b i kBurstSize index getIndex prevByte b statusDecoder index decode rangeDecoder quint32 src i i i b0 b xE8 b0 callStream callStreamPos b0 jumpStream jumpStreamPos src src quint32 b0 quint32 dest src quint32 outStream size outStream append dest outStream append dest outStream append dest outStream append dest prevByte char dest prevByte b QByteArray K7Zip::K7ZipPrivate::readAndDecodePackedStreams readMainStreamInfo buffer QByteArray readMainStreamInfo readMainStreamsInfo QByteArray inflatedData quint64 startPos packPos i i folders size i Folder folder folders at i quint64 unpackSize64 folder getUnpackSize unpackSize size_t unpackSize64 unpackSize unpackSize64 qDebug inflatedData quint32 mainCoderIndex QVector&lt;int&gt; outStreamIndexed outStreamIndex j j folder folderInfos size j Folder::FolderInfo info folder folderInfos j k k info numOutStreams k outStreamIndex folder findBindPairForOutStream outStreamIndex outStreamIndexed append outStreamIndex quint32 temp outStreamIndexed isEmpty folder findOutStream outStreamIndexed mainCoderIndex temp quint32 startInIndex folder getCoderInStreamIndex mainCoderIndex quint32 startOutIndex folder getCoderOutStreamIndex mainCoderIndex Folder::FolderInfo mainCoder folder folderInfos mainCoderIndex QVector&lt;int&gt; seqInStreams QVector&lt;quint32&gt; coderIndexes seqInStreams reserve mainCoder numInStreams coderIndexes reserve mainCoder numInStreams j j int mainCoder numInStreams j seqInStream quint32 coderIndex getInStream folder startInIndex j seqInStream coderIndex seqInStreams append seqInStream coderIndexes append coderIndex QVector&lt;int&gt; seqOutStreams seqOutStreams reserve mainCoder numOutStreams j j int mainCoder numOutStreams j seqOutStream getOutStream folder startOutIndex j seqOutStream seqOutStreams append seqOutStream QVector&lt;QByteArray&gt; datas j j int mainCoder numInStreams j size packSizes j i std::unique_ptr&lt;char[]&gt; encodedBuffer size QIODevice dev q device dev seek startPos quint64 n dev read encodedBuffer get size n quint64 size qDebug size n inflatedData QByteArray deflatedData encodedBuffer get size datas append deflatedData startPos size pos size headerSize size QVector&lt;QByteArray&gt; inflatedDatas QByteArray deflatedData j j seqInStreams size j Folder::FolderInfo coder quint32 j mainCoderIndex coder folder folderInfos coderIndexes j coder folder folderInfos mainCoderIndex deflatedData datas seqInStreams j KFilterBase filter coder methodID k_LZMA filter KCompressionDevice::filterForCompressionType KCompressionDevice::Xz filter qDebug QByteArray KXzFilter filter init QIODevice::ReadOnly KXzFilter::LZMA coder properties k_LZMA2 filter KCompressionDevice::filterForCompressionType KCompressionDevice::Xz filter qDebug QByteArray KXzFilter filter init QIODevice::ReadOnly KXzFilter::LZMA2 coder properties k_PPMD k_AES coder properties size k_BCJ filter KCompressionDevice::filterForCompressionType KCompressionDevice::Xz filter qDebug QByteArray KXzFilter filter init QIODevice::ReadOnly KXzFilter::BCJ coder properties k_BCJ2 QByteArray bcj2 decodeBCJ2 inflatedDatas inflatedDatas inflatedDatas deflatedData inflatedDatas clear inflatedDatas append bcj2 k_BZip2 filter KCompressionDevice::filterForCompressionType KCompressionDevice::BZip2 filter qDebug QByteArray filter init QIODevice::ReadOnly coder methodID k_BCJ2 filter QByteArray filter setInBuffer deflatedData data deflatedData size QByteArray outBuffer outBuffer resize unpackSize KFilterBase::Result result KFilterBase::Ok QByteArray inflatedDataTmp result KFilterBase::End result KFilterBase::Error filter inBufferEmpty filter setOutBuffer outBuffer data outBuffer size result filter uncompress result KFilterBase::Error qDebug QByteArray uncompressedBytes outBuffer size filter outBufferAvailable inflatedDataTmp append outBuffer data uncompressedBytes result KFilterBase::End result KFilterBase::End filter inBufferEmpty qDebug result filter QByteArray filter terminate filter inflatedDatas append inflatedDataTmp QByteArray inflated Q_FOREACH QByteArray data inflatedDatas inflated append data inflatedDatas clear folder unpackCRCDefined quint32 crc crc32 Bytef inflated data unpackSize crc folder unpackCRC qDebug QByteArray inflatedData append inflated inflatedData K7Zip::K7ZipPrivate::createItemsFromEntities KArchiveDirectory dir QString path QByteArray data QStringList l dir entries QStringList::ConstIterator it l begin it l end it KArchiveEntry entry dir entry it FileInfo fileInfo FileInfo fileInfo attribDefined fileInfo path path entry name mTimesDefined append mTimes append rtlSecondsSince1970ToSpecTime entry date toTime_t entry isFile K7ZipFileEntry fileEntry K7ZipFileEntry entry fileInfo attributes FILE_ATTRIBUTE_ARCHIVE fileInfo attributes FILE_ATTRIBUTE_UNIX_EXTENSION entry permissions fileInfo size fileEntry size QString symLink fileEntry symLinkTarget fileInfo size fileInfo hasStream data append outData mid fileEntry position fileEntry size unpackSizes append fileInfo size symLink isEmpty fileInfo hasStream data append symLink toUtf8 unpackSizes append symLink size fileInfos append fileInfo entry isDirectory fileInfo attributes FILE_ATTRIBUTE_DIRECTORY fileInfo attributes FILE_ATTRIBUTE_UNIX_EXTENSION entry permissions fileInfo isDir fileInfos append fileInfo createItemsFromEntities KArchiveDirectory entry path it QLatin1Char data K7Zip::K7ZipPrivate::writeByte b header append b countSize K7Zip::K7ZipPrivate::writeNumber quint64 value firstByte mask i i i i value quint64 i firstByte int value i firstByte mask mask writeByte firstByte i i writeByte value value K7Zip::K7ZipPrivate::writeBoolVector QVector&lt;bool&gt; boolVector b mask i i boolVector size i boolVector i b mask mask mask writeByte b mask b mask x80 writeByte b K7Zip::K7ZipPrivate::writeUInt32 quint32 value i i i writeByte value value K7Zip::K7ZipPrivate::writeUInt64 quint64 value i i i writeByte value value K7Zip::K7ZipPrivate::writeAlignedBoolHeader QVector&lt;bool&gt; v numDefined type itemSize bvSize numDefined v size v size quint64 dataSize quint64 numDefined itemSize bvSize writeByte type writeNumber dataSize numDefined v size writeByte writeByte writeBoolVector v writeByte K7Zip::K7ZipPrivate::writeUInt64DefVector QVector&lt;quint64&gt; v QVector&lt;bool&gt; defined type numDefined i i defined size i defined i numDefined numDefined writeAlignedBoolHeader defined numDefined type i i defined size i defined i writeUInt64 v i K7Zip::K7ZipPrivate::writeHashDigests QVector&lt;bool&gt; digestsDefined QVector&lt;quint32&gt; digests numDefined i i i digestsDefined size i digestsDefined i numDefined numDefined writeByte kCRC numDefined digestsDefined size writeByte writeByte writeBoolVector digestsDefined i i digests size i digestsDefined i writeUInt32 digests i K7Zip::K7ZipPrivate::writePackInfo quint64 dataOffset QVector&lt;quint64&gt; packedSizes QVector&lt;bool&gt; packedCRCsDefined QVector&lt;quint32&gt; packedCRCs packedSizes isEmpty writeByte kPackInfo writeNumber dataOffset writeNumber packedSizes size writeByte kSize i i packedSizes size i writeNumber packedSizes i writeHashDigests packedCRCsDefined packedCRCs writeByte kEnd K7Zip::K7ZipPrivate::writeFolder Folder folder writeNumber folder folderInfos size i i folder folderInfos size i Folder::FolderInfo info folder folderInfos at i propsSize info properties size quint64 info methodID idSize idSize idSize id idSize idSize longID t idSize t t longID t int xFF b b int idSize xF isComplex info isSimpleCoder b isComplex b propsSize x20 writeByte b j j idSize j writeByte longID j isComplex writeNumber info numInStreams writeNumber info numOutStreams propsSize writeNumber propsSize j j propsSize j writeByte info properties j i i folder inIndexes size i writeNumber folder inIndexes i writeNumber folder outIndexes i folder packedStreams size i i folder packedStreams size i writeNumber folder packedStreams i K7Zip::K7ZipPrivate::writeUnpackInfo QVector&lt;Folder *&gt; folderItems folderItems isEmpty writeByte kUnpackInfo writeByte kFolder writeNumber folderItems size writeByte i i folderItems size i writeFolder folderItems i writeByte kCodersUnpackSize i i i folderItems size i Folder folder folderItems i j j folder unpackSizes size j writeNumber folder unpackSizes at j QVector&lt;bool&gt; unpackCRCsDefined QVector&lt;quint32&gt; unpackCRCs unpackCRCsDefined reserve folderItems size unpackCRCs reserve folderItems size i i folderItems size i Folder folder folderItems i unpackCRCsDefined append folder unpackCRCDefined unpackCRCs append folder unpackCRC writeHashDigests unpackCRCsDefined unpackCRCs writeByte kEnd K7Zip::K7ZipPrivate::writeSubStreamsInfo QVector&lt;quint64&gt; unpackSizes QVector&lt;bool&gt; digestsDefined QVector&lt;quint32&gt; digests writeByte kSubStreamsInfo i i numUnpackStreamsInFolders size i numUnpackStreamsInFolders at i writeByte kNumUnpackStream j j numUnpackStreamsInFolders size j writeNumber numUnpackStreamsInFolders at j needFlag index i i numUnpackStreamsInFolders size i quint32 j j numUnpackStreamsInFolders at i j j numUnpackStreamsInFolders at i needFlag writeByte kSize needFlag writeNumber unpackSizes index index QVector&lt;bool&gt; digestsDefined2 QVector&lt;quint32&gt; digests2 digestIndex i i folders size i numSubStreams int numUnpackStreamsInFolders at i numSubStreams folders at i unpackCRCDefined digestIndex j j numSubStreams j digestIndex digestsDefined2 append digestsDefined digestIndex digests2 append digests digestIndex writeHashDigests digestsDefined2 digests2 writeByte kEnd QByteArray K7Zip::K7ZipPrivate::encodeStream QVector&lt;quint64&gt; packSizes QVector&lt;Folder *&gt; folds Folder folder Folder folder unpackCRCDefined folder unpackCRC crc32 Bytef header data header size folder unpackSizes append header size Folder::FolderInfo info Folder::FolderInfo info numInStreams info numOutStreams info methodID k_LZMA2 quint32 dictSize header size quint32 kMinReduceSize dictSize kMinReduceSize dictSize kMinReduceSize dict dict dict dict dictSize LZMA2_DIC_SIZE_FROM_PROP dict info properties append dict folder folderInfos append info folds append folder QByteArray encodedData header size QByteArray enc QBuffer inBuffer enc KCompressionDevice flt inBuffer KCompressionDevice::Xz flt open QIODevice::WriteOnly KFilterBase filter flt filterBase KXzFilter filter init QIODevice::WriteOnly KXzFilter::LZMA2 info properties ret flt write header ret header size qDebug ret header size encodedData flt close encodedData inBuffer data packSizes append encodedData size encodedData K7Zip::K7ZipPrivate::writeHeader quint64 headerOffset quint64 packedSize i i packSizes size i packedSize packSizes i headerOffset packedSize writeByte kHeader folders size writeByte kMainStreamsInfo writePackInfo packSizes packCRCsDefined packCRCs writeUnpackInfo folders QVector&lt;quint64&gt; unpackFileSizes QVector&lt;bool&gt; digestsDefined QVector&lt;quint32&gt; digests i i fileInfos size i FileInfo file fileInfos at i file hasStream unpackFileSizes append file size digestsDefined append file crcDefined digests append file crc writeSubStreamsInfo unpackSizes digestsDefined digests writeByte kEnd fileInfos isEmpty writeByte kEnd writeByte kFilesInfo writeNumber fileInfos size QVector&lt;bool&gt; emptyStreamVector numEmptyStreams i i fileInfos size i fileInfos at i hasStream emptyStreamVector append emptyStreamVector append numEmptyStreams numEmptyStreams writeByte kEmptyStream writeNumber emptyStreamVector size writeBoolVector emptyStreamVector QVector&lt;bool&gt; emptyFileVector antiVector numEmptyFiles numAntiItems i i fileInfos size i FileInfo file fileInfos at i file hasStream emptyFileVector append file isDir file isDir numEmptyFiles isAnti i isAnti size isAnti i antiVector append isAnti isAnti numAntiItems numEmptyFiles writeByte kEmptyFile writeNumber emptyFileVector size writeBoolVector emptyFileVector numAntiItems writeByte kAnti writeNumber antiVector size writeBoolVector antiVector numDefined namesDataSize i i fileInfos size i QString name fileInfos at i path name isEmpty numDefined namesDataSize name length numDefined namesDataSize writeByte kName writeNumber namesDataSize writeByte i i fileInfos size i QString name fileInfos at i path t t name length t c name t toLatin1 writeByte c writeByte c writeByte writeByte writeUInt64DefVector mTimes mTimesDefined kMTime writeUInt64DefVector startPositions startPositionsDefined kStartPos QVector&lt;bool&gt; boolVector numDefined boolVector reserve fileInfos size i i fileInfos size i defined fileInfos at i attribDefined boolVector append defined defined numDefined numDefined writeAlignedBoolHeader boolVector numDefined kAttributes i i fileInfos size i FileInfo file fileInfos at i file attribDefined writeUInt32 file attributes writeByte kEnd writeByte kEnd setUInt32 p quint32 d i i &lt; 4; i++, d &gt; p i unsigned d setUInt64 p quint64 d i i &lt; 8; i++, d &gt; p i char d K7Zip::K7ZipPrivate::writeStartHeader quint64 nextHeaderSize quint32 nextHeaderCRC quint64 nextHeaderOffset buf setUInt64 buf nextHeaderOffset setUInt64 buf nextHeaderSize setUInt32 buf nextHeaderCRC setUInt32 buf crc32 Bytef buf q device write buf K7Zip::K7ZipPrivate::writeSignature buf memcpy buf k7zip_signature buf buf q device write buf</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">k7zip.cpp</field>
    <field name="url">k7zip_8cpp_source.html#l02294</field>
    <field name="keywords"></field>
    <field name="text">K7Zip::openArchive QIODevice::OpenMode mode mode QIODevice::ReadOnly QIODevice dev device dev header qint64 n dev read header n qDebug i i i header i k7zip_signature i qDebug major header minor header quint32 startHeaderCRC GetUi32 header quint64 nextHeaderOffset GetUi64 header quint64 nextHeaderSize GetUi64 header quint32 nextHeaderCRC GetUi32 header quint32 crc crc32 Bytef header xC crc startHeaderCRC qDebug nextHeaderSize nextHeaderSize quint64 xFFFFFFFF qint64 nextHeaderOffset dev seek nextHeaderOffset QByteArray inBuffer inBuffer resize nextHeaderSize n dev read inBuffer data inBuffer size n qint64 nextHeaderSize qDebug nextHeaderSize n d buffer inBuffer data d end nextHeaderSize d headerSize nextHeaderSize crc crc32 Bytef d buffer quint32 nextHeaderSize crc nextHeaderCRC qDebug type d readByte QByteArray decodedData type kHeader type kEncodedHeader qDebug decodedData d readAndDecodePackedStreams external d readByte external dataIndex int d readNumber dataIndex d buffer decodedData constData d pos d end decodedData size type d readByte type kHeader qDebug type d readByte type kArchiveProperties qDebug type kAdditionalStreamsInfo qDebug type kMainStreamsInfo d readMainStreamsInfo qDebug type d readByte i i d folders size i Folder folder d folders at i d unpackSizes append folder getUnpackSize d digestsDefined append folder unpackCRCDefined d digests append folder unpackCRC type kEnd type kFilesInfo qDebug numFiles d readNumber i i numFiles i d fileInfos append FileInfo QVector&lt;bool&gt; emptyStreamVector QVector&lt;bool&gt; emptyFileVector QVector&lt;bool&gt; antiFileVector numEmptyStreams quint64 type d readByte type kEnd quint64 size d readNumber ppp d pos addPropIdToList isKnownType type quint32 isKnownType type kEmptyStream d readBoolVector numFiles emptyStreamVector i i emptyStreamVector size i emptyStreamVector i numEmptyStreams kEmptyFile d readBoolVector numEmptyStreams emptyFileVector kAnti d readBoolVector numEmptyStreams antiFileVector kCTime d readUInt64DefVector numFiles d cTimes d cTimesDefined qDebug kATime d readUInt64DefVector numFiles d aTimes d aTimesDefined qDebug kMTime d readUInt64DefVector numFiles d mTimes d mTimesDefined qDebug kName external d readByte external dataIndex d readNumber dataIndex &lt; 0 /*|| dataIndex &gt; dataVector Size qDebug QString name i i numFiles i name d readString d fileInfos at i path name kAttributes QVector&lt;bool&gt; attributesAreDefined d readBoolVector2 numFiles attributesAreDefined external d readByte external dataIndex d readNumber dataIndex qDebug i i numFiles i FileInfo fileInfo d fileInfos at i fileInfo attribDefined attributesAreDefined i fileInfo attribDefined fileInfo attributes d readUInt32 kStartPos d readUInt64DefVector numFiles d startPositions d startPositionsDefined qDebug kDummy quint64 i i size i d readByte qDebug addPropIdToList addPropIdToList isKnownType isKnownType addPropIdToList d fileInfoPopIDs append type d skipData d readNumber checkRecordsSize major minor checkRecordsSize d pos ppp size qDebug checkRecordsSize d pos ppp size emptyFileIndex sizeIndex numAntiItems emptyStreamVector isEmpty emptyStreamVector fill numFiles antiFileVector isEmpty antiFileVector fill numEmptyStreams emptyFileVector isEmpty emptyFileVector fill numEmptyStreams i i numEmptyStreams i antiFileVector i numAntiItems d outData d readAndDecodePackedStreams oldPos i i numFiles i FileInfo fileInfo d fileInfos at i isAnti fileInfo hasStream emptyStreamVector i fileInfo hasStream fileInfo isDir isAnti fileInfo size d unpackSizes sizeIndex fileInfo crc d digests sizeIndex fileInfo crcDefined d digestsDefined sizeIndex sizeIndex fileInfo isDir emptyFileVector emptyFileIndex isAnti antiFileVector emptyFileIndex emptyFileIndex fileInfo size fileInfo crcDefined numAntiItems d isAnti append isAnti access symlink fileInfo attributes FILE_ATTRIBUTE_UNIX_EXTENSION access fileInfo attributes access QT_STAT_MASK QT_STAT_LNK symlink fileInfo isDir access S_IFDIR access qint64 pos fileInfo isDir pos oldPos oldPos fileInfo size KArchiveEntry e QString entryName index fileInfo path lastIndexOf QLatin1Char index entryName fileInfo path entryName fileInfo path mid index Q_ASSERT entryName isEmpty QDateTime mTime d mTimesDefined i mTime KArchivePrivate::time_tToDateTime toTimeT d mTimes i mTime KArchivePrivate::time_tToDateTime time NULL fileInfo isDir QString path QDir::cleanPath fileInfo path KArchiveEntry ent rootDir entry path ent ent isDirectory e e KArchiveDirectory entryName access mTime rootDir user rootDir group QString symlink e K7ZipFileEntry entryName access mTime rootDir user rootDir group QString pos fileInfo size d outData QString target QFile::decodeName d outData mid pos fileInfo size e K7ZipFileEntry entryName access mTime rootDir user rootDir group target e index rootDir addEntry e QString path QDir::cleanPath fileInfo path left index KArchiveDirectory d findOrCreate path d addEntry e</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">k7zip.cpp</field>
    <field name="url">k7zip_8cpp_source.html#l02700</field>
    <field name="keywords"></field>
    <field name="text">K7Zip::closeArchive isOpen mode QIODevice::ReadOnly d clear Folder folder Folder folder unpackSizes clear folder unpackSizes append d outData size Folder::FolderInfo info Folder::FolderInfo info numInStreams info numOutStreams info methodID k_LZMA2 quint32 dictSize d outData size quint32 kMinReduceSize dictSize kMinReduceSize dictSize kMinReduceSize dict dict dict dict dictSize LZMA2_DIC_SIZE_FROM_PROP dict info properties append dict folder folderInfos append info d folders append folder KArchiveDirectory dir directory QByteArray data d createItemsFromEntities dir QString data d outData data folder unpackCRCDefined folder unpackCRC crc32 Bytef d outData data d outData size QByteArray encodedData d outData size QByteArray enc QBuffer inBuffer enc KCompressionDevice flt inBuffer KCompressionDevice::Xz flt open QIODevice::WriteOnly KFilterBase filter flt filterBase KXzFilter filter init QIODevice::WriteOnly KXzFilter::LZMA2 info properties ret flt write d outData ret d outData size qDebug flt close encodedData inBuffer data d packSizes append encodedData size numUnpackStream i i d fileInfos size i d fileInfos at i hasStream numUnpackStream d numUnpackStreamsInFolders append numUnpackStream quint64 headerOffset d writeHeader headerOffset QByteArray encodedStream QVector&lt;quint64&gt; packSizes QVector&lt;Folder *&gt; folders encodedStream d encodeStream packSizes folders folders isEmpty d header clear d writeByte kEncodedHeader QVector&lt;bool&gt; emptyDefined QVector&lt;quint32&gt; emptyCrcs d writePackInfo headerOffset packSizes emptyDefined emptyCrcs d writeUnpackInfo folders d writeByte kEnd i i packSizes size i headerOffset packSizes at i qDeleteAll folders quint64 nextHeaderSize d header size quint32 nextHeaderCRC crc32 Bytef d header data d header size quint64 nextHeaderOffset headerOffset device seek d writeSignature d writeStartHeader nextHeaderSize nextHeaderCRC nextHeaderOffset device write encodedData data encodedData size device write encodedStream data encodedStream size device write d header data d header size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">k7zip.cpp</field>
    <field name="url">k7zip_8cpp_source.html#l02827</field>
    <field name="keywords"></field>
    <field name="text">K7Zip::doFinishWriting qint64 size d m_currentFile setSize size d m_currentFile L</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">k7zip.cpp</field>
    <field name="url">k7zip_8cpp_source.html#l02836</field>
    <field name="keywords"></field>
    <field name="text">K7Zip::writeData data qint64 size d m_currentFile d m_currentFile position d outData size d outData append data size d outData remove d m_currentFile position d m_currentFile size d outData insert d m_currentFile position data size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">k7zip.cpp</field>
    <field name="url">k7zip_8cpp_source.html#l02852</field>
    <field name="keywords"></field>
    <field name="text">K7Zip::doPrepareWriting QString name QString user QString group qint64 mode_t perm QDateTime QDateTime mtime QDateTime isOpen mode QIODevice::WriteOnly KArchiveDirectory parentDir rootDir QString fileName QDir::cleanPath name i name lastIndexOf QLatin1Char i QString dir name left i fileName name mid i parentDir findOrCreate dir KArchiveEntry entry parentDir entry fileName entry K7ZipFileEntry e K7ZipFileEntry fileName perm mtime user group QString d outData size d outData parentDir addEntry e d m_entryList e d m_currentFile e</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">k7zip.cpp</field>
    <field name="url">k7zip_8cpp_source.html#l02893</field>
    <field name="keywords"></field>
    <field name="text">K7Zip::doWriteDir QString name QString user QString group mode_t perm QDateTime QDateTime mtime QDateTime isOpen mode QIODevice::WriteOnly QString dirName QDir::cleanPath name dirName endsWith QLatin1Char dirName remove dirName size KArchiveDirectory parentDir rootDir i dirName lastIndexOf QLatin1Char i QString dir name left i dirName name mid i parentDir findOrCreate dir KArchiveDirectory e KArchiveDirectory dirName perm mtime user group QString parentDir addEntry e</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">k7zip.cpp</field>
    <field name="url">k7zip_8cpp_source.html#l02929</field>
    <field name="keywords"></field>
    <field name="text">K7Zip::doWriteSymLink QString name QString target QString user QString group mode_t perm QDateTime QDateTime mtime QDateTime isOpen mode QIODevice::WriteOnly KArchiveDirectory parentDir rootDir QString fileName QDir::cleanPath name i name lastIndexOf QLatin1Char i QString dir name left i fileName name mid i parentDir findOrCreate dir QByteArray encodedTarget QFile::encodeName target K7ZipFileEntry e K7ZipFileEntry fileName perm mtime user group target d outData append encodedTarget parentDir addEntry e d m_entryList e K7Zip::virtual_hook data KArchive::virtual_hook data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">k7zip.h</field>
    <field name="url">k7zip_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">k7zip.h</field>
    <field name="url">k7zip_8h_source.html#l00028</field>
    <field name="keywords"></field>
    <field name="text">KARCHIVE_EXPORT K7Zip KArchive K7Zip QString filename K7Zip QIODevice dev K7Zip doWriteSymLink QString name QString target QString user QString group mode_t perm QDateTime atime QDateTime mtime QDateTime ctime Q_DECL_OVERRIDE doWriteDir QString name QString user QString group mode_t perm QDateTime atime QDateTime mtime QDateTime ctime Q_DECL_OVERRIDE doPrepareWriting QString name QString user QString group qint64 size mode_t perm QDateTime atime QDateTime mtime QDateTime ctime Q_DECL_OVERRIDE doFinishWriting qint64 size Q_DECL_OVERRIDE writeData data qint64 size Q_DECL_OVERRIDE openArchive QIODevice::OpenMode mode Q_DECL_OVERRIDE closeArchive Q_DECL_OVERRIDE virtual_hook data Q_DECL_OVERRIDE K7ZipPrivate K7ZipPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kar.cpp</field>
    <field name="url">kar_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KAr::KArPrivate KArPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kar.cpp</field>
    <field name="url">kar_8cpp_source.html#l00040</field>
    <field name="keywords"></field>
    <field name="text">KAr::KAr QString filename KArchive filename d new KArPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kar.cpp</field>
    <field name="url">kar_8cpp_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">KAr::KAr QIODevice dev KArchive dev d new KArPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kar.cpp</field>
    <field name="url">kar_8cpp_source.html#l00052</field>
    <field name="keywords"></field>
    <field name="text">KAr::~KAr isOpen close d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kar.cpp</field>
    <field name="url">kar_8cpp_source.html#l00060</field>
    <field name="keywords"></field>
    <field name="text">KAr::doPrepareWriting QString QString QString qint64 mode_t QDateTime QDateTime QDateTime</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kar.cpp</field>
    <field name="url">kar_8cpp_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">KAr::doFinishWriting qint64</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kar.cpp</field>
    <field name="url">kar_8cpp_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">KAr::doWriteDir QString QString QString mode_t QDateTime QDateTime QDateTime</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kar.cpp</field>
    <field name="url">kar_8cpp_source.html#l00077</field>
    <field name="keywords"></field>
    <field name="text">KAr::doWriteSymLink QString QString QString QString mode_t QDateTime QDateTime QDateTime</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kar.cpp</field>
    <field name="url">kar_8cpp_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text">KAr::openArchive QIODevice::OpenMode mode mode QIODevice::WriteOnly mode QIODevice::ReadOnly mode QIODevice::ReadWrite QIODevice dev device dev QByteArray magic dev read magic ar_longnames dev atEnd QByteArray ar_header ar_header resize dev seek dev pos dev pos dev read ar_header data ar_longnames ar_header endsWith ar_longnames QByteArray name ar_header mid date ar_header mid toInt mode ar_header mid toInt qint64 size ar_header mid toInt skip_entry name mid name mid ar_longnames ar_longnames size ar_longnames size dev read ar_longnames size skip_entry name mid dev seek dev pos size skip_entry ar_longnames ar_longnames name ar_longnames name mid toInt name name left name indexOf skip_entry name name trimmed name replace QByteArray KArchiveEntry entry KArchiveFile QString::fromLocal8Bit name constData mode KArchivePrivate::time_tToDateTime date rootDir user rootDir group QString dev pos size rootDir addEntry entry dev seek dev pos size ar_longnames</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kar.cpp</field>
    <field name="url">kar_8cpp_source.html#l00177</field>
    <field name="keywords"></field>
    <field name="text">KAr::closeArchive KAr::virtual_hook data KArchive::virtual_hook data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kar.h</field>
    <field name="url">kar_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kar.h</field>
    <field name="url">kar_8h_source.html#l00029</field>
    <field name="keywords"></field>
    <field name="text">KARCHIVE_EXPORT KAr KArchive KAr QString filename KAr QIODevice dev KAr doPrepareWriting QString name QString user QString group qint64 size mode_t perm QDateTime atime QDateTime mtime QDateTime ctime Q_DECL_OVERRIDE doFinishWriting qint64 size Q_DECL_OVERRIDE doWriteDir QString name QString user QString group mode_t perm QDateTime atime QDateTime mtime QDateTime ctime Q_DECL_OVERRIDE doWriteSymLink QString name QString target QString user QString group mode_t perm QDateTime atime QDateTime mtime QDateTime ctime Q_DECL_OVERRIDE openArchive QIODevice::OpenMode mode Q_DECL_OVERRIDE closeArchive Q_DECL_OVERRIDE virtual_hook data Q_DECL_OVERRIDE KArPrivate KArPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">KArchive::KArchive QString fileName d new KArchivePrivate fileName isEmpty qWarning d fileName fileName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00067</field>
    <field name="keywords"></field>
    <field name="text">KArchive::KArchive QIODevice dev d new KArchivePrivate dev qWarning d dev dev KArchive::~KArchive Q_ASSERT isOpen d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text">KArchive::open QIODevice::OpenMode mode Q_ASSERT mode QIODevice::NotOpen isOpen close d fileName isEmpty Q_ASSERT d dev createDevice mode d dev d dev isOpen d dev open mode d mode mode Q_ASSERT d rootDir d rootDir openArchive mode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text">KArchive::createDevice QIODevice::OpenMode mode mode QIODevice::WriteOnly d fileName isEmpty d saveFile QSaveFile d fileName d saveFile open QIODevice::WriteOnly d saveFile d saveFile d dev d saveFile Q_ASSERT d dev QIODevice::ReadOnly QIODevice::ReadWrite d fileName isEmpty d dev QFile d fileName d deviceOwned</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00146</field>
    <field name="keywords"></field>
    <field name="text">KArchive::close isOpen closeSucceeded d dev closeSucceeded closeArchive d mode QIODevice::WriteOnly closeSucceeded d abortWriting d dev d dev d saveFile d dev close d saveFile closeSucceeded d saveFile commit d saveFile d saveFile d deviceOwned d dev d rootDir d rootDir d mode QIODevice::NotOpen d dev closeSucceeded</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00184</field>
    <field name="keywords"></field>
    <field name="text">KArchiveDirectory KArchive::directory KArchive rootDir</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00190</field>
    <field name="keywords"></field>
    <field name="text">KArchive::addLocalFile QString fileName QString destName QFileInfo fileInfo fileName fileInfo isFile fileInfo isSymLink QT_STATBUF fi STAT_METHOD QFile::encodeName fileName constData fi fileInfo isSymLink QString symLinkTarget QByteArray encodedFileName QFile::encodeName fileName QByteArray s s resize PATH_MAX path_max pathconf encodedFileName data _PC_PATH_MAX path_max path_max s resize path_max len readlink encodedFileName data s data s size len s len symLinkTarget QFile::decodeName s constData symLinkTarget isEmpty symLinkTarget fileInfo symLinkTarget writeSymLink destName symLinkTarget fileInfo owner fileInfo group fi st_mode fileInfo lastRead fileInfo lastModified fileInfo created qint64 size fileInfo size QFile file fileName file open QIODevice::ReadOnly prepareWriting destName fileInfo owner fileInfo group size fi st_mode fileInfo lastRead fileInfo lastModified fileInfo created QByteArray array array resize qMin qint64 size qint64 n qint64 total n file read array data array size writeData array data n total n Q_ASSERT total size finishWriting size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00278</field>
    <field name="keywords"></field>
    <field name="text">KArchive::addLocalDirectory QString path QString destName QDir dir path dir exists dir setFilter dir filter QDir::Hidden QStringList files dir entryList QStringList::ConstIterator it files begin it files end it it QLatin1String it QLatin1String QString fileName path QLatin1Char it QString dest destName isEmpty it destName QLatin1Char it QFileInfo fileInfo fileName fileInfo isFile fileInfo isSymLink addLocalFile fileName dest fileInfo isDir addLocalDirectory fileName dest</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00304</field>
    <field name="keywords"></field>
    <field name="text">KArchive::writeFile QString name QByteArray data mode_t perm QString user QString group QDateTime atime QDateTime mtime QDateTime ctime qint64 size data size prepareWriting name user group size perm atime mtime ctime data constData size writeData data constData size finishWriting size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00329</field>
    <field name="keywords"></field>
    <field name="text">KArchive::writeData data qint64 size ok device write data size size ok d abortWriting ok</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00344</field>
    <field name="keywords"></field>
    <field name="text">KArchive::writeDir QString name QString user QString group mode_t perm QDateTime atime QDateTime mtime QDateTime ctime doWriteDir name user group perm atime mtime ctime</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00351</field>
    <field name="keywords"></field>
    <field name="text">KArchive::writeSymLink QString name QString target QString user QString group mode_t perm QDateTime atime QDateTime mtime QDateTime ctime doWriteSymLink name target user group perm atime mtime ctime</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00359</field>
    <field name="keywords"></field>
    <field name="text">KArchive::prepareWriting QString name QString user QString group qint64 size mode_t perm QDateTime atime QDateTime mtime QDateTime ctime ok doPrepareWriting name user group size perm atime mtime ctime ok d abortWriting ok</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00371</field>
    <field name="keywords"></field>
    <field name="text">KArchive::finishWriting qint64 size doFinishWriting size QString getCurrentUserName passwd pw getpwuid getuid pw QFile::decodeName pw pw_name QString::number getuid buffer DWORD size ok GetUserNameW buffer size ok QString QString::fromWCharArray buffer QString QString getCurrentGroupName group grp getgrgid getgid grp QFile::decodeName grp gr_name QString::number getgid QString QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00406</field>
    <field name="keywords"></field>
    <field name="text">KArchiveDirectory KArchive::rootDir d rootDir QString username QString groupname d rootDir KArchiveDirectory QStringLiteral S_IFDIR QDateTime username groupname QString d rootDir</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00418</field>
    <field name="keywords"></field>
    <field name="text">KArchiveDirectory KArchive::findOrCreate QString path path isEmpty path QLatin1String path QLatin1String rootDir KArchiveEntry ent rootDir entry path ent ent isDirectory KArchiveDirectory dir KArchiveDirectory ent KArchiveDirectory dir pos path lastIndexOf QLatin1Char KArchiveDirectory parent QString dirname pos parent rootDir dirname path QString left path left pos dirname path mid pos parent findOrCreate left KArchiveDirectory e KArchiveDirectory dirname d rootDir permissions d rootDir date d rootDir user d rootDir group QString parent addEntry e e</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00466</field>
    <field name="keywords"></field>
    <field name="text">KArchive::setDevice QIODevice dev d deviceOwned d dev d dev dev d deviceOwned</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00475</field>
    <field name="keywords"></field>
    <field name="text">KArchive::setRootDir KArchiveDirectory rootDir Q_ASSERT d rootDir d rootDir rootDir</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00481</field>
    <field name="keywords"></field>
    <field name="text">QIODevice::OpenMode KArchive::mode d mode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00486</field>
    <field name="keywords"></field>
    <field name="text">QIODevice KArchive::device d dev</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00491</field>
    <field name="keywords"></field>
    <field name="text">KArchive::isOpen d mode QIODevice::NotOpen</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00496</field>
    <field name="keywords"></field>
    <field name="text">QString KArchive::fileName d fileName KArchivePrivate::abortWriting saveFile saveFile cancelWriting saveFile saveFile dev QDateTime KArchivePrivate::time_tToDateTime uint time_t time_t uint QDateTime QDateTime::fromTime_t time_t KArchiveEntryPrivate KArchiveEntryPrivate KArchive _archive QString _name _access QDateTime _date QString _user QString _group QString _symlink name _name date _date access _access user _user group _group symlink _symlink archive _archive QString name QDateTime date mode_t access QString user QString group QString symlink KArchive archive</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00548</field>
    <field name="keywords"></field>
    <field name="text">KArchiveEntry::KArchiveEntry KArchive t QString name access QDateTime date QString user QString group QString symlink d new KArchiveEntryPrivate t name access date user group symlink KArchiveEntry::~KArchiveEntry d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00560</field>
    <field name="keywords"></field>
    <field name="text">QDateTime KArchiveEntry::date d date</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00565</field>
    <field name="keywords"></field>
    <field name="text">QString KArchiveEntry::name d name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00570</field>
    <field name="keywords"></field>
    <field name="text">mode_t KArchiveEntry::permissions d access</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00575</field>
    <field name="keywords"></field>
    <field name="text">QString KArchiveEntry::user d user</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00580</field>
    <field name="keywords"></field>
    <field name="text">QString KArchiveEntry::group d group</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00585</field>
    <field name="keywords"></field>
    <field name="text">QString KArchiveEntry::symLinkTarget d symlink</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00590</field>
    <field name="keywords"></field>
    <field name="text">KArchiveEntry::isFile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00595</field>
    <field name="keywords"></field>
    <field name="text">KArchiveEntry::isDirectory KArchive KArchiveEntry::archive d archive KArchiveFilePrivate KArchiveFilePrivate qint64 _pos qint64 _size pos _pos size _size qint64 pos qint64 size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00621</field>
    <field name="keywords"></field>
    <field name="text">KArchiveFile::KArchiveFile KArchive t QString name access QDateTime date QString user QString group QString symlink qint64 pos qint64 size KArchiveEntry t name access date user group symlink d new KArchiveFilePrivate pos size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00630</field>
    <field name="keywords"></field>
    <field name="text">KArchiveFile::~KArchiveFile d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00635</field>
    <field name="keywords"></field>
    <field name="text">qint64 KArchiveFile::position d pos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00640</field>
    <field name="keywords"></field>
    <field name="text">qint64 KArchiveFile::size d size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00645</field>
    <field name="keywords"></field>
    <field name="text">KArchiveFile::setSize qint64 s d size s</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00650</field>
    <field name="keywords"></field>
    <field name="text">QByteArray KArchiveFile::data ok archive device seek d pos ok QByteArray arr d size arr archive device read d size Q_ASSERT arr size d size arr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00666</field>
    <field name="keywords"></field>
    <field name="text">QIODevice KArchiveFile::createDevice KLimitedIODevice archive device d pos d size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00671</field>
    <field name="keywords"></field>
    <field name="text">KArchiveFile::isFile QFileDevice::Permissions withExecutablePerms QFileDevice::Permissions filePerms mode_t perms perms filePerms QFileDevice::ExeOther perms filePerms QFileDevice::ExeGroup perms filePerms QFileDevice::ExeOwner filePerms</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00692</field>
    <field name="keywords"></field>
    <field name="text">KArchiveFile::copyTo QString dest QFile f dest QLatin1Char name f open QIODevice::ReadWrite QIODevice::Truncate QIODevice inputDev createDevice qint64 chunkSize qint64 remainingSize d size QByteArray array array resize qMin chunkSize remainingSize remainingSize qint64 currentChunkSize qMin chunkSize remainingSize qint64 n inputDev read array data currentChunkSize Q_UNUSED n Q_ASSERT n currentChunkSize f write array data currentChunkSize remainingSize currentChunkSize f setPermissions withExecutablePerms f permissions permissions f close inputDev KArchiveDirectoryPrivate KArchiveDirectoryPrivate qDeleteAll entries QHash&lt;QString, KArchiveEntry *&gt; entries</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00735</field>
    <field name="keywords"></field>
    <field name="text">KArchiveDirectory::KArchiveDirectory KArchive t QString name access QDateTime date QString user QString group QString symlink KArchiveEntry t name access date user group symlink d new KArchiveDirectoryPrivate KArchiveDirectory::~KArchiveDirectory d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00749</field>
    <field name="keywords"></field>
    <field name="text">QStringList KArchiveDirectory::entries d entries keys</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00754</field>
    <field name="keywords"></field>
    <field name="text">KArchiveEntry KArchiveDirectory::entry QString _name QString name QDir::cleanPath _name pos name indexOf QLatin1Char pos name length name name mid pos name indexOf QLatin1Char pos pos name length name name left pos pos name indexOf QLatin1Char pos QString left name left pos QString right name mid pos KArchiveEntry e d entries value left e e isDirectory KArchiveDirectory e entry right d entries value name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00787</field>
    <field name="keywords"></field>
    <field name="text">KArchiveFile KArchiveDirectory::file QString name KArchiveEntry e entry name e e isFile KArchiveFile e</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00796</field>
    <field name="keywords"></field>
    <field name="text">KArchiveDirectory::addEntry KArchiveEntry entry entry name isEmpty d entries value entry name d entries insert entry name entry</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00810</field>
    <field name="keywords"></field>
    <field name="text">KArchiveDirectory::removeEntry KArchiveEntry entry entry QHash&lt;QString, KArchiveEntry *&gt;::Iterator it d entries find entry name it d entries end qWarning name entry name it value entry qWarning name entry name d entries erase it</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00831</field>
    <field name="keywords"></field>
    <field name="text">KArchiveDirectory::isDirectory sortByPosition KArchiveFile file1 KArchiveFile file2 file1 position file2 position</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.cpp</field>
    <field name="url">karchive_8cpp_source.html#l00841</field>
    <field name="keywords"></field>
    <field name="text">KArchiveDirectory::copyTo QString dest recursiveCopy QDir root QString destDir QDir dest absolutePath QList&lt;const KArchiveFile *&gt; fileList QMap&lt;qint64, QString&gt; fileToDir QStack&lt;const KArchiveDirectory *&gt; dirStack QStack&lt;QString&gt; dirNameStack dirStack push dirNameStack push destDir KArchiveDirectory curDir dirStack pop QString curDirName dirNameStack pop QDir curDirName absolutePath startsWith destDir qWarning curDirName destDir curDirName destDir root mkpath curDirName QStringList dirEntries curDir entries QStringList::const_iterator it dirEntries begin it dirEntries end it KArchiveEntry curEntry curDir entry it curEntry symLinkTarget isEmpty QString linkName curDirName QLatin1Char curEntry name linkName endsWith QLatin1String linkName QLatin1String QFile symLinkTarget curEntry symLinkTarget symLinkTarget link linkName curEntry isFile KArchiveFile curFile KArchiveFile curEntry curFile fileList append curFile fileToDir insert curFile position curDirName curEntry isDirectory recursiveCopy KArchiveDirectory ad KArchiveDirectory curEntry ad dirStack push ad dirNameStack push curDirName QLatin1Char curEntry name dirStack isEmpty qSort fileList begin fileList end sortByPosition QList&lt;const KArchiveFile *&gt;::const_iterator it fileList constBegin end fileList constEnd it end it KArchiveFile f it qint64 pos f position f copyTo fileToDir pos KArchive::virtual_hook KArchiveEntry::virtual_hook KArchiveFile::virtual_hook data KArchiveEntry::virtual_hook data KArchiveDirectory::virtual_hook data KArchiveEntry::virtual_hook data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.h</field>
    <field name="url">karchive_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KArchiveDirectory KArchiveFile KArchivePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.h</field>
    <field name="url">karchive_8h_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">KARCHIVE_EXPORT KArchive KArchive QString fileName KArchive QIODevice dev KArchive open QIODevice::OpenMode mode close isOpen QIODevice::OpenMode mode QIODevice device QString fileName KArchiveDirectory directory addLocalFile QString fileName QString destName addLocalDirectory QString path QString destName writeDir QString name QString user QString QString group QString mode_t perm QDateTime atime QDateTime QDateTime mtime QDateTime QDateTime ctime QDateTime writeSymLink QString name QString target QString user QString QString group QString mode_t perm QDateTime atime QDateTime QDateTime mtime QDateTime QDateTime ctime QDateTime</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchive.h</field>
    <field name="url">karchive_8h_source.html#l00187</field>
    <field name="keywords"></field>
    <field name="text">KARCHIVE_DEPRECATED writeFile QString name QString user QString group data qint64 size mode_t perm QDateTime atime QDateTime QDateTime mtime QDateTime QDateTime ctime QDateTime QByteArray array data size writeFile name array perm user group atime mtime ctime writeFile QString name QByteArray data mode_t perm QString user QString QString group QString QDateTime atime QDateTime QDateTime mtime QDateTime QDateTime ctime QDateTime prepareWriting QString name QString user QString group qint64 size mode_t perm QDateTime atime QDateTime QDateTime mtime QDateTime QDateTime ctime QDateTime writeData data qint64 size finishWriting qint64 size openArchive QIODevice::OpenMode mode closeArchive KArchiveDirectory rootDir doWriteDir QString name QString user QString group mode_t perm QDateTime atime QDateTime mtime QDateTime ctime doWriteSymLink QString name QString target QString user QString group mode_t perm QDateTime atime QDateTime mtime QDateTime ctime doPrepareWriting QString name QString user QString group qint64 size mode_t perm QDateTime atime QDateTime mtime QDateTime ctime doFinishWriting qint64 size KArchiveDirectory findOrCreate QString path createDevice QIODevice::OpenMode mode setDevice QIODevice dev setRootDir KArchiveDirectory rootDir virtual_hook data KArchivePrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchivedirectory.h</field>
    <field name="url">karchivedirectory_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KArchiveDirectoryPrivate KArchiveFile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchivedirectory.h</field>
    <field name="url">karchivedirectory_8h_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">KARCHIVE_EXPORT KArchiveDirectory KArchiveEntry KArchiveDirectory KArchive archive QString name access QDateTime date QString user QString group QString symlink KArchiveDirectory QStringList entries KArchiveEntry entry QString name KArchiveFile file QString name addEntry KArchiveEntry removeEntry KArchiveEntry isDirectory Q_DECL_OVERRIDE copyTo QString dest recursive virtual_hook data Q_DECL_OVERRIDE KArchiveDirectoryPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchiveentry.h</field>
    <field name="url">karchiveentry_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KArchiveDirectory KArchiveFile KArchiveEntryPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchiveentry.h</field>
    <field name="url">karchiveentry_8h_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">KARCHIVE_EXPORT KArchiveEntry KArchiveEntry KArchive archive QString name access QDateTime date QString user QString group QString symlink KArchiveEntry QDateTime date QString name mode_t permissions QString user QString group QString symLinkTarget isFile isDirectory KArchive archive virtual_hook data KArchiveEntryPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchivefile.h</field>
    <field name="url">karchivefile_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KArchiveFilePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">karchivefile.h</field>
    <field name="url">karchivefile_8h_source.html#l00034</field>
    <field name="keywords"></field>
    <field name="text">KARCHIVE_EXPORT KArchiveFile KArchiveEntry KArchiveFile KArchive archive QString name access QDateTime date QString user QString group QString symlink qint64 pos qint64 size KArchiveFile qint64 position qint64 size setSize qint64 s QByteArray data QIODevice createDevice isFile Q_DECL_OVERRIDE copyTo QString dest virtual_hook data Q_DECL_OVERRIDE KArchiveFilePrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kbzip2filter.cpp</field>
    <field name="url">kbzip2filter_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KBzip2Filter::Private Private isInitialized false memset zStream zStream mode bz_stream zStream mode isInitialized KBzip2Filter::KBzip2Filter d new Private KBzip2Filter::~KBzip2Filter d KBzip2Filter::init mode d isInitialized terminate d zStream next_in d zStream avail_in mode QIODevice::ReadOnly result bzDecompressInit d zStream result BZ_OK mode QIODevice::WriteOnly result bzCompressInit d zStream result BZ_OK d mode mode d isInitialized KBzip2Filter::mode d mode KBzip2Filter::terminate d mode QIODevice::ReadOnly result bzDecompressEnd d zStream result BZ_OK d mode QIODevice::WriteOnly result bzCompressEnd d zStream result BZ_OK d isInitialized KBzip2Filter::reset terminate init d mode KBzip2Filter::setOutBuffer data uint maxlen d zStream avail_out maxlen d zStream next_out data KBzip2Filter::setInBuffer data size d zStream avail_in size d zStream next_in data KBzip2Filter::inBufferAvailable d zStream avail_in KBzip2Filter::outBufferAvailable d zStream avail_out KBzip2Filter::Result KBzip2Filter::uncompress result bzDecompress d zStream result BZ_OK qWarning result result BZ_OK KFilterBase::Ok BZ_STREAM_END KFilterBase::End KFilterBase::Error KBzip2Filter::Result KBzip2Filter::compress finish result bzCompress d zStream finish BZ_FINISH BZ_RUN result BZ_OK BZ_FLUSH_OK BZ_RUN_OK BZ_FINISH_OK KFilterBase::Ok BZ_STREAM_END KFilterBase::End KFilterBase::Error</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kbzip2filter.h</field>
    <field name="url">kbzip2filter_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KBzip2Filter KFilterBase KBzip2Filter KBzip2Filter init Q_DECL_OVERRIDE mode const Q_DECL_OVERRIDE terminate Q_DECL_OVERRIDE reset Q_DECL_OVERRIDE readHeader Q_DECL_OVERRIDE writeHeader QByteArray Q_DECL_OVERRIDE setOutBuffer data uint maxlen Q_DECL_OVERRIDE setInBuffer data uint size Q_DECL_OVERRIDE inBufferAvailable const Q_DECL_OVERRIDE outBufferAvailable const Q_DECL_OVERRIDE Result uncompress Q_DECL_OVERRIDE Result compress finish Q_DECL_OVERRIDE private class Private Private const d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompressiondevice.cpp</field>
    <field name="url">kcompressiondevice_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCompressionDevicePrivate KCompressionDevicePrivate bNeedHeader true bSkipHeaders false bOpenedUnderlyingDevice false bIgnoreData false type KCompressionDevice None bNeedHeader bSkipHeaders bOpenedUnderlyingDevice bIgnoreData QByteArray buffer QByteArray origFileName KFilterBase::Result result KFilterBase filter KCompressionDevice::CompressionType type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompressiondevice.cpp</field>
    <field name="url">kcompressiondevice_8cpp_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">KFilterBase KCompressionDevice::filterForCompressionType KCompressionDevice::CompressionType type type KCompressionDevice::GZip KGzipFilter KCompressionDevice::BZip2 KBzip2Filter KCompressionDevice::Xz KXzFilter KCompressionDevice::None KNoneFilter</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompressiondevice.cpp</field>
    <field name="url">kcompressiondevice_8cpp_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">KCompressionDevice::KCompressionDevice QIODevice inputDevice autoDeleteInputDevice CompressionType type d new KCompressionDevicePrivate assert inputDevice d filter filterForCompressionType type d filter d type type d filter setDevice inputDevice autoDeleteInputDevice</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompressiondevice.cpp</field>
    <field name="url">kcompressiondevice_8cpp_source.html#l00098</field>
    <field name="keywords"></field>
    <field name="text">KCompressionDevice::KCompressionDevice QString fileName CompressionType type d new KCompressionDevicePrivate QFile f QFile fileName d filter filterForCompressionType type d filter d type type d filter setDevice f f</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompressiondevice.cpp</field>
    <field name="url">kcompressiondevice_8cpp_source.html#l00111</field>
    <field name="keywords"></field>
    <field name="text">KCompressionDevice::~KCompressionDevice isOpen close d filter d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompressiondevice.cpp</field>
    <field name="url">kcompressiondevice_8cpp_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text">KCompressionDevice::CompressionType KCompressionDevice::compressionType d type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompressiondevice.cpp</field>
    <field name="url">kcompressiondevice_8cpp_source.html#l00125</field>
    <field name="keywords"></field>
    <field name="text">KCompressionDevice::open QIODevice::OpenMode mode isOpen mode QIODevice::ReadOnly d buffer resize d buffer resize BUFFER_SIZE d filter setOutBuffer d buffer data d buffer size d bNeedHeader d bSkipHeaders d filter setFilterFlags d bSkipHeaders KFilterBase::NoHeaders KFilterBase::WithHeaders d filter init mode d bOpenedUnderlyingDevice d filter device isOpen ret d bOpenedUnderlyingDevice d filter device open mode d result KFilterBase::Ok ret setOpenMode mode ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompressiondevice.cpp</field>
    <field name="url">kcompressiondevice_8cpp_source.html#l00156</field>
    <field name="keywords"></field>
    <field name="text">KCompressionDevice::close isOpen d filter mode QIODevice::WriteOnly write L d filter terminate d bOpenedUnderlyingDevice d filter device close setOpenMode QIODevice::NotOpen</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompressiondevice.cpp</field>
    <field name="url">kcompressiondevice_8cpp_source.html#l00175</field>
    <field name="keywords"></field>
    <field name="text">KCompressionDevice::seek qint64 pos qint64 ioIndex pos ioIndex pos Q_ASSERT d filter mode QIODevice::ReadOnly pos d bNeedHeader d bSkipHeaders d result KFilterBase::Ok d filter setInBuffer L d filter reset QIODevice::seek pos d filter device reset qint64 bytesToRead ioIndex pos bytesToRead pos ioIndex seek bytesToRead pos QByteArray dummy qMin bytesToRead qint64 BUFFER_SIZE d bIgnoreData result read dummy data bytesToRead bytesToRead d bIgnoreData QIODevice::seek pos result KCompressionDevice::atEnd d type KCompressionDevice::None d result KFilterBase::End QIODevice::atEnd d filter device atEnd qint64 KCompressionDevice::readData data qint64 maxlen Q_ASSERT d filter mode QIODevice::ReadOnly KFilterBase filter d filter uint dataReceived d result KFilterBase::End dataReceived d result KFilterBase::Ok qint64 outBufferSize d bIgnoreData outBufferSize qMin maxlen static_cast&lt;qint64&gt; BUFFER_SIZE outBufferSize maxlen outBufferSize dataReceived qint64 availOut outBufferSize filter setOutBuffer data outBufferSize dataReceived maxlen filter inBufferEmpty d buffer resize BUFFER_SIZE size filter device read d buffer data d buffer size size filter setInBuffer d buffer data size d bNeedHeader void filter readHeader d bNeedHeader d result filter uncompress d result KFilterBase::Error uint outReceived availOut filter outBufferAvailable availOut uint filter outBufferAvailable dataReceived outReceived d bIgnoreData data outReceived availOut maxlen dataReceived maxlen dataReceived outBufferSize availOut maxlen dataReceived d result KFilterBase::End filter device atEnd filter init filter mode filter setOutBuffer data availOut dataReceived qint64 KCompressionDevice::writeData data qint64 len KFilterBase filter d filter Q_ASSERT filter mode QIODevice::WriteOnly d result KFilterBase::Ok finish data L finish filter setInBuffer data len d bNeedHeader void filter writeHeader d origFileName d bNeedHeader uint dataWritten uint availIn len dataWritten len finish d result filter compress finish d result KFilterBase::Error filter inBufferEmpty d result KFilterBase::End uint wrote availIn filter inBufferAvailable data wrote dataWritten wrote availIn len dataWritten availIn filter setInBuffer data availIn filter outBufferFull d result KFilterBase::End finish towrite d buffer size filter outBufferAvailable towrite size filter device write d buffer data towrite size towrite d result KFilterBase::End Q_ASSERT finish d buffer resize BUFFER_SIZE filter setOutBuffer d buffer data d buffer size dataWritten</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompressiondevice.cpp</field>
    <field name="url">kcompressiondevice_8cpp_source.html#l00381</field>
    <field name="keywords"></field>
    <field name="text">KCompressionDevice::setOrigFileName QByteArray fileName d origFileName fileName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompressiondevice.cpp</field>
    <field name="url">kcompressiondevice_8cpp_source.html#l00386</field>
    <field name="keywords"></field>
    <field name="text">KCompressionDevice::setSkipHeaders d bSkipHeaders KFilterBase KCompressionDevice::filterBase d filter</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompressiondevice.h</field>
    <field name="url">kcompressiondevice_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCompressionDevicePrivate KFilterBase</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompressiondevice.h</field>
    <field name="url">kcompressiondevice_8h_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">KARCHIVE_EXPORT KCompressionDevice QIODevice CompressionType GZip BZip2 Xz None KCompressionDevice QIODevice inputDevice autoDeleteInputDevice CompressionType type KCompressionDevice QString fileName CompressionType type KCompressionDevice CompressionType compressionType open QIODevice::OpenMode mode Q_DECL_OVERRIDE close Q_DECL_OVERRIDE setOrigFileName QByteArray fileName setSkipHeaders seek qint64 Q_DECL_OVERRIDE atEnd Q_DECL_OVERRIDE KFilterBase filterForCompressionType CompressionType type K7Zip qint64 readData data qint64 maxlen Q_DECL_OVERRIDE qint64 writeData data qint64 len Q_DECL_OVERRIDE KFilterBase filterBase KCompressionDevicePrivate d Q_DECLARE_METATYPE KCompressionDevice::CompressionType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterbase.cpp</field>
    <field name="url">kfilterbase_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KFilterBasePrivate KFilterBasePrivate m_flags KFilterBase WithHeaders m_dev L m_bAutoDel false KFilterBase::FilterFlags m_flags QIODevice m_dev m_bAutoDel KFilterBase::KFilterBase d new KFilterBasePrivate KFilterBase::~KFilterBase d m_bAutoDel d m_dev d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterbase.cpp</field>
    <field name="url">kfilterbase_8cpp_source.html#l00050</field>
    <field name="keywords"></field>
    <field name="text">KFilterBase::setDevice QIODevice dev autodelete d m_dev dev d m_bAutoDel autodelete</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterbase.cpp</field>
    <field name="url">kfilterbase_8cpp_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">QIODevice KFilterBase::device d m_dev</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterbase.cpp</field>
    <field name="url">kfilterbase_8cpp_source.html#l00061</field>
    <field name="keywords"></field>
    <field name="text">KFilterBase::inBufferEmpty inBufferAvailable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterbase.cpp</field>
    <field name="url">kfilterbase_8cpp_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">KFilterBase::outBufferFull outBufferAvailable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterbase.cpp</field>
    <field name="url">kfilterbase_8cpp_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">KFilterBase::terminate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterbase.cpp</field>
    <field name="url">kfilterbase_8cpp_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text">KFilterBase::reset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterbase.cpp</field>
    <field name="url">kfilterbase_8cpp_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">KFilterBase::setFilterFlags FilterFlags flags d m_flags flags KFilterBase::FilterFlags KFilterBase::filterFlags d m_flags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterbase.cpp</field>
    <field name="url">kfilterbase_8cpp_source.html#l00090</field>
    <field name="keywords"></field>
    <field name="text">KFilterBase::virtual_hook</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterbase.h</field>
    <field name="url">kfilterbase_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KFilterBasePrivate QIODevice</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterbase.h</field>
    <field name="url">kfilterbase_8h_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">KARCHIVE_EXPORT KFilterBase KFilterBase KFilterBase setDevice QIODevice dev autodelete QIODevice device init mode mode terminate reset readHeader writeHeader QByteArray filename setOutBuffer data uint maxlen setInBuffer data uint size inBufferEmpty inBufferAvailable outBufferFull outBufferAvailable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterbase.h</field>
    <field name="url">kfilterbase_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text">Result Ok End Error Result uncompress Result compress finish</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterbase.h</field>
    <field name="url">kfilterbase_8h_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text">FilterFlags NoHeaders WithHeaders ZlibHeaders setFilterFlags FilterFlags flags FilterFlags filterFlags virtual_hook data Q_DISABLE_COPY KFilterBase KFilterBasePrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterdev.cpp</field>
    <field name="url">kfilterdev_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCompressionDevice::CompressionType findCompressionByFileName QString fileName fileName endsWith QLatin1String Qt::CaseInsensitive KCompressionDevice::GZip fileName endsWith QLatin1String Qt::CaseInsensitive KCompressionDevice::BZip2 fileName endsWith QLatin1String Qt::CaseInsensitive fileName endsWith QLatin1String Qt::CaseInsensitive KCompressionDevice::Xz KCompressionDevice::None</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterdev.cpp</field>
    <field name="url">kfilterdev_8cpp_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">KFilterDev::KFilterDev QString fileName KCompressionDevice fileName findCompressionByFileName fileName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterdev.cpp</field>
    <field name="url">kfilterdev_8cpp_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">KCompressionDevice::CompressionType KFilterDev::compressionTypeForMimeType QString mimeType mimeType QLatin1String KCompressionDevice::GZip mimeType QLatin1String mimeType QLatin1String KCompressionDevice::BZip2 mimeType QLatin1String mimeType QLatin1String KCompressionDevice::Xz QMimeDatabase db QMimeType mime db mimeTypeForName mimeType mime isValid mime inherits QStringLiteral KCompressionDevice::GZip mime inherits QStringLiteral KCompressionDevice::BZip2 mime inherits QStringLiteral KCompressionDevice::Xz mime inherits QStringLiteral KCompressionDevice::Xz KCompressionDevice::None</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterdev.h</field>
    <field name="url">kfilterdev_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QFile KFilterBase</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterdev.h</field>
    <field name="url">kfilterdev_8h_source.html#l00039</field>
    <field name="keywords"></field>
    <field name="text">KARCHIVE_EXPORT KFilterDev KCompressionDevice KFilterDev QString fileName CompressionType compressionTypeForMimeType QString mimetype</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterdev.h</field>
    <field name="url">kfilterdev_8h_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text">KARCHIVE_DEPRECATED KCompressionDevice deviceForFile QString fileName QString mimetype QString forceFilter KCompressionDevice device mimetype isEmpty device KFilterDev fileName device KCompressionDevice fileName compressionTypeForMimeType mimetype device compressionType KCompressionDevice::None forceFilter device device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilterdev.h</field>
    <field name="url">kfilterdev_8h_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text">KARCHIVE_DEPRECATED KCompressionDevice device QIODevice inDevice QString mimetype autoDeleteInDevice inDevice CompressionType type compressionTypeForMimeType mimetype KCompressionDevice device KCompressionDevice inDevice autoDeleteInDevice type device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgzipfilter.cpp</field>
    <field name="url">kgzipfilter_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KGzipFilter::Private Private headerWritten false footerWritten false compressed false mode crc isInitialized false zStream zalloc alloc_func zStream zfree free_func zStream opaque voidpf z_stream zStream headerWritten footerWritten compressed mode ulong crc isInitialized KGzipFilter::KGzipFilter d new Private KGzipFilter::~KGzipFilter d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgzipfilter.cpp</field>
    <field name="url">kgzipfilter_8cpp_source.html#l00068</field>
    <field name="keywords"></field>
    <field name="text">KGzipFilter::init mode filterFlags NoHeaders init mode RawDeflate WithHeaders init mode GZipHeader ZlibHeaders init mode ZlibHeader KGzipFilter::init mode Flag flag d isInitialized terminate d zStream next_in Z_NULL d zStream avail_in mode QIODevice::ReadOnly windowBits flag RawDeflate MAX_WBITS flag GZipHeader MAX_WBITS MAX_WBITS result inflateInit2 d zStream windowBits result Z_OK mode QIODevice::WriteOnly result deflateInit2 d zStream Z_DEFAULT_COMPRESSION Z_DEFLATED MAX_WBITS Z_DEFAULT_STRATEGY result Z_OK d mode mode d compressed d headerWritten d footerWritten d isInitialized</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgzipfilter.cpp</field>
    <field name="url">kgzipfilter_8cpp_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text">KGzipFilter::mode d mode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgzipfilter.cpp</field>
    <field name="url">kgzipfilter_8cpp_source.html#l00122</field>
    <field name="keywords"></field>
    <field name="text">KGzipFilter::terminate d mode QIODevice::ReadOnly result inflateEnd d zStream result Z_OK d mode QIODevice::WriteOnly result deflateEnd d zStream result Z_OK d isInitialized</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgzipfilter.cpp</field>
    <field name="url">kgzipfilter_8cpp_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text">KGzipFilter::reset d mode QIODevice::ReadOnly result inflateReset d zStream result Z_OK d mode QIODevice::WriteOnly result deflateReset d zStream result Z_OK d headerWritten d footerWritten</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgzipfilter.cpp</field>
    <field name="url">kgzipfilter_8cpp_source.html#l00160</field>
    <field name="keywords"></field>
    <field name="text">KGzipFilter::readHeader qDebug d zStream avail_in d compressed Bytef p d zStream next_in i d zStream avail_in i qDebug QString::number p p x1f qDebug QString::number p p x8b d compressed qDebug</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgzipfilter.cpp</field>
    <field name="url">kgzipfilter_8cpp_source.html#l00205</field>
    <field name="keywords"></field>
    <field name="text">KGzipFilter::writeHeader QByteArray fileName Bytef p d zStream next_out i d zStream avail_out p p p Z_DEFLATED p ORIG_NAME put_long time L p p uint len fileName length uint j j len j p fileName j p headerSize p d zStream next_out i headerSize Q_ASSERT i d crc crc32 L Z_NULL d zStream next_out p d zStream avail_out i d headerWritten KGzipFilter::writeFooter Q_ASSERT d headerWritten Q_ASSERT d footerWritten Bytef p d zStream next_out i d zStream avail_out put_long d crc put_long d zStream total_in i p d zStream next_out d zStream next_out p d zStream avail_out i d footerWritten</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgzipfilter.cpp</field>
    <field name="url">kgzipfilter_8cpp_source.html#l00248</field>
    <field name="keywords"></field>
    <field name="text">KGzipFilter::setOutBuffer data uint maxlen d zStream avail_out maxlen d zStream next_out Bytef data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgzipfilter.cpp</field>
    <field name="url">kgzipfilter_8cpp_source.html#l00253</field>
    <field name="keywords"></field>
    <field name="text">KGzipFilter::setInBuffer data uint size qDebug size d zStream avail_in size d zStream next_in Bytef data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgzipfilter.cpp</field>
    <field name="url">kgzipfilter_8cpp_source.html#l00261</field>
    <field name="keywords"></field>
    <field name="text">KGzipFilter::inBufferAvailable d zStream avail_in</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgzipfilter.cpp</field>
    <field name="url">kgzipfilter_8cpp_source.html#l00265</field>
    <field name="keywords"></field>
    <field name="text">KGzipFilter::outBufferAvailable d zStream avail_out KGzipFilter::Result KGzipFilter::uncompress_noop d zStream avail_in n d zStream avail_in d zStream avail_out d zStream avail_in d zStream avail_out memcpy d zStream next_out d zStream next_in n d zStream avail_out n d zStream next_in n d zStream avail_in n KFilterBase::Ok KFilterBase::End</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgzipfilter.cpp</field>
    <field name="url">kgzipfilter_8cpp_source.html#l00287</field>
    <field name="keywords"></field>
    <field name="text">KGzipFilter::Result KGzipFilter::uncompress d mode KFilterBase::Error d mode QIODevice::WriteOnly KFilterBase::Error Q_ASSERT d mode QIODevice::ReadOnly d compressed uncompress_noop qDebug inBufferAvailable outBufferAvailable qDebug d zStream next_in d zStream avail_in result inflate d zStream Z_SYNC_FLUSH qDebug result qDebug inBufferAvailable outBufferAvailable qDebug d zStream next_in result Z_OK KFilterBase::Ok result Z_STREAM_END KFilterBase::Error d zStream avail_in KFilterBase::End Bytef data d zStream next_in uInt size d zStream avail_in init d mode KFilterBase::End d zStream next_in data d zStream avail_in size KFilterBase::End</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgzipfilter.cpp</field>
    <field name="url">kgzipfilter_8cpp_source.html#l00349</field>
    <field name="keywords"></field>
    <field name="text">KGzipFilter::Result KGzipFilter::compress finish Q_ASSERT d compressed Q_ASSERT d mode QIODevice::WriteOnly Bytef p d zStream next_in ulong len d zStream avail_in qDebug inBufferAvailable outBufferAvailable result deflate d zStream finish Z_FINISH Z_NO_FLUSH result Z_OK result Z_STREAM_END d headerWritten d crc crc32 d crc p len d zStream avail_in KGzipFilter::Result callerResult result Z_OK KFilterBase::Ok Z_STREAM_END KFilterBase::End KFilterBase::Error result Z_STREAM_END d headerWritten d footerWritten d zStream avail_out writeFooter callerResult KFilterBase::Ok callerResult</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgzipfilter.h</field>
    <field name="url">kgzipfilter_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgzipfilter.h</field>
    <field name="url">kgzipfilter_8h_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">KGzipFilter KFilterBase KGzipFilter KGzipFilter init mode Q_DECL_OVERRIDE Flag RawDeflate ZlibHeader GZipHeader init mode Flag flag mode Q_DECL_OVERRIDE terminate Q_DECL_OVERRIDE reset Q_DECL_OVERRIDE readHeader Q_DECL_OVERRIDE writeHeader QByteArray fileName Q_DECL_OVERRIDE writeFooter setOutBuffer data uint maxlen Q_DECL_OVERRIDE setInBuffer data uint size Q_DECL_OVERRIDE inBufferAvailable Q_DECL_OVERRIDE outBufferAvailable Q_DECL_OVERRIDE Result uncompress Q_DECL_OVERRIDE Result compress finish Q_DECL_OVERRIDE Result uncompress_noop Private Private d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">klimitediodevice.cpp</field>
    <field name="url">klimitediodevice_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KLimitedIODevice::KLimitedIODevice QIODevice dev qint64 start qint64 length m_dev dev m_start start m_length length open QIODevice::ReadOnly KLimitedIODevice::open QIODevice::OpenMode m m QIODevice::ReadOnly m_dev seek m_start setOpenMode QIODevice::ReadOnly KLimitedIODevice::close qint64 KLimitedIODevice::size m_length qint64 KLimitedIODevice::readData data qint64 maxlen maxlen qMin maxlen m_length pos m_dev read data maxlen KLimitedIODevice::seek qint64 pos Q_ASSERT pos m_length pos qMin pos m_length ret m_dev seek m_start pos ret QIODevice::seek pos ret qint64 KLimitedIODevice::bytesAvailable QIODevice::bytesAvailable KLimitedIODevice::isSequential m_dev isSequential</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">knonefilter.cpp</field>
    <field name="url">knonefilter_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KNoneFilter::Private Private mode avail_out avail_in next_in NULL next_out NULL mode avail_out avail_in next_in next_out KNoneFilter::KNoneFilter d new Private KNoneFilter::~KNoneFilter d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">knonefilter.cpp</field>
    <field name="url">knonefilter_8cpp_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">KNoneFilter::init mode d mode mode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">knonefilter.cpp</field>
    <field name="url">knonefilter_8cpp_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">KNoneFilter::mode d mode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">knonefilter.cpp</field>
    <field name="url">knonefilter_8cpp_source.html#l00067</field>
    <field name="keywords"></field>
    <field name="text">KNoneFilter::terminate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">knonefilter.cpp</field>
    <field name="url">knonefilter_8cpp_source.html#l00072</field>
    <field name="keywords"></field>
    <field name="text">KNoneFilter::reset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">knonefilter.cpp</field>
    <field name="url">knonefilter_8cpp_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text">KNoneFilter::readHeader</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">knonefilter.cpp</field>
    <field name="url">knonefilter_8cpp_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">KNoneFilter::writeHeader QByteArray</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">knonefilter.cpp</field>
    <field name="url">knonefilter_8cpp_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text">KNoneFilter::setOutBuffer data uint maxlen d avail_out maxlen d next_out data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">knonefilter.cpp</field>
    <field name="url">knonefilter_8cpp_source.html#l00092</field>
    <field name="keywords"></field>
    <field name="text">KNoneFilter::setInBuffer data uint size d next_in data d avail_in size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">knonefilter.cpp</field>
    <field name="url">knonefilter_8cpp_source.html#l00098</field>
    <field name="keywords"></field>
    <field name="text">KNoneFilter::inBufferAvailable d avail_in</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">knonefilter.cpp</field>
    <field name="url">knonefilter_8cpp_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text">KNoneFilter::outBufferAvailable d avail_out</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">knonefilter.cpp</field>
    <field name="url">knonefilter_8cpp_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text">KNoneFilter::Result KNoneFilter::uncompress d mode QIODevice::ReadOnly KFilterBase::Error copyData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">knonefilter.cpp</field>
    <field name="url">knonefilter_8cpp_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text">KNoneFilter::Result KNoneFilter::compress finish Q_ASSERT d mode QIODevice::WriteOnly Q_UNUSED finish copyData KNoneFilter::Result KNoneFilter::copyData Q_ASSERT d avail_out d avail_in n qMin d avail_in d avail_out memcpy d next_out d next_in n d avail_out n d next_in n d next_out n d avail_in n KFilterBase::Ok KFilterBase::End</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">knonefilter.h</field>
    <field name="url">knonefilter_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">knonefilter.h</field>
    <field name="url">knonefilter_8h_source.html#l00035</field>
    <field name="keywords"></field>
    <field name="text">KNoneFilter KFilterBase KNoneFilter KNoneFilter init mode Q_DECL_OVERRIDE mode Q_DECL_OVERRIDE terminate Q_DECL_OVERRIDE reset Q_DECL_OVERRIDE readHeader Q_DECL_OVERRIDE writeHeader QByteArray fileName Q_DECL_OVERRIDE setOutBuffer data uint maxlen Q_DECL_OVERRIDE setInBuffer data uint size Q_DECL_OVERRIDE inBufferAvailable Q_DECL_OVERRIDE outBufferAvailable Q_DECL_OVERRIDE Result uncompress Q_DECL_OVERRIDE Result compress finish Q_DECL_OVERRIDE Result copyData Private Private d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krcc.cpp</field>
    <field name="url">krcc_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KRcc::KRccPrivate KRccPrivate createEntries QDir dir KArchiveDirectory parentDir KRcc q QString m_prefix KARCHIVE_EXPORT KRccFileEntry KArchiveFile KRccFileEntry KArchive archive QString name access QDateTime date QString user QString group qint64 size QString resourcePath KArchiveFile archive name access date user group QString size m_resourcePath resourcePath QByteArray data const Q_DECL_OVERRIDE QFile f m_resourcePath f open QIODevice::ReadOnly f readAll qWarning m_resourcePath QByteArray QIODevice createDevice const Q_DECL_OVERRIDE QFile m_resourcePath QString m_resourcePath</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krcc.cpp</field>
    <field name="url">krcc_8cpp_source.html#l00073</field>
    <field name="keywords"></field>
    <field name="text">KRcc::KRcc QString filename KArchive filename d new KRccPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krcc.cpp</field>
    <field name="url">krcc_8cpp_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text">KRcc::~KRcc isOpen close d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krcc.cpp</field>
    <field name="url">krcc_8cpp_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">KRcc::doPrepareWriting QString QString QString qint64 mode_t QDateTime QDateTime QDateTime</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krcc.cpp</field>
    <field name="url">krcc_8cpp_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text">KRcc::doFinishWriting qint64</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krcc.cpp</field>
    <field name="url">krcc_8cpp_source.html#l00098</field>
    <field name="keywords"></field>
    <field name="text">KRcc::doWriteDir QString QString QString mode_t QDateTime QDateTime QDateTime</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krcc.cpp</field>
    <field name="url">krcc_8cpp_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text">KRcc::doWriteSymLink QString QString QString QString mode_t QDateTime QDateTime QDateTime</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krcc.cpp</field>
    <field name="url">krcc_8cpp_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text">KRcc::openArchive QIODevice::OpenMode mode mode QIODevice::WriteOnly mode QIODevice::ReadOnly mode QIODevice::ReadWrite QUuid uuid QUuid::createUuid d m_prefix QLatin1Char uuid toString QResource::registerResource fileName d m_prefix QDir dir QLatin1Char d m_prefix d createEntries dir rootDir KRcc::KRccPrivate::createEntries QDir dir KArchiveDirectory parentDir KRcc q Q_FOREACH QString fileName dir entryList QString entryPath dir path QLatin1Char fileName QFileInfo info entryPath info isFile KArchiveEntry entry KRccFileEntry q fileName info lastModified parentDir user parentDir group info size entryPath parentDir addEntry entry KArchiveDirectory entry KArchiveDirectory q fileName info lastModified parentDir user parentDir group QString parentDir addEntry entry createEntries QDir entryPath entry q</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krcc.cpp</field>
    <field name="url">krcc_8cpp_source.html#l00151</field>
    <field name="keywords"></field>
    <field name="text">KRcc::closeArchive QResource::unregisterResource fileName d m_prefix KRcc::virtual_hook data KArchive::virtual_hook data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krcc.h</field>
    <field name="url">krcc_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krcc.h</field>
    <field name="url">krcc_8h_source.html#l00033</field>
    <field name="keywords"></field>
    <field name="text">KARCHIVE_EXPORT KRcc KArchive KRcc QString filename KRcc doPrepareWriting QString name QString user QString group qint64 size mode_t perm QDateTime atime QDateTime mtime QDateTime ctime Q_DECL_OVERRIDE doFinishWriting qint64 size Q_DECL_OVERRIDE doWriteDir QString name QString user QString group mode_t perm QDateTime atime QDateTime mtime QDateTime ctime Q_DECL_OVERRIDE doWriteSymLink QString name QString target QString user QString group mode_t perm QDateTime atime QDateTime mtime QDateTime ctime Q_DECL_OVERRIDE openArchive QIODevice::OpenMode mode Q_DECL_OVERRIDE closeArchive Q_DECL_OVERRIDE virtual_hook data Q_DECL_OVERRIDE KRccPrivate KRccPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktar.cpp</field>
    <field name="url">ktar_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">application_gzip application_bzip application_lzma application_xz KTar::KTarPrivate KTarPrivate KTar parent q parent tarEnd tmpFile KTar q QStringList dirList qint64 tarEnd QTemporaryFile tmpFile QString mimetype QByteArray origFileName fillTempFile QString fileName writeBackTempFile QString fileName fillBuffer buffer mode qint64 size QDateTime mtime typeflag uname gname writeLonglink buffer QByteArray name typeflag uname gname qint64 readRawHeader buffer readLonglink buffer QByteArray longlink qint64 readHeader buffer QString name QString symlink</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktar.cpp</field>
    <field name="url">ktar_8cpp_source.html#l00073</field>
    <field name="keywords"></field>
    <field name="text">KTar::KTar QString fileName QString _mimetype KArchive fileName d new KTarPrivate this d mimetype _mimetype</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktar.cpp</field>
    <field name="url">ktar_8cpp_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">KTar::KTar QIODevice dev KArchive dev d new KTarPrivate this</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktar.cpp</field>
    <field name="url">ktar_8cpp_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">KTar::createDevice QIODevice::OpenMode mode d mimetype isEmpty QMimeDatabase db QMimeType mime mode QIODevice::WriteOnly QFile::exists fileName QFile f fileName f open QIODevice::ReadOnly mime db mimeTypeForData f mime isValid mime db mimeTypeForFile fileName QMimeDatabase::MatchExtension mime db mimeTypeForFile fileName QMimeDatabase::MatchExtension mime inherits QStringLiteral mime inherits QString::fromLatin1 application_gzip d mimetype QString::fromLatin1 application_gzip mime inherits QStringLiteral mime inherits QString::fromLatin1 application_bzip d mimetype QString::fromLatin1 application_bzip mime inherits QStringLiteral mime inherits QString::fromLatin1 application_lzma d mimetype QString::fromLatin1 application_lzma mime inherits QStringLiteral mime inherits QString::fromLatin1 application_xz d mimetype QString::fromLatin1 application_xz d mimetype QLatin1String KArchive::createDevice mode mode QIODevice::WriteOnly KArchive::createDevice mode d mimetype isEmpty KCompressionDevice::CompressionType type KFilterDev::compressionTypeForMimeType d mimetype KCompressionDevice compressionDevice KCompressionDevice device type setDevice compressionDevice Q_ASSERT d tmpFile d tmpFile QTemporaryFile d tmpFile setFileTemplate QDir::tempPath QStringLiteral QLatin1String d tmpFile open setDevice d tmpFile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktar.cpp</field>
    <field name="url">ktar_8cpp_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text">KTar::~KTar isOpen close d tmpFile d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktar.cpp</field>
    <field name="url">ktar_8cpp_source.html#l00173</field>
    <field name="keywords"></field>
    <field name="text">KTar::setOrigFileName QByteArray fileName isOpen mode QIODevice::WriteOnly d origFileName fileName qint64 KTar::KTarPrivate::readRawHeader buffer qint64 n q device read buffer x200 n x200 buffer buffer x159 strncmp buffer check uint j j j check buffer j uint j j j check buffer j check QByteArray s QByteArray::number check strncmp buffer s length s data s length strncmp buffer s length s data s length strncmp buffer s length s data s length n x200 n n KTar::KTarPrivate::readLonglink buffer QByteArray longlink qint64 n QIODevice dev q device qint64 size QByteArray buffer x7c trimmed toLongLong size longlink resize size qint64 offset size chunksize qMin size x200LL n dev read longlink data offset chunksize n size chunksize offset skip n skip x200 dev read buffer skip skip longlink truncate qstrlen longlink constData qint64 KTar::KTarPrivate::readHeader buffer QString name QString symlink name truncate symlink truncate qint64 n readRawHeader buffer n x200 n strcmp buffer typeflag buffer QByteArray longlink readLonglink buffer longlink typeflag name QFile::decodeName longlink constData symlink QFile::decodeName longlink constData name isEmpty name QFile::decodeName QByteArray buffer qstrnlen buffer symlink isEmpty symlinkBuffer buffer symlink QFile::decodeName QByteArray symlinkBuffer qstrnlen symlinkBuffer KTar::KTarPrivate::fillTempFile QString fileName tmpFile KCompressionDevice::CompressionType compressionType KFilterDev::compressionTypeForMimeType mimetype KCompressionDevice filterDev fileName compressionType QFile file tmpFile Q_ASSERT file isOpen Q_ASSERT file openMode QIODevice::WriteOnly file seek QByteArray buffer buffer resize filterDev open QIODevice::ReadOnly qint64 len filterDev atEnd len len filterDev read buffer data buffer size len file write buffer data len len filterDev close file flush file seek Q_ASSERT file isOpen Q_ASSERT file openMode QIODevice::ReadOnly</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktar.cpp</field>
    <field name="url">ktar_8cpp_source.html#l00348</field>
    <field name="keywords"></field>
    <field name="text">KTar::openArchive QIODevice::OpenMode mode mode QIODevice::ReadOnly d fillTempFile fileName d dirList clear QIODevice dev device dev buffer ende QString name QString symlink qint64 n d readHeader buffer name symlink n n x200 isdir name endsWith QLatin1Char isdir name truncate name length QByteArray prefix QByteArray buffer x159 prefix name QString::fromLatin1 prefix constData QLatin1Char name pos name lastIndexOf QLatin1Char QString nm pos name name mid pos buffer dummy p buffer p p access strtol p dummy QString user QString::fromLocal8Bit buffer x109 QString group QString::fromLocal8Bit buffer x129 buffer p buffer p p uint time strtol p dummy typeflag buffer typeflag isdir isDumpDir typeflag isdir isDumpDir typeflag typeflag void dev read buffer x200 isdir access S_IFDIR KArchiveEntry e isdir e KArchiveDirectory nm access KArchivePrivate::time_tToDateTime time user group symlink QByteArray sizeBuffer buffer x7c qint64 size sizeBuffer trimmed toLongLong isDumpDir e KArchiveDirectory nm access KArchivePrivate::time_tToDateTime time user group symlink typeflag size e KArchiveFile nm access KArchivePrivate::time_tToDateTime time user group symlink dev pos size qint64 rest size qint64 skip size rest rest dev seek dev pos skip pos nm QLatin1String Q_ASSERT isdir isdir setRootDir static_cast&lt;KArchiveDirectory *&gt; e rootDir addEntry e QString path QDir::cleanPath name left pos KArchiveDirectory d findOrCreate path d addEntry e d tarEnd dev pos n ende ende KTar::KTarPrivate::writeBackTempFile QString fileName tmpFile forced QLatin1String application_gzip mimetype QLatin1String application_bzip mimetype QLatin1String application_lzma mimetype QLatin1String application_xz mimetype forced KFilterDev dev fileName QFile file tmpFile dev open QIODevice::WriteOnly file close forced dev setOrigFileName origFileName file seek QByteArray buffer buffer resize qint64 len file atEnd len file read buffer data buffer size dev write buffer data len file close dev close</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktar.cpp</field>
    <field name="url">ktar_8cpp_source.html#l00556</field>
    <field name="keywords"></field>
    <field name="text">KTar::closeArchive d dirList clear ok d tmpFile mode QIODevice::WriteOnly ok d writeBackTempFile fileName d tmpFile d tmpFile setDevice ok</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktar.cpp</field>
    <field name="url">ktar_8cpp_source.html#l00575</field>
    <field name="keywords"></field>
    <field name="text">KTar::doFinishWriting qint64 size rest size mode QIODevice::ReadWrite QIODevice::ReadWrite d tarEnd device pos rest rest rest buffer uint i i i buffer i qint64 nwritten device write buffer x200 rest nwritten rest KTar::KTarPrivate::fillBuffer buffer mode qint64 size QDateTime mtime typeflag uname gname assert strlen mode memcpy buffer x64 mode buffer buffer strcpy buffer x6c strcpy buffer x74 QByteArray s QByteArray::number size s s rightJustified memcpy buffer x7c s data buffer QDateTime modificationTime mtime isValid mtime QDateTime::currentDateTime s QByteArray::number static_cast&lt;qulonglong&gt; modificationTime toMSecsSinceEpoch s s rightJustified memcpy buffer x88 s data buffer buffer buffer buffer buffer buffer buffer buffer buffer buffer typeflag strcpy buffer x101 strcpy buffer x107 strcpy buffer x109 uname strcpy buffer x129 gname check uint j j j check buffer j s QByteArray::number check s s rightJustified memcpy buffer x94 s constData KTar::KTarPrivate::writeLonglink buffer QByteArray name typeflag uname gname strcpy buffer qint64 namelen name length fillBuffer buffer namelen QDateTime typeflag uname gname q device write buffer x200 qint64 offset namelen chunksize qMin namelen x200LL memcpy buffer name data offset chunksize q device write buffer x200 namelen chunksize offset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktar.cpp</field>
    <field name="url">ktar_8cpp_source.html#l00701</field>
    <field name="keywords"></field>
    <field name="text">KTar::doPrepareWriting QString name QString user QString group qint64 size mode_t perm QDateTime QDateTime mtime QDateTime isOpen mode QIODevice::WriteOnly QString fileName QDir::cleanPath name buffer memset buffer x200 mode QIODevice::ReadWrite QIODevice::ReadWrite device seek d tarEnd QByteArray encodedFileName QFile::encodeName fileName QByteArray uname user toLocal8Bit QByteArray gname group toLocal8Bit fileName length d writeLonglink buffer encodedFileName uname constData gname constData strncpy buffer encodedFileName constData buffer memset buffer x9d x200 x9d QByteArray permstr QByteArray::number static_cast&lt;unsigned int&gt; perm permstr permstr rightJustified d fillBuffer buffer permstr constData size mtime uname constData gname constData device write buffer x200</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktar.cpp</field>
    <field name="url">ktar_8cpp_source.html#l00767</field>
    <field name="keywords"></field>
    <field name="text">KTar::doWriteDir QString name QString user QString group mode_t perm QDateTime QDateTime mtime QDateTime isOpen mode QIODevice::WriteOnly QString dirName QDir::cleanPath name dirName endsWith QLatin1Char dirName QLatin1Char d dirList contains dirName buffer memset buffer x200 mode QIODevice::ReadWrite QIODevice::ReadWrite device seek d tarEnd QByteArray encodedDirname QFile::encodeName dirName QByteArray uname user toLocal8Bit QByteArray gname group toLocal8Bit dirName length d writeLonglink buffer encodedDirname uname constData gname constData strncpy buffer encodedDirname constData buffer memset buffer x9d x200 x9d QByteArray permstr QByteArray::number static_cast&lt;unsigned int&gt; perm permstr permstr rightJustified d fillBuffer buffer permstr constData mtime uname constData gname constData device write buffer x200 mode QIODevice::ReadWrite QIODevice::ReadWrite d tarEnd device pos d dirList append dirName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktar.cpp</field>
    <field name="url">ktar_8cpp_source.html#l00829</field>
    <field name="keywords"></field>
    <field name="text">KTar::doWriteSymLink QString name QString target QString user QString group mode_t perm QDateTime QDateTime mtime QDateTime isOpen mode QIODevice::WriteOnly QString fileName QDir::cleanPath name buffer memset buffer x200 mode QIODevice::ReadWrite QIODevice::ReadWrite device seek d tarEnd QByteArray encodedFileName QFile::encodeName fileName QByteArray encodedTarget QFile::encodeName target QByteArray uname user toLocal8Bit QByteArray gname group toLocal8Bit target length d writeLonglink buffer encodedTarget uname constData gname constData fileName length d writeLonglink buffer encodedFileName uname constData gname constData strncpy buffer encodedFileName constData buffer strncpy buffer x9d encodedTarget constData buffer memset buffer x9d x200 x9d QByteArray permstr QByteArray::number static_cast&lt;unsigned int&gt; perm permstr permstr rightJustified d fillBuffer buffer permstr constData mtime uname constData gname constData retval device write buffer x200 mode QIODevice::ReadWrite QIODevice::ReadWrite d tarEnd device pos retval KTar::virtual_hook data KArchive::virtual_hook data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktar.h</field>
    <field name="url">ktar_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktar.h</field>
    <field name="url">ktar_8h_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">KARCHIVE_EXPORT KTar KArchive KTar QString filename QString mimetype QString KTar QIODevice dev KTar setOrigFileName QByteArray fileName doWriteSymLink QString name QString target QString user QString group mode_t perm QDateTime atime QDateTime mtime QDateTime ctime Q_DECL_OVERRIDE doWriteDir QString name QString user QString group mode_t perm QDateTime atime QDateTime mtime QDateTime ctime Q_DECL_OVERRIDE doPrepareWriting QString name QString user QString group qint64 size mode_t perm QDateTime atime QDateTime mtime QDateTime ctime Q_DECL_OVERRIDE doFinishWriting qint64 size Q_DECL_OVERRIDE openArchive QIODevice::OpenMode mode Q_DECL_OVERRIDE closeArchive Q_DECL_OVERRIDE createDevice QIODevice::OpenMode mode Q_DECL_OVERRIDE virtual_hook data Q_DECL_OVERRIDE KTarPrivate KTarPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kxzfilter.cpp</field>
    <field name="url">kxzfilter_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KXzFilter::Private Private isInitialized false memset zStream zStream mode lzma_stream zStream lzma_filter filters props mode isInitialized KXzFilter::Flag flag KXzFilter::KXzFilter d new Private KXzFilter::~KXzFilter d KXzFilter::init mode QVector&lt;unsigned char&gt; props init mode AUTO props KXzFilter::init mode Flag flag QVector&lt;unsigned char&gt; properties d isInitialized terminate d flag flag lzma_ret result d zStream next_in d zStream avail_in mode QIODevice::ReadOnly flag AUTO result lzma_auto_decoder d zStream result LZMA_OK qWarning result LZMA d filters id LZMA_FILTER_LZMA1 d filters options NULL d filters id LZMA_VLI_UNKNOWN d filters options NULL Q_ASSERT properties size props i i properties size i props i properties i result lzma_properties_decode d filters NULL props sizeof props result LZMA_OK qWarning result LZMA2 d filters id LZMA_FILTER_LZMA2 d filters options NULL d filters id LZMA_VLI_UNKNOWN d filters options NULL Q_ASSERT properties size props props properties result lzma_properties_decode d filters NULL props sizeof props result LZMA_OK qWarning result BCJ d filters id LZMA_FILTER_X86 d filters options NULL props d filters id LZMA_FILTER_LZMA1 d filters options NULL result lzma_properties_decode d filters NULL props sizeof props result LZMA_OK qWarning result d filters id LZMA_VLI_UNKNOWN d filters options NULL POWERPC IA64 ARM ARMTHUMB SPARC flag AUTO result lzma_raw_decoder d zStream d filters result LZMA_OK qWarning result mode QIODevice::WriteOnly flag AUTO result lzma_easy_encoder d zStream LZMA_PRESET_DEFAULT LZMA_CHECK_CRC32 LZMA2 lzma_options_lzma lzma_opt lzma_lzma_preset lzma_opt LZMA_PRESET_DEFAULT d filters id LZMA_FILTER_LZMA2 d filters options lzma_opt d filters id LZMA_VLI_UNKNOWN d filters options NULL result lzma_raw_encoder d zStream d filters result LZMA_OK qWarning result d mode mode d isInitialized KXzFilter::mode d mode KXzFilter::terminate d mode QIODevice::ReadOnly d mode QIODevice::WriteOnly lzma_end d zStream d isInitialized KXzFilter::reset terminate init d mode KXzFilter::setOutBuffer data uint maxlen d zStream avail_out maxlen d zStream next_out uint8_t data KXzFilter::setInBuffer data size d zStream avail_in size d zStream next_in uint8_t const_cast&lt;char *&gt; data KXzFilter::inBufferAvailable d zStream avail_in KXzFilter::outBufferAvailable d zStream avail_out KXzFilter::Result KXzFilter::uncompress lzma_ret result result lzma_code d zStream LZMA_RUN result LZMA_OK KFilterBase::Ok LZMA_STREAM_END KFilterBase::End KFilterBase::Error KXzFilter::Result KXzFilter::compress finish lzma_ret result lzma_code d zStream finish LZMA_FINISH LZMA_RUN result LZMA_OK KFilterBase::Ok LZMA_STREAM_END KFilterBase::End KFilterBase::Error</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kxzfilter.h</field>
    <field name="url">kxzfilter_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KXzFilter KFilterBase KXzFilter KXzFilter init Q_DECL_OVERRIDE Flag AUTO LZMA LZMA2 BCJ POWERPC IA64 ARM ARMTHUMB SPARC init Flag flag QVector&lt;unsigned char&gt; props mode const Q_DECL_OVERRIDE terminate Q_DECL_OVERRIDE reset Q_DECL_OVERRIDE readHeader Q_DECL_OVERRIDE writeHeader QByteArray Q_DECL_OVERRIDE setOutBuffer data uint maxlen Q_DECL_OVERRIDE setInBuffer data uint size Q_DECL_OVERRIDE inBufferAvailable const Q_DECL_OVERRIDE outBufferAvailable const Q_DECL_OVERRIDE Result uncompress Q_DECL_OVERRIDE Result compress finish Q_DECL_OVERRIDE private class Private Private const d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">max_path_len transformToMsDos QDateTime _dt buffer QDateTime dt _dt isValid _dt QDateTime::currentDateTime quint16 time dt time hour dt time minute dt time second buffer char time buffer char time quint16 date dt date year dt date month dt date day buffer char date buffer char date uint transformFromMsDos buffer quint16 time uchar buffer uchar buffer h time m time s time QTime qt h m s quint16 date uchar buffer uchar buffer y date o date d date QDate qd y o d QDateTime dt qd qt dt toTime_t ParseFileInfo mode_t perm uint atime uint mtime uint ctime uid gid QByteArray guessed_symlink extralen exttimestamp_seen newinfounix_seen ParseFileInfo perm uid gid extralen exttimestamp_seen false newinfounix_seen false ctime mtime atime time parseExtTimestamp buffer size islocal ParseFileInfo pfi size flags buffer buffer size flags size pfi mtime uint uchar buffer uchar buffer uchar buffer uchar buffer buffer size islocal pfi exttimestamp_seen flags size pfi atime uint uchar buffer uchar buffer uchar buffer uchar buffer buffer size flags size pfi ctime uint uchar buffer uchar buffer uchar buffer uchar buffer buffer pfi exttimestamp_seen parseInfoZipUnixOld buffer size islocal ParseFileInfo pfi pfi exttimestamp_seen pfi newinfounix_seen size pfi atime uint uchar buffer uchar buffer uchar buffer uchar buffer buffer pfi mtime uint uchar buffer uchar buffer uchar buffer uchar buffer buffer islocal size pfi uid uchar buffer uchar buffer buffer pfi gid uchar buffer uchar buffer buffer parseInfoZipUnixNew buffer size islocal ParseFileInfo pfi islocal pfi newinfounix size qDebug pfi uid uchar buffer uchar buffer buffer pfi gid uchar buffer uchar buffer buffer pfi newinfounix parseExtraField buffer size islocal ParseFileInfo pfi islocal size magic uchar buffer uchar buffer buffer fieldsize uchar buffer uchar buffer buffer size fieldsize size magic parseExtTimestamp buffer fieldsize islocal pfi parseInfoZipUnixOld buffer fieldsize islocal pfi parseInfoZipUnixNew buffer fieldsize islocal pfi buffer fieldsize size fieldsize handlePossibleHeaderBegin buffer QIODevice dev buffer buffer buffer dev seek dev pos buffer buffer buffer buffer dev seek dev pos seekToNextHeaderToken QIODevice dev headerTokenFound buffer headerTokenFound n dev read buffer n buffer n dev read buffer n handlePossibleHeaderBegin buffer dev headerTokenFound i i i buffer i dev seek dev pos i KZip::KZipPrivate KZipPrivate m_crc m_currentFile m_currentDev m_compression m_extraField KZip NoExtraField m_offset m_crc KZipFileEntry m_currentFile QIODevice m_currentDev QList&lt;KZipFileEntry *&gt; m_fileList m_compression KZip::ExtraField m_extraField quint64 m_offset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l00416</field>
    <field name="keywords"></field>
    <field name="text">KZip::KZip QString fileName KArchive fileName d new KZipPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l00422</field>
    <field name="keywords"></field>
    <field name="text">KZip::KZip QIODevice dev KArchive dev d new KZipPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l00428</field>
    <field name="keywords"></field>
    <field name="text">KZip::~KZip isOpen close d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l00437</field>
    <field name="keywords"></field>
    <field name="text">KZip::openArchive QIODevice::OpenMode mode d m_fileList clear mode QIODevice::WriteOnly buffer quint64 offset n QHash&lt;QByteArray, ParseFileInfo&gt; pfi_map QIODevice dev device startOfFile n dev read buffer n memcmp buffer startOfFile memcmp buffer startOfFile dev seek dev pos n dev read buffer n gpf uchar buffer compression_mode uchar buffer uchar buffer uint mtime transformFromMsDos buffer qint64 compr_size uint uchar buffer uint uchar buffer uint uchar buffer uint uchar buffer qint64 uncomp_size uint uchar buffer uint uchar buffer uint uchar buffer uint uchar buffer namelen uint uchar buffer uint uchar buffer extralen uint uchar buffer uint uchar buffer Q_ASSERT namelen QByteArray fileName dev read namelen fileName size namelen ParseFileInfo pfi pfi mtime mtime extraFieldEnd dev pos extralen pfi extralen extralen handledextralen qMin extralen buffer n dev read buffer handledextralen parseExtraField buffer handledextralen pfi dev seek extraFieldEnd gpf seekToNextHeaderToken dev foundSignature compression_mode NoCompression uncomp_size max_path_len uncomp_size pfi guessed_symlink dev read uncomp_size pfi guessed_symlink size uncomp_size compr_size dev size seekToNextHeaderToken dev foundSignature success dev seek dev pos compr_size Q_UNUSED success Q_ASSERT success foundSignature n dev read buffer n buffer handlePossibleHeaderBegin buffer dev dev seek dev pos pfi_map insert fileName pfi memcmp buffer startOfFile offset dev pos d m_offset d m_offset offset n dev read buffer n namelen uchar buffer uchar buffer Q_ASSERT namelen QByteArray bufferName dev read namelen bufferName size namelen ParseFileInfo pfi pfi_map value bufferName ParseFileInfo QString name QFile::decodeName bufferName extralen uchar buffer uchar buffer commlen uchar buffer uchar buffer cmethod uchar buffer uchar buffer uint crc32 uchar buffer uchar buffer uchar buffer uchar buffer uint ucsize uchar buffer uchar buffer uchar buffer uchar buffer uint csize uchar buffer uchar buffer uchar buffer uchar buffer uint localheaderoffset uchar buffer uchar buffer uchar buffer uchar buffer localextralen pfi extralen uint dataoffset localheaderoffset localextralen namelen os_madeby uchar buffer isdir access os_madeby access uchar buffer uchar buffer QString entryName name endsWith QLatin1Char isdir name name left name length os_madeby access S_IFDIR access S_IFDIR pos name lastIndexOf QLatin1Char pos entryName name entryName name mid pos Q_ASSERT entryName isEmpty KArchiveEntry entry isdir QString path QDir::cleanPath name KArchiveEntry ent rootDir entry path ent ent isDirectory entry QDateTime mtime KArchivePrivate::time_tToDateTime pfi mtime entry KArchiveDirectory entryName access mtime rootDir user rootDir group QString QString symlink access QT_STAT_MASK QT_STAT_LNK symlink QFile::decodeName pfi guessed_symlink QDateTime mtime KArchivePrivate::time_tToDateTime pfi mtime entry KZipFileEntry entryName access mtime rootDir user rootDir group symlink name dataoffset ucsize cmethod csize KZipFileEntry entry setHeaderStart localheaderoffset KZipFileEntry entry setCRC32 crc32 d m_fileList append static_cast&lt;KZipFileEntry *&gt; entry entry pos rootDir addEntry entry QString path QDir::cleanPath name left pos KArchiveDirectory tdir findOrCreate path tdir addEntry entry offset commlen extralen namelen b dev seek offset Q_ASSERT b b startOfFile startOfFile foundSignature foundSignature n dev read buffer n buffer n dev read buffer n buffer buffer buffer foundSignature dev seek dev pos i i i buffer i dev seek dev pos i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l00813</field>
    <field name="keywords"></field>
    <field name="text">KZip::closeArchive mode QIODevice::WriteOnly buffer uLong crc crc32 L Z_NULL qint64 centraldiroffset device pos qint64 atbackup centraldiroffset QMutableListIterator&lt;KZipFileEntry *&gt; it d m_fileList it hasNext it next device seek it value headerStart uLong mycrc it value crc32 buffer char mycrc buffer char mycrc buffer char mycrc buffer char mycrc mysize1 it value compressedSize buffer char mysize1 buffer char mysize1 buffer char mysize1 buffer char mysize1 myusize it value size buffer char myusize buffer char myusize buffer char myusize buffer char myusize device write buffer device seek atbackup it toFront it hasNext it next QByteArray path QFile::encodeName it value path extra_field_len d m_extraField ModificationTime bufferSize extra_field_len path length buffer bufferSize memset buffer head memmove buffer head head buffer char it value encoding buffer char it value encoding transformToMsDos it value date buffer uLong mycrc it value crc32 buffer char mycrc buffer char mycrc buffer char mycrc buffer char mycrc mysize1 it value compressedSize buffer char mysize1 buffer char mysize1 buffer char mysize1 buffer char mysize1 mysize it value size buffer char mysize buffer char mysize buffer char mysize buffer char mysize buffer char path length buffer char path length buffer char extra_field_len buffer char extra_field_len buffer char it value permissions buffer char it value permissions myhst it value headerStart buffer char myhst buffer char myhst buffer char myhst buffer char myhst strncpy buffer path constData path length d m_extraField ModificationTime extfield buffer path length extfield extfield extfield extfield extfield time long it value date toTime_t extfield char time extfield char time extfield char time extfield char time crc crc32 crc Bytef buffer bufferSize ok device write buffer bufferSize bufferSize buffer ok qint64 centraldirendoffset device pos buffer buffer buffer buffer buffer buffer buffer buffer count d m_fileList count buffer char count buffer char count buffer buffer buffer buffer cdsize centraldirendoffset centraldiroffset buffer char cdsize buffer char cdsize buffer char cdsize buffer char cdsize buffer char centraldiroffset buffer char centraldiroffset buffer char centraldiroffset buffer char centraldiroffset buffer buffer device write buffer</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l01006</field>
    <field name="keywords"></field>
    <field name="text">KZip::doWriteDir QString name QString user QString group mode_t perm QDateTime atime QDateTime mtime QDateTime ctime QString dirName name name endsWith QLatin1Char dirName dirName append QLatin1Char writeFile dirName QByteArray perm user group atime mtime ctime</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l01019</field>
    <field name="keywords"></field>
    <field name="text">KZip::doPrepareWriting QString name QString user QString group qint64 mode_t perm QDateTime accessTime QDateTime modificationTime QDateTime creationTime isOpen mode QIODevice::WriteOnly device device seek d m_offset uint atime accessTime toTime_t uint mtime modificationTime toTime_t uint ctime creationTime toTime_t KArchiveDirectory parentDir rootDir QString fileName name i name lastIndexOf QLatin1Char i QString dir name left i fileName name mid i parentDir findOrCreate dir QMutableListIterator&lt;KZipFileEntry *&gt; it d m_fileList it hasNext it next name it value path parentDir removeEntry it value it value it remove KZipFileEntry e KZipFileEntry fileName perm modificationTime user group QString name device pos name length d m_compression e setHeaderStart device pos parentDir addEntry e d m_currentFile e d m_fileList append e extra_field_len d m_extraField ModificationTime extra_field_len QByteArray encodedName QFile::encodeName name bufferSize extra_field_len encodedName length buffer bufferSize buffer buffer buffer buffer buffer buffer buffer buffer buffer char e encoding buffer char e encoding transformToMsDos e date buffer buffer buffer buffer buffer buffer buffer buffer buffer buffer buffer buffer buffer buffer uchar encodedName length buffer uchar encodedName length buffer uchar extra_field_len buffer uchar extra_field_len strncpy buffer encodedName constData encodedName length d m_extraField ModificationTime extfield buffer encodedName length extfield extfield extfield extfield extfield extfield char mtime extfield char mtime extfield char mtime extfield char mtime extfield char atime extfield char atime extfield char atime extfield char atime extfield char ctime extfield char ctime extfield char ctime extfield char ctime b device write buffer bufferSize bufferSize d m_crc buffer b d m_compression d m_currentDev device KCompressionDevice::CompressionType type KFilterDev::compressionTypeForMimeType QStringLiteral d m_currentDev KCompressionDevice device type Q_ASSERT d m_currentDev d m_currentDev KFilterDev d m_currentDev setSkipHeaders b d m_currentDev open QIODevice::WriteOnly Q_ASSERT b b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l01197</field>
    <field name="keywords"></field>
    <field name="text">KZip::doFinishWriting qint64 size d m_currentFile encoding void d m_currentDev write d m_currentDev d m_currentDev Q_ASSERT d m_currentFile d m_currentFile setSize size extra_field_len d m_extraField ModificationTime extra_field_len QByteArray encodedName QFile::encodeName d m_currentFile path csize device pos d m_currentFile headerStart encodedName length extra_field_len d m_currentFile setCompressedSize csize d m_currentFile setCRC32 d m_crc d m_currentFile d m_offset device pos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l01235</field>
    <field name="keywords"></field>
    <field name="text">KZip::doWriteSymLink QString name QString target QString user QString group mode_t perm QDateTime atime QDateTime mtime QDateTime ctime perm QT_STAT_LNK Compression c compression setCompression NoCompression doPrepareWriting name user group perm atime mtime ctime setCompression c QByteArray symlink_target QFile::encodeName target writeData symlink_target constData symlink_target length setCompression c finishWriting symlink_target length setCompression c setCompression c KZip::virtual_hook data KArchive::virtual_hook data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l01273</field>
    <field name="keywords"></field>
    <field name="text">KZip::writeData data qint64 size Q_ASSERT d m_currentFile Q_ASSERT d m_currentDev d m_currentFile d m_currentDev d m_crc crc32 d m_crc Bytef data size qint64 written d m_currentDev write data size written size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l01290</field>
    <field name="keywords"></field>
    <field name="text">KZip::setCompression Compression c d m_compression c NoCompression</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l01295</field>
    <field name="keywords"></field>
    <field name="text">KZip::Compression KZip::compression d m_compression DeflateCompression NoCompression</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l01300</field>
    <field name="keywords"></field>
    <field name="text">KZip::setExtraField ExtraField ef d m_extraField ef</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l01305</field>
    <field name="keywords"></field>
    <field name="text">KZip::ExtraField KZip::extraField d m_extraField KZipFileEntry::KZipFileEntryPrivate KZipFileEntryPrivate crc compressedSize headerStart encoding crc qint64 compressedSize qint64 headerStart encoding QString path</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l01330</field>
    <field name="keywords"></field>
    <field name="text">KZipFileEntry::KZipFileEntry KZip zip QString name access QDateTime date QString user QString group QString symlink QString path qint64 start qint64 uncompressedSize encoding qint64 compressedSize KArchiveFile zip name access date user group symlink start uncompressedSize d new KZipFileEntryPrivate d path path d encoding encoding d compressedSize compressedSize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l01342</field>
    <field name="keywords"></field>
    <field name="text">KZipFileEntry::~KZipFileEntry d KZipFileEntry::encoding d encoding qint64 KZipFileEntry::compressedSize d compressedSize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l01357</field>
    <field name="keywords"></field>
    <field name="text">KZipFileEntry::setCompressedSize qint64 compressedSize d compressedSize compressedSize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l01362</field>
    <field name="keywords"></field>
    <field name="text">KZipFileEntry::setHeaderStart qint64 headerstart d headerStart headerstart qint64 KZipFileEntry::headerStart d headerStart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l01372</field>
    <field name="keywords"></field>
    <field name="text">KZipFileEntry::crc32 d crc KZipFileEntry::setCRC32 crc32 d crc crc32</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l01382</field>
    <field name="keywords"></field>
    <field name="text">QString KZipFileEntry::path d path</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l01387</field>
    <field name="keywords"></field>
    <field name="text">QByteArray KZipFileEntry::data QIODevice dev createDevice QByteArray arr dev arr dev readAll dev arr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.cpp</field>
    <field name="url">kzip_8cpp_source.html#l01398</field>
    <field name="keywords"></field>
    <field name="text">QIODevice KZipFileEntry::createDevice KLimitedIODevice limitedDev KLimitedIODevice archive device position compressedSize encoding compressedSize limitedDev encoding KCompressionDevice::CompressionType type KFilterDev::compressionTypeForMimeType QStringLiteral KCompressionDevice filterDev KCompressionDevice limitedDev type filterDev filterDev setSkipHeaders b filterDev open QIODevice::ReadOnly Q_UNUSED b Q_ASSERT b filterDev qCritical encoding</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.h</field>
    <field name="url">kzip_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KZipFileEntry</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.h</field>
    <field name="url">kzip_8h_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">KARCHIVE_EXPORT KZip KArchive KZip QString filename KZip QIODevice dev KZip</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.h</field>
    <field name="url">kzip_8h_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text">ExtraField</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.h</field>
    <field name="url">kzip_8h_source.html#l00077</field>
    <field name="keywords"></field>
    <field name="text">NoExtraField</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.h</field>
    <field name="url">kzip_8h_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text">ModificationTime DefaultExtraField setExtraField ExtraField ef ExtraField extraField</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.h</field>
    <field name="url">kzip_8h_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text">Compression</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.h</field>
    <field name="url">kzip_8h_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text">NoCompression</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzip.h</field>
    <field name="url">kzip_8h_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text">DeflateCompression setCompression Compression c Compression compression writeData data qint64 size Q_DECL_OVERRIDE doWriteSymLink QString name QString target QString user QString group mode_t perm QDateTime atime QDateTime mtime QDateTime ctime Q_DECL_OVERRIDE doPrepareWriting QString name QString user QString group qint64 size mode_t perm QDateTime atime QDateTime mtime QDateTime creationTime Q_DECL_OVERRIDE doFinishWriting qint64 size Q_DECL_OVERRIDE openArchive QIODevice::OpenMode mode Q_DECL_OVERRIDE closeArchive Q_DECL_OVERRIDE doWriteDir const QString name const QString user const QString group mode_t perm const QDateTime atime const QDateTime mtime const QDateTime ctime Q_DECL_OVERRIDE protected virtual_hook data Q_DECL_OVERRIDE private class KZipPrivate KZipPrivate const d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzipfileentry.h</field>
    <field name="url">kzipfileentry_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KZip</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kzipfileentry.h</field>
    <field name="url">kzipfileentry_8h_source.html#l00028</field>
    <field name="keywords"></field>
    <field name="text">KARCHIVE_EXPORT KZipFileEntry KArchiveFile KZipFileEntry KZip zip QString name access QDateTime date QString user QString group QString symlink QString path qint64 start qint64 uncompressedSize encoding qint64 compressedSize KZipFileEntry encoding qint64 compressedSize setCompressedSize qint64 compressedSize setHeaderStart qint64 headerstart qint64 headerStart crc32 setCRC32 crc32 QString path QByteArray data Q_DECL_OVERRIDE QIODevice createDevice Q_DECL_OVERRIDE KZipFileEntryPrivate KZipFileEntryPrivate d</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">deprecated</field>
    <field name="url">deprecated.html</field>
    <field name="keywords"></field>
    <field name="text">Deprecated List Member KArchive writeFile const QString name const QString user const QString group const char qint64 size mode_t perm 0100644 const QDateTime atime QDateTime() const QDateTime mtime QDateTime() const QDateTime ctime QDateTime() since 5.0 use writeFile(const QString&amp;,const QByteArray&amp;,mode_t,const QString&amp;,const QString&amp;,const QDateTime&amp;,const QDateTime&amp;,const QDateTime&amp;) Member KFilterDev device QIODevice const QString mimetype bool autoDeleteInDevice true Use KCompressionDevice Member KFilterDev deviceForFile const QString fileName const QString mimetype QString() bool forceFilter false Use the constructor instead if mimetype is empty or KCompressionDevice if the mimetype is known</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">K7Zip</field>
    <field name="url">classK7Zip.html</field>
    <field name="keywords">K7Zip</field>
    <field name="text">Mario Bensi</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">K7Zip::K7Zip</field>
    <field name="args">(const QString &amp;filename)</field>
    <field name="url">classK7Zip.html#ae631f40a58dcb35d4dddf75dec9f6e72</field>
    <field name="keywords">K7Zip K7Zip::K7Zip K7Zip</field>
    <field name="text">filename is a local path e.g</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">K7Zip::K7Zip</field>
    <field name="args">(QIODevice *dev)</field>
    <field name="url">classK7Zip.html#a46251247fccaf4f1498fd356f08748dc</field>
    <field name="keywords">K7Zip K7Zip::K7Zip K7Zip</field>
    <field name="text">The device can be compressed KFilterDev or not QFile etc Do not assume that giving a QFile here will decompress the file in case it s compressed! dev the device to read from If the source is compressed the QIODevice must take care of decompression</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">K7Zip::~K7Zip</field>
    <field name="args">()</field>
    <field name="url">classK7Zip.html#a8edd3e9789efbb90a974497551234698</field>
    <field name="keywords">K7Zip::~K7Zip K7Zip</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::addLocalDirectory</field>
    <field name="args">(const QString &amp;path, const QString &amp;destName)</field>
    <field name="url">classKArchive.html#ab5a2f90d4003664127e744d078162c34</field>
    <field name="keywords">addLocalDirectory KArchive::addLocalDirectory KArchive addLocalDirectory KArchive::addLocalDirectory KArchive addLocalDirectory KArchive::addLocalDirectory KArchive addLocalDirectory KArchive::addLocalDirectory KArchive addLocalDirectory KArchive::addLocalDirectory KArchive addLocalDirectory KArchive::addLocalDirectory KArchive</field>
    <field name="text">Calls addLocalFile for each file to be added It will also add a path that is a symbolic link to a directory The symbolic link will be dereferenced and the content of the directory it is pointing to added recursively However symbolic links under path will be stored as is path full path to an existing local directory to be added to the archive destName the resulting name or relative path of the file in the archive</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::addLocalFile</field>
    <field name="args">(const QString &amp;fileName, const QString &amp;destName)</field>
    <field name="url">classKArchive.html#a1e3b4d361c4b57fe8cb956a9b49a85e4</field>
    <field name="keywords">addLocalFile KArchive::addLocalFile KArchive addLocalFile KArchive::addLocalFile KArchive addLocalFile KArchive::addLocalFile KArchive addLocalFile KArchive::addLocalFile KArchive addLocalFile KArchive::addLocalFile KArchive addLocalFile KArchive::addLocalFile KArchive</field>
    <field name="text">The main difference with writeFile is that this method minimizes memory usage by not loading the whole file into memory in one go If fileName is a symbolic link it will be written as is i e it will not be resolved before fileName full path to an existing local file to be added to the archive destName the resulting name or relative path of the file in the archive</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::close</field>
    <field name="args">()</field>
    <field name="url">classKArchive.html#a13fc5a093095ac0315e692e81aa4fce6</field>
    <field name="keywords">close KArchive::close KArchive close KArchive::close KArchive close KArchive::close KArchive close KArchive::close KArchive close KArchive::close KArchive close KArchive::close KArchive</field>
    <field name="text">Inherited classes might want to reimplement closeArchive instead true if close succeeded without problems open</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::device</field>
    <field name="args">() const</field>
    <field name="url">classKArchive.html#a1126fb09ca2849da19372e62f9498a15</field>
    <field name="keywords">device KArchive::device KArchive device KArchive::device KArchive device KArchive::device KArchive device KArchive::device KArchive device KArchive::device KArchive device KArchive::device KArchive</field>
    <field name="text">the underlying device</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::directory</field>
    <field name="args">() const</field>
    <field name="url">classKArchive.html#a687f8801e5eb0b6476ddd7821c31f627</field>
    <field name="keywords">directory KArchive::directory KArchive directory KArchive::directory KArchive directory KArchive::directory KArchive directory KArchive::directory KArchive directory KArchive::directory KArchive directory KArchive::directory KArchive</field>
    <field name="text">the directory of the archive</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::fileName</field>
    <field name="args">() const</field>
    <field name="url">classKArchive.html#adb8c517921d59a7f48f7090cbcf5efcc</field>
    <field name="keywords">fileName KArchive::fileName KArchive fileName KArchive::fileName KArchive fileName KArchive::fileName KArchive fileName KArchive::fileName KArchive fileName KArchive::fileName KArchive fileName KArchive::fileName KArchive</field>
    <field name="text">the name of the file or QString() if unknown</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::finishWriting</field>
    <field name="args">(qint64 size)</field>
    <field name="url">classKArchive.html#a28478783281e5f729210ef7ecac9c225</field>
    <field name="keywords">finishWriting KArchive::finishWriting KArchive finishWriting KArchive::finishWriting KArchive finishWriting KArchive::finishWriting KArchive finishWriting KArchive::finishWriting KArchive finishWriting KArchive::finishWriting KArchive finishWriting KArchive::finishWriting KArchive</field>
    <field name="text">size the size of the file prepareWriting()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::isOpen</field>
    <field name="args">() const</field>
    <field name="url">classKArchive.html#aec27152dc3cc0fa3df28daa8707d968d</field>
    <field name="keywords">isOpen KArchive::isOpen KArchive isOpen KArchive::isOpen KArchive isOpen KArchive::isOpen KArchive isOpen KArchive::isOpen KArchive isOpen KArchive::isOpen KArchive isOpen KArchive::isOpen KArchive</field>
    <field name="text">true if the archive is opened</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::mode</field>
    <field name="args">() const</field>
    <field name="url">classKArchive.html#ac4aa377c4f4fefe55f840aa6ffcb3400</field>
    <field name="keywords">mode KArchive::mode KArchive mode KArchive::mode KArchive mode KArchive::mode KArchive mode KArchive::mode KArchive mode KArchive::mode KArchive mode KArchive::mode KArchive</field>
    <field name="text">the mode in which the archive was opened QIODevice::ReadOnly or QIODevice::WriteOnly open()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::open</field>
    <field name="args">(QIODevice::OpenMode mode)</field>
    <field name="url">classKArchive.html#a5269559282e6cfe2c261ba059e32b66a</field>
    <field name="keywords">open KArchive::open KArchive open KArchive::open KArchive open KArchive::open KArchive open KArchive::open KArchive open KArchive::open KArchive open KArchive::open KArchive</field>
    <field name="text">Inherited classes might want to reimplement openArchive instead mode may be QIODevice::ReadOnly or QIODevice::WriteOnly close</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::prepareWriting</field>
    <field name="args">(const QString &amp;name, const QString &amp;user, const QString &amp;group, qint64 size, mode_t perm=0100644, const QDateTime &amp;atime=QDateTime(), const QDateTime &amp;mtime=QDateTime(), const QDateTime &amp;ctime=QDateTime())</field>
    <field name="url">classKArchive.html#a7e50420630c3bb44f617ad812b673332</field>
    <field name="keywords">prepareWriting KArchive::prepareWriting KArchive prepareWriting KArchive::prepareWriting KArchive prepareWriting KArchive::prepareWriting KArchive prepareWriting KArchive::prepareWriting KArchive prepareWriting KArchive::prepareWriting KArchive prepareWriting KArchive::prepareWriting KArchive</field>
    <field name="text">For tar.gz files you need to know the size before hand it is needed in the header! For zip files size isn t used This method also allows some file metadata to be set However depending on the archive type not all metadata might be regarded name the name of the file user the user that owns the file group the group that owns the file size the size of the file perm permissions of the file atime time the file was last accessed mtime modification time of the file ctime time of last status change</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::writeDir</field>
    <field name="args">(const QString &amp;name, const QString &amp;user=QString(), const QString &amp;group=QString(), mode_t perm=040755, const QDateTime &amp;atime=QDateTime(), const QDateTime &amp;mtime=QDateTime(), const QDateTime &amp;ctime=QDateTime())</field>
    <field name="url">classKArchive.html#a8e8dad1251bf8b2303b677445dcb86c0</field>
    <field name="keywords">writeDir KArchive::writeDir KArchive writeDir KArchive::writeDir KArchive writeDir KArchive::writeDir KArchive writeDir KArchive::writeDir KArchive writeDir KArchive::writeDir KArchive writeDir KArchive::writeDir KArchive</field>
    <field name="text">KArchive won t write one directory twice This method also allows some file metadata to be set However depending on the archive type not all metadata might be regarded name the name of the directory user the user that owns the directory group the group that owns the directory perm permissions of the directory atime time the file was last accessed mtime modification time of the file ctime time of last status change</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::writeFile</field>
    <field name="args">(const QString &amp;name, const QString &amp;user, const QString &amp;group, const char *data, qint64 size, mode_t perm=0100644, const QDateTime &amp;atime=QDateTime(), const QDateTime &amp;mtime=QDateTime(), const QDateTime &amp;ctime=QDateTime())</field>
    <field name="url">classKArchive.html#aa6cf0bf8afebd3681b62e52d417b20bf</field>
    <field name="keywords">writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive</field>
    <field name="text">since 5.0 use writeFile(const QString&amp;,const QByteArray&amp;,mode_t,const QString&amp;,const QString&amp;,const QDateTime&amp;,const QDateTime&amp;,const QDateTime&amp;)</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::writeFile</field>
    <field name="args">(const QString &amp;name, const QByteArray &amp;data, mode_t perm=0100644, const QString &amp;user=QString(), const QString &amp;group=QString(), const QDateTime &amp;atime=QDateTime(), const QDateTime &amp;mtime=QDateTime(), const QDateTime &amp;ctime=QDateTime())</field>
    <field name="url">classKArchive.html#aeb615bb1d33578f57f69af2b1e72029d</field>
    <field name="keywords">writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive writeFile KArchive::writeFile KArchive</field>
    <field name="text">The archive must be opened for writing first The necessary parent directories are created automatically if needed For instance writing does not require creating the directory first This method also allows some file metadata to be set However depending on the archive type not all metadata might be written out name the name of the file data the data to write perm permissions of the file user the user that owns the file group the group that owns the file atime time the file was last accessed mtime modification time of the file ctime time of last status change</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::writeSymLink</field>
    <field name="args">(const QString &amp;name, const QString &amp;target, const QString &amp;user=QString(), const QString &amp;group=QString(), mode_t perm=0120755, const QDateTime &amp;atime=QDateTime(), const QDateTime &amp;mtime=QDateTime(), const QDateTime &amp;ctime=QDateTime())</field>
    <field name="url">classKArchive.html#a5625944353172a5dbd229bf1a08d8a91</field>
    <field name="keywords">writeSymLink KArchive::writeSymLink KArchive writeSymLink KArchive::writeSymLink KArchive writeSymLink KArchive::writeSymLink KArchive writeSymLink KArchive::writeSymLink KArchive writeSymLink KArchive::writeSymLink KArchive writeSymLink KArchive::writeSymLink KArchive</field>
    <field name="text">The archive must be opened for writing name name of symbolic link target target of symbolic link user the user that owns the directory group the group that owns the directory perm permissions of the directory atime time the file was last accessed mtime modification time of the file ctime time of last status change</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">K7Zip::closeArchive</field>
    <field name="args">() override</field>
    <field name="url">classK7Zip.html#a44e7c936b5613c61729ee23b34f25d9a</field>
    <field name="keywords">closeArchive K7Zip::closeArchive K7Zip</field>
    <field name="text">Called by close</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">K7Zip::doFinishWriting</field>
    <field name="args">(qint64 size) override</field>
    <field name="url">classK7Zip.html#a34c6b2faa847ea99e08839ff186e75cc</field>
    <field name="keywords">doFinishWriting K7Zip::doFinishWriting K7Zip</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">K7Zip::doPrepareWriting</field>
    <field name="args">(const QString &amp;name, const QString &amp;user, const QString &amp;group, qint64 size, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</field>
    <field name="url">classK7Zip.html#af5509064e8d15a5f879deb8e3c690164</field>
    <field name="keywords">doPrepareWriting K7Zip::doPrepareWriting K7Zip</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">K7Zip::doWriteDir</field>
    <field name="args">(const QString &amp;name, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</field>
    <field name="url">classK7Zip.html#a0ae007127015e6c87bfb6dfd11f4377f</field>
    <field name="keywords">doWriteDir K7Zip::doWriteDir K7Zip</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">K7Zip::doWriteSymLink</field>
    <field name="args">(const QString &amp;name, const QString &amp;target, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</field>
    <field name="url">classK7Zip.html#a5a9a0325d0646630a2612bc157923cac</field>
    <field name="keywords">doWriteSymLink K7Zip::doWriteSymLink K7Zip</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">K7Zip::openArchive</field>
    <field name="args">(QIODevice::OpenMode mode) override</field>
    <field name="url">classK7Zip.html#a390f17f49925c41c6997a4ebf83bdfd3</field>
    <field name="keywords">openArchive K7Zip::openArchive K7Zip</field>
    <field name="text">Parses the directory listing of the archive and creates the KArchiveDirectory/KArchiveFile entries mode the mode of the file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">K7Zip::writeData</field>
    <field name="args">(const char *data, qint64 size) override</field>
    <field name="url">classK7Zip.html#aa83781241d632dd22c4f30cff68a42f8</field>
    <field name="keywords">writeData K7Zip::writeData K7Zip</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::KArchive</field>
    <field name="args">(const QString &amp;fileName)</field>
    <field name="url">classKArchive.html#a4386c6e12dc034c0687aa8bb738bf25d</field>
    <field name="keywords">KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive</field>
    <field name="text">fileName is a local path e.g from which the archive will be read from or into which the archive will be written depending on the mode given to open()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::KArchive</field>
    <field name="args">(QIODevice *dev)</field>
    <field name="url">classKArchive.html#a3efbb71ada0630d90c5af53fedce9b19</field>
    <field name="keywords">KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive KArchive KArchive::KArchive KArchive</field>
    <field name="text">dev the I/O device where the archive reads its data Note that this can be a file but also a data buffer a compression filter etc For a file in writing mode it is better to use the other constructor though to benefit from the use of QSaveFile when saving</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::createDevice</field>
    <field name="args">(QIODevice::OpenMode mode)</field>
    <field name="url">classKArchive.html#a13e286c61a775bb3a004e23ba5f1fa46</field>
    <field name="keywords">createDevice KArchive::createDevice KArchive createDevice KArchive::createDevice KArchive createDevice KArchive::createDevice KArchive createDevice KArchive::createDevice KArchive createDevice KArchive::createDevice KArchive</field>
    <field name="text">By default this method uses QSaveFile when saving and a simple QFile on reading This method is called by open()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::findOrCreate</field>
    <field name="args">(const QString &amp;path)</field>
    <field name="url">classKArchive.html#aa5dfd148c5c870da8a2330d0371e3d6e</field>
    <field name="keywords">findOrCreate KArchive::findOrCreate KArchive findOrCreate KArchive::findOrCreate KArchive findOrCreate KArchive::findOrCreate KArchive findOrCreate KArchive::findOrCreate KArchive findOrCreate KArchive::findOrCreate KArchive findOrCreate KArchive::findOrCreate KArchive</field>
    <field name="text">This handles e.g tar files missing directory entries like mico-2.3.0.tar.gz path the path of the directory the directory with the given path</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::rootDir</field>
    <field name="args">()</field>
    <field name="url">classKArchive.html#a218da40618b5ea5623656d3dbf3d9ecc</field>
    <field name="keywords">rootDir KArchive::rootDir KArchive rootDir KArchive::rootDir KArchive rootDir KArchive::rootDir KArchive rootDir KArchive::rootDir KArchive rootDir KArchive::rootDir KArchive rootDir KArchive::rootDir KArchive</field>
    <field name="text">The default implementation assumes that openArchive() did the parsing so it creates a dummy rootdir if none was set write mode or no in the archive Reimplement this to provide parsing/listing on demand the root directory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::setDevice</field>
    <field name="args">(QIODevice *dev)</field>
    <field name="url">classKArchive.html#af39343456c9c458230546b64ffc66a31</field>
    <field name="keywords">setDevice KArchive::setDevice KArchive setDevice KArchive::setDevice KArchive setDevice KArchive::setDevice KArchive setDevice KArchive::setDevice KArchive setDevice KArchive::setDevice KArchive setDevice KArchive::setDevice KArchive</field>
    <field name="text">Note that KArchive will own the device it must be deleted by the derived class</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::setRootDir</field>
    <field name="args">(KArchiveDirectory *rootDir)</field>
    <field name="url">classKArchive.html#ae12a8b556703e189b9e2ebc886a18319</field>
    <field name="keywords">setRootDir KArchive::setRootDir KArchive setRootDir KArchive::setRootDir KArchive setRootDir KArchive::setRootDir KArchive setRootDir KArchive::setRootDir KArchive setRootDir KArchive::setRootDir KArchive setRootDir KArchive::setRootDir KArchive</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KAr</field>
    <field name="url">classKAr.html</field>
    <field name="keywords">KAr</field>
    <field name="text">Writing is not supported A class for reading ar archives Laurence Anderson</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAr::KAr</field>
    <field name="args">(const QString &amp;filename)</field>
    <field name="url">classKAr.html#a39d760ebc3bfdb6b640bd8db8661a605</field>
    <field name="keywords">KAr KAr::KAr KAr</field>
    <field name="text">filename is a local path e.g</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAr::KAr</field>
    <field name="args">(QIODevice *dev)</field>
    <field name="url">classKAr.html#ab7031223b09f587dd23ca571880fce42</field>
    <field name="keywords">KAr KAr::KAr KAr</field>
    <field name="text">The device can be compressed KFilterDev or not QFile etc dev the device to read from</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAr::~KAr</field>
    <field name="args">()</field>
    <field name="url">classKAr.html#ae1779281eae030ab09dcc9d272ee8178</field>
    <field name="keywords">KAr::~KAr KAr</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::writeData</field>
    <field name="args">(const char *data, qint64 size)</field>
    <field name="url">classKArchive.html#aa16180fff07f057fbcb4a23f4c3840dc</field>
    <field name="keywords">writeData KArchive::writeData KArchive writeData KArchive::writeData KArchive writeData KArchive::writeData KArchive writeData KArchive::writeData KArchive</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAr::closeArchive</field>
    <field name="args">() override</field>
    <field name="url">classKAr.html#abe954c7a9f94be4038255e056f2c1573</field>
    <field name="keywords">closeArchive KAr::closeArchive KAr</field>
    <field name="text">Called by close</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAr::doFinishWriting</field>
    <field name="args">(qint64 size) override</field>
    <field name="url">classKAr.html#af0537ec98d8c4fcc9c04b689360a22d3</field>
    <field name="keywords">doFinishWriting KAr::doFinishWriting KAr</field>
    <field name="text">This virtual method must be implemented by subclasses size the size of the file finishWriting()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAr::doPrepareWriting</field>
    <field name="args">(const QString &amp;name, const QString &amp;user, const QString &amp;group, qint64 size, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</field>
    <field name="url">classKAr.html#ac2c892eda0beb9cc94d61ae0b9337755</field>
    <field name="keywords">doPrepareWriting KAr::doPrepareWriting KAr</field>
    <field name="text">Depending on the archive type not all metadata might be used name the name of the file user the user that owns the file group the group that owns the file size the size of the file perm permissions of the file Use 0100644 if you don t have any more specific permissions to set atime time the file was last accessed mtime modification time of the file ctime time of last status change prepareWriting</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAr::doWriteDir</field>
    <field name="args">(const QString &amp;name, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</field>
    <field name="url">classKAr.html#acbe42c2c913f4b89e8a596c1dd78f312</field>
    <field name="keywords">doWriteDir KAr::doWriteDir KAr</field>
    <field name="text">This virtual method must be implemented by subclasses Depending on the archive type not all metadata might be used name the name of the directory user the user that owns the directory group the group that owns the directory perm permissions of the directory Use 040755 if you don t have any other information atime time the file was last accessed mtime modification time of the file ctime time of last status change writeDir</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAr::doWriteSymLink</field>
    <field name="args">(const QString &amp;name, const QString &amp;target, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</field>
    <field name="url">classKAr.html#a1f669857985f78d67e9d4e83666fd21e</field>
    <field name="keywords">doWriteSymLink KAr::doWriteSymLink KAr</field>
    <field name="text">This virtual method must be implemented by subclasses name name of symbolic link target target of symbolic link user the user that owns the directory group the group that owns the directory perm permissions of the directory atime time the file was last accessed mtime modification time of the file ctime time of last status change writeSymLink</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAr::openArchive</field>
    <field name="args">(QIODevice::OpenMode mode) override</field>
    <field name="url">classKAr.html#a8d994e724271f25c34edfb2237d61399</field>
    <field name="keywords">openArchive KAr::openArchive KAr</field>
    <field name="text">Parses the directory listing of the archive and creates the KArchiveDirectory/KArchiveFile entries</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KArchive</field>
    <field name="url">classKArchive.html</field>
    <field name="keywords">KArchive</field>
    <field name="text">generic class for reading/writing archives David Faure</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::closeArchive</field>
    <field name="args">()=0</field>
    <field name="url">classKArchive.html#a52fa0982c4acaf9dcca8df09749e99a0</field>
    <field name="keywords">closeArchive KArchive::closeArchive KArchive</field>
    <field name="text">Called by close</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::doFinishWriting</field>
    <field name="args">(qint64 size)=0</field>
    <field name="url">classKArchive.html#a181381217cda7b1d32abd7422b3de4ff</field>
    <field name="keywords">doFinishWriting KArchive::doFinishWriting KArchive</field>
    <field name="text">This virtual method must be implemented by subclasses size the size of the file finishWriting()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::doPrepareWriting</field>
    <field name="args">(const QString &amp;name, const QString &amp;user, const QString &amp;group, qint64 size, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime)=0</field>
    <field name="url">classKArchive.html#a719ec1a1c62c015e993dee72ecb5fce7</field>
    <field name="keywords">doPrepareWriting KArchive::doPrepareWriting KArchive</field>
    <field name="text">Depending on the archive type not all metadata might be used name the name of the file user the user that owns the file group the group that owns the file size the size of the file perm permissions of the file Use 0100644 if you don t have any more specific permissions to set atime time the file was last accessed mtime modification time of the file ctime time of last status change prepareWriting</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::doWriteDir</field>
    <field name="args">(const QString &amp;name, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime)=0</field>
    <field name="url">classKArchive.html#a4423297991d66579ea9fbf070f91ff48</field>
    <field name="keywords">doWriteDir KArchive::doWriteDir KArchive</field>
    <field name="text">This virtual method must be implemented by subclasses Depending on the archive type not all metadata might be used name the name of the directory user the user that owns the directory group the group that owns the directory perm permissions of the directory Use 040755 if you don t have any other information atime time the file was last accessed mtime modification time of the file ctime time of last status change writeDir</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::doWriteSymLink</field>
    <field name="args">(const QString &amp;name, const QString &amp;target, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime)=0</field>
    <field name="url">classKArchive.html#a4d818a6892534b4f559d3f4612a18dd5</field>
    <field name="keywords">doWriteSymLink KArchive::doWriteSymLink KArchive</field>
    <field name="text">This virtual method must be implemented by subclasses name name of symbolic link target target of symbolic link user the user that owns the directory group the group that owns the directory perm permissions of the directory atime time the file was last accessed mtime modification time of the file ctime time of last status change writeSymLink</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchive::openArchive</field>
    <field name="args">(QIODevice::OpenMode mode)=0</field>
    <field name="url">classKArchive.html#a868eecf661cda9b0fd26b6c9a1319555</field>
    <field name="keywords">openArchive KArchive::openArchive KArchive</field>
    <field name="text">Called by open mode may be QIODevice::ReadOnly or QIODevice::WriteOnly</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KArchiveDirectory</field>
    <field name="url">classKArchiveDirectory.html</field>
    <field name="keywords">KArchiveDirectory</field>
    <field name="text">A directory in an archive KArchive KArchiveFile</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveDirectory::KArchiveDirectory</field>
    <field name="args">(KArchive *archive, const QString &amp;name, int access, const QDateTime &amp;date, const QString &amp;user, const QString &amp;group, const QString &amp;symlink)</field>
    <field name="url">classKArchiveDirectory.html#a52719e2e8628d139f5454146cb9d41cb</field>
    <field name="keywords">KArchiveDirectory KArchiveDirectory::KArchiveDirectory KArchiveDirectory</field>
    <field name="text">archive the entries archive name the name of the entry access the permissions in unix format date the date in seconds since 1970 user the user that owns the entry group the group that owns the entry symlink the symlink or QString()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveDirectory::addEntry</field>
    <field name="args">(KArchiveEntry *)</field>
    <field name="url">classKArchiveDirectory.html#a0f5967950552c9e1fb6858fc1c627c19</field>
    <field name="keywords">addEntry KArchiveDirectory::addEntry KArchiveDirectory</field>
    <field name="text">Adds a new entry to the directory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveDirectory::copyTo</field>
    <field name="args">(const QString &amp;dest, bool recursive=true) const</field>
    <field name="url">classKArchiveDirectory.html#a69a28476a3c50c9a12b214abf3d5a41a</field>
    <field name="keywords">copyTo KArchiveDirectory::copyTo KArchiveDirectory</field>
    <field name="text">dest the directory to extract to recursive if set to true subdirectories are extracted as well true on success false if the directory dest name() couldn t be created</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveDirectory::entries</field>
    <field name="args">() const</field>
    <field name="url">classKArchiveDirectory.html#a583309dbae0b387c7af46a4dad6dfeca</field>
    <field name="keywords">entries KArchiveDirectory::entries KArchiveDirectory</field>
    <field name="text">Note that the list is not sorted it s even in random order due to using a hashtable Use sort() on the result to sort the list by filename the names of all entries in this directory filenames no path</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveDirectory::entry</field>
    <field name="args">(const QString &amp;name) const</field>
    <field name="url">classKArchiveDirectory.html#a837a73bc3eb3b297f2fc1f4a447c4528</field>
    <field name="keywords">entry KArchiveDirectory::entry KArchiveDirectory</field>
    <field name="text">The entry could be a file or a directory use isFile() to find out which one it is name may be etc a pointer to the entry in the directory or a null pointer if there is no such entry</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveDirectory::file</field>
    <field name="args">(const QString &amp;name) const</field>
    <field name="url">classKArchiveDirectory.html#accb3aa3422fb1645adb9189f43fdf948</field>
    <field name="keywords">file KArchiveDirectory::file KArchiveDirectory</field>
    <field name="text">If the entry exists and is a file a KArchiveFile is returned Otherwise a null pointer is returned This is a convenience method for entry() when we know the entry is expected to be a file name may be etc a pointer to the file entry in the directory or a null pointer if there is no such file entry 5.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveDirectory::isDirectory</field>
    <field name="args">() const override</field>
    <field name="url">classKArchiveDirectory.html#ab0c1a491aed663a566f5cac4ddb3cea1</field>
    <field name="keywords">isDirectory KArchiveDirectory::isDirectory KArchiveDirectory</field>
    <field name="text">true since this entry is a directory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveDirectory::removeEntry</field>
    <field name="args">(KArchiveEntry *)</field>
    <field name="url">classKArchiveDirectory.html#a717ab9abd24a82779b38e981c4fc1f39</field>
    <field name="keywords">removeEntry KArchiveDirectory::removeEntry KArchiveDirectory</field>
    <field name="text">Adds a new entry to the directory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveEntry::KArchiveEntry</field>
    <field name="args">(KArchive *archive, const QString &amp;name, int access, const QDateTime &amp;date, const QString &amp;user, const QString &amp;group, const QString &amp;symlink)</field>
    <field name="url">classKArchiveEntry.html#a5c0e3e538520cf9d05d4d3e12ae4594b</field>
    <field name="keywords">KArchiveEntry KArchiveEntry::KArchiveEntry KArchiveEntry KArchiveEntry KArchiveEntry::KArchiveEntry KArchiveEntry KArchiveEntry KArchiveEntry::KArchiveEntry KArchiveEntry KArchiveEntry KArchiveEntry::KArchiveEntry KArchiveEntry</field>
    <field name="text">archive the entries archive name the name of the entry access the permissions in unix format date the date in seconds since 1970 user the user that owns the entry group the group that owns the entry symlink the symlink or QString()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveEntry::date</field>
    <field name="args">() const</field>
    <field name="url">classKArchiveEntry.html#a5e2fd48f561980ecf22e6b69c91fc5e6</field>
    <field name="keywords">date KArchiveEntry::date KArchiveEntry date KArchiveEntry::date KArchiveEntry date KArchiveEntry::date KArchiveEntry date KArchiveEntry::date KArchiveEntry</field>
    <field name="text">the creation date</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveEntry::group</field>
    <field name="args">() const</field>
    <field name="url">classKArchiveEntry.html#a6bb1dcb1549695273205c2f0068cb942</field>
    <field name="keywords">group KArchiveEntry::group KArchiveEntry group KArchiveEntry::group KArchiveEntry group KArchiveEntry::group KArchiveEntry group KArchiveEntry::group KArchiveEntry</field>
    <field name="text">the group of the file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveEntry::isFile</field>
    <field name="args">() const</field>
    <field name="url">classKArchiveEntry.html#adbd83295a865f1b305703cab0a3845ae</field>
    <field name="keywords">isFile KArchiveEntry::isFile KArchiveEntry isFile KArchiveEntry::isFile KArchiveEntry</field>
    <field name="text">true if this entry is a file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveEntry::name</field>
    <field name="args">() const</field>
    <field name="url">classKArchiveEntry.html#a7a3fb99efe15847ef6cb3766d3588fc7</field>
    <field name="keywords">name KArchiveEntry::name KArchiveEntry name KArchiveEntry::name KArchiveEntry name KArchiveEntry::name KArchiveEntry name KArchiveEntry::name KArchiveEntry</field>
    <field name="text">the file name without path</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveEntry::permissions</field>
    <field name="args">() const</field>
    <field name="url">classKArchiveEntry.html#a2356d6ed02a40c7dae6e9101087c232d</field>
    <field name="keywords">permissions KArchiveEntry::permissions KArchiveEntry permissions KArchiveEntry::permissions KArchiveEntry permissions KArchiveEntry::permissions KArchiveEntry permissions KArchiveEntry::permissions KArchiveEntry</field>
    <field name="text">the permissions</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveEntry::symLinkTarget</field>
    <field name="args">() const</field>
    <field name="url">classKArchiveEntry.html#aa0e86e5f1fa8c993463f8dd1ae605d4d</field>
    <field name="keywords">symLinkTarget KArchiveEntry::symLinkTarget KArchiveEntry symLinkTarget KArchiveEntry::symLinkTarget KArchiveEntry symLinkTarget KArchiveEntry::symLinkTarget KArchiveEntry symLinkTarget KArchiveEntry::symLinkTarget KArchiveEntry</field>
    <field name="text">the symlink or QString()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveEntry::user</field>
    <field name="args">() const</field>
    <field name="url">classKArchiveEntry.html#a2c36d4e2b4f6ef3dc97cc0d69b7c910f</field>
    <field name="keywords">user KArchiveEntry::user KArchiveEntry user KArchiveEntry::user KArchiveEntry user KArchiveEntry::user KArchiveEntry user KArchiveEntry::user KArchiveEntry</field>
    <field name="text">the owner of the file</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KArchiveEntry</field>
    <field name="url">classKArchiveEntry.html</field>
    <field name="keywords">KArchiveEntry</field>
    <field name="text">Base class for the archive-file s directory structure KArchiveFile KArchiveDirectory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveEntry::isDirectory</field>
    <field name="args">() const</field>
    <field name="url">classKArchiveEntry.html#a519e4edcc7eaeebc1c813e7a4278ca5e</field>
    <field name="keywords">isDirectory KArchiveEntry::isDirectory KArchiveEntry isDirectory KArchiveEntry::isDirectory KArchiveEntry isDirectory KArchiveEntry::isDirectory KArchiveEntry</field>
    <field name="text">true if this entry is a directory</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KArchiveFile</field>
    <field name="url">classKArchiveFile.html</field>
    <field name="keywords">KArchiveFile</field>
    <field name="text">A file in an archive KArchive KArchiveDirectory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveFile::KArchiveFile</field>
    <field name="args">(KArchive *archive, const QString &amp;name, int access, const QDateTime &amp;date, const QString &amp;user, const QString &amp;group, const QString &amp;symlink, qint64 pos, qint64 size)</field>
    <field name="url">classKArchiveFile.html#a0b5589f87f70f4b1a3922040d3b63111</field>
    <field name="keywords">KArchiveFile KArchiveFile::KArchiveFile KArchiveFile KArchiveFile KArchiveFile::KArchiveFile KArchiveFile</field>
    <field name="text">Do not call this KArchive takes care of it archive the entries archive name the name of the entry access the permissions in unix format date the date in seconds since 1970 user the user that owns the entry group the group that owns the entry symlink the symlink or QString() pos the position of the file in the directory size the size of the file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveFile::~KArchiveFile</field>
    <field name="args">()</field>
    <field name="url">classKArchiveFile.html#a562c9843552d8613c7c9567809f09b14</field>
    <field name="keywords">KArchiveFile::~KArchiveFile KArchiveFile KArchiveFile::~KArchiveFile KArchiveFile</field>
    <field name="text">Do not call this KArchive takes care of it</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveFile::copyTo</field>
    <field name="args">(const QString &amp;dest) const</field>
    <field name="url">classKArchiveFile.html#a0d25262342c7e71a4d13f578959dedae</field>
    <field name="keywords">copyTo KArchiveFile::copyTo KArchiveFile copyTo KArchiveFile::copyTo KArchiveFile</field>
    <field name="text">dest the directory to extract to true on success false if the file dest name() couldn t be created</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveFile::createDevice</field>
    <field name="args">() const</field>
    <field name="url">classKArchiveFile.html#a3c5a708ab462bca4c8b6d64b655ef2fb</field>
    <field name="keywords">createDevice KArchiveFile::createDevice KArchiveFile</field>
    <field name="text">This is obviously for reading only WARNING Note that the ownership of the device is being transferred to the caller who will have to delete it The returned device auto-opens in readonly mode no need to open it the QIODevice of the file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveFile::data</field>
    <field name="args">() const</field>
    <field name="url">classKArchiveFile.html#a465733787b3f57f0773a239dfad646ed</field>
    <field name="keywords">data KArchiveFile::data KArchiveFile</field>
    <field name="text">Call data() with care only once per file this data isn t cached the content of this file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveFile::isFile</field>
    <field name="args">() const override</field>
    <field name="url">classKArchiveFile.html#ab4e8989d6c9e363b60fd633224991307</field>
    <field name="keywords">isFile KArchiveFile::isFile KArchiveFile isFile KArchiveFile::isFile KArchiveFile</field>
    <field name="text">true since this entry is a file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveFile::position</field>
    <field name="args">() const</field>
    <field name="url">classKArchiveFile.html#ab45ce3c099691954fefeffe773b742c5</field>
    <field name="keywords">position KArchiveFile::position KArchiveFile position KArchiveFile::position KArchiveFile</field>
    <field name="text">the position of the file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveFile::setSize</field>
    <field name="args">(qint64 s)</field>
    <field name="url">classKArchiveFile.html#a46ab3c77fb21b1ca095ba4a155f7d47e</field>
    <field name="keywords">setSize KArchiveFile::setSize KArchiveFile setSize KArchiveFile::setSize KArchiveFile</field>
    <field name="text">s the new size of the file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KArchiveFile::size</field>
    <field name="args">() const</field>
    <field name="url">classKArchiveFile.html#a2006219e1cb0503dbbf0bc96b1f9f80d</field>
    <field name="keywords">size KArchiveFile::size KArchiveFile size KArchiveFile::size KArchiveFile</field>
    <field name="text">the size of the file</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KCompressionDevice</field>
    <field name="url">classKCompressionDevice.html</field>
    <field name="keywords">KCompressionDevice</field>
    <field name="text">file but other usages are possible like a buffer or a socket Use this class to read/write compressed files</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompressionDevice::KCompressionDevice</field>
    <field name="args">(QIODevice *inputDevice, bool autoDeleteInputDevice, CompressionType type)</field>
    <field name="url">classKCompressionDevice.html#a19d90470f86e14433eb2f21a7135c856</field>
    <field name="keywords">KCompressionDevice KCompressionDevice::KCompressionDevice KCompressionDevice KCompressionDevice KCompressionDevice::KCompressionDevice KCompressionDevice</field>
    <field name="text">GZip BZip2 etc inputDevice input device autoDeleteInputDevice if true inputDevice will be deleted automatically type the CompressionType to use</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompressionDevice::KCompressionDevice</field>
    <field name="args">(const QString &amp;fileName, CompressionType type)</field>
    <field name="url">classKCompressionDevice.html#a134baa7d6ad968471719755f58cea1e5</field>
    <field name="keywords">KCompressionDevice KCompressionDevice::KCompressionDevice KCompressionDevice KCompressionDevice KCompressionDevice::KCompressionDevice KCompressionDevice</field>
    <field name="text">GZip BZip2 etc fileName the name of the file to filter type the CompressionType to use</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompressionDevice::~KCompressionDevice</field>
    <field name="args">()</field>
    <field name="url">classKCompressionDevice.html#abd7b288aaf15a0d791e62425f9b8c1cd</field>
    <field name="keywords">KCompressionDevice::~KCompressionDevice KCompressionDevice KCompressionDevice::~KCompressionDevice KCompressionDevice</field>
    <field name="text">Calls close() if the filter device is still open</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompressionDevice::close</field>
    <field name="args">() override</field>
    <field name="url">classKCompressionDevice.html#a984fa31855f47612817a22e5d25b4181</field>
    <field name="keywords">close KCompressionDevice::close KCompressionDevice close KCompressionDevice::close KCompressionDevice</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompressionDevice::compressionType</field>
    <field name="args">() const</field>
    <field name="url">classKCompressionDevice.html#aa94e4dc51069e6b9fcf20ca3344bbd95</field>
    <field name="keywords">compressionType KCompressionDevice::compressionType KCompressionDevice compressionType KCompressionDevice::compressionType KCompressionDevice</field>
    <field name="text">If the support for the compression requested in the constructor is not available then the device will use None</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompressionDevice::open</field>
    <field name="args">(QIODevice::OpenMode mode) override</field>
    <field name="url">classKCompressionDevice.html#ae40ec51fa25dfe0b8844d0cfc143ceb2</field>
    <field name="keywords">open KCompressionDevice::open KCompressionDevice open KCompressionDevice::open KCompressionDevice</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompressionDevice::seek</field>
    <field name="args">(qint64) override</field>
    <field name="url">classKCompressionDevice.html#a4d8ab175fe4cd856bebf20d412a172d6</field>
    <field name="keywords">seek KCompressionDevice::seek KCompressionDevice seek KCompressionDevice::seek KCompressionDevice</field>
    <field name="text">Use with care</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompressionDevice::setOrigFileName</field>
    <field name="args">(const QByteArray &amp;fileName)</field>
    <field name="url">classKCompressionDevice.html#a16f277ab56f2d99aceffc698625a8254</field>
    <field name="keywords">setOrigFileName KCompressionDevice::setOrigFileName KCompressionDevice setOrigFileName KCompressionDevice::setOrigFileName KCompressionDevice</field>
    <field name="text">fileName the name of the original file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompressionDevice::setSkipHeaders</field>
    <field name="args">()</field>
    <field name="url">classKCompressionDevice.html#ac798a1e99382a3bbb39da72bd80c9335</field>
    <field name="keywords">setSkipHeaders KCompressionDevice::setSkipHeaders KCompressionDevice setSkipHeaders KCompressionDevice::setSkipHeaders KCompressionDevice</field>
    <field name="text">This way KCompressionDevice with gzip filter can be used as a direct wrapper around zlib this is used by KZip</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompressionDevice::filterForCompressionType</field>
    <field name="args">(CompressionType type)</field>
    <field name="url">classKCompressionDevice.html#a4146d38b19d20828cdd3327303757013</field>
    <field name="keywords">filterForCompressionType KCompressionDevice::filterForCompressionType KCompressionDevice filterForCompressionType KCompressionDevice::filterForCompressionType KCompressionDevice</field>
    <field name="text">type the type of the compression filter the filter for the type or 0 if not found</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KFilterBase</field>
    <field name="url">classKFilterBase.html</field>
    <field name="keywords">KFilterBase</field>
    <field name="text">It s pretty much internal Don t use directly use KFilterDev instead</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KFilterBase::FilterFlags</field>
    <field name="url">classKFilterBase.html#a6aea514aa95018abc98c7f4de711e70f</field>
    <field name="keywords">FilterFlags KFilterBase::FilterFlags KFilterBase FilterFlags KFilterBase::FilterFlags KFilterBase FilterFlags KFilterBase::FilterFlags KFilterBase</field>
    <field name="text">4.3</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KFilterBase::Result</field>
    <field name="url">classKFilterBase.html#a11c71b7d147daff9164114ef565d05a6</field>
    <field name="keywords">Result KFilterBase::Result KFilterBase Result KFilterBase::Result KFilterBase Result KFilterBase::Result KFilterBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::compress</field>
    <field name="args">(bool finish)=0</field>
    <field name="url">classKFilterBase.html#a9640e78ba2da5e4aa34e928b426e16b8</field>
    <field name="keywords">compress KFilterBase::compress KFilterBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::device</field>
    <field name="args">()</field>
    <field name="url">classKFilterBase.html#acd8b6961025d56d47c735aba28254b44</field>
    <field name="keywords">device KFilterBase::device KFilterBase device KFilterBase::device KFilterBase device KFilterBase::device KFilterBase</field>
    <field name="text">the device on which the filter will work</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::inBufferAvailable</field>
    <field name="args">() const =0</field>
    <field name="url">classKFilterBase.html#acef9fa1b419198bde5f9d8a433d7cd8e</field>
    <field name="keywords">inBufferAvailable KFilterBase::inBufferAvailable KFilterBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::inBufferEmpty</field>
    <field name="args">() const</field>
    <field name="url">classKFilterBase.html#a9d71d8602e9ed2febbe73a55306fb874</field>
    <field name="keywords">inBufferEmpty KFilterBase::inBufferEmpty KFilterBase inBufferEmpty KFilterBase::inBufferEmpty KFilterBase inBufferEmpty KFilterBase::inBufferEmpty KFilterBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::init</field>
    <field name="args">(int mode)=0</field>
    <field name="url">classKFilterBase.html#a5957e0e8fb8a376f3011e05284b1cb70</field>
    <field name="keywords">init KFilterBase::init KFilterBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::mode</field>
    <field name="args">() const =0</field>
    <field name="url">classKFilterBase.html#aea4a8777dfad1fb83e7785194b12b680</field>
    <field name="keywords">mode KFilterBase::mode KFilterBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::outBufferAvailable</field>
    <field name="args">() const =0</field>
    <field name="url">classKFilterBase.html#a0a0bfb0a10281beeec6e2a2a65d32c22</field>
    <field name="keywords">outBufferAvailable KFilterBase::outBufferAvailable KFilterBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::outBufferFull</field>
    <field name="args">() const</field>
    <field name="url">classKFilterBase.html#afe7142cc3bfa9893fad187dae5a87cfc</field>
    <field name="keywords">outBufferFull KFilterBase::outBufferFull KFilterBase outBufferFull KFilterBase::outBufferFull KFilterBase outBufferFull KFilterBase::outBufferFull KFilterBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::readHeader</field>
    <field name="args">()=0</field>
    <field name="url">classKFilterBase.html#ad7b7580531a444442caf0daaaa27a283</field>
    <field name="keywords">readHeader KFilterBase::readHeader KFilterBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::reset</field>
    <field name="args">()</field>
    <field name="url">classKFilterBase.html#aa94bcd1fbb4caff410c6eb3bec89d43c</field>
    <field name="keywords">reset KFilterBase::reset KFilterBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::setDevice</field>
    <field name="args">(QIODevice *dev, bool autodelete=false)</field>
    <field name="url">classKFilterBase.html#ae0b5719aa1ebe3b43507f45828acfb31</field>
    <field name="keywords">setDevice KFilterBase::setDevice KFilterBase setDevice KFilterBase::setDevice KFilterBase setDevice KFilterBase::setDevice KFilterBase</field>
    <field name="text">dev the device on which the filter will work autodelete if true dev is deleted when the filter is deleted</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::setFilterFlags</field>
    <field name="args">(FilterFlags flags)</field>
    <field name="url">classKFilterBase.html#a741ff7aadcdad956684df276b690582b</field>
    <field name="keywords">setFilterFlags KFilterBase::setFilterFlags KFilterBase setFilterFlags KFilterBase::setFilterFlags KFilterBase setFilterFlags KFilterBase::setFilterFlags KFilterBase</field>
    <field name="text">4.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::setInBuffer</field>
    <field name="args">(const char *data, uint size)=0</field>
    <field name="url">classKFilterBase.html#a332c5aba58f0c01f588de41bb337e15c</field>
    <field name="keywords">setInBuffer KFilterBase::setInBuffer KFilterBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::setOutBuffer</field>
    <field name="args">(char *data, uint maxlen)=0</field>
    <field name="url">classKFilterBase.html#a5e284cc9076c690c5e0969e09ac0df1d</field>
    <field name="keywords">setOutBuffer KFilterBase::setOutBuffer KFilterBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::terminate</field>
    <field name="args">()</field>
    <field name="url">classKFilterBase.html#a1d5fe556cdc03b2c48b0ec7f87c854a5</field>
    <field name="keywords">terminate KFilterBase::terminate KFilterBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::uncompress</field>
    <field name="args">()=0</field>
    <field name="url">classKFilterBase.html#a6f29466c181fbf910a75b4775488b62e</field>
    <field name="keywords">uncompress KFilterBase::uncompress KFilterBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::writeHeader</field>
    <field name="args">(const QByteArray &amp;filename)=0</field>
    <field name="url">classKFilterBase.html#a7672777b39bdd42c5f2c7121fff34848</field>
    <field name="keywords">writeHeader KFilterBase::writeHeader KFilterBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterBase::virtual_hook</field>
    <field name="args">(int id, void *data)</field>
    <field name="url">classKFilterBase.html#ac44636209bc81d9538a2d35ea238c8b4</field>
    <field name="keywords">virtual_hook KFilterBase::virtual_hook KFilterBase virtual_hook KFilterBase::virtual_hook KFilterBase virtual_hook KFilterBase::virtual_hook KFilterBase</field>
    <field name="text">Unused in this class</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KFilterDev</field>
    <field name="url">classKFilterDev.html</field>
    <field name="keywords">KFilterDev</field>
    <field name="text">file but other usages are possible like a buffer or a socket To simply read/write compressed files see deviceForFile KFilterDev adds MIME type support to KCompressionDevice and also provides compatibility methods for KDE 4 code David Faure</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterDev::KFilterDev</field>
    <field name="args">(const QString &amp;fileName)</field>
    <field name="url">classKFilterDev.html#a7822f81287541a1952b04305273c9131</field>
    <field name="keywords">KFilterDev KFilterDev::KFilterDev KFilterDev</field>
    <field name="text">5.0 Constructs a KFilterDev for a given FileName fileName the name of the file to filter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterDev::compressionTypeForMimeType</field>
    <field name="args">(const QString &amp;mimetype)</field>
    <field name="url">classKFilterDev.html#a32ffcfa2ce1245b70605dcf51f6271ae</field>
    <field name="keywords">compressionTypeForMimeType KFilterDev::compressionTypeForMimeType KFilterDev</field>
    <field name="text">Otherwise returns None This handles simple cases like application/x-gzip but also application/x-compressed-tar and inheritance</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterDev::device</field>
    <field name="args">(QIODevice *inDevice, const QString &amp;mimetype, bool autoDeleteInDevice=true)</field>
    <field name="url">classKFilterDev.html#a15b5dc4093e405e8af6f021095464ee2</field>
    <field name="keywords">device KFilterDev::device KFilterDev</field>
    <field name="text">Use KCompressionDevice Use KCompressionDevice::CompressionType type KFilterDev::compressionTypeForMimeType(mimeType) KCompressionDevice flt(&amp;file, false, type) instead of QIODevice KFilterDev::device(&amp;file, mimeType, false) Creates an i/o device that is able to read from the QIODevice inDevice whether the data is compressed or not Available compression filters gzip/bzip2 etc will automatically be used The compression filter to be used is determined mimetype Pass or to use the corresponding decompression filter Warning application/x-bzip may not be available In that case 0 will be returned The returned QIODevice has to be deleted after using inDevice input device Won t be deleted if autoDeleteInDevice false mimetype the mime type for the filter autoDeleteInDevice if true inDevice will be deleted automatically a KCompressionDevice that filters the original stream Must be deleted after using</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFilterDev::deviceForFile</field>
    <field name="args">(const QString &amp;fileName, const QString &amp;mimetype=QString(), bool forceFilter=false)</field>
    <field name="url">classKFilterDev.html#a4714ddacbcfe6d57702505f7e07da141</field>
    <field name="keywords">deviceForFile KFilterDev::deviceForFile KFilterDev</field>
    <field name="text">Use the constructor instead if mimetype is empty or KCompressionDevice if the mimetype is known Use KFilterDev dev(fileName) instead of QIODevice dev KFilterDev::deviceForFile(fileName) If the mimetype was specified explicitly use KCompressionDevice dev(fileName, KCompressionDevice::GZip) instead of QIODevice dev KFilterDev::deviceForFile fileName Creates an i/o device that is able to read from fileName whether it s compressed or not Available compression filters gzip/bzip2 etc will automatically be used The compression filter to be used is determined from the fileName if mimetype is empty Pass or to force the corresponding decompression filter if available Warning application/x-bzip may not be available In that case a QFile opened on the compressed data will be returned Use KFilterBase::findFilterByMimeType and code similar to what deviceForFile is doing to better control what s happening The returned QIODevice has to be deleted after using fileName the name of the file to filter mimetype the mime type of the file to filter or QString() if unknown forceFilter if true the function will either find a compression filter or return 0 If false it will always return a QIODevice If no filter is available it will return a simple QFile This can be useful if the file is usable without a filter if a filter has been found the KCompressionDevice for the filter If the filter does not exist the return value depends on forceFilter The returned KCompressionDevice has to be deleted after using</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KGzipFilter</field>
    <field name="url">classKGzipFilter.html</field>
    <field name="keywords">KGzipFilter</field>
    <field name="text">This header is not installed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGzipFilter::compress</field>
    <field name="args">(bool finish) override</field>
    <field name="url">classKGzipFilter.html#a520486c1186f574a65193553097c3dbe</field>
    <field name="keywords">compress KGzipFilter::compress KGzipFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGzipFilter::inBufferAvailable</field>
    <field name="args">() const override</field>
    <field name="url">classKGzipFilter.html#a68a8ae632b9709ffa6467db851ed68a3</field>
    <field name="keywords">inBufferAvailable KGzipFilter::inBufferAvailable KGzipFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGzipFilter::init</field>
    <field name="args">(int mode) override</field>
    <field name="url">classKGzipFilter.html#af5d0a7474c9c282be010dda81849a61e</field>
    <field name="keywords">init KGzipFilter::init KGzipFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGzipFilter::mode</field>
    <field name="args">() const override</field>
    <field name="url">classKGzipFilter.html#ad41890576384ce05296ae8b78a1fa67d</field>
    <field name="keywords">mode KGzipFilter::mode KGzipFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGzipFilter::outBufferAvailable</field>
    <field name="args">() const override</field>
    <field name="url">classKGzipFilter.html#a99942744320d54d37c5d8cf0f66198a1</field>
    <field name="keywords">outBufferAvailable KGzipFilter::outBufferAvailable KGzipFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGzipFilter::readHeader</field>
    <field name="args">() override</field>
    <field name="url">classKGzipFilter.html#ac615dd80bb7432c7246aa17dab62fc9d</field>
    <field name="keywords">readHeader KGzipFilter::readHeader KGzipFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGzipFilter::reset</field>
    <field name="args">() override</field>
    <field name="url">classKGzipFilter.html#a3a1c571d4619bcf548a637a9ec67f7f6</field>
    <field name="keywords">reset KGzipFilter::reset KGzipFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGzipFilter::setInBuffer</field>
    <field name="args">(const char *data, uint size) override</field>
    <field name="url">classKGzipFilter.html#a3a00e0969d8897bbad9c7c463bf10103</field>
    <field name="keywords">setInBuffer KGzipFilter::setInBuffer KGzipFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGzipFilter::setOutBuffer</field>
    <field name="args">(char *data, uint maxlen) override</field>
    <field name="url">classKGzipFilter.html#a95d31cb1fe78b3b481c1616cedf26eef</field>
    <field name="keywords">setOutBuffer KGzipFilter::setOutBuffer KGzipFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGzipFilter::terminate</field>
    <field name="args">() override</field>
    <field name="url">classKGzipFilter.html#af297b127ab51424e3ef9d98fe38a0dae</field>
    <field name="keywords">terminate KGzipFilter::terminate KGzipFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGzipFilter::uncompress</field>
    <field name="args">() override</field>
    <field name="url">classKGzipFilter.html#affd1f648862b2256afc67711108267f4</field>
    <field name="keywords">uncompress KGzipFilter::uncompress KGzipFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGzipFilter::writeHeader</field>
    <field name="args">(const QByteArray &amp;fileName) override</field>
    <field name="url">classKGzipFilter.html#a01aeb5d5d4587046554f71d498891bdc</field>
    <field name="keywords">writeHeader KGzipFilter::writeHeader KGzipFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KNoneFilter</field>
    <field name="url">classKNoneFilter.html</field>
    <field name="keywords">KNoneFilter</field>
    <field name="text">This header is not installed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KNoneFilter::compress</field>
    <field name="args">(bool finish) override</field>
    <field name="url">classKNoneFilter.html#a23fed9b8d64772f104ff99eb14eb0a5d</field>
    <field name="keywords">compress KNoneFilter::compress KNoneFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KNoneFilter::inBufferAvailable</field>
    <field name="args">() const override</field>
    <field name="url">classKNoneFilter.html#aaf73deb35698fcf7f9a58518b4e4f640</field>
    <field name="keywords">inBufferAvailable KNoneFilter::inBufferAvailable KNoneFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KNoneFilter::init</field>
    <field name="args">(int mode) override</field>
    <field name="url">classKNoneFilter.html#ad743e6e718d11eab87f8064add0963a2</field>
    <field name="keywords">init KNoneFilter::init KNoneFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KNoneFilter::mode</field>
    <field name="args">() const override</field>
    <field name="url">classKNoneFilter.html#a6d3b2bee8a45a8dc4959040049e218bd</field>
    <field name="keywords">mode KNoneFilter::mode KNoneFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KNoneFilter::outBufferAvailable</field>
    <field name="args">() const override</field>
    <field name="url">classKNoneFilter.html#a48a941284ac2f3a49302f91d0817fda9</field>
    <field name="keywords">outBufferAvailable KNoneFilter::outBufferAvailable KNoneFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KNoneFilter::readHeader</field>
    <field name="args">() override</field>
    <field name="url">classKNoneFilter.html#a5766a7a1652a1bbdc991987147b3deb0</field>
    <field name="keywords">readHeader KNoneFilter::readHeader KNoneFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KNoneFilter::reset</field>
    <field name="args">() override</field>
    <field name="url">classKNoneFilter.html#aa5cca124200a3fbfca71985a4749984b</field>
    <field name="keywords">reset KNoneFilter::reset KNoneFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KNoneFilter::setInBuffer</field>
    <field name="args">(const char *data, uint size) override</field>
    <field name="url">classKNoneFilter.html#a1c0d5e488f5fcd64427e20585f303de7</field>
    <field name="keywords">setInBuffer KNoneFilter::setInBuffer KNoneFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KNoneFilter::setOutBuffer</field>
    <field name="args">(char *data, uint maxlen) override</field>
    <field name="url">classKNoneFilter.html#a987e75f011fefa9e6f9c853d639ab6d3</field>
    <field name="keywords">setOutBuffer KNoneFilter::setOutBuffer KNoneFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KNoneFilter::terminate</field>
    <field name="args">() override</field>
    <field name="url">classKNoneFilter.html#a59d5e9a685bc75c9281ecab937fc9eb0</field>
    <field name="keywords">terminate KNoneFilter::terminate KNoneFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KNoneFilter::uncompress</field>
    <field name="args">() override</field>
    <field name="url">classKNoneFilter.html#a610bbb553b9df07f4509f4cac64a5be9</field>
    <field name="keywords">uncompress KNoneFilter::uncompress KNoneFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KNoneFilter::writeHeader</field>
    <field name="args">(const QByteArray &amp;fileName) override</field>
    <field name="url">classKNoneFilter.html#a3ab10cd2b95428d3c904c1e07e5dec47</field>
    <field name="keywords">writeHeader KNoneFilter::writeHeader KNoneFilter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KRcc</field>
    <field name="url">classKRcc.html</field>
    <field name="keywords">KRcc</field>
    <field name="text">Writing is not supported A class for reading rcc resources 5.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRcc::KRcc</field>
    <field name="args">(const QString &amp;filename)</field>
    <field name="url">classKRcc.html#a7882b7b0e86c126a611144757fc862e2</field>
    <field name="keywords">KRcc KRcc::KRcc KRcc</field>
    <field name="text">filename is a local path e.g</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRcc::~KRcc</field>
    <field name="args">()</field>
    <field name="url">classKRcc.html#ae7a9778c8a99c75e6bf5c6b542c77342</field>
    <field name="keywords">KRcc::~KRcc KRcc</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRcc::closeArchive</field>
    <field name="args">() override</field>
    <field name="url">classKRcc.html#a7d32b3a4e283ba7a66d30c76069c3f33</field>
    <field name="keywords">closeArchive KRcc::closeArchive KRcc</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRcc::doFinishWriting</field>
    <field name="args">(qint64 size) override</field>
    <field name="url">classKRcc.html#a4f34239a914071605e4a8b3a67a59c85</field>
    <field name="keywords">doFinishWriting KRcc::doFinishWriting KRcc</field>
    <field name="text">This virtual method must be implemented by subclasses size the size of the file finishWriting()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRcc::doPrepareWriting</field>
    <field name="args">(const QString &amp;name, const QString &amp;user, const QString &amp;group, qint64 size, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</field>
    <field name="url">classKRcc.html#a9568adce115ae3efacc4d6c3928d0aaf</field>
    <field name="keywords">doPrepareWriting KRcc::doPrepareWriting KRcc</field>
    <field name="text">Depending on the archive type not all metadata might be used name the name of the file user the user that owns the file group the group that owns the file size the size of the file perm permissions of the file Use 0100644 if you don t have any more specific permissions to set atime time the file was last accessed mtime modification time of the file ctime time of last status change prepareWriting</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRcc::doWriteDir</field>
    <field name="args">(const QString &amp;name, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</field>
    <field name="url">classKRcc.html#a01d52e7e4b887813507382a870d66e0b</field>
    <field name="keywords">doWriteDir KRcc::doWriteDir KRcc</field>
    <field name="text">This virtual method must be implemented by subclasses Depending on the archive type not all metadata might be used name the name of the directory user the user that owns the directory group the group that owns the directory perm permissions of the directory Use 040755 if you don t have any other information atime time the file was last accessed mtime modification time of the file ctime time of last status change writeDir</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRcc::doWriteSymLink</field>
    <field name="args">(const QString &amp;name, const QString &amp;target, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</field>
    <field name="url">classKRcc.html#a8822cbee0507ca869254b2b18c32f17d</field>
    <field name="keywords">doWriteSymLink KRcc::doWriteSymLink KRcc</field>
    <field name="text">This virtual method must be implemented by subclasses name name of symbolic link target target of symbolic link user the user that owns the directory group the group that owns the directory perm permissions of the directory atime time the file was last accessed mtime modification time of the file ctime time of last status change writeSymLink</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRcc::openArchive</field>
    <field name="args">(QIODevice::OpenMode mode) override</field>
    <field name="url">classKRcc.html#a99aa0df3a18ec989d3633549a2e95368</field>
    <field name="keywords">openArchive KRcc::openArchive KRcc</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KTar</field>
    <field name="url">classKTar.html</field>
    <field name="keywords">KTar</field>
    <field name="text">KTar allows you to read and write tar archives including those that are compressed using gzip bzip2 or xz Torben Weis David Faure</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KTar::KTar</field>
    <field name="args">(const QString &amp;filename, const QString &amp;mimetype=QString())</field>
    <field name="url">classKTar.html#a44b9ab8fd30f0c7ffcf6a4a5c8f2443a</field>
    <field name="keywords">KTar KTar::KTar KTar</field>
    <field name="text">filename is a local path e.g mimetype or Do not use application/x-compressed-tar or similar you only need to specify the compression layer If the mimetype is omitted it will be determined from the filename</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KTar::KTar</field>
    <field name="args">(QIODevice *dev)</field>
    <field name="url">classKTar.html#a93e7ce44e3438619e7cfb91bc879f688</field>
    <field name="keywords">KTar KTar::KTar KTar</field>
    <field name="text">The device can be compressed KFilterDev or not QFile etc Do not assume that giving a QFile here will decompress the file in case it s compressed! dev the device to read from If the source is compressed the QIODevice must take care of decompression</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KTar::~KTar</field>
    <field name="args">()</field>
    <field name="url">classKTar.html#a8388c1acf8491f32ea04a9bc298f2d36</field>
    <field name="keywords">KTar::~KTar KTar</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KTar::setOrigFileName</field>
    <field name="args">(const QByteArray &amp;fileName)</field>
    <field name="url">classKTar.html#a6f104d8a72f38fcc1f5984a7f40a4d59</field>
    <field name="keywords">setOrigFileName KTar::setOrigFileName KTar</field>
    <field name="text">It appears when using in the command for instance Should only be called if the underlying device is a KFilterDev! fileName the original file name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KTar::closeArchive</field>
    <field name="args">() override</field>
    <field name="url">classKTar.html#a963f2c3fc94e0a44c1f24846a8db7a20</field>
    <field name="keywords">closeArchive KTar::closeArchive KTar</field>
    <field name="text">Called by close</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KTar::createDevice</field>
    <field name="args">(QIODevice::OpenMode mode) override</field>
    <field name="url">classKTar.html#a595e1d5daed28aa53a185f260ce8b629</field>
    <field name="keywords">createDevice KTar::createDevice KTar</field>
    <field name="text">By default this method uses QSaveFile when saving and a simple QFile on reading This method is called by open()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KTar::doFinishWriting</field>
    <field name="args">(qint64 size) override</field>
    <field name="url">classKTar.html#a3402a798f13eb00692901885c66b503c</field>
    <field name="keywords">doFinishWriting KTar::doFinishWriting KTar</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KTar::doPrepareWriting</field>
    <field name="args">(const QString &amp;name, const QString &amp;user, const QString &amp;group, qint64 size, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</field>
    <field name="url">classKTar.html#ac83bfdbafb791894f791e33e3f5e48b7</field>
    <field name="keywords">doPrepareWriting KTar::doPrepareWriting KTar</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KTar::doWriteDir</field>
    <field name="args">(const QString &amp;name, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</field>
    <field name="url">classKTar.html#ab7e296bf9ad349e68b00b3a5755b0bcd</field>
    <field name="keywords">doWriteDir KTar::doWriteDir KTar</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KTar::doWriteSymLink</field>
    <field name="args">(const QString &amp;name, const QString &amp;target, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</field>
    <field name="url">classKTar.html#a397a1617c71924cb2bc57122d409f4bd</field>
    <field name="keywords">doWriteSymLink KTar::doWriteSymLink KTar</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KTar::openArchive</field>
    <field name="args">(QIODevice::OpenMode mode) override</field>
    <field name="url">classKTar.html#a85ce841ac81b8dbce228e152cda5d555</field>
    <field name="keywords">openArchive KTar::openArchive KTar</field>
    <field name="text">Parses the directory listing of the archive and creates the KArchiveDirectory/KArchiveFile entries mode the mode of the file</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KZip</field>
    <field name="url">classKZip.html</field>
    <field name="keywords">KZip</field>
    <field name="text">You can use it in QIODevice::ReadOnly or in QIODevice::WriteOnly mode and it behaves just as expected It can also be used in QIODevice::ReadWrite mode in this case one can append files to an existing zip archive When you append new files which are not yet in the zip it works as expected i.e the files are appended at the end When you append a file which is already in the file the reference to the old file is dropped and the new one is added to the zip but the old data from the file itself is not deleted it is still in the zipfile So when you want to have a small and garbage-free zipfile just read the contents of the appended zip file and write it to a new one in QIODevice::WriteOnly mode This is especially important when you don t want to leak information of how intermediate versions of files in the zip were looking For more information on the zip fileformat go to Holger Schroeder</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KZip::Compression</field>
    <field name="url">classKZip.html#ab0654dff75d0f8747b0d90ad39bc2ace</field>
    <field name="keywords">Compression KZip::Compression KZip</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KZip::NoCompression</field>
    <field name="url">classKZip.html#ab0654dff75d0f8747b0d90ad39bc2aceabf73c42b9987176459a29f393baf4e6a</field>
    <field name="keywords">NoCompression KZip::NoCompression KZip</field>
    <field name="text">Uncompressed</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KZip::DeflateCompression</field>
    <field name="url">classKZip.html#ab0654dff75d0f8747b0d90ad39bc2acea4a8ddbf17f28e126c1e5a297876ada80</field>
    <field name="keywords">DeflateCompression KZip::DeflateCompression KZip</field>
    <field name="text">Deflate compression method</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KZip::ExtraField</field>
    <field name="url">classKZip.html#a3b1610ecac186076da3f424b6103ff04</field>
    <field name="keywords">ExtraField KZip::ExtraField KZip</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KZip::NoExtraField</field>
    <field name="url">classKZip.html#a3b1610ecac186076da3f424b6103ff04ad5e053e8f68fe61489583558268ed660</field>
    <field name="keywords">NoExtraField KZip::NoExtraField KZip</field>
    <field name="text">No extra field</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KZip::ModificationTime</field>
    <field name="url">classKZip.html#a3b1610ecac186076da3f424b6103ff04a7b5b655b17f10dfe213d3b2323e601a0</field>
    <field name="keywords">ModificationTime KZip::ModificationTime KZip</field>
    <field name="text">Modification time header</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZip::KZip</field>
    <field name="args">(const QString &amp;filename)</field>
    <field name="url">classKZip.html#a62f0a5753d4ef02f5611b1f8dd7caf50</field>
    <field name="keywords">KZip KZip::KZip KZip</field>
    <field name="text">using the compression filter associated to given mimetype filename is a local path e.g</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZip::KZip</field>
    <field name="args">(QIODevice *dev)</field>
    <field name="url">classKZip.html#a4e07b57c827771e453a9aa3f6df2102b</field>
    <field name="keywords">KZip KZip::KZip KZip</field>
    <field name="text">The device can be compressed KFilterDev or not QFile etc Do not assume that giving a QFile here will decompress the file in case it s compressed! dev the device to access</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZip::~KZip</field>
    <field name="args">()</field>
    <field name="url">classKZip.html#a895868321e479a01525fd8a8e9714525</field>
    <field name="keywords">KZip::~KZip KZip</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZip::compression</field>
    <field name="args">() const</field>
    <field name="url">classKZip.html#ab525eff29d4425a3bd4230dcde5c8031</field>
    <field name="keywords">compression KZip::compression KZip</field>
    <field name="text">the current compression mode setCompression()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZip::extraField</field>
    <field name="args">() const</field>
    <field name="url">classKZip.html#aff9413e15927d39a63fcccf5ca8da504</field>
    <field name="keywords">extraField KZip::extraField KZip</field>
    <field name="text">the current type of setExtraField()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZip::setCompression</field>
    <field name="args">(Compression c)</field>
    <field name="url">classKZip.html#a286095b519b20b3a82449f7b5b50e039</field>
    <field name="keywords">setCompression KZip::setCompression KZip</field>
    <field name="text">c the new compression mode compression()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZip::setExtraField</field>
    <field name="args">(ExtraField ef)</field>
    <field name="url">classKZip.html#a5e9a9365ce56a6d1124be7ee8fae360d</field>
    <field name="keywords">setExtraField KZip::setExtraField KZip</field>
    <field name="text">ef the type of extraField()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZip::writeData</field>
    <field name="args">(const char *data, qint64 size) override</field>
    <field name="url">classKZip.html#aaa3425245096f000f5a82d5e572ce4f9</field>
    <field name="keywords">writeData KZip::writeData KZip</field>
    <field name="text">data a pointer to the data size the size of the chunk true if successful false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZip::closeArchive</field>
    <field name="args">() override</field>
    <field name="url">classKZip.html#a8b732f0df8e83658cabb7eff226941c8</field>
    <field name="keywords">closeArchive KZip::closeArchive KZip</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZip::doFinishWriting</field>
    <field name="args">(qint64 size) override</field>
    <field name="url">classKZip.html#a779b54eddb092d2e97503a276b9fddfc</field>
    <field name="keywords">doFinishWriting KZip::doFinishWriting KZip</field>
    <field name="text">size the size of the file true if successful false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZip::doPrepareWriting</field>
    <field name="args">(const QString &amp;name, const QString &amp;user, const QString &amp;group, qint64 size, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;creationTime) override</field>
    <field name="url">classKZip.html#a5c41f2268fe0ab47b463ea41b9dc4d71</field>
    <field name="keywords">doPrepareWriting KZip::doPrepareWriting KZip</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZip::doWriteDir</field>
    <field name="args">(const QString &amp;name, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</field>
    <field name="url">classKZip.html#a1c872c7826c50ccd5b9fc6247dab3923</field>
    <field name="keywords">doWriteDir KZip::doWriteDir KZip</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZip::doWriteSymLink</field>
    <field name="args">(const QString &amp;name, const QString &amp;target, const QString &amp;user, const QString &amp;group, mode_t perm, const QDateTime &amp;atime, const QDateTime &amp;mtime, const QDateTime &amp;ctime) override</field>
    <field name="url">classKZip.html#ace30d108e4428e06f33fa7c26eae4cc1</field>
    <field name="keywords">doWriteSymLink KZip::doWriteSymLink KZip</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZip::openArchive</field>
    <field name="args">(QIODevice::OpenMode mode) override</field>
    <field name="url">classKZip.html#a18c321438e2c8f44c5e2dcf69fbdbc5a</field>
    <field name="keywords">openArchive KZip::openArchive KZip</field>
    <field name="text">Parses the directory listing of the archive and creates the KArchiveDirectory/KArchiveFile entries mode the mode of the file</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KZipFileEntry</field>
    <field name="url">classKZipFileEntry.html</field>
    <field name="keywords">KZipFileEntry</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZipFileEntry::KZipFileEntry</field>
    <field name="args">(KZip *zip, const QString &amp;name, int access, const QDateTime &amp;date, const QString &amp;user, const QString &amp;group, const QString &amp;symlink, const QString &amp;path, qint64 start, qint64 uncompressedSize, int encoding, qint64 compressedSize)</field>
    <field name="url">classKZipFileEntry.html#a033d81c2d025339f668b3155277e7657</field>
    <field name="keywords">KZipFileEntry KZipFileEntry::KZipFileEntry KZipFileEntry</field>
    <field name="text">Do not call this KZip takes care of it</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZipFileEntry::~KZipFileEntry</field>
    <field name="args">()</field>
    <field name="url">classKZipFileEntry.html#afcc1fa146426aa46ce1d2bd716bc40db</field>
    <field name="keywords">KZipFileEntry::~KZipFileEntry KZipFileEntry</field>
    <field name="text">Do not call this</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZipFileEntry::crc32</field>
    <field name="args">() const</field>
    <field name="url">classKZipFileEntry.html#a6a298ae6d8c2ef6db7e31b04d6a10162</field>
    <field name="keywords">crc32 KZipFileEntry::crc32 KZipFileEntry</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZipFileEntry::createDevice</field>
    <field name="args">() const override</field>
    <field name="url">classKZipFileEntry.html#a7b6664ddcb866653788e03ed9b59c28f</field>
    <field name="keywords">createDevice KZipFileEntry::createDevice KZipFileEntry</field>
    <field name="text">This is obviously for reading only Note that the ownership of the device is being transferred to the caller who will have to delete it The returned device auto-opens in readonly mode no need to open it</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZipFileEntry::data</field>
    <field name="args">() const override</field>
    <field name="url">classKZipFileEntry.html#ab51e1c6ece127c3140318389cd4293be</field>
    <field name="keywords">data KZipFileEntry::data KZipFileEntry</field>
    <field name="text">the content of this file Call data() with care only once per file this data isn t cached</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZipFileEntry::path</field>
    <field name="args">() const</field>
    <field name="url">classKZipFileEntry.html#a6c69b7a8e5d55d44c0261fcb14f35173</field>
    <field name="keywords">path KZipFileEntry::path KZipFileEntry</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZipFileEntry::setCompressedSize</field>
    <field name="args">(qint64 compressedSize)</field>
    <field name="url">classKZipFileEntry.html#a32ce307aacdabb7b6258e6c47f537823</field>
    <field name="keywords">setCompressedSize KZipFileEntry::setCompressedSize KZipFileEntry</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KZipFileEntry::setHeaderStart</field>
    <field name="args">(qint64 headerstart)</field>
    <field name="url">classKZipFileEntry.html#afa03f8127ff0da1acb6f52056a8c5679</field>
    <field name="keywords">setHeaderStart KZipFileEntry::setHeaderStart KZipFileEntry</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">index</field>
    <field name="url">index.html</field>
    <field name="keywords"></field>
    <field name="text">KArchive Reading creating and manipulating file archives Introduction KArchive provides classes for easy reading creation and manipulation of formats like ZIP and TAR It also provides transparent compression and decompression of data like the GZip format via a subclass of QIODevice Usage If you want to read and write compressed data just create an instance of KCompressionDevice and write to or read from that If you want to read and write archive formats create an instance of the appropriate subclass of KArchive eg K7Zip for 7-Zip files You may need to combine this with usage of KCompressionDevice see the API documentation for the relevant KArchive subclass for details</field>
  </doc>
</add>
