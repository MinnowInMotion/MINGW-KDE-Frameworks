<?xml version="1.0" encoding="UTF-8"?>
<add>
  <doc>
    <field name="type">source</field>
    <field name="name">desktopfileparser.cpp</field>
    <field name="url">desktopfileparser_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_LOGGING_CATEGORY DESKTOPPARSER QtDebugMsg Q_LOGGING_CATEGORY DESKTOPPARSER QtWarningMsg DesktopFileParser QStringList DesktopFileParser::deserializeList QString data separator data isEmpty QStringList data QLatin1String QStringList QString QStringList value QString val val reserve data size quoted p p data length p quoted val data p quoted data p unicode quoted data p unicode separator value append val p data length value val clear val reserve data size p val data p value append val value QByteArray DesktopFileParser::escapeValue QByteArray input start input indexOf start input QByteArray result result reserve input size result append input data start i start i input length i input i result append input i i input length result append input i i nextChar input i nextChar result append result append result append result append result append result append result append nextChar result CustomPropertyDefinition CustomPropertyDefinition type QVariant String CustomPropertyDefinition QByteArray key QVariant::Type type key key type type QJsonValue fromString QString str type QVariant::String str QVariant::StringList QJsonArray::fromStringList deserializeList str QVariant::Int ok result str toInt ok ok qCWarning DESKTOPPARSER key str QJsonValue QJsonValue result QVariant::Double ok result str toDouble ok ok qCWarning DESKTOPPARSER key str QJsonValue QJsonValue result QVariant::Bool result str compare QLatin1String Qt::CaseInsensitive result str compare QLatin1String Qt::CaseInsensitive qCWarning DESKTOPPARSER key str QJsonValue QJsonValue result Q_UNREACHABLE QByteArray key QVariant::Type type readUntilDesktopEntryGroup QFile file QString path lineNr file open QFile::ReadOnly qCWarning DESKTOPPARSER path file atEnd QByteArray line file readLine trimmed lineNr line qCWarning DESKTOPPARSER path QByteArray readTypeEntryForCurrentGroup QFile df QByteArray nextGroup QByteArray group nextGroup QByteArray type group isEmpty qCWarning DESKTOPPARSER df atEnd QByteArray line df readLine trimmed line isEmpty line startsWith line startsWith line endsWith qCWarning DESKTOPPARSER line QByteArray name line mid line lastIndexOf trimmed nextGroup name line startsWith QByteArrayLiteral type line mid qstrlen type QVector&lt;CustomPropertyDefinition&gt; parseServiceTypesFile QString path lineNr QDir::isRelativePath path QString originalPath path path QStandardPaths::locate QStandardPaths::GenericDataLocation QStringLiteral path path isEmpty qCCritical DESKTOPPARSER originalPath QStandardPaths::standardLocations QStandardPaths::GenericDataLocation QFile df path df exists qCCritical DESKTOPPARSER path readUntilDesktopEntryGroup df path lineNr QVector&lt;CustomPropertyDefinition&gt; result QByteArray nextGroup QByteArray typeStr readTypeEntryForCurrentGroup df nextGroup typeStr QByteArrayLiteral qCWarning DESKTOPPARSER path typeStr df atEnd QByteArray currentGroup nextGroup typeStr readTypeEntryForCurrentGroup df nextGroup currentGroup startsWith QByteArrayLiteral qCWarning DESKTOPPARSER currentGroup path typeStr isEmpty qCWarning DESKTOPPARSER currentGroup QByteArray propertyName currentGroup mid qstrlen QVariant::Type type QVariant::nameToType typeStr constData type QVariant::String QVariant::StringList QVariant::Int QVariant::Double QVariant::Bool qCDebug DESKTOPPARSER propertyName typeStr result push_back CustomPropertyDefinition propertyName type QVariant::Invalid qCWarning DESKTOPPARSER typeStr propertyName path qCWarning DESKTOPPARSER typeStr propertyName path QVector&lt;CustomPropertyDefinition&gt; result QCache&lt;QString, QVector&lt;CustomPropertyDefinition&gt; ServiceTypesHash Q_GLOBAL_STATIC ServiceTypesHash s_serviceTypes QBasicMutex s_serviceTypesMutex ServiceTypeDefinition::ServiceTypeDefinition QVector&lt; CustomPropertyDefinition &gt; defs m_definitions defs ServiceTypeDefinition ServiceTypeDefinition::fromFiles QStringList paths QVector&lt;CustomPropertyDefinition&gt; defs defs reserve paths size QString serviceType paths QMutexLocker lock s_serviceTypesMutex QVector&lt;CustomPropertyDefinition&gt; def s_serviceTypes object serviceType def defs def qCDebug DESKTOPPARSER serviceType def parseServiceTypesFile serviceType def exit defs def s_serviceTypes insert serviceType def ServiceTypeDefinition defs QJsonValue ServiceTypeDefinition::parseValue QByteArray key QString value CustomPropertyDefinition propertyDef m_definitions propertyDef key key propertyDef fromString value qCDebug DESKTOPPARSER key QJsonValue value DesktopFileParser::convertToJson QByteArray key ServiceTypeDefinition serviceTypes QString value QJsonObject json QJsonObject kplugin lineNr key QByteArrayLiteral kplugin QStringLiteral value key QByteArrayLiteral kplugin QStringLiteral value key QByteArrayLiteral kplugin QStringLiteral value key QByteArrayLiteral kplugin QStringLiteral value key QByteArrayLiteral kplugin QStringLiteral value key QByteArrayLiteral kplugin QStringLiteral value key QByteArrayLiteral kplugin QStringLiteral QJsonArray::fromStringList deserializeList value key QByteArrayLiteral key QByteArrayLiteral kplugin QStringLiteral QJsonArray::fromStringList deserializeList value key QByteArrayLiteral kplugin QStringLiteral QJsonArray::fromStringList deserializeList value json QStringLiteral value key QByteArrayLiteral kplugin QStringLiteral QJsonArray::fromStringList deserializeList value key QByteArrayLiteral boolValue value toLower QLatin1String boolValue value toLower QLatin1String qCWarning DESKTOPPARSER nospace key lineNr value kplugin QStringLiteral boolValue key QByteArrayLiteral QJsonObject authorsObject kplugin value QStringLiteral toArray at toObject authorsObject QStringLiteral value QJsonArray array array append authorsObject kplugin QStringLiteral array key QByteArrayLiteral QJsonObject authorsObject kplugin value QStringLiteral toArray at toObject authorsObject QStringLiteral value QJsonArray array array append authorsObject kplugin QStringLiteral array key QByteArrayLiteral key startsWith QByteArrayLiteral kplugin QString::fromUtf8 key value key QByteArrayLiteral kplugin QStringLiteral value key startsWith QByteArrayLiteral kplugin QStringLiteral QString::fromUtf8 key mid qstrlen value key QByteArrayLiteral DESKTOPTOJSON_VERBOSE_WARNING kplugin QString::fromUtf8 key value toLower QLatin1String key QByteArrayLiteral key QByteArrayLiteral key QByteArrayLiteral key QByteArrayLiteral DESKTOPTOJSON_VERBOSE_DEBUG key value json QString::fromUtf8 key serviceTypes parseValue key value DesktopFileParser::convert QString src QStringList serviceTypes QJsonObject json QString libraryPath QFile df src lineNr ServiceTypeDefinition serviceTypeDef ServiceTypeDefinition::fromFiles serviceTypes readUntilDesktopEntryGroup df src lineNr DESKTOPTOJSON_VERBOSE_DEBUG lineNr QJsonObject kplugin df atEnd QByteArray line df readLine trimmed lineNr line isEmpty DESKTOPTOJSON_VERBOSE_DEBUG lineNr line startsWith DESKTOPTOJSON_VERBOSE_DEBUG lineNr line startsWith DESKTOPTOJSON_VERBOSE_DEBUG lineNr line equalsIndex line indexOf equalsIndex qCWarning DESKTOPPARSER nospace qPrintable src lineNr line constData QByteArray key line mid equalsIndex trimmed key isEmpty qCWarning DESKTOPPARSER nospace qPrintable src lineNr line constData QByteArray valueRaw line mid equalsIndex trimmed QByteArray valueEscaped escapeValue valueRaw QString value QString::fromUtf8 valueEscaped DESKTOPTOJSON_VERBOSE_DEBUG nospace lineNr key value valueEscaped valueRaw DESKTOPTOJSON_VERBOSE_DEBUG lineNr s_compatibilityMode convertToCompatibilityJson QString::fromUtf8 key value json lineNr convertToJson key serviceTypeDef value json kplugin lineNr convertToJson key serviceTypeDef value json kplugin lineNr libraryPath key QByteArrayLiteral libraryPath value json QStringLiteral kplugin</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">desktoptojson.cpp</field>
    <field name="url">desktoptojson_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">DesktopToJson::DesktopToJson QCommandLineParser parser QCommandLineOption i QCommandLineOption o QCommandLineOption v QCommandLineOption c QCommandLineOption s m_parser parser input i output o verbose v compat c serviceTypesOption s DesktopFileParser::s_verbose DesktopFileParser::s_compatibilityMode DesktopToJson::runMain m_parser isSet input m_parser showHelp m_parser isSet verbose DesktopFileParser::s_verbose m_parser isSet compat DesktopFileParser::s_compatibilityMode resolveFiles qCCritical DESKTOPPARSER m_inFile m_outFile endl QStringList serviceTypes m_parser values serviceTypesOption convert m_inFile m_outFile serviceTypes EXIT_SUCCESS EXIT_FAILURE DesktopToJson::resolveFiles m_parser isSet input m_inFile m_parser value input QFileInfo fi m_inFile fi exists qCCritical DESKTOPPARSER m_inFile endl fi isAbsolute m_inFile fi absoluteFilePath m_parser isSet output m_outFile m_parser value output m_inFile isEmpty m_outFile m_inFile m_outFile replace QStringLiteral QStringLiteral m_inFile m_outFile m_inFile isEmpty m_outFile isEmpty DesktopFileParser::convertToCompatibilityJson QString key QString value QJsonObject json lineNr QStringList boolkeys QStringList QStringLiteral QStringLiteral QStringList stringlistkeys QStringList QStringLiteral QStringLiteral boolkeys contains key value toLower QLatin1String json key value toLower QLatin1String qCWarning DESKTOPPARSER nospace key lineNr value json key stringlistkeys contains key json key QJsonArray::fromStringList DesktopFileParser::deserializeList value json key value DesktopToJson::convert QString src QString dest QStringList serviceTypes QJsonObject json DesktopFileParser::convert src serviceTypes json DesktopFileParser::s_compatibilityMode Q_ASSERT json value QStringLiteral toObject isEmpty json remove QStringLiteral QJsonDocument jdoc jdoc setObject json QFile file dest file open QIODevice::WriteOnly QIODevice::Text qCCritical DESKTOPPARSER dest endl file write jdoc toJson qCDebug DESKTOPPARSER dest endl</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">desktoptojson.h</field>
    <field name="url">desktoptojson_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QCommandLineParser DesktopToJson DesktopToJson QCommandLineParser parser QCommandLineOption i QCommandLineOption o QCommandLineOption v QCommandLineOption c QCommandLineOption s runMain convert QString src QString dest QStringList serviceTypes convertToJson QString key QString value QJsonObject json QJsonObject kplugin lineNr convertToCompatibilityJson QString key QString value QJsonObject json lineNr resolveFiles QCommandLineParser m_parser QCommandLineOption input QCommandLineOption output QCommandLineOption verbose QCommandLineOption compat QCommandLineOption serviceTypesOption QString m_inFile QString m_outFile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_DECLARE_LOGGING_CATEGORY KABOUTDATA Q_LOGGING_CATEGORY KABOUTDATA QtWarningMsg KAboutPerson::Private QString _name QString _task QString _emailAddress QString _webAddress QString _ocsUsername</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00060</field>
    <field name="keywords"></field>
    <field name="text">KAboutPerson::KAboutPerson QString _name QString _task QString _emailAddress QString _webAddress QString _ocsUsername d new Private d _name _name d _task _task d _emailAddress _emailAddress d _webAddress _webAddress d _ocsUsername _ocsUsername KAboutPerson::KAboutPerson QString _name QString _email d Private d _name _name d _emailAddress _email</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">KAboutPerson::KAboutPerson KAboutPerson other d new Private d other d KAboutPerson::~KAboutPerson d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutPerson::name d _name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutPerson::task d _task</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutPerson::emailAddress d _emailAddress</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00106</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutPerson::webAddress d _webAddress</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00111</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutPerson::ocsUsername d _ocsUsername</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00116</field>
    <field name="keywords"></field>
    <field name="text">KAboutPerson KAboutPerson::operator= KAboutPerson other d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00122</field>
    <field name="keywords"></field>
    <field name="text">KAboutPerson KAboutPerson::fromJSON QJsonObject obj QString name KPluginMetaData::readTranslatedString obj QStringLiteral QString task KPluginMetaData::readTranslatedString obj QStringLiteral QString email obj QStringLiteral toString QString website obj QStringLiteral toString QString userName obj QStringLiteral toString KAboutPerson name task email website userName KAboutLicense::Private QSharedData Private LicenseKey licenseType KAboutData aboutData Private KAboutData aboutData Private Private other LicenseKey _licenseKey QString _licenseText QString _pathToLicenseTextFile KAboutData _aboutData KAboutLicense::Private::Private LicenseKey licenseType KAboutData aboutData QSharedData _licenseKey licenseType _aboutData aboutData KAboutLicense::Private::Private KAboutData aboutData QSharedData _licenseKey Unknown _aboutData aboutData KAboutLicense::Private::Private KAboutLicense::Private other QSharedData other _licenseKey other _licenseKey _licenseText other _licenseText _pathToLicenseTextFile other _pathToLicenseTextFile _aboutData other _aboutData KAboutLicense::KAboutLicense LicenseKey licenseType KAboutData aboutData d Private licenseType aboutData KAboutLicense::KAboutLicense KAboutData aboutData d Private aboutData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00179</field>
    <field name="keywords"></field>
    <field name="text">KAboutLicense::KAboutLicense KAboutLicense other d other d KAboutLicense::~KAboutLicense KAboutLicense::setLicenseFromPath QString pathToFile d _licenseKey KAboutLicense::File d _pathToLicenseTextFile pathToFile KAboutLicense::setLicenseFromText QString licenseText d _licenseKey KAboutLicense::Custom d _licenseText licenseText</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00199</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutLicense::text QString result QString lineFeed QStringLiteral d _aboutData d _aboutData copyrightStatement isEmpty result d _aboutData copyrightStatement lineFeed knownLicense QString pathToFile d _licenseKey KAboutLicense::File pathToFile d _pathToLicenseTextFile KAboutLicense::GPL_V2 knownLicense pathToFile QStringLiteral KAboutLicense::LGPL_V2 knownLicense pathToFile QStringLiteral KAboutLicense::BSDL knownLicense pathToFile QStringLiteral KAboutLicense::Artistic knownLicense pathToFile QStringLiteral KAboutLicense::QPL_V1_0 knownLicense pathToFile QStringLiteral KAboutLicense::GPL_V3 knownLicense pathToFile QStringLiteral KAboutLicense::LGPL_V3 knownLicense pathToFile QStringLiteral KAboutLicense::LGPL_V2_1 knownLicense pathToFile QStringLiteral KAboutLicense::Custom d _licenseText isEmpty result d _licenseText result QCoreApplication::translate knownLicense pathToFile QStandardPaths::locate QStandardPaths::GenericDataLocation QString::fromLatin1 pathToFile result QCoreApplication::translate arg name KAboutLicense::ShortName pathToFile isEmpty result lineFeed pathToFile isEmpty QFile file pathToFile file open QIODevice::ReadOnly QTextStream str file result str readAll result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00283</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutLicense::name KAboutLicense::NameFormat formatName QString licenseShort QString licenseFull d _licenseKey KAboutLicense::GPL_V2 licenseShort QCoreApplication::translate licenseFull QCoreApplication::translate KAboutLicense::LGPL_V2 licenseShort QCoreApplication::translate licenseFull QCoreApplication::translate KAboutLicense::BSDL licenseShort QCoreApplication::translate licenseFull QCoreApplication::translate KAboutLicense::Artistic licenseShort QCoreApplication::translate licenseFull QCoreApplication::translate KAboutLicense::QPL_V1_0 licenseShort QCoreApplication::translate licenseFull QCoreApplication::translate KAboutLicense::GPL_V3 licenseShort QCoreApplication::translate licenseFull QCoreApplication::translate KAboutLicense::LGPL_V3 licenseShort QCoreApplication::translate licenseFull QCoreApplication::translate KAboutLicense::LGPL_V2_1 licenseShort QCoreApplication::translate licenseFull QCoreApplication::translate KAboutLicense::Custom KAboutLicense::File licenseShort licenseFull QCoreApplication::translate licenseShort licenseFull QCoreApplication::translate QString result formatName KAboutLicense::ShortName licenseShort formatName KAboutLicense::FullName licenseFull QString result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00337</field>
    <field name="keywords"></field>
    <field name="text">KAboutLicense KAboutLicense::operator= KAboutLicense other d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00343</field>
    <field name="keywords"></field>
    <field name="text">KAboutLicense::LicenseKey KAboutLicense::key d _licenseKey</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00348</field>
    <field name="keywords"></field>
    <field name="text">KAboutLicense KAboutLicense::byKeyword QString rawKeyword QHash&lt;QByteArray, KAboutLicense::LicenseKey&gt; ldict ldict isEmpty ldict insert KAboutLicense::GPL ldict insert KAboutLicense::GPL_V2 ldict insert KAboutLicense::GPL_V2 ldict insert KAboutLicense::LGPL ldict insert KAboutLicense::LGPL_V2 ldict insert KAboutLicense::LGPL_V2 ldict insert KAboutLicense::BSDL ldict insert KAboutLicense::Artistic ldict insert KAboutLicense::QPL ldict insert KAboutLicense::QPL_V1_0 ldict insert KAboutLicense::QPL_V1_0 ldict insert KAboutLicense::GPL_V3 ldict insert KAboutLicense::GPL_V3 ldict insert KAboutLicense::LGPL_V3 ldict insert KAboutLicense::LGPL_V3 ldict insert KAboutLicense::LGPL_V2_1 ldict insert KAboutLicense::LGPL_V2_1 QString keyword rawKeyword keyword keyword toLower keyword remove QLatin1Char keyword remove QLatin1Char LicenseKey license ldict value keyword toLatin1 KAboutLicense::Custom KAboutLicense license KAboutData::Private Private customAuthorTextEnabled QString _componentName QString _displayName QString _shortDescription QString _copyrightStatement QString _otherText QString _homepageAddress QList&lt;KAboutPerson&gt; _authorList QList&lt;KAboutPerson&gt; _creditList QList&lt;KAboutPerson&gt; _translatorList QList&lt;KAboutLicense&gt; _licenseList QString productName QString programIconName QVariant programLogo QString customAuthorPlainText customAuthorRichText customAuthorTextEnabled QString organizationDomain QString _ocsProviderUrl QString desktopFileName QByteArray _internalProgramName QByteArray _version QByteArray _bugEmailAddress QList&lt;KAboutPerson&gt; parseTranslators QString translatorName QString translatorEmail</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00420</field>
    <field name="keywords"></field>
    <field name="text">KAboutData::KAboutData QString _componentName QString _displayName QString _version QString _shortDescription KAboutLicense::LicenseKey licenseType QString _copyrightStatement QString text QString homePageAddress QString bugsEmailAddress d new Private d _componentName _componentName p d _componentName indexOf QLatin1Char p d _componentName d _componentName mid p d _displayName _displayName d _displayName isEmpty d _internalProgramName _displayName toUtf8 d _version _version toUtf8 d _shortDescription _shortDescription d _licenseList append KAboutLicense licenseType d _copyrightStatement _copyrightStatement d _otherText text d _homepageAddress homePageAddress d _bugEmailAddress bugsEmailAddress toUtf8 QUrl homePageUrl homePageAddress homePageUrl isValid homePageUrl scheme isEmpty homePageUrl setUrl QStringLiteral QChar dotChar QLatin1Char QStringList hostComponents homePageUrl host split dotChar hostComponents size hostComponents removeFirst d organizationDomain hostComponents join dotChar std::reverse hostComponents begin hostComponents end hostComponents append _componentName d desktopFileName hostComponents join dotChar</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00473</field>
    <field name="keywords"></field>
    <field name="text">KAboutData::KAboutData QString _componentName QString _displayName QString _version d new Private d _componentName _componentName p d _componentName indexOf QLatin1Char p d _componentName d _componentName mid p d _displayName _displayName d _displayName isEmpty d _internalProgramName _displayName toUtf8 d _version _version toUtf8 d _licenseList append KAboutLicense KAboutLicense::Unknown d _bugEmailAddress d organizationDomain QStringLiteral d desktopFileName QStringLiteral arg d _componentName KAboutData::~KAboutData d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00503</field>
    <field name="keywords"></field>
    <field name="text">KAboutData::KAboutData KAboutData other d new Private d other d QList&lt;KAboutLicense&gt;::iterator it d _licenseList begin itEnd d _licenseList end it itEnd it KAboutLicense al it al d detach al d _aboutData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00514</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::operator= KAboutData other other d other d QList&lt;KAboutLicense&gt;::iterator it d _licenseList begin itEnd d _licenseList end it itEnd it KAboutLicense al it al d detach al d _aboutData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00528</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::fromPluginMetaData KPluginMetaData plugin KAboutData ret plugin pluginId plugin name plugin version plugin description KAboutLicense::byKeyword plugin license key plugin copyrightText plugin extraInformation plugin website ret d programIconName plugin iconName ret d _authorList plugin authors ret d _translatorList plugin translators ret d _creditList plugin otherContributors ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00541</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::addAuthor QString name QString task QString emailAddress QString webAddress QString ocsUsername d _authorList append KAboutPerson name task emailAddress webAddress ocsUsername</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00551</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::addCredit QString name QString task QString emailAddress QString webAddress QString ocsUsername d _creditList append KAboutPerson name task emailAddress webAddress ocsUsername</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00561</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setTranslator QString name QString emailAddress d _translatorList Private::parseTranslators name emailAddress</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00568</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setLicenseText QString licenseText d _licenseList KAboutLicense d _licenseList setLicenseFromText licenseText</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00575</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::addLicenseText QString licenseText KAboutLicense firstLicense d _licenseList KAboutLicense newLicense newLicense setLicenseFromText licenseText d _licenseList count firstLicense d _licenseKey KAboutLicense::Unknown firstLicense newLicense d _licenseList append newLicense</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00590</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setLicenseTextFile QString pathToFile d _licenseList KAboutLicense d _licenseList setLicenseFromPath pathToFile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00597</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::addLicenseTextFile QString pathToFile KAboutLicense firstLicense d _licenseList KAboutLicense newLicense newLicense setLicenseFromPath pathToFile d _licenseList count firstLicense d _licenseKey KAboutLicense::Unknown firstLicense newLicense d _licenseList append newLicense</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00611</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setComponentName QString componentName d _componentName componentName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00617</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setDisplayName QString _displayName d _displayName _displayName d _internalProgramName _displayName toUtf8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00624</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setOcsProvider QString _ocsProviderUrl d _ocsProviderUrl _ocsProviderUrl</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00630</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setVersion QByteArray _version d _version _version</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00636</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setShortDescription QString _shortDescription d _shortDescription _shortDescription</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00642</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setLicense KAboutLicense::LicenseKey licenseKey d _licenseList KAboutLicense licenseKey</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00648</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::addLicense KAboutLicense::LicenseKey licenseKey KAboutLicense firstLicense d _licenseList d _licenseList count firstLicense d _licenseKey KAboutLicense::Unknown firstLicense KAboutLicense licenseKey d _licenseList append KAboutLicense licenseKey</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00660</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setCopyrightStatement QString _copyrightStatement d _copyrightStatement _copyrightStatement</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00666</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setOtherText QString _otherText d _otherText _otherText</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00672</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setHomepage QString homepage d _homepageAddress homepage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00678</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setBugAddress QByteArray _bugAddress d _bugEmailAddress _bugAddress</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00684</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setOrganizationDomain QByteArray domain d organizationDomain QString::fromLatin1 domain data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00690</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setProductName QByteArray _productName d productName QString::fromUtf8 _productName data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00696</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutData::componentName d _componentName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00701</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutData::productName d productName isEmpty d productName componentName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00709</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutData::displayName d _displayName isEmpty d _displayName componentName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00720</field>
    <field name="keywords"></field>
    <field name="text">KAboutData::internalProgramName d _internalProgramName constData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00725</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutData::programIconName d programIconName isEmpty componentName d programIconName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00730</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setProgramIconName QString iconName d programIconName iconName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00736</field>
    <field name="keywords"></field>
    <field name="text">QVariant KAboutData::programLogo d programLogo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00741</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setProgramLogo QVariant image d programLogo image</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00747</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutData::ocsProviderUrl d _ocsProviderUrl</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00752</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutData::version QString::fromUtf8 d _version data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00760</field>
    <field name="keywords"></field>
    <field name="text">KAboutData::internalVersion d _version constData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00765</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutData::shortDescription d _shortDescription</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00770</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutData::homepage d _homepageAddress</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00775</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutData::bugAddress QString::fromUtf8 d _bugEmailAddress constData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00780</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutData::organizationDomain d organizationDomain</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00788</field>
    <field name="keywords"></field>
    <field name="text">KAboutData::internalBugAddress d _bugEmailAddress isEmpty d _bugEmailAddress constData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00796</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KAboutPerson&gt; KAboutData::authors d _authorList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00801</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KAboutPerson&gt; KAboutData::credits d _creditList QList&lt;KAboutPerson&gt; KAboutData::Private::parseTranslators QString translatorName QString translatorEmail QList&lt;KAboutPerson&gt; personList translatorName isEmpty translatorName QStringLiteral personList QStringList nameList translatorName split QLatin1Char QStringList emailList translatorEmail isEmpty translatorEmail QStringLiteral emailList translatorEmail split QLatin1Char QString::KeepEmptyParts QStringList::const_iterator nit QStringList::const_iterator eit emailList constBegin nit nameList constBegin nit nameList constEnd nit QString email eit emailList constEnd email eit eit personList append KAboutPerson trimmed email trimmed personList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00836</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KAboutPerson&gt; KAboutData::translators d _translatorList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00842</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutData::aboutTranslationTeam QCoreApplication::translate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00854</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutData::otherText d _otherText</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00859</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KAboutLicense&gt; KAboutData::licenses d _licenseList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00864</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutData::copyrightStatement d _copyrightStatement</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00869</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutData::customAuthorPlainText d customAuthorPlainText</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00874</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutData::customAuthorRichText d customAuthorRichText</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00879</field>
    <field name="keywords"></field>
    <field name="text">KAboutData::customAuthorTextEnabled d customAuthorTextEnabled</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00884</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setCustomAuthorText QString plainText QString richText d customAuthorPlainText plainText d customAuthorRichText richText d customAuthorTextEnabled</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00895</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::unsetCustomAuthorText d customAuthorPlainText QString d customAuthorRichText QString d customAuthorTextEnabled</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00905</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::setDesktopFileName QString desktopFileName d desktopFileName desktopFileName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00912</field>
    <field name="keywords"></field>
    <field name="text">QString KAboutData::desktopFileName d desktopFileName KAboutDataRegistry KAboutDataRegistry m_appData KAboutDataRegistry m_appData qDeleteAll m_pluginData KAboutData m_appData QHash&lt;QString, KAboutData *&gt; m_pluginData Q_GLOBAL_STATIC KAboutDataRegistry s_registry warnIfOutOfSync aboutDataString QString aboutDataValue appDataString QString appDataValue aboutDataValue appDataValue qCWarning KABOUTDATA appDataString appDataValue aboutDataString aboutDataValue</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00944</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::applicationData QCoreApplication app QCoreApplication::instance KAboutData aboutData s_registry m_appData aboutData aboutData KAboutData QCoreApplication::applicationName QString QString app aboutData setOrganizationDomain QCoreApplication::organizationDomain toUtf8 aboutData setVersion QCoreApplication::applicationVersion toUtf8 aboutData setDisplayName app property toString aboutData setDesktopFileName app property toString qCWarning KABOUTDATA s_registry m_appData aboutData warnIfOutOfSync aboutData componentName QCoreApplication::applicationName warnIfOutOfSync aboutData version QCoreApplication::applicationVersion warnIfOutOfSync aboutData organizationDomain QCoreApplication::organizationDomain app warnIfOutOfSync aboutData displayName app property toString warnIfOutOfSync aboutData desktopFileName app property toString aboutData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l00990</field>
    <field name="keywords"></field>
    <field name="text">KAboutData::setApplicationData KAboutData aboutData s_registry m_appData s_registry m_appData aboutData s_registry m_appData KAboutData aboutData QCoreApplication app QCoreApplication::instance app app setApplicationVersion aboutData version app setApplicationName aboutData componentName app setOrganizationDomain aboutData organizationDomain app setProperty aboutData displayName app setProperty aboutData desktopFileName qCWarning KABOUTDATA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l01021</field>
    <field name="keywords"></field>
    <field name="text">KAboutData::registerPluginData KAboutData aboutData s_registry m_pluginData insert aboutData componentName KAboutData aboutData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l01026</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KAboutData::pluginData QString componentName KAboutData ad s_registry m_pluginData value componentName ad KAboutData KAboutData::applicationDataPointer s_registry exists s_registry m_appData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l01041</field>
    <field name="keywords"></field>
    <field name="text">KAboutData::setupCommandLine QCommandLineParser parser d _shortDescription isEmpty parser setApplicationDescription d _shortDescription parser addHelpOption QCoreApplication app QCoreApplication::instance app app applicationVersion isEmpty parser addVersionOption parser addOption QCommandLineOption QStringLiteral QCoreApplication::translate parser addOption QCommandLineOption QStringLiteral QCoreApplication::translate parser addOption QCommandLineOption QStringLiteral QCoreApplication::translate QCoreApplication::translate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.cpp</field>
    <field name="url">kaboutdata_8cpp_source.html#l01061</field>
    <field name="keywords"></field>
    <field name="text">KAboutData::processCommandLine QCommandLineParser parser foundArgument parser isSet QStringLiteral foundArgument d _authorList isEmpty printf qPrintable QCoreApplication::translate printf qPrintable QCoreApplication::translate arg qAppName Q_FOREACH KAboutPerson person d _authorList QString authorData QStringLiteral person name person emailAddress isEmpty authorData append QStringLiteral person emailAddress QStringLiteral printf qPrintable authorData customAuthorTextEnabled bugAddress QLatin1String printf qPrintable QCoreApplication::translate bugAddress isEmpty printf qPrintable QCoreApplication::translate arg bugAddress printf qPrintable customAuthorPlainText parser isSet QStringLiteral foundArgument Q_FOREACH KAboutLicense license d _licenseList printf qPrintable license text QString desktopFileName parser value QStringLiteral desktopFileName isEmpty d desktopFileName desktopFileName foundArgument EXIT_SUCCESS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.h</field>
    <field name="url">kaboutdata_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QList QCommandLineParser QJsonObject QVariant KAboutData KPluginMetaData KCrash Q_DECL_IMPORT defaultCrashHandler sig</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.h</field>
    <field name="url">kaboutdata_8h_source.html#l00067</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KAboutPerson KAboutData KAboutPerson QString name QString task QString QString emailAddress QString QString webAddress QString QString ocsUsername QString KAboutPerson KAboutPerson other KAboutPerson KAboutPerson operator= KAboutPerson other QString name QString task QString emailAddress QString webAddress QString ocsUsername KAboutPerson fromJSON QJsonObject obj KAboutPerson QString name QString email disambiguation Private Private d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.h</field>
    <field name="url">kaboutdata_8h_source.html#l00176</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KAboutLicense KAboutData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.h</field>
    <field name="url">kaboutdata_8h_source.html#l00183</field>
    <field name="keywords"></field>
    <field name="text">LicenseKey Custom File Unknown GPL GPL_V2 LGPL LGPL_V2 BSDL Artistic QPL QPL_V1_0 GPL_V3 LGPL_V3</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.h</field>
    <field name="url">kaboutdata_8h_source.html#l00197</field>
    <field name="keywords"></field>
    <field name="text">LGPL_V2_1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.h</field>
    <field name="url">kaboutdata_8h_source.html#l00203</field>
    <field name="keywords"></field>
    <field name="text">NameFormat ShortName FullName KAboutLicense KAboutLicense other KAboutLicense KAboutLicense operator= KAboutLicense other QString text QString name KAboutLicense::NameFormat formatName KAboutLicense::LicenseKey key KAboutLicense byKeyword QString keyword KAboutLicense KAboutLicense::LicenseKey licenseType KAboutData aboutData KAboutLicense KAboutData aboutData setLicenseFromPath QString pathToFile setLicenseFromText QString licenseText Private QSharedDataPointer&lt;Private&gt; d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kaboutdata.h</field>
    <field name="url">kaboutdata_8h_source.html#l00312</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KAboutData KAboutData applicationData setApplicationData KAboutData aboutData registerPluginData KAboutData aboutData KAboutData pluginData QString componentName KAboutData fromPluginMetaData KPluginMetaData plugin KAboutData QString componentName QString displayName QString version QString shortDescription KAboutLicense::LicenseKey licenseType QString copyrightStatement QString QString otherText QString QString homePageAddress QString QString bugsEmailAddress QStringLiteral KAboutData QString componentName QString displayName QString version KAboutData KAboutData other KAboutData operator= KAboutData other KAboutData KAboutData addAuthor QString name QString task QString QString emailAddress QString QString webAddress QString QString ocsUsername QString KAboutData addCredit QString name QString task QString QString emailAddress QString QString webAddress QString QString ocsUsername QString KAboutData setTranslator QString name QString emailAddress KAboutData setLicenseText QString license KAboutData addLicenseText QString license KAboutData setLicenseTextFile QString file KAboutData addLicenseTextFile QString file KAboutData setComponentName QString componentName KAboutData setDisplayName QString displayName KCOREADDONS_DEPRECATED KAboutData setProgramIconName QString iconName KAboutData setProgramLogo QVariant image KAboutData setOcsProvider QString providerUrl KAboutData setVersion QByteArray version KAboutData setShortDescription QString shortDescription KAboutData setLicense KAboutLicense::LicenseKey licenseKey KAboutData addLicense KAboutLicense::LicenseKey licenseKey KAboutData setCopyrightStatement QString copyrightStatement KAboutData setOtherText QString otherText KAboutData setHomepage QString homepage KAboutData setBugAddress QByteArray bugAddress KAboutData setOrganizationDomain QByteArray domain KAboutData setProductName QByteArray name QString componentName QString productName QString displayName QString organizationDomain internalProgramName QString programIconName QVariant programLogo QString ocsProviderUrl QString version internalVersion QString shortDescription QString homepage QString bugAddress internalBugAddress QList&lt;KAboutPerson&gt; authors QList&lt;KAboutPerson&gt; credits QList&lt;KAboutPerson&gt; translators QString aboutTranslationTeam QString otherText QList&lt;KAboutLicense&gt; licenses QString copyrightStatement QString customAuthorPlainText QString customAuthorRichText customAuthorTextEnabled KAboutData setCustomAuthorText QString plainText QString richText KAboutData unsetCustomAuthorText setupCommandLine QCommandLineParser parser processCommandLine QCommandLineParser parser KAboutData setDesktopFileName QString desktopFileName QString desktopFileName KCrash::defaultCrashHandler sig KAboutData applicationDataPointer Private Private d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautosavefile.cpp</field>
    <field name="url">kautosavefile_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KAutoSaveFilePrivate NamePadding KAutoSaveFilePrivate lock managedFileNameChanged false QString tempFileName QUrl managedFile QLockFile lock managedFileNameChanged QStringList findAllStales QString appName QStringList dirs QStandardPaths::standardLocations QStandardPaths::GenericDataLocation QStringList files Q_FOREACH QString dir dirs QDir appDir dir QStringLiteral appName Q_FOREACH QString file appDir entryList QDir::Files files appDir absolutePath QLatin1Char file files QString KAutoSaveFilePrivate::tempFileName QString protocol managedFile scheme QString path managedFile adjusted QUrl::RemoveFilename QUrl::StripTrailingSlash path QString name managedFile fileName pathLengthLimit FILENAME_MAX NamePadding name size protocol size QString junk KRandom::randomString NamePadding name junk rightRef protocol QLatin1Char path leftRef pathLengthLimit junk QString::fromLatin1 QUrl::toPercentEncoding name constData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautosavefile.cpp</field>
    <field name="url">kautosavefile_8cpp_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text">KAutoSaveFile::KAutoSaveFile QUrl filename QObject parent QFile parent d new KAutoSaveFilePrivate setManagedFile filename</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautosavefile.cpp</field>
    <field name="url">kautosavefile_8cpp_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text">KAutoSaveFile::KAutoSaveFile QObject parent QFile parent d new KAutoSaveFilePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautosavefile.cpp</field>
    <field name="url">kautosavefile_8cpp_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text">KAutoSaveFile::~KAutoSaveFile releaseLock d lock d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautosavefile.cpp</field>
    <field name="url">kautosavefile_8cpp_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text">QUrl KAutoSaveFile::managedFile d managedFile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautosavefile.cpp</field>
    <field name="url">kautosavefile_8cpp_source.html#l00112</field>
    <field name="keywords"></field>
    <field name="text">KAutoSaveFile::setManagedFile QUrl filename releaseLock d managedFile filename d managedFileNameChanged</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautosavefile.cpp</field>
    <field name="url">kautosavefile_8cpp_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text">KAutoSaveFile::releaseLock d lock d lock isLocked d lock d lock NULL fileName isEmpty</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautosavefile.cpp</field>
    <field name="url">kautosavefile_8cpp_source.html#l00131</field>
    <field name="keywords"></field>
    <field name="text">KAutoSaveFile::open OpenMode openmode d managedFile isEmpty QString tempFile d managedFileNameChanged QString staleFilesDir QStandardPaths::writableLocation QStandardPaths::GenericDataLocation QStringLiteral QCoreApplication::instance applicationName QDir mkpath staleFilesDir tempFile staleFilesDir QChar::fromLatin1 d tempFileName tempFile fileName d managedFileNameChanged setFileName tempFile QFile::open openmode d lock d lock QLockFile tempFile QStringLiteral d lock setStaleLockTime d lock isLocked d lock tryLock qCWarning KCOREADDONS_DEBUG tempFile close QUrl extractManagedFilePath QString staleFileName QStringRef sep staleFileName rightRef sepPos staleFileName indexOf sep pathPos staleFileName indexOf QChar::fromLatin1 sepPos QUrl managedFileName QByteArray encodedPath staleFileName midRef pathPos staleFileName length pathPos KAutoSaveFilePrivate::NamePadding toLatin1 managedFileName setPath QUrl::fromPercentEncoding encodedPath QLatin1Char QFileInfo staleFileName left sepPos fileName managedFileName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautosavefile.cpp</field>
    <field name="url">kautosavefile_8cpp_source.html#l00184</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KAutoSaveFile *&gt; KAutoSaveFile::staleFiles QUrl filename QString applicationName QString appName applicationName appName isEmpty appName QCoreApplication::instance applicationName QStringList files findAllStales appName QList&lt;KAutoSaveFile *&gt; list Q_FOREACH QString file files file endsWith QLatin1String filename isEmpty extractManagedFilePath file path filename path KAutoSaveFile asFile KAutoSaveFile filename isEmpty extractManagedFilePath file filename asFile setFileName file asFile d managedFileNameChanged list append asFile list</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautosavefile.cpp</field>
    <field name="url">kautosavefile_8cpp_source.html#l00212</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KAutoSaveFile *&gt; KAutoSaveFile::allStaleFiles QString applicationName staleFiles QUrl applicationName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautosavefile.h</field>
    <field name="url">kautosavefile_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KAutoSaveFilePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kautosavefile.h</field>
    <field name="url">kautosavefile_8h_source.html#l00129</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KAutoSaveFile QFile Q_OBJECT KAutoSaveFile QUrl filename QObject parent KAutoSaveFile QObject parent KAutoSaveFile QUrl managedFile setManagedFile QUrl filename releaseLock open OpenMode openmode Q_DECL_OVERRIDE QList&lt;KAutoSaveFile *&gt; staleFiles QUrl url QString applicationName QString QList&lt;KAutoSaveFile *&gt; allStaleFiles QString applicationName QString Q_DISABLE_COPY KAutoSaveFile KAutoSaveFilePrivate KAutoSaveFilePrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kbackup.cpp</field>
    <field name="url">kbackup_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KBackup backupFile QString qFilename QString backupDir KConfigGroup g KSharedConfig::openConfig QString type g readEntry QString extension g readEntry QString message g readEntry maxnum g readEntry type toLower QLatin1String numberedBackupFile qFilename backupDir extension maxnum type toLower QLatin1String rcsBackupFile qFilename backupDir message simpleBackupFile qFilename backupDir extension simpleBackupFile qFilename backupDir QStringLiteral simpleBackupFile QString qFilename QString backupDir QString backupExtension QString backupFileName qFilename backupExtension backupDir isEmpty QFileInfo fileInfo qFilename backupFileName backupDir QLatin1Char fileInfo fileName backupExtension QFile::remove backupFileName QFile::copy qFilename backupFileName rcsBackupFile QString qFilename QString backupDir QString backupMessage QFileInfo fileInfo qFilename QString qBackupFilename backupDir isEmpty qBackupFilename qFilename qBackupFilename backupDir fileInfo fileName qBackupFilename QString::fromLatin1 backupDir isEmpty QFile::copy qFilename backupDir fileInfo fileName fileInfo setFile backupDir QLatin1Char fileInfo fileName QString cipath QStandardPaths::findExecutable QStringLiteral QString copath QStandardPaths::findExecutable QStringLiteral QString rcspath QStandardPaths::findExecutable QStringLiteral cipath isEmpty copath isEmpty rcspath isEmpty QProcess ci backupDir isEmpty ci setWorkingDirectory backupDir ci start cipath QStringList QStringLiteral fileInfo filePath ci waitForStarted ci write backupMessage toLocal8Bit ci write ci closeWriteChannel ci waitForFinished QProcess rcs backupDir isEmpty rcs setWorkingDirectory backupDir rcs start rcspath QStringList QStringLiteral qBackupFilename rcs waitForFinished QProcess co backupDir isEmpty co setWorkingDirectory backupDir co start copath QStringList qBackupFilename co waitForFinished backupDir isEmpty QFile::remove fileInfo filePath numberedBackupFile QString qFilename QString backupDir QString backupExtension uint maxBackups QFileInfo fileInfo qFilename QString sTemplate backupDir isEmpty sTemplate qFilename QLatin1String backupExtension sTemplate backupDir QLatin1Char fileInfo fileName QLatin1String backupExtension QDir d backupDir isEmpty fileInfo dir backupDir d setFilter QDir::Files QDir::Hidden QDir::NoSymLinks QStringList nameFilters QStringList fileInfo fileName QLatin1String backupExtension d setNameFilters nameFilters d setSorting QDir::Name uint maxBackupFound Q_FOREACH QFileInfo fi d entryInfoList fi fileName endsWith backupExtension QString sTemp fi fileName sTemp truncate fi fileName length backupExtension length idex sTemp lastIndexOf QLatin1Char idex ok uint num sTemp midRef idex toUInt ok ok num maxBackups QFile::remove fi filePath maxBackupFound qMax maxBackupFound num QString to sTemplate arg maxBackupFound i maxBackupFound i i QString from sTemplate arg i QFile::rename from to to from QFile::copy qFilename sTemplate arg</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kbackup.h</field>
    <field name="url">kbackup_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KBackup KCOREADDONS_EXPORT backupFile QString filename QString backupDir QString KCOREADDONS_EXPORT simpleBackupFile QString filename QString backupDir QString QString backupExtension QStringLiteral KCOREADDONS_EXPORT numberedBackupFile QString filename QString backupDir QString QString backupExtension QStringLiteral uint maxBackups KCOREADDONS_EXPORT rcsBackupFile QString filename QString backupDir QString QString backupMessage QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompositejob.cpp</field>
    <field name="url">kcompositejob_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCompositeJobPrivate::KCompositeJobPrivate KCompositeJobPrivate::~KCompositeJobPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompositejob.cpp</field>
    <field name="url">kcompositejob_8cpp_source.html#l00031</field>
    <field name="keywords"></field>
    <field name="text">KCompositeJob::KCompositeJob QObject parent KJob new KCompositeJobPrivate parent KCompositeJob::KCompositeJob KCompositeJobPrivate dd QObject parent KJob dd parent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompositejob.cpp</field>
    <field name="url">kcompositejob_8cpp_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">KCompositeJob::~KCompositeJob</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompositejob.cpp</field>
    <field name="url">kcompositejob_8cpp_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">KCompositeJob::addSubjob KJob job Q_D KCompositeJob job d subjobs contains job job setParent d subjobs append job connect job SIGNAL result KJob SLOT slotResult KJob connect job SIGNAL infoMessage KJob QString QString SLOT slotInfoMessage KJob QString QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompositejob.cpp</field>
    <field name="url">kcompositejob_8cpp_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">KCompositeJob::removeSubjob KJob job Q_D KCompositeJob job job setParent d subjobs removeAll job</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompositejob.cpp</field>
    <field name="url">kcompositejob_8cpp_source.html#l00077</field>
    <field name="keywords"></field>
    <field name="text">KCompositeJob::hasSubjobs d_func subjobs isEmpty</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompositejob.cpp</field>
    <field name="url">kcompositejob_8cpp_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KJob *&gt; KCompositeJob::subjobs d_func subjobs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompositejob.cpp</field>
    <field name="url">kcompositejob_8cpp_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">KCompositeJob::clearSubjobs Q_D KCompositeJob Q_FOREACH KJob job d subjobs job setParent d subjobs clear</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompositejob.cpp</field>
    <field name="url">kcompositejob_8cpp_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text">KCompositeJob::slotResult KJob job job error error setError job error setErrorText job errorText emitResult removeSubjob job</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompositejob.cpp</field>
    <field name="url">kcompositejob_8cpp_source.html#l00109</field>
    <field name="keywords"></field>
    <field name="text">KCompositeJob::slotInfoMessage KJob job QString plain QString rich emit infoMessage job plain rich</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompositejob.h</field>
    <field name="url">kcompositejob_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCompositeJobPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcompositejob.h</field>
    <field name="url">kcompositejob_8h_source.html#l00033</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KCompositeJob KJob Q_OBJECT KCompositeJob QObject parent KCompositeJob addSubjob KJob job removeSubjob KJob job hasSubjobs QList&lt;KJob *&gt; subjobs clearSubjobs Q_SLOTS slotResult KJob job slotInfoMessage KJob job QString plain QString rich KCompositeJob KCompositeJobPrivate dd QObject parent Q_DECLARE_PRIVATE KCompositeJob</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcoreaddons.cpp</field>
    <field name="url">kcoreaddons_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QString KCoreAddons::versionString QStringLiteral KCOREADDONS_VERSION_STRING uint KCoreAddons::version KCOREADDONS_VERSION</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcoreaddons.h</field>
    <field name="url">kcoreaddons_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCoreAddons KCOREADDONS_EXPORT QString versionString KCOREADDONS_EXPORT version</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdelibs4configmigrator.cpp</field>
    <field name="url">kdelibs4configmigrator_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_DECLARE_LOGGING_CATEGORY MIGRATOR Q_LOGGING_CATEGORY MIGRATOR QtWarningMsg Kdelibs4ConfigMigrator::Private Private QString _appName appName _appName QStringList configFiles QStringList uiFiles QString appName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdelibs4configmigrator.cpp</field>
    <field name="url">kdelibs4configmigrator_8cpp_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">Kdelibs4ConfigMigrator::Kdelibs4ConfigMigrator QString appName d new Private appName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdelibs4configmigrator.cpp</field>
    <field name="url">kdelibs4configmigrator_8cpp_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">Kdelibs4ConfigMigrator::~Kdelibs4ConfigMigrator d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdelibs4configmigrator.cpp</field>
    <field name="url">kdelibs4configmigrator_8cpp_source.html#l00059</field>
    <field name="keywords"></field>
    <field name="text">Kdelibs4ConfigMigrator::setConfigFiles QStringList configFileNameList d configFiles configFileNameList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdelibs4configmigrator.cpp</field>
    <field name="url">kdelibs4configmigrator_8cpp_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">Kdelibs4ConfigMigrator::setUiFiles QStringList uiFileNameList d uiFiles uiFileNameList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdelibs4configmigrator.cpp</field>
    <field name="url">kdelibs4configmigrator_8cpp_source.html#l00069</field>
    <field name="keywords"></field>
    <field name="text">Kdelibs4ConfigMigrator::migrate Kdelibs4Migration migration migration kdeHomeFound didSomething Q_FOREACH QString configFileName d configFiles QString newConfigLocation QStandardPaths::writableLocation QStandardPaths::GenericConfigLocation QLatin1Char configFileName QFile newConfigLocation exists QFileInfo fileInfo newConfigLocation QDir mkpath fileInfo absolutePath QString oldConfigFile migration locateLocal configFileName oldConfigFile isEmpty QFile oldConfigFile copy newConfigLocation didSomething qCDebug MIGRATOR oldConfigFile newConfigLocation d appName isEmpty d uiFiles isEmpty qCritical Q_FOREACH QString uiFileName d uiFiles QString newConfigLocation QStandardPaths::writableLocation QStandardPaths::GenericDataLocation QStringLiteral d appName QLatin1Char uiFileName QFile newConfigLocation exists QFileInfo fileInfo newConfigLocation QDir mkpath fileInfo absolutePath QString oldConfigFile migration locateLocal d appName QLatin1Char uiFileName oldConfigFile isEmpty QFile oldConfigFile copy newConfigLocation didSomething qCDebug MIGRATOR oldConfigFile newConfigLocation didSomething QPluginLoader lib QStringLiteral QObject rootObj lib instance rootObj QMetaObject::invokeMethod rootObj</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdelibs4configmigrator.h</field>
    <field name="url">kdelibs4configmigrator_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdelibs4configmigrator.h</field>
    <field name="url">kdelibs4configmigrator_8h_source.html#l00035</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT Kdelibs4ConfigMigrator Kdelibs4ConfigMigrator QString appName Kdelibs4ConfigMigrator migrate setConfigFiles QStringList configFileNameList setUiFiles QStringList uiFileNameList Private Private Private d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdelibs4migration.cpp</field>
    <field name="url">kdelibs4migration_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Kdelibs4MigrationPrivate QString m_kdeHome</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdelibs4migration.cpp</field>
    <field name="url">kdelibs4migration_8cpp_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">Kdelibs4Migration::Kdelibs4Migration d new Kdelibs4MigrationPrivate qEnvironmentVariableIsSet d m_kdeHome QString::fromLocal8Bit qgetenv QDir homeDir QDir::home QVector&lt;QString&gt; testSubdirs testSubdirs QStringLiteral KDE4_DEFAULT_HOME QStringLiteral QStringLiteral WCHAR wPath MAX_PATH SHGetFolderPathW NULL CSIDL_APPDATA NULL SHGFP_TYPE_CURRENT wPath S_OK testSubdirs QDir::fromNativeSeparators QString::fromUtf16 ushort wPath QLatin1String KDE4_DEFAULT_HOME Q_FOREACH QString testSubdir testSubdirs homeDir exists testSubdir d m_kdeHome homeDir filePath testSubdir d m_kdeHome isEmpty d m_kdeHome homeDir filePath QStringLiteral KDE4_DEFAULT_HOME d m_kdeHome isEmpty d m_kdeHome endsWith QLatin1Char d m_kdeHome append QLatin1Char</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdelibs4migration.cpp</field>
    <field name="url">kdelibs4migration_8cpp_source.html#l00072</field>
    <field name="keywords"></field>
    <field name="text">Kdelibs4Migration::~Kdelibs4Migration d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdelibs4migration.cpp</field>
    <field name="url">kdelibs4migration_8cpp_source.html#l00077</field>
    <field name="keywords"></field>
    <field name="text">Kdelibs4Migration::kdeHomeFound d m_kdeHome isEmpty QDir d m_kdeHome exists</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdelibs4migration.cpp</field>
    <field name="url">kdelibs4migration_8cpp_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text">QString Kdelibs4Migration::kdeHome d m_kdeHome</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdelibs4migration.cpp</field>
    <field name="url">kdelibs4migration_8cpp_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">QString Kdelibs4Migration::locateLocal type QString filename d m_kdeHome isEmpty QString QString dir saveLocation type dir isEmpty QString QString file dir filename QFile::exists file file QString type subdir s_subdirs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdelibs4migration.cpp</field>
    <field name="url">kdelibs4migration_8cpp_source.html#l00116</field>
    <field name="keywords"></field>
    <field name="text">QString Kdelibs4Migration::saveLocation type QString suffix d m_kdeHome isEmpty QString numResources s_subdirs s_subdirs uint i i numResources i qstrcmp s_subdirs i type type QString dir d m_kdeHome QString::fromLatin1 s_subdirs i subdir suffix dir endsWith QLatin1Char dir QLatin1Char dir qCWarning KCOREADDONS_DEBUG type QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdelibs4migration.h</field>
    <field name="url">kdelibs4migration_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Kdelibs4MigrationPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdelibs4migration.h</field>
    <field name="url">kdelibs4migration_8h_source.html#l00068</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT Kdelibs4Migration Q_DECL_FINAL Kdelibs4Migration Kdelibs4Migration kdeHomeFound QString kdeHome QString locateLocal type QString filename QString saveLocation type QString suffix QString Kdelibs4MigrationPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_DECLARE_LOGGING_CATEGORY KDIRWATCH Q_LOGGING_CATEGORY KDIRWATCH QtWarningMsg s_verboseDebug QThreadStorage&lt;KDirWatchPrivate *&gt; dwp_self KDirWatchPrivate createPrivate dwp_self hasLocalData dwp_self setLocalData KDirWatchPrivate dwp_self localData KDirWatch::Method methodFromString QByteArray method method KDirWatch::FAM method KDirWatch::Stat method KDirWatch::QFSWatch KDirWatch::INotify KDirWatch::QFSWatch methodToString KDirWatch::Method method method KDirWatch::FAM KDirWatch::INotify KDirWatch::Stat KDirWatch::QFSWatch s_envNfsPoll s_envPoll s_envMethod s_envNfsMethod KDirWatchPrivate::KDirWatchPrivate timer freq statEntries delayRemove false rescan_all false rescan_timer if HAVE_SYS_INOTIFY_H mSn Q_NULLPTR endif _isStopped false qAppName QLatin1String qAppName QLatin1String s_verboseDebug timer setObjectName QStringLiteral connect timer SIGNAL timeout SLOT slotRescan m_nfsPollInterval qEnvironmentVariableIsSet s_envNfsPoll qgetenv s_envNfsPoll toInt m_PollInterval qEnvironmentVariableIsSet s_envPoll qgetenv s_envPoll toInt m_preferredMethod methodFromString qEnvironmentVariableIsSet s_envMethod qgetenv s_envMethod m_nfsPreferredMethod methodFromString qEnvironmentVariableIsSet s_envNfsMethod qgetenv s_envNfsMethod QList&lt;QByteArray&gt; availableMethods availableMethods rescan_timer setObjectName QStringLiteral rescan_timer setSingleShot connect rescan_timer SIGNAL timeout SLOT slotRescan availableMethods use_fam sn supports_inotify m_inotify_fd inotify_init m_inotify_fd qCDebug KDIRWATCH supports_inotify supports_inotify availableMethods void fcntl m_inotify_fd F_SETFD FD_CLOEXEC mSn QSocketNotifier m_inotify_fd QSocketNotifier::Read connect mSn SIGNAL activated SLOT inotifyEventReceived availableMethods fsWatcher s_verboseDebug qCDebug KDIRWATCH availableMethods methodToString m_preferredMethod KDirWatchPrivate::~KDirWatchPrivate timer stop removeEntries use_fam sn FAMClose fc supports_inotify QT_CLOSE m_inotify_fd fsWatcher KDirWatchPrivate::inotifyEventReceived supports_inotify pending offsetStartRead buf assert m_inotify_fd ioctl m_inotify_fd FIONREAD pending pending bytesToRead qMin&lt;int&gt; pending buf offsetStartRead bytesAvailable read m_inotify_fd buf offsetStartRead bytesToRead pending bytesAvailable bytesAvailable offsetStartRead offsetStartRead offsetCurrent bytesAvailable inotify_event inotify_event inotify_event buf offsetCurrent eventSize inotify_event event len bytesAvailable eventSize bytesAvailable eventSize offsetCurrent eventSize QString path len len len event name len len QByteArray cpath event name len len path QFile::decodeName cpath path isEmpty isNoisyFile cpath data isDir mask IN_ISDIR EntryMap::Iterator it m_mapEntries begin it m_mapEntries end Entry e it e wd event wd wasDirty e dirty e dirty QString tpath e path QLatin1Char path s_verboseDebug qCDebug KDIRWATCH nospace qPrintable QString::number event mask e path event mask IN_DELETE_SELF s_verboseDebug qCDebug KDIRWATCH e path e m_status NonExistent e wd e m_ctime invalid_ctime emitEvent e Deleted e path Entry parentEntry entry e parentDirectory parentEntry parentEntry dirty addEntry e parentDirectory e event mask IN_IGNORED event mask IN_CREATE IN_MOVED_TO Entry sub_entry e findSubEntry tpath s_verboseDebug qCDebug KDIRWATCH tpath sub_entry qCDebug KDIRWATCH e sub_entry sub_entry dirty rescan_timer start e isDir e m_clients empty QList&lt;Client *&gt; clients e inotifyClientsForFileOrDir isDir Q_FOREACH Client client clients isDir addEntry client instance tpath isDir isDir client m_watchModes KDirWatch::WatchDirOnly clients isEmpty emitEvent e Created tpath qCDebug KDIRWATCH nospace clients count isDir tpath e m_pendingFileChanges append e path rescan_timer isActive rescan_timer start m_PollInterval event mask IN_DELETE IN_MOVED_FROM s_verboseDebug qCDebug KDIRWATCH tpath e isDir e m_clients empty Client client KDirWatch::WatchModes flag isDir KDirWatch::WatchSubDirs KDirWatch::WatchFiles counter Q_FOREACH client e m_clients client m_watchModes flag counter counter emitEvent e Deleted tpath event mask IN_MODIFY IN_ATTRIB e isDir e m_clients empty s_verboseDebug qCDebug KDIRWATCH tpath e m_pendingFileChanges append tpath e dirty wasDirty path isEmpty mask IN_ATTRIB rescan_timer isActive rescan_timer start m_PollInterval bytesAvailable memmove buf buf offsetCurrent bytesAvailable offsetStartRead bytesAvailable KDirWatchPrivate::Entry::propagate_dirty Q_FOREACH Entry sub_entry m_entries sub_entry dirty sub_entry dirty sub_entry propagate_dirty KDirWatchPrivate::Entry::addClient KDirWatch instance KDirWatch::WatchModes watchModes instance Q_FOREACH Client client m_clients client instance instance client count client m_watchModes watchModes Client client Client client instance instance client count client watchingStopped instance isStopped client pending NoChange client m_watchModes watchModes m_clients append client KDirWatchPrivate::Entry::removeClient KDirWatch instance QList&lt;Client *&gt;::iterator it m_clients begin QList&lt;Client *&gt;::iterator end m_clients end it end it Client client it client instance instance client count client count m_clients erase it client KDirWatchPrivate::Entry::clientCount clients Q_FOREACH Client client m_clients clients client count clients QString KDirWatchPrivate::Entry::parentDirectory QDir::cleanPath path QLatin1String QList&lt;KDirWatchPrivate::Client *&gt; KDirWatchPrivate::Entry::clientsForFileOrDir QString tpath isDir QList&lt;Client *&gt; ret QFileInfo fi tpath fi exists isDir fi isDir KDirWatch::WatchModes flag isDir KDirWatch::WatchSubDirs KDirWatch::WatchFiles Q_FOREACH Client client m_clients client m_watchModes flag ret append client ret QList&lt;KDirWatchPrivate::Client *&gt; KDirWatchPrivate::Entry::inotifyClientsForFileOrDir isDir QList&lt;Client *&gt; ret KDirWatch::WatchModes flag isDir KDirWatch::WatchSubDirs KDirWatch::WatchFiles Q_FOREACH Client client m_clients client m_watchModes flag ret append client ret QDebug operator&lt;&lt; QDebug debug KDirWatchPrivate::Entry entry debug nospace entry path entry isDir entry m_status KDirWatchPrivate::NonExistent debug debug entry m_mode KDirWatchPrivate::FAMMode entry m_mode KDirWatchPrivate::INotifyMode entry m_mode KDirWatchPrivate::QFSWatchMode entry m_mode KDirWatchPrivate::StatMode entry m_mode KDirWatchPrivate::INotifyMode debug entry wd debug entry m_clients count debug space entry m_entries isEmpty debug Q_FOREACH KDirWatchPrivate::Entry subEntry entry m_entries debug subEntry subEntry path debug debug KDirWatchPrivate::Entry KDirWatchPrivate::entry QString _path _path isEmpty QDir::isRelativePath _path QString path _path path length path endsWith QLatin1Char path truncate path length EntryMap::Iterator it m_mapEntries find path it m_mapEntries end KDirWatchPrivate::useFreq Entry e newFreq e freq newFreq e freq freq freq e freq timer isActive timer start freq qCDebug KDIRWATCH freq KDirWatchPrivate::useFAM Entry e use_fam sn FAMOpen fc sn QSocketNotifier FAMCONNECTION_GETFD fc QSocketNotifier::Read connect sn SIGNAL activated SLOT famEventReceived use_fam famEventReceived e m_mode FAMMode e dirty e m_famReportedSeen startedFAMMonitor e isDir e m_status NonExistent addEntry e parentDirectory e res FAMMonitorDirectory fc QFile::encodeName e path data e fr e startedFAMMonitor res e m_mode UnknownMode use_fam sn sn qCDebug KDIRWATCH nospace FAMREQUEST_GETREQNUM e fr e path e m_status NonExistent addEntry QFileInfo e path absolutePath e res FAMMonitorFile fc QFile::encodeName e path data e fr e startedFAMMonitor res e m_mode UnknownMode use_fam sn sn qCDebug KDIRWATCH nospace FAMREQUEST_GETREQNUM e fr e path famEventReceived startedFAMMonitor e m_famReportedSeen QThread::msleep startedFAMMonitor e m_famReportedSeen KDirWatchPrivate::useINotify Entry e e wd e dirty supports_inotify e m_mode INotifyMode e m_status NonExistent addEntry e parentDirectory e mask IN_DELETE IN_DELETE_SELF IN_CREATE IN_MOVE IN_MOVE_SELF IN_DONT_FOLLOW IN_MOVED_FROM IN_MODIFY IN_ATTRIB e wd inotify_add_watch m_inotify_fd QFile::encodeName e path data mask s_verboseDebug qCDebug KDIRWATCH e path e wd qCDebug KDIRWATCH e path strerror errno KDirWatchPrivate::useQFSWatch Entry e e m_mode QFSWatchMode e dirty e m_status NonExistent addEntry e parentDirectory e qCDebug KDIRWATCH e path fsWatcher fsWatcher QFileSystemWatcher connect fsWatcher SIGNAL directoryChanged QString SLOT fswEventReceived QString connect fsWatcher SIGNAL fileChanged QString SLOT fswEventReceived QString fsWatcher addPath e path KDirWatchPrivate::useStat Entry e KFileSystemType::fileSystemType e path KFileSystemType::Nfs useFreq e m_nfsPollInterval useFreq e m_PollInterval e m_mode StatMode e m_mode StatMode statEntries statEntries timer start freq qCDebug KDIRWATCH freq qCDebug KDIRWATCH e freq e path KDirWatchPrivate::addEntry KDirWatch instance QString _path Entry sub_entry isDir KDirWatch::WatchModes watchModes QString path _path path isEmpty path QLatin1String path startsWith QLatin1String path startsWith QLatin1String path startsWith QLatin1String endif path length path endsWith QLatin1Char path truncate path length EntryMap::Iterator it m_mapEntries find path it m_mapEntries end sub_entry m_entries append sub_entry s_verboseDebug qCDebug KDIRWATCH path sub_entry path addClient instance watchModes s_verboseDebug qCDebug KDIRWATCH path clientCount QStringLiteral arg instance objectName QT_STATBUF stat_buf exists QT_STAT QFile::encodeName path constData stat_buf EntryMap::iterator newIt m_mapEntries insert path Entry Entry e exists e isDir stat_buf st_mode QT_STAT_MASK QT_STAT_DIR e isDir isDir QT_LSTAT QFile::encodeName path constData stat_buf stat_buf st_mode QT_STAT_MASK QT_STAT_LNK e isDir e isDir isDir qCWarning KCOREADDONS_DEBUG path e isDir isDir qWarning qPrintable path e isDir watchModes KDirWatch::WatchDirOnly qCWarning KCOREADDONS_DEBUG path watchModes KDirWatch::WatchDirOnly e m_ctime stat_buf st_mtime e m_ctime stat_buf st_ctime e m_status Normal e m_nlink stat_buf st_nlink e m_ino stat_buf st_ino e isDir isDir e m_ctime invalid_ctime e m_status NonExistent e m_nlink e m_ino e path path sub_entry e m_entries append sub_entry e addClient instance watchModes s_verboseDebug qCDebug KDIRWATCH nospace e isDir path e m_status NonExistent sub_entry sub_entry path QString instance instance objectName QString e m_mode UnknownMode e msecLeft isNoisyFile QFile::encodeName path data exists e isDir watchModes KDirWatch::WatchDirOnly QFlags&lt;QDir::Filter&gt; filters QDir::NoDotAndDotDot watchModes KDirWatch::WatchSubDirs watchModes KDirWatch::WatchFiles filters QDir::Dirs QDir::Files watchModes KDirWatch::WatchSubDirs filters QDir::Dirs watchModes KDirWatch::WatchFiles filters QDir::Files e m_mode INotifyMode e m_mode UnknownMode m_preferredMethod KDirWatch::INotify filters QDir QDir basedir e path QFileInfoList contents basedir entryInfoList filters QFileInfoList::const_iterator iter contents constBegin iter contents constEnd iter QFileInfo fileInfo iter isDir fileInfo isDir fileInfo isSymLink addEntry instance fileInfo absoluteFilePath isDir isDir watchModes KDirWatch::WatchDirOnly addWatch e KDirWatchPrivate::addWatch Entry e KDirWatch::Method preferredMethod m_preferredMethod m_nfsPreferredMethod m_preferredMethod KFileSystemType::fileSystemType e path KFileSystemType::Nfs preferredMethod m_nfsPreferredMethod entryAdded preferredMethod KDirWatch::FAM entryAdded useFAM e KDirWatch::INotify entryAdded useINotify e KDirWatch::QFSWatch entryAdded useQFSWatch e KDirWatch::Stat entryAdded useStat e entryAdded useINotify e useFAM e useQFSWatch e useStat e KDirWatchPrivate::removeWatch Entry e e m_mode FAMMode FAMCancelMonitor fc e fr qCDebug KDIRWATCH nospace FAMREQUEST_GETREQNUM e fr e path e m_mode INotifyMode void inotify_rm_watch m_inotify_fd e wd s_verboseDebug qCDebug KDIRWATCH nospace m_inotify_fd e wd e path e m_mode QFSWatchMode fsWatcher s_verboseDebug qCDebug KDIRWATCH e path fsWatcher removePath e path KDirWatchPrivate::removeEntry KDirWatch instance QString _path Entry sub_entry s_verboseDebug qCDebug KDIRWATCH _path sub_entry Entry e entry _path e removeEntry instance e sub_entry KDirWatchPrivate::removeEntry KDirWatch instance Entry e Entry sub_entry removeList remove e sub_entry e m_entries removeAll sub_entry e removeClient instance e m_clients empty e m_entries empty delayRemove removeList insert e e m_status Normal removeWatch e e isDir removeEntry e parentDirectory e removeEntry QFileInfo e path absolutePath e e m_mode StatMode statEntries statEntries timer stop qCDebug KDIRWATCH s_verboseDebug qCDebug KDIRWATCH nospace e isDir e path sub_entry sub_entry path QString instance instance objectName QString QString p e path m_mapEntries remove p KDirWatchPrivate::removeEntries KDirWatch instance minfreq QStringList pathList EntryMap::Iterator it m_mapEntries begin it m_mapEntries end it Client c Q_FOREACH Client client m_clients client instance instance c client c c count pathList append path m_mode StatMode freq minfreq minfreq freq Q_FOREACH QString path pathList removeEntry instance path minfreq freq freq minfreq timer isActive timer start freq qCDebug KDIRWATCH freq KDirWatchPrivate::stopEntryScan KDirWatch instance Entry e stillWatching Q_FOREACH Client client e m_clients instance instance client instance client watchingStopped client watchingStopped stillWatching client count qCDebug KDIRWATCH instance instance objectName QStringLiteral e path stillWatching if stillWatching e m_ctime invalid_ctime KDirWatchPrivate::restartEntryScan KDirWatch instance Entry e notify wasWatching newWatching Q_FOREACH Client client e m_clients client watchingStopped wasWatching client count instance instance client instance client watchingStopped newWatching client count newWatching qCDebug KDIRWATCH instance instance objectName QStringLiteral e path wasWatching newWatching ev NoChange if wasWatching notify QT_STATBUF stat_buf exists QT_STAT QFile::encodeName e path constData stat_buf exists e m_ctime qMax stat_buf st_ctime stat_buf st_mtime e m_status Normal s_verboseDebug qCDebug KDIRWATCH e e path e m_nlink stat_buf st_nlink e m_ino stat_buf st_ino removeEntry e parentDirectory e e m_ctime invalid_ctime e m_status NonExistent e m_nlink s_verboseDebug qCDebug KDIRWATCH e e path e msecLeft ev scanEntry e emitEvent e ev KDirWatchPrivate::stopScan KDirWatch instance EntryMap::Iterator it m_mapEntries begin it m_mapEntries end it stopEntryScan instance it KDirWatchPrivate::startScan KDirWatch instance notify skippedToo notify resetList instance skippedToo EntryMap::Iterator it m_mapEntries begin it m_mapEntries end it restartEntryScan instance it notify KDirWatchPrivate::resetList KDirWatch instance skippedToo Q_UNUSED instance EntryMap::Iterator it m_mapEntries begin it m_mapEntries end it Q_FOREACH Client client m_clients client watchingStopped skippedToo client pending NoChange KDirWatchPrivate::scanEntry Entry e e m_mode UnknownMode NoChange e m_mode FAMMode e m_mode INotifyMode e dirty NoChange e dirty e m_mode StatMode e msecLeft freq e msecLeft NoChange e msecLeft e freq QT_STATBUF stat_buf exists QT_STAT QFile::encodeName e path constData stat_buf exists e m_status NonExistent e m_ctime qMax stat_buf st_ctime stat_buf st_mtime e m_status Normal e m_ino stat_buf st_ino s_verboseDebug qCDebug KDIRWATCH e e path removeEntry e parentDirectory e Created s_verboseDebug tm tmp localtime e m_ctime outstr strftime outstr outstr tmp qCDebug KDIRWATCH e path e m_ctime outstr stat_buf st_ctime stat_buf st_mtime e m_nlink stat_buf st_nlink e m_ino stat_buf st_ino e m_ctime invalid_ctime qMax stat_buf st_ctime stat_buf st_mtime e m_ctime stat_buf st_ino e m_ino stat_buf st_nlink e m_nlink ifdef Q_OS_WIN e m_mode QFSWatchMode endif e m_ctime qMax stat_buf st_ctime stat_buf st_mtime e m_nlink stat_buf st_nlink e m_ino stat_buf st_ino removeWatch e addWatch e e m_ino stat_buf st_ino Deleted Created Changed NoChange e m_nlink e m_ino e m_status NonExistent e m_ctime invalid_ctime NoChange e m_ctime invalid_ctime Deleted KDirWatchPrivate::emitEvent Entry e event QString fileName QString path e path fileName isEmpty QDir::isRelativePath fileName path fileName path QLatin1Char fileName path QDir::currentPath left QLatin1Char fileName s_verboseDebug qCDebug KDIRWATCH path e m_clients count Q_FOREACH Client c e m_clients c instance c count c watchingStopped event Changed c pending event event Created event Deleted c pending event event NoChange event Changed c pending c pending NoChange event NoChange event Deleted QMetaObject::invokeMethod c instance Qt::QueuedConnection Q_ARG QString path event Created QMetaObject::invokeMethod c instance Qt::QueuedConnection Q_ARG QString path event Changed QMetaObject::invokeMethod c instance Qt::QueuedConnection Q_ARG QString path KDirWatchPrivate::slotRemoveDelayed delayRemove removeList isEmpty Entry entry removeList begin removeEntry entry KDirWatchPrivate::slotRescan s_verboseDebug qCDebug KDIRWATCH EntryMap::Iterator it timerRunning timer isActive timerRunning timer stop delayRemove rescan_all it m_mapEntries begin it m_mapEntries end it dirty rescan_all it m_mapEntries begin it m_mapEntries end it m_mode INotifyMode m_mode QFSWatchMode dirty propagate_dirty QList&lt;Entry *&gt; cList it m_mapEntries begin it m_mapEntries end it Entry entry entry isValid ev scanEntry entry s_verboseDebug qCDebug KDIRWATCH entry path ev entry m_mode INotifyMode ev Deleted s_verboseDebug qCDebug KDIRWATCH entry path addEntry entry parentDirectory entry ev Created s_verboseDebug qCDebug KDIRWATCH entry path entry wd entry wd cList append entry addWatch entry FAMMode QFSWatchMode ev Created addWatch entry entry isDir QStringList pendingFileChanges entry m_pendingFileChanges pendingFileChanges removeDuplicates Q_FOREACH QString changedFilename pendingFileChanges s_verboseDebug qCDebug KDIRWATCH changedFilename emitEvent entry Changed changedFilename entry m_pendingFileChanges clear ev NoChange emitEvent entry ev timerRunning timer start freq Q_FOREACH Entry e cList removeEntry e parentDirectory e QTimer::singleShot SLOT slotRemoveDelayed KDirWatchPrivate::isNoisyFile filename filename strncmp filename strncmp filename strncmp filename KDirWatchPrivate::famEventReceived FAMEvent fe delayRemove use_fam FAMPending fc FAMNextEvent fc fe qCWarning KCOREADDONS_DEBUG use_fam sn sn EntryMap::Iterator it m_mapEntries begin it m_mapEntries end it m_mode FAMMode m_clients count Entry e addWatch e checkFAMEvent fe QTimer::singleShot SLOT slotRemoveDelayed KDirWatchPrivate::checkFAMEvent FAMEvent fe Entry e EntryMap::Iterator it m_mapEntries begin it m_mapEntries end it FAMREQUEST_GETREQNUM fr FAMREQUEST_GETREQNUM fe fr e fe code FAMExists fe code FAMEndExist fe code FAMAcknowledge e e m_famReportedSeen isNoisyFile fe filename s_verboseDebug qCDebug KDIRWATCH fe code FAMChanged fe code FAMDeleted fe code FAMStartExecuting fe code FAMStopExecuting fe code FAMCreated fe code FAMMoved fe code FAMAcknowledge fe code FAMExists fe code FAMEndExist fe filename FAMREQUEST_GETREQNUM fe fr e e e m_status NonExistent qCDebug KDIRWATCH e path e dirty rescan_timer isActive rescan_timer start m_PollInterval fe code FAMDeleted QDir::isRelativePath QFile::decodeName fe filename FAMCancelMonitor fc e fr qCDebug KDIRWATCH FAMREQUEST_GETREQNUM e fr e path e m_status NonExistent e m_ctime invalid_ctime emitEvent e Deleted e path Entry parentEntry entry e parentDirectory parentEntry parentEntry dirty addEntry e parentDirectory e FAMCreated QString tpath e path QLatin1Char QFile::decodeName fe filename Entry sub_entry e findSubEntry tpath sub_entry sub_entry dirty rescan_timer start e isDir e m_clients empty isDir QList&lt;Client *&gt; clients e clientsForFileOrDir tpath isDir Q_FOREACH Client client clients addEntry client instance tpath isDir isDir client m_watchModes KDirWatch::WatchDirOnly clients isEmpty emitEvent e Created tpath qCDebug KDIRWATCH nospace clients count isDir tpath KDirWatchPrivate::famEventReceived qCWarning KCOREADDONS_DEBUG KDirWatchPrivate::statistics EntryMap::Iterator it qCDebug KDIRWATCH m_mapEntries count qCDebug KDIRWATCH it m_mapEntries begin it m_mapEntries end it Entry e qCDebug KDIRWATCH e Q_FOREACH Client c e m_clients QByteArray pending c watchingStopped c pending Deleted pending c pending Created pending c pending Changed pending pending isEmpty pending pending pending pending qCDebug KDIRWATCH c instance objectName c count pending e m_entries count qCDebug KDIRWATCH Q_FOREACH Entry d e m_entries qCDebug KDIRWATCH d d path d m_status NonExistent s_verboseDebug Q_ASSERT d m_status NonExistent KDirWatchPrivate::fswEventReceived QString path s_verboseDebug qCDebug KDIRWATCH path EntryMap::Iterator it m_mapEntries find path it m_mapEntries end Entry e e dirty ev scanEntry e s_verboseDebug qCDebug KDIRWATCH e path ev ev NoChange emitEvent e ev ev Deleted e isDir addEntry e parentDirectory e addEntry QFileInfo e path absolutePath e ev Created addWatch e e isDir Q_FOREACH Entry sub_entry e m_entries fswEventReceived sub_entry path fsWatcher addPath e path KDirWatchPrivate::fswEventReceived QString path Q_UNUSED path qCWarning KCOREADDONS_DEBUG Q_GLOBAL_STATIC KDirWatch s_pKDirWatchSelf</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l01847</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch KDirWatch self s_pKDirWatchSelf</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l01854</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::exists s_pKDirWatchSelf exists dwp_self hasLocalData postRoutine_KDirWatch s_pKDirWatchSelf exists s_pKDirWatchSelf deleteQFSWatcher</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l01866</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::KDirWatch QObject parent QObject parent d createPrivate QBasicAtomicInt nameCounter Q_BASIC_ATOMIC_INITIALIZER counter nameCounter fetchAndAddRelaxed setObjectName QStringLiteral arg counter counter qAddPostRoutine postRoutine_KDirWatch</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l01879</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::~KDirWatch dwp_self hasLocalData d removeEntries</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l01886</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::addDir QString _path WatchModes watchModes d d addEntry _path watchModes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l01893</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::addFile QString _path d d addEntry _path</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l01902</field>
    <field name="keywords"></field>
    <field name="text">QDateTime KDirWatch::ctime QString _path KDirWatchPrivate::Entry e d entry _path e QDateTime QDateTime::fromTime_t e m_ctime</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l01913</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::removeDir QString _path d d removeEntry _path qCWarning KCOREADDONS_DEBUG _path</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l01922</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::removeFile QString _path d d removeEntry _path qCWarning KCOREADDONS_DEBUG _path</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l01931</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::stopDirScan QString _path d KDirWatchPrivate::Entry e d entry _path e e isDir d stopEntryScan e</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l01942</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::restartDirScan QString _path d KDirWatchPrivate::Entry e d entry _path e e isDir d restartEntryScan e</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l01955</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::stopScan d d stopScan d _isStopped</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l01963</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::isStopped d _isStopped</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l01968</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::startScan notify skippedToo d d _isStopped d startScan notify skippedToo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l01976</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::contains QString _path KDirWatchPrivate::Entry e d entry _path e Q_FOREACH KDirWatchPrivate::Client client e m_clients client instance KDirWatch::deleteQFSWatcher d fsWatcher d fsWatcher d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l01999</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::statistics dwp_self hasLocalData qCDebug KDIRWATCH dwp_self localData statistics</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l02008</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::setCreated QString _file qCDebug KDIRWATCH objectName _file emit created _file</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l02014</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::setDirty QString _file emit dirty _file</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l02020</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::setDeleted QString _file qCDebug KDIRWATCH objectName _file emit deleted _file</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.cpp</field>
    <field name="url">kdirwatch_8cpp_source.html#l02026</field>
    <field name="keywords"></field>
    <field name="text">KDirWatch::Method KDirWatch::internalMethod d m_preferredMethod KDirWatch::FAM d use_fam KDirWatch::FAM KDirWatch::INotify d supports_inotify KDirWatch::INotify KDirWatch::QFSWatch KDirWatch::QFSWatch KDirWatch::Stat KDirWatch::Stat d supports_inotify KDirWatch::INotify d use_fam KDirWatch::FAM KDirWatch::QFSWatch KDirWatch::Stat</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.h</field>
    <field name="url">kdirwatch_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KDirWatchPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.h</field>
    <field name="url">kdirwatch_8h_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KDirWatch QObject Q_OBJECT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.h</field>
    <field name="url">kdirwatch_8h_source.html#l00073</field>
    <field name="keywords"></field>
    <field name="text">WatchMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.h</field>
    <field name="url">kdirwatch_8h_source.html#l00074</field>
    <field name="keywords"></field>
    <field name="text">WatchDirOnly</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.h</field>
    <field name="url">kdirwatch_8h_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text">WatchFiles</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kdirwatch.h</field>
    <field name="url">kdirwatch_8h_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text">WatchSubDirs Q_DECLARE_FLAGS WatchModes WatchMode KDirWatch QObject parent KDirWatch addDir QString path WatchModes watchModes WatchDirOnly addFile QString file QDateTime ctime QString path removeDir QString path removeFile QString file stopDirScan QString path restartDirScan QString path startScan notify skippedToo stopScan isStopped contains QString path deleteQFSWatcher statistics Method FAM INotify Stat QFSWatch Method internalMethod KDirWatch exists Q_SLOTS setCreated QString path setDirty QString path setDeleted QString path Q_SIGNALS dirty QString path created QString path deleted QString path KDirWatchPrivate d Q_DECLARE_OPERATORS_FOR_FLAGS KDirWatch::WatchModes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kexportplugin.h</field>
    <field name="url">kexportplugin_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kexportplugin.h</field>
    <field name="url">kexportplugin_8h_source.html#l00030</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kexportplugin.h</field>
    <field name="url">kexportplugin_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_DEPRECATED_EXPORT K_EXPORT_PLUGIN_is_deprecated_see_KDE5PORTING</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilesystemtype.cpp</field>
    <field name="url">kfilesystemtype_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KFileSystemType::Type kde_typeFromName name qstrncmp name qstrncmp name qstrncmp name qstrncmp name qstrncmp name KFileSystemType::Nfs qstrncmp name qstrncmp name qstrncmp name KFileSystemType::Fat qstrncmp name qstrncmp name KFileSystemType::Smb qstrncmp name KFileSystemType::Ramfs KFileSystemType::Other KFileSystemType::Type determineFileSystemTypeImpl QByteArray path statfs buf statfs path constData buf KFileSystemType::Unknown kde_typeFromName buf f_fstypename KFileSystemType::Type determineFileSystemTypeImpl QByteArray path statfs buf statfs path constData buf KFileSystemType::Unknown static_cast&lt;unsigned long&gt; buf f_type NFS_SUPER_MAGIC AUTOFS_SUPER_MAGIC AUTOFSNG_SUPER_MAGIC FUSE_SUPER_MAGIC KFileSystemType::Nfs SMB_SUPER_MAGIC KFileSystemType::Smb MSDOS_SUPER_MAGIC KFileSystemType::Fat RAMFS_MAGIC KFileSystemType::Ramfs KFileSystemType::Other KFileSystemType::Type determineFileSystemTypeImpl QByteArray path statvfs buf statvfs path constData buf KFileSystemType::Unknown kde_typeFromName buf f_fstypename kde_typeFromName buf f_basetype KFileSystemType::Type determineFileSystemTypeImpl QByteArray path KFileSystemType::Unknown KFileSystemType::Type KFileSystemType::fileSystemType QString path determineFileSystemTypeImpl QFile::encodeName path</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kfilesystemtype.h</field>
    <field name="url">kfilesystemtype_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KFileSystemType Type Unknown Nfs Smb Fat Ramfs Other KCOREADDONS_EXPORT Type fileSystemType QString path</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.cpp</field>
    <field name="url">kformat_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.cpp</field>
    <field name="url">kformat_8cpp_source.html#l00027</field>
    <field name="keywords"></field>
    <field name="text">KFormat::KFormat QLocale locale d new KFormatPrivate locale</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.cpp</field>
    <field name="url">kformat_8cpp_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">KFormat::KFormat KFormat other d other d KFormat KFormat::operator= KFormat other d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.cpp</field>
    <field name="url">kformat_8cpp_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">KFormat::~KFormat</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.cpp</field>
    <field name="url">kformat_8cpp_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">QString KFormat::formatByteSize size precision KFormat::BinaryUnitDialect dialect KFormat::BinarySizeUnits units d formatByteSize size precision dialect units</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.cpp</field>
    <field name="url">kformat_8cpp_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">QString KFormat::formatDuration quint64 msecs KFormat::DurationFormatOptions options d formatDuration msecs options</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.cpp</field>
    <field name="url">kformat_8cpp_source.html#l00061</field>
    <field name="keywords"></field>
    <field name="text">QString KFormat::formatDecimalDuration quint64 msecs decimalPlaces d formatDecimalDuration msecs decimalPlaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.cpp</field>
    <field name="url">kformat_8cpp_source.html#l00067</field>
    <field name="keywords"></field>
    <field name="text">QString KFormat::formatSpelloutDuration quint64 msecs d formatSpelloutDuration msecs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.cpp</field>
    <field name="url">kformat_8cpp_source.html#l00072</field>
    <field name="keywords"></field>
    <field name="text">QString KFormat::formatRelativeDate QDate date QLocale::FormatType format d formatRelativeDate date format</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.cpp</field>
    <field name="url">kformat_8cpp_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text">QString KFormat::formatRelativeDateTime QDateTime dateTime QLocale::FormatType format d formatRelativeDateTime dateTime format</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QDate QDateTime KFormatPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00068</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KFormat Q_DECL_FINAL Q_GADGET</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00094</field>
    <field name="keywords"></field>
    <field name="text">BinarySizeUnits</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text">DefaultBinaryUnits</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text">UnitByte</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00100</field>
    <field name="keywords"></field>
    <field name="text">UnitKiloByte</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text">UnitMegaByte</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text">UnitGigaByte</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text">UnitTeraByte</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text">UnitPetaByte</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00105</field>
    <field name="keywords"></field>
    <field name="text">UnitExaByte</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00106</field>
    <field name="keywords"></field>
    <field name="text">UnitZettaByte</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text">UnitYottaByte UnitLastUnit UnitYottaByte</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00129</field>
    <field name="keywords"></field>
    <field name="text">BinaryUnitDialect</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00130</field>
    <field name="keywords"></field>
    <field name="text">DefaultBinaryDialect</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00131</field>
    <field name="keywords"></field>
    <field name="text">IECBinaryDialect</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00132</field>
    <field name="keywords"></field>
    <field name="text">JEDECBinaryDialect</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00133</field>
    <field name="keywords"></field>
    <field name="text">MetricBinaryDialect LastBinaryDialect MetricBinaryDialect</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00140</field>
    <field name="keywords"></field>
    <field name="text">DurationFormatOption</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text">DefaultDuration</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00142</field>
    <field name="keywords"></field>
    <field name="text">InitialDuration</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text">ShowMilliseconds</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00144</field>
    <field name="keywords"></field>
    <field name="text">HideSeconds</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h_source.html#l00145</field>
    <field name="keywords"></field>
    <field name="text">FoldHours Q_DECLARE_FLAGS DurationFormatOptions DurationFormatOption Q_FLAGS DurationFormatOption KFormat QLocale locale QLocale KFormat KFormat other KFormat operator= KFormat other KFormat QString formatByteSize size precision KFormat::BinaryUnitDialect dialect KFormat::DefaultBinaryDialect KFormat::BinarySizeUnits units KFormat::DefaultBinaryUnits QString formatDuration quint64 msecs KFormat::DurationFormatOptions options KFormat::DefaultDuration QString formatDecimalDuration quint64 msecs decimalPlaces QString formatSpelloutDuration quint64 msecs QString formatRelativeDate QDate date QLocale::FormatType format QString formatRelativeDateTime QDateTime dateTime QLocale::FormatType format QSharedDataPointer&lt;KFormatPrivate&gt; d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kformatprivate.cpp</field>
    <field name="url">kformatprivate_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KFormatPrivate::KFormatPrivate QLocale locale m_locale locale KFormatPrivate::~KFormatPrivate QString KFormatPrivate::formatByteSize size precision KFormat::BinaryUnitDialect dialect KFormat::BinarySizeUnits units dialect &lt;= KFormat::DefaultBinaryDialect || dialect &gt; KFormat::LastBinaryDialect dialect KFormat::IECBinaryDialect units &lt; KFormat::DefaultBinaryUnits || units &gt; KFormat::UnitLastUnit units KFormat::DefaultBinaryUnits unit multiplier dialect KFormat::MetricBinaryDialect multiplier units KFormat::DefaultBinaryUnits qAbs size multiplier unit KFormat::UnitYottaByte size multiplier unit unit units unit size pow multiplier unit unit precision QString numString m_locale toString size precision dialect KFormat::MetricBinaryDialect unit KFormat::UnitByte tr arg numString KFormat::UnitKiloByte tr arg numString KFormat::UnitMegaByte tr arg numString KFormat::UnitGigaByte tr arg numString KFormat::UnitTeraByte tr arg numString KFormat::UnitPetaByte tr arg numString KFormat::UnitExaByte tr arg numString KFormat::UnitZettaByte tr arg numString KFormat::UnitYottaByte tr arg numString dialect KFormat::JEDECBinaryDialect unit KFormat::UnitByte tr arg numString KFormat::UnitKiloByte tr arg numString KFormat::UnitMegaByte tr arg numString KFormat::UnitGigaByte tr arg numString KFormat::UnitTeraByte tr arg numString KFormat::UnitPetaByte tr arg numString KFormat::UnitExaByte tr arg numString KFormat::UnitZettaByte tr arg numString KFormat::UnitYottaByte tr arg numString unit KFormat::UnitByte tr arg numString KFormat::UnitKiloByte tr arg numString KFormat::UnitMegaByte tr arg numString KFormat::UnitGigaByte tr arg numString KFormat::UnitTeraByte tr arg numString KFormat::UnitPetaByte tr arg numString KFormat::UnitExaByte tr arg numString KFormat::UnitZettaByte tr arg numString KFormat::UnitYottaByte tr arg numString Q_ASSERT numString TimeConstants MSecsInDay MSecsInHour MSecsInMinute MSecsInSecond QString KFormatPrivate::formatDuration quint64 msecs KFormat::DurationFormatOptions options quint64 ms msecs hours ms MSecsInHour ms ms MSecsInHour minutes ms MSecsInMinute roundMinutes qRound ms ms ms MSecsInMinute seconds ms MSecsInSecond roundSeconds qRound ms ms ms MSecsInSecond options KFormat::InitialDuration KFormat::InitialDuration options KFormat::FoldHours KFormat::FoldHours options KFormat::ShowMilliseconds KFormat::ShowMilliseconds tr arg hours minutes QLatin1Char arg seconds QLatin1Char arg ms QLatin1Char options KFormat::FoldHours KFormat::FoldHours tr arg hours minutes QLatin1Char arg roundSeconds QLatin1Char options KFormat::HideSeconds KFormat::HideSeconds tr arg hours QLatin1Char arg roundMinutes QLatin1Char options KFormat::ShowMilliseconds KFormat::ShowMilliseconds tr arg hours QLatin1Char arg minutes QLatin1Char arg seconds QLatin1Char arg ms QLatin1Char tr arg hours QLatin1Char arg minutes QLatin1Char arg roundSeconds QLatin1Char options KFormat::FoldHours KFormat::FoldHours options KFormat::ShowMilliseconds KFormat::ShowMilliseconds tr arg hours minutes QLatin1Char arg seconds QLatin1Char arg ms QLatin1Char options KFormat::FoldHours KFormat::FoldHours tr arg hours minutes QLatin1Char arg roundSeconds QLatin1Char options KFormat::HideSeconds KFormat::HideSeconds tr arg hours QLatin1Char arg roundMinutes QLatin1Char options KFormat::ShowMilliseconds KFormat::ShowMilliseconds tr arg hours QLatin1Char arg minutes QLatin1Char arg seconds QLatin1Char arg ms QLatin1Char tr arg hours QLatin1Char arg minutes QLatin1Char arg roundSeconds QLatin1Char Q_UNREACHABLE QString QString KFormatPrivate::formatDecimalDuration quint64 msecs decimalPlaces msecs MSecsInDay tr arg m_locale toString msecs MSecsInDay decimalPlaces msecs MSecsInHour tr arg m_locale toString msecs MSecsInHour decimalPlaces msecs MSecsInMinute tr arg m_locale toString msecs MSecsInMinute decimalPlaces msecs MSecsInSecond tr arg m_locale toString msecs MSecsInSecond decimalPlaces tr msecs DurationUnits Days Hours Minutes Seconds QString formatSingleDuration DurationUnits units n units Days KFormatPrivate::tr n Hours KFormatPrivate::tr n Minutes KFormatPrivate::tr n Seconds KFormatPrivate::tr n Q_ASSERT QString QString KFormatPrivate::formatSpelloutDuration quint64 msecs quint64 ms msecs days ms MSecsInDay ms ms MSecsInDay hours ms MSecsInHour ms ms MSecsInHour minutes ms MSecsInMinute ms ms MSecsInMinute seconds qRound ms seconds formatSpelloutDuration msecs ms MSecsInMinute days hours tr arg formatSingleDuration Days days arg formatSingleDuration Hours hours days formatSingleDuration Days days hours minutes tr arg formatSingleDuration Hours hours arg formatSingleDuration Minutes minutes hours formatSingleDuration Hours hours minutes seconds tr arg formatSingleDuration Minutes minutes arg formatSingleDuration Seconds seconds minutes formatSingleDuration Minutes minutes formatSingleDuration Seconds seconds QString KFormatPrivate::formatRelativeDate QDate date QLocale::FormatType format daysTo QDate::currentDate daysTo date daysTo daysTo m_locale toString date format daysTo tr tr tr daysTo tr arg m_locale dayName date dayOfWeek format daysTo tr arg m_locale dayName date dayOfWeek format Q_UNREACHABLE QString KFormatPrivate::formatRelativeDateTime QDateTime dateTime QLocale::FormatType format daysTo QDate::currentDate daysTo dateTime date daysTo daysTo m_locale toString dateTime format tr arg formatRelativeDate dateTime date format arg m_locale toString dateTime time format</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KJobPrivate::KJobPrivate q_ptr uiDelegate error KJob NoError progressUnit KJob Bytes percentage speedTimer eventLoop capabilities KJob NoCapabilities suspended false isAutoDelete true isFinished false KJobPrivate::~KJobPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">KJob::KJob QObject parent QObject parent d_ptr new KJobPrivate d_ptr q_ptr KJob::KJob KJobPrivate dd QObject parent QObject parent d_ptr dd d_ptr q_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">KJob::~KJob d_ptr isFinished emit finished QPrivateSignal d_ptr speedTimer d_ptr uiDelegate d_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00068</field>
    <field name="keywords"></field>
    <field name="text">KJob::setUiDelegate KJobUiDelegate delegate Q_D KJob delegate delegate setJob d uiDelegate d uiDelegate delegate d uiDelegate d uiDelegate connectJob</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">KJobUiDelegate KJob::uiDelegate d_func uiDelegate KJob::Capabilities KJob::capabilities d_func capabilities</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text">KJob::isSuspended d_func suspended KJob::finishJob emitResult Q_D KJob d isFinished d eventLoop d eventLoop quit emit finished QPrivateSignal emitResult emit result QPrivateSignal isAutoDelete deleteLater</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text">KJob::kill KillVerbosity verbosity doKill setError KilledJobError finishJob verbosity Quietly</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00129</field>
    <field name="keywords"></field>
    <field name="text">KJob::suspend Q_D KJob d suspended doSuspend d suspended emit suspended QPrivateSignal</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00144</field>
    <field name="keywords"></field>
    <field name="text">KJob::resume Q_D KJob d suspended doResume d suspended emit resumed QPrivateSignal</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00159</field>
    <field name="keywords"></field>
    <field name="text">KJob::doKill</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00164</field>
    <field name="keywords"></field>
    <field name="text">KJob::doSuspend</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00169</field>
    <field name="keywords"></field>
    <field name="text">KJob::doResume</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00174</field>
    <field name="keywords"></field>
    <field name="text">KJob::setCapabilities KJob::Capabilities capabilities Q_D KJob d capabilities capabilities</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00180</field>
    <field name="keywords"></field>
    <field name="text">KJob::exec Q_D KJob wasAutoDelete isAutoDelete setAutoDelete Q_ASSERT d eventLoop QEventLoop loop d eventLoop loop start d isFinished d eventLoop exec QEventLoop::ExcludeUserInputEvents d eventLoop wasAutoDelete deleteLater d error NoError KJob::error d_func error QString KJob::errorText d_func errorText QString KJob::errorString d_func errorText</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00223</field>
    <field name="keywords"></field>
    <field name="text">qulonglong KJob::processedAmount Unit unit d_func processedAmount unit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00228</field>
    <field name="keywords"></field>
    <field name="text">qulonglong KJob::totalAmount Unit unit d_func totalAmount unit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00233</field>
    <field name="keywords"></field>
    <field name="text">KJob::percent d_func percentage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00238</field>
    <field name="keywords"></field>
    <field name="text">KJob::setError errorCode Q_D KJob d error errorCode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00244</field>
    <field name="keywords"></field>
    <field name="text">KJob::setErrorText QString errorText Q_D KJob d errorText errorText</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00250</field>
    <field name="keywords"></field>
    <field name="text">KJob::setProcessedAmount Unit unit qulonglong amount Q_D KJob should_emit d processedAmount unit amount d processedAmount unit amount should_emit emit processedAmount unit amount unit d progressUnit emit processedSize amount emitPercent d processedAmount unit d totalAmount unit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00266</field>
    <field name="keywords"></field>
    <field name="text">KJob::setTotalAmount Unit unit qulonglong amount Q_D KJob should_emit d totalAmount unit amount d totalAmount unit amount should_emit emit totalAmount unit amount unit d progressUnit emit totalSize amount emitPercent d processedAmount unit d totalAmount unit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00282</field>
    <field name="keywords"></field>
    <field name="text">KJob::setPercent percentage Q_D KJob d percentage percentage d percentage percentage emit percent percentage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00291</field>
    <field name="keywords"></field>
    <field name="text">KJob::emitResult finishJob</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00296</field>
    <field name="keywords"></field>
    <field name="text">KJob::emitPercent qulonglong processedAmount qulonglong totalAmount Q_D KJob totalAmount oldPercentage d percentage d percentage processedAmount totalAmount d percentage oldPercentage emit percent d percentage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00309</field>
    <field name="keywords"></field>
    <field name="text">KJob::emitSpeed value Q_D KJob d speedTimer d speedTimer QTimer connect d speedTimer SIGNAL timeout SLOT _k_speedTimeout emit speed value d speedTimer start KJobPrivate::_k_speedTimeout Q_Q KJob emit q speed q speedTimer stop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00330</field>
    <field name="keywords"></field>
    <field name="text">KJob::isAutoDelete Q_D KJob d isAutoDelete</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.cpp</field>
    <field name="url">kjob_8cpp_source.html#l00336</field>
    <field name="keywords"></field>
    <field name="text">KJob::setAutoDelete autodelete Q_D KJob d isAutoDelete autodelete</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.h</field>
    <field name="url">kjob_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KJobUiDelegate KJobPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjob.h</field>
    <field name="url">kjob_8h_source.html#l00084</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KJob QObject Q_OBJECT Q_ENUMS KillVerbosity Capability Unit Q_FLAGS Capabilities Q_PROPERTY error READ error NOTIFY result Q_PROPERTY QString errorText READ errorText NOTIFY result Q_PROPERTY QString errorString READ errorString NOTIFY result Q_PROPERTY percent READ percent NOTIFY percent Q_PROPERTY Capabilities capabilities READ capabilities CONSTANT Unit Bytes Files Directories Capability NoCapabilities Killable Suspendable Q_DECLARE_FLAGS Capabilities Capability KJob QObject parent KJob setUiDelegate KJobUiDelegate delegate KJobUiDelegate uiDelegate Capabilities capabilities isSuspended Q_SCRIPTABLE start KillVerbosity Quietly EmitResult Q_SLOTS kill KillVerbosity verbosity Quietly suspend resume doKill doSuspend doResume setCapabilities Capabilities capabilities exec NoError KilledJobError UserDefinedError error QString errorText QString errorString Q_SCRIPTABLE qulonglong processedAmount Unit unit Q_SCRIPTABLE qulonglong totalAmount Unit unit percent setAutoDelete autodelete isAutoDelete Q_SIGNALS finished KJob job defined DOXYGEN_SHOULD_SKIP_THIS QPrivateSignal endif suspended KJob job defined DOXYGEN_SHOULD_SKIP_THIS QPrivateSignal endif resumed KJob job defined DOXYGEN_SHOULD_SKIP_THIS QPrivateSignal endif result KJob job defined DOXYGEN_SHOULD_SKIP_THIS QPrivateSignal endif description KJob job QString title QPair&lt;QString, QString&gt; field1 QPair&lt;QString, QString&gt; QPair&lt;QString, QString&gt; field2 QPair&lt;QString, QString&gt; infoMessage KJob job QString plain QString rich QString warning KJob job QString plain QString rich QString Q_SIGNALS totalAmount KJob job KJob::Unit unit qulonglong amount processedAmount KJob job KJob::Unit unit qulonglong amount totalSize KJob job qulonglong size processedSize KJob job qulonglong size percent KJob job percent speed KJob job speed setError errorCode setErrorText QString errorText setProcessedAmount Unit unit qulonglong amount setTotalAmount Unit unit qulonglong amount setPercent percentage emitResult emitPercent qulonglong processedAmount qulonglong totalAmount emitSpeed speed KJobPrivate d_ptr KJob KJobPrivate dd QObject parent finishJob emitResult Q_PRIVATE_SLOT d_func _k_speedTimeout Q_DECLARE_PRIVATE KJob Q_DECLARE_METATYPE KJob::Unit Q_DECLARE_OPERATORS_FOR_FLAGS KJob::Capabilities</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobtrackerinterface.cpp</field>
    <field name="url">kjobtrackerinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KJobTrackerInterface::Private Private KJobTrackerInterface interface q interface KJobTrackerInterface q</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobtrackerinterface.cpp</field>
    <field name="url">kjobtrackerinterface_8cpp_source.html#l00035</field>
    <field name="keywords"></field>
    <field name="text">KJobTrackerInterface::KJobTrackerInterface QObject parent QObject parent d new Private this</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobtrackerinterface.cpp</field>
    <field name="url">kjobtrackerinterface_8cpp_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">KJobTrackerInterface::~KJobTrackerInterface d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobtrackerinterface.cpp</field>
    <field name="url">kjobtrackerinterface_8cpp_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">KJobTrackerInterface::registerJob KJob job QObject::connect job SIGNAL finished KJob SLOT unregisterJob KJob QObject::connect job SIGNAL finished KJob SLOT finished KJob QObject::connect job SIGNAL suspended KJob SLOT suspended KJob QObject::connect job SIGNAL resumed KJob SLOT resumed KJob QObject::connect job SIGNAL description KJob QString QPair&lt;QString, QString&gt; QPair&lt;QString, QString&gt; SLOT description KJob QString QPair&lt;QString, QString&gt; QPair&lt;QString, QString&gt; QObject::connect job SIGNAL infoMessage KJob QString QString SLOT infoMessage KJob QString QString QObject::connect job SIGNAL warning KJob QString QString SLOT warning KJob QString QString QObject::connect job SIGNAL totalAmount KJob KJob::Unit qulonglong SLOT totalAmount KJob KJob::Unit qulonglong QObject::connect job SIGNAL processedAmount KJob KJob::Unit qulonglong SLOT processedAmount KJob KJob::Unit qulonglong QObject::connect job SIGNAL percent KJob ulong SLOT percent KJob ulong QObject::connect job SIGNAL speed KJob ulong SLOT speed KJob ulong</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobtrackerinterface.cpp</field>
    <field name="url">kjobtrackerinterface_8cpp_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text">KJobTrackerInterface::unregisterJob KJob job job disconnect</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobtrackerinterface.cpp</field>
    <field name="url">kjobtrackerinterface_8cpp_source.html#l00084</field>
    <field name="keywords"></field>
    <field name="text">KJobTrackerInterface::finished KJob job Q_UNUSED job</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobtrackerinterface.cpp</field>
    <field name="url">kjobtrackerinterface_8cpp_source.html#l00089</field>
    <field name="keywords"></field>
    <field name="text">KJobTrackerInterface::suspended KJob job Q_UNUSED job</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobtrackerinterface.cpp</field>
    <field name="url">kjobtrackerinterface_8cpp_source.html#l00094</field>
    <field name="keywords"></field>
    <field name="text">KJobTrackerInterface::resumed KJob job Q_UNUSED job</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobtrackerinterface.cpp</field>
    <field name="url">kjobtrackerinterface_8cpp_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text">KJobTrackerInterface::description KJob job QString title QPair&lt;QString, QString&gt; field1 QPair&lt;QString, QString&gt; field2 Q_UNUSED job Q_UNUSED title Q_UNUSED field1 Q_UNUSED field2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobtrackerinterface.cpp</field>
    <field name="url">kjobtrackerinterface_8cpp_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text">KJobTrackerInterface::infoMessage KJob job QString plain QString rich Q_UNUSED job Q_UNUSED plain Q_UNUSED rich</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobtrackerinterface.cpp</field>
    <field name="url">kjobtrackerinterface_8cpp_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text">KJobTrackerInterface::warning KJob job QString plain QString rich Q_UNUSED job Q_UNUSED plain Q_UNUSED rich</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobtrackerinterface.cpp</field>
    <field name="url">kjobtrackerinterface_8cpp_source.html#l00124</field>
    <field name="keywords"></field>
    <field name="text">KJobTrackerInterface::totalAmount KJob job KJob::Unit unit qulonglong amount Q_UNUSED job Q_UNUSED unit Q_UNUSED amount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobtrackerinterface.cpp</field>
    <field name="url">kjobtrackerinterface_8cpp_source.html#l00131</field>
    <field name="keywords"></field>
    <field name="text">KJobTrackerInterface::processedAmount KJob job KJob::Unit unit qulonglong amount Q_UNUSED job Q_UNUSED unit Q_UNUSED amount</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobtrackerinterface.cpp</field>
    <field name="url">kjobtrackerinterface_8cpp_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text">KJobTrackerInterface::percent KJob job percent Q_UNUSED job Q_UNUSED percent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobtrackerinterface.cpp</field>
    <field name="url">kjobtrackerinterface_8cpp_source.html#l00144</field>
    <field name="keywords"></field>
    <field name="text">KJobTrackerInterface::speed KJob job value Q_UNUSED job Q_UNUSED value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobtrackerinterface.h</field>
    <field name="url">kjobtrackerinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobtrackerinterface.h</field>
    <field name="url">kjobtrackerinterface_8h_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KJobTrackerInterface QObject Q_OBJECT KJobTrackerInterface QObject parent KJobTrackerInterface Q_SLOTS registerJob KJob job unregisterJob KJob job Q_SLOTS finished KJob job suspended KJob job resumed KJob job description KJob job QString title QPair&lt;QString, QString&gt; field1 QPair&lt;QString, QString&gt; field2 infoMessage KJob job QString plain QString rich warning KJob job QString plain QString rich totalAmount KJob job KJob::Unit unit qulonglong amount processedAmount KJob job KJob::Unit unit qulonglong amount percent KJob job percent speed KJob job value Private Private d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobuidelegate.cpp</field>
    <field name="url">kjobuidelegate_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KJobUiDelegate::Private Private KJobUiDelegate delegate q delegate job autoErrorHandling false autoWarningHandling true KJobUiDelegate q KJob job autoErrorHandling autoWarningHandling connectJob KJob job _k_result KJob job</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobuidelegate.cpp</field>
    <field name="url">kjobuidelegate_8cpp_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">KJobUiDelegate::KJobUiDelegate QObject d new Private this</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobuidelegate.cpp</field>
    <field name="url">kjobuidelegate_8cpp_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">KJobUiDelegate::~KJobUiDelegate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobuidelegate.cpp</field>
    <field name="url">kjobuidelegate_8cpp_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">KJobUiDelegate::setJob KJob job d job d job job setParent job</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobuidelegate.cpp</field>
    <field name="url">kjobuidelegate_8cpp_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">KJob KJobUiDelegate::job d job</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobuidelegate.cpp</field>
    <field name="url">kjobuidelegate_8cpp_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">KJobUiDelegate::showErrorMessage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobuidelegate.cpp</field>
    <field name="url">kjobuidelegate_8cpp_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text">KJobUiDelegate::setAutoErrorHandlingEnabled enable d autoErrorHandling enable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobuidelegate.cpp</field>
    <field name="url">kjobuidelegate_8cpp_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">KJobUiDelegate::isAutoErrorHandlingEnabled d autoErrorHandling</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobuidelegate.cpp</field>
    <field name="url">kjobuidelegate_8cpp_source.html#l00085</field>
    <field name="keywords"></field>
    <field name="text">KJobUiDelegate::setAutoWarningHandlingEnabled enable d autoWarningHandling enable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobuidelegate.cpp</field>
    <field name="url">kjobuidelegate_8cpp_source.html#l00090</field>
    <field name="keywords"></field>
    <field name="text">KJobUiDelegate::isAutoWarningHandlingEnabled d autoWarningHandling KJobUiDelegate::slotWarning KJob job QString plain QString rich Q_UNUSED job Q_UNUSED plain Q_UNUSED rich KJobUiDelegate::connectJob KJob job connect job SIGNAL result KJob SLOT _k_result KJob connect job SIGNAL warning KJob QString QString SLOT slotWarning KJob QString QString KJobUiDelegate::Private::_k_result KJob job2 Q_UNUSED job2 job error autoErrorHandling q showErrorMessage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobuidelegate.h</field>
    <field name="url">kjobuidelegate_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KJob</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kjobuidelegate.h</field>
    <field name="url">kjobuidelegate_8h_source.html#l00039</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KJobUiDelegate QObject Q_OBJECT KJobUiDelegate KJobUiDelegate setJob KJob job KJob job KJob showErrorMessage setAutoErrorHandlingEnabled enable isAutoErrorHandlingEnabled setAutoWarningHandlingEnabled enable isAutoWarningHandlingEnabled Q_SLOTS slotWarning KJob job QString plain QString rich connectJob KJob job Q_PRIVATE_SLOT d _k_result KJob Private Private d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00028</field>
    <field name="keywords"></field>
    <field name="text">KMacroExpanderBase::KMacroExpanderBase QChar c d new KMacroExpanderBasePrivate c</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">KMacroExpanderBase::~KMacroExpanderBase d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">KMacroExpanderBase::setEscapeChar QChar c d escapechar c QChar</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">KMacroExpanderBase::escapeChar d escapechar</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">KMacroExpanderBase::expandMacros QString str pos len ushort ec d escapechar unicode QStringList rst QString rsts pos pos str length ec str unicode pos unicode ec nohit len expandEscapedMacro str pos rst nohit len expandPlainMacro str pos rst nohit len pos len rsts rst join QLatin1Char rst clear str replace pos len rsts pos rsts length nohit pos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00084</field>
    <field name="keywords"></field>
    <field name="text">KMacroExpanderBase::expandMacrosShellQuote QString str pos expandMacrosShellQuote str pos pos str length</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00090</field>
    <field name="keywords"></field>
    <field name="text">KMacroExpanderBase::expandPlainMacro QString QStringList qFatal</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text">KMacroExpanderBase::expandEscapedMacro QString QStringList qFatal KMacroMapExpander KMacroExpanderBase KMacroMapExpander QHash&lt;KT, VT&gt; map QChar c QLatin1Char KMacroExpanderBase c macromap map expandPlainMacro QString str pos QStringList ret Q_DECL_OVERRIDE expandEscapedMacro QString str pos QStringList ret Q_DECL_OVERRIDE QHash&lt;KT, VT&gt; macromap QStringList operator+= QStringList s QString n s n s isIdentifier ushort c c c c c c c c KMacroMapExpander QChar VT KMacroExpanderBase KMacroMapExpander QHash&lt;QChar, VT&gt; map QChar c QLatin1Char KMacroExpanderBase c macromap map expandPlainMacro QString str pos QStringList ret Q_DECL_OVERRIDE expandEscapedMacro QString str pos QStringList ret Q_DECL_OVERRIDE QHash&lt;QChar, VT&gt; macromap KMacroMapExpander&lt;QChar, VT&gt;::expandPlainMacro QString str pos QStringList ret QHash&lt;QChar, VT&gt;::const_iterator it macromap constFind str unicode pos it macromap constEnd ret it value KMacroMapExpander&lt;QChar, VT&gt;::expandEscapedMacro QString str pos QStringList ret str length pos str unicode pos escapeChar ret QString escapeChar QHash&lt;QChar, VT&gt;::const_iterator it macromap constFind str unicode pos it macromap constEnd ret it value KMacroMapExpander QString VT KMacroExpanderBase KMacroMapExpander QHash&lt;QString, VT&gt; map QChar c QLatin1Char KMacroExpanderBase c macromap map expandPlainMacro QString str pos QStringList ret Q_DECL_OVERRIDE expandEscapedMacro QString str pos QStringList ret Q_DECL_OVERRIDE QHash&lt;QString, VT&gt; macromap KMacroMapExpander&lt;QString, VT&gt;::expandPlainMacro QString str pos QStringList ret pos isIdentifier str unicode pos unicode sl sl isIdentifier str unicode pos sl unicode sl sl QHash&lt;QString, VT&gt;::const_iterator it macromap constFind str mid pos sl it macromap constEnd ret it value sl KMacroMapExpander&lt;QString, VT&gt;::expandEscapedMacro QString str pos QStringList ret str length pos str unicode pos escapeChar ret QString escapeChar sl rsl rpos str unicode pos unicode rpos pos sl str indexOf QLatin1Char rpos sl rpos rsl sl rpos pos sl isIdentifier str unicode rpos sl unicode sl rsl sl sl QHash&lt;QString, VT&gt;::const_iterator it macromap constFind str mid rpos sl it macromap constEnd ret it value rsl</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00267</field>
    <field name="keywords"></field>
    <field name="text">KCharMacroExpander::expandPlainMacro QString str pos QStringList ret expandMacro str unicode pos ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00276</field>
    <field name="keywords"></field>
    <field name="text">KCharMacroExpander::expandEscapedMacro QString str pos QStringList ret str length pos str unicode pos escapeChar ret QString escapeChar expandMacro str unicode pos ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00293</field>
    <field name="keywords"></field>
    <field name="text">KWordMacroExpander::expandPlainMacro QString str pos QStringList ret pos isIdentifier str unicode pos unicode sl sl isIdentifier str unicode pos sl unicode sl sl expandMacro str mid pos sl ret sl</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00311</field>
    <field name="keywords"></field>
    <field name="text">KWordMacroExpander::expandEscapedMacro QString str pos QStringList ret str length pos str unicode pos escapeChar ret QString escapeChar sl rsl rpos str unicode pos unicode rpos pos sl str indexOf QLatin1Char rpos sl rpos rsl sl rpos pos sl isIdentifier str unicode rpos sl unicode sl rsl sl sl expandMacro str mid rpos sl ret rsl QString TexpandMacros QString ostr QHash&lt;KT, VT&gt; map QChar c QString str ostr KMacroMapExpander&lt;KT, VT&gt; kmx map c kmx expandMacros str str QString TexpandMacrosShellQuote QString ostr QHash&lt;KT, VT&gt; map QChar c QString str ostr KMacroMapExpander&lt;KT, VT&gt; kmx map c kmx expandMacrosShellQuote str QString str</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00369</field>
    <field name="keywords"></field>
    <field name="text">KMacroExpander</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00372</field>
    <field name="keywords"></field>
    <field name="text">QString expandMacros QString ostr QHash&lt;QChar, QString&gt; map QChar c TexpandMacros ostr map c</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00376</field>
    <field name="keywords"></field>
    <field name="text">QString expandMacrosShellQuote QString ostr QHash&lt;QChar, QString&gt; map QChar c TexpandMacrosShellQuote ostr map c</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00380</field>
    <field name="keywords"></field>
    <field name="text">QString expandMacros QString ostr QHash&lt;QString, QString&gt; map QChar c TexpandMacros ostr map c</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00384</field>
    <field name="keywords"></field>
    <field name="text">QString expandMacrosShellQuote QString ostr QHash&lt;QString, QString&gt; map QChar c TexpandMacrosShellQuote ostr map c</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00388</field>
    <field name="keywords"></field>
    <field name="text">QString expandMacros QString ostr QHash&lt;QChar, QStringList&gt; map QChar c TexpandMacros ostr map c</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.cpp</field>
    <field name="url">kmacroexpander_8cpp_source.html#l00392</field>
    <field name="keywords"></field>
    <field name="text">QString expandMacrosShellQuote QString ostr QHash&lt;QChar, QStringList&gt; map QChar c TexpandMacrosShellQuote ostr map c QString expandMacros QString ostr QHash&lt;QString, QStringList&gt; map QChar c TexpandMacros ostr map c QString expandMacrosShellQuote QString ostr QHash&lt;QString, QStringList&gt; map QChar c TexpandMacrosShellQuote ostr map c</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.h</field>
    <field name="url">kmacroexpander_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QString QStringList QHash KMacroExpanderBasePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.h</field>
    <field name="url">kmacroexpander_8h_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KMacroExpanderBase KMacroExpanderBase QChar c QLatin1Char KMacroExpanderBase expandMacros QString str expandMacrosShellQuote QString str pos expandMacrosShellQuote QString str setEscapeChar QChar c QChar escapeChar expandPlainMacro QString str pos QStringList ret expandEscapedMacro QString str pos QStringList ret KMacroExpanderBasePrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.h</field>
    <field name="url">kmacroexpander_8h_source.html#l00218</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KWordMacroExpander KMacroExpanderBase</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.h</field>
    <field name="url">kmacroexpander_8h_source.html#l00226</field>
    <field name="keywords"></field>
    <field name="text">KWordMacroExpander QChar c QLatin1Char KMacroExpanderBase c expandPlainMacro QString str pos QStringList ret Q_DECL_OVERRIDE expandEscapedMacro QString str pos QStringList ret Q_DECL_OVERRIDE expandMacro QString str QStringList ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.h</field>
    <field name="url">kmacroexpander_8h_source.html#l00255</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KCharMacroExpander KMacroExpanderBase</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander.h</field>
    <field name="url">kmacroexpander_8h_source.html#l00263</field>
    <field name="keywords"></field>
    <field name="text">KCharMacroExpander QChar c QLatin1Char KMacroExpanderBase c expandPlainMacro QString str pos QStringList ret Q_DECL_OVERRIDE expandEscapedMacro QString str pos QStringList ret Q_DECL_OVERRIDE expandMacro QChar chr QStringList ret KMacroExpander KCOREADDONS_EXPORT QString expandMacros QString str QHash&lt;QChar, QString&gt; map QChar c QLatin1Char KCOREADDONS_EXPORT QString expandMacrosShellQuote QString str QHash&lt;QChar, QString&gt; map QChar c QLatin1Char KCOREADDONS_EXPORT QString expandMacros QString str QHash&lt;QString, QString&gt; map QChar c QLatin1Char KCOREADDONS_EXPORT QString expandMacrosShellQuote QString str QHash&lt;QString, QString&gt; map QChar c QLatin1Char KCOREADDONS_EXPORT QString expandMacros QString str QHash&lt;QChar, QStringList&gt; map QChar c QLatin1Char KCOREADDONS_EXPORT QString expandMacros QString str QHash&lt;QString, QStringList&gt; map QChar c QLatin1Char KCOREADDONS_EXPORT QString expandMacrosShellQuote QString str QHash&lt;QChar, QStringList&gt; map QChar c QLatin1Char KCOREADDONS_EXPORT QString expandMacrosShellQuote QString str QHash&lt;QString, QStringList&gt; map QChar c QLatin1Char</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander_unix.cpp</field>
    <field name="url">kmacroexpander__unix_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KMacroExpander Quoting noquote singlequote doublequote dollarquote paren subst group math Quoting current dquote State QString str pos Save KMacroExpander isSpecial QChar cUnicode uchar iqm uint c cUnicode unicode c iqm iqm c c QString quoteArg QString arg arg length QString::fromLatin1 i i arg length i isSpecial arg unicode i QChar q QLatin1Char QString arg replace q QLatin1String prepend q append q arg QString joinArgs QStringList args QString ret QStringList::ConstIterator it args begin it args end it ret isEmpty ret append QLatin1Char ret append quoteArg it ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander_unix.cpp</field>
    <field name="url">kmacroexpander__unix_8cpp_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text">KMacroExpanderBase::expandMacrosShellQuote QString str pos len pos2 ushort ec d escapechar unicode State state noquote QStack&lt;State&gt; sstack QStack&lt;Save&gt; ostack QStringList rst QString rsts pos str length ushort cc str unicode pos unicode ec cc ec nohit len expandEscapedMacro str pos rst nohit len expandPlainMacro str pos rst nohit len pos len state dquote rsts rst join QLatin1String rsts replace QRegExp QLatin1String QLatin1String state current dollarquote rsts rst join QLatin1String rsts replace QRegExp QLatin1String QLatin1String state current singlequote rsts rst join QLatin1String rsts replace QLatin1Char QLatin1String rst isEmpty str remove pos len rsts joinArgs rst rst clear str replace pos len rsts pos rsts length nohit state current singlequote cc state sstack pop cc pos state current dollarquote cc state sstack pop cc cc str unicode pos unicode cc sstack push state str unicode pos unicode Save sav str pos ostack push sav state current math pos state current paren state dquote cc sstack push state state current subst state dquote cc sstack push state state current dollarquote cc sstack push state state current doublequote state dquote cc str replace pos QLatin1String pos2 pos pos2 str length pos pos2 cc str unicode pos2 unicode cc cc cc str unicode pos2 unicode cc cc cc cc state dquote str remove pos2 pos2 str pos2 QLatin1Char sstack push state state current paren state dquote state current doublequote cc state sstack pop cc state dquote sstack push state state current singlequote cc state dquote sstack push state state current doublequote state dquote state current subst cc state sstack pop cc state current math str unicode pos unicode state sstack pop pos pos ostack top pos str ostack top str ostack pop state current paren state dquote sstack push state state current paren state sstack pop cc state current KMacroExpander::group state sstack pop cc sstack push state state current paren cc sstack push state state current KMacroExpander::group pos sstack empty</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmacroexpander_win.cpp</field>
    <field name="url">kmacroexpander__win_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KMacroExpanderBase::expandMacrosShellQuote QString str pos len pos2 ushort uc ushort ec d escapechar unicode shellQuote crtQuote escaped bslashes parens QStringList rst QString rsts pos str length ushort cc str unicode pos unicode escaped notcf ec cc ec nohit len expandEscapedMacro str pos rst nohit len expandPlainMacro str pos rst nohit len pos len shellQuote crtQuote shellQuote rsts KShell::quoteArgInternal rst join QLatin1String rst isEmpty str remove pos len rsts KShell::joinArgs rst pos2 pos2 rsts length uc rsts unicode pos2 unicode uc pos2 pos2 rsts length rsts unicode pos2 unicode QString bsl bsl reserve bslashes bslashes bslashes bsl append QLatin1String rsts prepend bsl bslashes rst clear str replace pos len rsts pos rsts length nohit escaped shellQuote cc escaped notcf cc bslashes cc escaped shellQuote shellQuote bslashes crtQuote crtQuote shellQuote cc parens cc parens bslashes escaped pos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmessage.cpp</field>
    <field name="url">kmessage_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">StaticMessageHandler StaticMessageHandler m_handler StaticMessageHandler m_handler setHandler KMessageHandler handler m_handler m_handler handler KMessageHandler handler m_handler KMessageHandler m_handler Q_GLOBAL_STATIC StaticMessageHandler s_messageHandler internalMessageFallback KMessage::MessageType messageType QString text QString caption QString prefix messageType KMessage::Error prefix QStringLiteral KMessage::Fatal prefix QStringLiteral KMessage::Information prefix QStringLiteral KMessage::Sorry prefix QStringLiteral KMessage::Warning prefix QStringLiteral QString message caption isEmpty message QLatin1Char caption QLatin1Char message prefix text std::cerr std::endl std::cerr qPrintable message std::endl</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmessage.cpp</field>
    <field name="url">kmessage_8cpp_source.html#l00084</field>
    <field name="keywords"></field>
    <field name="text">KMessage::setMessageHandler KMessageHandler handler s_messageHandler setHandler handler</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmessage.cpp</field>
    <field name="url">kmessage_8cpp_source.html#l00090</field>
    <field name="keywords"></field>
    <field name="text">KMessage::message KMessage::MessageType messageType QString text QString caption s_messageHandler handler s_messageHandler handler message messageType text caption internalMessageFallback messageType text caption</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmessage.h</field>
    <field name="url">kmessage_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KMessageHandler</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmessage.h</field>
    <field name="url">kmessage_8h_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">KMessage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmessage.h</field>
    <field name="url">kmessage_8h_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">MessageType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmessage.h</field>
    <field name="url">kmessage_8h_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">Error</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmessage.h</field>
    <field name="url">kmessage_8h_source.html#l00061</field>
    <field name="keywords"></field>
    <field name="text">Information</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmessage.h</field>
    <field name="url">kmessage_8h_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">Warning</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmessage.h</field>
    <field name="url">kmessage_8h_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">Sorry</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmessage.h</field>
    <field name="url">kmessage_8h_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text">Fatal KCOREADDONS_EXPORT message KMessage::MessageType messageType QString text QString caption QString KCOREADDONS_EXPORT setMessageHandler KMessageHandler handler</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmessage.h</field>
    <field name="url">kmessage_8h_source.html#l00112</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KMessageHandler KMessageHandler message KMessage::MessageType type QString text QString caption</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.cpp</field>
    <field name="url">kpluginfactory_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_GLOBAL_STATIC QObjectCleanupHandler factorycleanup kLibraryDebugArea</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.cpp</field>
    <field name="url">kpluginfactory_8cpp_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">KPluginFactory::KPluginFactory d_ptr new KPluginFactoryPrivate Q_D KPluginFactory d q_ptr factorycleanup add KPluginFactory::KPluginFactory KPluginFactoryPrivate d d_ptr d factorycleanup add</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.cpp</field>
    <field name="url">kpluginfactory_8cpp_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">KPluginFactory::~KPluginFactory d_ptr KPluginFactory::registerPlugin QString keyword QMetaObject metaObject CreateInstanceFunction instanceFunction Q_D KPluginFactory Q_ASSERT metaObject keyword isEmpty d createInstanceHash contains keyword qCWarning KCOREADDONS_DEBUG keyword d createInstanceHash insert keyword KPluginFactoryPrivate::Plugin metaObject instanceFunction QList&lt;KPluginFactoryPrivate::Plugin&gt; clashes d createInstanceHash values keyword QMetaObject superClass metaObject superClass superClass KPluginFactoryPrivate::Plugin plugin clashes QMetaObject otherSuper plugin first superClass otherSuper otherSuper otherSuper superClass superClass otherSuper qCWarning KCOREADDONS_DEBUG superClass className KPluginFactoryPrivate::Plugin plugin clashes superClass plugin first superClass superClass QMetaObject otherSuper metaObject superClass otherSuper otherSuper otherSuper superClass superClass otherSuper qCWarning KCOREADDONS_DEBUG superClass className d createInstanceHash insertMulti keyword KPluginFactoryPrivate::Plugin metaObject instanceFunction</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.cpp</field>
    <field name="url">kpluginfactory_8cpp_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text">QObject KPluginFactory::createObject QObject parent className QStringList args Q_UNUSED parent Q_UNUSED className Q_UNUSED args</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.cpp</field>
    <field name="url">kpluginfactory_8cpp_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text">KParts::Part KPluginFactory::createPartObject QWidget parentWidget QObject parent classname QStringList args Q_UNUSED parent Q_UNUSED parentWidget Q_UNUSED classname Q_UNUSED args</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.cpp</field>
    <field name="url">kpluginfactory_8cpp_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text">QObject KPluginFactory::create iface QWidget parentWidget QObject parent QVariantList args QString keyword Q_D KPluginFactory QObject obj keyword isEmpty QStringList argsStringList variantListToStringList args obj reinterpret_cast&lt;QObject *&gt; createPartObject parentWidget parent iface argsStringList objectCreated obj obj obj createObject parent iface argsStringList objectCreated obj obj QList&lt;KPluginFactoryPrivate::Plugin&gt; candidates d createInstanceHash values keyword KPluginFactoryPrivate::Plugin plugin candidates QMetaObject current plugin first current current current superClass qstrcmp iface current className obj qCWarning KCOREADDONS_DEBUG obj plugin second parentWidget parent args obj emit objectCreated obj obj</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.cpp</field>
    <field name="url">kpluginfactory_8cpp_source.html#l00157</field>
    <field name="keywords"></field>
    <field name="text">QStringList KPluginFactory::variantListToStringList QVariantList list QStringList stringlist Q_FOREACH QVariant var list stringlist var toString stringlist</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.cpp</field>
    <field name="url">kpluginfactory_8cpp_source.html#l00166</field>
    <field name="keywords"></field>
    <field name="text">QVariantList KPluginFactory::stringListToVariantList QStringList list QVariantList variantlist Q_FOREACH QString str list variantlist QVariant str variantlist</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.h</field>
    <field name="url">kpluginfactory_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KPluginFactoryPrivate KParts Part</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.h</field>
    <field name="url">kpluginfactory_8h_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.h</field>
    <field name="url">kpluginfactory_8h_source.html#l00155</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.h</field>
    <field name="url">kpluginfactory_8h_source.html#l00168</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.h</field>
    <field name="url">kpluginfactory_8h_source.html#l00183</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.h</field>
    <field name="url">kpluginfactory_8h_source.html#l00274</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KPluginFactory QObject Q_OBJECT Q_DECLARE_PRIVATE KPluginFactory KPluginFactory KPluginFactory T create QObject parent QVariantList args QVariantList T create QString keyword QObject parent QVariantList args QVariantList T create QWidget parentWidget QObject parent QString keyword QString QVariantList args QVariantList KCOREADDONS_DEPRECATED</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.h</field>
    <field name="url">kpluginfactory_8h_source.html#l00339</field>
    <field name="keywords"></field>
    <field name="text">T create QObject parent QStringList args create&lt;T&gt; parent stringListToVariantList args</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.h</field>
    <field name="url">kpluginfactory_8h_source.html#l00349</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_DEPRECATED QObject create QObject parent classname QStringList args QStringList create classname parent stringListToVariantList args QString QVariantList stringListToVariantList QStringList list QStringList variantListToStringList QVariantList list Q_SIGNALS objectCreated QObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.h</field>
    <field name="url">kpluginfactory_8h_source.html#l00374</field>
    <field name="keywords"></field>
    <field name="text">QObject QWidget QObject QVariantList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.h</field>
    <field name="url">kpluginfactory_8h_source.html#l00381</field>
    <field name="keywords"></field>
    <field name="text">InheritanceChecker CreateInstanceFunction createInstanceFunction KParts::Part createPartInstance&lt;impl&gt; CreateInstanceFunction createInstanceFunction QWidget createInstance&lt;impl, QWidget&gt; CreateInstanceFunction createInstanceFunction createInstance&lt;impl, QObject&gt; KPluginFactory KPluginFactoryPrivate dd</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.h</field>
    <field name="url">kpluginfactory_8h_source.html#l00430</field>
    <field name="keywords"></field>
    <field name="text">registerPlugin QString keyword QString CreateInstanceFunction instanceFunction InheritanceChecker&lt;T&gt; createInstanceFunction reinterpret_cast&lt;T *&gt; registerPlugin keyword T::staticMetaObject instanceFunction KPluginFactoryPrivate d_ptr KCOREADDONS_DEPRECATED QObject createObject QObject parent className QStringList args KCOREADDONS_DEPRECATED KParts::Part createPartObject QWidget parentWidget QObject parent classname QStringList args QObject create iface QWidget parentWidget QObject parent QVariantList args QString keyword QObject createInstance QWidget parentWidget QObject parent QVariantList args Q_UNUSED parentWidget ParentType p parent p qobject_cast ParentType parent Q_ASSERT p impl p args QObject createPartInstance QWidget parentWidget QObject parent QVariantList args impl parentWidget parent args registerPlugin QString keyword QMetaObject metaObject CreateInstanceFunction instanceFunction KPluginFactory KLibFactory</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.h</field>
    <field name="url">kpluginfactory_8h_source.html#l00493</field>
    <field name="keywords"></field>
    <field name="text">T KPluginFactory::create QObject parent QVariantList args QObject o create T::staticMetaObject className parent parent isWidgetType QWidget parent parent args QString T t qobject_cast T o t o t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.h</field>
    <field name="url">kpluginfactory_8h_source.html#l00505</field>
    <field name="keywords"></field>
    <field name="text">T KPluginFactory::create QString keyword QObject parent QVariantList args QObject o create T::staticMetaObject className parent parent isWidgetType QWidget parent parent args keyword T t qobject_cast T o t o t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginfactory.h</field>
    <field name="url">kpluginfactory_8h_source.html#l00517</field>
    <field name="keywords"></field>
    <field name="text">T KPluginFactory::create QWidget parentWidget QObject parent QString keyword QVariantList args QObject o create T::staticMetaObject className parentWidget parent args keyword T t qobject_cast T o t o t Q_DECLARE_INTERFACE KPluginFactory KPluginFactory_iid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.cpp</field>
    <field name="url">kpluginloader_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KPluginLoaderPrivate Q_DECLARE_PUBLIC KPluginLoader KPluginLoaderPrivate QString libname name libname loader pluginVersion U pluginVersionResolved false KPluginLoaderPrivate KPluginLoader q_ptr QString name QString errorString QPluginLoader loader quint32 pluginVersion pluginVersionResolved</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.cpp</field>
    <field name="url">kpluginloader_8cpp_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginLoader::findPlugin QString name QMutex s_qtWorkaroundMutex QMutexLocker lock s_qtWorkaroundMutex QPluginLoader loader name loader fileName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.cpp</field>
    <field name="url">kpluginloader_8cpp_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">KPluginLoader::KPluginLoader QString plugin QObject parent QObject parent d_ptr new KPluginLoaderPrivate plugin d_ptr q_ptr Q_D KPluginLoader d loader QPluginLoader plugin</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.cpp</field>
    <field name="url">kpluginloader_8cpp_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">KPluginLoader::KPluginLoader KPluginName pluginName QObject parent QObject parent d_ptr new KPluginLoaderPrivate pluginName name d_ptr q_ptr Q_D KPluginLoader d loader QPluginLoader pluginName isValid d loader setFileName pluginName name d loader fileName isEmpty qCWarning KCOREADDONS_DEBUG pluginName name d loader errorString endl QCoreApplication::libraryPaths endl d errorString pluginName errorString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.cpp</field>
    <field name="url">kpluginloader_8cpp_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text">KPluginLoader::~KPluginLoader d_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.cpp</field>
    <field name="url">kpluginloader_8cpp_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text">KPluginFactory KPluginLoader::factory Q_D KPluginLoader QObject obj instance obj KPluginFactory factory qobject_cast KPluginFactory obj factory qCDebug KCOREADDONS_DEBUG obj metaObject className obj d errorString tr arg d name factory quint32 KPluginLoader::pluginVersion Q_D KPluginLoader load qint32 d pluginVersion QString KPluginLoader::pluginName Q_D KPluginLoader d name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.cpp</field>
    <field name="url">kpluginloader_8cpp_source.html#l00145</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginLoader::errorString Q_D KPluginLoader d errorString isEmpty d errorString d loader errorString QString KPluginLoader::fileName Q_D KPluginLoader d loader fileName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.cpp</field>
    <field name="url">kpluginloader_8cpp_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text">QObject KPluginLoader::instance Q_D KPluginLoader load d loader instance</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.cpp</field>
    <field name="url">kpluginloader_8cpp_source.html#l00173</field>
    <field name="keywords"></field>
    <field name="text">KPluginLoader::isLoaded Q_D KPluginLoader d loader isLoaded d pluginVersionResolved</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.cpp</field>
    <field name="url">kpluginloader_8cpp_source.html#l00180</field>
    <field name="keywords"></field>
    <field name="text">KPluginLoader::load Q_D KPluginLoader d loader load d pluginVersionResolved Q_ASSERT fileName isEmpty QLibrary lib fileName Q_ASSERT lib isLoaded quint32 version quint32 lib resolve version d pluginVersion version d pluginVersion U d pluginVersionResolved QLibrary::LoadHints KPluginLoader::loadHints Q_D KPluginLoader d loader loadHints</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.cpp</field>
    <field name="url">kpluginloader_8cpp_source.html#l00215</field>
    <field name="keywords"></field>
    <field name="text">QJsonObject KPluginLoader::metaData Q_D KPluginLoader d loader metaData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.cpp</field>
    <field name="url">kpluginloader_8cpp_source.html#l00222</field>
    <field name="keywords"></field>
    <field name="text">KPluginLoader::setLoadHints QLibrary::LoadHints loadHints Q_D KPluginLoader d loader setLoadHints loadHints</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.cpp</field>
    <field name="url">kpluginloader_8cpp_source.html#l00229</field>
    <field name="keywords"></field>
    <field name="text">KPluginLoader::unload Q_D KPluginLoader d pluginVersionResolved d loader unload</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.cpp</field>
    <field name="url">kpluginloader_8cpp_source.html#l00241</field>
    <field name="keywords"></field>
    <field name="text">KPluginLoader::forEachPlugin QString directory std::function QString callback QStringList dirsToCheck QDir::isAbsolutePath directory dirsToCheck directory QString libDir QCoreApplication::libraryPaths dirsToCheck libDir QDir::separator directory QString dir dirsToCheck QDirIterator it dir QDir::Files it hasNext it next QLibrary::isLibrary it fileName callback it fileInfo absoluteFilePath</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.cpp</field>
    <field name="url">kpluginloader_8cpp_source.html#l00263</field>
    <field name="keywords"></field>
    <field name="text">QVector&lt;KPluginMetaData&gt; KPluginLoader::findPlugins QString directory std::function KPluginMetaData filter QVector&lt;KPluginMetaData&gt; ret forEachPlugin directory QString pluginPath KPluginMetaData metadata pluginPath metadata isValid filter filter metadata ret append metadata ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.cpp</field>
    <field name="url">kpluginloader_8cpp_source.html#l00279</field>
    <field name="keywords"></field>
    <field name="text">QVector&lt; KPluginMetaData &gt; KPluginLoader::findPluginsById QString directory QString pluginId filter pluginId KPluginMetaData md md pluginId pluginId KPluginLoader::findPlugins directory filter</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.cpp</field>
    <field name="url">kpluginloader_8cpp_source.html#l00288</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;QObject *&gt; KPluginLoader::instantiatePlugins QString directory std::function KPluginMetaData filter QObject parent QList&lt;QObject *&gt; ret QPluginLoader loader KPluginMetaData metadata findPlugins directory filter loader setFileName metadata fileName QObject obj loader instance obj qCWarning KCOREADDONS_DEBUG nospace metadata fileName loader errorString obj setParent parent ret append obj ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.h</field>
    <field name="url">kpluginloader_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KPluginFactory KPluginMetaData KPluginLoaderPrivate KPluginName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.h</field>
    <field name="url">kpluginloader_8h_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KPluginLoader QObject Q_OBJECT Q_PROPERTY QString fileName READ fileName Q_PROPERTY QLibrary::LoadHints loadHints READ loadHints WRITE setLoadHints Q_PROPERTY QString pluginName READ pluginName Q_PROPERTY quint32 pluginVersion READ pluginVersion KPluginLoader QString plugin QObject parent KPluginLoader KPluginName name QObject parent KPluginLoader KPluginFactory factory QString pluginName quint32 pluginVersion QString findPlugin QString name QString errorString QString fileName QObject instance isLoaded load QLibrary::LoadHints loadHints QJsonObject metaData setLoadHints QLibrary::LoadHints loadHints unload QList&lt;QObject *&gt; instantiatePlugins QString directory std::function KPluginMetaData filter std::function KPluginMetaData QObject parent Q_NULLPTR QVector&lt;KPluginMetaData&gt; findPlugins QString directory std::function KPluginMetaData filter std::function KPluginMetaData QVector&lt;KPluginMetaData&gt; findPluginsById QString directory QString pluginId forEachPlugin QString directory std::function QString callback std::function QString Q_DECLARE_PRIVATE KPluginLoader Q_DISABLE_COPY KPluginLoader KPluginLoaderPrivate d_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.h</field>
    <field name="url">kpluginloader_8h_source.html#l00395</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KPluginName KPluginName QString name QString name isValid QString errorString KPluginName fromErrorString QString errorString KPluginName QString name isError QString m_name m_isError</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.h</field>
    <field name="url">kpluginloader_8h_source.html#l00453</field>
    <field name="keywords"></field>
    <field name="text">KPluginName::KPluginName QString name m_name name m_isError false KPluginName::KPluginName QString name isError m_name name m_isError isError</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.h</field>
    <field name="url">kpluginloader_8h_source.html#l00459</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginName::name m_isError QString m_name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.h</field>
    <field name="url">kpluginloader_8h_source.html#l00463</field>
    <field name="keywords"></field>
    <field name="text">KPluginName::isValid m_isError</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.h</field>
    <field name="url">kpluginloader_8h_source.html#l00467</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginName::errorString m_isError m_name QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginloader.h</field>
    <field name="url">kpluginloader_8h_source.html#l00471</field>
    <field name="keywords"></field>
    <field name="text">KPluginName KPluginName::fromErrorString QString errorString KPluginName errorString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaDataPrivate QSharedData QString metaDataFileName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00040</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaData::KPluginMetaData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaData::KPluginMetaData KPluginMetaData other m_metaData other m_metaData m_fileName other fileName d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaData KPluginMetaData::operator= KPluginMetaData other m_metaData other m_metaData m_fileName other m_fileName d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaData::~KPluginMetaData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00061</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaData::KPluginMetaData QString file file endsWith QStringLiteral loadFromDesktopFile file QStringList file endsWith QStringLiteral d KPluginMetaDataPrivate QFile f file b f open QIODevice::ReadOnly b qCWarning KCOREADDONS_DEBUG file m_metaData QJsonDocument::fromJson f readAll m_fileName file d metaDataFileName file QPluginLoader loader file m_fileName QFileInfo loader fileName absoluteFilePath m_metaData loader metaData value QStringLiteral toObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaData::KPluginMetaData QPluginLoader loader m_fileName QFileInfo loader fileName absoluteFilePath m_metaData loader metaData value QStringLiteral toObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00089</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaData::KPluginMetaData KPluginLoader loader m_fileName QFileInfo loader fileName absoluteFilePath m_metaData loader metaData value QStringLiteral toObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaData::KPluginMetaData QJsonObject metaData QString file m_fileName file m_metaData metaData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaData::KPluginMetaData QJsonObject metaData QString pluginFile QString metaDataFile m_fileName pluginFile m_metaData metaData metaDataFile isEmpty d KPluginMetaDataPrivate d metaDataFileName metaDataFile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00111</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaData KPluginMetaData::fromDesktopFile QString file QStringList serviceTypes KPluginMetaData result result loadFromDesktopFile file serviceTypes result KPluginMetaData::loadFromDesktopFile QString file QStringList serviceTypes QString libraryPath DesktopFileParser::convert file serviceTypes m_metaData libraryPath Q_ASSERT isValid d KPluginMetaDataPrivate d metaDataFileName QFileInfo file absoluteFilePath libraryPath isEmpty m_fileName libraryPath m_fileName d metaDataFileName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00136</field>
    <field name="keywords"></field>
    <field name="text">QJsonObject KPluginMetaData::rawData m_metaData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginMetaData::fileName m_fileName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00146</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginMetaData::metaDataFileName d d metaDataFileName m_fileName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00152</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaData::isValid pluginId isEmpty m_metaData isEmpty</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00158</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaData::isHidden rootObject QStringLiteral toBool QJsonObject KPluginMetaData::rootObject m_metaData QStringLiteral toObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00168</field>
    <field name="keywords"></field>
    <field name="text">QStringList KPluginMetaData::readStringList QJsonObject obj QString key QJsonValue value obj value key value isUndefined value isObject value isNull QStringList value isArray value toVariant toStringList QString asString value isString value toString value toVariant toString QString obj value QStringLiteral toObject value QStringLiteral toString qCWarning KCOREADDONS_DEBUG key asString toLatin1 constData QStringList asString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00184</field>
    <field name="keywords"></field>
    <field name="text">QJsonValue KPluginMetaData::readTranslatedValue QJsonObject jo QString key QJsonValue defaultValue QString languageWithCountry QLocale name it jo constFind key QLatin1Char languageWithCountry QLatin1Char it jo constEnd it value QStringRef language languageWithCountry midRef languageWithCountry indexOf QLatin1Char it jo constFind key QLatin1Char language QLatin1Char it jo constEnd it value it jo constFind key it jo constEnd jo value key defaultValue</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00204</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginMetaData::readTranslatedString QJsonObject jo QString key QString defaultValue readTranslatedValue jo key defaultValue toString defaultValue addPersonFromJson QJsonObject obj QList&lt;KAboutPerson&gt; out KAboutPerson person KAboutPerson::fromJSON obj person name isEmpty qCWarning KCOREADDONS_DEBUG obj out append person QList&lt;KAboutPerson&gt; aboutPersonFromJSON QJsonValue people QList&lt;KAboutPerson&gt; ret people isObject addPersonFromJson people toObject ret people isArray QJsonValue val people toArray val isObject addPersonFromJson val toObject ret ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00234</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KAboutPerson&gt; KPluginMetaData::authors aboutPersonFromJSON rootObject QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00239</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KAboutPerson&gt; KPluginMetaData::translators aboutPersonFromJSON rootObject QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00244</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KAboutPerson&gt; KPluginMetaData::otherContributors aboutPersonFromJSON rootObject QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00249</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginMetaData::category rootObject QStringLiteral toString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00254</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginMetaData::description readTranslatedString rootObject QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00259</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginMetaData::iconName rootObject QStringLiteral toString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00264</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginMetaData::license rootObject QStringLiteral toString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00269</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginMetaData::name readTranslatedString rootObject QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00274</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginMetaData::copyrightText readTranslatedString rootObject QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00279</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginMetaData::extraInformation readTranslatedString rootObject QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00284</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginMetaData::pluginId QJsonObject root rootObject nameFromMetaData root constFind QStringLiteral nameFromMetaData root constEnd QString nameFromMetaData value toString isEmpty id m_fileName isEmpty QString QFileInfo m_fileName baseName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00301</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginMetaData::version rootObject QStringLiteral toString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00306</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginMetaData::website rootObject QStringLiteral toString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00311</field>
    <field name="keywords"></field>
    <field name="text">QStringList KPluginMetaData::dependencies readStringList rootObject QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00316</field>
    <field name="keywords"></field>
    <field name="text">QStringList KPluginMetaData::serviceTypes readStringList rootObject QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00321</field>
    <field name="keywords"></field>
    <field name="text">QStringList KPluginMetaData::mimeTypes readStringList rootObject QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00326</field>
    <field name="keywords"></field>
    <field name="text">QStringList KPluginMetaData::formFactors readStringList rootObject QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00331</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaData::isEnabledByDefault QJsonValue val rootObject QStringLiteral val isBool val toBool val isString val toString QLatin1String</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00342</field>
    <field name="keywords"></field>
    <field name="text">QString KPluginMetaData::value QString key QString defaultValue m_metaData value key toString defaultValue</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00347</field>
    <field name="keywords"></field>
    <field name="text">KPluginMetaData::operator== KPluginMetaData other m_fileName other m_fileName m_metaData other m_metaData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.cpp</field>
    <field name="url">kpluginmetadata_8cpp_source.html#l00352</field>
    <field name="keywords"></field>
    <field name="text">QObject KPluginMetaData::instantiate QPluginLoader m_fileName instance</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.h</field>
    <field name="url">kpluginmetadata_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KPluginLoader QPluginLoader QStringList KPluginMetaDataPrivate KAboutPerson QObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.h</field>
    <field name="url">kpluginmetadata_8h_source.html#l00095</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KPluginMetaData KPluginMetaData KPluginMetaData KPluginLoader loader KPluginMetaData QPluginLoader loader KPluginMetaData QString file KPluginMetaData QJsonObject metaData QString file KPluginMetaData QJsonObject metaData QString pluginFile QString metaDataFile KPluginMetaData KPluginMetaData KPluginMetaData operator= KPluginMetaData KPluginMetaData KPluginMetaData fromDesktopFile QString file QStringList serviceTypes QStringList isValid isHidden QString fileName QString metaDataFileName QJsonObject rawData QObject instantiate QString name QString description QString extraInformation QList&lt;KAboutPerson&gt; authors QList&lt;KAboutPerson&gt; translators QList&lt;KAboutPerson&gt; otherContributors QString category QString iconName QString license QString copyrightText QString pluginId QString version QString website QStringList dependencies QStringList serviceTypes QStringList mimeTypes QStringList formFactors isEnabledByDefault QString value QString key QString defaultValue QString QStringList readStringList QJsonObject jo QString key QJsonValue readTranslatedValue QJsonObject jo QString key QJsonValue defaultValue QJsonValue QString readTranslatedString QJsonObject jo QString key QString defaultValue QString operator== KPluginMetaData other</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginmetadata.h</field>
    <field name="url">kpluginmetadata_8h_source.html#l00383</field>
    <field name="keywords"></field>
    <field name="text">operator!= KPluginMetaData other other QJsonObject rootObject loadFromDesktopFile QString file QStringList serviceTypes QJsonObject m_metaData QString m_fileName QExplicitlySharedDataPointer&lt;KPluginMetaDataPrivate&gt; d uint qHash KPluginMetaData md uint seed qHash md pluginId seed</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">KProcess::KProcess QObject parent QProcess parent d_ptr new KProcessPrivate this setOutputChannelMode ForwardedChannels</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">KProcess::KProcess KProcessPrivate d QObject parent QProcess parent d_ptr d d_ptr q_ptr setOutputChannelMode ForwardedChannels</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00053</field>
    <field name="keywords"></field>
    <field name="text">KProcess::~KProcess d_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">KProcess::setOutputChannelMode OutputChannelMode mode QProcess::setProcessChannelMode static_cast&lt;ProcessChannelMode&gt; mode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00063</field>
    <field name="keywords"></field>
    <field name="text">KProcess::OutputChannelMode KProcess::outputChannelMode OutputChannelMode QProcess::processChannelMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00068</field>
    <field name="keywords"></field>
    <field name="text">KProcess::setNextOpenMode QIODevice::OpenMode mode Q_D KProcess d openMode mode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00077</field>
    <field name="keywords"></field>
    <field name="text">KProcess::clearEnvironment setEnvironment QStringList QStringLiteral DUMMYENV</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text">KProcess::setEnv QString name QString value overwrite QStringList env environment env isEmpty env systemEnvironment env removeAll QStringLiteral DUMMYENV QString fname name fname append QLatin1Char QStringList::Iterator it env begin it env end it startsWith fname overwrite it fname append value setEnvironment env env append fname append value setEnvironment env</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text">KProcess::unsetEnv QString name QStringList env environment env isEmpty env systemEnvironment env removeAll QStringLiteral DUMMYENV QString fname name fname append QLatin1Char QStringList::Iterator it env begin it env end it startsWith fname env erase it env isEmpty env append QStringLiteral DUMMYENV setEnvironment env</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text">KProcess::setProgram QString exe QStringList args Q_D KProcess d prog exe d args args setNativeArguments QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text">KProcess::setProgram QStringList argv Q_D KProcess Q_ASSERT argv isEmpty d args argv d prog d args takeFirst setNativeArguments QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00146</field>
    <field name="keywords"></field>
    <field name="text">KProcess KProcess::operator&lt;&lt; QString arg Q_D KProcess d prog isEmpty d prog arg d args arg</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00158</field>
    <field name="keywords"></field>
    <field name="text">KProcess KProcess::operator&lt;&lt; QStringList args Q_D KProcess d prog isEmpty setProgram args d args args</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00170</field>
    <field name="keywords"></field>
    <field name="text">KProcess::clearProgram Q_D KProcess d prog clear d args clear setNativeArguments QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00181</field>
    <field name="keywords"></field>
    <field name="text">KProcess::setShellCommand QString cmd Q_D KProcess KShell::Errors err d args KShell::splitArgs cmd KShell::AbortOnMeta KShell::TildeExpand err err KShell::NoError d args isEmpty d prog QStandardPaths::findExecutable d args d prog isEmpty d args removeFirst setNativeArguments QString d args clear d prog QFile::symLinkTarget QStringLiteral d prog isEmpty d prog QStandardPaths::findExecutable QStringLiteral d prog isEmpty d prog QStandardPaths::findExecutable QStringLiteral d prog isEmpty d prog QStandardPaths::findExecutable QStringLiteral d prog isEmpty d prog QStandardPaths::findExecutable QStringLiteral d prog isEmpty d prog QStringLiteral d prog QStringLiteral d args QStringLiteral cmd setEnv PERCENT_VARIABLE QStringLiteral WCHAR sysdir MAX_PATH UINT size GetSystemDirectoryW sysdir MAX_PATH d prog QString::fromUtf16 ushort sysdir size d prog QLatin1String setNativeArguments QStringLiteral cmd QLatin1Char d prog QStringLiteral setNativeArguments QStringLiteral cmd QLatin1Char</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00249</field>
    <field name="keywords"></field>
    <field name="text">QStringList KProcess::program Q_D KProcess QStringList argv d args argv prepend d prog argv</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00258</field>
    <field name="keywords"></field>
    <field name="text">KProcess::start Q_D KProcess QProcess::start d prog d args d openMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00265</field>
    <field name="keywords"></field>
    <field name="text">KProcess::execute msecs start waitForFinished msecs kill waitForFinished exitStatus QProcess::NormalExit exitCode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00277</field>
    <field name="keywords"></field>
    <field name="text">KProcess::execute QString exe QStringList args msecs KProcess p p setProgram exe args p execute msecs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00285</field>
    <field name="keywords"></field>
    <field name="text">KProcess::execute QStringList argv msecs KProcess p p setProgram argv p execute msecs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00292</field>
    <field name="keywords"></field>
    <field name="text">KProcess::startDetached Q_D KProcess qint64 pid QProcess::startDetached d prog d args workingDirectory pid pid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00304</field>
    <field name="keywords"></field>
    <field name="text">KProcess::startDetached QString exe QStringList args qint64 pid QProcess::startDetached exe args QString pid pid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00314</field>
    <field name="keywords"></field>
    <field name="text">KProcess::startDetached QStringList argv QStringList args argv QString prog args takeFirst startDetached prog args</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.cpp</field>
    <field name="url">kprocess_8cpp_source.html#l00321</field>
    <field name="keywords"></field>
    <field name="text">KProcess::pid QProcess::pid QProcess::pid QProcess::pid dwProcessId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.h</field>
    <field name="url">kprocess_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KProcessPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.h</field>
    <field name="url">kprocess_8h_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KProcess QProcess Q_OBJECT Q_DECLARE_PRIVATE KProcess</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.h</field>
    <field name="url">kprocess_8h_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">OutputChannelMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.h</field>
    <field name="url">kprocess_8h_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">SeparateChannels QProcess::SeparateChannels</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.h</field>
    <field name="url">kprocess_8h_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">MergedChannels QProcess::MergedChannels</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.h</field>
    <field name="url">kprocess_8h_source.html#l00061</field>
    <field name="keywords"></field>
    <field name="text">ForwardedChannels QProcess::ForwardedChannels</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.h</field>
    <field name="url">kprocess_8h_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">OnlyStdoutChannel QProcess::ForwardedErrorChannel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.h</field>
    <field name="url">kprocess_8h_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">OnlyStderrChannel QProcess::ForwardedOutputChannel KProcess QObject parent KProcess setOutputChannelMode OutputChannelMode mode OutputChannelMode outputChannelMode setNextOpenMode QIODevice::OpenMode mode setEnv QString name QString value overwrite unsetEnv QString name clearEnvironment setProgram QString exe QStringList args QStringList setProgram QStringList argv KProcess operator&lt;&lt; QString arg KProcess operator&lt;&lt; QStringList args clearProgram setShellCommand QString cmd QStringList program start execute msecs execute QString exe QStringList args QStringList msecs execute QStringList argv msecs startDetached startDetached QString exe QStringList args QStringList startDetached QStringList argv pid KProcess KProcessPrivate d QObject parent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kprocess.h</field>
    <field name="url">kprocess_8h_source.html#l00328</field>
    <field name="keywords"></field>
    <field name="text">KProcessPrivate d_ptr QProcess::setReadChannelMode QProcess::readChannelMode QProcess::setProcessChannelMode QProcess::processChannelMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandom.cpp</field>
    <field name="url">krandom_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandom.cpp</field>
    <field name="url">krandom_8cpp_source.html#l00039</field>
    <field name="keywords"></field>
    <field name="text">KRandom::random init init seed init QFile urandom QStringLiteral opened urandom open QIODevice::ReadOnly QIODevice::Unbuffered opened urandom read reinterpret_cast&lt;char *&gt; seed seed seed qsrand getpid seed qrand time qsrand seed qrand</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandom.cpp</field>
    <field name="url">krandom_8cpp_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">QString KRandom::randomString length length QString QString str str resize length i length r random r r r r r str i char r str</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandom.h</field>
    <field name="url">krandom_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandom.h</field>
    <field name="url">krandom_8h_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">KRandom KCOREADDONS_EXPORT random KCOREADDONS_EXPORT QString randomString length</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandomsequence.cpp</field>
    <field name="url">krandomsequence_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KRandomSequence::Private SHUFFLE_TABLE_SIZE draw lngSeed1 lngSeed2 lngShufflePos shuffleArray SHUFFLE_TABLE_SIZE KRandomSequence::KRandomSequence lngSeed1 d new Private setSeed lngSeed1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandomsequence.cpp</field>
    <field name="url">krandomsequence_8cpp_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">KRandomSequence::KRandomSequence lngSeed1 d new Private setSeed lngSeed1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandomsequence.cpp</field>
    <field name="url">krandomsequence_8cpp_source.html#l00053</field>
    <field name="keywords"></field>
    <field name="text">KRandomSequence::~KRandomSequence d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandomsequence.cpp</field>
    <field name="url">krandomsequence_8cpp_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">KRandomSequence::KRandomSequence KRandomSequence a d new Private d a d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandomsequence.cpp</field>
    <field name="url">krandomsequence_8cpp_source.html#l00063</field>
    <field name="keywords"></field>
    <field name="text">KRandomSequence KRandomSequence::operator= KRandomSequence a a d a d KRandomSequence::setSeed lngSeed1 setSeed static_cast&lt;int&gt; lngSeed1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandomsequence.cpp</field>
    <field name="url">krandomsequence_8cpp_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text">KRandomSequence::setSeed lngSeed1 lngSeed1 d lngSeed1 lngSeed1 d lngSeed1 KRandom::random d lngSeed1 lngSeed1 sMod1 sMod2 KRandomSequence::Private::draw sMM1 sMod1 sA1 sA2 sQ1 sQ2 sR1 sR2 sDiv sMM1 SHUFFLE_TABLE_SIZE j k lngSeed1 lngSeed2 lngSeed1 j SHUFFLE_TABLE_SIZE j j k lngSeed1 sQ1 lngSeed1 sA1 lngSeed1 k sQ1 k sR1 lngSeed1 lngSeed1 sMod1 j SHUFFLE_TABLE_SIZE shuffleArray j lngSeed1 lngShufflePos shuffleArray k lngSeed1 sQ1 lngSeed1 sA1 lngSeed1 k sQ1 k sR1 lngSeed1 lngSeed1 sMod1 k lngSeed2 sQ2 lngSeed2 sA2 lngSeed2 k sQ2 k sR2 lngSeed2 lngSeed2 sMod2 j lngShufflePos sDiv lngShufflePos shuffleArray j lngSeed2 shuffleArray j lngSeed1 lngShufflePos lngShufflePos sMM1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandomsequence.cpp</field>
    <field name="url">krandomsequence_8cpp_source.html#l00166</field>
    <field name="keywords"></field>
    <field name="text">KRandomSequence::modulate i d lngSeed2 i d lngSeed2 d lngShufflePos sMod2 d draw d lngSeed1 i d lngSeed1 d lngSeed1 sMod1 d draw</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandomsequence.cpp</field>
    <field name="url">krandomsequence_8cpp_source.html#l00181</field>
    <field name="keywords"></field>
    <field name="text">KRandomSequence::getDouble finalAmp double sMod1 epsilon E maxRand epsilon temp d draw temp finalAmp d lngShufflePos maxRand maxRand temp KRandomSequence::getLong max getInt static_cast&lt;int&gt; max</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandomsequence.cpp</field>
    <field name="url">krandomsequence_8cpp_source.html#l00204</field>
    <field name="keywords"></field>
    <field name="text">KRandomSequence::getInt max d draw max d lngShufflePos max</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandomsequence.cpp</field>
    <field name="url">krandomsequence_8cpp_source.html#l00212</field>
    <field name="keywords"></field>
    <field name="text">KRandomSequence::getBool d draw static_cast&lt;unsigned int&gt; d lngShufflePos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandomsequence.h</field>
    <field name="url">krandomsequence_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandomsequence.h</field>
    <field name="url">krandomsequence_8h_source.html#l00040</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KRandomSequence KRandomSequence intSeed KRandomSequence lngSeed KRandomSequence KRandomSequence KRandomSequence a KRandomSequence operator= KRandomSequence a setSeed intSeed setSeed lngSeed getDouble getInt max getLong max getBool</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">krandomsequence.h</field>
    <field name="url">krandomsequence_8h_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">randomize QList&lt;T&gt; list index list count index index swapIndex getInt index qSwap list index list swapIndex modulate i Private Private d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshareddatacache.cpp</field>
    <field name="url">kshareddatacache_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">uint MAX_PROBE_COUNT KSDCCorrupted KSDCCorrupted qCritical MurmurHashAligned key len seed m r data key h seed len m align quintptr data align len t d align t data t data t data t align data align len align sl align sr align len d data t t sr d sl h t h m h h r t d data len pack len align len align d pack d data d data d data h t sr d sl h m h h r data pack len pack len h data h m h h r data len len h data h data h data h m h h r h m h h h m h h h quint32 generateHash QByteArray buffer MurmurHashAligned buffer data buffer size __alignmentHack firstEntry T obj size offsetof __alignmentHack obj T alignTo start uint size ALIGNOF T quintptr mask size quintptr basePointer quintptr start basePointer basePointer mask mask T basePointer T offsetAs base qint32 offset ptr base alignTo&lt;const T&gt; ptr offset T offsetAs base qint32 offset ptr base alignTo&lt;T&gt; ptr offset intCeil a b Q_UNLIKELY b a b a KSDCCorrupted a b b countSetBits value count count value count value value count qint32 pageID IndexTableEntry uint fileNameHash uint totalItemSize uint useCount time_t addTime time_t lastUsedTime pageID firstPage PageTableEntry qint32 index SharedMemory PIXMAP_CACHE_VERSION MINIMUM_CACHE_SIZE QAtomicInt ready quint8 version SharedLock shmLock uint cacheSize uint cacheAvail QAtomicInt evictionPolicy QAtomicInt pageSize QAtomicInt cacheTimestamp equivalentPageSize itemSize itemSize log2OfSize itemSize log2OfSize log2OfSize qBound log2OfSize log2OfSize cachePageSize _pageSize pageSize load validSizeMask u Q_UNLIKELY countSetBits _pageSize _pageSize validSizeMask KSDCCorrupted _pageSize performInitialSetup uint _cacheSize uint _pageSize _cacheSize MINIMUM_CACHE_SIZE qCritical MINIMUM_CACHE_SIZE _pageSize qCritical shmLock type findBestSharedLock shmLock type LOCKTYPE_INVALID qCritical isProcessShared QSharedPointer&lt;KSDCLock&gt; tempLock createLockFromId shmLock type shmLock tempLock initialize isProcessShared qCritical isProcessShared qCWarning KCOREADDONS_DEBUG cacheSize _cacheSize pageSize _pageSize version PIXMAP_CACHE_VERSION cacheTimestamp clearInternalTables ready ref clearInternalTables cacheAvail pageTableSize PageTableEntry table pageTable uint i i pageTableSize i table i index IndexTableEntry indices indexTable uint i i indexTableSize i indices i firstPage indices i useCount indices i fileNameHash indices i totalItemSize indices i addTime indices i lastUsedTime IndexTableEntry indexTable offsetAs&lt;IndexTableEntry&gt; PageTableEntry pageTable IndexTableEntry base indexTable base indexTableSize alignTo&lt;PageTableEntry&gt; base cachePages PageTableEntry tableStart pageTable tableStart pageTableSize alignTo&lt;void&gt; tableStart cachePageSize page pageID at static_cast&lt;uint&gt; at pageTableSize pageStart cachePages pageStart at cachePageSize pageStart IndexTableEntry indexTable SharedMemory that SharedMemory IndexTableEntry that indexTable PageTableEntry pageTable SharedMemory that SharedMemory PageTableEntry that pageTable cachePages SharedMemory that SharedMemory that cachePages page pageID at SharedMemory that SharedMemory that page at uint pageTableSize cacheSize cachePageSize uint indexTableSize pageTableSize pageID findEmptyPages uint pagesNeeded Q_UNLIKELY pagesNeeded pageTableSize pageTableSize PageTableEntry table pageTable uint contiguousPagesFound pageID base pageID i i &lt; static_cast&lt;int&gt; pageTableSize i table i index contiguousPagesFound base i contiguousPagesFound contiguousPagesFound contiguousPagesFound pagesNeeded base pageTableSize lruCompare IndexTableEntry l IndexTableEntry r l firstPage r firstPage l firstPage r firstPage l lastUsedTime r lastUsedTime seldomUsedCompare IndexTableEntry l IndexTableEntry r l firstPage r firstPage l firstPage r firstPage l useCount r useCount ageCompare IndexTableEntry l IndexTableEntry r l firstPage r firstPage l firstPage r firstPage l addTime r addTime defragment cacheAvail cachePageSize cacheSize qCDebug KCOREADDONS_DEBUG pageID currentPage pageID idLimit pageID pageTableSize PageTableEntry pages pageTable Q_UNLIKELY pages idLimit KSDCCorrupted currentPage idLimit pages currentPage index currentPage pageID freeSpot currentPage currentPage idLimit currentPage idLimit pages currentPage index currentPage currentPage idLimit qint32 affectedIndex pages currentPage index Q_UNLIKELY affectedIndex affectedIndex idLimit indexTable affectedIndex firstPage currentPage KSDCCorrupted indexTable affectedIndex firstPage freeSpot currentPage idLimit pages currentPage index sourcePage page currentPage destinationPage page freeSpot Q_UNLIKELY sourcePage destinationPage sourcePage destinationPage KSDCCorrupted destinationPage sourcePage cachePageSize pages freeSpot index affectedIndex pages currentPage index currentPage freeSpot currentPage idLimit affectedIndex pages currentPage index indexTable pages currentPage index firstPage freeSpot affectedIndex pages currentPage index qint32 findNamedEntry QByteArray key uint keyHash generateHash key uint position keyHash indexTableSize uint probeNumber indexTable position fileNameHash keyHash probeNumber MAX_PROBE_COUNT position keyHash probeNumber probeNumber probeNumber indexTableSize probeNumber indexTable position fileNameHash keyHash pageID firstPage indexTable position firstPage firstPage static_cast&lt;uint&gt; firstPage pageTableSize resultPage page firstPage Q_UNLIKELY resultPage KSDCCorrupted utf8FileName resultPage qstrncmp utf8FileName key constData cachePageSize position deleteTable IndexTableEntry table table uint removeUsedPages uint numberNeeded numberNeeded qCritical KSDCCorrupted numberNeeded pageTableSize qCritical qCritical numberNeeded pageTableSize KSDCCorrupted qCDebug KCOREADDONS_DEBUG numberNeeded cacheAvail cacheAvail numberNeeded defragment uint result findEmptyPages numberNeeded result pageTableSize result qCritical QSharedPointer&lt;IndexTableEntry&gt; tablePtr IndexTableEntry indexTableSize deleteTable tablePtr qCritical clearInternalTables KSDCCorrupted IndexTableEntry table tablePtr data table indexTable IndexTableEntry indexTableSize uint i i indexTableSize i table i firstPage table i useCount pageID i bool compareFunction IndexTableEntry IndexTableEntry evictionPolicy load KSharedDataCache::EvictLeastOftenUsed KSharedDataCache::NoEvictionPreference compareFunction seldomUsedCompare KSharedDataCache::EvictLeastRecentlyUsed compareFunction lruCompare KSharedDataCache::EvictOldest compareFunction ageCompare qSort table table indexTableSize compareFunction uint i i indexTableSize numberNeeded cacheAvail curIndex table i firstPage curIndex static_cast&lt;uint&gt; curIndex indexTableSize qCritical curIndex indexTableSize KSDCCorrupted qCDebug KCOREADDONS_DEBUG indexTable curIndex totalItemSize removeEntry curIndex defragment pageID result pageTableSize i indexTableSize static_cast&lt;uint&gt; result findEmptyPages numberNeeded pageTableSize curIndex table i firstPage curIndex defragment findEmptyPages numberNeeded Q_UNLIKELY static_cast&lt;uint&gt; curIndex indexTableSize KSDCCorrupted removeEntry curIndex result uint totalSize uint cacheSize uint effectivePageSize uint numberPages intCeil cacheSize effectivePageSize uint indexTableSize numberPages IndexTableEntry indexTableStart offsetAs&lt;IndexTableEntry&gt; SharedMemory indexTableStart indexTableSize PageTableEntry pageTableStart PageTableEntry indexTableStart pageTableStart alignTo&lt;PageTableEntry&gt; pageTableStart pageTableStart numberPages cacheStart pageTableStart cacheStart numberPages effectivePageSize cacheStart alignTo&lt;char&gt; cacheStart ALIGNOF uint quintptr cacheStart uint fileNameHash QByteArray utf8FileName generateHash utf8FileName indexTableSize clear clearInternalTables removeEntry uint index KSharedDataCache::Private Private QString name defaultCacheSize expectedItemSize m_cacheName name shm m_lock m_mapSize m_defaultCacheSize defaultCacheSize m_expectedItemSize expectedItemSize m_expectedType LOCKTYPE_INVALID mapSharedMemory detachFromSharedMemory m_lock clear shm munmap shm m_mapSize qCritical shm strerror errno shm m_mapSize mapSharedMemory cacheSize qMax m_defaultCacheSize uint SharedMemory::MINIMUM_CACHE_SIZE pageSize SharedMemory::equivalentPageSize m_expectedItemSize cacheSize qMax pageSize cacheSize QString cacheDir QStandardPaths::writableLocation QStandardPaths::GenericCacheLocation QString cacheName cacheDir QLatin1String m_cacheName QLatin1String QFile file cacheName QFileInfo fileInfo file QDir mkpath fileInfo absolutePath uint size SharedMemory::totalSize cacheSize pageSize mapAddress MAP_FAILED size cacheSize qCritical file open QIODevice::ReadWrite file size size file resize size ensureFileAllocated file handle size mapAddress QT_MMAP NULL size PROT_READ PROT_WRITE MAP_SHARED file handle mapAddress MAP_FAILED SharedMemory mapped SharedMemory mapAddress mapped version SharedMemory::PIXMAP_CACHE_VERSION mapped version qCWarning KCOREADDONS_DEBUG cacheName m_mapSize size shm mapped recoverCorruptedCache mapped cacheSize cacheSize cacheSize mapped cacheSize actualPageSize mapped cachePageSize mapAddress size size SharedMemory::totalSize cacheSize actualPageSize mapAddress QT_MMAP NULL size PROT_READ PROT_WRITE MAP_SHARED file handle mapAddress MAP_FAILED qCWarning KCOREADDONS_DEBUG mapAddress QT_MMAP NULL size PROT_READ PROT_WRITE MAP_PRIVATE MAP_ANONYMOUS mapAddress MAP_FAILED qCritical cacheName cacheSize m_mapSize size shm SharedMemory mapAddress uint usecSleepTime shm ready load Q_UNLIKELY usecSleepTime qCritical file remove detachFromSharedMemory shm ready testAndSetAcquire shm performInitialSetup cacheSize pageSize qCritical file remove detachFromSharedMemory usleep usecSleepTime usecSleepTime m_expectedType shm shmLock type m_lock QSharedPointer&lt;KSDCLock&gt; createLockFromId m_expectedType shm shmLock isProcessSharingSupported m_lock initialize isProcessSharingSupported qCritical detachFromSharedMemory recoverCorruptedCache KSharedDataCache::deleteCache m_cacheName detachFromSharedMemory mapSharedMemory verifyProposedMemoryAccess base accessLength quintptr startOfAccess quintptr base quintptr startOfShm quintptr shm Q_UNLIKELY startOfAccess startOfShm KSDCCorrupted quintptr endOfShm startOfShm m_mapSize quintptr endOfAccess startOfAccess accessLength Q_UNLIKELY endOfShm startOfShm endOfAccess startOfAccess endOfAccess endOfShm KSDCCorrupted lock Q_LIKELY shm shm shmLock type m_expectedType m_lock lock KSDCCorrupted unlock m_lock unlock CacheLocker Private d cautiousLock lockCount d lock isLockedCacheSafe d recoverCorruptedCache d shm qCWarning KCOREADDONS_DEBUG d m_cacheName lockCount qCritical d m_cacheName d detachFromSharedMemory isLockedCacheSafe uint testSize SharedMemory::totalSize d shm cacheSize d shm cachePageSize Q_UNLIKELY d m_mapSize testSize Q_UNLIKELY d shm version SharedMemory::PIXMAP_CACHE_VERSION d shm evictionPolicy load NoEvictionPreference EvictLeastRecentlyUsed EvictLeastOftenUsed EvictOldest CacheLocker Private _d d const_cast Private _d Q_UNLIKELY d d shm cautiousLock d CacheLocker d d shm d unlock failed d d shm QString m_cacheName SharedMemory shm QSharedPointer&lt;KSDCLock&gt; m_lock uint m_mapSize uint m_defaultCacheSize uint m_expectedItemSize SharedLockId m_expectedType SharedMemory::removeEntry uint index index indexTableSize cacheAvail pageTableSize KSDCCorrupted PageTableEntry pageTableEntries pageTable IndexTableEntry entriesIndex indexTable pageID firstPage entriesIndex index firstPage firstPage static_cast&lt;quint32&gt; firstPage pageTableSize qCDebug KCOREADDONS_DEBUG KSDCCorrupted index static_cast&lt;uint&gt; pageTableEntries firstPage index qCritical index KSDCCorrupted uint entriesToRemove intCeil entriesIndex index totalItemSize cachePageSize uint savedCacheSize cacheAvail uint i firstPage i pageTableSize uint pageTableEntries i index index i pageTableEntries i index cacheAvail cacheAvail savedCacheSize entriesToRemove qCritical entriesToRemove index cacheAvail savedCacheSize KSDCCorrupted startOfData page firstPage startOfData QByteArray str startOfData str prepend str prepend QByteArray::number index str prepend startOfData str constData str size entriesIndex index fileNameHash entriesIndex index totalItemSize entriesIndex index useCount entriesIndex index lastUsedTime entriesIndex index addTime entriesIndex index firstPage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshareddatacache.cpp</field>
    <field name="url">kshareddatacache_8cpp_source.html#l01378</field>
    <field name="keywords"></field>
    <field name="text">KSharedDataCache::KSharedDataCache QString cacheName defaultCacheSize expectedItemSize d d Private cacheName defaultCacheSize expectedItemSize KSDCCorrupted KSharedDataCache::deleteCache cacheName d Private cacheName defaultCacheSize expectedItemSize KSDCCorrupted qCritical d KSharedDataCache::~KSharedDataCache d d shm d shm d m_mapSize MS_INVALIDATE MS_ASYNC d shm d m_mapSize d shm d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshareddatacache.cpp</field>
    <field name="url">kshareddatacache_8cpp_source.html#l01422</field>
    <field name="keywords"></field>
    <field name="text">KSharedDataCache::insert QString key QByteArray data Private::CacheLocker lock d lock failed QByteArray encodedKey key toUtf8 uint keyHash generateHash encodedKey uint position keyHash d shm indexTableSize IndexTableEntry indices d shm indexTable startCullPoint l mustCullPoint l loadFactor l d shm cacheAvail d shm cachePageSize d shm cacheSize cullCollisions Q_UNLIKELY loadFactor mustCullPoint cullCollisions loadFactor startCullPoint tripWireValue RAND_MAX loadFactor startCullPoint mustCullPoint startCullPoint KRandom::random tripWireValue cullCollisions uint probeNumber indices position useCount probeNumber MAX_PROBE_COUNT Q_UNLIKELY indices position fileNameHash keyHash cullCollisions time indices position lastUsedTime indices position useCount indices position useCount qCDebug KCOREADDONS_DEBUG d shm removeEntry position position keyHash probeNumber probeNumber probeNumber d shm indexTableSize probeNumber indices position useCount indices position firstPage d shm removeEntry position uint fileNameLength encodedKey length uint requiredSize fileNameLength data size uint pagesNeeded intCeil requiredSize d shm cachePageSize uint firstPage pagesNeeded d shm pageTableSize qCWarning KCOREADDONS_DEBUG key pagesNeeded d shm cacheAvail firstPage d shm findEmptyPages pagesNeeded d shm pageTableSize uint freePagesDesired qMax u pagesNeeded d shm cacheAvail freePagesDesired d shm defragment firstPage d shm findEmptyPages pagesNeeded d shm removeUsedPages qMin freePagesDesired d shm pageTableSize d shm cacheAvail firstPage d shm findEmptyPages pagesNeeded firstPage d shm pageTableSize d shm cacheAvail pagesNeeded qCritical key PageTableEntry table d shm pageTable uint i i pagesNeeded i table firstPage i index position indices position fileNameHash keyHash indices position totalItemSize requiredSize indices position useCount indices position addTime indices position lastUsedTime indices position addTime indices position firstPage firstPage d shm cacheAvail pagesNeeded dataPage d shm page firstPage Q_UNLIKELY dataPage KSDCCorrupted d verifyProposedMemoryAccess dataPage requiredSize uchar startOfPageData uchar dataPage startOfPageData encodedKey constData fileNameLength startOfPageData fileNameLength data constData data size KSDCCorrupted d recoverCorruptedCache</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshareddatacache.cpp</field>
    <field name="url">kshareddatacache_8cpp_source.html#l01575</field>
    <field name="keywords"></field>
    <field name="text">KSharedDataCache::find QString key QByteArray destination Private::CacheLocker lock d lock failed QByteArray encodedKey key toUtf8 qint32 entry d shm findNamedEntry encodedKey entry IndexTableEntry header d shm indexTable entry resultPage d shm page header firstPage Q_UNLIKELY resultPage KSDCCorrupted d verifyProposedMemoryAccess resultPage header totalItemSize header useCount header lastUsedTime cacheData resultPage cacheData encodedKey size cacheData destination destination QByteArray cacheData header totalItemSize encodedKey size KSDCCorrupted d recoverCorruptedCache</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshareddatacache.cpp</field>
    <field name="url">kshareddatacache_8cpp_source.html#l01618</field>
    <field name="keywords"></field>
    <field name="text">KSharedDataCache::clear Private::CacheLocker lock d lock failed d shm clear KSDCCorrupted d recoverCorruptedCache</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshareddatacache.cpp</field>
    <field name="url">kshareddatacache_8cpp_source.html#l01631</field>
    <field name="keywords"></field>
    <field name="text">KSharedDataCache::contains QString key Private::CacheLocker lock d lock failed d shm findNamedEntry key toUtf8 KSDCCorrupted d recoverCorruptedCache</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshareddatacache.cpp</field>
    <field name="url">kshareddatacache_8cpp_source.html#l01646</field>
    <field name="keywords"></field>
    <field name="text">KSharedDataCache::deleteCache QString cacheName QString cachePath QStandardPaths::writableLocation QStandardPaths::GenericCacheLocation QLatin1String cacheName QLatin1String qCDebug KCOREADDONS_DEBUG cachePath QFile::remove cachePath</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshareddatacache.cpp</field>
    <field name="url">kshareddatacache_8cpp_source.html#l01657</field>
    <field name="keywords"></field>
    <field name="text">KSharedDataCache::totalSize Private::CacheLocker lock d lock failed u d shm cacheSize KSDCCorrupted d recoverCorruptedCache u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshareddatacache.cpp</field>
    <field name="url">kshareddatacache_8cpp_source.html#l01672</field>
    <field name="keywords"></field>
    <field name="text">KSharedDataCache::freeSize Private::CacheLocker lock d lock failed u d shm cacheAvail d shm cachePageSize KSDCCorrupted d recoverCorruptedCache u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshareddatacache.cpp</field>
    <field name="url">kshareddatacache_8cpp_source.html#l01687</field>
    <field name="keywords"></field>
    <field name="text">KSharedDataCache::EvictionPolicy KSharedDataCache::evictionPolicy d d shm EvictionPolicy d shm evictionPolicy fetchAndAddAcquire NoEvictionPreference</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshareddatacache.cpp</field>
    <field name="url">kshareddatacache_8cpp_source.html#l01696</field>
    <field name="keywords"></field>
    <field name="text">KSharedDataCache::setEvictionPolicy EvictionPolicy newPolicy d d shm d shm evictionPolicy fetchAndStoreRelease static_cast&lt;int&gt; newPolicy</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshareddatacache.cpp</field>
    <field name="url">kshareddatacache_8cpp_source.html#l01703</field>
    <field name="keywords"></field>
    <field name="text">KSharedDataCache::timestamp d d shm d shm cacheTimestamp fetchAndAddAcquire</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshareddatacache.cpp</field>
    <field name="url">kshareddatacache_8cpp_source.html#l01712</field>
    <field name="keywords"></field>
    <field name="text">KSharedDataCache::setTimestamp newTimestamp d d shm d shm cacheTimestamp fetchAndStoreRelease static_cast&lt;int&gt; newTimestamp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshareddatacache.h</field>
    <field name="url">kshareddatacache_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QString QByteArray</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshareddatacache.h</field>
    <field name="url">kshareddatacache_8h_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KSharedDataCache KSharedDataCache QString cacheName defaultCacheSize expectedItemSize KSharedDataCache EvictionPolicy NoEvictionPreference EvictLeastRecentlyUsed EvictLeastOftenUsed EvictOldest EvictionPolicy evictionPolicy setEvictionPolicy EvictionPolicy newPolicy insert QString key QByteArray data find QString key QByteArray destination clear deleteCache QString cacheName contains QString key totalSize freeSize timestamp setTimestamp newTimestamp Private Private d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshareddatacache_win.cpp</field>
    <field name="url">kshareddatacache__win_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KSharedDataCache::Private KSharedDataCache::EvictionPolicy evictionPolicy QCache&lt;QString, QByteArray&gt; cache KSharedDataCache::KSharedDataCache QString cacheName defaultCacheSize expectedItemSize d new Private d cache setMaxCost defaultCacheSize Q_UNUSED cacheName Q_UNUSED expectedItemSize KSharedDataCache::~KSharedDataCache d KSharedDataCache::EvictionPolicy KSharedDataCache::evictionPolicy d evictionPolicy KSharedDataCache::setEvictionPolicy KSharedDataCache::EvictionPolicy newPolicy d evictionPolicy newPolicy KSharedDataCache::insert QString key QByteArray data d cache insert key QByteArray data KSharedDataCache::find QString key QByteArray destination QByteArray value d cache object key value destination destination value KSharedDataCache::clear d cache clear KSharedDataCache::deleteCache QString cacheName Q_UNUSED cacheName KSharedDataCache::contains QString key d cache contains key KSharedDataCache::totalSize d cache maxCost KSharedDataCache::freeSize d cache totalCost d cache maxCost d cache maxCost d cache totalCost KSharedDataCache::timestamp KSharedDataCache::setTimestamp newTimestamp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshell.cpp</field>
    <field name="url">kshell_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QString KShell::homeDir QString user user isEmpty QDir::homePath KUser user homeDir</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshell.cpp</field>
    <field name="url">kshell_8cpp_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">QString KShell::joinArgs QStringList args QString ret QStringList::ConstIterator it args begin it args end it ret isEmpty ret append QLatin1Char ret append quoteArg it ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshell.cpp</field>
    <field name="url">kshell_8cpp_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">QString KShell::tildeExpand QString fname fname isEmpty fname QLatin1Char pos fname indexOf QLatin1Char pos homeDir fname mid QString ret homeDir fname mid pos ret isNull ret fname midRef pos ret fname length fname QLatin1Char ESCAPE fname QLatin1Char fname mid fname</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshell.h</field>
    <field name="url">kshell_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QStringList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshell.h</field>
    <field name="url">kshell_8h_source.html#l00028</field>
    <field name="keywords"></field>
    <field name="text">QString KShell</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshell.h</field>
    <field name="url">kshell_8h_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">Option NoOptions</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshell.h</field>
    <field name="url">kshell_8h_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">TildeExpand</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshell.h</field>
    <field name="url">kshell_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">AbortOnMeta Q_DECLARE_FLAGS Options Option</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshell.h</field>
    <field name="url">kshell_8h_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">enum Errors</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshell.h</field>
    <field name="url">kshell_8h_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text">NoError</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshell.h</field>
    <field name="url">kshell_8h_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text">BadQuoting</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshell.h</field>
    <field name="url">kshell_8h_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text">FoundMeta KCOREADDONS_EXPORT QStringList splitArgs QString cmd Options flags NoOptions Errors err KCOREADDONS_EXPORT QString joinArgs QStringList args KCOREADDONS_EXPORT QString quoteArg QString arg KCOREADDONS_EXPORT QString tildeExpand QString path Q_DECLARE_OPERATORS_FOR_FLAGS KShell::Options</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshell_unix.cpp</field>
    <field name="url">kshell__unix_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">fromHex QChar cUnicode c cUnicode toLatin1 c c c c c c c c c isQuoteMeta QChar cUnicode uchar iqm c iqm iqm c c c cUnicode toLatin1 c c c c isMeta QChar cUnicode uchar iqm uint c cUnicode unicode c iqm iqm c c</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshell_unix.cpp</field>
    <field name="url">kshell__unix_8cpp_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">QStringList KShell::splitArgs QString args Options flags Errors err QStringList ret firstword flags AbortOnMeta pos QChar c pos args length okret c args unicode pos c QLatin1Char QString cret flags TildeExpand c QLatin1Char opos pos pos pos args length c args unicode pos c QLatin1Char c QLatin1Char isQuoteMeta c pos opos c QLatin1Char notilde flags AbortOnMeta isMeta c metaerr QString ccret homeDir args mid opos pos opos ccret isEmpty pos opos c QLatin1Char notilde pos args length ret ccret okret pos c QLatin1Char ret ccret firstword cret ccret firstword c QLatin1Char c QLatin1Char c QLatin1Char c QLatin1Char c QLatin1Char pos2 pos QChar cc pos2 args length ret args mid pos okret cc args unicode pos2 cc QLatin1Char cc QLatin1Char cc QLatin1Char cc QLatin1Char cc QLatin1Char cc QLatin1Char cc QLatin1Char cc QLatin1Char metaerr notilde c QLatin1Char spos pos pos args length quoteerr c args unicode pos c QLatin1Char cret args midRef spos pos spos c QLatin1Char pos args length quoteerr c args unicode pos c QLatin1Char c QLatin1Char pos args length quoteerr c args unicode pos c QLatin1Char c QLatin1Char flags AbortOnMeta c QLatin1Char c QLatin1Char cret QLatin1Char flags AbortOnMeta c QLatin1Char c QLatin1Char metaerr cret c c QLatin1Char pos args length args unicode pos QLatin1Char pos pos args length quoteerr c args unicode pos c QLatin1Char c QLatin1Char pos args length quoteerr c args unicode pos c toLatin1 cret QLatin1Char cret QLatin1Char cret QLatin1Char cret QLatin1Char cret QLatin1Char cret QLatin1Char cret QLatin1Char cret QLatin1Char cret QLatin1Char pos args length quoteerr cret args unicode pos toLatin1 pos args length quoteerr hv fromHex args unicode pos hv quoteerr pos args length hhv fromHex args unicode pos hhv hv hv hhv pos cret QChar hv c toLatin1 c toLatin1 cAscii c toLatin1 hv cAscii i i i pos args length c args unicode pos c toLatin1 c toLatin1 hv hv c toLatin1 pos cret QChar hv cret QLatin1Char cret c cret c c QLatin1Char pos args length quoteerr c args unicode pos flags AbortOnMeta isMeta c metaerr cret c pos args length c args unicode pos c QLatin1Char ret cret firstword okret err err NoError ret quoteerr err err BadQuoting QStringList metaerr err err FoundMeta QStringList isSpecial QChar cUnicode uchar iqm uint c cUnicode unicode c iqm iqm c c</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshell_unix.cpp</field>
    <field name="url">kshell__unix_8cpp_source.html#l00310</field>
    <field name="keywords"></field>
    <field name="text">QString KShell::quoteArg QString arg arg length QString::fromLatin1 i i arg length i isSpecial arg unicode i QChar q QLatin1Char QString arg replace q QLatin1String prepend q append q arg</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kshell_win.cpp</field>
    <field name="url">kshell__win_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">isMetaChar ushort c uchar iqm c iqm iqm c c isSpecialChar ushort c uchar iqm c iqm iqm c c isWhiteSpace ushort c c c QStringList KShell::splitArgs QString _args Options flags Errors err QString args _args QStringList ret QLatin1Char bs dq flags AbortOnMeta args remove PERCENT_ESCAPE args indexOf QLatin1Char err err FoundMeta QStringList args _args args replace PERCENT_ESCAPE QLatin1String args isEmpty args unicode args remove p p args length p ushort c args p unicode c args remove p c p args length args p unicode isMetaChar c err err FoundMeta QStringList err err NoError p length args length forever p length isWhiteSpace args p unicode p p length ret QString arg inquote forever copy bslashes p length args p bs p bslashes p length args p dq bslashes inquote p length args p dq p copy inquote inquote copy inquote inquote bslashes bslashes arg append bs p length inquote isWhiteSpace args p unicode ret append arg inquote err err BadQuoting QStringList copy arg append args p p QString KShell::quoteArgInternal QString arg _inquote QLatin1Char bs dq QString ret inquote _inquote bslashes p p arg length p arg p bs bslashes arg p dq inquote ret append dq inquote bslashes bslashes ret append QLatin1String ret append QLatin1String inquote ret append dq inquote bslashes bslashes ret append bs ret append arg p ret replace QLatin1Char PERCENT_ESCAPE bslashes inquote _inquote ret append dq bslashes bslashes ret append QLatin1String ret append dq inquote _inquote ret append dq inquote _inquote ret append dq ret QString KShell::quoteArg QString arg arg isEmpty QString::fromLatin1 arg endsWith QLatin1Char quoteArgInternal arg x arg length x x isSpecialChar arg x unicode quoteArgInternal arg QString ret arg ret replace QRegExp QLatin1String QLatin1String ret replace QLatin1Char PERCENT_ESCAPE ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstringhandler.cpp</field>
    <field name="url">kstringhandler_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstringhandler.cpp</field>
    <field name="url">kstringhandler_8cpp_source.html#l00033</field>
    <field name="keywords"></field>
    <field name="text">QString KStringHandler::capwords QString text text isEmpty text QString strippedText text trimmed QString space QString QLatin1Char QStringList words capwords strippedText split space QString result text result replace strippedText words join space result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstringhandler.cpp</field>
    <field name="url">kstringhandler_8cpp_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">QStringList KStringHandler::capwords QStringList list QStringList tmp list QStringList::Iterator it tmp begin it tmp end it it toUpper midRef tmp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstringhandler.cpp</field>
    <field name="url">kstringhandler_8cpp_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">QString KStringHandler::lsqueeze QString str maxlen str length maxlen part maxlen QStringLiteral str rightRef part str</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstringhandler.cpp</field>
    <field name="url">kstringhandler_8cpp_source.html#l00067</field>
    <field name="keywords"></field>
    <field name="text">QString KStringHandler::csqueeze QString str maxlen str length maxlen maxlen part maxlen str leftRef part QStringLiteral str rightRef part str</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstringhandler.cpp</field>
    <field name="url">kstringhandler_8cpp_source.html#l00077</field>
    <field name="keywords"></field>
    <field name="text">QString KStringHandler::rsqueeze QString str maxlen str length maxlen part maxlen str leftRef part QStringLiteral str</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstringhandler.cpp</field>
    <field name="url">kstringhandler_8cpp_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">QStringList KStringHandler::perlSplit QString sep QString s max ignoreMax max QStringList l searchStart tokenStart s indexOf sep searchStart tokenStart ignoreMax l count max s midRef searchStart tokenStart searchStart isEmpty l s mid searchStart tokenStart searchStart searchStart tokenStart sep length tokenStart s indexOf sep searchStart s midRef searchStart s length searchStart isEmpty l s mid searchStart s length searchStart l</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstringhandler.cpp</field>
    <field name="url">kstringhandler_8cpp_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text">QStringList KStringHandler::perlSplit QChar sep QString s max ignoreMax max QStringList l searchStart tokenStart s indexOf sep searchStart tokenStart ignoreMax l count max s midRef searchStart tokenStart searchStart isEmpty l s mid searchStart tokenStart searchStart searchStart tokenStart tokenStart s indexOf sep searchStart s midRef searchStart s length searchStart isEmpty l s mid searchStart s length searchStart l</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstringhandler.cpp</field>
    <field name="url">kstringhandler_8cpp_source.html#l00139</field>
    <field name="keywords"></field>
    <field name="text">QStringList KStringHandler::perlSplit QRegExp sep QString s max ignoreMax max QStringList l searchStart tokenStart sep indexIn s searchStart len sep matchedLength tokenStart ignoreMax l count max s midRef searchStart tokenStart searchStart isEmpty l s mid searchStart tokenStart searchStart searchStart tokenStart len tokenStart sep indexIn s searchStart len sep matchedLength s midRef searchStart s length searchStart isEmpty l s mid searchStart s length searchStart l</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstringhandler.cpp</field>
    <field name="url">kstringhandler_8cpp_source.html#l00166</field>
    <field name="keywords"></field>
    <field name="text">QString KStringHandler::tagUrls QString text QRegExp urlEx QStringLiteral QString richText text urlPos urlLen urlPos urlEx indexIn richText urlPos urlLen urlEx matchedLength QString href richText mid urlPos urlLen urlPos richText urlPos isLetterOrNumber urlPos QString anchor QStringLiteral href QStringLiteral href QStringLiteral richText replace urlPos urlLen anchor urlPos anchor length richText</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstringhandler.cpp</field>
    <field name="url">kstringhandler_8cpp_source.html#l00189</field>
    <field name="keywords"></field>
    <field name="text">QString KStringHandler::obscure QString str QString result QChar unicode str unicode i i str length i result unicode i unicode unicode i QChar x1001F unicode i unicode result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstringhandler.cpp</field>
    <field name="url">kstringhandler_8cpp_source.html#l00202</field>
    <field name="keywords"></field>
    <field name="text">KStringHandler::isUtf8 buf i n c gotone buf text_chars F F F F F F F T T T T F T T F F F F F F F F F F F F F T F F F F T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T F X X X X X T X X X X X X X X X X X X X X X X X X X X X X X X X X I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I I i c buf i i c x80 text_chars c T c x40 following c x20 following c x10 following c x08 following c x04 following c x02 following n n following n i c buf i done c x80 c gotone done gotone</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstringhandler.cpp</field>
    <field name="url">kstringhandler_8cpp_source.html#l00292</field>
    <field name="keywords"></field>
    <field name="text">QString KStringHandler::from8Bit str str QString str QLatin1String emptyString emptyString KStringHandler::isUtf8 str QString::fromUtf8 str QString::fromLocal8Bit str</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstringhandler.cpp</field>
    <field name="url">kstringhandler_8cpp_source.html#l00306</field>
    <field name="keywords"></field>
    <field name="text">QString KStringHandler::preProcessWrap QString text QChar zwsp x200b QString result result reserve text length i i text length i QChar c text i openingParens c QLatin1Char c QLatin1Char c QLatin1Char singleQuote c QLatin1Char closingParens c QLatin1Char c QLatin1Char c QLatin1Char breakAfter closingParens c isPunct c isSymbol nextIsSpace i text length text i isSpace prevIsSpace i text i isSpace result result length zwsp openingParens prevIsSpace result zwsp singleQuote prevIsSpace result QChar x2060 result c breakAfter openingParens nextIsSpace singleQuote result zwsp result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstringhandler.h</field>
    <field name="url">kstringhandler_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QChar QRegExp QString QStringList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstringhandler.h</field>
    <field name="url">kstringhandler_8h_source.html#l00059</field>
    <field name="keywords"></field>
    <field name="text">KStringHandler KCOREADDONS_EXPORT QString capwords QString text KCOREADDONS_EXPORT QStringList capwords QStringList list KCOREADDONS_EXPORT QString lsqueeze QString str maxlen KCOREADDONS_EXPORT QString csqueeze QString str maxlen KCOREADDONS_EXPORT QString rsqueeze QString str maxlen KCOREADDONS_EXPORT QStringList perlSplit QString sep QString s max KCOREADDONS_EXPORT QStringList perlSplit QChar sep QString s max KCOREADDONS_EXPORT QStringList perlSplit QRegExp sep QString s max KCOREADDONS_EXPORT QString tagUrls QString text KCOREADDONS_EXPORT QString obscure QString str KCOREADDONS_EXPORT isUtf8 str KCOREADDONS_EXPORT QString from8Bit str KCOREADDONS_EXPORT QString preProcessWrap QString text</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktexttohtml.cpp</field>
    <field name="url">ktexttohtml_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KTextToHTMLEmoticonsInterface s_emoticonsInterface loadEmoticonsPlugin triedLoadPlugin triedLoadPlugin triedLoadPlugin qApp metaObject indexOfProperty QPluginLoader lib QStringLiteral QObject rootObj lib instance rootObj s_emoticonsInterface rootObj property KTEXTTOHTMLEMOTICONS_PROPERTY value KTextToHTMLEmoticonsInterface s_emoticonsInterface s_emoticonsInterface KTextToHTMLEmoticonsDummy KTextToHTMLHelper::KTextToHTMLHelper QString plainText pos maxUrlLen maxAddressLen mText plainText mMaxUrlLen maxUrlLen mMaxAddressLen maxAddressLen mPos pos KTextToHTMLEmoticonsInterface KTextToHTMLHelper::emoticonsInterface s_emoticonsInterface loadEmoticonsPlugin s_emoticonsInterface QString KTextToHTMLHelper::getEmailAddress QString address mText mPos QLatin1Char QString allowedSpecialChars QStringLiteral start mPos start mText start unicode mText start isLetterOrNumber mText start QLatin1Char allowedSpecialChars indexOf mText start mText start QLatin1Char QString start start start mPos mText start isLetterOrNumber start start mPos QString dotPos INT_MAX end mPos end mText length mText end isLetterOrNumber mText end QLatin1Char mText end QLatin1Char mText end QLatin1Char mText end QLatin1Char QString mText end QLatin1Char dotPos qMin dotPos end end end mPos mText end isLetterOrNumber end end mPos QString dotPos end QString end start mMaxAddressLen QString address mText mid start end start mPos end address KTextToHTMLHelper::atUrl QString allowedSpecialChars QStringLiteral mPos mText mPos isLetterOrNumber allowedSpecialChars indexOf mText mPos QChar ch mText mPos ch QLatin1Char mText mid mPos QLatin1String mText mid mPos QLatin1String ch QLatin1Char mText mid mPos QLatin1String ch QLatin1Char mText mid mPos QLatin1String mText mid mPos QLatin1String mText mid mPos QLatin1String ch QLatin1Char mText mid mPos QLatin1String mText mid mPos QLatin1String ch QLatin1Char mText mid mPos QLatin1String ch QLatin1Char mText mid mPos QLatin1String ch QLatin1Char mText mid mPos QLatin1String mText mid mPos QLatin1String ch QLatin1Char mText mid mPos QLatin1String KTextToHTMLHelper::isEmptyUrl QString url url isEmpty url QLatin1String url QLatin1String url QLatin1String url QLatin1String url QLatin1String url QLatin1String url QLatin1String url QLatin1String url QLatin1String url QLatin1String url QLatin1String url QLatin1String url QLatin1String QString KTextToHTMLHelper::getUrl QString url atUrl QChar beforeUrl afterUrl mPos beforeUrl mText mPos beforeUrl QLatin1Char afterUrl QLatin1Char beforeUrl QLatin1Char afterUrl QLatin1Char beforeUrl QLatin1Char afterUrl QLatin1Char beforeUrl QLatin1Char afterUrl QLatin1Char url reserve mMaxUrlLen start mPos mPos mText length mText mPos isPrint mText mPos isSpace afterUrl isNull mText mPos isSpace afterUrl isNull mText mPos afterUrl mText mPos isSpace url append mText mPos url length mMaxUrlLen mPos isEmptyUrl url url length mMaxUrlLen mPos start url clear mPos QList&lt;QChar&gt; wordBoundaries wordBoundaries QLatin1Char QLatin1Char QLatin1Char QLatin1Char QLatin1Char QLatin1Char QLatin1Char url length wordBoundaries contains url at url length url chop mPos url length url QString KTextToHTMLHelper::highlightedText mPos mText mPos isSpace QString QChar ch mText mPos ch QLatin1Char ch QLatin1Char ch QLatin1Char ch QLatin1Char QString QRegExp re QRegExp QStringLiteral arg ch arg ch re setMinimal re indexIn mText mPos mPos length re matchedLength mPos length mText length mText mPos length isSpace QString mPos length ch toLatin1 QLatin1String re cap QLatin1String QLatin1String re cap QLatin1String QLatin1String re cap QLatin1String QLatin1String re cap QLatin1String QString QString KTextToHTMLHelper::pngToDataUrl QString iconPath iconPath isEmpty QString QFile pngFile iconPath pngFile open QIODevice::ReadOnly QIODevice::Unbuffered QString QByteArray ba pngFile readAll pngFile close QString QStringLiteral arg QLatin1String ba toBase64 constData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktexttohtml.cpp</field>
    <field name="url">ktexttohtml_8cpp_source.html#l00328</field>
    <field name="keywords"></field>
    <field name="text">QString KTextToHTML::convertToHtml QString plainText KTextToHTML::Options flags maxUrlLen maxAddressLen KTextToHTMLHelper helper plainText maxUrlLen maxAddressLen QString str QString result static_cast&lt;QChar *&gt; Q_NULLPTR helper mText length QChar ch x startOfLine helper mPos x helper mPos helper mText length helper mPos x ch helper mText helper mPos flags PreserveSpaces ch QLatin1Char helper mPos helper mText length helper mText helper mPos QLatin1Char endOfLine helper mText helper mPos QLatin1Char startOfLine endOfLine result QLatin1Char result QLatin1String helper mPos helper mText length helper mText helper mPos QLatin1Char result QLatin1String helper mPos x helper mPos x result QLatin1String startOfLine startOfLine ch QLatin1Char result QLatin1String x x x startOfLine ch QLatin1Char result QLatin1String startOfLine x startOfLine ch QLatin1Char result QLatin1String ch QLatin1Char result QLatin1String ch QLatin1Char result QLatin1String ch QLatin1Char result QLatin1String start helper mPos flags IgnoreUrls str helper getUrl str isEmpty QString hyperlink str left QLatin1String hyperlink QLatin1String str str left QLatin1String hyperlink QLatin1String str hyperlink str result QLatin1String hyperlink QLatin1String str toHtmlEscaped QLatin1String x helper mPos start str helper getEmailAddress str isEmpty len str indexOf QLatin1Char QString localPart str left len result truncate result length len localPart count QLatin1Char x len result QLatin1String str QLatin1String str QLatin1String x str length flags HighlightText str helper highlightedText str isEmpty result str x helper mPos start result ch flags ReplaceSmileys QStringList exclude exclude QStringLiteral QStringLiteral QStringLiteral QStringLiteral QStringLiteral QStringLiteral QStringLiteral QStringLiteral exclude QStringLiteral QStringLiteral QStringLiteral QStringLiteral QStringLiteral QStringLiteral QStringLiteral QStringLiteral exclude QStringLiteral QStringLiteral QStringLiteral QStringLiteral QStringLiteral QStringLiteral QStringLiteral QStringLiteral exclude QStringLiteral QStringLiteral QStringLiteral QStringLiteral exclude QStringLiteral QStringLiteral QStringLiteral QStringLiteral QStringLiteral QStringLiteral QStringLiteral QStringLiteral QStringLiteral result helper emoticonsInterface parseEmoticons result exclude result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktexttohtml.h</field>
    <field name="url">ktexttohtml_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktexttohtml.h</field>
    <field name="url">ktexttohtml_8h_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">KTextToHTML</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktexttohtml.h</field>
    <field name="url">ktexttohtml_8h_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">Option</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktexttohtml.h</field>
    <field name="url">ktexttohtml_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">PreserveSpaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktexttohtml.h</field>
    <field name="url">ktexttohtml_8h_source.html#l00052</field>
    <field name="keywords"></field>
    <field name="text">ReplaceSmileys</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktexttohtml.h</field>
    <field name="url">ktexttohtml_8h_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">IgnoreUrls</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktexttohtml.h</field>
    <field name="url">ktexttohtml_8h_source.html#l00063</field>
    <field name="keywords"></field>
    <field name="text">HighlightText Q_DECLARE_FLAGS Options Option KCOREADDONS_EXPORT QString convertToHtml QString plainText KTextToHTML::Options options maxUrlLen maxAddressLen Q_DECLARE_OPERATORS_FOR_FLAGS KTextToHTML::Options</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktexttohtmlemoticonsinterface.h</field>
    <field name="url">ktexttohtmlemoticonsinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ktexttohtmlemoticonsinterface.h</field>
    <field name="url">ktexttohtmlemoticonsinterface_8h_source.html#l00029</field>
    <field name="keywords"></field>
    <field name="text">KTextToHTMLEmoticonsInterface KTextToHTMLEmoticonsInterface KTextToHTMLEmoticonsInterface QString parseEmoticons QString text strictParse QStringList exclude QStringList Q_DECLARE_METATYPE KTextToHTMLEmoticonsInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kurlmimedata.cpp</field>
    <field name="url">kurlmimedata_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">s_kdeUriListMime QByteArray uriListData QList&lt;QUrl&gt; urls QByteArray result i i urls size i result urls at i toEncoded result result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kurlmimedata.cpp</field>
    <field name="url">kurlmimedata_8cpp_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">KUrlMimeData::setUrls QList&lt;QUrl&gt; urls QList&lt;QUrl&gt; mostLocalUrls QMimeData mimeData mimeData setUrls mostLocalUrls mimeData setData QString::fromLatin1 s_kdeUriListMime uriListData urls</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kurlmimedata.cpp</field>
    <field name="url">kurlmimedata_8cpp_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">KUrlMimeData::setMetaData MetaDataMap metaData QMimeData mimeData QByteArray metaDataData MetaDataMap::const_iterator it metaData begin it metaData end it metaDataData it key toUtf8 metaDataData metaDataData it value toUtf8 metaDataData mimeData setData QStringLiteral metaDataData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kurlmimedata.cpp</field>
    <field name="url">kurlmimedata_8cpp_source.html#l00059</field>
    <field name="keywords"></field>
    <field name="text">QStringList KUrlMimeData::mimeDataTypes QStringList QString::fromLatin1 s_kdeUriListMime QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kurlmimedata.cpp</field>
    <field name="url">kurlmimedata_8cpp_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;QUrl&gt; KUrlMimeData::urlsFromMimeData QMimeData mimeData DecodeOptions decodeOptions MetaDataMap metaData QList&lt;QUrl&gt; uris firstMimeType s_kdeUriListMime secondMimeType decodeOptions PreferLocalUrls qSwap firstMimeType secondMimeType QByteArray ba mimeData data QString::fromLatin1 firstMimeType ba isEmpty ba mimeData data QString::fromLatin1 secondMimeType ba isEmpty QList&lt;QByteArray&gt; urls ba split i i urls size i QByteArray data urls at i trimmed data isEmpty uris append QUrl::fromEncoded data metaData QByteArray metaDataPayload mimeData data QStringLiteral metaDataPayload isEmpty QString str QString::fromUtf8 metaDataPayload constData Q_ASSERT str endsWith QLatin1String str truncate str length QStringList lst str split QStringLiteral readingKey QString key QStringList::const_iterator it lst begin it lst end it readingKey key it metaData insert key it readingKey readingKey Q_ASSERT readingKey uris</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kurlmimedata.h</field>
    <field name="url">kurlmimedata_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QT_BEGIN_NAMESPACE QMimeData QT_END_NAMESPACE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kurlmimedata.h</field>
    <field name="url">kurlmimedata_8h_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">KUrlMimeData QMap&lt;QString, QString&gt; MetaDataMap KCOREADDONS_EXPORT setUrls QList&lt;QUrl&gt; urls QList&lt;QUrl&gt; mostLocalUrls QMimeData mimeData KCOREADDONS_EXPORT setMetaData MetaDataMap metaData QMimeData mimeData KCOREADDONS_EXPORT QStringList mimeDataTypes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kurlmimedata.h</field>
    <field name="url">kurlmimedata_8h_source.html#l00069</field>
    <field name="keywords"></field>
    <field name="text">DecodeOptions</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kurlmimedata.h</field>
    <field name="url">kurlmimedata_8h_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text">PreferLocalUrls</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kurlmimedata.h</field>
    <field name="url">kurlmimedata_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text">PreferKdeUrls KCOREADDONS_EXPORT QList&lt;QUrl&gt; urlsFromMimeData QMimeData mimeData DecodeOptions decodeOptions PreferKdeUrls MetaDataMap metaData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUserGroup QString QStringList QList K_UID K_GID WindowsSIDWrapper uid_t K_UID gid_t K_GID passwd group</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KUserOrGroupId T NativeType KUserOrGroupId KUserOrGroupId NativeType nativeId KUserOrGroupId KUserOrGroupId&lt;T&gt; other KUserOrGroupId operator= KUserOrGroupId&lt;T&gt; other KUserOrGroupId isValid NativeType nativeId QString toString operator== KUserOrGroupId other operator!= KUserOrGroupId other QExplicitlySharedDataPointer&lt;WindowsSIDWrapper&gt; data NativeType id KUserOrGroupId&lt;void *&gt;::KUserOrGroupId KUserOrGroupId&lt;void *&gt;::~KUserOrGroupId KUserOrGroupId&lt;void *&gt;::KUserOrGroupId KUserOrGroupId::NativeType nativeId KUserOrGroupId&lt;void *&gt;::KUserOrGroupId KUserOrGroupId other KUserOrGroupId&lt;void *&gt; KUserOrGroupId&lt;void *&gt;::operator= KUserOrGroupId other KUserOrGroupId&lt;void *&gt;::isValid KUserOrGroupId&lt;void *&gt;::NativeType KUserOrGroupId&lt;void *&gt;::nativeId QString KUserOrGroupId&lt;void *&gt;::toString KUserOrGroupId&lt;void *&gt;::operator== KUserOrGroupId other KUserOrGroupId&lt;void *&gt;::operator!= KUserOrGroupId other</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00132</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KUserId KUserOrGroupId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text">KUserId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00136</field>
    <field name="keywords"></field>
    <field name="text">KUserId K_UID uid KUserOrGroupId uid KUserId KUserId other KUserOrGroupId other KUserId KUserId fromName QString name KUserId currentUserId KUserId currentEffectiveUserId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00157</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KGroupId KUserOrGroupId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00159</field>
    <field name="keywords"></field>
    <field name="text">KGroupId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00161</field>
    <field name="keywords"></field>
    <field name="text">KGroupId K_GID gid KUserOrGroupId gid KGroupId KGroupId other KUserOrGroupId other KGroupId KGroupId fromName QString name KGroupId currentGroupId KGroupId currentEffectiveGroupId uint qHash KUserId uint seed qHash nativeId seed uint qHash KGroupId uint seed qHash nativeId seed KCOREADDONS_EXPORT uint qHash KUserId uint seed KCOREADDONS_EXPORT uint qHash KGroupId uint seed</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00204</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KUser</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00209</field>
    <field name="keywords"></field>
    <field name="text">UIDMode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00210</field>
    <field name="keywords"></field>
    <field name="text">UseEffectiveUID</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00211</field>
    <field name="keywords"></field>
    <field name="text">UseRealUserID KUser UIDMode mode UseEffectiveUID KUser K_UID uid KUser KUserId uid KUser QString name KUser name KUser passwd p KUser KUser user KUser operator = KUser user operator == KUser user operator != KUser user isValid KUserId userId KGroupId groupId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00313</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_DEPRECATED K_GID gid groupId nativeId isSuperUser QString loginName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00337</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_DEPRECATED QString fullName property FullName toString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00346</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_DEPRECATED K_UID uid userId nativeId QString homeDir QString faceIconPath QString shell QList&lt;KUserGroup&gt; groups uint maxCount KCOREADDONS_UINT_MAX QStringList groupNames uint maxCount KCOREADDONS_UINT_MAX UserProperty FullName RoomNumber WorkPhone HomePhone QVariant property UserProperty which KUser QList&lt;KUser&gt; allUsers uint maxCount KCOREADDONS_UINT_MAX QStringList allUserNames uint maxCount KCOREADDONS_UINT_MAX Private QExplicitlySharedDataPointer&lt;Private&gt; d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00431</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_EXPORT KUserGroup KUserGroup QString name KUserGroup name KUserGroup KGroupId gid KUserGroup KUser::UIDMode mode KUser::UseEffectiveUID KUserGroup K_GID gid KUserGroup group g KUserGroup KUserGroup group KUserGroup operator = KUserGroup group operator == KUserGroup group operator != KUserGroup group isValid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00526</field>
    <field name="keywords"></field>
    <field name="text">KCOREADDONS_DEPRECATED K_GID gid groupId nativeId KGroupId groupId QString name QList&lt;KUser&gt; users uint maxCount KCOREADDONS_UINT_MAX QStringList userNames uint maxCount KCOREADDONS_UINT_MAX KUserGroup QList&lt;KUserGroup&gt; allGroups uint maxCount KCOREADDONS_UINT_MAX QStringList allGroupNames uint maxCount KCOREADDONS_UINT_MAX Private QSharedDataPointer&lt;Private&gt; d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00578</field>
    <field name="keywords"></field>
    <field name="text">KUserOrGroupId&lt;T&gt;::isValid NativeType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00583</field>
    <field name="keywords"></field>
    <field name="text">KUserOrGroupId&lt;T&gt;::operator== KUserOrGroupId&lt;T&gt; other other id</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00588</field>
    <field name="keywords"></field>
    <field name="text">KUserOrGroupId&lt;T&gt;::operator!= KUserOrGroupId&lt;T&gt; other other id</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00593</field>
    <field name="keywords"></field>
    <field name="text">KUserOrGroupId&lt;T&gt;::NativeType KUserOrGroupId&lt;T&gt;::nativeId id</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00598</field>
    <field name="keywords"></field>
    <field name="text">QString KUserOrGroupId&lt;T&gt;::toString QString::number</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00603</field>
    <field name="keywords"></field>
    <field name="text">KUserOrGroupId&lt;T&gt;::KUserOrGroupId id KUserOrGroupId&lt;T&gt;::KUserOrGroupId KUserOrGroupId&lt;T&gt;::NativeType nativeId id nativeId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00613</field>
    <field name="keywords"></field>
    <field name="text">KUserOrGroupId&lt;T&gt;::KUserOrGroupId KUserOrGroupId&lt;T&gt; other id other id KUserOrGroupId&lt;T&gt; KUserOrGroupId&lt;T&gt;::operator= KUserOrGroupId&lt;T&gt; other other id KUserOrGroupId&lt;T&gt;::~KUserOrGroupId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00629</field>
    <field name="keywords"></field>
    <field name="text">KUser::operator!= KUser other operator== other</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser.h</field>
    <field name="url">kuser_8h_source.html#l00634</field>
    <field name="keywords"></field>
    <field name="text">KUserGroup::operator!= KUserGroup other operator== other</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">passwd getpwent setpwent setgrent group getgrent endpwent endgrent KUser::Private QSharedData uid_t uid gid_t gid QString loginName QString homeDir shell QMap&lt;UserProperty, QVariant&gt; properties Private uid uid_t gid gid_t Private name uid uid_t gid gid_t fillPasswd name getpwnam name Private passwd p uid uid_t gid gid_t fillPasswd p fillPasswd passwd p p QString gecos QString::fromLocal8Bit p pw_gecos QString gecos QString QStringList gecosList gecos split QLatin1Char gecosList size gecosList QString uid p pw_uid gid p pw_gid loginName QString::fromLocal8Bit p pw_name properties KUser::FullName QVariant gecosList properties KUser::RoomNumber QVariant gecosList properties KUser::WorkPhone QVariant gecosList properties KUser::HomePhone QVariant gecosList uid getuid uid geteuid homeDir QFile::decodeName qgetenv homeDir isEmpty homeDir QFile::decodeName p pw_dir shell QString::fromLocal8Bit p pw_shell</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text">KUser::KUser UIDMode mode uid_t _uid _euid mode UseEffectiveUID _euid geteuid _uid d Private getpwuid _euid d Private qgetenv constData d uid _uid d Private qgetenv constData d uid _uid d Private getpwuid _uid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text">KUser::KUser K_UID _uid d new Private getpwuid _uid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text">KUser::KUser KUserId _uid d new Private getpwuid _uid nativeId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text">KUser::KUser QString name d new Private name toLocal8Bit data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00128</field>
    <field name="keywords"></field>
    <field name="text">KUser::KUser name d new Private name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00133</field>
    <field name="keywords"></field>
    <field name="text">KUser::KUser passwd p d new Private p</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text">KUser::KUser KUser user d user d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text">KUser KUser::operator = KUser user d user d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00149</field>
    <field name="keywords"></field>
    <field name="text">KUser::operator == KUser user isValid d uid user d uid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00154</field>
    <field name="keywords"></field>
    <field name="text">KUser::isValid d uid uid_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00159</field>
    <field name="keywords"></field>
    <field name="text">KUserId KUser::userId KUserId d uid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00164</field>
    <field name="keywords"></field>
    <field name="text">KGroupId KUser::groupId KGroupId d gid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00169</field>
    <field name="keywords"></field>
    <field name="text">KUser::isSuperUser d uid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00174</field>
    <field name="keywords"></field>
    <field name="text">QString KUser::loginName d loginName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00179</field>
    <field name="keywords"></field>
    <field name="text">QString KUser::homeDir d homeDir</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00184</field>
    <field name="keywords"></field>
    <field name="text">QString KUser::faceIconPath QString pathToFaceIcon homeDir QDir::separator QStringLiteral QFile::exists pathToFaceIcon pathToFaceIcon QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00195</field>
    <field name="keywords"></field>
    <field name="text">QString KUser::shell d shell listGroupsForUser name gid_t gid uint maxCount Func handleNextGroup Q_UNLIKELY maxCount uint found QVarLengthArray&lt;gid_t, 100&gt; gid_buffer gid_buffer resize numGroups gid_buffer size result getgrouplist name gid gid_buffer data numGroups result uint numGroups maxCount qDebug gid_buffer size numGroups gid_buffer resize numGroups numGroups gid_buffer size getgrouplist name gid gid_buffer data numGroups i i numGroups found maxCount i group g getgrgid gid_buffer i g found handleNextGroup g group g getgrgid gid g handleNextGroup g found found maxCount groupContainsUser group g name user g gr_mem user user strcmp name user setgrent g getgrent g gr_gid gid groupContainsUser g name handleNextGroup g found found maxCount endgrent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00265</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KUserGroup&gt; KUser::groups uint maxCount QList&lt;KUserGroup&gt; result listGroupsForUser d loginName toLocal8Bit constData d gid maxCount group g result append KUserGroup g result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00277</field>
    <field name="keywords"></field>
    <field name="text">QStringList KUser::groupNames uint maxCount QStringList result listGroupsForUser d loginName toLocal8Bit constData d gid maxCount group g result append QString::fromLocal8Bit g gr_name result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00289</field>
    <field name="keywords"></field>
    <field name="text">QVariant KUser::property UserProperty which d properties value which</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00294</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KUser&gt; KUser::allUsers uint maxCount QList&lt;KUser&gt; result passwd p setpwent uint i i maxCount p getpwent i result append KUser p endpwent result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00310</field>
    <field name="keywords"></field>
    <field name="text">QStringList KUser::allUserNames uint maxCount QStringList result passwd p setpwent uint i i maxCount p getpwent i result append QString::fromLocal8Bit p pw_name endpwent result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00325</field>
    <field name="keywords"></field>
    <field name="text">KUser::~KUser KUserGroup::Private QSharedData gid_t gid QString name Private gid gid_t Private _name gid gid_t fillGroup _name getgrnam _name Private const ::group p gid gid_t fillGroup p fillGroup const ::group p p gid p gr_gid name QString::fromLocal8Bit p gr_name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00354</field>
    <field name="keywords"></field>
    <field name="text">KUserGroup::KUserGroup KUser::UIDMode mode d Private getgrgid KUser mode groupId nativeId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00359</field>
    <field name="keywords"></field>
    <field name="text">KUserGroup::KUserGroup K_GID _gid d new Private getgrgid _gid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00364</field>
    <field name="keywords"></field>
    <field name="text">KUserGroup::KUserGroup KGroupId _gid d new Private getgrgid _gid nativeId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00369</field>
    <field name="keywords"></field>
    <field name="text">KUserGroup::KUserGroup QString _name d new Private _name toLocal8Bit data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00374</field>
    <field name="keywords"></field>
    <field name="text">KUserGroup::KUserGroup _name d new Private _name KUserGroup::KUserGroup const ::group g d Private g</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00384</field>
    <field name="keywords"></field>
    <field name="text">KUserGroup::KUserGroup KUserGroup group d group d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00389</field>
    <field name="keywords"></field>
    <field name="text">KUserGroup KUserGroup::operator = KUserGroup group d group d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00395</field>
    <field name="keywords"></field>
    <field name="text">KUserGroup::operator == KUserGroup group isValid d gid group d gid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00400</field>
    <field name="keywords"></field>
    <field name="text">KUserGroup::isValid d gid gid_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00405</field>
    <field name="keywords"></field>
    <field name="text">KGroupId KUserGroup::groupId KGroupId d gid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00410</field>
    <field name="keywords"></field>
    <field name="text">QString KUserGroup::name d name listGroupMembers gid_t gid uint maxCount std::function passwd handleNextGroupUser maxCount group g getgrgid gid g uint found QVarLengthArray&lt;uid_t&gt; addedUsers passwd p user g gr_mem user user p getpwnam user addedUsers append p pw_uid handleNextGroupUser p found found maxCount setpwent p getpwent found maxCount p pw_gid gid std::find addedUsers cbegin addedUsers cend p pw_uid addedUsers cend handleNextGroupUser p found endpwent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00453</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KUser&gt; KUserGroup::users uint maxCount QList&lt;KUser&gt; result listGroupMembers d gid maxCount passwd p result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00462</field>
    <field name="keywords"></field>
    <field name="text">QStringList KUserGroup::userNames uint maxCount QStringList result listGroupMembers d gid maxCount passwd p result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00471</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KUserGroup&gt; KUserGroup::allGroups uint maxCount QList&lt;KUserGroup&gt; result g setgrent uint i i maxCount g getgrent i result append KUserGroup g endgrent result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00487</field>
    <field name="keywords"></field>
    <field name="text">QStringList KUserGroup::allGroupNames uint maxCount QStringList result g setgrent uint i i maxCount g getgrent i result append QString::fromLocal8Bit g gr_name endgrent result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00503</field>
    <field name="keywords"></field>
    <field name="text">KUserGroup::~KUserGroup</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00507</field>
    <field name="keywords"></field>
    <field name="text">KUserId KUserId::fromName QString name name isEmpty KUserId QByteArray name8Bit name toLocal8Bit passwd p name8Bit constData p qWarning name8Bit constData strerror errno KUserId KUserId p pw_uid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00521</field>
    <field name="keywords"></field>
    <field name="text">KGroupId KGroupId::fromName QString name name isEmpty KGroupId QByteArray name8Bit name toLocal8Bit group g name8Bit constData g qWarning name8Bit constData strerror errno KGroupId KGroupId g gr_gid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00535</field>
    <field name="keywords"></field>
    <field name="text">KUserId KUserId::currentUserId KUserId getuid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00540</field>
    <field name="keywords"></field>
    <field name="text">KUserId KUserId::currentEffectiveUserId KUserId geteuid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00545</field>
    <field name="keywords"></field>
    <field name="text">KGroupId KGroupId::currentGroupId KGroupId getgid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_unix.cpp</field>
    <field name="url">kuser__unix_8cpp_source.html#l00550</field>
    <field name="keywords"></field>
    <field name="text">KGroupId KGroupId::currentEffectiveGroupId KGroupId getegid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kuser_win.cpp</field>
    <field name="url">kuser__win_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">netApiBufferDeleter operator() buffer buffer NetApiBufferFree buffer ScopedNetApiBuffer std::unique_ptr ScopedNetApiBuffer T data std unique_ptr T netApiBufferDeleter data netApiBufferDeleter handleCloser HANDLE h h INVALID_HANDLE_VALUE CloseHandle h std::unique_ptr&lt;std::remove_pointer&lt;HANDLE&gt;::type decltype handleCloser ScopedHANDLE NetApiTypeInfo NETAPI_TYPE_INFO GROUP_INFO NETAPI_TYPE_INFO GROUP_INFO NETAPI_TYPE_INFO USER_INFO NETAPI_TYPE_INFO USER_INFO NETAPI_TYPE_INFO USER_INFO NETAPI_TYPE_INFO GROUP_USERS_INFO ScopedNetApiBuffer&lt;T&gt; getUserInfo LPCWSTR server QString userName NET_API_STATUS errCode LPBYTE userInfoTmp NET_API_STATUS status NetUserGetInfo server LPCWSTR userName utf16 NetApiTypeInfo&lt;T&gt;::level userInfoTmp status NERR_Success userInfoTmp errCode errCode status ScopedNetApiBuffer&lt;T&gt; T userInfoTmp netApiEnumerate uint maxCount Callback callback EnumFunction enumFunc NET_API_STATUS nStatus NERR_Success DWORD_PTR resumeHandle uint total level NetApiTypeInfo&lt;T&gt;::level LPBYTE buffer DWORD entriesRead DWORD totalEntries nStatus enumFunc level buffer entriesRead totalEntries resumeHandle ScopedNetApiBuffer&lt;T&gt; groupInfo T buffer nStatus NERR_Success nStatus ERROR_MORE_DATA DWORD i total maxCount i entriesRead i total callback groupInfo get i qWarning nStatus nStatus ERROR_MORE_DATA enumerateAllUsers uint maxCount Callback callback netApiEnumerate&lt;T&gt; maxCount callback level LPBYTE buffer DWORD count DWORD total PDWORD_PTR resumeHandle NetUserEnum level buffer MAX_PREFERRED_LENGTH count total PDWORD resumeHandle enumerateAllGroups uint maxCount Callback callback netApiEnumerate&lt;T&gt; maxCount callback level LPBYTE buffer DWORD count DWORD total PDWORD_PTR resumeHandle NetGroupEnum level buffer MAX_PREFERRED_LENGTH count total resumeHandle enumerateGroupsForUser uint maxCount QString name Callback callback LPCWSTR nameStr LPCWSTR name utf16 netApiEnumerate&lt;T&gt; maxCount callback level LPBYTE buffer DWORD count DWORD total PDWORD_PTR resumeHandle NET_API_STATUS Q_UNUSED resumeHandle NET_API_STATUS ret NetUserGetGroups nameStr level buffer MAX_PREFERRED_LENGTH count total ret ERROR_MORE_DATA qCWarning KCOREADDONS_DEBUG name ret NERR_Success ret enumerateUsersForGroup QString name uint maxCount Callback callback LPCWSTR nameStr LPCWSTR name utf16 netApiEnumerate&lt;T&gt; maxCount callback nameStr level LPBYTE buffer DWORD count DWORD total PDWORD_PTR resumeHandle NetGroupGetUsers nameStr level buffer MAX_PREFERRED_LENGTH count total resumeHandle KUser::Private QSharedData QExplicitlySharedDataPointer&lt;Private&gt; Ptr Private isAdmin false Private KUserId uid KGroupId gid QString loginName QString fullName QString domain QString homeDir isAdmin uid uid gid gid loginName loginName fullName fullName domain domain homeDir homeDir isAdmin isAdmin Q_ASSERT uid isValid QString guessHomeDir QString username KUserId uid uid KUserId::currentUserId QDir::homePath QString homeDir WCHAR profileDirPath MAX_PATH DWORD bufSize MAX_PATH BOOL result GetProfilesDirectoryW profileDirPath bufSize result homeDir QString::fromWCharArray profileDirPath QLatin1Char username homeDir Ptr sharedNull KUserId uid KGroupId gid QString loginName QString fullName QString domain QString homeDir isAdmin Ptr create KUserId uid uid isValid sharedNull DWORD nameBufferLen UNLEN WCHAR nameBuffer UNLEN DWORD domainBufferLen UNLEN WCHAR domainBuffer UNLEN SID_NAME_USE use LookupAccountSidW uid nativeId nameBuffer nameBufferLen domainBuffer domainBufferLen use qCWarning KCOREADDONS_DEBUG uid toString GetLastError sharedNull QString loginName QString::fromWCharArray nameBuffer QString domainName QString::fromWCharArray domainBuffer use SidTypeUser use SidTypeDeletedAccount qCWarning KCOREADDONS_DEBUG nospace domainName loginName uid toString SidTypeUser SidTypeDeletedAccount use sharedNull LPWSTR servernameTmp NET_API_STATUS status NetGetAnyDCName LPBYTE servernameTmp status NERR_Success ScopedNetApiBuffer&lt;WCHAR&gt; servername servernameTmp QString fullName QString homeDir KGroupId group isAdmin userInfo4 getUserInfo&lt;USER_INFO_4&gt; servername get loginName status Q_ASSERT KUserId userInfo4 usri4_user_sid uid fullName QString::fromWCharArray userInfo4 usri4_full_name homeDir QString::fromWCharArray userInfo4 usri4_home_dir isAdmin userInfo4 usri4_priv USER_PRIV_ADMIN DWORD primaryGroup userInfo4 usri4_primary_group_id group KGroupId uid nativeId Q_ASSERT group isValid UCHAR numSubauthorities GetSidSubAuthorityCount group nativeId PDWORD lastSubAutority GetSidSubAuthority group nativeId numSubauthorities lastSubAutority primaryGroup userInfo11 getUserInfo&lt;USER_INFO_11&gt; servername get loginName status fullName QString::fromWCharArray userInfo11 usri11_full_name homeDir QString::fromWCharArray userInfo11 usri11_home_dir isAdmin userInfo11 usri11_priv USER_PRIV_ADMIN qCWarning KCOREADDONS_DEBUG nospace domainName loginName status sharedNull homeDir isEmpty homeDir guessHomeDir loginName uid group isValid enumerateGroupsForUser&lt;GROUP_USERS_INFO_0&gt; loginName GROUP_USERS_INFO_0 info group KGroupId::fromName QString::fromWCharArray info grui0_name Ptr Private uid group loginName fullName domainName homeDir isAdmin KUser::Private::Ptr KUser::Private::sharedNull KUser::Private KUser::KUser UIDMode mode mode UseEffectiveUID d Private::create KUserId::currentEffectiveUserId mode UseRealUserID d Private::create KUserId::currentUserId d Private::sharedNull KUser::KUser K_UID uid d Private create KUserId uid KUser::KUser KUserId uid d Private create uid KUser::KUser QString name d Private create KUserId fromName name KUser::KUser name d Private create KUserId fromName QString fromLocal8Bit name KUser::KUser KUser user d user d KUser KUser::operator= KUser user d user d KUser::operator== KUser user isValid d uid user d uid KUser::isValid d uid isValid KUser::isSuperUser d isAdmin QString KUser::loginName d loginName QString KUser::homeDir d homeDir COMInitializer COMInitializer result CoInitialize nullptr COMInitializer SUCCEEDED result CoUninitialize HRESULT result W32Library W32Library HMODULE h h h W32Library h FreeLibrary h HMODULE h HMODULE h FaceIconPath_XP HRESULT WINAPI funcptr_t LPCWSTR DWORD LPWSTR ordinal HRESULT getPicturePath funcptr_t SHGetUserPicturePathXP LPCWSTR username LPWSTR buf UINT bufsize Q_UNUSED bufsize SHGetUserPicturePathXP username buf FaceIconPath_Vista HRESULT WINAPI funcptr_t LPCWSTR DWORD LPWSTR UINT ordinal HRESULT getPicturePath funcptr_t SHGetUserPicturePathV LPCWSTR username LPWSTR buf UINT bufsize SHGetUserPicturePathV username buf bufsize QString faceIconPathImpl LPCWSTR username COMInitializer COMinit W32Library shellMod LoadLibraryA shellMod QString Platform::funcptr_t sgupp_ptr typename Platform::funcptr_t GetProcAddress shellMod MAKEINTRESOURCEA Platform::ordinal sgupp_ptr QString WCHAR pathBuf MAX_PATH HRESULT res Platform::getPicturePath sgupp_ptr username pathBuf MAX_PATH res S_OK QString QString::fromWCharArray pathBuf QString KUser::faceIconPath isValid QString LPCWSTR username WCHAR d loginName utf16 QSysInfo::windowsVersion QSysInfo::WV_XP QSysInfo::windowsVersion QSysInfo::WV_2003 faceIconPathImpl&lt;FaceIconPath_XP&gt; username QSysInfo::windowsVersion QSysInfo::WV_VISTA faceIconPathImpl&lt;FaceIconPath_Vista&gt; username QString QString KUser::shell isValid QStringLiteral QString KUserId KUser::userId d uid KGroupId KUser::groupId d gid QVariant KUser::property UserProperty which which FullName QVariant d fullName QVariant KUser::~KUser KUserGroup::Private QSharedData QString name KGroupId gid Private Private QString name KGroupId name name gid id name isEmpty PBYTE groupInfoTmp NET_API_STATUS status NetGroupGetInfo LPCWSTR name utf16 groupInfoTmp ScopedNetApiBuffer&lt;GROUP_INFO_0&gt; groupInfo GROUP_INFO_0 groupInfoTmp status NERR_Success qCWarning KCOREADDONS_DEBUG name status groupInfo reset isValid gid KGroupId::fromName name KUserGroup::KUserGroup QString _name d new Private _name KGroupId KUserGroup::KUserGroup _name d new Private QLatin1String _name KGroupId QString nameFromGroupId KGroupId gid gid isValid QString DWORD bufferLen UNLEN WCHAR buffer UNLEN DWORD domainBufferLen UNLEN WCHAR domainBuffer UNLEN SID_NAME_USE eUse QString name LookupAccountSidW NULL gid nativeId buffer bufferLen domainBuffer domainBufferLen eUse eUse SidTypeGroup eUse SidTypeWellKnownGroup name QString::fromWCharArray buffer qCWarning KCOREADDONS_DEBUG QString::fromWCharArray buffer eUse name KUserGroup::KUserGroup KGroupId gid d new Private nameFromGroupId gid gid KUserGroup::KUserGroup K_GID gid KGroupId groupId gid d Private nameFromGroupId groupId groupId KUserGroup::KUserGroup KUser::UIDMode mode KGroupId gid mode KUser::UseEffectiveUID gid KGroupId::currentGroupId mode KUser::UseRealUserID gid KGroupId::currentEffectiveGroupId d Private nameFromGroupId gid gid KUserGroup::KUserGroup KUserGroup group d group d KUserGroup KUserGroup::operator = KUserGroup group d group d KUserGroup::operator== KUserGroup group isValid d gid group d gid d name group d name KUserGroup::isValid d gid isValid d name isEmpty QString KUserGroup::name d name KGroupId KUserGroup::groupId d gid KUserGroup::~KUserGroup QList&lt;KUser&gt; KUser::allUsers uint maxCount QList&lt;KUser&gt; result enumerateAllUsers&lt;USER_INFO_0&gt; maxCount result USER_INFO_0 info result append KUser QString::fromWCharArray info usri0_name result QStringList KUser::allUserNames uint maxCount QStringList result enumerateAllUsers&lt;USER_INFO_0&gt; maxCount result USER_INFO_0 info result append QString::fromWCharArray info usri0_name result QList&lt;KUserGroup&gt; KUserGroup::allGroups uint maxCount QList&lt;KUserGroup&gt; result enumerateAllGroups&lt;GROUP_INFO_0&gt; maxCount result GROUP_INFO_0 groupInfo result append KUserGroup QString::fromWCharArray groupInfo grpi0_name result QStringList KUserGroup::allGroupNames uint maxCount QStringList result enumerateAllGroups&lt;GROUP_INFO_0&gt; maxCount result GROUP_INFO_0 groupInfo result append QString::fromWCharArray groupInfo grpi0_name result QList&lt;KUserGroup&gt; KUser::groups uint maxCount QList&lt;KUserGroup&gt; result isValid result enumerateGroupsForUser&lt;GROUP_USERS_INFO_0&gt; maxCount d loginName result GROUP_USERS_INFO_0 info result append KUserGroup QString::fromWCharArray info grui0_name result QStringList KUser::groupNames uint maxCount QStringList result isValid result enumerateGroupsForUser&lt;GROUP_USERS_INFO_0&gt; maxCount d loginName result GROUP_USERS_INFO_0 info result append QString::fromWCharArray info grui0_name result QList&lt;KUser&gt; KUserGroup::users uint maxCount QList&lt;KUser&gt; result isValid result enumerateGroupsForUser&lt;GROUP_USERS_INFO_0&gt; maxCount d name result GROUP_USERS_INFO_0 info result append KUser QString::fromWCharArray info grui0_name result QStringList KUserGroup::userNames uint maxCount QStringList result isValid result enumerateGroupsForUser&lt;GROUP_USERS_INFO_0&gt; maxCount d name result GROUP_USERS_INFO_0 info result append QString::fromWCharArray info grui0_name result invalidSidString QStringLiteral QString sidToString sid sid IsValidSid sid invalidSidString WCHAR sidStr ConvertSidToStringSidW sid sidStr invalidSidString QString ret QString::fromWCharArray sidStr LocalFree sidStr ret WindowsSIDWrapper QSharedData sidBuffer SECURITY_MAX_SID_SIZE WindowsSIDWrapper copySid PSID sid sid IsValidSid sid WindowsSIDWrapper copy WindowsSIDWrapper success CopySid SECURITY_MAX_SID_SIZE copy sidBuffer sid success QString sidString sidToString sid qWarning qPrintable sidString GetLastError copy copy KUserOrGroupId&lt;void *&gt;::KUserOrGroupId KUserOrGroupId&lt;void *&gt;::~KUserOrGroupId KUserOrGroupId&lt;void *&gt;::KUserOrGroupId KUserOrGroupId&lt;void *&gt; other data other data KUserOrGroupId&lt;void *&gt; KUserOrGroupId&lt;void *&gt;::operator= KUserOrGroupId&lt;void *&gt; other data other data KUserOrGroupId&lt;void *&gt;::KUserOrGroupId nativeId data WindowsSIDWrapper copySid nativeId KUserOrGroupId&lt;void *&gt;::isValid data KUserOrGroupId&lt;void *&gt;::nativeId data data sidBuffer KUserOrGroupId&lt;void *&gt;::operator== KUserOrGroupId&lt;void *&gt; other data other data EqualSid data sidBuffer other data sidBuffer other data KUserOrGroupId&lt;void *&gt;::operator!= KUserOrGroupId&lt;void *&gt; other other QString KUserOrGroupId&lt;void *&gt;::toString sidToString data data sidBuffer T sidFromName QString name Callback callback name isEmpty T buffer SECURITY_MAX_SID_SIZE DWORD sidLength SECURITY_MAX_SID_SIZE WCHAR domainBuffer DWORD domainBufferSize SID_NAME_USE sidType ok LookupAccountNameW LPCWSTR name utf16 buffer sidLength domainBuffer domainBufferSize sidType ok qCWarning KCOREADDONS_DEBUG name GetLastError T callback buffer sidType KUserId KUserId::fromName QString name sidFromName&lt;KUserId&gt; name PSID sid SID_NAME_USE sidType KUserId sidType SidTypeUser sidType SidTypeDeletedAccount qCWarning KCOREADDONS_DEBUG nospace name sidToString sid sidType KUserId KUserId sid KGroupId KGroupId::fromName QString name sidFromName&lt;KGroupId&gt; name PSID sid SID_NAME_USE sidType KGroupId sidType SidTypeGroup sidType SidTypeWellKnownGroup qCWarning KCOREADDONS_DEBUG nospace name sidToString sid sidType KGroupId KGroupId sid std::unique_ptr&lt;char[]&gt; queryProcessInformation TOKEN_INFORMATION_CLASS type HANDLE _token OpenProcessToken GetCurrentProcess TOKEN_QUERY _token qWarning GetLastError ScopedHANDLE token _token handleCloser DWORD requiredSize GetTokenInformation token get type requiredSize GetLastError ERROR_INSUFFICIENT_BUFFER qWarning type GetLastError std::unique_ptr&lt;char[]&gt; buffer requiredSize GetTokenInformation token get type buffer get requiredSize requiredSize qWarning type GetLastError buffer KUserId KUserId::currentUserId std::unique_ptr&lt;char[]&gt; userTokenBuffer queryProcessInformation TokenUser TOKEN_USER userToken TOKEN_USER userTokenBuffer get KUserId userToken User Sid KGroupId KGroupId::currentGroupId std::unique_ptr&lt;char[]&gt; primaryGroupBuffer queryProcessInformation TokenPrimaryGroup TOKEN_PRIMARY_GROUP primaryGroup TOKEN_PRIMARY_GROUP primaryGroupBuffer get KGroupId primaryGroup PrimaryGroup KUserId KUserId::currentEffectiveUserId currentUserId KGroupId KGroupId::currentEffectiveGroupId currentGroupId KCOREADDONS_EXPORT uint qHash KUserId uint seed isValid seed sid nativeId qHash QByteArray::fromRawData sid GetLengthSid sid seed KCOREADDONS_EXPORT uint qHash KGroupId uint seed isValid seed sid nativeId qHash QByteArray::fromRawData sid GetLengthSid sid seed</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">main.cpp</field>
    <field name="url">main_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">messageOutput QtMsgType type QMessageLogContext context QString msg QByteArray localMsg msg toLocal8Bit type QtDebugMsg fprintf stdout localMsg constData QtInfoMsg fprintf stdout localMsg constData context file context line context function QtWarningMsg fprintf stderr localMsg constData context file context line context function QtCriticalMsg fprintf stderr localMsg constData context file context line context function QtFatalMsg fprintf stderr localMsg constData context file context line context function abort main argc argv qInstallMessageHandler messageOutput QCoreApplication app argc argv QString description QStringLiteral app setApplicationVersion QStringLiteral _i QStringLiteral _o QStringLiteral _n QStringLiteral _c QStringLiteral _s QStringLiteral QCommandLineOption input QCommandLineOption QStringList QStringLiteral _i QStringLiteral _n QCommandLineOption output QCommandLineOption QStringList QStringLiteral _o QStringLiteral _n QCommandLineOption verbose QCommandLineOption QStringList QStringLiteral QStringLiteral QCommandLineOption compat QCommandLineOption QStringList QStringLiteral _c QStringLiteral QCommandLineOption serviceTypes QCommandLineOption QStringList QStringLiteral _s QStringLiteral _s QCommandLineParser parser parser addVersionOption parser setApplicationDescription description parser addHelpOption parser addOption input parser addOption output parser addOption verbose parser addOption compat parser addOption serviceTypes DesktopToJson dtj parser input output verbose compat serviceTypes parser process app dtj runMain</field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">kdelibs4migration.h</field>
    <field name="url">kdelibs4migration_8h.html</field>
    <field name="keywords">kdelibs4migration.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">file</field>
    <field name="name">kformat.h</field>
    <field name="url">kformat_8h.html</field>
    <field name="keywords">kformat.h</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">deprecated</field>
    <field name="url">deprecated.html</field>
    <field name="keywords"></field>
    <field name="text">Deprecated List Member KAboutData setProgramIconName const QString iconName since 5.2 use QApplication::setWindowIcon(QIcon::fromTheme()) instead Member KPluginFactory create QObject const QStringList args Member KPluginFactory create QObject 0 const char const QStringList args QStringList() Member KPluginFactory createObject QObject const char const QStringList args Member KPluginFactory createPartObject QWidget QObject const char const QStringList args Member KUser fullName const use property(KUser::FullName) instead Member KUser gid const since 5.0 use KUser::groupId() Member KUser uid const since 5.0 use KUser::userId() Member KUserGroup gid const since 5.0 use KUserGroup::groupId()</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KAboutData</field>
    <field name="url">classKAboutData.html</field>
    <field name="keywords">KAboutData</field>
    <field name="text">It can store such values as version number program name home page email address for bug reporting multiple authors and contributors using KAboutPerson license and copyright information Currently the values set here are shown by the box see KAboutDialog used by the bug report dialog see KBugReport and by the help shown on command line see KAboutData::setupCommandLine() Porting Notes Since KDE Frameworks 5.0 the translation catalog mechanism must provided by your translation framework to load the correct catalog instead eg KLocalizedString::setApplicationDomain() for KI18n or QCoreApplication::installTranslator() for Qt s translation system This applies to the old setCatalogName() and catalogName() members But see also K4AboutData in kde4support as a compatibility class Holds information needed by the box and other classes Espen Sand David Faure</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::KAboutData</field>
    <field name="args">(const QString &amp;componentName, const QString &amp;displayName, const QString &amp;version, const QString &amp;shortDescription, enum KAboutLicense::LicenseKey licenseType, const QString &amp;copyrightStatement=QString(), const QString &amp;otherText=QString(), const QString &amp;homePageAddress=QString(), const QString &amp;bugsEmailAddress=QStringLiteral(&quot;submit@bugs.kde.org&quot;))</field>
    <field name="url">classKAboutData.html#a20a5d074b81d5cbe2f56044986e4507e</field>
    <field name="keywords">KAboutData KAboutData::KAboutData KAboutData</field>
    <field name="text">Porting Note The catalogName parameter present in KDE4 was deprecated and removed See also K4AboutData in kde4support if this feature is needed for compatibility purposes or consider using componentName() instead componentName The program name or plugin name used internally Example QStringLiteral This should never be translated displayName A displayable name for the program or plugin This string should be translated Example i18n version The component version string Example QStringLiteral shortDescription A short description of what the component does This string should be translated Example i18n licenseType The license identifier Use setLicenseText or setLicenseTextFile if you use a license not predefined here copyrightStatement A copyright statement that can look like this i18n The string specified here is taken verbatim the author information from addAuthor is not used otherText Some free form text that can contain any kind of information The text can contain newlines This string should be translated homePageAddress The URL to the component s homepage including URL scheme is correct is not Since KDE Frameworks 5.17 https and other valid URL schemes are also valid IMPORTANT This argument is used to provide a default organization domain for the application which is used to automatically register on the session D-Bus locate the appropriate desktop file etc Use setOrganizationDomain() if you want to control this value yourself setOrganizationDomain bugsEmailAddress The bug report email address string This defaults to the kde.org bug system</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::KAboutData</field>
    <field name="args">(const QString &amp;componentName, const QString &amp;displayName, const QString &amp;version)</field>
    <field name="url">classKAboutData.html#a20efda14b288568a5da5839442827e97</field>
    <field name="keywords">KAboutData KAboutData::KAboutData KAboutData</field>
    <field name="text">componentName The program name or plugin name used internally Example displayName A displayable name for the program or plugin This string should be translated Example i18n version The component version string</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::KAboutData</field>
    <field name="args">(const KAboutData &amp;other)</field>
    <field name="url">classKAboutData.html#aa58f336dc81d52d644a5b840abfe2907</field>
    <field name="keywords">KAboutData KAboutData::KAboutData KAboutData</field>
    <field name="text">Performs a deep copy other object to copy</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::addAuthor</field>
    <field name="args">(const QString &amp;name, const QString &amp;task=QString(), const QString &amp;emailAddress=QString(), const QString &amp;webAddress=QString(), const QString &amp;ocsUsername=QString())</field>
    <field name="url">classKAboutData.html#adea6c2b5a028f7482e7d07e6b67f59b8</field>
    <field name="keywords">addAuthor KAboutData::addAuthor KAboutData</field>
    <field name="text">You can call this function as many times as you need Each entry is appended to a list The person in the first entry is assumed to be the leader of the project name The developer s name It should be translated task What the person is responsible for This text can contain newlines It should be translated Can be left empty emailAddress An Email address where the person can be reached Can be left empty webAddress The person s homepage or a relevant link Start the address with is correct is not Can be left empty ocsUsername The person s Open Collaboration Services username The provider can be optionally specified with setOcsProvider</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::addCredit</field>
    <field name="args">(const QString &amp;name, const QString &amp;task=QString(), const QString &amp;emailAddress=QString(), const QString &amp;webAddress=QString(), const QString &amp;ocsUsername=QString())</field>
    <field name="url">classKAboutData.html#a3d36de14543d2ca44d356e8dd97c1870</field>
    <field name="keywords">addCredit KAboutData::addCredit KAboutData</field>
    <field name="text">You can call this function as many times as you need Each entry is appended to a list name The person s name It should be translated task What the person has done to deserve the honor The text can contain newlines It should be translated Can be left empty emailAddress An email address when the person can be reached Can be left empty webAddress The person s homepage or a relevant link Start the address with is is correct is not Can be left empty ocsUsername The person s Open Collaboration Services username The provider can be optionally specified with setOcsProvider</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::addLicense</field>
    <field name="args">(KAboutLicense::LicenseKey licenseKey)</field>
    <field name="url">classKAboutData.html#a19520fb67ccc88d2330ae1484ad30720</field>
    <field name="keywords">addLicense KAboutData::addLicense KAboutData</field>
    <field name="text">If there is only one unknown license set e.g by using the default parameter in the constructor that one is replaced licenseKey The license identifier setLicenseText addLicenseText addLicenseTextFile</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::addLicenseText</field>
    <field name="args">(const QString &amp;license)</field>
    <field name="url">classKAboutData.html#aaa60d54de7aed01e1d7f1ef3696dbc55</field>
    <field name="keywords">addLicenseText KAboutData::addLicenseText KAboutData</field>
    <field name="text">If there is only one unknown license set e.g by using the default parameter in the constructor that one is replaced Example license The license text setLicenseText addLicense addLicenseTextFile</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::addLicenseTextFile</field>
    <field name="args">(const QString &amp;file)</field>
    <field name="url">classKAboutData.html#adf1f1dac97e4eb931d5d4b30e72b9506</field>
    <field name="keywords">addLicenseTextFile KAboutData::addLicenseTextFile KAboutData</field>
    <field name="text">The file format has to be plain text in an encoding compatible to the locale If there is only one unknown license set e.g by using the default parameter in the constructor that one is replaced file Path to the file in the local filesystem containing the license text addLicenseText addLicense setLicenseTextFile</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::authors</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#a7b5557e1966be7904bd42538c1ae257c</field>
    <field name="keywords">authors KAboutData::authors KAboutData</field>
    <field name="text">author information list of persons</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::bugAddress</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#ab6035e4725a4356e166f8e902fd32c9b</field>
    <field name="keywords">bugAddress KAboutData::bugAddress KAboutData</field>
    <field name="text">the email address where to report bugs</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::componentName</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#aa2da588e76b0338c66dec9936082e759</field>
    <field name="keywords">componentName KAboutData::componentName KAboutData</field>
    <field name="text">the internal program name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::copyrightStatement</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#a7de367293181e29130ef842cb07a853d</field>
    <field name="keywords">copyrightStatement KAboutData::copyrightStatement KAboutData</field>
    <field name="text">the copyright statement Can be QString() if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::credits</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#a32fa7d642a6a4528f068961a9897fc67</field>
    <field name="keywords">credits KAboutData::credits KAboutData</field>
    <field name="text">credit information list of persons</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::customAuthorPlainText</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#a7a3db23563d0e8ba1d5043fbd9ec40a5</field>
    <field name="keywords">customAuthorPlainText KAboutData::customAuthorPlainText KAboutData</field>
    <field name="text">the plain text displayed around the list of authors instead of the default message Can be QString()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::customAuthorRichText</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#a2b723384d98b51918066f28e72995f72</field>
    <field name="keywords">customAuthorRichText KAboutData::customAuthorRichText KAboutData</field>
    <field name="text">the rich text displayed around the list of authors instead of the default message Can be QString()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::customAuthorTextEnabled</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#a5897585f6738970a16fccd3d0f36adc7</field>
    <field name="keywords">customAuthorTextEnabled KAboutData::customAuthorTextEnabled KAboutData</field>
    <field name="text">whether custom text should be displayed around the list of authors</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::desktopFileName</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#a5b41e478debfec179e3dc0535aa11255</field>
    <field name="keywords">desktopFileName KAboutData::desktopFileName KAboutData</field>
    <field name="text">The desktop file name of this application e.g setDesktopFileName(const QString&amp;) 5.16</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::displayName</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#ae57a413ecbeb786deae483ba55c4fe55</field>
    <field name="keywords">displayName KAboutData::displayName KAboutData</field>
    <field name="text">the program name translated</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::homepage</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#a7fb921e2f54cb236c47de48c0faffb01</field>
    <field name="keywords">homepage KAboutData::homepage KAboutData</field>
    <field name="text">the application homepage URL Can be QString() if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::internalBugAddress</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#a1cd2beab8637cf9fc00d4a3c631544e9</field>
    <field name="keywords">internalBugAddress KAboutData::internalBugAddress KAboutData</field>
    <field name="text">Provided for use by KCrash Return the untranslated and uninterpreted to UTF8 string for the bug mail address Used in particular for KCrash</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::internalProgramName</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#a689a2f0584b2f88c14ae40b301e5ed73</field>
    <field name="keywords">internalProgramName KAboutData::internalProgramName KAboutData</field>
    <field name="text">Provided for use by KCrash Return the program name It is always pre-allocated Needed for KCrash in particular</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::internalVersion</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#a42ad4b3707aa5ca93f7e8a54c9e3fc9b</field>
    <field name="keywords">internalVersion KAboutData::internalVersion KAboutData</field>
    <field name="text">Provided for use by KCrash Return the untranslated and uninterpreted to UTF8 string for the version information Used in particular for KCrash</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::licenses</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#afef367176a2f6bdd843d271a7e46eedb</field>
    <field name="keywords">licenses KAboutData::licenses KAboutData</field>
    <field name="text">licenses information list of licenses</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::ocsProviderUrl</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#a0955c58d70b97cc9ab7b2253fa6e9395</field>
    <field name="keywords">ocsProviderUrl KAboutData::ocsProviderUrl KAboutData</field>
    <field name="text">the provider URL</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::operator=</field>
    <field name="args">(const KAboutData &amp;other)</field>
    <field name="url">classKAboutData.html#a9968228a836f593ec2706f4d6647c449</field>
    <field name="keywords">operator= KAboutData::operator= KAboutData</field>
    <field name="text">Performs a deep copy other object to copy</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::organizationDomain</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#aaa56436ef846cbbf9fec724851bbec6a</field>
    <field name="keywords">organizationDomain KAboutData::organizationDomain KAboutData</field>
    <field name="text">Used by the automatic registration to D-Bus done by KApplication and KUniqueApplication</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::otherText</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#af032c92592ba393da07aa8ec25d0f3bf</field>
    <field name="keywords">otherText KAboutData::otherText KAboutData</field>
    <field name="text">the free form text translated Can be QString() if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::processCommandLine</field>
    <field name="args">(QCommandLineParser *parser)</field>
    <field name="url">classKAboutData.html#ad47a01ccae0fdf19b333b11fc03573fe</field>
    <field name="keywords">processCommandLine KAboutData::processCommandLine KAboutData</field>
    <field name="text">setupCommandLine()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::productName</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#a8a3a6979092a41ad86b969202c7d70ac</field>
    <field name="keywords">productName KAboutData::productName KAboutData</field>
    <field name="text">By default it returns componentName() otherwise the one which is set with setProductName() the product name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::programIconName</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#a4aa93c41d57604e3f65d5e69b26b000a</field>
    <field name="keywords">programIconName KAboutData::programIconName KAboutData</field>
    <field name="text">The default value is componentName() the program s icon name This is mostly for compatibility given that setProgramIconName is deprecated</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::programLogo</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#a01c6dfc2ddf420b8292814bc6a5ea525</field>
    <field name="keywords">programLogo KAboutData::programLogo KAboutData</field>
    <field name="text">Because KAboutData is a core class it cannot use QImage directly so this is a QVariant containing a QImage the program logo data or a null image if there is no custom application logo defined</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setBugAddress</field>
    <field name="args">(const QByteArray &amp;bugAddress)</field>
    <field name="url">classKAboutData.html#a81a6f83d178ba07ea4c4a1abe3e5c04b</field>
    <field name="keywords">setBugAddress KAboutData::setBugAddress KAboutData</field>
    <field name="text">bugAddress The bug report email address string This defaults to the kde.org bug system</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setComponentName</field>
    <field name="args">(const QString &amp;componentName)</field>
    <field name="url">classKAboutData.html#afd9e0914e32912ac5eadbe42ab43e57e</field>
    <field name="keywords">setComponentName KAboutData::setComponentName KAboutData</field>
    <field name="text">componentName The application or plugin name Example</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setCopyrightStatement</field>
    <field name="args">(const QString &amp;copyrightStatement)</field>
    <field name="url">classKAboutData.html#a317e0671c2306f032e85e6f6c00a33d4</field>
    <field name="keywords">setCopyrightStatement KAboutData::setCopyrightStatement KAboutData</field>
    <field name="text">copyrightStatement A copyright statement that can look like this i18n The string specified here is taken verbatim the author information from addAuthor is not used</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setCustomAuthorText</field>
    <field name="args">(const QString &amp;plainText, const QString &amp;richText)</field>
    <field name="url">classKAboutData.html#ac758e82b5f5dc2aabbd36bdd0813fc74</field>
    <field name="keywords">setCustomAuthorText KAboutData::setCustomAuthorText KAboutData</field>
    <field name="text">plainText The plain text richText The rich text Setting both to parameters to QString() will cause no message to be displayed at all Call unsetCustomAuthorText() to revert to the default message</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setDesktopFileName</field>
    <field name="args">(const QString &amp;desktopFileName)</field>
    <field name="url">classKAboutData.html#a112d2fc20c31e7847995930e030cc67b</field>
    <field name="keywords">setDesktopFileName KAboutData::setDesktopFileName KAboutData</field>
    <field name="text">This is the file name without the full path and without extension of the desktop entry that represents this application according to the freedesktop desktop entry specification e.g A default desktop file name is constructed when the KAboutData object is created using the reverse domain name of the organizationDomain() and the componentName() Call this method to override the default name or if you call setOrganizationDomain() or setComponentName() The desktop file name can also be passed to the application at runtime through the desktopfile command line option which is added by setupCommandLine(QCommandLineParser*) This is useful if an application supports multiple desktop files with different runtime settings desktopFileName The desktop file name of this application desktopFileName() organizationDomain() componentName() setupCommandLine(QCommandLineParser*) 5.16</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setDisplayName</field>
    <field name="args">(const QString &amp;displayName)</field>
    <field name="url">classKAboutData.html#aab4be60aae3e3658f51e7ae665d91755</field>
    <field name="keywords">setDisplayName KAboutData::setDisplayName KAboutData</field>
    <field name="text">displayName The display name This string should be translated Example i18n</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setHomepage</field>
    <field name="args">(const QString &amp;homepage)</field>
    <field name="url">classKAboutData.html#a0ff4ebd9377e139073bee4d2c93c794e</field>
    <field name="keywords">setHomepage KAboutData::setHomepage KAboutData</field>
    <field name="text">homepage The program homepage string Start the address with is correct but is not</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setLicense</field>
    <field name="args">(KAboutLicense::LicenseKey licenseKey)</field>
    <field name="url">classKAboutData.html#af9ccd07ba2f178adfdb02873cf3318c0</field>
    <field name="keywords">setLicense KAboutData::setLicense KAboutData</field>
    <field name="text">licenseKey The license identifier addLicenseText setLicenseText setLicenseTextFile</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setLicenseText</field>
    <field name="args">(const QString &amp;license)</field>
    <field name="url">classKAboutData.html#a03a73d5b313c927fd9ae7a8d587d3e5a</field>
    <field name="keywords">setLicenseText KAboutData::setLicenseText KAboutData</field>
    <field name="text">Example license The license text</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setLicenseTextFile</field>
    <field name="args">(const QString &amp;file)</field>
    <field name="url">classKAboutData.html#a213b34282dbf73e1a3ec216452393eb9</field>
    <field name="keywords">setLicenseTextFile KAboutData::setLicenseTextFile KAboutData</field>
    <field name="text">The file format has to be plain text in an encoding compatible to the locale file Path to the file in the local filesystem containing the license text</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setOcsProvider</field>
    <field name="args">(const QString &amp;providerUrl)</field>
    <field name="url">classKAboutData.html#a64b2d5eff391d5584bbe02e585030e45</field>
    <field name="keywords">setOcsProvider KAboutData::setOcsProvider KAboutData</field>
    <field name="text">A provider file must be available for the chosen provider Use this if you need to override the default provider If this method is not used all the KAboutPerson OCS usernames will be used with the openDesktop.org entry from the default provider file providerUrl The provider URL as defined in the provider file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setOrganizationDomain</field>
    <field name="args">(const QByteArray &amp;domain)</field>
    <field name="url">classKAboutData.html#acc95b680a01e00753e25b71d48e4fc9c</field>
    <field name="keywords">setOrganizationDomain KAboutData::setOrganizationDomain KAboutData</field>
    <field name="text">The domain is set to kde.org by default or the domain of the homePageAddress constructor argument if set Make sure to call setOrganizationDomain if your product is developed out of the kde.org version-control system Used by the automatic registration to D-Bus done by KApplication and KUniqueApplication IMPORTANT if the organization domain is set the desktop file that describes your application should have an entry like X-DBUS-ServiceName reversed_domain.kmyapp For instance kwrite passes as the homePageAddress so it needs X-DBUS-ServiceName org.kate in its kwrite.desktop file domain the domain name for instance kde.org koffice.org kdevelop.org etc</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setOtherText</field>
    <field name="args">(const QString &amp;otherText)</field>
    <field name="url">classKAboutData.html#abea5478712f4352f49a5944e0d8cbd45</field>
    <field name="keywords">setOtherText KAboutData::setOtherText KAboutData</field>
    <field name="text">otherText Some free form text that can contain any kind of information The text can contain newlines This string should be translated</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setProductName</field>
    <field name="args">(const QByteArray &amp;name)</field>
    <field name="url">classKAboutData.html#a0167de5a0565e61e57e8f6ee7dcce71b</field>
    <field name="keywords">setProductName KAboutData::setProductName KAboutData</field>
    <field name="text">By default it s the componentName but you can overwrite it here to provide support for special components e.g in the form product/component such as kontact/summary name The name of product</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setProgramIconName</field>
    <field name="args">(const QString &amp;iconName)</field>
    <field name="url">classKAboutData.html#a060e442676a20877806cbf5abf09af93</field>
    <field name="keywords">setProgramIconName KAboutData::setProgramIconName KAboutData</field>
    <field name="text">This method used to set the icon name but this is no longer possible in KDE Frameworks 5 because KCoreAddons does not depend on QtGui iconName name of the icon Example programIconName() since 5.2 use QApplication::setWindowIcon(QIcon::fromTheme()) instead</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setProgramLogo</field>
    <field name="args">(const QVariant &amp;image)</field>
    <field name="url">classKAboutData.html#a6a51b8a75e207c1b790d16d28e77c0b4</field>
    <field name="keywords">setProgramLogo KAboutData::setProgramLogo KAboutData</field>
    <field name="text">Use this if you need to have an application logo in AboutData other than the application icon Because KAboutData is a core class it cannot use QImage directly so this is a QVariant that should contain a QImage image logo image programLogo()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setShortDescription</field>
    <field name="args">(const QString &amp;shortDescription)</field>
    <field name="url">classKAboutData.html#a0681ccd1ab9cdffe7d05e6e50e07a7e1</field>
    <field name="keywords">setShortDescription KAboutData::setShortDescription KAboutData</field>
    <field name="text">shortDescription The program description This string should be translated Example i18n</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setTranslator</field>
    <field name="args">(const QString &amp;name, const QString &amp;emailAddress)</field>
    <field name="url">classKAboutData.html#a9a0a3e87cede16d6bb2e96d5bc5e5d4b</field>
    <field name="keywords">setTranslator KAboutData::setTranslator KAboutData</field>
    <field name="text">The canonical use with the ki18n framework is If you are using a KMainWindow this is done for you automatically The name and emailAddress are treated as lists separated with If the strings are empty or respectively they will be ignored name the name(s) of the translator(s) emailAddress the email address(es) of the translator(s) KAboutTranslator</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setupCommandLine</field>
    <field name="args">(QCommandLineParser *parser)</field>
    <field name="url">classKAboutData.html#afaf16b9be9deacfe10669219c50f2b43</field>
    <field name="keywords">setupCommandLine KAboutData::setupCommandLine KAboutData</field>
    <field name="text">Additionally it will set the description to the command line parser will add the help option and if the QApplication has a version set e.g via KAboutData::setApplicationData it will also add the version option Since 5.16 it also adds an option to set the desktop file name true if adding the options was successful otherwise returns false processCommandLine()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setVersion</field>
    <field name="args">(const QByteArray &amp;version)</field>
    <field name="url">classKAboutData.html#abdbaf4044a9ec7363f0a975f75287d66</field>
    <field name="keywords">setVersion KAboutData::setVersion KAboutData</field>
    <field name="text">version The program version</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::shortDescription</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#a7bbc280f230c0caf606baaea24487e56</field>
    <field name="keywords">shortDescription KAboutData::shortDescription KAboutData</field>
    <field name="text">the short description translated Can be QString() if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::translators</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#aac21ca1a260db2a015b5b4432c565325</field>
    <field name="keywords">translators KAboutData::translators KAboutData</field>
    <field name="text">translators information list of persons</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::unsetCustomAuthorText</field>
    <field name="args">()</field>
    <field name="url">classKAboutData.html#ad98ce61ca02148742c48b4da21359d0d</field>
    <field name="keywords">unsetCustomAuthorText KAboutData::unsetCustomAuthorText KAboutData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::version</field>
    <field name="args">() const</field>
    <field name="url">classKAboutData.html#aa07c5ebb13e890bd6da1a44ceb94111e</field>
    <field name="keywords">version KAboutData::version KAboutData</field>
    <field name="text">the version string</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::aboutTranslationTeam</field>
    <field name="args">()</field>
    <field name="url">classKAboutData.html#a1926165cd3fbb53bfe3e5c5abc98e9ec</field>
    <field name="keywords">aboutTranslationTeam KAboutData::aboutTranslationTeam KAboutData</field>
    <field name="text">a message about the translation team</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::applicationData</field>
    <field name="args">()</field>
    <field name="url">classKAboutData.html#afa4023328d0c9a8e2ad203d33e2c046e</field>
    <field name="keywords">applicationData KAboutData::applicationData KAboutData</field>
    <field name="text">This contains information such as authors license etc provided that setApplicationData has been called before If not called before the returned KAboutData will be initialized from the equivalent properties of QCoreApplication and its subclasses if an instance of that already exists For the list of such properties see setApplicationData before 5.22 limited to QCoreApplication::applicationName setApplicationData</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::fromPluginMetaData</field>
    <field name="args">(const KPluginMetaData &amp;plugin)</field>
    <field name="url">classKAboutData.html#a5e4b50d32203838fb0bbcac2df2841e6</field>
    <field name="keywords">fromPluginMetaData KAboutData::fromPluginMetaData KAboutData</field>
    <field name="text">5.18</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::pluginData</field>
    <field name="args">(const QString &amp;componentName)</field>
    <field name="url">classKAboutData.html#ac95006f6c2df7b709573fef6e6a22d08</field>
    <field name="keywords">pluginData KAboutData::pluginData KAboutData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::registerPluginData</field>
    <field name="args">(const KAboutData &amp;aboutData)</field>
    <field name="url">classKAboutData.html#a11b9f6ec6fe63245618e4d6c167752e2</field>
    <field name="keywords">registerPluginData KAboutData::registerPluginData KAboutData</field>
    <field name="text">Call this from the constructor of the plugin This will register the plugin s aboutData under the component name that was set in aboutData</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutData::setApplicationData</field>
    <field name="args">(const KAboutData &amp;aboutData)</field>
    <field name="url">classKAboutData.html#abc5d31f414d19744ff0092112d411bcb</field>
    <field name="keywords">setApplicationData KAboutData::setApplicationData KAboutData</field>
    <field name="text">In addition to changing the result of applicationData() this initializes the equivalent properties of QCoreApplication and its subclasses with information from aboutData if an instance of that already exists Those properties are QCoreApplication::applicationName QCoreApplication::applicationVersion QCoreApplication::organizationDomain QGuiApplication::applicationDisplayName QGuiApplication::desktopFileName since 5.16 applicationData</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KAboutLicense</field>
    <field name="url">classKAboutLicense.html</field>
    <field name="keywords">KAboutLicense</field>
    <field name="text">The license can be one of some predefined one given as text or one that can be loaded from a file This class is used in the KAboutData class Explicitly creating a KAboutLicense object is not possible If the license is wanted for a KDE component having KAboutData object use KAboutData::licenses() to get the licenses for that component If the license is for a non-code resource and given by a keyword e.g in desktop files try using KAboutLicense::byKeyword()</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KAboutLicense::LicenseKey</field>
    <field name="url">classKAboutLicense.html#a29386ce80267871552aedd21d9ce6bbb</field>
    <field name="keywords">LicenseKey KAboutLicense::LicenseKey KAboutLicense</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KAboutLicense::LGPL_V2_1</field>
    <field name="url">classKAboutLicense.html#a29386ce80267871552aedd21d9ce6bbba8eafb75929aea8c9424127904a828534</field>
    <field name="keywords">LGPL_V2_1 KAboutLicense::LGPL_V2_1 KAboutLicense</field>
    <field name="text">5.25</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KAboutLicense::NameFormat</field>
    <field name="url">classKAboutLicense.html#a5b6fa1d92fe548da1d96dc8c1e468d56</field>
    <field name="keywords">NameFormat KAboutLicense::NameFormat KAboutLicense</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutLicense::KAboutLicense</field>
    <field name="args">(const KAboutLicense &amp;other)</field>
    <field name="url">classKAboutLicense.html#a6e58b7ea5bad72f1d4189449ec1b3216</field>
    <field name="keywords">KAboutLicense KAboutLicense::KAboutLicense KAboutLicense</field>
    <field name="text">Performs a deep copy other object to copy</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutLicense::key</field>
    <field name="args">() const</field>
    <field name="url">classKAboutLicense.html#a0afb73ae1cc6804f307997f3e9738300</field>
    <field name="keywords">key KAboutLicense::key KAboutLicense</field>
    <field name="text">The license key as element of KAboutLicense::LicenseKey enum</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutLicense::name</field>
    <field name="args">(KAboutLicense::NameFormat formatName) const</field>
    <field name="url">classKAboutLicense.html#a60ede7481143efc1330f87e97d738678</field>
    <field name="keywords">name KAboutLicense::name KAboutLicense</field>
    <field name="text">The license name as a string</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutLicense::operator=</field>
    <field name="args">(const KAboutLicense &amp;other)</field>
    <field name="url">classKAboutLicense.html#acc4d319ec08d5d2355c5d2abf7380f2e</field>
    <field name="keywords">operator= KAboutLicense::operator= KAboutLicense</field>
    <field name="text">Performs a deep copy other object to copy</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutLicense::text</field>
    <field name="args">() const</field>
    <field name="url">classKAboutLicense.html#a33a60f55aa93dc1db945a01d13ad2523</field>
    <field name="keywords">text KAboutLicense::text KAboutLicense</field>
    <field name="text">If the licenseType argument of the constructor has been used any text defined by setLicenseText is ignored and the standard text for the chosen license will be returned The license text</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutLicense::byKeyword</field>
    <field name="args">(const QString &amp;keyword)</field>
    <field name="url">classKAboutLicense.html#a4e294b10c2b47720fa780b52a6e14171</field>
    <field name="keywords">byKeyword KAboutLicense::byKeyword KAboutLicense</field>
    <field name="text">Frequently the license data is provided by a terse keyword-like string e.g by a field in a desktop file Using this method an application can get hold of a proper KAboutLicense object providing that the license is one of the several known to KDE and use it to present more human-readable information to the user Keywords are matched by stripping all whitespace and lowercasing The known keywords correspond to the KAboutLicense::LicenseKey enumeration e.g any of would match KAboutLicense::LGPL_V3 If there is no match for the keyword a valid license object is still returned with its name and text informing about a custom license and its key equal to KAboutLicense::Custom keyword The license keyword The license object KAboutLicense::LicenseKey</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KAboutPerson</field>
    <field name="url">classKAboutPerson.html</field>
    <field name="keywords">KAboutPerson</field>
    <field name="text">It can store the person s name a task an email address and a link to a home page This class is intended for use in the KAboutData class but it can be used elsewhere as well Normally you should at least define the person s name Creating a KAboutPerson object by yourself is relatively useless but the KAboutData methods KAboutData::authors() and KAboutData::credits() return lists of KAboutPerson data objects which you can examine Example usage within a main() retrieving the list of people involved with a program and re-using data from one of them</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutPerson::KAboutPerson</field>
    <field name="args">(const QString &amp;name, const QString &amp;task=QString(), const QString &amp;emailAddress=QString(), const QString &amp;webAddress=QString(), const QString &amp;ocsUsername=QString())</field>
    <field name="url">classKAboutPerson.html#aca800cdbb2831762c9ac5ae2c03bdeb6</field>
    <field name="keywords">KAboutPerson KAboutPerson::KAboutPerson KAboutPerson</field>
    <field name="text">name The name of the person task The task of this person emailAddress The email address of the person webAddress Home page of the person ocsUsername Open Collaboration Services username of the person</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutPerson::KAboutPerson</field>
    <field name="args">(const KAboutPerson &amp;other)</field>
    <field name="url">classKAboutPerson.html#a872e84eb8fa801c72dfecdb90b3e8b78</field>
    <field name="keywords">KAboutPerson KAboutPerson::KAboutPerson KAboutPerson</field>
    <field name="text">Performs a deep copy other object to copy</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutPerson::emailAddress</field>
    <field name="args">() const</field>
    <field name="url">classKAboutPerson.html#a07e0895d10816c21422483440be600f2</field>
    <field name="keywords">emailAddress KAboutPerson::emailAddress KAboutPerson</field>
    <field name="text">the person s email address can be QString() if it has been constructed with an empty email</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutPerson::name</field>
    <field name="args">() const</field>
    <field name="url">classKAboutPerson.html#a9ae8d40273f7b589e1a6ee475f0ba8be</field>
    <field name="keywords">name KAboutPerson::name KAboutPerson</field>
    <field name="text">the person s name can be QString() if it has been constructed with an empty name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutPerson::ocsUsername</field>
    <field name="args">() const</field>
    <field name="url">classKAboutPerson.html#a49eba126d25f619d3d61845e0e897b15</field>
    <field name="keywords">ocsUsername KAboutPerson::ocsUsername KAboutPerson</field>
    <field name="text">the persons OCS username can be QString() if it has been constructed with an empty username</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutPerson::operator=</field>
    <field name="args">(const KAboutPerson &amp;other)</field>
    <field name="url">classKAboutPerson.html#afa420979815504aa6145747e87202da5</field>
    <field name="keywords">operator= KAboutPerson::operator= KAboutPerson</field>
    <field name="text">Performs a deep copy other object to copy</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutPerson::task</field>
    <field name="args">() const</field>
    <field name="url">classKAboutPerson.html#aba609646a9de91a8261e534616b6b6a9</field>
    <field name="keywords">task KAboutPerson::task KAboutPerson</field>
    <field name="text">the person s task can be QString() if it has been constructed with an empty task</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutPerson::webAddress</field>
    <field name="args">() const</field>
    <field name="url">classKAboutPerson.html#aabd16e1d566f1eb7c9b06afb6ca8bff7</field>
    <field name="keywords">webAddress KAboutPerson::webAddress KAboutPerson</field>
    <field name="text">the persons home page can be QString() if it has been constructed with an empty home page</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAboutPerson::fromJSON</field>
    <field name="args">(const QJsonObject &amp;obj)</field>
    <field name="url">classKAboutPerson.html#a4337fafce6143dca42df70c9a8b2fab3</field>
    <field name="keywords">fromJSON KAboutPerson::fromJSON KAboutPerson</field>
    <field name="text">Key Accessor Name name() Email emailAddress() Task task() Website webAddress() UserName ocsUsername() The Name and Task key are translatable by using e.g a key 5.18</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KAutoSaveFile</field>
    <field name="url">classKAutoSaveFile.html</field>
    <field name="keywords">KAutoSaveFile</field>
    <field name="text">Autosave files are temporary files that applications use to store the unsaved data in a file they have open for editing KAutoSaveFile allows you to easily create and manage such files as well as to recover the unsaved data left over by a crashed or otherwise gone process Each KAutoSaveFile object is associated with one specific file that the application holds open KAutoSaveFile is also a QObject so it can be reparented to the actual opened file object so as to manage the lifetime of the temporary file Typical use consists of verifying whether stale autosave files exist for the opened file deciding whether to recover the old autosaved data if not recovering creating a KAutoSaveFile object for the opened file during normal execution of the program periodically save unsaved data into the KAutoSaveFile file KAutoSaveFile holds a lock on the autosave file so it s safe to delete the file and recreate it later Because of that disposing of stale autosave files should be done with releaseLock() No lock is held on the managed file Examples Opening a new file The function recoverFiles could loop over the list of files and do this If the file is unsaved periodically write the contents to the save file When the user saves the file the autosaved file is no longer necessary and can be removed or emptied Jacob R Rideout</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutoSaveFile::KAutoSaveFile</field>
    <field name="args">(const QUrl &amp;filename, QObject *parent=0)</field>
    <field name="url">classKAutoSaveFile.html#ae02fc2cb752540bf344707a7c76d34bb</field>
    <field name="keywords">KAutoSaveFile KAutoSaveFile::KAutoSaveFile KAutoSaveFile</field>
    <field name="text">The temporary file is not opened or created until actually needed The file filename does not have to exist for KAutoSaveFile to be constructed if it exists it will not be touched filename the filename that this KAutoSaveFile refers to parent the parent object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutoSaveFile::KAutoSaveFile</field>
    <field name="args">(QObject *parent=0)</field>
    <field name="url">classKAutoSaveFile.html#a47054f4c458454efb17fbae8c90115c0</field>
    <field name="keywords">KAutoSaveFile KAutoSaveFile::KAutoSaveFile KAutoSaveFile</field>
    <field name="text">Note that you need to call setManagedFile() before calling open() parent the parent object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutoSaveFile::~KAutoSaveFile</field>
    <field name="args">()</field>
    <field name="url">classKAutoSaveFile.html#aae63b18df5b87afbab97a43bbde214ec</field>
    <field name="keywords">KAutoSaveFile::~KAutoSaveFile KAutoSaveFile</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutoSaveFile::managedFile</field>
    <field name="args">() const</field>
    <field name="url">classKAutoSaveFile.html#a95c1d3827046819ebaf28d7c52aa7a59</field>
    <field name="keywords">managedFile KAutoSaveFile::managedFile KAutoSaveFile</field>
    <field name="text">This is the same URL that was given to setManagedFile() or the KAutoSaveFile constructor This is the name of the real file being edited by the application To get the name of the temporary file where data can be saved use fileName() after you have called open()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutoSaveFile::open</field>
    <field name="args">(OpenMode openmode) override</field>
    <field name="url">classKAutoSaveFile.html#a026a39bb0951fbcbc0a8716633e37df5</field>
    <field name="keywords">open KAutoSaveFile::open KAutoSaveFile</field>
    <field name="text">The name of the temporary file where data can be saved to will be set by this function and can be retrieved with fileName() It will not change unless releaseLock() is called No other application will attempt to edit such a file either while the lock is held openmode the mode that should be used to open the file probably QIODevice::ReadWrite true if the file could be opened locked and created false if the operation failed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutoSaveFile::releaseLock</field>
    <field name="args">()</field>
    <field name="url">classKAutoSaveFile.html#a4f4952212230600ca0597e6fc4b267da</field>
    <field name="keywords">releaseLock KAutoSaveFile::releaseLock KAutoSaveFile</field>
    <field name="text">The file name returned by fileName() will no longer be protected and can be overwritten by another application at any time To obtain a new lock call open() again This function calls remove() so the autosave temporary file will be removed too</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutoSaveFile::setManagedFile</field>
    <field name="args">(const QUrl &amp;filename)</field>
    <field name="url">classKAutoSaveFile.html#acf2d7648e881e305eb9c7b9fab2f321c</field>
    <field name="keywords">setManagedFile KAutoSaveFile::setManagedFile KAutoSaveFile</field>
    <field name="text">This should be the name of the real file being edited by the application If the file was previously set this function calls releaseLock() filename the filename that this KAutoSaveFile refers to</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutoSaveFile::allStaleFiles</field>
    <field name="args">(const QString &amp;applicationName=QString())</field>
    <field name="url">classKAutoSaveFile.html#aba2b27b275b911329d8e560fa177d617</field>
    <field name="keywords">allStaleFiles KAutoSaveFile::allStaleFiles KAutoSaveFile</field>
    <field name="text">If not given the application name is obtained from QCoreApplication so be sure to have set it correctly before calling this function See staleFiles() for information on the returned objects</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KAutoSaveFile::staleFiles</field>
    <field name="args">(const QUrl &amp;url, const QString &amp;applicationName=QString())</field>
    <field name="url">classKAutoSaveFile.html#afc3c7421945d41fb26438aba08c492ea</field>
    <field name="keywords">staleFiles KAutoSaveFile::staleFiles KAutoSaveFile</field>
    <field name="text">Returns a list of autosave files that contain autosaved data left behind by other instances of the application due to crashing or otherwise uncleanly exiting It is the application s job to determine what to do with such unsaved data Generally this is done by asking the user if he wants to see the recovered data and then allowing the user to save if he wants to If not given the application name is obtained from QCoreApplication so be sure to have set it correctly before calling this function This function returns a list of unopened KAutoSaveFile objects By calling open() on them the application will steal the lock Subsequent releaseLock() or deleting of the object will then erase the stale autosave file</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KCharMacroExpander</field>
    <field name="url">classKCharMacroExpander.html</field>
    <field name="keywords">KCharMacroExpander</field>
    <field name="text">Use this instead of the functions in the KMacroExpander namespace if speculatively pre-filling the substitution map would be too expensive See KWordMacroExpander for a sample application Oswald Buddenhagen</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCharMacroExpander::KCharMacroExpander</field>
    <field name="args">(QChar c=QLatin1Char(&apos;%&apos;))</field>
    <field name="url">classKCharMacroExpander.html#a15305042658ec4a1db1f2acbdc6b119d</field>
    <field name="keywords">KCharMacroExpander KCharMacroExpander::KCharMacroExpander KCharMacroExpander</field>
    <field name="text">c escape char indicating start of macros or QChar::null for none</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMacroExpanderBase::KMacroExpanderBase</field>
    <field name="args">(QChar c=QLatin1Char(&apos;%&apos;))</field>
    <field name="url">classKMacroExpanderBase.html#aa1b43ed6087098aad09d515be1397e87</field>
    <field name="keywords">KMacroExpanderBase KMacroExpanderBase::KMacroExpanderBase KMacroExpanderBase KMacroExpanderBase KMacroExpanderBase::KMacroExpanderBase KMacroExpanderBase KMacroExpanderBase KMacroExpanderBase::KMacroExpanderBase KMacroExpanderBase</field>
    <field name="text">c escape char indicating start of macros or QChar::null for none</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMacroExpanderBase::~KMacroExpanderBase</field>
    <field name="args">()</field>
    <field name="url">classKMacroExpanderBase.html#a89537301331c144bffa1e5b6f7e0a84c</field>
    <field name="keywords">KMacroExpanderBase::~KMacroExpanderBase KMacroExpanderBase KMacroExpanderBase::~KMacroExpanderBase KMacroExpanderBase KMacroExpanderBase::~KMacroExpanderBase KMacroExpanderBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMacroExpanderBase::escapeChar</field>
    <field name="args">() const</field>
    <field name="url">classKMacroExpanderBase.html#a2066c0167e01ca9e9004094bb3080d50</field>
    <field name="keywords">escapeChar KMacroExpanderBase::escapeChar KMacroExpanderBase escapeChar KMacroExpanderBase::escapeChar KMacroExpanderBase escapeChar KMacroExpanderBase::escapeChar KMacroExpanderBase</field>
    <field name="text">escape char indicating start of macros or QChar::null if none</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMacroExpanderBase::expandMacros</field>
    <field name="args">(QString &amp;str)</field>
    <field name="url">classKMacroExpanderBase.html#a1938a93ae6e03d517bcae5bf65a6430a</field>
    <field name="keywords">expandMacros KMacroExpanderBase::expandMacros KMacroExpanderBase expandMacros KMacroExpanderBase::expandMacros KMacroExpanderBase expandMacros KMacroExpanderBase::expandMacros KMacroExpanderBase</field>
    <field name="text">str the string in which macros are expanded in-place</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMacroExpanderBase::expandMacrosShellQuote</field>
    <field name="args">(QString &amp;str, int &amp;pos)</field>
    <field name="url">classKMacroExpanderBase.html#ada9d2fbb7d0b640ba744152b40c24b00</field>
    <field name="keywords">expandMacrosShellQuote KMacroExpanderBase::expandMacrosShellQuote KMacroExpanderBase expandMacrosShellQuote KMacroExpanderBase::expandMacrosShellQuote KMacroExpanderBase expandMacrosShellQuote KMacroExpanderBase::expandMacrosShellQuote KMacroExpanderBase</field>
    <field name="text">notes Explicitly supported shell constructs Implicitly supported shell constructs Unsupported shell constructs that will cause problems Shortened case in pat syntax Use case in pat instead The rest of the shell incl bash syntax is simply ignored as it is not expected to cause problems Note that bash contains a bug which makes macro expansion within double quoted substitutions inherently insecure For security reasons never put expandos in command line arguments that are shell commands by themselves sh foo f is taboo file f sh foo is OK Windows notes All quoting syntax supported by KShell is supported here as well Additionally command grouping via parentheses is recognized note however that the parser is much stricter about unquoted parentheses than cmd itself The rest of the cmd syntax is simply ignored as it is not expected to cause problems do not use commands that embed other commands though for is taboo str the string in which macros are expanded in-place pos the position inside the string at which parsing/substitution should start and upon exit where processing stopped false if the string could not be parsed and therefore no safe substitution was possible Note that macros will have been processed up to the point where the error occurred An unmatched closing paren or brace outside any shell construct is not an error unlike in the function below but still prematurely terminates processing</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMacroExpanderBase::expandMacrosShellQuote</field>
    <field name="args">(QString &amp;str)</field>
    <field name="url">classKMacroExpanderBase.html#a8b0d17f22e51b051e62aa94bef02f045</field>
    <field name="keywords">expandMacrosShellQuote KMacroExpanderBase::expandMacrosShellQuote KMacroExpanderBase expandMacrosShellQuote KMacroExpanderBase::expandMacrosShellQuote KMacroExpanderBase expandMacrosShellQuote KMacroExpanderBase::expandMacrosShellQuote KMacroExpanderBase</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMacroExpanderBase::setEscapeChar</field>
    <field name="args">(QChar c)</field>
    <field name="url">classKMacroExpanderBase.html#a7fab042d7696dc5fc172475cb698b99f</field>
    <field name="keywords">setEscapeChar KMacroExpanderBase::setEscapeChar KMacroExpanderBase setEscapeChar KMacroExpanderBase::setEscapeChar KMacroExpanderBase setEscapeChar KMacroExpanderBase::setEscapeChar KMacroExpanderBase</field>
    <field name="text">c escape char indicating start of macros or QChar::null if none</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCharMacroExpander::expandEscapedMacro</field>
    <field name="args">(const QString &amp;str, int pos, QStringList &amp;ret) override</field>
    <field name="url">classKCharMacroExpander.html#a07e9a0eefbe9b065eb727e268936ede3</field>
    <field name="keywords">expandEscapedMacro KCharMacroExpander::expandEscapedMacro KCharMacroExpander</field>
    <field name="text">Not to be called or reimplemented</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCharMacroExpander::expandMacro</field>
    <field name="args">(QChar chr, QStringList &amp;ret)=0</field>
    <field name="url">classKCharMacroExpander.html#ae68e0d3c326f8f024613b5af2675619f</field>
    <field name="keywords">expandMacro KCharMacroExpander::expandMacro KCharMacroExpander</field>
    <field name="text">chr the macro to expand ret return variable reference It is guaranteed to be empty when expandMacro is entered true iff chr was a recognized macro name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCharMacroExpander::expandPlainMacro</field>
    <field name="args">(const QString &amp;str, int pos, QStringList &amp;ret) override</field>
    <field name="url">classKCharMacroExpander.html#af639bc3bed306565e7498e9d788533ce</field>
    <field name="keywords">expandPlainMacro KCharMacroExpander::expandPlainMacro KCharMacroExpander</field>
    <field name="text">Not to be called or reimplemented</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KCompositeJob</field>
    <field name="url">classKCompositeJob.html</field>
    <field name="keywords">KCompositeJob</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompositeJob::KCompositeJob</field>
    <field name="args">(QObject *parent=0)</field>
    <field name="url">classKCompositeJob.html#a161696354b27b539434f04a882e17a1e</field>
    <field name="keywords">KCompositeJob KCompositeJob::KCompositeJob KCompositeJob</field>
    <field name="text">parent the parent QObject</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompositeJob::~KCompositeJob</field>
    <field name="args">()</field>
    <field name="url">classKCompositeJob.html#ae40510a2b1c43e6a81584996155ae250</field>
    <field name="keywords">KCompositeJob::~KCompositeJob KCompositeJob</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::KJob</field>
    <field name="args">(QObject *parent=0)</field>
    <field name="url">classKJob.html#abb012b5f948bb7eb479849544dd8054f</field>
    <field name="keywords">KJob KJob::KJob KJob KJob KJob::KJob KJob</field>
    <field name="text">parent the parent QObject</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::~KJob</field>
    <field name="args">()</field>
    <field name="url">classKJob.html#ae471774ad3fb512f5b52d7555fdd1a0d</field>
    <field name="keywords">KJob::~KJob KJob KJob::~KJob KJob</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::capabilities</field>
    <field name="args">() const</field>
    <field name="url">classKJob.html#a791e6ced466eed1292235bdd21dfff8b</field>
    <field name="keywords">capabilities KJob::capabilities KJob capabilities KJob::capabilities KJob</field>
    <field name="text">the capabilities that this job supports setCapabilities()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::error</field>
    <field name="args">() const</field>
    <field name="url">classKJob.html#a3ce3cc54ff80484e57dbb58b40cf1d60</field>
    <field name="keywords">error KJob::error KJob error KJob::error KJob</field>
    <field name="text">Only call this method from the slot connected to result() the error code for this job 0 if no error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::errorString</field>
    <field name="args">() const</field>
    <field name="url">classKJob.html#a8b08f9cbe5883b44355ea07618682ee8</field>
    <field name="keywords">errorString KJob::errorString KJob errorString KJob::errorString KJob</field>
    <field name="text">This provides a translated human-readable description of the error Only call if error is not 0 Subclasses should implement this to create a translated error message from the error code and error text For example a translated error message providing error() is 0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::errorText</field>
    <field name="args">() const</field>
    <field name="url">classKJob.html#adf02ea23c2bc6267a6eff6941831461f</field>
    <field name="keywords">errorText KJob::errorText KJob errorText KJob::errorText KJob</field>
    <field name="text">Only call if error is not 0 This is usually some extra data associated with the error such as a URL Use errorString() to get a human-readable translated message a string to help understand the error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::exec</field>
    <field name="args">()</field>
    <field name="url">classKJob.html#a03c768fad2f9eef7b72b068b389c42ee</field>
    <field name="keywords">exec KJob::exec KJob exec KJob::exec KJob</field>
    <field name="text">This will start a nested QEventLoop internally Nested event loop can be dangerous and can have unintended side effects you should avoid calling exec() whenever you can and use the asynchronous interface of KJob instead Should you indeed call this method you need to make sure that all callers are reentrant so that events delivered by the inner event loop don t cause non-reentrant functions to be called which usually wreaks havoc Note that the event loop started by this method does not process user input events which means your user interface will effectivly be blocked Other events like paint or network events are still being processed The advantage of not processing user input events is that the chance of accidental reentrancy is greatly reduced Still you should avoid calling this function true if the job has been executed without error false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::isAutoDelete</field>
    <field name="args">() const</field>
    <field name="url">classKJob.html#a90ac84e8528fc8e42dfbb0c0e9765ef6</field>
    <field name="keywords">isAutoDelete KJob::isAutoDelete KJob isAutoDelete KJob::isAutoDelete KJob</field>
    <field name="text">whether the job is deleted automatically after finishing</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::isSuspended</field>
    <field name="args">() const</field>
    <field name="url">classKJob.html#a536d69fefb405fc3c7a2481c1b3ddb10</field>
    <field name="keywords">isSuspended KJob::isSuspended KJob isSuspended KJob::isSuspended KJob</field>
    <field name="text">if the job was suspended suspend() resume()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::percent</field>
    <field name="args">() const</field>
    <field name="url">classKJob.html#a72ec308bdf788dd3a648eac5d960f7ee</field>
    <field name="keywords">percent KJob::percent KJob percent KJob::percent KJob</field>
    <field name="text">the overall progress of this job</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::processedAmount</field>
    <field name="args">(Unit unit) const</field>
    <field name="url">classKJob.html#a6d266550121501d9b6d24d76935ee3da</field>
    <field name="keywords">processedAmount KJob::processedAmount KJob processedAmount KJob::processedAmount KJob</field>
    <field name="text">unit the unit of the requested amount the processed size</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::setAutoDelete</field>
    <field name="args">(bool autodelete)</field>
    <field name="url">classKJob.html#ac3e70fb23e01094732d91a82ef642fcb</field>
    <field name="keywords">setAutoDelete KJob::setAutoDelete KJob setAutoDelete KJob::setAutoDelete KJob</field>
    <field name="text">If autodelete is set to false the job will not delete itself once it is finished The default for any KJob is to automatically delete itself autodelete set to false to disable automatic deletion of the job</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::setUiDelegate</field>
    <field name="args">(KJobUiDelegate *delegate)</field>
    <field name="url">classKJob.html#aeb16f4e8fc75ae98f3b4c54663b5f2fb</field>
    <field name="keywords">setUiDelegate KJob::setUiDelegate KJob setUiDelegate KJob::setUiDelegate KJob</field>
    <field name="text">If the job had another UI delegate it s automatically deleted Once attached to the job the UI delegate will be deleted with the job delegate the new UI delegate to use KJobUiDelegate</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::start</field>
    <field name="args">()=0</field>
    <field name="url">classKJob.html#ac10f2cb1cda6d32a08ad4a11e7b6bd8d</field>
    <field name="keywords">start KJob::start KJob start KJob::start KJob</field>
    <field name="text">When the job is finished result() is emitted Warning Never implement any synchronous workload in this method This method should just trigger the job startup not do any work itself It is expected to be non-blocking This is the method all subclasses need to implement It should setup and trigger the workload of the job It should not do any work itself This includes all signals and terminating the job e.g by emitResult() The workload which could be another method of the subclass is to be triggered using the event loop e.g by code like</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::totalAmount</field>
    <field name="args">(Unit unit) const</field>
    <field name="url">classKJob.html#a32d37b873aae950ed12fc99b569d8c73</field>
    <field name="keywords">totalAmount KJob::totalAmount KJob totalAmount KJob::totalAmount KJob</field>
    <field name="text">unit the unit of the requested amount the total size</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::uiDelegate</field>
    <field name="args">() const</field>
    <field name="url">classKJob.html#a8b4d4f432bb9df55edc62e24be5c1609</field>
    <field name="keywords">uiDelegate KJob::uiDelegate KJob uiDelegate KJob::uiDelegate KJob</field>
    <field name="text">the delegate attached to this job or 0 if there s no such delegate</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompositeJob::slotInfoMessage</field>
    <field name="args">(KJob *job, const QString &amp;plain, const QString &amp;rich)</field>
    <field name="url">classKCompositeJob.html#a5cf52a205c6758a48488b6a54145a323</field>
    <field name="keywords">slotInfoMessage KCompositeJob::slotInfoMessage KCompositeJob</field>
    <field name="text">job the subjob plain the info message in plain text version rich the info message in rich text version infoMessage()</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCompositeJob::slotResult</field>
    <field name="args">(KJob *job)</field>
    <field name="url">classKCompositeJob.html#aac88b6446a2d76645e53ee3236412ec1</field>
    <field name="keywords">slotResult KCompositeJob::slotResult KCompositeJob</field>
    <field name="text">Default implementation checks for errors and propagates to parent job and in all cases it calls removeSubjob job the subjob</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompositeJob::addSubjob</field>
    <field name="args">(KJob *job)</field>
    <field name="url">classKCompositeJob.html#a182383ba6b42cfe905b0b275304bf173</field>
    <field name="keywords">addSubjob KCompositeJob::addSubjob KCompositeJob</field>
    <field name="text">This has obviously to be called before the result has been emitted by the job Note that the composite job takes ownership of job job the subjob to add true if the job has been added correctly false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompositeJob::clearSubjobs</field>
    <field name="args">()</field>
    <field name="url">classKCompositeJob.html#ab5e7d0a4d494af330d6f7d472660ca54</field>
    <field name="keywords">clearSubjobs KCompositeJob::clearSubjobs KCompositeJob</field>
    <field name="text">Note that this will not delete the subjobs Ownership of the subjobs is passed on to the caller</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompositeJob::hasSubjobs</field>
    <field name="args">() const</field>
    <field name="url">classKCompositeJob.html#a3f5f2cb4fe811e75a6c03b32bd3eddfb</field>
    <field name="keywords">hasSubjobs KCompositeJob::hasSubjobs KCompositeJob</field>
    <field name="text">true if we still have subjobs running false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompositeJob::removeSubjob</field>
    <field name="args">(KJob *job)</field>
    <field name="url">classKCompositeJob.html#aa770b0c23e78973466283bebfb317cd7</field>
    <field name="keywords">removeSubjob KCompositeJob::removeSubjob KCompositeJob</field>
    <field name="text">The ownership of job is passed on to the caller job the subjob to remove true if the job has been removed correctly false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCompositeJob::subjobs</field>
    <field name="args">() const</field>
    <field name="url">classKCompositeJob.html#a40abab32c60dbce144beff9ed39e716e</field>
    <field name="keywords">subjobs KCompositeJob::subjobs KCompositeJob</field>
    <field name="text">the full list of sub jobs</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::doKill</field>
    <field name="args">()</field>
    <field name="url">classKJob.html#a530a7e84c5a68a9b418247df54a94789</field>
    <field name="keywords">doKill KJob::doKill KJob doKill KJob::doKill KJob</field>
    <field name="text">This simply kills the job no error reporting or job deletion should be involved true if the operation is supported and succeeded false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::doResume</field>
    <field name="args">()</field>
    <field name="url">classKJob.html#ac31545b7f0b1ddca8f8c06e25c7ebce3</field>
    <field name="keywords">doResume KJob::doResume KJob doResume KJob::doResume KJob</field>
    <field name="text">true if the operation is supported and succeeded false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::doSuspend</field>
    <field name="args">()</field>
    <field name="url">classKJob.html#a579209138987392ce0ec736c339bacbb</field>
    <field name="keywords">doSuspend KJob::doSuspend KJob doSuspend KJob::doSuspend KJob</field>
    <field name="text">true if the operation is supported and succeeded false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::emitPercent</field>
    <field name="args">(qulonglong processedAmount, qulonglong totalAmount)</field>
    <field name="url">classKJob.html#abc2e9a1b27f3d07e717faf34565fed21</field>
    <field name="keywords">emitPercent KJob::emitPercent KJob emitPercent KJob::emitPercent KJob</field>
    <field name="text">Emits the percent signal if bigger than previous value after calculating it from the parameters processedAmount the processed amount totalAmount the total amount percent()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::emitResult</field>
    <field name="args">()</field>
    <field name="url">classKJob.html#a2cbae3c87fa7dddd25e3ab528e94ceee</field>
    <field name="keywords">emitResult KJob::emitResult KJob emitResult KJob::emitResult KJob</field>
    <field name="text">It first notifies the observers to hide the progress for this job using the finished() signal Deletes this job using deleteLater() result() finished()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::emitSpeed</field>
    <field name="args">(unsigned long speed)</field>
    <field name="url">classKJob.html#aeebe1bfd536b766fb92a7d23e5d343a6</field>
    <field name="keywords">emitSpeed KJob::emitSpeed KJob emitSpeed KJob::emitSpeed KJob</field>
    <field name="text">Emits the speed signal and starts the timer for removing that info speed the speed in bytes/s</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::setCapabilities</field>
    <field name="args">(Capabilities capabilities)</field>
    <field name="url">classKJob.html#a9eb35f34df97da45874a8e30b38edcf4</field>
    <field name="keywords">setCapabilities KJob::setCapabilities KJob setCapabilities KJob::setCapabilities KJob</field>
    <field name="text">capabilities are the capabilities supported by this job capabilities()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::setError</field>
    <field name="args">(int errorCode)</field>
    <field name="url">classKJob.html#a859926d61ecfde11a13410abab4790a8</field>
    <field name="keywords">setError KJob::setError KJob setError KJob::setError KJob</field>
    <field name="text">It should be called when an error is encountered in the job just before calling emitResult() You should define an anonymous enum of error codes with values starting at KJob::UserDefinedError and use those For example errorCode the error code emitResult()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::setErrorText</field>
    <field name="args">(const QString &amp;errorText)</field>
    <field name="url">classKJob.html#a08849b10c05076e867ced5727ed35930</field>
    <field name="keywords">setErrorText KJob::setErrorText KJob setErrorText KJob::setErrorText KJob</field>
    <field name="text">It should be called when an error is encountered in the job just before calling emitResult() Provides extra information about the error that cannot be determined directly from the error code For example a URL or filename This string is not normally translatable errorText the error text emitResult() errorString() setError()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::setPercent</field>
    <field name="args">(unsigned long percentage)</field>
    <field name="url">classKJob.html#a7177fa35785b66e749f444148016afa5</field>
    <field name="keywords">setPercent KJob::setPercent KJob setPercent KJob::setPercent KJob</field>
    <field name="text">The percent() signal is emitted if the value changed percentage the new overall progress</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::setProcessedAmount</field>
    <field name="args">(Unit unit, qulonglong amount)</field>
    <field name="url">classKJob.html#adf19c8899d3217bae6d05ad8e493e8ca</field>
    <field name="keywords">setProcessedAmount KJob::setProcessedAmount KJob setProcessedAmount KJob::setProcessedAmount KJob</field>
    <field name="text">The processedAmount() and percent() signals are emitted if the values changed The percent() signal is emitted only for the progress unit unit the unit of the new processed amount amount the new processed amount</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJob::setTotalAmount</field>
    <field name="args">(Unit unit, qulonglong amount)</field>
    <field name="url">classKJob.html#a261739ac0eafa4a7e80098fd0c6e9e61</field>
    <field name="keywords">setTotalAmount KJob::setTotalAmount KJob setTotalAmount KJob::setTotalAmount KJob</field>
    <field name="text">The totalSize() and percent() signals are emitted if the values changed The percent() signal is emitted only for the progress unit unit the unit of the new total amount amount the new total amount</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KJob::description</field>
    <field name="args">(KJob *job, const QString &amp;title, const QPair&lt; QString, QString &gt; &amp;field1=QPair&lt; QString, QString &gt;(), const QPair&lt; QString, QString &gt; &amp;field2=QPair&lt; QString, QString &gt;())</field>
    <field name="url">classKJob.html#a145f7a7648f06ef79cf526a2c6125b88</field>
    <field name="keywords">description KJob::description KJob description KJob::description KJob</field>
    <field name="text">A description has a title and two optional fields which can be used to complete the description Examples of titles are etc The fields of the description can be with an URL and with an URL for a description job the job that emitted this signal title the general description of the job field1 first field localized name and value field2 second field localized name and value</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KJob::finished</field>
    <field name="args">(KJob *job)</field>
    <field name="url">classKJob.html#a67b6c63fc5eb7bd31234960e7a5487d9</field>
    <field name="keywords">finished KJob::finished KJob finished KJob::finished KJob</field>
    <field name="text">It is used to notify observers that the job is terminated and that progress can be hidden This is a private signal it can t be emitted directly by subclasses of KJob use emitResult() instead In general to be notified of a job s completion client code should connect to result() rather than finished() so that kill(Quietly) is indeed quiet However if you store a list of jobs and they might get killed silently then you must connect to this instead of result() to avoid dangling pointers in your list job the job that emitted this signal result</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KJob::infoMessage</field>
    <field name="args">(KJob *job, const QString &amp;plain, const QString &amp;rich=QString())</field>
    <field name="url">classKJob.html#afed68ccf8ff292cb95ca8d286080cc61</field>
    <field name="keywords">infoMessage KJob::infoMessage KJob infoMessage KJob::infoMessage KJob</field>
    <field name="text">Examples of message are etc job the job that emitted this signal plain the info message rich the rich text version of the message or QString() is none is available</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KJob::percent</field>
    <field name="args">(KJob *job, unsigned long percent)</field>
    <field name="url">classKJob.html#a91803b47fc242540d60e0502e3175a56</field>
    <field name="keywords">percent KJob::percent KJob percent KJob::percent KJob</field>
    <field name="text">see KProgressBar Note that this signal is not emitted for finished jobs This is a private signal it can t be emitted directly by subclasses of KJob use emitPercent() setPercent() setTotalAmount() or setProcessedAmount() instead job the job that emitted this signal percent the percentage</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KJob::processedAmount</field>
    <field name="args">(KJob *job, KJob::Unit unit, qulonglong amount)</field>
    <field name="url">classKJob.html#a9a199bc3ad5a94b721231218c13fc9c6</field>
    <field name="keywords">processedAmount KJob::processedAmount KJob processedAmount KJob::processedAmount KJob</field>
    <field name="text">The unit of this amount is sent too It can be emitted several times if the job manages several different units This is a private signal it can t be emitted directly by subclasses of KJob use setProcessedAmount() instead job the job that emitted this signal unit the unit of the processed amount amount the processed amount</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KJob::processedSize</field>
    <field name="args">(KJob *job, qulonglong size)</field>
    <field name="url">classKJob.html#a457d296aab2ef3db2ee9e1ac5d0a5edb</field>
    <field name="keywords">processedSize KJob::processedSize KJob processedSize KJob::processedSize KJob</field>
    <field name="text">This is a private signal it can t be emitted directly by subclasses of KJob use setProcessedAmount() instead job the job that emitted this signal size the processed size</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KJob::result</field>
    <field name="args">(KJob *job)</field>
    <field name="url">classKJob.html#a4df53d071366b7c2702551a415ed5bd7</field>
    <field name="keywords">result KJob::result KJob result KJob::result KJob</field>
    <field name="text">Use error to know if the job was finished with error This is a private signal it can t be emitted directly by subclasses of KJob use emitResult() instead Please connect to this signal instead of finished job the job that emitted this signal kill</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KJob::resumed</field>
    <field name="args">(KJob *job)</field>
    <field name="url">classKJob.html#a00c91c85bcf63d93b5a1ae6721f4d468</field>
    <field name="keywords">resumed KJob::resumed KJob resumed KJob::resumed KJob</field>
    <field name="text">This is a private signal it can t be emitted directly by subclasses of KJob job the job that emitted this signal</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KJob::speed</field>
    <field name="args">(KJob *job, unsigned long speed)</field>
    <field name="url">classKJob.html#af2f7afa9087dee468bd61f5f76c705ad</field>
    <field name="keywords">speed KJob::speed KJob speed KJob::speed KJob</field>
    <field name="text">This is a private signal it can t be emitted directly by subclasses of KJob use emitSpeed() instead job the job that emitted this signal speed the speed in bytes/s</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KJob::suspended</field>
    <field name="args">(KJob *job)</field>
    <field name="url">classKJob.html#aafbecd4ee151a9a7b51b0420c75934c0</field>
    <field name="keywords">suspended KJob::suspended KJob suspended KJob::suspended KJob</field>
    <field name="text">This is a private signal it can t be emitted directly by subclasses of KJob job the job that emitted this signal</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KJob::totalAmount</field>
    <field name="args">(KJob *job, KJob::Unit unit, qulonglong amount)</field>
    <field name="url">classKJob.html#ab9c97d2776629fb7fb6479f798adaf98</field>
    <field name="keywords">totalAmount KJob::totalAmount KJob totalAmount KJob::totalAmount KJob</field>
    <field name="text">The unit of this amount is sent too It can be emitted several times if the job manages several different units This is a private signal it can t be emitted directly by subclasses of KJob use setTotalAmount() instead job the job that emitted this signal unit the unit of the total amount amount the total amount</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KJob::totalSize</field>
    <field name="args">(KJob *job, qulonglong size)</field>
    <field name="url">classKJob.html#a9ddfc488b9930e6b8758d681335ff31f</field>
    <field name="keywords">totalSize KJob::totalSize KJob totalSize KJob::totalSize KJob</field>
    <field name="text">This is a private signal it can t be emitted directly by subclasses of KJob use setTotalAmount() instead job the job that emitted this signal size the total size</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KJob::warning</field>
    <field name="args">(KJob *job, const QString &amp;plain, const QString &amp;rich=QString())</field>
    <field name="url">classKJob.html#a95959afefa47852b6fd35c7fb9f3288d</field>
    <field name="keywords">warning KJob::warning KJob warning KJob::warning KJob</field>
    <field name="text">job the job that emitted this signal plain the warning message rich the rich text version of the message or QString() is none is available</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KJob::kill</field>
    <field name="args">(KillVerbosity verbosity=Quietly)</field>
    <field name="url">classKJob.html#a4cf31ed005f4abf01c478fd26fba03ee</field>
    <field name="keywords">kill KJob::kill KJob kill KJob::kill KJob</field>
    <field name="text">This kills and deletes the job verbosity if equals to EmitResult Job will emit signal result and ask uiserver to close the progress window verbosity is set to EmitResult for subjobs Whether applications should call with Quietly or EmitResult depends on whether they rely on result being emitted or not Please notice that if verbosity is set to Quietly signal result will NOT be emitted true if the operation is supported and succeeded false otherwise</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KJob::resume</field>
    <field name="args">()</field>
    <field name="url">classKJob.html#a0ab533129a803a7f565a6a0ab9ccc7fc</field>
    <field name="keywords">resume KJob::resume KJob resume KJob::resume KJob</field>
    <field name="text">true if the operation is supported and succeeded false otherwise</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KJob::suspend</field>
    <field name="args">()</field>
    <field name="url">classKJob.html#a1aa81820372970fad514d596a5f59472</field>
    <field name="keywords">suspend KJob::suspend KJob suspend KJob::suspend KJob</field>
    <field name="text">The job should be kept in a state in which it is possible to resume it true if the operation is supported and succeeded false otherwise</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Kdelibs4ConfigMigrator</field>
    <field name="url">classKdelibs4ConfigMigrator.html</field>
    <field name="keywords">Kdelibs4ConfigMigrator</field>
    <field name="text">Class for migration of config files and ui file from kdelibs4 5.2</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Kdelibs4ConfigMigrator::Kdelibs4ConfigMigrator</field>
    <field name="args">(const QString &amp;appName)</field>
    <field name="url">classKdelibs4ConfigMigrator.html#a343a8f8ab35f7ecf23c497bd149c6da5</field>
    <field name="keywords">Kdelibs4ConfigMigrator Kdelibs4ConfigMigrator::Kdelibs4ConfigMigrator Kdelibs4ConfigMigrator</field>
    <field name="text">appName The application name which is used for the directory containing the ui files</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Kdelibs4ConfigMigrator::~Kdelibs4ConfigMigrator</field>
    <field name="args">()</field>
    <field name="url">classKdelibs4ConfigMigrator.html#a6404e25fff4140e081eeb00cfd0fa29a</field>
    <field name="keywords">Kdelibs4ConfigMigrator::~Kdelibs4ConfigMigrator Kdelibs4ConfigMigrator</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Kdelibs4ConfigMigrator::migrate</field>
    <field name="args">()</field>
    <field name="url">classKdelibs4ConfigMigrator.html#ada3289c46de51111fdc2791a919d9de6</field>
    <field name="keywords">migrate Kdelibs4ConfigMigrator::migrate Kdelibs4ConfigMigrator</field>
    <field name="text">Returns true if the migration happened It will return false if there was nothing to migrate no KDEHOME This return value is unrelated to error handling It is just a way to skip anything else related to migration on a clean system by writing</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Kdelibs4ConfigMigrator::setConfigFiles</field>
    <field name="args">(const QStringList &amp;configFileNameList)</field>
    <field name="url">classKdelibs4ConfigMigrator.html#aef5d6a4cbe5c00b689aa6f6c663e9b90</field>
    <field name="keywords">setConfigFiles Kdelibs4ConfigMigrator::setConfigFiles Kdelibs4ConfigMigrator</field>
    <field name="text">configFileNameList list of config files</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Kdelibs4ConfigMigrator::setUiFiles</field>
    <field name="args">(const QStringList &amp;uiFileNameList)</field>
    <field name="url">classKdelibs4ConfigMigrator.html#abc298e8c9fb3b553fbf6116ed7991d63</field>
    <field name="keywords">setUiFiles Kdelibs4ConfigMigrator::setUiFiles Kdelibs4ConfigMigrator</field>
    <field name="text">uiFileNameList list of ui files</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Kdelibs4Migration</field>
    <field name="url">classKdelibs4Migration.html</field>
    <field name="keywords">Kdelibs4Migration</field>
    <field name="text">typically kde Distributions that built kdelibs4 with a custom KDE home with the CMake option _KDE_DEFAULT_HOME_POSTFIX should use the same option here with _KDE4_DEFAULT_HOME_POSTFIX The purpose is to be able to let the application migrate these files to the KF5/Qt5 location for these files QStandardPaths Files from the resource as saved by KConfig should be migrated to QStandardPaths::writableLocation(QStandardPaths::ConfigLocation) Files from the resource should be migrated to a subdirectory of QStandardPaths::writableLocation(QStandardPaths::DataLocation) The following resources are supported config data services servicetypes wallpaper emoticons templates Use kdeHome() for anything else Class for migration of config files from kdelibs4 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Kdelibs4Migration::Kdelibs4Migration</field>
    <field name="args">()</field>
    <field name="url">classKdelibs4Migration.html#ae0f19609284c8b645ca0d96db7ad90d8</field>
    <field name="keywords">Kdelibs4Migration Kdelibs4Migration::Kdelibs4Migration Kdelibs4Migration</field>
    <field name="text">The constructor attempts to locate the user s from kdelibs4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Kdelibs4Migration::~Kdelibs4Migration</field>
    <field name="args">()</field>
    <field name="url">classKdelibs4Migration.html#a3427c5bfcfd543744d4c6b595c49a92e</field>
    <field name="keywords">Kdelibs4Migration::~Kdelibs4Migration Kdelibs4Migration</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Kdelibs4Migration::kdeHome</field>
    <field name="args">() const</field>
    <field name="url">classKdelibs4Migration.html#a0e56f773ce324dad7efd6db14d805941</field>
    <field name="keywords">kdeHome Kdelibs4Migration::kdeHome Kdelibs4Migration</field>
    <field name="text">Don t use this method if you can use locateLocal or saveLocation 5.13</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Kdelibs4Migration::kdeHomeFound</field>
    <field name="args">() const</field>
    <field name="url">classKdelibs4Migration.html#a7dde9ab228d87337cabc82d0949f79f3</field>
    <field name="keywords">kdeHomeFound Kdelibs4Migration::kdeHomeFound Kdelibs4Migration</field>
    <field name="text">Otherwise there is nothing to migrate</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Kdelibs4Migration::locateLocal</field>
    <field name="args">(const char *type, const QString &amp;filename) const</field>
    <field name="url">classKdelibs4Migration.html#a2580965205c7d78d5025e5c724d991f6</field>
    <field name="keywords">locateLocal Kdelibs4Migration::locateLocal Kdelibs4Migration</field>
    <field name="text">This API is inspired by KStandardDirs::locateLocal for ease of porting type The type of wanted resource filename A relative filename of the resource</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Kdelibs4Migration::saveLocation</field>
    <field name="args">(const char *type, const QString &amp;suffix=QString()) const</field>
    <field name="url">classKdelibs4Migration.html#a5488049a3c30498ab9aaa449313c2271</field>
    <field name="keywords">saveLocation Kdelibs4Migration::saveLocation Kdelibs4Migration</field>
    <field name="text">type The type of location to return suffix A subdirectory name</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KDirWatch</field>
    <field name="url">classKDirWatch.html</field>
    <field name="keywords">KDirWatch</field>
    <field name="text">Watch directories and files for changes The watched directories or files don t have to exist yet When a watched directory is changed i.e when files therein are created or deleted KDirWatch will emit the signal dirty() When a watched but previously not existing directory gets created KDirWatch will emit the signal created() When a watched directory gets deleted KDirWatch will emit the signal deleted() The directory is still watched for new creation When a watched file is changed i.e attributes changed or written to KDirWatch will emit the signal dirty() Scanning of particular directories or files can be stopped temporarily and restarted The whole class can be stopped and restarted Directories and files can be added/removed from the list in any state The implementation uses the INOTIFY functionality on LINUX Otherwise the FAM service is used when available As a last resort a regular polling for change of modification times is done the polling interval is a global config option DirWatch/PollInterval and DirWatch/NFSPollInterval for NFS mounted directories The choice of implementation can be adjusted by the user with the key DirWatch PreferredMethod Fam|Stat|QFSWatch|inotify self() Sven Radej in 1998</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KDirWatch::WatchMode</field>
    <field name="url">classKDirWatch.html#a9079cb1c760811c098e8810d3189a2c7</field>
    <field name="keywords">WatchMode KDirWatch::WatchMode KDirWatch</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KDirWatch::WatchDirOnly</field>
    <field name="url">classKDirWatch.html#a9079cb1c760811c098e8810d3189a2c7a40a8e2adc506f2e46bbcbbe47b4e6d1c</field>
    <field name="keywords">WatchDirOnly KDirWatch::WatchDirOnly KDirWatch</field>
    <field name="text">Watch just the specified directory</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KDirWatch::WatchFiles</field>
    <field name="url">classKDirWatch.html#a9079cb1c760811c098e8810d3189a2c7aa576e33934ffda26a95f6e010c5dc49b</field>
    <field name="keywords">WatchFiles KDirWatch::WatchFiles KDirWatch</field>
    <field name="text">Watch also all files contained by the directory</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KDirWatch::WatchSubDirs</field>
    <field name="url">classKDirWatch.html#a9079cb1c760811c098e8810d3189a2c7a08f0bc40496d27b9ed78c2d3dd7e12bf</field>
    <field name="keywords">WatchSubDirs KDirWatch::WatchSubDirs KDirWatch</field>
    <field name="text">Watch also all the subdirs contained by the directory</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KDirWatch::created</field>
    <field name="args">(const QString &amp;path)</field>
    <field name="url">classKDirWatch.html#ad0762720d60895300f0e5204e2757268</field>
    <field name="keywords">created KDirWatch::created KDirWatch</field>
    <field name="text">This is not emitted when creating a file is created in a watched directory path the path of the file or directory</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KDirWatch::deleted</field>
    <field name="args">(const QString &amp;path)</field>
    <field name="url">classKDirWatch.html#a6c534a2ffeb7aac60cfd85918b2f69eb</field>
    <field name="keywords">deleted KDirWatch::deleted KDirWatch</field>
    <field name="text">The object is still watched for new creation path the path of the file or directory</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KDirWatch::dirty</field>
    <field name="args">(const QString &amp;path)</field>
    <field name="url">classKDirWatch.html#ab8cd416cda40770a0496b7fe2abff524</field>
    <field name="keywords">dirty KDirWatch::dirty KDirWatch</field>
    <field name="text">For a directory this signal is emitted when files therein are created or deleted For a file this signal is emitted when its size or attributes change When you watch a directory changes in the size or attributes of contained files may or may not trigger this signal to be emitted depending on which backend is used by KDirWatch The new ctime is set before the signal is emitted path the path of the file or directory</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KDirWatch::setCreated</field>
    <field name="args">(const QString &amp;path)</field>
    <field name="url">classKDirWatch.html#a0ecc3e6ee57a20b4e20d2b25fa73c440</field>
    <field name="keywords">setCreated KDirWatch::setCreated KDirWatch</field>
    <field name="text">path the path of the file or directory</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KDirWatch::setDeleted</field>
    <field name="args">(const QString &amp;path)</field>
    <field name="url">classKDirWatch.html#a049a456a049f1dc62fc4a2e0ebb29b9c</field>
    <field name="keywords">setDeleted KDirWatch::setDeleted KDirWatch</field>
    <field name="text">path the path of the file or directory</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KDirWatch::setDirty</field>
    <field name="args">(const QString &amp;path)</field>
    <field name="url">classKDirWatch.html#abd22d2d90d28a1fb465b1f7dc32797dd</field>
    <field name="keywords">setDirty KDirWatch::setDirty KDirWatch</field>
    <field name="text">path the path of the file or directory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDirWatch::KDirWatch</field>
    <field name="args">(QObject *parent=0)</field>
    <field name="url">classKDirWatch.html#aa06e50033abe5093f6e5847f11e47d17</field>
    <field name="keywords">KDirWatch KDirWatch::KDirWatch KDirWatch</field>
    <field name="text">Scanning begins immediately when a dir/file watch is added parent the parent of the QObject or 0 for parent-less KDataTools</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDirWatch::~KDirWatch</field>
    <field name="args">()</field>
    <field name="url">classKDirWatch.html#a99a1c9ee75410346b8b2593684ce9750</field>
    <field name="keywords">KDirWatch::~KDirWatch KDirWatch</field>
    <field name="text">Stops scanning and cleans up</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDirWatch::addDir</field>
    <field name="args">(const QString &amp;path, WatchModes watchModes=WatchDirOnly)</field>
    <field name="url">classKDirWatch.html#a83cbc622c885848603b338ace24ebe0b</field>
    <field name="keywords">addDir KDirWatch::addDir KDirWatch</field>
    <field name="text">The directory does not have to exist When watchModes is set to WatchDirOnly the default the signals dirty() created() deleted() can be emitted all for the watched directory When watchModes is set to WatchFiles all files in the watched directory are watched for changes too Thus the signals dirty() created() deleted() can be emitted When watchModes is set to WatchSubDirs all subdirs are watched using the same flags specified in watchModes symlinks aren t followed If the path points to a symlink to a directory the target directory is watched instead If you want to watch the link use addFile() path the path to watch watchModes watch modes KDirWatch::WatchMode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDirWatch::addFile</field>
    <field name="args">(const QString &amp;file)</field>
    <field name="url">classKDirWatch.html#a0a0c54da2139a0bf563ad4216e005ff6</field>
    <field name="keywords">addFile KDirWatch::addFile KDirWatch</field>
    <field name="text">If it s a symlink to a directory it watches the symlink itself file the file to watch</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDirWatch::contains</field>
    <field name="args">(const QString &amp;path) const</field>
    <field name="url">classKDirWatch.html#a416d04d018fa13425b8fefc9709e28a3</field>
    <field name="keywords">contains KDirWatch::contains KDirWatch</field>
    <field name="text">path the directory to check true if the directory is being watched</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDirWatch::ctime</field>
    <field name="args">(const QString &amp;path) const</field>
    <field name="url">classKDirWatch.html#ac5c8d92c25876c02abd91c87ea6bc731</field>
    <field name="keywords">ctime KDirWatch::ctime KDirWatch</field>
    <field name="text">path the file to check the date of the last modification</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDirWatch::internalMethod</field>
    <field name="args">() const</field>
    <field name="url">classKDirWatch.html#a00508b637a4d40cdb376f82fa803a14f</field>
    <field name="keywords">internalMethod KDirWatch::internalMethod KDirWatch</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDirWatch::isStopped</field>
    <field name="args">()</field>
    <field name="url">classKDirWatch.html#ab648b010f779acf1251eecbc58d270e0</field>
    <field name="keywords">isStopped KDirWatch::isStopped KDirWatch</field>
    <field name="text">true when scanning stopped</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDirWatch::removeDir</field>
    <field name="args">(const QString &amp;path)</field>
    <field name="url">classKDirWatch.html#a601a6452633708e2527e950417c20298</field>
    <field name="keywords">removeDir KDirWatch::removeDir KDirWatch</field>
    <field name="text">If specified path is not in the list this does nothing path the path of the dir to be removed from the list</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDirWatch::removeFile</field>
    <field name="args">(const QString &amp;file)</field>
    <field name="url">classKDirWatch.html#a4093ed4d2faea496dadc952bf3a346b6</field>
    <field name="keywords">removeFile KDirWatch::removeFile KDirWatch</field>
    <field name="text">If specified path is not in the list this does nothing file the file to be removed from the list</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDirWatch::restartDirScan</field>
    <field name="args">(const QString &amp;path)</field>
    <field name="url">classKDirWatch.html#aef498d8aa538183540f5251be707118f</field>
    <field name="keywords">restartDirScan KDirWatch::restartDirScan KDirWatch</field>
    <field name="text">It doesn t notify about the changes by emitting a signal The ctime value is reset Call it when you are finished with big operations on that path and when you have refreshed that path path the path to restart scanning true if the path is being watched otherwise false stopDirScanning()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDirWatch::startScan</field>
    <field name="args">(bool notify=false, bool skippedToo=false)</field>
    <field name="url">classKDirWatch.html#a7c18b6a35b96200210d9dece988e6d90</field>
    <field name="keywords">startScan KDirWatch::startScan KDirWatch</field>
    <field name="text">notify If true all changed directories since stopScan() call will be notified for refresh If notify is false all ctimes will be reset except those who are stopped but only if skippedToo is false and changed dirs won t be notified You can start scanning even if the list is empty First call should be called with false or else all directories in list will be notified skippedToo if true the skipped directoris scanning of which was stopped with stopDirScan() will be reset and notified for change Otherwise stopped directories will continue to be unnotified</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDirWatch::stopDirScan</field>
    <field name="args">(const QString &amp;path)</field>
    <field name="url">classKDirWatch.html#a4f3b2fba0615bd4fb4b8f4eb35680433</field>
    <field name="keywords">stopDirScan KDirWatch::stopDirScan KDirWatch</field>
    <field name="text">The path is not deleted from the internal list it is just skipped Call this function when you perform an huge operation on this directory copy/move big files or many files When finished call restartDirScan(path) path the path to skip true if the path is being watched otherwise false restartDirScanning()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDirWatch::stopScan</field>
    <field name="args">()</field>
    <field name="url">classKDirWatch.html#a0eee71d6029b224692a73031cbe720ba</field>
    <field name="keywords">stopScan KDirWatch::stopScan KDirWatch</field>
    <field name="text">The timer is stopped but the list is not cleared</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDirWatch::exists</field>
    <field name="args">()</field>
    <field name="url">classKDirWatch.html#a820423bac0bda71473e2365b37c921b1</field>
    <field name="keywords">exists KDirWatch::exists KDirWatch</field>
    <field name="text">true if there is an instance of KDirWatch KDirWatch::self()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDirWatch::self</field>
    <field name="args">()</field>
    <field name="url">classKDirWatch.html#a599b7ca7a1882b16fb898c5a29853936</field>
    <field name="keywords">self KDirWatch::self KDirWatch</field>
    <field name="text">It is automatically deleted when the application exits However you can create an arbitrary number of KDirWatch instances aside from this one for those you have to take care of memory management This function returns an instance of KDirWatch If there is none it will be created a KDirWatch instance</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KDirWatch::statistics</field>
    <field name="args">()</field>
    <field name="url">classKDirWatch.html#a540fc83c8c0e8f2508f09d83fda8ca09</field>
    <field name="keywords">statistics KDirWatch::statistics KDirWatch</field>
    <field name="text">This checks for consistency too</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KFormat</field>
    <field name="url">classKFormat.html</field>
    <field name="keywords">KFormat</field>
    <field name="text">John Layt Michael Pyne Albert Astals Cid Class for formatting numbers and datetimes 5.0</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KFormat::BinarySizeUnits</field>
    <field name="url">classKFormat.html#aee876852dde402e4b5340cd215bbb8c0</field>
    <field name="keywords">BinarySizeUnits KFormat::BinarySizeUnits KFormat</field>
    <field name="text">NOTE There are several different units standards 1 SI i.e metric powers-of-10 2 IEC powers-of-2 with specific units KiB MiB etc 3 JEDEC powers-of-2 used for solid state memory sizing which is why you see flash cards labels as e.g 4GB These ab use the metric units Although JEDEC only defines KB MB GB if JEDEC is selected all units will be powers-of-2 with metric prefixes for clarity in the event of sizes larger than 1024 GB Although 3 different dialects are possible this enum only uses metric names since adding all 3 different names of essentially the same unit would be pointless Use BinaryUnitDialect to control the exact units returned BinaryUnitDialect formatByteSize</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::DefaultBinaryUnits</field>
    <field name="url">classKFormat.html#aee876852dde402e4b5340cd215bbb8c0a9055316d613e9a662333ca5795bb0d37</field>
    <field name="keywords">DefaultBinaryUnits KFormat::DefaultBinaryUnits KFormat</field>
    <field name="text">Auto-choose a unit such that the result is in the range 0 1000 or 1024</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::UnitByte</field>
    <field name="url">classKFormat.html#aee876852dde402e4b5340cd215bbb8c0ad6e10a66b2ef2a953095ce76f120f430</field>
    <field name="keywords">UnitByte KFormat::UnitByte KFormat</field>
    <field name="text">B 1 byte</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::UnitKiloByte</field>
    <field name="url">classKFormat.html#aee876852dde402e4b5340cd215bbb8c0a9a2003d9203f390c2a3ed46fde073ea7</field>
    <field name="keywords">UnitKiloByte KFormat::UnitKiloByte KFormat</field>
    <field name="text">KiB/KB/kB 1024/1000 bytes</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::UnitMegaByte</field>
    <field name="url">classKFormat.html#aee876852dde402e4b5340cd215bbb8c0ad3a9de09f6d455a075ee22864559f0f2</field>
    <field name="keywords">UnitMegaByte KFormat::UnitMegaByte KFormat</field>
    <field name="text">MiB/MB/MB 2^20/10^06 bytes</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::UnitGigaByte</field>
    <field name="url">classKFormat.html#aee876852dde402e4b5340cd215bbb8c0a870f2b0a1594b75d2df2ca998ae63272</field>
    <field name="keywords">UnitGigaByte KFormat::UnitGigaByte KFormat</field>
    <field name="text">GiB/GB/GB 2^30/10^09 bytes</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::UnitTeraByte</field>
    <field name="url">classKFormat.html#aee876852dde402e4b5340cd215bbb8c0a3f042cdb791fc94792abc1647d9aab14</field>
    <field name="keywords">UnitTeraByte KFormat::UnitTeraByte KFormat</field>
    <field name="text">TiB/TB/TB 2^40/10^12 bytes</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::UnitPetaByte</field>
    <field name="url">classKFormat.html#aee876852dde402e4b5340cd215bbb8c0a01c6ebe8562ad50c0b9571feede985c8</field>
    <field name="keywords">UnitPetaByte KFormat::UnitPetaByte KFormat</field>
    <field name="text">PiB/PB/PB 2^50/10^15 bytes</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::UnitExaByte</field>
    <field name="url">classKFormat.html#aee876852dde402e4b5340cd215bbb8c0ae34aaf20ffdc0e5d7f5accb18e6e3c98</field>
    <field name="keywords">UnitExaByte KFormat::UnitExaByte KFormat</field>
    <field name="text">EiB/EB/EB 2^60/10^18 bytes</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::UnitZettaByte</field>
    <field name="url">classKFormat.html#aee876852dde402e4b5340cd215bbb8c0a3f11ef85c1e38bfeeece06d04094a276</field>
    <field name="keywords">UnitZettaByte KFormat::UnitZettaByte KFormat</field>
    <field name="text">ZiB/ZB/ZB 2^70/10^21 bytes</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::UnitYottaByte</field>
    <field name="url">classKFormat.html#aee876852dde402e4b5340cd215bbb8c0ac1b4893bbf02dd6b467625674f3ff3c8</field>
    <field name="keywords">UnitYottaByte KFormat::UnitYottaByte KFormat</field>
    <field name="text">YiB/YB/YB 2^80/10^24 bytes</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KFormat::BinaryUnitDialect</field>
    <field name="url">classKFormat.html#ae85925c279bf4d395ce829fe6be3e096</field>
    <field name="keywords">BinaryUnitDialect KFormat::BinaryUnitDialect KFormat</field>
    <field name="text">Note Although JEDEC abuses the metric prefixes and can therefore be confusing it has been used to describe memory sizes for quite some time and programs should therefore use either Default JEDEC or IEC 60027-2 for memory sizes On the other hand network transmission rates are typically in metric so Default Metric or IEC which is unambiguous should be chosen Normally choosing DefaultBinaryDialect is the best option as that uses the user s selection for units If the user has not selected a preference IECBinaryDialect will typically be used BinarySizeUnits formatByteSize</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::DefaultBinaryDialect</field>
    <field name="url">classKFormat.html#ae85925c279bf4d395ce829fe6be3e096aac44238951f1b8f767f69ed454413af4</field>
    <field name="keywords">DefaultBinaryDialect KFormat::DefaultBinaryDialect KFormat</field>
    <field name="text">Used if no specific preference</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::IECBinaryDialect</field>
    <field name="url">classKFormat.html#ae85925c279bf4d395ce829fe6be3e096ac6e25c78a05814723da705b2f2c01a8d</field>
    <field name="keywords">IECBinaryDialect KFormat::IECBinaryDialect KFormat</field>
    <field name="text">KiB MiB etc 2^ 10*n</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::JEDECBinaryDialect</field>
    <field name="url">classKFormat.html#ae85925c279bf4d395ce829fe6be3e096a76dbd321cbf838c588998de85aa9f69e</field>
    <field name="keywords">JEDECBinaryDialect KFormat::JEDECBinaryDialect KFormat</field>
    <field name="text">KB MB etc 2^ 10*n</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::MetricBinaryDialect</field>
    <field name="url">classKFormat.html#ae85925c279bf4d395ce829fe6be3e096ae3b74e29561b40500ff23a5368b470f3</field>
    <field name="keywords">MetricBinaryDialect KFormat::MetricBinaryDialect KFormat</field>
    <field name="text">SI Units kB MB etc 10^ 3*n</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KFormat::DurationFormatOption</field>
    <field name="url">classKFormat.html#a7ed4b40cb08c4537069716281ed62ab4</field>
    <field name="keywords">DurationFormatOption KFormat::DurationFormatOption KFormat</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::DefaultDuration</field>
    <field name="url">classKFormat.html#a7ed4b40cb08c4537069716281ed62ab4af24d8456b786b6e1fca305bc03539728</field>
    <field name="keywords">DefaultDuration KFormat::DefaultDuration KFormat</field>
    <field name="text">Default formatting in localized 1 23 45 format</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::InitialDuration</field>
    <field name="url">classKFormat.html#a7ed4b40cb08c4537069716281ed62ab4a53fe208011e3d4d999e42a9431e31716</field>
    <field name="keywords">InitialDuration KFormat::InitialDuration KFormat</field>
    <field name="text">Default formatting in localized 1h23m45s format</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::ShowMilliseconds</field>
    <field name="url">classKFormat.html#a7ed4b40cb08c4537069716281ed62ab4a0ddbb85bc17d53a017952643e5b597c5</field>
    <field name="keywords">ShowMilliseconds KFormat::ShowMilliseconds KFormat</field>
    <field name="text">Include milliseconds in format e.g 1 23 45.678</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::HideSeconds</field>
    <field name="url">classKFormat.html#a7ed4b40cb08c4537069716281ed62ab4a1709522424c3e950b9be762e6f0661d2</field>
    <field name="keywords">HideSeconds KFormat::HideSeconds KFormat</field>
    <field name="text">Hide the seconds e.g 1 23 or 1h23m overrides ShowMilliseconds</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KFormat::FoldHours</field>
    <field name="url">classKFormat.html#a7ed4b40cb08c4537069716281ed62ab4a1140119181e55510e87e1d583532480e</field>
    <field name="keywords">FoldHours KFormat::FoldHours KFormat</field>
    <field name="text">Fold the hours into the minutes e.g 83 45 or 83m45s overrides HideSeconds</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFormat::KFormat</field>
    <field name="args">(const QLocale &amp;locale=QLocale())</field>
    <field name="url">classKFormat.html#a8e92e080a1dbc4a53c9d6fa9228f6f4e</field>
    <field name="keywords">KFormat KFormat::KFormat KFormat</field>
    <field name="text">locale the locale to use defaults to the system locale</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFormat::KFormat</field>
    <field name="args">(const KFormat &amp;other)</field>
    <field name="url">classKFormat.html#ae95971545a6e6f145a15c884441091f0</field>
    <field name="keywords">KFormat KFormat::KFormat KFormat</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFormat::~KFormat</field>
    <field name="args">()</field>
    <field name="url">classKFormat.html#a0d5342a622cdac36647b8bfcc03169fd</field>
    <field name="keywords">KFormat::~KFormat KFormat</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFormat::formatByteSize</field>
    <field name="args">(double size, int precision=1, KFormat::BinaryUnitDialect dialect=KFormat::DefaultBinaryDialect, KFormat::BinarySizeUnits units=KFormat::DefaultBinaryUnits) const</field>
    <field name="url">classKFormat.html#a00817e8329403436e9b3964a9fab7342</field>
    <field name="keywords">formatByteSize KFormat::formatByteSize KFormat</field>
    <field name="text">Example formatByteSize(1000, unit, KFormat::UnitKiloByte) returns for KFormat::MetricBinaryDialect for KFormat::IECBinaryDialect for KFormat::JEDECBinaryDialect size size in bytes precision number of places after the decimal point to use KDE uses 1 by default so when in doubt use 1 dialect binary unit standard to use Use DefaultBinaryDialect to use the localized user selection unless you need to use a specific unit type such as displaying a flash memory size in JEDEC specificUnit specific unit size to use in result Use DefaultBinaryUnits to automatically select a unit that will return a sanely-sized number converted size as a translated string including the units E.g JEDEC Metric BinarySizeUnits BinaryUnitDialect</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFormat::formatDecimalDuration</field>
    <field name="args">(quint64 msecs, int decimalPlaces=2) const</field>
    <field name="url">classKFormat.html#a267084edc309ed752e973dbe797fe59e</field>
    <field name="keywords">formatDecimalDuration KFormat::formatDecimalDuration KFormat</field>
    <field name="text">e.g given formatDuration(60000) returns msecs Time duration in milliseconds decimalPlaces Deciaml places to round off to defaults to 2 converted duration as a string e.g</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFormat::formatDuration</field>
    <field name="args">(quint64 msecs, KFormat::DurationFormatOptions options=KFormat::DefaultDuration) const</field>
    <field name="url">classKFormat.html#a536f9520ce8de6ca6e2468db9fff5c29</field>
    <field name="keywords">formatDuration KFormat::formatDuration KFormat</field>
    <field name="text">1 23 45 msecs Time duration in milliseconds options options to use in the duration format converted duration as a string e.g</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFormat::formatRelativeDate</field>
    <field name="args">(const QDate &amp;date, QLocale::FormatType format) const</field>
    <field name="url">classKFormat.html#acfe8eb3d75a769ae77fc41a55ebba4c6</field>
    <field name="keywords">formatRelativeDate KFormat::formatRelativeDate KFormat</field>
    <field name="text">If the date falls within one week before or after the current date then a relative date string will be returned such as Yesterday Today Tomorrow Last Tuesday Next Wednesday If the date falls outside this period then the format is used date the date to be formatted format the date format to use the date as a string</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFormat::formatRelativeDateTime</field>
    <field name="args">(const QDateTime &amp;dateTime, QLocale::FormatType format) const</field>
    <field name="url">classKFormat.html#a022a6ad216787a128127efeac7b36126</field>
    <field name="keywords">formatRelativeDateTime KFormat::formatRelativeDateTime KFormat</field>
    <field name="text">If the dateTime falls within one week before or after the current date then a relative date string will be returned such as Yesterday 3 00pm Today 3 00pm Tomorrow 3 00pm Last Tuesday 3 00pm Next Wednesday 3 00pm If the dateTime falls outside this period then the format is used dateTime the date to be formatted format the date format to use the date as a string</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KFormat::formatSpelloutDuration</field>
    <field name="args">(quint64 msecs) const</field>
    <field name="url">classKFormat.html#a4e030ae190e6bd3320eb126ecf0558bc</field>
    <field name="keywords">formatSpelloutDuration KFormat::formatSpelloutDuration KFormat</field>
    <field name="text">e.g given formatSpelloutDuration(60001) returns given formatSpelloutDuration(62005) returns given formatSpelloutDuration(90060000) returns msecs Time duration in milliseconds converted duration as a string Units not interesting to the user for example seconds or minutes when the first unit is day are not returned because they are irrelevant The same applies for seconds when the first unit is hour</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">KGroupId</field>
    <field name="url">structKGroupId.html</field>
    <field name="keywords">KGroupId</field>
    <field name="text">KUserOrGroupId 5.0 Alex Richardson</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGroupId::KGroupId</field>
    <field name="args">()</field>
    <field name="url">structKGroupId.html#ab07795a0df4a30284925b8e8c08d3eef</field>
    <field name="keywords">KGroupId KGroupId::KGroupId KGroupId</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGroupId::KGroupId</field>
    <field name="args">(K_GID gid)</field>
    <field name="url">structKGroupId.html#ade53fd419ada47d2e39ed2b6692dae2b</field>
    <field name="keywords">KGroupId KGroupId::KGroupId KGroupId</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserOrGroupId&lt; K_GID &gt;::isValid</field>
    <field name="args">() const</field>
    <field name="url">structKUserOrGroupId.html#a0900d0ecc1d90504c65e8ff374e45dbb</field>
    <field name="keywords">isValid KUserOrGroupId&lt; K_GID &gt;::isValid KUserOrGroupId&lt; K_GID &gt; isValid KUserOrGroupId&lt; K_UID &gt;::isValid KUserOrGroupId&lt; K_UID &gt; isValid KUserOrGroupId::isValid KUserOrGroupId&lt; T &gt;</field>
    <field name="text">true if this object references a valid user/group ID If this returns true it doesn t necessarily mean that the referenced user/group exists it only checks whether this value could be a valid user/group ID</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserOrGroupId&lt; K_GID &gt;::nativeId</field>
    <field name="args">() const</field>
    <field name="url">structKUserOrGroupId.html#a46e5f34b7b956f35e46ef11d63d230f9</field>
    <field name="keywords">nativeId KUserOrGroupId&lt; K_GID &gt;::nativeId KUserOrGroupId&lt; K_GID &gt; nativeId KUserOrGroupId&lt; K_UID &gt;::nativeId KUserOrGroupId&lt; K_UID &gt; nativeId KUserOrGroupId::nativeId KUserOrGroupId&lt; T &gt;</field>
    <field name="text">A user/group ID that can be used in operating system specific functions On Windows the returned pointer will be freed once the last KUserOrGroupId referencing this user/group ID is deleted Make sure that the KUserOrGroupId object remains valid as long as the native pointer is needed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserOrGroupId&lt; K_GID &gt;::operator!=</field>
    <field name="args">(const KUserOrGroupId &amp;other) const</field>
    <field name="url">structKUserOrGroupId.html#ae685e2ce3d90ad70ddbc5b4d78037f2d</field>
    <field name="keywords">operator!= KUserOrGroupId&lt; K_GID &gt;::operator!= KUserOrGroupId&lt; K_GID &gt; operator!= KUserOrGroupId&lt; K_UID &gt;::operator!= KUserOrGroupId&lt; K_UID &gt; operator!= KUserOrGroupId::operator!= KUserOrGroupId&lt; T &gt;</field>
    <field name="text">whether this KUserOrGroupId is not equal to other</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserOrGroupId&lt; K_GID &gt;::operator==</field>
    <field name="args">(const KUserOrGroupId &amp;other) const</field>
    <field name="url">structKUserOrGroupId.html#a03c5d681137077621e865412de441b7b</field>
    <field name="keywords">operator== KUserOrGroupId&lt; K_GID &gt;::operator== KUserOrGroupId&lt; K_GID &gt; operator== KUserOrGroupId&lt; K_UID &gt;::operator== KUserOrGroupId&lt; K_UID &gt; operator== KUserOrGroupId::operator== KUserOrGroupId&lt; T &gt;</field>
    <field name="text">whether this KUserOrGroupId is equal to other</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserOrGroupId&lt; K_GID &gt;::toString</field>
    <field name="args">() const</field>
    <field name="url">structKUserOrGroupId.html#a640708ebf61e7593d770cc96022c5355</field>
    <field name="keywords">toString KUserOrGroupId&lt; K_GID &gt;::toString KUserOrGroupId&lt; K_GID &gt; toString KUserOrGroupId&lt; K_UID &gt;::toString KUserOrGroupId&lt; K_UID &gt; toString KUserOrGroupId::toString KUserOrGroupId&lt; T &gt;</field>
    <field name="text">A string representation of this user ID not the name of the user On UNIX this is a simple integer e.g for root On Windows this is a string like e.g for the Administrators group</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGroupId::currentEffectiveGroupId</field>
    <field name="args">()</field>
    <field name="url">structKGroupId.html#afd0fe1fc406ca81bd528851c1697f9c5</field>
    <field name="keywords">currentEffectiveGroupId KGroupId::currentEffectiveGroupId KGroupId</field>
    <field name="text">a KGroupId for the current effective user This is like on UNIX Windows does not have setuid binaries so on Windows this will always be the same as KGroupId::currentGroupId()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGroupId::currentGroupId</field>
    <field name="args">()</field>
    <field name="url">structKGroupId.html#aed01298767978d1ce897557a4af132c3</field>
    <field name="keywords">currentGroupId KGroupId::currentGroupId KGroupId</field>
    <field name="text">a KGroupId for the current user This is like on UNIX</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGroupId::fromName</field>
    <field name="args">(const QString &amp;name)</field>
    <field name="url">structKGroupId.html#a35eb8075c5b28511b8975bbfd9978f4e</field>
    <field name="keywords">fromName KGroupId::fromName KGroupId</field>
    <field name="text">A KGroupId for the user with name name or an invalid KGroupId if no user with this name was found on the system</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserOrGroupId&lt; K_GID &gt;::KUserOrGroupId</field>
    <field name="args">()</field>
    <field name="url">structKUserOrGroupId.html#aed8ba6bf8a546c528348e1b57a3af951</field>
    <field name="keywords">KUserOrGroupId KUserOrGroupId&lt; K_GID &gt;::KUserOrGroupId KUserOrGroupId&lt; K_GID &gt; KUserOrGroupId KUserOrGroupId&lt; K_UID &gt;::KUserOrGroupId KUserOrGroupId&lt; K_UID &gt; KUserOrGroupId KUserOrGroupId::KUserOrGroupId KUserOrGroupId&lt; T &gt;</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserOrGroupId&lt; K_GID &gt;::KUserOrGroupId</field>
    <field name="args">(NativeType nativeId)</field>
    <field name="url">structKUserOrGroupId.html#aa72f5689b5e558801251325e691c3b8e</field>
    <field name="keywords">KUserOrGroupId KUserOrGroupId&lt; K_GID &gt;::KUserOrGroupId KUserOrGroupId&lt; K_GID &gt; KUserOrGroupId KUserOrGroupId&lt; K_UID &gt;::KUserOrGroupId KUserOrGroupId&lt; K_UID &gt; KUserOrGroupId KUserOrGroupId::KUserOrGroupId KUserOrGroupId&lt; T &gt;</field>
    <field name="text">On windows this will not take ownership over the passed SID a copy will be created instead</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserOrGroupId&lt; K_GID &gt;::KUserOrGroupId</field>
    <field name="args">(const KUserOrGroupId&lt; K_GID &gt; &amp;other)</field>
    <field name="url">structKUserOrGroupId.html#ae925d5c1f5886665d609f2a916166e24</field>
    <field name="keywords">KUserOrGroupId KUserOrGroupId&lt; K_GID &gt;::KUserOrGroupId KUserOrGroupId&lt; K_GID &gt; KUserOrGroupId KUserOrGroupId&lt; K_UID &gt;::KUserOrGroupId KUserOrGroupId&lt; K_UID &gt; KUserOrGroupId KUserOrGroupId::KUserOrGroupId KUserOrGroupId&lt; T &gt;</field>
    <field name="text">This is very fast objects can be passed by value</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KJob</field>
    <field name="url">classKJob.html</field>
    <field name="keywords">KJob</field>
    <field name="text">For all jobs created in an application the code looks like other connects specific to the job And handleResult is usually at least With the synchronous interface the code looks like Subclasses must implement start() which should trigger the execution of the job although the work should be done asynchronously errorString() should also be reimplemented by any subclasses that introduce new error codes KJob and its subclasses are meant to be used in a fire-and-forget way Jobs will delete themselves when they finish using deleteLater() although this behaviour can be changed so a job instance will disappear after the next event loop run</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KJobTrackerInterface</field>
    <field name="url">classKJobTrackerInterface.html</field>
    <field name="keywords">KJobTrackerInterface</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KJobTrackerInterface::registerJob</field>
    <field name="args">(KJob *job)</field>
    <field name="url">classKJobTrackerInterface.html#a02be1fe828ead6c57601272950c1cd4d</field>
    <field name="keywords">registerJob KJobTrackerInterface::registerJob KJobTrackerInterface</field>
    <field name="text">job the job to register</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KJobTrackerInterface::unregisterJob</field>
    <field name="args">(KJob *job)</field>
    <field name="url">classKJobTrackerInterface.html#a9f944a5327b7ec929011e5bc96b9b8c6</field>
    <field name="keywords">unregisterJob KJobTrackerInterface::unregisterJob KJobTrackerInterface</field>
    <field name="text">job the job to unregister</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJobTrackerInterface::KJobTrackerInterface</field>
    <field name="args">(QObject *parent=0)</field>
    <field name="url">classKJobTrackerInterface.html#a61a43771e17bdfdedf4a209344a840d5</field>
    <field name="keywords">KJobTrackerInterface KJobTrackerInterface::KJobTrackerInterface KJobTrackerInterface</field>
    <field name="text">parent the parent object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJobTrackerInterface::~KJobTrackerInterface</field>
    <field name="args">()</field>
    <field name="url">classKJobTrackerInterface.html#a8d728d151d6410e383b24c5e7dfbebaa</field>
    <field name="keywords">KJobTrackerInterface::~KJobTrackerInterface KJobTrackerInterface</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KJobTrackerInterface::description</field>
    <field name="args">(KJob *job, const QString &amp;title, const QPair&lt; QString, QString &gt; &amp;field1, const QPair&lt; QString, QString &gt; &amp;field2)</field>
    <field name="url">classKJobTrackerInterface.html#ae707c5705de5fb48a081a59af767342a</field>
    <field name="keywords">description KJobTrackerInterface::description KJobTrackerInterface</field>
    <field name="text">A description has a title and two optional fields which can be used to complete the description Examples of titles are etc The fields of the description can be with an URL and with an URL for a description job the job that emitted this signal title the general description of the job field1 first field localized name and value field2 second field localized name and value</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KJobTrackerInterface::finished</field>
    <field name="args">(KJob *job)</field>
    <field name="url">classKJobTrackerInterface.html#a4695d9dd038002e4a2e70ffbea048c02</field>
    <field name="keywords">finished KJobTrackerInterface::finished KJobTrackerInterface</field>
    <field name="text">It is used to notify that the job is terminated and that progress UI if any can be hidden job the job that emitted this signal</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KJobTrackerInterface::infoMessage</field>
    <field name="args">(KJob *job, const QString &amp;plain, const QString &amp;rich)</field>
    <field name="url">classKJobTrackerInterface.html#a83a2749f6a0b599ce8461c932eafbdf7</field>
    <field name="keywords">infoMessage KJobTrackerInterface::infoMessage KJobTrackerInterface</field>
    <field name="text">Examples of message are etc job the job that emitted this signal plain the info message rich the rich text version of the message or QString() is none is available</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KJobTrackerInterface::percent</field>
    <field name="args">(KJob *job, unsigned long percent)</field>
    <field name="url">classKJobTrackerInterface.html#a7a47dddce842359b084dd72617d2e7ce</field>
    <field name="keywords">percent KJobTrackerInterface::percent KJobTrackerInterface</field>
    <field name="text">Note that this is not called for finished jobs job the job that emitted this signal percent the percentage</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KJobTrackerInterface::processedAmount</field>
    <field name="args">(KJob *job, KJob::Unit unit, qulonglong amount)</field>
    <field name="url">classKJobTrackerInterface.html#ac71054d631ef917edfec348036c54da8</field>
    <field name="keywords">processedAmount KJobTrackerInterface::processedAmount KJobTrackerInterface</field>
    <field name="text">The unit of this amount is provided too It can be called several times for a given job if the job manages several different units job the job that emitted this signal unit the unit of the processed amount amount the processed amount</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KJobTrackerInterface::resumed</field>
    <field name="args">(KJob *job)</field>
    <field name="url">classKJobTrackerInterface.html#a714d9455c56e1a3bca4ce09e4851c972</field>
    <field name="keywords">resumed KJobTrackerInterface::resumed KJobTrackerInterface</field>
    <field name="text">job the job that emitted this signal</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KJobTrackerInterface::speed</field>
    <field name="args">(KJob *job, unsigned long value)</field>
    <field name="url">classKJobTrackerInterface.html#a0a65cf36946ba0465ee9654698c3ba4d</field>
    <field name="keywords">speed KJobTrackerInterface::speed KJobTrackerInterface</field>
    <field name="text">job the job that emitted this signal value the current speed of the job</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KJobTrackerInterface::suspended</field>
    <field name="args">(KJob *job)</field>
    <field name="url">classKJobTrackerInterface.html#a8111af0befa29c993d9ad8dc600fcc9e</field>
    <field name="keywords">suspended KJobTrackerInterface::suspended KJobTrackerInterface</field>
    <field name="text">job the job that emitted this signal</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KJobTrackerInterface::totalAmount</field>
    <field name="args">(KJob *job, KJob::Unit unit, qulonglong amount)</field>
    <field name="url">classKJobTrackerInterface.html#a6accf2294a34bee0a04f2f99936fbf4d</field>
    <field name="keywords">totalAmount KJobTrackerInterface::totalAmount KJobTrackerInterface</field>
    <field name="text">The unit of this amount is provided too It can be called several times for a given job if the job manages several different units job the job that emitted this signal unit the unit of the total amount amount the total amount</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KJobTrackerInterface::warning</field>
    <field name="args">(KJob *job, const QString &amp;plain, const QString &amp;rich)</field>
    <field name="url">classKJobTrackerInterface.html#ac41710553e93757f552e742835b09fa3</field>
    <field name="keywords">warning KJobTrackerInterface::warning KJobTrackerInterface</field>
    <field name="text">job the job that emitted this signal plain the warning message rich the rich text version of the message or QString() is none is available</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KJobUiDelegate</field>
    <field name="url">classKJobUiDelegate.html</field>
    <field name="keywords">KJobUiDelegate</field>
    <field name="text">A UI delegate is responsible for the events of a job and provides a UI for them an error message box or warning etc KJob</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJobUiDelegate::KJobUiDelegate</field>
    <field name="args">()</field>
    <field name="url">classKJobUiDelegate.html#a4306dee13586b51246360b6743cb1d49</field>
    <field name="keywords">KJobUiDelegate KJobUiDelegate::KJobUiDelegate KJobUiDelegate</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJobUiDelegate::~KJobUiDelegate</field>
    <field name="args">()</field>
    <field name="url">classKJobUiDelegate.html#a5388c4b8485af61ec0d4cc89a2db4ae0</field>
    <field name="keywords">KJobUiDelegate::~KJobUiDelegate KJobUiDelegate</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJobUiDelegate::isAutoErrorHandlingEnabled</field>
    <field name="args">() const</field>
    <field name="url">classKJobUiDelegate.html#a108dc52ef887f03372153694f480fbf5</field>
    <field name="keywords">isAutoErrorHandlingEnabled KJobUiDelegate::isAutoErrorHandlingEnabled KJobUiDelegate</field>
    <field name="text">See also setAutoErrorHandlingEnabled true if automatic error handling is enabled setAutoErrorHandlingEnabled()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJobUiDelegate::isAutoWarningHandlingEnabled</field>
    <field name="args">() const</field>
    <field name="url">classKJobUiDelegate.html#a28577bd2834e18d6b0ea74ec7ef98234</field>
    <field name="keywords">isAutoWarningHandlingEnabled KJobUiDelegate::isAutoWarningHandlingEnabled KJobUiDelegate</field>
    <field name="text">See also setAutoWarningHandlingEnabled true if automatic warning handling is enabled setAutoWarningHandlingEnabled()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJobUiDelegate::setAutoErrorHandlingEnabled</field>
    <field name="args">(bool enable)</field>
    <field name="url">classKJobUiDelegate.html#a90dbe3a0af9b695dc23cfc5940bca317</field>
    <field name="keywords">setAutoErrorHandlingEnabled KJobUiDelegate::setAutoErrorHandlingEnabled KJobUiDelegate</field>
    <field name="text">When automatic error handling is enabled and an error occurs then showErrorDialog() is called right before the emission of the result signal The default is false See also isAutoErrorHandlingEnabled showErrorDialog enable enable or disable automatic error handling isAutoErrorHandlingEnabled()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJobUiDelegate::setAutoWarningHandlingEnabled</field>
    <field name="args">(bool enable)</field>
    <field name="url">classKJobUiDelegate.html#aeb10435ca89ed0bc7f435eb95fe21c73</field>
    <field name="keywords">setAutoWarningHandlingEnabled KJobUiDelegate::setAutoWarningHandlingEnabled KJobUiDelegate</field>
    <field name="text">When automatic warning handling is enabled and an error occurs then a message box is displayed with the warning message The default is true See also isAutoWarningHandlingEnabled showErrorDialog enable enable or disable automatic warning handling isAutoWarningHandlingEnabled()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJobUiDelegate::showErrorMessage</field>
    <field name="args">()</field>
    <field name="url">classKJobUiDelegate.html#a874130e3ab8a80f487984da85ce9ee26</field>
    <field name="keywords">showErrorMessage KJobUiDelegate::showErrorMessage KJobUiDelegate</field>
    <field name="text">Only call if error is not 0 and only in the slot connected to result</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJobUiDelegate::job</field>
    <field name="args">() const</field>
    <field name="url">classKJobUiDelegate.html#a8e5576e6c0ba9c2a7cd036f226f43947</field>
    <field name="keywords">job KJobUiDelegate::job KJobUiDelegate</field>
    <field name="text">current job this UI delegate is attached to or 0 if this UI delegate is not tracking any job</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KJobUiDelegate::setJob</field>
    <field name="args">(KJob *job)</field>
    <field name="url">classKJobUiDelegate.html#acfd5c786241eb31ad1562f920c21d8d9</field>
    <field name="keywords">setJob KJobUiDelegate::setJob KJobUiDelegate</field>
    <field name="text">Once attached it ll track the job events true if the job we re correctly attached to the job false otherwise</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KMacroExpanderBase</field>
    <field name="url">classKMacroExpanderBase.html</field>
    <field name="keywords">KMacroExpanderBase</field>
    <field name="text">Oswald Buddenhagen</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMacroExpanderBase::expandEscapedMacro</field>
    <field name="args">(const QString &amp;str, int pos, QStringList &amp;ret)</field>
    <field name="url">classKMacroExpanderBase.html#ab73e880b0dcf06da05ad6ee8d7ec98ba</field>
    <field name="keywords">expandEscapedMacro KMacroExpanderBase::expandEscapedMacro KMacroExpanderBase</field>
    <field name="text">It should determine whether the string starting at pos witin str is a valid macro and return the substitution value for it if so str the input string pos the offset within str Note that this is the position of the occurrence of the escape char ret return value the string to substitute for the macro If greater than zero the number of chars at pos in str to substitute with ret i.e a valid macro was found If less than zero subtract this value from pos to skip a macro i.e substitute it with itself If zero scanning continues as if no escape char was encountered at all</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMacroExpanderBase::expandPlainMacro</field>
    <field name="args">(const QString &amp;str, int pos, QStringList &amp;ret)</field>
    <field name="url">classKMacroExpanderBase.html#a796748175343a35c28a4ca898639e590</field>
    <field name="keywords">expandPlainMacro KMacroExpanderBase::expandPlainMacro KMacroExpanderBase</field>
    <field name="text">It should determine whether the string starting at pos within str is a valid macro and return the substitution value for it if so str the input string pos the offset within str ret return value the string to substitute for the macro If greater than zero the number of chars at pos in str to substitute with ret i.e a valid macro was found If less than zero subtract this value from pos to skip a macro i.e substitute it with itself If zero no macro starts at pos</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KMessageHandler</field>
    <field name="url">classKMessageHandler.html</field>
    <field name="keywords">KMessageHandler</field>
    <field name="text">This class define how KMessage display a message Reimplement the virtual methods then set your custom KMessageHandler using KMessage::setMessageHandler() Michaël Larouche</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMessageHandler::message</field>
    <field name="args">(KMessage::MessageType type, const QString &amp;text, const QString &amp;caption)=0</field>
    <field name="url">classKMessageHandler.html#af43e08e9cdc0468e5fa5c702616e6705</field>
    <field name="keywords">message KMessageHandler::message KMessageHandler</field>
    <field name="text">A long message span on multiple lines and can have a caption type Currrent type of message See MessageType enum text Long message to be displayed caption Caption to be used This is optional</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KPluginFactory</field>
    <field name="url">classKPluginFactory.html</field>
    <field name="keywords">KPluginFactory</field>
    <field name="text">Qt plugins provide a singleton object but a common pattern is for plugins to generate as many objects of a particular type as the application requires By using KPluginFactory you can avoid implementing the factory pattern yourself KPluginFactory also allows plugins to provide multiple different object types indexed by keywords The objects created by KPluginFactory must inherit QObject and must have a standard constructor pattern if the object is a KPart::Part it must be of the form if it is a QWidget it must be of the form otherwise it must be of the form You should typically use either K_PLUGIN_FACTORY() or K_PLUGIN_FACTORY_WITH_JSON() in your plugin code to create the factory The typical pattern is If you want to write a custom KPluginFactory not using the standard macro(s) you can reimplement the create(const char *iface, QWidget *parentWidget, QObject *parent, const QVariantList &amp;args, const QString &amp;keyword) method Example If you want to load a library use KPluginLoader The application that wants to instantiate plugin classes can do the following Matthias Kretz Bernhard Loos</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginFactory::KPluginFactory</field>
    <field name="args">()</field>
    <field name="url">classKPluginFactory.html#acc33691452a9b339995a4e3d0d9e57b6</field>
    <field name="keywords">KPluginFactory KPluginFactory::KPluginFactory KPluginFactory</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginFactory::~KPluginFactory</field>
    <field name="args">()</field>
    <field name="url">classKPluginFactory.html#a046c54b216cc2f661dad59484fa6e3d9</field>
    <field name="keywords">KPluginFactory::~KPluginFactory KPluginFactory</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginFactory::create</field>
    <field name="args">(QObject *parent=0, const QVariantList &amp;args=QVariantList())</field>
    <field name="url">classKPluginFactory.html#a93e83b1985db058c44e67515bdcae1f6</field>
    <field name="keywords">create KPluginFactory::create KPluginFactory</field>
    <field name="text">It will try to create an object which inherits T If it has multiple choices you will get a fatal error kFatal() so be careful to request a unique interface or use keywords T The interface for which an object should be created The object will inherit T parent The parent of the object If parent is a widget type it will also passed to the parentWidget argument of the CreateInstanceFunction for the object args Additional arguments which will be passed to the object A pointer to the created object is returned or 0 if an error occurred</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginFactory::create</field>
    <field name="args">(const QString &amp;keyword, QObject *parent=0, const QVariantList &amp;args=QVariantList())</field>
    <field name="url">classKPluginFactory.html#a6f02c20aae75e57396b63d5c8cd2800a</field>
    <field name="keywords">create KPluginFactory::create KPluginFactory</field>
    <field name="text">It will try to create an object which inherits T and was registered with keyword T The interface for which an object should be created The object will inherit T keyword The keyword of the object parent The parent of the object If parent is a widget type it will also passed to the parentWidget argument of the CreateInstanceFunction for the object args Additional arguments which will be passed to the object A pointer to the created object is returned or 0 if an error occurred</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginFactory::create</field>
    <field name="args">(QWidget *parentWidget, QObject *parent, const QString &amp;keyword=QString(), const QVariantList &amp;args=QVariantList())</field>
    <field name="url">classKPluginFactory.html#a79cfca4a6d243975590b90a3c339afff</field>
    <field name="keywords">create KPluginFactory::create KPluginFactory</field>
    <field name="text">It will try to create an object which inherits T and was registered with keyword This overload has an additional parentWidget argument which is used by some plugins e.g Parts T The interface for which an object should be created The object will inherit T parentWidget An additional parent widget parent The parent of the object If parent is a widget type it will also passed to the parentWidget argument of the CreateInstanceFunction for the object keyword The keyword of the object args Additional arguments which will be passed to the object A pointer to the created object is returned or 0 if an error occurred</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginFactory::create</field>
    <field name="args">(QObject *parent, const QStringList &amp;args)</field>
    <field name="url">classKPluginFactory.html#a80ef48d75bfcd6e40a026730d3a6df7c</field>
    <field name="keywords">create KPluginFactory::create KPluginFactory</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginFactory::create</field>
    <field name="args">(QObject *parent=0, const char *classname=&quot;QObject&quot;, const QStringList &amp;args=QStringList())</field>
    <field name="url">classKPluginFactory.html#aafd3c3cacb945b22f7ea10b1729cfa33</field>
    <field name="keywords">create KPluginFactory::create KPluginFactory</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginFactory::stringListToVariantList</field>
    <field name="args">(const QStringList &amp;list)</field>
    <field name="url">classKPluginFactory.html#a2a3cdb4564dcb954d006729996d0b06f</field>
    <field name="keywords">stringListToVariantList KPluginFactory::stringListToVariantList KPluginFactory</field>
    <field name="text">Converts a QStringList to a QVariantList</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginFactory::variantListToStringList</field>
    <field name="args">(const QVariantList &amp;list)</field>
    <field name="url">classKPluginFactory.html#a29fb09e2bf29d15fb43d8daa0c6710d6</field>
    <field name="keywords">variantListToStringList KPluginFactory::variantListToStringList KPluginFactory</field>
    <field name="text">Converts a QVariantList of strings to a QStringList</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">KPluginFactory::CreateInstanceFunction</field>
    <field name="args">)(QWidget *, QObject *, const QVariantList &amp;)</field>
    <field name="url">classKPluginFactory.html#adafb2ea531979d68792ca9ff3e8873b6</field>
    <field name="keywords">CreateInstanceFunction KPluginFactory::CreateInstanceFunction KPluginFactory</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginFactory::create</field>
    <field name="args">(const char *iface, QWidget *parentWidget, QObject *parent, const QVariantList &amp;args, const QString &amp;keyword)</field>
    <field name="url">classKPluginFactory.html#a9ce2bc6a252ff199aea2275c190cfb1d</field>
    <field name="keywords">create KPluginFactory::create KPluginFactory</field>
    <field name="text">You may reimplement it to provide a very flexible factory This is especially useful to provide generic factories for plugins implemeted using a scripting language iface The staticMetaObject::className() string identifying the plugin interface that was requested E.g for KCModule plugins this string will be parentWidget Only used if the requested plugin is a KPart parent The parent object for the plugin object args A plugin specific list of arbitrary arguments keyword A string that uniquely identifies the plugin If a KService is used this keyword is read from the X-KDE-PluginKeyword entry in the desktop file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginFactory::createObject</field>
    <field name="args">(QObject *parent, const char *className, const QStringList &amp;args)</field>
    <field name="url">classKPluginFactory.html#ab004f59d313eee1b9479218347336d12</field>
    <field name="keywords">createObject KPluginFactory::createObject KPluginFactory</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginFactory::createPartObject</field>
    <field name="args">(QWidget *parentWidget, QObject *parent, const char *classname, const QStringList &amp;args)</field>
    <field name="url">classKPluginFactory.html#ac31c9c8828e25de346352ed8a7644bb3</field>
    <field name="keywords">createPartObject KPluginFactory::createPartObject KPluginFactory</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginFactory::registerPlugin</field>
    <field name="args">(const QString &amp;keyword=QString(), CreateInstanceFunction instanceFunction=InheritanceChecker&lt; T &gt;().createInstanceFunction(reinterpret_cast&lt; T *&gt;(0)))</field>
    <field name="url">classKPluginFactory.html#a1c10bfd9eee6fce88bd60c9bd58ced96</field>
    <field name="keywords">registerPlugin KPluginFactory::registerPlugin KPluginFactory</field>
    <field name="text">Call this function from the constructor of the KPluginFactory subclass to make the create function able to instantiate the plugin when asked for an interface the plugin implements You can register as many plugin classes as you want as long as either the plugin interface or the keyword makes it unique E.g it is possible to register a KCModule and a KParts::Part without having to specify keywords since their interfaces differ T the name of the plugin class keyword An optional keyword as unique identifier for the plugin This allows you to put more than one plugin with the same interface into the same library using the same factory X-KDE-PluginKeyword is a convenient way to specify the keyword in a desktop file instanceFunction A function pointer to a function that creates an instance of the plugin The default function that will be used depends on the type of interface If the interface inherits from KParts::Part the function will call QWidget the function will call else the function will call</field>
  </doc>
  <doc>
    <field name="type">related</field>
    <field name="name">KPluginFactory::K_PLUGIN_FACTORY</field>
    <field name="args">(name, pluginRegistrations)</field>
    <field name="url">classKPluginFactory.html#a8acc809ba542c82fa8f1941cce24170c</field>
    <field name="keywords">K_PLUGIN_FACTORY KPluginFactory::K_PLUGIN_FACTORY KPluginFactory</field>
    <field name="text">Create a KPluginFactory subclass and export it as the root plugin object name The name of the KPluginFactory derived class pluginRegistrations Code to be inserted into the constructor of the class Usually a series of registerPlugin() calls Example If you want to compile a json file into the plugin use K_PLUGIN_FACTORY_WITH_JSON K_PLUGIN_FACTORY_WITH_JSON K_PLUGIN_FACTORY_DECLARATION K_PLUGIN_FACTORY_DEFINITION</field>
  </doc>
  <doc>
    <field name="type">related</field>
    <field name="name">KPluginFactory::K_PLUGIN_FACTORY_DECLARATION</field>
    <field name="args">(name)</field>
    <field name="url">classKPluginFactory.html#a156f26603093d0c9ef0c9694b80e9da2</field>
    <field name="keywords">K_PLUGIN_FACTORY_DECLARATION KPluginFactory::K_PLUGIN_FACTORY_DECLARATION KPluginFactory</field>
    <field name="text">K_PLUGIN_FACTORY_DECLARATION declares the KPluginFactory subclass This macro can be used in a header file name The name of the KPluginFactory derived class K_PLUGIN_FACTORY K_PLUGIN_FACTORY_DEFINITION</field>
  </doc>
  <doc>
    <field name="type">related</field>
    <field name="name">KPluginFactory::K_PLUGIN_FACTORY_DEFINITION</field>
    <field name="args">(name, pluginRegistrations)</field>
    <field name="url">classKPluginFactory.html#a715d03196945b4396b6171f7deec6b84</field>
    <field name="keywords">K_PLUGIN_FACTORY_DEFINITION KPluginFactory::K_PLUGIN_FACTORY_DEFINITION KPluginFactory</field>
    <field name="text">K_PLUGIN_FACTORY_DEFINITION defines the KPluginFactory subclass This macro can not be used in a header file name The name of the KPluginFactory derived class pluginRegistrations Code to be inserted into the constructor of the class Usually a series of registerPlugin() calls K_PLUGIN_FACTORY K_PLUGIN_FACTORY_DECLARATION</field>
  </doc>
  <doc>
    <field name="type">related</field>
    <field name="name">KPluginFactory::K_PLUGIN_FACTORY_WITH_JSON</field>
    <field name="args">(name, jsonFile, pluginRegistrations)</field>
    <field name="url">classKPluginFactory.html#aa8bc10b3b6a9d95d2573b8f5e9d83708</field>
    <field name="keywords">K_PLUGIN_FACTORY_WITH_JSON KPluginFactory::K_PLUGIN_FACTORY_WITH_JSON KPluginFactory</field>
    <field name="text">Create a KPluginFactory subclass and export it as the root plugin object with JSON metadata This macro does the same as K_PLUGIN_FACTORY but adds a JSON file as plugin metadata See Q_PLUGIN_METADATA() for more information name The name of the KPluginFactory derived class pluginRegistrations Code to be inserted into the constructor of the class Usually a series of registerPlugin() calls jsonFile Name of the json file to be compiled into the plugin as metadata Example K_PLUGIN_FACTORY K_PLUGIN_FACTORY_DECLARATION K_PLUGIN_FACTORY_DEFINITION 5.0</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">KPluginFactory::InheritanceChecker</field>
    <field name="url">structKPluginFactory_1_1InheritanceChecker.html</field>
    <field name="keywords">InheritanceChecker</field>
    <field name="text">You can inherit it if you want to add new classes and still keep support for the old ones</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KPluginLoader</field>
    <field name="url">classKPluginLoader.html</field>
    <field name="keywords">KPluginLoader</field>
    <field name="text">Note that the factory() is a typesafe convenience method that just wraps a qobject_cast on the result of QPluginLoader::instance() Therefore if you do not need the plugin version feature you can and should just use QPluginLoader instead Unlike QPluginLoader it is not possible to re-use KPluginLoader for more than one plugin it provides no setFileName method The same notes and caveats that apply to QPluginLoader also apply to KPluginLoader Sample code KPluginFactory Bernhard Loos</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::KPluginLoader</field>
    <field name="args">(const QString &amp;plugin, QObject *parent=0)</field>
    <field name="url">classKPluginLoader.html#a984e2bed40283b4be38729ceedc8da26</field>
    <field name="keywords">KPluginLoader KPluginLoader::KPluginLoader KPluginLoader</field>
    <field name="text">This should be the name of the plugin object file without any suffix like so or dll Plugin object files should not have a lib prefix fileName() will be empty if the plugin could not be found plugin The name of the plugin parent A parent object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::KPluginLoader</field>
    <field name="args">(const KPluginName &amp;name, QObject *parent=0)</field>
    <field name="url">classKPluginLoader.html#a0c0177a006b446dd48a8ff44d4b8ea1f</field>
    <field name="keywords">KPluginLoader KPluginLoader::KPluginLoader KPluginLoader</field>
    <field name="text">This constructor behaves exactly the same as KPluginLoader(const QString&amp;,QObject*) It allows any class that can be cast to KPluginName such as KService to be passed to KPluginLoader name The name of the plugin parent A parent object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::~KPluginLoader</field>
    <field name="args">()</field>
    <field name="url">classKPluginLoader.html#a9218a209e48bad8a2674c1853c0776ce</field>
    <field name="keywords">KPluginLoader::~KPluginLoader KPluginLoader</field>
    <field name="text">Unless unload() was called explicitly the plugin stays in memory until the application terminates</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::errorString</field>
    <field name="args">() const</field>
    <field name="url">classKPluginLoader.html#a5946adcb4875ff4559ce45109276c5ac</field>
    <field name="keywords">errorString KPluginLoader::errorString KPluginLoader</field>
    <field name="text">The description of the last error QPluginLoader::errorString()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::factory</field>
    <field name="args">()</field>
    <field name="url">classKPluginLoader.html#a606ba35fc203e419e9318dbb4ee48738</field>
    <field name="keywords">factory KPluginLoader::factory KPluginLoader</field>
    <field name="text">This is typically created by one of the KPluginFactory macros Internally this uses QPluginLoader::instance() and the same behaviours apply The factory of the plugin or 0 on error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::fileName</field>
    <field name="args">() const</field>
    <field name="url">classKPluginLoader.html#aea0ae91b58e26608d8c530f30a4cb33a</field>
    <field name="keywords">fileName KPluginLoader::fileName KPluginLoader</field>
    <field name="text">This will be the full path of the plugin if it was found and empty if it could not be found The full path of the plugin or the null string if it could not be found QPluginLoader::fileName() pluginName()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::instance</field>
    <field name="args">()</field>
    <field name="url">classKPluginLoader.html#a8e66938a21d1f6da57245b4ba283a39e</field>
    <field name="keywords">instance KPluginLoader::instance KPluginLoader</field>
    <field name="text">The plugin will be loaded if necessary If the plugin used one of the KPluginFactory macros you should use factory() instead The plugin s root object QPluginLoader::instance()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::isLoaded</field>
    <field name="args">() const</field>
    <field name="url">classKPluginLoader.html#a1becb866362f7afcf32d31f1193b699a</field>
    <field name="keywords">isLoaded KPluginLoader::isLoaded KPluginLoader</field>
    <field name="text">True if the plugin is loaded false otherwise QPluginLoader::isLoaded()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::load</field>
    <field name="args">()</field>
    <field name="url">classKPluginLoader.html#a5fc3ca8f68bb520989cd3eed78c4bc47</field>
    <field name="keywords">load KPluginLoader::load KPluginLoader</field>
    <field name="text">It is safe to call this multiple times if the plugin was already loaded it will just return true Methods that require the plugin to be loaded will load it as necessary anyway so you do not normally need to call this method True if the plugin was loaded successfully false otherwise QPluginLoader::load()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::loadHints</field>
    <field name="args">() const</field>
    <field name="url">classKPluginLoader.html#abeeac0beb222cd9882e3e049bc2e9a2d</field>
    <field name="keywords">loadHints KPluginLoader::loadHints KPluginLoader</field>
    <field name="text">Determines how load() should work See QLibrary::loadHints for more information The load hints for the plugin QPluginLoader::loadHints() setLoadHints()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::metaData</field>
    <field name="args">() const</field>
    <field name="url">classKPluginLoader.html#aef87229b778a4b30d09680539579b910</field>
    <field name="keywords">metaData KPluginLoader::metaData KPluginLoader</field>
    <field name="text">A JSON object containing the plugin s metadata if found QPluginLoader::metaData()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::pluginName</field>
    <field name="args">() const</field>
    <field name="url">classKPluginLoader.html#a4ccb4478e90992bee16b02e84c083d3d</field>
    <field name="keywords">pluginName KPluginLoader::pluginName KPluginLoader</field>
    <field name="text">If the KService constructor was used this is the name of the library provided by the service The plugin name fileName()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::pluginVersion</field>
    <field name="args">()</field>
    <field name="url">classKPluginLoader.html#abb0cadbbc94aa56f4cfc4139502d0256</field>
    <field name="keywords">pluginVersion KPluginLoader::pluginVersion KPluginLoader</field>
    <field name="text">This will load the plugin if it is not already loaded The version given to K_EXPORT_PLUGIN_VERSION or quint32 if the macro was not used or the plugin could not be loaded</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::setLoadHints</field>
    <field name="args">(QLibrary::LoadHints loadHints)</field>
    <field name="url">classKPluginLoader.html#a9f583f22f3283c4afc410bfe9ad95aa3</field>
    <field name="keywords">setLoadHints KPluginLoader::setLoadHints KPluginLoader</field>
    <field name="text">Determines how load() should work See QLibrary::loadHints for more information loadHints The load hints for the plugin QPluginLoader::setLoadHints() loadHints()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::unload</field>
    <field name="args">()</field>
    <field name="url">classKPluginLoader.html#a18e3f751ecd02360ed9e8ace853dc016</field>
    <field name="keywords">unload KPluginLoader::unload KPluginLoader</field>
    <field name="text">If other instances of KPluginLoader or QPluginLoader are using the same plugin this will fail unloading will only happen when every instance has called unload() True if the plugin was unloaded false otherwise QPluginLoader::unload() load() instance() factory()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::findPlugin</field>
    <field name="args">(const QString &amp;name)</field>
    <field name="url">classKPluginLoader.html#a3a69c4f1826926a2145f14770b8b5010</field>
    <field name="keywords">findPlugin KPluginLoader::findPlugin KPluginLoader</field>
    <field name="text">Searches for a dynamic object file in the locations KPluginLoader and QPluginLoader would search ie the current directory and QCoreApplication::libraryPaths() This can be useful if you wish to use a plugin that does not conform to the Qt plugin scheme of providing a QObject that declares Q_PLUGIN_METADATA In this case you can find the plugin with this method and load it with QLibrary Note that the path is not necessarily absolute In particular if the plugin is found in the current directory it will be a relative path name The name of the plugin can be a relative path see above This should not include a file extension like so or dll The path to the plugin if it was found or QString() if it could not be found 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::findPlugins</field>
    <field name="args">(const QString &amp;directory, std::function&lt; bool(const KPluginMetaData &amp;)&gt; filter=std::function&lt; bool(const KPluginMetaData &amp;)&gt;())</field>
    <field name="url">classKPluginLoader.html#abe8d620c94c3f7c3d05b991777b37815</field>
    <field name="keywords">findPlugins KPluginLoader::findPlugins KPluginLoader</field>
    <field name="text">Only plugins which have JSON metadata will be considered directory The directory to search for plugins If a relative path is given for directory all entries of QCoreApplication::libraryPaths() will be checked with directory appended as a subdirectory If an absolute path is given only that directory will be searched filter a callback function that returns true if the found plugin should be loaded and false if it should be skipped If this argument is omitted all plugins will be loaded all plugins found in directory that fulfil the constraints of filter KPluginLoader::instantiatePlugins() 5.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::findPluginsById</field>
    <field name="args">(const QString &amp;directory, const QString &amp;pluginId)</field>
    <field name="url">classKPluginLoader.html#a7448249b7b7dbc337f82bd91b17d91c7</field>
    <field name="keywords">findPluginsById KPluginLoader::findPluginsById KPluginLoader</field>
    <field name="text">Only plugins which have JSON metadata will be considered directory The directory to search for plugins If a relative path is given for directory all entries of QCoreApplication::libraryPaths() will be checked with directory appended as a subdirectory If an absolute path is given only that directory will be searched pluginId The Id of the plugin for example KPluginMetaData.pluginId() all plugins found in directory with the given pluginId KPluginLoader::instantiatePlugins() 5.11</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::forEachPlugin</field>
    <field name="args">(const QString &amp;directory, std::function&lt; void(const QString &amp;)&gt; callback=std::function&lt; void(const QString &amp;)&gt;())</field>
    <field name="url">classKPluginLoader.html#a7f8bc12a6e3620de37e160559ebe965f</field>
    <field name="keywords">forEachPlugin KPluginLoader::forEachPlugin KPluginLoader</field>
    <field name="text">This is useful if your application needs to customize the behaviour of KPluginLoader::findPlugins() or KPluginLoader::instantiatePlugins() The files found do not necessarily contain JSON metadata and may not be loadable using K/QPluginLoader The only guarantee made is that they are valid library file names as determined by QLibrary::isLibrary() directory The directory to search for plugins If a relative path is given for directory all entries of QCoreApplication::libraryPaths() will be checked with directory appended as a subdirectory If an absolute path is given only that directory will be searched callback This function will be invoked for each valid plugin that is found It will receive the absolute path to the plugin as an argument KPluginLoader::findPlugins() KPluginLoader::instantiatePlugins() 5.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginLoader::instantiatePlugins</field>
    <field name="args">(const QString &amp;directory, std::function&lt; bool(const KPluginMetaData &amp;)&gt; filter=std::function&lt; bool(const KPluginMetaData &amp;)&gt;(), QObject *parent=Q_NULLPTR)</field>
    <field name="url">classKPluginLoader.html#aafc1d4d9bacac0b790396e85a296cc7a</field>
    <field name="keywords">instantiatePlugins KPluginLoader::instantiatePlugins KPluginLoader</field>
    <field name="text">Only plugins which have JSON metadata will be considered A filter can be passed which determines which of the found plugins should actually be loaded If you use KConfig you could have a group in your configuration file with the plugin name as the key and true/false as the value to indicate whether the plugin should be loaded In order to easily load all the enable plugins you could use the following code directory the directory to search for plugins If a relative path is given for directory all entries of QCoreApplication::libraryPaths() will be checked with directory appended as a subdirectory If an absolute path is given only that directory will be searched filter a callback function that returns true if the found plugin should be loaded and false if it should be skipped If this argument is omitted all plugins will be loaded parent the parent to set for the instantiated plugins if the plugins were not already loaded If the plugins have been previously loaded via QPluginLoader directly or due to this class without being deleted in the meantime then they are not re-created or re-parented and will be returned using the parent they were originally created with QPluginLoader::instance() a list containing an instantiation of each plugin that met the filter criteria KPluginLoader::findPlugins() 5.1</field>
  </doc>
  <doc>
    <field name="type">related</field>
    <field name="name">KPluginLoader::K_EXPORT_PLUGIN_VERSION</field>
    <field name="args">(version)</field>
    <field name="url">classKPluginLoader.html#aa8c6d67202b5b0dec86efeebf65a259d</field>
    <field name="keywords">K_EXPORT_PLUGIN_VERSION KPluginLoader::K_EXPORT_PLUGIN_VERSION KPluginLoader</field>
    <field name="text">Use this macro if you want to give your plugin a version number You can later access the version number with KPluginLoader::pluginVersion()</field>
  </doc>
  <doc>
    <field name="type">related</field>
    <field name="name">KPluginLoader::Q_STANDARD_CALL</field>
    <field name="url">classKPluginLoader.html#ac3ba610b4fe7fad63427be66dee8d6e4</field>
    <field name="keywords">Q_STANDARD_CALL KPluginLoader::Q_STANDARD_CALL KPluginLoader</field>
    <field name="text">This macro exports the main object of the plugin Most times this will be a KPluginFactory or derived class but any QObject derived class can be used Take a look at the documentation of Q_EXPORT_PLUGIN2 for some details</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KPluginMetaData</field>
    <field name="url">classKPluginMetaData.html</field>
    <field name="keywords">KPluginMetaData</field>
    <field name="text">Additional plugin-specific metadata can be retrieved by directly reading from the QJsonObject returned by KPluginMetaData::rawData() This class can be used instead of KPluginInfo from KService for applications that only load Qt C++ plugins The following keys will be read from an object inside the metadata JSON Key Accessor function JSON Type Name name() string Description description() string ExtraInformation extraInformation() string Icon iconName() string Authors authors() object array KAboutPerson Category category() string License license() string Copyright copyrightText() string Id pluginId() string Version version() string Website website() string EnabledByDefault isEnabledByDefault() bool ServiceTypes serviceTypes() string array MimeTypes mimeTypes() string array FormFactors formFactors() string array Translators translators() object array KAboutPerson OtherContributors otherContributors() object array KAboutPerson The Authors Translators and OtherContributors keys are expected to be list of objects that match the structure expected by KAboutPerson::fromJSON() An example metadata json file could look like this KAboutPerson::fromJSON() 5.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::KPluginMetaData</field>
    <field name="args">()</field>
    <field name="url">classKPluginMetaData.html#a4dcccc645bd07a7f49a88b54846f227b</field>
    <field name="keywords">KPluginMetaData KPluginMetaData::KPluginMetaData KPluginMetaData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::KPluginMetaData</field>
    <field name="args">(const KPluginLoader &amp;loader)</field>
    <field name="url">classKPluginMetaData.html#a449ce8a3569498bd65464e08813c9d6c</field>
    <field name="keywords">KPluginMetaData KPluginMetaData::KPluginMetaData KPluginMetaData</field>
    <field name="text">You must call KPluginLoader::setFileName() or use the appropriate constructor on loader before calling this</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::KPluginMetaData</field>
    <field name="args">(const QPluginLoader &amp;loader)</field>
    <field name="url">classKPluginMetaData.html#ab2e7d4c4d056966e565382571614e90b</field>
    <field name="keywords">KPluginMetaData KPluginMetaData::KPluginMetaData KPluginMetaData</field>
    <field name="text">You must call QPluginLoader::setFileName() or use the appropriate constructor on loader before calling this</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::KPluginMetaData</field>
    <field name="args">(const QString &amp;file)</field>
    <field name="url">classKPluginMetaData.html#a0516c295306719273d38c86606082762</field>
    <field name="keywords">KPluginMetaData KPluginMetaData::KPluginMetaData KPluginMetaData</field>
    <field name="text">For plugins platform-specific library suffixes may be omitted since file will be resolved using the same logic as QPluginLoader If the file name ends with the desktop file will be parsed instead of reading the metadata from the QPluginLoader This is the same as calling KPluginMetaData::fromDesktopFile() without the serviceTypes parameter If file ends with json the file will be loaded as the QJsonObject metadata QPluginLoader::setFileName() KPluginMetaData::fromDesktopFile()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::KPluginMetaData</field>
    <field name="args">(const QJsonObject &amp;metaData, const QString &amp;file)</field>
    <field name="url">classKPluginMetaData.html#aa68eb26460d7b83d8ddedd4cd9a8c398</field>
    <field name="keywords">KPluginMetaData KPluginMetaData::KPluginMetaData KPluginMetaData</field>
    <field name="text">KPluginMetaData(const QJsonObject &amp;, const QString &amp;, const QString &amp;)</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::KPluginMetaData</field>
    <field name="args">(const QJsonObject &amp;metaData, const QString &amp;pluginFile, const QString &amp;metaDataFile)</field>
    <field name="url">classKPluginMetaData.html#a7bbdbb7e9aaf250fba43fb946a2b4089</field>
    <field name="keywords">KPluginMetaData KPluginMetaData::KPluginMetaData KPluginMetaData</field>
    <field name="text">metaData the JSON metadata to use for this object pluginFile the file that the plugin can be loaded from metaDataFile the file that the JSON metadata was read from This can be used if the data is not retrieved from a Qt C++ plugin library but from some other source 5.5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::KPluginMetaData</field>
    <field name="args">(const KPluginMetaData &amp;)</field>
    <field name="url">classKPluginMetaData.html#a0fb8469c88524f85704f7b4b3a14be25</field>
    <field name="keywords">KPluginMetaData KPluginMetaData::KPluginMetaData KPluginMetaData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::~KPluginMetaData</field>
    <field name="args">()</field>
    <field name="url">classKPluginMetaData.html#a53d7c2c2feda71ab2c1aad92e212a322</field>
    <field name="keywords">KPluginMetaData::~KPluginMetaData KPluginMetaData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::authors</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#a5ed3f2d7180da50252fbe8a51d08453a</field>
    <field name="keywords">authors KPluginMetaData::authors KPluginMetaData</field>
    <field name="text">the author(s) of this plugin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::category</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#a180f69cc826818124edd7214570fe46f</field>
    <field name="keywords">category KPluginMetaData::category KPluginMetaData</field>
    <field name="text">the categories of this plugin e.g</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::copyrightText</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#a37898ea09c863c4a9c75eee794381f6e</field>
    <field name="keywords">copyrightText KPluginMetaData::copyrightText KPluginMetaData</field>
    <field name="text">a short copyright statement 5.18</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::dependencies</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#a82d2e87db9b834bfbb6f0155709b617c</field>
    <field name="keywords">dependencies KPluginMetaData::dependencies KPluginMetaData</field>
    <field name="text">a list of plugins that this plugin depends on so that it can function properly KJsonPluginInfo::pluginId()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::description</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#ae43bf4faf9e18daca990b078b75f365e</field>
    <field name="keywords">description KPluginMetaData::description KPluginMetaData</field>
    <field name="text">a short description of the plugin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::extraInformation</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#abd2fccc76b54d28f401ca34672b5d3cf</field>
    <field name="keywords">extraInformation KPluginMetaData::extraInformation KPluginMetaData</field>
    <field name="text">additional information about this plugin e.g for use in an dialog 5.18</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::fileName</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#a758e9e9ff04b9731ec8366db4fe15150</field>
    <field name="keywords">fileName KPluginMetaData::fileName KPluginMetaData</field>
    <field name="text">the path to the plugin This string can be passed to the KPluginLoader or QPluginLoader constructors in order to attempt to load this plugin It is not guaranteed that this is a valid path to a shared library i.e loadable by QPluginLoader since the metadata could also refer to a non-C++ plugin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::formFactors</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#aee0aa2c916f3421625107701500d82f0</field>
    <field name="keywords">formFactors KPluginMetaData::formFactors KPluginMetaData</field>
    <field name="text">A string list of formfactors this plugin is useful for e.g desktop tablet handset mediacenter etc The keys for this are not formally defined 5.12</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::iconName</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#a88b810061ce01edf3c70cd78143ee938</field>
    <field name="keywords">iconName KPluginMetaData::iconName KPluginMetaData</field>
    <field name="text">the icon name for this plugin QIcon::fromTheme()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::instantiate</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#aebd1096b7fd356dd84bc7ef19ab08d01</field>
    <field name="keywords">instantiate KPluginMetaData::instantiate KPluginMetaData</field>
    <field name="text">The value of KPluginMetaData::dependencies() is not used here dependencies must be resolved manually The plugin root object or nullptr if it could not be loaded QPluginLoader::instance() KPluginLoader::instance()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::isEnabledByDefault</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#ad48f98a3a3be6b07d9359ea0774ebf0f</field>
    <field name="keywords">isEnabledByDefault KPluginMetaData::isEnabledByDefault KPluginMetaData</field>
    <field name="text">whether the plugin should be enabled by default This is only a recommendation applications can ignore this value if they want to</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::isHidden</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#a24482f74542b07a6be502bd9d2ee38a2</field>
    <field name="keywords">isHidden KPluginMetaData::isHidden KPluginMetaData</field>
    <field name="text">whether this object should be hidden this is usually not used for binary plugins when loading a KPluginMetaData from a desktop file this will reflect the value of the key 5.8</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::isValid</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#a9205b02a9444f87e501f221bd97f6533</field>
    <field name="keywords">isValid KPluginMetaData::isValid KPluginMetaData</field>
    <field name="text">whether this object holds valid information about a plugin If this is true pluginId() will return a non-empty string</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::license</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#a5336c78daa810e14ec1dd303e9c327b3</field>
    <field name="keywords">license KPluginMetaData::license KPluginMetaData</field>
    <field name="text">the short license identifier e.g LGPL KAboutLicense::byKeyword() for retrieving the full license information</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::metaDataFileName</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#a3d64a2a5bbc19874c11dc003c8f203a6</field>
    <field name="keywords">metaDataFileName KPluginMetaData::metaDataFileName KPluginMetaData</field>
    <field name="text">the file that the metadata was read from This is not necessarily the same as fileName() since not all plugins have the metadata embedded The metadata could also be stored in a separate desktop file 5.5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::mimeTypes</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#a1f02e0567f393d33c3f59955aa8f9260</field>
    <field name="keywords">mimeTypes KPluginMetaData::mimeTypes KPluginMetaData</field>
    <field name="text">a list of MIME types this plugin can handle e.g etc 5.16</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::name</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#a9011b7492ac24e0370aad06397c43352</field>
    <field name="keywords">name KPluginMetaData::name KPluginMetaData</field>
    <field name="text">the user visible name of the plugin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::operator!=</field>
    <field name="args">(const KPluginMetaData &amp;other) const</field>
    <field name="url">classKPluginMetaData.html#a4dc965510a0e5f4147cb401e5a1eb615</field>
    <field name="keywords">operator!= KPluginMetaData::operator!= KPluginMetaData</field>
    <field name="text">true if this object is not equal to other otherwise false</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::operator=</field>
    <field name="args">(const KPluginMetaData &amp;)</field>
    <field name="url">classKPluginMetaData.html#a7e88b4a436e75d8e7ec13dc80cdef3ac</field>
    <field name="keywords">operator= KPluginMetaData::operator= KPluginMetaData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::operator==</field>
    <field name="args">(const KPluginMetaData &amp;other) const</field>
    <field name="url">classKPluginMetaData.html#aa74438c63e21519b6185b65a6d41832a</field>
    <field name="keywords">operator== KPluginMetaData::operator== KPluginMetaData</field>
    <field name="text">true if this object is equal to other otherwise false</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::otherContributors</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#aa32d033670fc5e9c639e13e43d9d0cd5</field>
    <field name="keywords">otherContributors KPluginMetaData::otherContributors KPluginMetaData</field>
    <field name="text">a list of people that contributed to this plugin other than the authors and translators 5.18</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::pluginId</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#a06b3f4742bb2d5ad5a2598c4ef8bd75d</field>
    <field name="keywords">pluginId KPluginMetaData::pluginId KPluginMetaData</field>
    <field name="text">the internal name of the plugin for KParts Plugins this is the same name as set in the rc file If the plugin name property is not set in the metadata this will return the plugin file name without the file extension</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::rawData</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#a61a4c18a7ad2ebd063221a9936be1113</field>
    <field name="keywords">rawData KPluginMetaData::rawData KPluginMetaData</field>
    <field name="text">the full metadata stored inside the plugin file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::serviceTypes</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#aa1d6d1a0f58f750f7a36dbc9d1f03b09</field>
    <field name="keywords">serviceTypes KPluginMetaData::serviceTypes KPluginMetaData</field>
    <field name="text">Unlike KService this does not contain the MIME types To get the handled MIME types use the KPluginMetaData::mimeTypes() function a list of service types this plugin implements e.g</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::translators</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#aff3a7690fd4c88e5229061cc8df87a89</field>
    <field name="keywords">translators KPluginMetaData::translators KPluginMetaData</field>
    <field name="text">the translator(s) of this plugin 5.18</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::value</field>
    <field name="args">(const QString &amp;key, const QString &amp;defaultValue=QString()) const</field>
    <field name="url">classKPluginMetaData.html#a375fa8ec5b1a562d8fad70c593f825b7</field>
    <field name="keywords">value KPluginMetaData::value KPluginMetaData</field>
    <field name="text">the value for key from the metadata or defaultValue if the key does not exist or the value for key is not of type string KPluginMetaData::rawData() if QString is not the correct type for key</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::version</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#ac19d8a09870418b903b816b9b19eec57</field>
    <field name="keywords">version KPluginMetaData::version KPluginMetaData</field>
    <field name="text">the version of the plugin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::website</field>
    <field name="args">() const</field>
    <field name="url">classKPluginMetaData.html#a409ef7e1391c68f36f25ab994932b774</field>
    <field name="keywords">website KPluginMetaData::website KPluginMetaData</field>
    <field name="text">the website of the plugin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::fromDesktopFile</field>
    <field name="args">(const QString &amp;file, const QStringList &amp;serviceTypes=QStringList())</field>
    <field name="url">classKPluginMetaData.html#ac6e87c110b4743ce1b16044c649838ba</field>
    <field name="keywords">fromDesktopFile KPluginMetaData::fromDesktopFile KPluginMetaData</field>
    <field name="text">Unlike the constructor which takes a single file parameter this method allows you to specify which service type files should be parsed to determine the correct type for a given desktop property This ensures that a e.g comma-separated string list field in the desktop file will correctly be converted to a JSON string array This function mostly exists for backwards-compatibility It is recommended that new applications load JSON files directly instead of using desktop files for plugin metadata file the desktop file to load serviceTypes a list of files to parse If one of these paths is a relative path it will be resolved relative to the subdirectory in QStandardPaths::GenericDataLocation If the list is empty only the default set of properties will be treated specially and all other entries will be read as the JSON string type 5.16</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::readStringList</field>
    <field name="args">(const QJsonObject &amp;jo, const QString &amp;key)</field>
    <field name="url">classKPluginMetaData.html#a3bf0f2edf5cf1f4b4ed66269eae35c68</field>
    <field name="keywords">readStringList KPluginMetaData::readStringList KPluginMetaData</field>
    <field name="text">the value for key inside jo as a string list If the type of key is string a list with containing just that string will be returned if it is an array the list will contain one entry for each array member If the key cannot be found an empty list will be returned</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::readTranslatedString</field>
    <field name="args">(const QJsonObject &amp;jo, const QString &amp;key, const QString &amp;defaultValue=QString())</field>
    <field name="url">classKPluginMetaData.html#a0fc9f5db9cecfd1a245e2a4a98b83fb0</field>
    <field name="keywords">readTranslatedString KPluginMetaData::readTranslatedString KPluginMetaData</field>
    <field name="text">the translated value of key from jo as a string or defaultValue if key was not found or the value for key is not of type string KPluginMetaData::readTranslatedValue(const QJsonObject &amp;jo, const QString &amp;key)</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginMetaData::readTranslatedValue</field>
    <field name="args">(const QJsonObject &amp;jo, const QString &amp;key, const QJsonValue &amp;defaultValue=QJsonValue())</field>
    <field name="url">classKPluginMetaData.html#ab71f4d031e39fe834f4ac83d6f27e36a</field>
    <field name="keywords">readTranslatedValue KPluginMetaData::readTranslatedValue KPluginMetaData</field>
    <field name="text">or When looking for a key with German Germany locale we will first attempt to read if that does not exist finally falling back to if that also doesn t exist the translated value for key from jo or defaultValue if key was not found</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KPluginName</field>
    <field name="url">classKPluginName.html</field>
    <field name="keywords">KPluginName</field>
    <field name="text">This exists only so that classes such as KService can provide a cast operator to allow them to be used as arguments to KPluginLoader Unless you are implementing such a cast operator you should never need to use this class directly</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginName::KPluginName</field>
    <field name="args">(const QString &amp;name)</field>
    <field name="url">classKPluginName.html#a04dad0cf2de5cba593516f6e3eb8bdff</field>
    <field name="keywords">KPluginName KPluginName::KPluginName KPluginName</field>
    <field name="text">If there was an error and the name could not be determined fromErrorString() should be used instead to construct an appropriate error message name The name of the plugin this should not be empty</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginName::errorString</field>
    <field name="args">() const</field>
    <field name="url">classKPluginName.html#ad403352894968a92741b4faa8b65846c</field>
    <field name="keywords">errorString KPluginName::errorString KPluginName</field>
    <field name="text">The string passed to fromErrorString() if isValid() is false QString() otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginName::isValid</field>
    <field name="args">() const</field>
    <field name="url">classKPluginName.html#af2f7b92dbdf1d29e530187e316e74640</field>
    <field name="keywords">isValid KPluginName::isValid KPluginName</field>
    <field name="text">Note that this only determines how the KPluginName was constructed not anything about the value of the string true if the KPluginName(const QString&amp;) constructor was used false if fromErrorString() was used</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginName::name</field>
    <field name="args">() const</field>
    <field name="url">classKPluginName.html#ad4317fa6c84cab13a8c4ba9d03137010</field>
    <field name="keywords">name KPluginName::name KPluginName</field>
    <field name="text">The string passed to the constructor if isValid() is true QString() otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginName::fromErrorString</field>
    <field name="args">(const QString &amp;errorString)</field>
    <field name="url">classKPluginName.html#a994d6b7b1418cae4b8c65b2b36fcdc08</field>
    <field name="keywords">fromErrorString KPluginName::fromErrorString KPluginName</field>
    <field name="text">When this object is passed to KPluginLoader errorString will be used for KPluginLoader::errorString() errorString The translated error string</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KProcess</field>
    <field name="url">classKProcess.html</field>
    <field name="keywords">KProcess</field>
    <field name="text">This class extends QProcess by some useful functionality overrides some defaults with saner values and wraps parts of the API into a more accessible one Only use KProcess if you need the extra features otherwise QProcess is the preferred way of spawning child processes Oswald Buddenhagen</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KProcess::OutputChannelMode</field>
    <field name="url">classKProcess.html#a4acf3452f1bf5bd3954d272168b16c87</field>
    <field name="keywords">OutputChannelMode KProcess::OutputChannelMode KProcess</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KProcess::SeparateChannels</field>
    <field name="url">classKProcess.html#a4acf3452f1bf5bd3954d272168b16c87af4d4c1acd2fb7db2f33e0063cada2f1a</field>
    <field name="keywords">SeparateChannels KProcess::SeparateChannels KProcess</field>
    <field name="text">Standard output and standard error are handled by KProcess as separate channels</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KProcess::MergedChannels</field>
    <field name="url">classKProcess.html#a4acf3452f1bf5bd3954d272168b16c87ad56a69aaab2b00eaebcae0ca58debbbc</field>
    <field name="keywords">MergedChannels KProcess::MergedChannels KProcess</field>
    <field name="text">Standard output and standard error are handled by KProcess as one channel</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KProcess::ForwardedChannels</field>
    <field name="url">classKProcess.html#a4acf3452f1bf5bd3954d272168b16c87ae59dc625768089fceea8977391c02e0b</field>
    <field name="keywords">ForwardedChannels KProcess::ForwardedChannels KProcess</field>
    <field name="text">Both standard output and standard error are forwarded to the parent process respective channel</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KProcess::OnlyStdoutChannel</field>
    <field name="url">classKProcess.html#a4acf3452f1bf5bd3954d272168b16c87a6b5f2d82d9a5599806b5d8013ab58694</field>
    <field name="keywords">OnlyStdoutChannel KProcess::OnlyStdoutChannel KProcess</field>
    <field name="text">Only standard output is handled standard error is forwarded</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KProcess::OnlyStderrChannel</field>
    <field name="url">classKProcess.html#a4acf3452f1bf5bd3954d272168b16c87af91ed9d3f45f13f1c58901a61b1df887</field>
    <field name="keywords">OnlyStderrChannel KProcess::OnlyStderrChannel KProcess</field>
    <field name="text">Only standard error is handled standard output is forwarded</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::KProcess</field>
    <field name="args">(QObject *parent=0)</field>
    <field name="url">classKProcess.html#a94456056835012a07c9dc077d00ce286</field>
    <field name="keywords">KProcess KProcess::KProcess KProcess</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::~KProcess</field>
    <field name="args">()</field>
    <field name="url">classKProcess.html#aaaf0e2133a2218bdcd88003162f67602</field>
    <field name="keywords">KProcess::~KProcess KProcess</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::clearEnvironment</field>
    <field name="args">()</field>
    <field name="url">classKProcess.html#aa0c47cd15a2782c36404870c024f4915</field>
    <field name="keywords">clearEnvironment KProcess::clearEnvironment KProcess</field>
    <field name="text">Note that LD_LIBRARY_PATH/DYLD_LIBRARY_PATH is automatically added on This function must be called before starting the process</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::clearProgram</field>
    <field name="args">()</field>
    <field name="url">classKProcess.html#a432e2ddd9c3f2b56f3430ae92b097827</field>
    <field name="keywords">clearProgram KProcess::clearProgram KProcess</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::execute</field>
    <field name="args">(int msecs=-1)</field>
    <field name="url">classKProcess.html#adc5c9b1a37d04ad56c8261503a08ea82</field>
    <field name="keywords">execute KProcess::execute KProcess</field>
    <field name="text">This method is roughly equivalent to the sequence start() waitForFinished(msecs) return exitCode() Unlike the other execute() variants this method is not static so the process can be parametrized properly and talked to msecs time to wait for process to exit before killing it if the process could not be started if it crashed otherwise its exit code</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::operator&lt;&lt;</field>
    <field name="args">(const QString &amp;arg)</field>
    <field name="url">classKProcess.html#a622180f48f80ff03c7d29b2d6ae8fa70</field>
    <field name="keywords">operator&lt;&lt; KProcess::operator&lt;&lt; KProcess</field>
    <field name="text">If no executable is set yet it will be set instead For example doing an can be achieved by This function must be called before starting the process obviously arg the argument to add a reference to this KProcess</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::operator&lt;&lt;</field>
    <field name="args">(const QStringList &amp;args)</field>
    <field name="url">classKProcess.html#a2c023c6dea904e00486ff08ea7214f7e</field>
    <field name="keywords">operator&lt;&lt; KProcess::operator&lt;&lt; KProcess</field>
    <field name="text">args the arguments to add a reference to this KProcess</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::outputChannelMode</field>
    <field name="args">() const</field>
    <field name="url">classKProcess.html#a63e4e99b82df9671fd88a14380084d20</field>
    <field name="keywords">outputChannelMode KProcess::outputChannelMode KProcess</field>
    <field name="text">the output channel handling mode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::pid</field>
    <field name="args">() const</field>
    <field name="url">classKProcess.html#a0c991c492a346417f352b88b4e313c8c</field>
    <field name="keywords">pid KProcess::pid KProcess</field>
    <field name="text">Unlike with QProcess::pid() this is a real PID also on Windows This function can be called only while the process is running It cannot be applied to detached processes the process ID</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::program</field>
    <field name="args">() const</field>
    <field name="url">classKProcess.html#a680bbb4c8186dd463d044640358344ff</field>
    <field name="keywords">program KProcess::program KProcess</field>
    <field name="text">a list the first element being the program the remaining ones being command line arguments to the program</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::setEnv</field>
    <field name="args">(const QString &amp;name, const QString &amp;value, bool overwrite=true)</field>
    <field name="url">classKProcess.html#ad5218a3478719d72a4db4a1adf3dbb20</field>
    <field name="keywords">setEnv KProcess::setEnv KProcess</field>
    <field name="text">This function must be called before starting the process name the name of the environment variable value the new value for the environment variable overwrite if false and the environment variable is already set the old value will be preserved</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::setNextOpenMode</field>
    <field name="args">(QIODevice::OpenMode mode)</field>
    <field name="url">classKProcess.html#a2fde098c4fea5e5178982309d02f266f</field>
    <field name="keywords">setNextOpenMode KProcess::setNextOpenMode KProcess</field>
    <field name="text">This function must be called before starting the process obviously mode the open mode Note that this mode is automatically according to the channel modes and redirections The default is QIODevice::ReadWrite</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::setOutputChannelMode</field>
    <field name="args">(OutputChannelMode mode)</field>
    <field name="url">classKProcess.html#a7c91d212c2fa397f4a7b1840c5de5c2f</field>
    <field name="keywords">setOutputChannelMode KProcess::setOutputChannelMode KProcess</field>
    <field name="text">The default is ForwardedChannels which is unlike in QProcess Do not request more than you actually handle as this output is simply lost otherwise This function must be called before starting the process mode the output channel handling mode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::setProgram</field>
    <field name="args">(const QString &amp;exe, const QStringList &amp;args=QStringList())</field>
    <field name="url">classKProcess.html#afad13da571471df810159602aea3d781</field>
    <field name="keywords">setProgram KProcess::setProgram KProcess</field>
    <field name="text">This function must be called before starting the process obviously exe the program to execute args the command line arguments for the program one per list element</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::setProgram</field>
    <field name="args">(const QStringList &amp;argv)</field>
    <field name="url">classKProcess.html#aa0d38be873db69cd97863e429e2e37ad</field>
    <field name="keywords">setProgram KProcess::setProgram KProcess</field>
    <field name="text">argv the program to execute and the command line arguments for the program one per list element</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::setShellCommand</field>
    <field name="args">(const QString &amp;cmd)</field>
    <field name="url">classKProcess.html#a291b7b2bec6c9f49e0f5140ff06e75c2</field>
    <field name="keywords">setShellCommand KProcess::setShellCommand KProcess</field>
    <field name="text">Using this for anything but user-supplied commands is usually a bad idea as the command s syntax depends on the platform Redirections including pipes etc are better handled by the respective functions provided by QProcess If KProcess determines that the command does not really need a shell it will trasparently execute it without one for performance reasons This function must be called before starting the process obviously cmd the command to execute through a shell The caller must make sure that all filenames etc are properly quoted when passed as argument Failure to do so often results in serious security holes See KShell::quoteArg()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::start</field>
    <field name="args">()</field>
    <field name="url">classKProcess.html#a28f6c3ffc96c76490fe9a552c053a417</field>
    <field name="keywords">start KProcess::start KProcess</field>
    <field name="text">QProcess::start(const QString &amp;, const QStringList &amp;, OpenMode)</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::startDetached</field>
    <field name="args">()</field>
    <field name="url">classKProcess.html#a724d24732a54ae27f1c83133f18a2de8</field>
    <field name="keywords">startDetached KProcess::startDetached KProcess</field>
    <field name="text">See QProcess::startDetached() for details Unlike the other startDetached() variants this method is not static so the process can be parametrized properly Currently only the setProgram() and setWorkingDirectory() parametrizations are supported The KProcess object may be re-used immediately after calling this function the PID of the started process or 0 on error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::unsetEnv</field>
    <field name="args">(const QString &amp;name)</field>
    <field name="url">classKProcess.html#a536b23bca1d0b25a885dc83752eb0619</field>
    <field name="keywords">unsetEnv KProcess::unsetEnv KProcess</field>
    <field name="text">This function must be called before starting the process name the name of the environment variable</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::execute</field>
    <field name="args">(const QString &amp;exe, const QStringList &amp;args=QStringList(), int msecs=-1)</field>
    <field name="url">classKProcess.html#a913f73fb177f7425f7f76f06bfb203b9</field>
    <field name="keywords">execute KProcess::execute KProcess</field>
    <field name="text">exe the program to execute args the command line arguments for the program one per list element msecs time to wait for process to exit before killing it if the process could not be started if it crashed otherwise its exit code</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::execute</field>
    <field name="args">(const QStringList &amp;argv, int msecs=-1)</field>
    <field name="url">classKProcess.html#a998db042f0ad3f6b92fd738cd73c0379</field>
    <field name="keywords">execute KProcess::execute KProcess</field>
    <field name="text">argv the program to execute and the command line arguments for the program one per list element msecs time to wait for process to exit before killing it if the process could not be started if it crashed otherwise its exit code</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::startDetached</field>
    <field name="args">(const QString &amp;exe, const QStringList &amp;args=QStringList())</field>
    <field name="url">classKProcess.html#a24321850a114a718cdf7d601d1c076a1</field>
    <field name="keywords">startDetached KProcess::startDetached KProcess</field>
    <field name="text">exe the program to start args the command line arguments for the program one per list element the PID of the started process or 0 on error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::startDetached</field>
    <field name="args">(const QStringList &amp;argv)</field>
    <field name="url">classKProcess.html#a74af9d9f41d3f6fd41366d371c98015e</field>
    <field name="keywords">startDetached KProcess::startDetached KProcess</field>
    <field name="text">argv the program to start and the command line arguments for the program one per list element the PID of the started process or 0 on error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KProcess::KProcess</field>
    <field name="args">(KProcessPrivate *d, QObject *parent)</field>
    <field name="url">classKProcess.html#a3ab437173ad7c4280ff8c7d0031c90ac</field>
    <field name="keywords">KProcess KProcess::KProcess KProcess</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">KProcess::d_ptr</field>
    <field name="url">classKProcess.html#a3e9af74721a82e0c0dea2c0596886a99</field>
    <field name="keywords">d_ptr KProcess::d_ptr KProcess</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KRandomSequence</field>
    <field name="url">classKRandomSequence.html</field>
    <field name="keywords">KRandomSequence</field>
    <field name="text">Given a seed number this class will produce a sequence of pseudo-random numbers This would typically be used in applications like games In general you should instantiate a KRandomSequence object and pass along your seed number in the constructor From then on simply call getDouble or getLong to obtain the next number in the sequence Sean Harmer</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRandomSequence::KRandomSequence</field>
    <field name="args">(int intSeed=0)</field>
    <field name="url">classKRandomSequence.html#acae86b6075b581dbf28c838a304d682c</field>
    <field name="keywords">KRandomSequence KRandomSequence::KRandomSequence KRandomSequence</field>
    <field name="text">A Pseudo-random sequence is different for each seed but can be reproduced by starting the sequence with the same seed If you need a single value which needs to be unpredictable you need to use KRandom::random() instead intSeed Seed to initialize the sequence with If lngSeed is 0 the sequence is initialized with a value from KRandom::random() Do not use methods working with long type because on 64-bit their size is different</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRandomSequence::KRandomSequence</field>
    <field name="args">(const KRandomSequence &amp;a)</field>
    <field name="url">classKRandomSequence.html#a8f0271691bcc53233396f163997d4524</field>
    <field name="keywords">KRandomSequence KRandomSequence::KRandomSequence KRandomSequence</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRandomSequence::~KRandomSequence</field>
    <field name="args">()</field>
    <field name="url">classKRandomSequence.html#a1d4d76db08827e3b39a0564a5699da1e</field>
    <field name="keywords">KRandomSequence::~KRandomSequence KRandomSequence</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRandomSequence::getBool</field>
    <field name="args">()</field>
    <field name="url">classKRandomSequence.html#ae304e60895f39b698719aa00ed365dea</field>
    <field name="keywords">getBool KRandomSequence::getBool KRandomSequence</field>
    <field name="text">a boolean which is either true or false</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRandomSequence::getDouble</field>
    <field name="args">()</field>
    <field name="url">classKRandomSequence.html#a7942e764b28120fca4fc9de2a314eac5</field>
    <field name="keywords">getDouble KRandomSequence::getDouble KRandomSequence</field>
    <field name="text">a pseudo-random double value between 0 1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRandomSequence::getInt</field>
    <field name="args">(unsigned int max)</field>
    <field name="url">classKRandomSequence.html#a11d7a8414a76c724e2bd21242e307069</field>
    <field name="keywords">getInt KRandomSequence::getInt KRandomSequence</field>
    <field name="text">a pseudo-random integer value between 0 max with 0 max 1.000.000</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRandomSequence::modulate</field>
    <field name="args">(int i)</field>
    <field name="url">classKRandomSequence.html#a7c05df1c56887ad233f1c677d09836c5</field>
    <field name="keywords">modulate KRandomSequence::modulate KRandomSequence</field>
    <field name="text">If S(i) is the sequence of numbers that will follow given the current state after calling modulate(i) then S(i) S(j) for i j and S(i) S(j) for i j This can be useful in game situation where restores the state of the random sequence If the game modulates the random sequence with the move chosen by the player the random sequence will be identical whenever the player his or hers original move but different when the player chooses another move With this scenario can no longer be used to repeat a certain move over and over again until the computer reacts with a favorable response or to predict the response for a certain move based on the response to another move i the sequence identified</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRandomSequence::operator=</field>
    <field name="args">(const KRandomSequence &amp;a)</field>
    <field name="url">classKRandomSequence.html#a0d8434667e8162f9c1bb4720266cc720</field>
    <field name="keywords">operator= KRandomSequence::operator= KRandomSequence</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRandomSequence::randomize</field>
    <field name="args">(QList&lt; T &gt; &amp;list)</field>
    <field name="url">classKRandomSequence.html#a4faaf5e339f0c618dae4f8c03de540d6</field>
    <field name="keywords">randomize KRandomSequence::randomize KRandomSequence</field>
    <field name="text">Since kdelibs 4.11 this function uses a more efficient algorithm Fisher-Yates Therefore the order of the items in the randomized list is different from the one in earlier versions if the same seed value is used for the random sequence list the list whose order will be modified modifies the list in place</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRandomSequence::setSeed</field>
    <field name="args">(int intSeed=0)</field>
    <field name="url">classKRandomSequence.html#a04876327f17ce23d77486c7c128f8b61</field>
    <field name="keywords">setSeed KRandomSequence::setSeed KRandomSequence</field>
    <field name="text">intSeed Seed to initialize the sequence with If lngSeed is 0 the sequence is initialized with a value from KRandom::random()</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KSharedDataCache</field>
    <field name="url">classKSharedDataCache.html</field>
    <field name="keywords">KSharedDataCache</field>
    <field name="text">This class is meant to be used with KImageCache and similar classes but can be used directly if used with care Example usage Michael Pyne KImageCache 4.5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSharedDataCache::KSharedDataCache</field>
    <field name="args">(const QString &amp;cacheName, unsigned defaultCacheSize, unsigned expectedItemSize=0)</field>
    <field name="url">classKSharedDataCache.html#a9bf6b590d48889bb2dd3116cce0be3a9</field>
    <field name="keywords">KSharedDataCache KSharedDataCache::KSharedDataCache KSharedDataCache</field>
    <field name="text">If supported this data cache will be shared across all processes using this cache with subsequent memory savings If shared memory is unsupported or a failure occurs caching will still be supported but only in the same process and only using the same KSharedDataCache object cacheName Name of the cache to use/share defaultCacheSize Amount of data to be able to store in bytes The actual size will be slightly larger on disk due to accounting overhead If the cache already existed then it will not be resized For this reason you should specify some reasonable size expectedItemSize The average size of an item that would be stored in the cache in bytes Choosing an average size of zero bytes causes KSharedDataCache to use whatever it feels is the best default for the system</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSharedDataCache::clear</field>
    <field name="args">()</field>
    <field name="url">classKSharedDataCache.html#a57466d4deb2939f69da2dccdd4a6267e</field>
    <field name="keywords">clear KSharedDataCache::clear KSharedDataCache</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSharedDataCache::contains</field>
    <field name="args">(const QString &amp;key) const</field>
    <field name="url">classKSharedDataCache.html#ae6666c9437ef076af6345d54faa3d13a</field>
    <field name="keywords">contains KSharedDataCache::contains KSharedDataCache</field>
    <field name="text">NOTE Calling this function is threadsafe but it is in general not possible to guarantee the image stays cached immediately afterwards so if you need the result use find()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSharedDataCache::evictionPolicy</field>
    <field name="args">() const</field>
    <field name="url">classKSharedDataCache.html#aea19f382f0c3fcb465140ac102871040</field>
    <field name="keywords">evictionPolicy KSharedDataCache::evictionPolicy KSharedDataCache</field>
    <field name="text">The removal policy in use by the shared cache EvictionPolicy</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSharedDataCache::find</field>
    <field name="args">(const QString &amp;key, QByteArray *destination) const</field>
    <field name="url">classKSharedDataCache.html#aed74e53a0eccdd1fd111d70e4e98ac91</field>
    <field name="keywords">find KSharedDataCache::find KSharedDataCache</field>
    <field name="text">If there is no entry named by key then destination is left unchanged The return value is used to tell what happened If you simply want to verify whether an entry is present in the cache then see contains() key The key to find in the cache destination Is set to the value of key in the cache if key is present left unchanged otherwise true if key was present in the cache destination will also be updated false if key was not present destination will be unchanged</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSharedDataCache::freeSize</field>
    <field name="args">() const</field>
    <field name="url">classKSharedDataCache.html#a53fb99cc1ac1d9221a2e2498a44cb622</field>
    <field name="keywords">freeSize KSharedDataCache::freeSize KSharedDataCache</field>
    <field name="text">Due to implementation details it is possible to still not be able to fit an entry in the cache at any given time even if it is smaller than the amount of space remaining</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSharedDataCache::insert</field>
    <field name="args">(const QString &amp;key, const QByteArray &amp;data)</field>
    <field name="url">classKSharedDataCache.html#ac655ec627e842f24ce6148e12c57c477</field>
    <field name="keywords">insert KSharedDataCache::insert KSharedDataCache</field>
    <field name="text">Note that even if the insert was successful that the newly added entry may be evicted by other processes contending for the cache</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSharedDataCache::setEvictionPolicy</field>
    <field name="args">(EvictionPolicy newPolicy)</field>
    <field name="url">classKSharedDataCache.html#a917ba952af794cb09d08a86e87083e2d</field>
    <field name="keywords">setEvictionPolicy KSharedDataCache::setEvictionPolicy KSharedDataCache</field>
    <field name="text">The default is EvictionPolicy::NoEvictionPreference EvictionPolicy</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSharedDataCache::setTimestamp</field>
    <field name="args">(unsigned newTimestamp)</field>
    <field name="url">classKSharedDataCache.html#aeaa4c736c28affcd97dc7a8bdc2193be</field>
    <field name="keywords">setTimestamp KSharedDataCache::setTimestamp KSharedDataCache</field>
    <field name="text">Timestamping is supported to allow applications to more effectively the data stored in the cache However the timestamp is shared with all applications using the cache so you should always be prepared for invalid timestamps When the cache is first created note that this is different from attaching to an existing shared cache on disk the cache timestamp is initialized to the time returned by time(2) KSharedDataCache will not update the timestamp again it is only updated through this method Example newTimestamp The new timestamp to mark the shared cache with timestamp() 4.6</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSharedDataCache::timestamp</field>
    <field name="args">() const</field>
    <field name="url">classKSharedDataCache.html#ad1435451970770347c5e5845b283579a</field>
    <field name="keywords">timestamp KSharedDataCache::timestamp KSharedDataCache</field>
    <field name="text">The shared timestamp of the cache The interpretation of the timestamp returned is up to the application KSharedDataCache will initialize the timestamp to the time returned by time(2) on cache creation but KSharedDataCache will not touch the timestamp again setTimestamp() 4.6</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSharedDataCache::totalSize</field>
    <field name="args">() const</field>
    <field name="url">classKSharedDataCache.html#a65e74368247c1b0cbad14119db423231</field>
    <field name="keywords">totalSize KSharedDataCache::totalSize KSharedDataCache</field>
    <field name="text">The actual amount of memory used will be slightly larger than this to account for required accounting overhead</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSharedDataCache::deleteCache</field>
    <field name="args">(const QString &amp;cacheName)</field>
    <field name="url">classKSharedDataCache.html#a55d4d21f16e1cee23b93fb1278b66ee4</field>
    <field name="keywords">deleteCache KSharedDataCache::deleteCache KSharedDataCache</field>
    <field name="text">Note that this is all that this function does The shared memory segment is still attached and will still contain all the data until all processes currently attached remove the mapping In order to remove the data see clear()</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KTextToHTMLEmoticonsInterface</field>
    <field name="url">classKTextToHTMLEmoticonsInterface.html</field>
    <field name="keywords">KTextToHTMLEmoticonsInterface</field>
    <field name="text">Used internally by KTextToHTML implemented by plugin for dynamic dependency on KEmoticons</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KUser</field>
    <field name="url">classKUser.html</field>
    <field name="keywords">KUser</field>
    <field name="text">This class represents a user on your system You can either get information about the current user of fetch information about a user on the system Instances of this class will be explicitly shared so copying objects is very cheap and you can safely pass objects by value Tim Jansen</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KUser::UIDMode</field>
    <field name="url">classKUser.html#af872dddbf613057193693bfe5de51aef</field>
    <field name="keywords">UIDMode KUser::UIDMode KUser</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KUser::UseEffectiveUID</field>
    <field name="url">classKUser.html#af872dddbf613057193693bfe5de51aefa2aff982de5ed9f280cf925b62a7ef353</field>
    <field name="keywords">UseEffectiveUID KUser::UseEffectiveUID KUser</field>
    <field name="text">Use the effective user id</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KUser::UseRealUserID</field>
    <field name="url">classKUser.html#af872dddbf613057193693bfe5de51aefa3456d31acdb3e5a50219bfdd327a0fdd</field>
    <field name="keywords">UseRealUserID KUser::UseRealUserID KUser</field>
    <field name="text">Use the real user id</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::KUser</field>
    <field name="args">(UIDMode mode=UseEffectiveUID)</field>
    <field name="url">classKUser.html#a1acf0491cf181d06b7ef88c5d1b3feae</field>
    <field name="keywords">KUser KUser::KUser KUser</field>
    <field name="text">as returned by getuid(2) or geteuid(2) taking into account mode if UseEffectiveUID is passed the effective user is returned If UseRealUserID is passed the real user will be returned The real UID will be different than the effective UID in setuid programs in such a case use the effective UID for checking permissions and the real UID for displaying information about the user</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::KUser</field>
    <field name="args">(K_UID uid)</field>
    <field name="url">classKUser.html#a5186ec6f24e3d0287ebbf829fb20fae2</field>
    <field name="keywords">KUser KUser::KUser KUser</field>
    <field name="text">If the user does not exist isValid() will return false uid the user id</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::KUser</field>
    <field name="args">(KUserId uid)</field>
    <field name="url">classKUser.html#ac9f1c5e4f61c795bdb58a645e1ee8570</field>
    <field name="keywords">KUser KUser::KUser KUser</field>
    <field name="text">If the KUserId object is invalid this one will be too uid the user id</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::KUser</field>
    <field name="args">(const QString &amp;name)</field>
    <field name="url">classKUser.html#a61fada3543ad2c462ed864f677985cd8</field>
    <field name="keywords">KUser KUser::KUser KUser</field>
    <field name="text">If the user does not exist isValid() will return false name the name of the user</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::KUser</field>
    <field name="args">(const char *name)</field>
    <field name="url">classKUser.html#a224a9fe52abfa4a4771eb936fa915add</field>
    <field name="keywords">KUser KUser::KUser KUser</field>
    <field name="text">If the user does not exist isValid() will return false name the name of the user</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::KUser</field>
    <field name="args">(const passwd *p)</field>
    <field name="url">classKUser.html#a7e4fcd8f1467b08571408f03179c4d69</field>
    <field name="keywords">KUser KUser::KUser KUser</field>
    <field name="text">If the pointer is null isValid() will return false p the passwd structure to create the user from</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::KUser</field>
    <field name="args">(const KUser &amp;user)</field>
    <field name="url">classKUser.html#af78d601f5fd4cbb648cdece3f1a78db3</field>
    <field name="keywords">KUser KUser::KUser KUser</field>
    <field name="text">user the user to create the new object from</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::~KUser</field>
    <field name="args">()</field>
    <field name="url">classKUser.html#a8ad75c3dffd4883e8751fd505053f3c0</field>
    <field name="keywords">KUser::~KUser KUser</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::faceIconPath</field>
    <field name="args">() const</field>
    <field name="url">classKUser.html#a0a799dfd9c983d2c5ab6b1f8b349d84b</field>
    <field name="keywords">faceIconPath KUser::faceIconPath KUser</field>
    <field name="text">the path to the user s face file or QString() if no face has been set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::fullName</field>
    <field name="args">() const</field>
    <field name="url">classKUser.html#a6b22f277c3e42aef350c1d4eea29583b</field>
    <field name="keywords">fullName KUser::fullName KUser</field>
    <field name="text">the full name of the user or QString() if user is invalid use property(KUser::FullName) instead</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::gid</field>
    <field name="args">() const</field>
    <field name="url">classKUser.html#a0b974efa847004b78aca890df1ac51c8</field>
    <field name="keywords">gid KUser::gid KUser</field>
    <field name="text">the id of the group or if user is invalid since 5.0 use KUser::groupId()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::groupId</field>
    <field name="args">() const</field>
    <field name="url">classKUser.html#a2a4c5f4d078277d185a0fb56ed520159</field>
    <field name="keywords">groupId KUser::groupId KUser</field>
    <field name="text">the native user id of the user</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::groupNames</field>
    <field name="args">(uint maxCount=KCOREADDONS_UINT_MAX) const</field>
    <field name="url">classKUser.html#aa79dbc12bed585507baae72b213a4a7e</field>
    <field name="keywords">groupNames KUser::groupNames KUser</field>
    <field name="text">maxCount the maximum number of groups to return all group names of the user</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::groups</field>
    <field name="args">(uint maxCount=KCOREADDONS_UINT_MAX) const</field>
    <field name="url">classKUser.html#a45432d1566a266138106dd2e20dc5f83</field>
    <field name="keywords">groups KUser::groups KUser</field>
    <field name="text">maxCount the maximum number of groups to return all groups of the user</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::homeDir</field>
    <field name="args">() const</field>
    <field name="url">classKUser.html#a31a4e6fbe147bc04a49c370007819ede</field>
    <field name="keywords">homeDir KUser::homeDir KUser</field>
    <field name="text">the home directory of the user or QString() if the user is invalid</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::isSuperUser</field>
    <field name="args">() const</field>
    <field name="url">classKUser.html#ae2da3b175ca36b6782cecbb4867df81b</field>
    <field name="keywords">isSuperUser KUser::isSuperUser KUser</field>
    <field name="text">true if the user is root</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::isValid</field>
    <field name="args">() const</field>
    <field name="url">classKUser.html#ad2aae5fe28e4786e807508d65ea9c1c6</field>
    <field name="keywords">isValid KUser::isValid KUser</field>
    <field name="text">A KUser object can be invalid if you created it with an non-existing uid or name true if the user is valid</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::loginName</field>
    <field name="args">() const</field>
    <field name="url">classKUser.html#ac5143fdc256294a6573550cd5fc02cf6</field>
    <field name="keywords">loginName KUser::loginName KUser</field>
    <field name="text">the login name of the user or QString() if user is invalid</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::operator!=</field>
    <field name="args">(const KUser &amp;user) const</field>
    <field name="url">classKUser.html#a8116b16117e9863a7f041dac6ca7d045</field>
    <field name="keywords">operator!= KUser::operator!= KUser</field>
    <field name="text">Invalid users always compare unequal</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::operator=</field>
    <field name="args">(const KUser &amp;user)</field>
    <field name="url">classKUser.html#ae785a281a5fda01d16e0b696a7a78bbb</field>
    <field name="keywords">operator= KUser::operator= KUser</field>
    <field name="text">user the user to copy this object</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::operator==</field>
    <field name="args">(const KUser &amp;user) const</field>
    <field name="url">classKUser.html#aa3eb21ca0102b1e827b55c42391f94cb</field>
    <field name="keywords">operator== KUser::operator== KUser</field>
    <field name="text">Invalid users never compare equal</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::property</field>
    <field name="args">(UserProperty which) const</field>
    <field name="url">classKUser.html#a3cd96e7e0bcc7e8d84e490001f45783b</field>
    <field name="keywords">property KUser::property KUser</field>
    <field name="text">Under Windows RoomNumber WorkPhone and HomePhone are unsupported a QVariant with the value of the property or an invalid QVariant if the property is not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::shell</field>
    <field name="args">() const</field>
    <field name="url">classKUser.html#a579720548f16ed7e63826120a39dc543</field>
    <field name="keywords">shell KUser::shell KUser</field>
    <field name="text">the login shell of the user or QString() if the user is invalid</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::uid</field>
    <field name="args">() const</field>
    <field name="url">classKUser.html#a0c509d96b5e7fbeda6d39c2a395f9d01</field>
    <field name="keywords">uid KUser::uid KUser</field>
    <field name="text">the id of the user or UNIX null(Windows) if user is invalid since 5.0 use KUser::userId()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::userId</field>
    <field name="args">() const</field>
    <field name="url">classKUser.html#aaea06d897eb004ea209bb80f6c59c120</field>
    <field name="keywords">userId KUser::userId KUser</field>
    <field name="text">the native user id of the user</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::allUserNames</field>
    <field name="args">(uint maxCount=KCOREADDONS_UINT_MAX)</field>
    <field name="url">classKUser.html#af09c5b6850c1c65cf32db8b68e1d7d03</field>
    <field name="keywords">allUserNames KUser::allUserNames KUser</field>
    <field name="text">maxCount the maximum number of users to return all user names of the system</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUser::allUsers</field>
    <field name="args">(uint maxCount=KCOREADDONS_UINT_MAX)</field>
    <field name="url">classKUser.html#ad66af3c15544ae252730c9d65c3957f2</field>
    <field name="keywords">allUsers KUser::allUsers KUser</field>
    <field name="text">maxCount the maximum number of users to return all users of the system</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KUserGroup</field>
    <field name="url">classKUserGroup.html</field>
    <field name="keywords">KUserGroup</field>
    <field name="text">This class represents a group on your system You can either get information about the group of the current user of fetch information about a group on the system Instances of this class will be explicitly shared so copying objects is very cheap and you can safely pass objects by value Jan Schaefer</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::KUserGroup</field>
    <field name="args">(const QString &amp;name)</field>
    <field name="url">classKUserGroup.html#a94a7ced5eb9cf5fbc841fb9e563c53f9</field>
    <field name="keywords">KUserGroup KUserGroup::KUserGroup KUserGroup</field>
    <field name="text">If the group does not exist isValid() will return false name the name of the group</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::KUserGroup</field>
    <field name="args">(const char *name)</field>
    <field name="url">classKUserGroup.html#abc5a5be5efce7d3d7a3016eb51112471</field>
    <field name="keywords">KUserGroup KUserGroup::KUserGroup KUserGroup</field>
    <field name="text">If the group does not exist isValid() will return false name the name of the group</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::KUserGroup</field>
    <field name="args">(KGroupId gid)</field>
    <field name="url">classKUserGroup.html#a7c0a32d4117cde0060ab73dee13c3180</field>
    <field name="keywords">KUserGroup KUserGroup::KUserGroup KUserGroup</field>
    <field name="text">If the KGroupId object is invalid this one will be too gid the group id</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::KUserGroup</field>
    <field name="args">(KUser::UIDMode mode=KUser::UseEffectiveUID)</field>
    <field name="url">classKUserGroup.html#a12ac7321c12932f8a5280d1eb1a0c2ad</field>
    <field name="keywords">KUserGroup KUserGroup::KUserGroup KUserGroup</field>
    <field name="text">mode if KUser::UseEffectiveUID is passed the effective user will be used If KUser::UseRealUserID is passed the real user will be used The real UID will be different than the effective UID in setuid programs in such a case use the effective UID for checking permissions and the real UID for displaying information about the group associated with the user</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::KUserGroup</field>
    <field name="args">(K_GID gid)</field>
    <field name="url">classKUserGroup.html#a0c0b560fd5409427071d5c7649a0ce71</field>
    <field name="keywords">KUserGroup KUserGroup::KUserGroup KUserGroup</field>
    <field name="text">If the group does not exist isValid() will return false gid the group id</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::KUserGroup</field>
    <field name="args">(const group *g)</field>
    <field name="url">classKUserGroup.html#a2a89ea5ef818762f122696aca3bbdbe7</field>
    <field name="keywords">KUserGroup KUserGroup::KUserGroup KUserGroup</field>
    <field name="text">If the pointer is null isValid() will return false g the group structure to create the group from</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::KUserGroup</field>
    <field name="args">(const KUserGroup &amp;group)</field>
    <field name="url">classKUserGroup.html#a69c386cdbc21d466f9032c95a598e4b6</field>
    <field name="keywords">KUserGroup KUserGroup::KUserGroup KUserGroup</field>
    <field name="text">group the KUserGroup to copy</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::~KUserGroup</field>
    <field name="args">()</field>
    <field name="url">classKUserGroup.html#ad645181e83b12fb96b614bc825a411d2</field>
    <field name="keywords">KUserGroup::~KUserGroup KUserGroup</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::gid</field>
    <field name="args">() const</field>
    <field name="url">classKUserGroup.html#a018852a8da106e6efe937e702f93724f</field>
    <field name="keywords">gid KUserGroup::gid KUserGroup</field>
    <field name="text">the group id of the group or if the group is invalid since 5.0 use KUserGroup::groupId()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::groupId</field>
    <field name="args">() const</field>
    <field name="url">classKUserGroup.html#aa43be4faaef845fd607078dd57e7302a</field>
    <field name="keywords">groupId KUserGroup::groupId KUserGroup</field>
    <field name="text">the native group id of the user</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::isValid</field>
    <field name="args">() const</field>
    <field name="url">classKUserGroup.html#a9b0a1e7aa556511873cee39032141e53</field>
    <field name="keywords">isValid KUserGroup::isValid KUserGroup</field>
    <field name="text">A KUserGroup object can be invalid if it is created with a non-existing gid or name true if the group is valid</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::name</field>
    <field name="args">() const</field>
    <field name="url">classKUserGroup.html#a5e51687006c36e22a10800e0849bf668</field>
    <field name="keywords">name KUserGroup::name KUserGroup</field>
    <field name="text">the name of the group</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::operator!=</field>
    <field name="args">(const KUserGroup &amp;group) const</field>
    <field name="url">classKUserGroup.html#aa6b45f15870d189b41c74f38d925724c</field>
    <field name="keywords">operator!= KUserGroup::operator!= KUserGroup</field>
    <field name="text">Invalid groups always compare unequal true if the groups are not identical</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::operator=</field>
    <field name="args">(const KUserGroup &amp;group)</field>
    <field name="url">classKUserGroup.html#ae957cdd6b41524bd333b31d3d02a8be3</field>
    <field name="keywords">operator= KUserGroup::operator= KUserGroup</field>
    <field name="text">group the group that should be copied this group</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::operator==</field>
    <field name="args">(const KUserGroup &amp;group) const</field>
    <field name="url">classKUserGroup.html#ab3344c8f384cfa97c1b654351f199dfc</field>
    <field name="keywords">operator== KUserGroup::operator== KUserGroup</field>
    <field name="text">Invalid groups never compare equal true if the groups are identical</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::userNames</field>
    <field name="args">(uint maxCount=KCOREADDONS_UINT_MAX) const</field>
    <field name="url">classKUserGroup.html#a3d58f49a6dd27c05388a4385111658ed</field>
    <field name="keywords">userNames KUserGroup::userNames KUserGroup</field>
    <field name="text">maxCount the maximum number of groups to return a list of all user login names of the group</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::users</field>
    <field name="args">(uint maxCount=KCOREADDONS_UINT_MAX) const</field>
    <field name="url">classKUserGroup.html#aab06ae6db18e9c78f0d64be237b83e2e</field>
    <field name="keywords">users KUserGroup::users KUserGroup</field>
    <field name="text">maxCount the maximum number of users to return a list of all users of the group</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::allGroupNames</field>
    <field name="args">(uint maxCount=KCOREADDONS_UINT_MAX)</field>
    <field name="url">classKUserGroup.html#ac747d18afb00a62c8285ee4feba4941b</field>
    <field name="keywords">allGroupNames KUserGroup::allGroupNames KUserGroup</field>
    <field name="text">maxCount the maximum number of groups to return a list of all group names on this system</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserGroup::allGroups</field>
    <field name="args">(uint maxCount=KCOREADDONS_UINT_MAX)</field>
    <field name="url">classKUserGroup.html#a5d85a00981b637416e6b9ebf569aa2ab</field>
    <field name="keywords">allGroups KUserGroup::allGroups KUserGroup</field>
    <field name="text">maxCount the maximum number of groups to return a list of all groups on this system</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">KUserId</field>
    <field name="url">structKUserId.html</field>
    <field name="keywords">KUserId</field>
    <field name="text">KUserOrGroupId 5.0 Alex Richardson</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserId::KUserId</field>
    <field name="args">()</field>
    <field name="url">structKUserId.html#a9a62f5edbc7125d127171b2b17d7e578</field>
    <field name="keywords">KUserId KUserId::KUserId KUserId</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserId::KUserId</field>
    <field name="args">(K_UID uid)</field>
    <field name="url">structKUserId.html#a9d07119937a22e4fb1046196dc8bd6ff</field>
    <field name="keywords">KUserId KUserId::KUserId KUserId</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserId::currentEffectiveUserId</field>
    <field name="args">()</field>
    <field name="url">structKUserId.html#ac4f3393bd103a885f86a924f6c2ca0eb</field>
    <field name="keywords">currentEffectiveUserId KUserId::currentEffectiveUserId KUserId</field>
    <field name="text">a KUserId for the current effective user This is like on UNIX Windows does not have setuid binaries so on Windows this will always be the same as KUserId::currentUserId()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserId::currentUserId</field>
    <field name="args">()</field>
    <field name="url">structKUserId.html#a8517f04aa5f805ee123a76240b977ee0</field>
    <field name="keywords">currentUserId KUserId::currentUserId KUserId</field>
    <field name="text">a KUserId for the current user This is like on UNIX</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUserId::fromName</field>
    <field name="args">(const QString &amp;name)</field>
    <field name="url">structKUserId.html#aab449efd423eb7bd1aa1735f8682f3bf</field>
    <field name="keywords">fromName KUserId::fromName KUserId</field>
    <field name="text">a KUserId for the user with name name or an invalid KUserId if no user with this name was found on the system</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">KUserOrGroupId</field>
    <field name="url">structKUserOrGroupId.html</field>
    <field name="keywords">KUserOrGroupId</field>
    <field name="text">This struct is required since Windows does not have an integer uid_t/gid_t type but instead uses an opaque binary blob SID which must free allocated memory On UNIX this is simply a uid_t/gid_t and all operations are inline so there is no runtime overhead over using the uid_t/gid_t directly On Windows this is an implicitly shared class that frees the underlying SID once no more references remain Unlike KUser/KUserGroup this does not query additional information it is simply an abstraction over the native user/group ID type If more information is necessary a KUser or KUserGroup instance can be constructed from this ID Alex Richardson</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KWordMacroExpander</field>
    <field name="url">classKWordMacroExpander.html</field>
    <field name="keywords">KWordMacroExpander</field>
    <field name="text">Use this instead of the functions in the KMacroExpander namespace if speculatively pre-filling the substitution map would be too expensive A typical application Alternatively MyClass could inherit from KWordMacroExpander directly Oswald Buddenhagen</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWordMacroExpander::KWordMacroExpander</field>
    <field name="args">(QChar c=QLatin1Char(&apos;%&apos;))</field>
    <field name="url">classKWordMacroExpander.html#a5cb84bb9efc7a69f71b77ad74de0ed14</field>
    <field name="keywords">KWordMacroExpander KWordMacroExpander::KWordMacroExpander KWordMacroExpander</field>
    <field name="text">c escape char indicating start of macros or QChar::null for none</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWordMacroExpander::expandEscapedMacro</field>
    <field name="args">(const QString &amp;str, int pos, QStringList &amp;ret) override</field>
    <field name="url">classKWordMacroExpander.html#a46a401dffd4ec5b093929df7d51ee2e9</field>
    <field name="keywords">expandEscapedMacro KWordMacroExpander::expandEscapedMacro KWordMacroExpander</field>
    <field name="text">Not to be called or reimplemented</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWordMacroExpander::expandMacro</field>
    <field name="args">(const QString &amp;str, QStringList &amp;ret)=0</field>
    <field name="url">classKWordMacroExpander.html#abd8f19f38c8eca239ba2989310bd4674</field>
    <field name="keywords">expandMacro KWordMacroExpander::expandMacro KWordMacroExpander</field>
    <field name="text">str the macro to expand ret return variable reference It is guaranteed to be empty when expandMacro is entered true iff chr was a recognized macro name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWordMacroExpander::expandPlainMacro</field>
    <field name="args">(const QString &amp;str, int pos, QStringList &amp;ret) override</field>
    <field name="url">classKWordMacroExpander.html#aa776feecca0b869070d4cbd78e7af15b</field>
    <field name="keywords">expandPlainMacro KWordMacroExpander::expandPlainMacro KWordMacroExpander</field>
    <field name="text">Not to be called or reimplemented</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">KMacroExpander</field>
    <field name="url">namespaceKMacroExpander.html</field>
    <field name="keywords">KMacroExpander</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMacroExpander::expandMacros</field>
    <field name="args">(const QString &amp;str, const QHash&lt; QChar, QString &gt; &amp;map, QChar c=QLatin1Char(&apos;%&apos;))</field>
    <field name="url">namespaceKMacroExpander.html#a26809231ab3e3b5444bddaa4cf5a5935</field>
    <field name="keywords">expandMacros KMacroExpander::expandMacros KMacroExpander</field>
    <field name="text">The escape char must be quoted with itself to obtain its literal representation in the resulting string str The string to expand map map with substitutions c escape char indicating start of macro or QChar::null if none the string with all valid macros expanded</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMacroExpander::expandMacros</field>
    <field name="args">(const QString &amp;str, const QHash&lt; QString, QString &gt; &amp;map, QChar c=QLatin1Char(&apos;%&apos;))</field>
    <field name="url">namespaceKMacroExpander.html#a62456f8f453c6010deea16956332c91d</field>
    <field name="keywords">expandMacros KMacroExpander::expandMacros KMacroExpander</field>
    <field name="text">The escape char must be quoted with itself to obtain its literal representation in the resulting string Macro names can consist of chars in the range A-Za-z0-9_ use braces to delimit macros from following words starting with these chars or to use other chars for macro names str The string to expand map map with substitutions c escape char indicating start of macro or QChar::null if none the string with all valid macros expanded</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMacroExpander::expandMacros</field>
    <field name="args">(const QString &amp;str, const QHash&lt; QChar, QStringList &gt; &amp;map, QChar c=QLatin1Char(&apos;%&apos;))</field>
    <field name="url">namespaceKMacroExpander.html#a1245c6b5218f206abb16323d1ab47a2c</field>
    <field name="keywords">expandMacros KMacroExpander::expandMacros KMacroExpander</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMacroExpander::expandMacrosShellQuote</field>
    <field name="args">(const QString &amp;str, const QHash&lt; QChar, QString &gt; &amp;map, QChar c=QLatin1Char(&apos;%&apos;))</field>
    <field name="url">namespaceKMacroExpander.html#a73a1897127bebf52d22b020742178219</field>
    <field name="keywords">expandMacrosShellQuote KMacroExpander::expandMacrosShellQuote KMacroExpander</field>
    <field name="text">The escape char must be quoted with itself to obtain its literal representation in the resulting string str The string to expand map map with substitutions c escape char indicating start of macro or QChar::null if none the string with all valid macros expanded or a null string if a shell syntax error was detected in the command</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMacroExpander::expandMacrosShellQuote</field>
    <field name="args">(const QString &amp;str, const QHash&lt; QString, QString &gt; &amp;map, QChar c=QLatin1Char(&apos;%&apos;))</field>
    <field name="url">namespaceKMacroExpander.html#a3238e5452160978eb5ba318f81ef2b70</field>
    <field name="keywords">expandMacrosShellQuote KMacroExpander::expandMacrosShellQuote KMacroExpander</field>
    <field name="text">See KMacroExpanderBase::expandMacrosShellQuote() for the exact semantics The escape char must be quoted with itself to obtain its literal representation in the resulting string Macro names can consist of chars in the range A-Za-z0-9_ use braces to delimit macros from following words starting with these chars or to use other chars for macro names str The string to expand map map with substitutions c escape char indicating start of macro or QChar::null if none the string with all valid macros expanded or a null string if a shell syntax error was detected in the command</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMacroExpander::expandMacrosShellQuote</field>
    <field name="args">(const QString &amp;str, const QHash&lt; QChar, QStringList &gt; &amp;map, QChar c=QLatin1Char(&apos;%&apos;))</field>
    <field name="url">namespaceKMacroExpander.html#accf5b4a8dbb3b771c872d1276213bcb8</field>
    <field name="keywords">expandMacrosShellQuote KMacroExpander::expandMacrosShellQuote KMacroExpander</field>
    <field name="text">If the macro appears inside a quoted string the list is simply join ed together otherwise every element expands to a separate quoted string</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">KMessage</field>
    <field name="url">namespaceKMessage.html</field>
    <field name="keywords">KMessage</field>
    <field name="text">This class does not define how to display a message it is just a clean interface for developers to use The job is done by the current KMessageHandler set in the class If no KMessageHandler is currently registered in KMessage the message will be outputed to stderr Use KMessage::setMessageHandler() to use a KMessageHandler Some KMessageHandler are already done such as KMessageBoxMessageHandler and KPassivePopupMessageHandler Michaël Larouche</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KMessage::MessageType</field>
    <field name="url">namespaceKMessage.html#a5aa3116d87fc525c7e093f9f2c0269da</field>
    <field name="keywords">MessageType KMessage::MessageType KMessage</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KMessage::Error</field>
    <field name="url">namespaceKMessage.html#a5aa3116d87fc525c7e093f9f2c0269daaf06e453f8b184285214b694148a7b82a</field>
    <field name="keywords">Error KMessage::Error KMessage</field>
    <field name="text">Error message Display critical information that affect the behavior of the application</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KMessage::Information</field>
    <field name="url">namespaceKMessage.html#a5aa3116d87fc525c7e093f9f2c0269daa6dd731a7855ae90d4ae208bfafb43aca</field>
    <field name="keywords">Information KMessage::Information KMessage</field>
    <field name="text">Information message Display useful information to the user</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KMessage::Warning</field>
    <field name="url">namespaceKMessage.html#a5aa3116d87fc525c7e093f9f2c0269daa5c294ecd41ee2c61a4d1186c0df13178</field>
    <field name="keywords">Warning KMessage::Warning KMessage</field>
    <field name="text">Warning message Display a message that could affect the behavior of the application</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KMessage::Sorry</field>
    <field name="url">namespaceKMessage.html#a5aa3116d87fc525c7e093f9f2c0269daade639415cd2f9b9d052d8ed3202d5e9f</field>
    <field name="keywords">Sorry KMessage::Sorry KMessage</field>
    <field name="text">Sorry message Display a message explaining that a task couldn t be accomplished</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KMessage::Fatal</field>
    <field name="url">namespaceKMessage.html#a5aa3116d87fc525c7e093f9f2c0269daafc97b1c0c8972542a2d1c5eacfc759ef</field>
    <field name="keywords">Fatal KMessage::Fatal KMessage</field>
    <field name="text">Fatal message Display a message before the application fail and close itself</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMessage::message</field>
    <field name="args">(KMessage::MessageType messageType, const QString &amp;text, const QString &amp;caption=QString())</field>
    <field name="url">namespaceKMessage.html#a2f10e5966efbb9e992319a8d2c1c5307</field>
    <field name="keywords">message KMessage::message KMessage</field>
    <field name="text">A long message span on multiple lines and can have a caption messageType Currrent type of message See MessageType enum text Long message to be displayed caption Caption to be used This is optional</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KMessage::setMessageHandler</field>
    <field name="args">(KMessageHandler *handler)</field>
    <field name="url">namespaceKMessage.html#a2ef28b5c7023b39b8aef413b20f92ed6</field>
    <field name="keywords">setMessageHandler KMessage::setMessageHandler KMessage</field>
    <field name="text">handler Instance of a real KMessageHandler This function isn t thread-safe You don t want to change the message handler during the program s execution anyways Do so only at start-up</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">KRandom</field>
    <field name="url">namespaceKRandom.html</field>
    <field name="keywords">KRandom</field>
    <field name="text">This namespace provides methods which generate random data KRandom is not recommended for serious random-number generation needs like cryptography</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRandom::random</field>
    <field name="args">()</field>
    <field name="url">namespaceKRandom.html#a4e3256aa33ae698204a602ae29fb8c64</field>
    <field name="keywords">random KRandom::random KRandom</field>
    <field name="text">A random number in the range 0 RAND_MAX The RNG is seeded on first use</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KRandom::randomString</field>
    <field name="args">(int length)</field>
    <field name="url">namespaceKRandom.html#a80bfb2f72742481bf89b1b6f46486b92</field>
    <field name="keywords">randomString KRandom::randomString KRandom</field>
    <field name="text">It operates in the range A-Za-z0-9 length Generate a string of this length the random string</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">KShell</field>
    <field name="url">namespaceKShell.html</field>
    <field name="keywords">KShell</field>
    <field name="text">KStringHandler</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KShell::Errors</field>
    <field name="url">namespaceKShell.html#af6f8d4a40db8066bea4a36beb1c75c83</field>
    <field name="keywords">Errors KShell::Errors KShell</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KShell::NoError</field>
    <field name="url">namespaceKShell.html#af6f8d4a40db8066bea4a36beb1c75c83abe054a8b4ea3d14a7c95dc5e374bdf7f</field>
    <field name="keywords">NoError KShell::NoError KShell</field>
    <field name="text">Success</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KShell::BadQuoting</field>
    <field name="url">namespaceKShell.html#af6f8d4a40db8066bea4a36beb1c75c83a2132d5231cbeb1c16f3f7f86b9c0abc5</field>
    <field name="keywords">BadQuoting KShell::BadQuoting KShell</field>
    <field name="text">Indicates a parsing error like an unterminated quoted string</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KShell::FoundMeta</field>
    <field name="url">namespaceKShell.html#af6f8d4a40db8066bea4a36beb1c75c83a63971c1823de094bb0a1cf0b0a9b4a2c</field>
    <field name="keywords">FoundMeta KShell::FoundMeta KShell</field>
    <field name="text">The AbortOnMeta flag was set and an unhandled shell meta character was encountered</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KShell::Option</field>
    <field name="url">namespaceKShell.html#a92d7678cf9ce365ee64d7b7605d409d3</field>
    <field name="keywords">Option KShell::Option KShell</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KShell::TildeExpand</field>
    <field name="url">namespaceKShell.html#a92d7678cf9ce365ee64d7b7605d409d3a2f94a11182b1568e2cacf006d86ca8ad</field>
    <field name="keywords">TildeExpand KShell::TildeExpand KShell</field>
    <field name="text">Perform tilde expansion On Windows this flag is ignored as the Windows shell has no equivalent functionality</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KShell::AbortOnMeta</field>
    <field name="url">namespaceKShell.html#a92d7678cf9ce365ee64d7b7605d409d3a370b199cf87b08725f99b132260ae062</field>
    <field name="keywords">AbortOnMeta KShell::AbortOnMeta KShell</field>
    <field name="text">Put the parser into full shell mode and bail out if a too complex construct is encountered A particular purpose of this flag is finding out whether the command line being split would be executable directly via KProcess::setProgram() or whether it needs to be run through a real shell via KProcess::setShellCommand() Note however that shell builtins are not recognized you need to do that yourself compare with a list of known commands or verify that an executable exists for the named command Meta characters that cause a bail-out are the command separators semicolon and ampersand the redirection symbols less-than greater-than and the pipe symbol and the grouping symbols opening and closing parentheses Further meta characters on are the grouping symbols opening and closing braces the command substitution symbol backquote the generic substitution symbol dollar if not followed by an apostrophe the wildcards asterisk question mark and opening and closing square brackets and the comment symbol hash mark Additionally a variable assignment in the first word is recognized A further meta character on Windows is the environment variable expansion symbol percent Occurrences of PERCENT_SIGN as inserted by quoteArg() are converted back and cause no bail-out though</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KShell::joinArgs</field>
    <field name="args">(const QStringList &amp;args)</field>
    <field name="url">namespaceKShell.html#ad92ed56d00a678554dd04b0b1429760e</field>
    <field name="keywords">joinArgs KShell::joinArgs KShell</field>
    <field name="text">If the output is fed back into splitArgs() the AbortOnMeta flag needs to be used on Windows On no such requirement exists See quoteArg() for more info args a list of strings to quote and join a command suitable for shell execution</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KShell::quoteArg</field>
    <field name="args">(const QString &amp;arg)</field>
    <field name="url">namespaceKShell.html#a471161f0b7fb9b516932d2a9121c715b</field>
    <field name="keywords">quoteArg KShell::quoteArg KShell</field>
    <field name="text">This function can be used to quote an argument string such that the shell processes it properly This is e.g necessary for user-provided file names which may contain spaces or quotes It also prevents expansion of wild cards and environment variables On the output is POSIX shell compliant On Windows it is compliant with the argument splitting code of the Microsoft C runtime and the cmd shell used together Occurrences of the percent sign are replaced with PERCENT_SIGN to prevent spurious variable expansion related KDE functions are prepared for this arg the argument to quote the quoted argument</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KShell::splitArgs</field>
    <field name="args">(const QString &amp;cmd, Options flags=NoOptions, Errors *err=0)</field>
    <field name="url">namespaceKShell.html#a8d7c7dda510b29a6dfd7834a93f0a369</field>
    <field name="keywords">splitArgs KShell::splitArgs KShell</field>
    <field name="text">Can optionally perform tilde expansion and/or abort if it finds shell meta characters it cannot process On the behavior is based on the POSIX shell and bash Whitespace splits tokens The backslash quotes the following character A string enclosed in single quotes is not split No shell meta characters are interpreted A string enclosed in double quotes is not split Within the string the backslash quotes shell meta characters if it is followed by a character the backslash is output verbatim A string enclosed in is not split Within the string the backslash has a similar meaning to the one in C strings Consult the bash manual for more information On Windows the behavior is defined by the Microsoft C runtime Qt and many other implementations comply with this standard but many do not Whitespace splits tokens A string enclosed in double quotes is not split 2N double quotes within a quoted string yield N literal quotes This is not documented on MSDN Backslashes have special semantics iff they are followed by a double quote 2N backslashes double quote N backslashes and begin/end quoting 2N+1 backslashes double quote N backslashes literal quote If AbortOnMeta is used on Windows this function applies cmd shell semantics before proceeding with word splitting Cmd ignores all special chars between double quotes Note that the quotes are not removed at this stage the tokenization rules described above still apply The circumflex is the escape char for everything including itself cmd the command to split flags operation flags see Option err if not NULL a status code will be stored at the pointer target see Errors a list of unquoted words or an empty list if an error occurred</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KShell::tildeExpand</field>
    <field name="args">(const QString &amp;path)</field>
    <field name="url">namespaceKShell.html#aee26c68c6634fee78266863f9fcf0efd</field>
    <field name="keywords">tildeExpand KShell::tildeExpand KShell</field>
    <field name="text">Interprets and If the path starts with an escaped tilde on UNIX on Windows the escape char is removed and the path is returned as is Note that if path starts with a tilde but cannot be properly expanded this function will return an empty string path the path to tilde-expand the expanded path</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">KStringHandler</field>
    <field name="url">namespaceKStringHandler.html</field>
    <field name="keywords">KStringHandler</field>
    <field name="text">The functions here are intended to provide an easy way to cut/slice/splice words inside sentences in whatever order desired While the main focus of KStringHandler is words ie characters separated by spaces/tabs the two core functions here split() and join() will allow you to use any character as a separator This will make it easy to redefine what a word means in the future if needed The function names and calling styles are based on python and mIRC s scripting support The ranges are a fairly powerful way of getting/stripping words from a string These ranges function for the large part as they would in python See the word(const QString&amp;, int) and remword(const QString&amp;, int) functions for more detail The methods here are completely stateless All strings are cut on the fly and returned as new qstrings/qstringlists Namespace for manipulating words and sentences in strings Ian Zepp KShell</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStringHandler::capwords</field>
    <field name="args">(const QString &amp;text)</field>
    <field name="url">namespaceKStringHandler.html#af9182d35f0232e42079bc319def02c74</field>
    <field name="keywords">capwords KStringHandler::capwords KStringHandler</field>
    <field name="text">text the text to capitalize the resulting string</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStringHandler::capwords</field>
    <field name="args">(const QStringList &amp;list)</field>
    <field name="url">namespaceKStringHandler.html#aacf38a42b22df2959ff668d31a1614c3</field>
    <field name="keywords">capwords KStringHandler::capwords KStringHandler</field>
    <field name="text">list the list to capitalize the resulting list</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStringHandler::csqueeze</field>
    <field name="args">(const QString &amp;str, int maxlen=40)</field>
    <field name="url">namespaceKStringHandler.html#ab9032f75d3edf82a4561fdd4cf7b007a</field>
    <field name="keywords">csqueeze KStringHandler::csqueeze KStringHandler</field>
    <field name="text">str is the string to modify maxlen is the maximum length the modified string will have If the original string is shorter than it is returned verbatim the modified string</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStringHandler::from8Bit</field>
    <field name="args">(const char *str)</field>
    <field name="url">namespaceKStringHandler.html#a47e67c7f87de83c70a758ac72dda01f0</field>
    <field name="keywords">from8Bit KStringHandler::from8Bit KStringHandler</field>
    <field name="text">str the input string the hopefully correctly guessed QString representation of str KEncodingProber</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStringHandler::isUtf8</field>
    <field name="args">(const char *str)</field>
    <field name="url">namespaceKStringHandler.html#a91d20757430cf64f7703935a1a57b7d6</field>
    <field name="keywords">isUtf8 KStringHandler::isUtf8 KStringHandler</field>
    <field name="text">str the string to check true if UTF8 If false the string is probably in Local8Bit</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStringHandler::lsqueeze</field>
    <field name="args">(const QString &amp;str, int maxlen=40)</field>
    <field name="url">namespaceKStringHandler.html#a2bee19a8321cf58797887fdf702a3a3c</field>
    <field name="keywords">lsqueeze KStringHandler::lsqueeze KStringHandler</field>
    <field name="text">str is the string to modify maxlen is the maximum length the modified string will have If the original string is shorter than it is returned verbatim the modified string</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStringHandler::obscure</field>
    <field name="args">(const QString &amp;str)</field>
    <field name="url">namespaceKStringHandler.html#afa464f27b952f544619fd2059eab80b0</field>
    <field name="keywords">obscure KStringHandler::obscure KStringHandler</field>
    <field name="text">Applying the function to a string obscured by this function will result in the original string The function can be used to obscure passwords stored to configuration files Note that this won t give you any more security than preventing that the password is directly copied and pasted str string to be obscured obscured string</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStringHandler::perlSplit</field>
    <field name="args">(const QString &amp;sep, const QString &amp;s, int max=0)</field>
    <field name="url">namespaceKStringHandler.html#a2f077f435642c2aae3548665453a5127</field>
    <field name="keywords">perlSplit KStringHandler::perlSplit KStringHandler</field>
    <field name="text">If max is specified 0 then only that number of tokens will be extracted The final token will be the remainder of the string Example sep is the string to use to delimit s s is the input string max is the maximum number of extractions to perform or 0 A QStringList containing tokens extracted from s</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStringHandler::perlSplit</field>
    <field name="args">(const QChar &amp;sep, const QString &amp;s, int max=0)</field>
    <field name="url">namespaceKStringHandler.html#a0630b3755b76bb0392a1e83f9f73a9f7</field>
    <field name="keywords">perlSplit KStringHandler::perlSplit KStringHandler</field>
    <field name="text">If max is specified 0 then only that number of tokens will be extracted The final token will be the remainder of the string Example sep is the character to use to delimit s s is the input string max is the maximum number of extractions to perform or 0 A QStringList containing tokens extracted from s</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStringHandler::perlSplit</field>
    <field name="args">(const QRegExp &amp;sep, const QString &amp;s, int max=0)</field>
    <field name="url">namespaceKStringHandler.html#a461008a9ac0b595bd87225acfe0fb1d7</field>
    <field name="keywords">perlSplit KStringHandler::perlSplit KStringHandler</field>
    <field name="text">If max is specified 0 then only that number of tokens will be extracted The final token will be the remainder of the string Example sep is the regular expression to use to delimit s s is the input string max is the maximum number of extractions to perform or 0 A QStringList containing tokens extracted from s</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStringHandler::preProcessWrap</field>
    <field name="args">(const QString &amp;text)</field>
    <field name="url">namespaceKStringHandler.html#a170ecf061f4880bc5dd595fde1ca0a0e</field>
    <field name="keywords">preProcessWrap KStringHandler::preProcessWrap KStringHandler</field>
    <field name="text">This is done by inserting ZWSP Zero-width space characters in the string at points that wouldn t normally be considered word boundaries by QTextLayout but where wrapping the text will produce good results Examples of such points includes after punctuation signs underscores and dashes that aren t followed by spaces 4.4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStringHandler::rsqueeze</field>
    <field name="args">(const QString &amp;str, int maxlen=40)</field>
    <field name="url">namespaceKStringHandler.html#ab295c63fba80cc95fda53761ad8b5b59</field>
    <field name="keywords">rsqueeze KStringHandler::rsqueeze KStringHandler</field>
    <field name="text">str is the string to modify maxlen is the maximum length the modified string will have If the original string is shorter than it is returned verbatim the modified string</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStringHandler::tagUrls</field>
    <field name="args">(const QString &amp;text)</field>
    <field name="url">namespaceKStringHandler.html#a159a26842501b345bdc44550d59e2f27</field>
    <field name="keywords">tagUrls KStringHandler::tagUrls KStringHandler</field>
    <field name="text">text the string which may contain URLs the resulting text</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">KTextToHTML</field>
    <field name="url">namespaceKTextToHTML.html</field>
    <field name="keywords">KTextToHTML</field>
    <field name="text">Dave Corrie</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KTextToHTML::Option</field>
    <field name="url">namespaceKTextToHTML.html#a4c85544df01935145d4a2f5a2b62db65</field>
    <field name="keywords">Option KTextToHTML::Option KTextToHTML</field>
    <field name="text">5.5.0</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KTextToHTML::PreserveSpaces</field>
    <field name="url">namespaceKTextToHTML.html#a4c85544df01935145d4a2f5a2b62db65ad1dc95dc12f6cd3e8744a96e0d1e3646</field>
    <field name="keywords">PreserveSpaces KTextToHTML::PreserveSpaces KTextToHTML</field>
    <field name="text">Preserve white-space formatting of the text</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KTextToHTML::ReplaceSmileys</field>
    <field name="url">namespaceKTextToHTML.html#a4c85544df01935145d4a2f5a2b62db65a03e7760472b93177323e96e421ea5af4</field>
    <field name="keywords">ReplaceSmileys KTextToHTML::ReplaceSmileys KTextToHTML</field>
    <field name="text">Replace text emoticons smileys by emoticons images This option works only when KEmoticons framework is available at runtime and requires QGuiApplication otherwise the flag is simply ignored</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KTextToHTML::IgnoreUrls</field>
    <field name="url">namespaceKTextToHTML.html#a4c85544df01935145d4a2f5a2b62db65a0cfd24fbac6435a0f9e9ba68def65895</field>
    <field name="keywords">IgnoreUrls KTextToHTML::IgnoreUrls KTextToHTML</field>
    <field name="text">Don t parse and replace any URLs</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KTextToHTML::HighlightText</field>
    <field name="url">namespaceKTextToHTML.html#a4c85544df01935145d4a2f5a2b62db65a8b0b3953918b4c6fed5dc6328fc2cfca</field>
    <field name="keywords">HighlightText KTextToHTML::HighlightText KTextToHTML</field>
    <field name="text">Interpret text highlighting markup like bold underline and and wrap them in corresponding HTML entities</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KTextToHTML::convertToHtml</field>
    <field name="args">(const QString &amp;plainText, const KTextToHTML::Options &amp;options, int maxUrlLen=4096, int maxAddressLen=255)</field>
    <field name="url">namespaceKTextToHTML.html#a1ebe61e15ba8fa32761487d76b1e56c2</field>
    <field name="keywords">convertToHtml KTextToHTML::convertToHtml KTextToHTML</field>
    <field name="text">The following characters are converted to HTML entities Newlines are also preserved plainText The text to be converted into HTML flags The flags to consider when processing plainText maxUrlLen The maximum length of permitted URLs The reason for this limit is that there may be possible security implications in handling URLs of unlimited length maxAddressLen The maximum length of permitted email addresses The reason for this limit is that there may be possible security implications in handling addresses of unlimited length An HTML version of the text supplied in the plainText parameter suitable for inclusion in the BODY of an HTML document 5.5.0</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">KUrlMimeData</field>
    <field name="url">namespaceKUrlMimeData.html</field>
    <field name="keywords">KUrlMimeData</field>
    <field name="text">In addition to QMimeData::setUrls() and QMimeData::urls() these functions allow to Store two sets of URLs the KDE-specific URLs and the equivalent local-file URLs for compatibility with non-KDE applications Store KIO metadata such as the HTTP referrer for a given URL some websites require it for downloading e.g an image 5.0</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KUrlMimeData::DecodeOptions</field>
    <field name="url">namespaceKUrlMimeData.html#ad13baa49cd27a64c038a6609a4800301</field>
    <field name="keywords">DecodeOptions KUrlMimeData::DecodeOptions KUrlMimeData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KUrlMimeData::PreferLocalUrls</field>
    <field name="url">namespaceKUrlMimeData.html#ad13baa49cd27a64c038a6609a4800301a845c47f6f65676fd0fce041bdf93bc5a</field>
    <field name="keywords">PreferLocalUrls KUrlMimeData::PreferLocalUrls KUrlMimeData</field>
    <field name="text">When the mimedata contains both KDE-style URLs eg desktop and the version of the URLs eg decode it as local urls Useful in paste/drop operations that end up calling KIO so that urls from other users work as well</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KUrlMimeData::PreferKdeUrls</field>
    <field name="url">namespaceKUrlMimeData.html#ad13baa49cd27a64c038a6609a4800301a29d2ec5bc41fe7e545eedaec80a0a324</field>
    <field name="keywords">PreferKdeUrls KUrlMimeData::PreferKdeUrls KUrlMimeData</field>
    <field name="text">When the mimedata contains both KDE-style URLs eg desktop and the version of the URLs eg decode it as the KDE-style URL Useful in DnD code e.g when moving icons and the kde-style url is used as identifier for the icons</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUrlMimeData::mimeDataTypes</field>
    <field name="args">()</field>
    <field name="url">namespaceKUrlMimeData.html#a4093143726ced351371adf4f59e2ecdb</field>
    <field name="keywords">mimeDataTypes KUrlMimeData::mimeDataTypes KUrlMimeData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUrlMimeData::setMetaData</field>
    <field name="args">(const MetaDataMap &amp;metaData, QMimeData *mimeData)</field>
    <field name="url">namespaceKUrlMimeData.html#a3e12d202e68fd1cab75d14a769606dfd</field>
    <field name="keywords">setMetaData KUrlMimeData::setMetaData KUrlMimeData</field>
    <field name="text">metaData KIO metadata shipped in the mime data which is used for instance to set a correct HTTP referrer some websites require it for downloading e.g an image</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUrlMimeData::setUrls</field>
    <field name="args">(const QList&lt; QUrl &gt; &amp;urls, const QList&lt; QUrl &gt; &amp;mostLocalUrls, QMimeData *mimeData)</field>
    <field name="url">namespaceKUrlMimeData.html#a0ac0d53cde49e31d245e78b035eabc50</field>
    <field name="keywords">setUrls KUrlMimeData::setUrls KUrlMimeData</field>
    <field name="text">WARNING do not call this method multiple times on the same mimedata object you can add urls only once But you can add other things e.g images XML mimeData the QMimeData instance used to drag or copy this URL</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUrlMimeData::urlsFromMimeData</field>
    <field name="args">(const QMimeData *mimeData, DecodeOptions decodeOptions=PreferKdeUrls, MetaDataMap *metaData=0)</field>
    <field name="url">namespaceKUrlMimeData.html#a74bd3fc78527911c24b9fd769368aed1</field>
    <field name="keywords">urlsFromMimeData KUrlMimeData::urlsFromMimeData KUrlMimeData</field>
    <field name="text">Compared to QMimeData::urls() this method has support for retrieving KDE-specific URLs when urls() would retrieve instead Decoding will fail if mimeData does not contain any URLs or if at least one extracted URL is not valid mimeData the mime data to extract from cannot be 0 decodeOptions options for decoding metaData optional pointer to a map which will hold the metadata after this call the list of urls</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">index</field>
    <field name="url">index.html</field>
    <field name="keywords"></field>
    <field name="text">KCoreAddons Qt addon library with a collection of non-GUI utilities Introduction KCoreAddons provides classes built on top of QtCore to perform various tasks such as manipulating mime types autosaving files creating backup files generating random sequences performing text manipulations such as macro replacement accessing user information and many more</field>
  </doc>
</add>
