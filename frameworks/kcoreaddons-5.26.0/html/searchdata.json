{"name": "kcoreaddons-5.26.0", "fancyname": "KCoreAddons", "docfields": [{"type": "file", "name": "kdelibs4migration.h", "url": "kdelibs4migration_8h.html", "keyword": "kdelibs4migration.h", "text": ""}, {"type": "file", "name": "kformat.h", "url": "kformat_8h.html", "keyword": "kformat.h", "text": ""}, {"type": "page", "name": "deprecated", "url": "deprecated.html", "keyword": null, "text": "Deprecated List Member KAboutData setProgramIconName const QString iconName since 5.2 use QApplication::setWindowIcon(QIcon::fromTheme()) instead Member KPluginFactory create QObject const QStringList args Member KPluginFactory create QObject 0 const char const QStringList args QStringList() Member KPluginFactory createObject QObject const char const QStringList args Member KPluginFactory createPartObject QWidget QObject const char const QStringList args Member KUser fullName const use property(KUser::FullName) instead Member KUser gid const since 5.0 use KUser::groupId() Member KUser uid const since 5.0 use KUser::userId() Member KUserGroup gid const since 5.0 use KUserGroup::groupId()"}, {"type": "class", "name": "KAboutData", "url": "classKAboutData.html", "keyword": "KAboutData", "text": "It can store such values as version number program name home page email address for bug reporting multiple authors and contributors using KAboutPerson license and copyright information Currently the values set here are shown by the box see KAboutDialog used by the bug report dialog see KBugReport and by the help shown on command line see KAboutData::setupCommandLine() Porting Notes Since KDE Frameworks 5.0 the translation catalog mechanism must provided by your translation framework to load the correct catalog instead eg KLocalizedString::setApplicationDomain() for KI18n or QCoreApplication::installTranslator() for Qt s translation system This applies to the old setCatalogName() and catalogName() members But see also K4AboutData in kde4support as a compatibility class Holds information needed by the box and other classes Espen Sand David Faure"}, {"type": "function", "name": "KAboutData::KAboutData", "url": "classKAboutData.html#a20a5d074b81d5cbe2f56044986e4507e", "keyword": "KAboutData KAboutData::KAboutData KAboutData", "text": "Porting Note The catalogName parameter present in KDE4 was deprecated and removed See also K4AboutData in kde4support if this feature is needed for compatibility purposes or consider using componentName() instead componentName The program name or plugin name used internally Example QStringLiteral This should never be translated displayName A displayable name for the program or plugin This string should be translated Example i18n version The component version string Example QStringLiteral shortDescription A short description of what the component does This string should be translated Example i18n licenseType The license identifier Use setLicenseText or setLicenseTextFile if you use a license not predefined here copyrightStatement A copyright statement that can look like this i18n The string specified here is taken verbatim the author information from addAuthor is not used otherText Some free form text that can contain any kind of information The text can contain newlines This string should be translated homePageAddress The URL to the component s homepage including URL scheme is correct is not Since KDE Frameworks 5.17 https and other valid URL schemes are also valid IMPORTANT This argument is used to provide a default organization domain for the application which is used to automatically register on the session D-Bus locate the appropriate desktop file etc Use setOrganizationDomain() if you want to control this value yourself setOrganizationDomain bugsEmailAddress The bug report email address string This defaults to the kde.org bug system"}, {"type": "function", "name": "KAboutData::KAboutData", "url": "classKAboutData.html#a20efda14b288568a5da5839442827e97", "keyword": "KAboutData KAboutData::KAboutData KAboutData", "text": "componentName The program name or plugin name used internally Example displayName A displayable name for the program or plugin This string should be translated Example i18n version The component version string"}, {"type": "function", "name": "KAboutData::KAboutData", "url": "classKAboutData.html#aa58f336dc81d52d644a5b840abfe2907", "keyword": "KAboutData KAboutData::KAboutData KAboutData", "text": "Performs a deep copy other object to copy"}, {"type": "function", "name": "KAboutData::addAuthor", "url": "classKAboutData.html#adea6c2b5a028f7482e7d07e6b67f59b8", "keyword": "addAuthor KAboutData::addAuthor KAboutData", "text": "You can call this function as many times as you need Each entry is appended to a list The person in the first entry is assumed to be the leader of the project name The developer s name It should be translated task What the person is responsible for This text can contain newlines It should be translated Can be left empty emailAddress An Email address where the person can be reached Can be left empty webAddress The person s homepage or a relevant link Start the address with is correct is not Can be left empty ocsUsername The person s Open Collaboration Services username The provider can be optionally specified with setOcsProvider"}, {"type": "function", "name": "KAboutData::addCredit", "url": "classKAboutData.html#a3d36de14543d2ca44d356e8dd97c1870", "keyword": "addCredit KAboutData::addCredit KAboutData", "text": "You can call this function as many times as you need Each entry is appended to a list name The person s name It should be translated task What the person has done to deserve the honor The text can contain newlines It should be translated Can be left empty emailAddress An email address when the person can be reached Can be left empty webAddress The person s homepage or a relevant link Start the address with is is correct is not Can be left empty ocsUsername The person s Open Collaboration Services username The provider can be optionally specified with setOcsProvider"}, {"type": "function", "name": "KAboutData::addLicense", "url": "classKAboutData.html#a19520fb67ccc88d2330ae1484ad30720", "keyword": "addLicense KAboutData::addLicense KAboutData", "text": "If there is only one unknown license set e.g by using the default parameter in the constructor that one is replaced licenseKey The license identifier setLicenseText addLicenseText addLicenseTextFile"}, {"type": "function", "name": "KAboutData::addLicenseText", "url": "classKAboutData.html#aaa60d54de7aed01e1d7f1ef3696dbc55", "keyword": "addLicenseText KAboutData::addLicenseText KAboutData", "text": "If there is only one unknown license set e.g by using the default parameter in the constructor that one is replaced Example license The license text setLicenseText addLicense addLicenseTextFile"}, {"type": "function", "name": "KAboutData::addLicenseTextFile", "url": "classKAboutData.html#adf1f1dac97e4eb931d5d4b30e72b9506", "keyword": "addLicenseTextFile KAboutData::addLicenseTextFile KAboutData", "text": "The file format has to be plain text in an encoding compatible to the locale If there is only one unknown license set e.g by using the default parameter in the constructor that one is replaced file Path to the file in the local filesystem containing the license text addLicenseText addLicense setLicenseTextFile"}, {"type": "function", "name": "KAboutData::authors", "url": "classKAboutData.html#a7b5557e1966be7904bd42538c1ae257c", "keyword": "authors KAboutData::authors KAboutData", "text": "author information list of persons"}, {"type": "function", "name": "KAboutData::bugAddress", "url": "classKAboutData.html#ab6035e4725a4356e166f8e902fd32c9b", "keyword": "bugAddress KAboutData::bugAddress KAboutData", "text": "the email address where to report bugs"}, {"type": "function", "name": "KAboutData::componentName", "url": "classKAboutData.html#aa2da588e76b0338c66dec9936082e759", "keyword": "componentName KAboutData::componentName KAboutData", "text": "the internal program name"}, {"type": "function", "name": "KAboutData::copyrightStatement", "url": "classKAboutData.html#a7de367293181e29130ef842cb07a853d", "keyword": "copyrightStatement KAboutData::copyrightStatement KAboutData", "text": "the copyright statement Can be QString() if not set"}, {"type": "function", "name": "KAboutData::credits", "url": "classKAboutData.html#a32fa7d642a6a4528f068961a9897fc67", "keyword": "credits KAboutData::credits KAboutData", "text": "credit information list of persons"}, {"type": "function", "name": "KAboutData::customAuthorPlainText", "url": "classKAboutData.html#a7a3db23563d0e8ba1d5043fbd9ec40a5", "keyword": "customAuthorPlainText KAboutData::customAuthorPlainText KAboutData", "text": "the plain text displayed around the list of authors instead of the default message Can be QString()"}, {"type": "function", "name": "KAboutData::customAuthorRichText", "url": "classKAboutData.html#a2b723384d98b51918066f28e72995f72", "keyword": "customAuthorRichText KAboutData::customAuthorRichText KAboutData", "text": "the rich text displayed around the list of authors instead of the default message Can be QString()"}, {"type": "function", "name": "KAboutData::customAuthorTextEnabled", "url": "classKAboutData.html#a5897585f6738970a16fccd3d0f36adc7", "keyword": "customAuthorTextEnabled KAboutData::customAuthorTextEnabled KAboutData", "text": "whether custom text should be displayed around the list of authors"}, {"type": "function", "name": "KAboutData::desktopFileName", "url": "classKAboutData.html#a5b41e478debfec179e3dc0535aa11255", "keyword": "desktopFileName KAboutData::desktopFileName KAboutData", "text": "The desktop file name of this application e.g setDesktopFileName(const QString&) 5.16"}, {"type": "function", "name": "KAboutData::displayName", "url": "classKAboutData.html#ae57a413ecbeb786deae483ba55c4fe55", "keyword": "displayName KAboutData::displayName KAboutData", "text": "the program name translated"}, {"type": "function", "name": "KAboutData::homepage", "url": "classKAboutData.html#a7fb921e2f54cb236c47de48c0faffb01", "keyword": "homepage KAboutData::homepage KAboutData", "text": "the application homepage URL Can be QString() if not set"}, {"type": "function", "name": "KAboutData::internalBugAddress", "url": "classKAboutData.html#a1cd2beab8637cf9fc00d4a3c631544e9", "keyword": "internalBugAddress KAboutData::internalBugAddress KAboutData", "text": "Provided for use by KCrash Return the untranslated and uninterpreted to UTF8 string for the bug mail address Used in particular for KCrash"}, {"type": "function", "name": "KAboutData::internalProgramName", "url": "classKAboutData.html#a689a2f0584b2f88c14ae40b301e5ed73", "keyword": "internalProgramName KAboutData::internalProgramName KAboutData", "text": "Provided for use by KCrash Return the program name It is always pre-allocated Needed for KCrash in particular"}, {"type": "function", "name": "KAboutData::internalVersion", "url": "classKAboutData.html#a42ad4b3707aa5ca93f7e8a54c9e3fc9b", "keyword": "internalVersion KAboutData::internalVersion KAboutData", "text": "Provided for use by KCrash Return the untranslated and uninterpreted to UTF8 string for the version information Used in particular for KCrash"}, {"type": "function", "name": "KAboutData::licenses", "url": "classKAboutData.html#afef367176a2f6bdd843d271a7e46eedb", "keyword": "licenses KAboutData::licenses KAboutData", "text": "licenses information list of licenses"}, {"type": "function", "name": "KAboutData::ocsProviderUrl", "url": "classKAboutData.html#a0955c58d70b97cc9ab7b2253fa6e9395", "keyword": "ocsProviderUrl KAboutData::ocsProviderUrl KAboutData", "text": "the provider URL"}, {"type": "function", "name": "KAboutData::operator=", "url": "classKAboutData.html#a9968228a836f593ec2706f4d6647c449", "keyword": "operator= KAboutData::operator= KAboutData", "text": "Performs a deep copy other object to copy"}, {"type": "function", "name": "KAboutData::organizationDomain", "url": "classKAboutData.html#aaa56436ef846cbbf9fec724851bbec6a", "keyword": "organizationDomain KAboutData::organizationDomain KAboutData", "text": "Used by the automatic registration to D-Bus done by KApplication and KUniqueApplication"}, {"type": "function", "name": "KAboutData::otherText", "url": "classKAboutData.html#af032c92592ba393da07aa8ec25d0f3bf", "keyword": "otherText KAboutData::otherText KAboutData", "text": "the free form text translated Can be QString() if not set"}, {"type": "function", "name": "KAboutData::processCommandLine", "url": "classKAboutData.html#ad47a01ccae0fdf19b333b11fc03573fe", "keyword": "processCommandLine KAboutData::processCommandLine KAboutData", "text": "setupCommandLine()"}, {"type": "function", "name": "KAboutData::productName", "url": "classKAboutData.html#a8a3a6979092a41ad86b969202c7d70ac", "keyword": "productName KAboutData::productName KAboutData", "text": "By default it returns componentName() otherwise the one which is set with setProductName() the product name"}, {"type": "function", "name": "KAboutData::programIconName", "url": "classKAboutData.html#a4aa93c41d57604e3f65d5e69b26b000a", "keyword": "programIconName KAboutData::programIconName KAboutData", "text": "The default value is componentName() the program s icon name This is mostly for compatibility given that setProgramIconName is deprecated"}, {"type": "function", "name": "KAboutData::programLogo", "url": "classKAboutData.html#a01c6dfc2ddf420b8292814bc6a5ea525", "keyword": "programLogo KAboutData::programLogo KAboutData", "text": "Because KAboutData is a core class it cannot use QImage directly so this is a QVariant containing a QImage the program logo data or a null image if there is no custom application logo defined"}, {"type": "function", "name": "KAboutData::setBugAddress", "url": "classKAboutData.html#a81a6f83d178ba07ea4c4a1abe3e5c04b", "keyword": "setBugAddress KAboutData::setBugAddress KAboutData", "text": "bugAddress The bug report email address string This defaults to the kde.org bug system"}, {"type": "function", "name": "KAboutData::setComponentName", "url": "classKAboutData.html#afd9e0914e32912ac5eadbe42ab43e57e", "keyword": "setComponentName KAboutData::setComponentName KAboutData", "text": "componentName The application or plugin name Example"}, {"type": "function", "name": "KAboutData::setCopyrightStatement", "url": "classKAboutData.html#a317e0671c2306f032e85e6f6c00a33d4", "keyword": "setCopyrightStatement KAboutData::setCopyrightStatement KAboutData", "text": "copyrightStatement A copyright statement that can look like this i18n The string specified here is taken verbatim the author information from addAuthor is not used"}, {"type": "function", "name": "KAboutData::setCustomAuthorText", "url": "classKAboutData.html#ac758e82b5f5dc2aabbd36bdd0813fc74", "keyword": "setCustomAuthorText KAboutData::setCustomAuthorText KAboutData", "text": "plainText The plain text richText The rich text Setting both to parameters to QString() will cause no message to be displayed at all Call unsetCustomAuthorText() to revert to the default message"}, {"type": "function", "name": "KAboutData::setDesktopFileName", "url": "classKAboutData.html#a112d2fc20c31e7847995930e030cc67b", "keyword": "setDesktopFileName KAboutData::setDesktopFileName KAboutData", "text": "This is the file name without the full path and without extension of the desktop entry that represents this application according to the freedesktop desktop entry specification e.g A default desktop file name is constructed when the KAboutData object is created using the reverse domain name of the organizationDomain() and the componentName() Call this method to override the default name or if you call setOrganizationDomain() or setComponentName() The desktop file name can also be passed to the application at runtime through the desktopfile command line option which is added by setupCommandLine(QCommandLineParser*) This is useful if an application supports multiple desktop files with different runtime settings desktopFileName The desktop file name of this application desktopFileName() organizationDomain() componentName() setupCommandLine(QCommandLineParser*) 5.16"}, {"type": "function", "name": "KAboutData::setDisplayName", "url": "classKAboutData.html#aab4be60aae3e3658f51e7ae665d91755", "keyword": "setDisplayName KAboutData::setDisplayName KAboutData", "text": "displayName The display name This string should be translated Example i18n"}, {"type": "function", "name": "KAboutData::setHomepage", "url": "classKAboutData.html#a0ff4ebd9377e139073bee4d2c93c794e", "keyword": "setHomepage KAboutData::setHomepage KAboutData", "text": "homepage The program homepage string Start the address with is correct but is not"}, {"type": "function", "name": "KAboutData::setLicense", "url": "classKAboutData.html#af9ccd07ba2f178adfdb02873cf3318c0", "keyword": "setLicense KAboutData::setLicense KAboutData", "text": "licenseKey The license identifier addLicenseText setLicenseText setLicenseTextFile"}, {"type": "function", "name": "KAboutData::setLicenseText", "url": "classKAboutData.html#a03a73d5b313c927fd9ae7a8d587d3e5a", "keyword": "setLicenseText KAboutData::setLicenseText KAboutData", "text": "Example license The license text"}, {"type": "function", "name": "KAboutData::setLicenseTextFile", "url": "classKAboutData.html#a213b34282dbf73e1a3ec216452393eb9", "keyword": "setLicenseTextFile KAboutData::setLicenseTextFile KAboutData", "text": "The file format has to be plain text in an encoding compatible to the locale file Path to the file in the local filesystem containing the license text"}, {"type": "function", "name": "KAboutData::setOcsProvider", "url": "classKAboutData.html#a64b2d5eff391d5584bbe02e585030e45", "keyword": "setOcsProvider KAboutData::setOcsProvider KAboutData", "text": "A provider file must be available for the chosen provider Use this if you need to override the default provider If this method is not used all the KAboutPerson OCS usernames will be used with the openDesktop.org entry from the default provider file providerUrl The provider URL as defined in the provider file"}, {"type": "function", "name": "KAboutData::setOrganizationDomain", "url": "classKAboutData.html#acc95b680a01e00753e25b71d48e4fc9c", "keyword": "setOrganizationDomain KAboutData::setOrganizationDomain KAboutData", "text": "The domain is set to kde.org by default or the domain of the homePageAddress constructor argument if set Make sure to call setOrganizationDomain if your product is developed out of the kde.org version-control system Used by the automatic registration to D-Bus done by KApplication and KUniqueApplication IMPORTANT if the organization domain is set the desktop file that describes your application should have an entry like X-DBUS-ServiceName reversed_domain.kmyapp For instance kwrite passes as the homePageAddress so it needs X-DBUS-ServiceName org.kate in its kwrite.desktop file domain the domain name for instance kde.org koffice.org kdevelop.org etc"}, {"type": "function", "name": "KAboutData::setOtherText", "url": "classKAboutData.html#abea5478712f4352f49a5944e0d8cbd45", "keyword": "setOtherText KAboutData::setOtherText KAboutData", "text": "otherText Some free form text that can contain any kind of information The text can contain newlines This string should be translated"}, {"type": "function", "name": "KAboutData::setProductName", "url": "classKAboutData.html#a0167de5a0565e61e57e8f6ee7dcce71b", "keyword": "setProductName KAboutData::setProductName KAboutData", "text": "By default it s the componentName but you can overwrite it here to provide support for special components e.g in the form product/component such as kontact/summary name The name of product"}, {"type": "function", "name": "KAboutData::setProgramIconName", "url": "classKAboutData.html#a060e442676a20877806cbf5abf09af93", "keyword": "setProgramIconName KAboutData::setProgramIconName KAboutData", "text": "This method used to set the icon name but this is no longer possible in KDE Frameworks 5 because KCoreAddons does not depend on QtGui iconName name of the icon Example programIconName() since 5.2 use QApplication::setWindowIcon(QIcon::fromTheme()) instead"}, {"type": "function", "name": "KAboutData::setProgramLogo", "url": "classKAboutData.html#a6a51b8a75e207c1b790d16d28e77c0b4", "keyword": "setProgramLogo KAboutData::setProgramLogo KAboutData", "text": "Use this if you need to have an application logo in AboutData other than the application icon Because KAboutData is a core class it cannot use QImage directly so this is a QVariant that should contain a QImage image logo image programLogo()"}, {"type": "function", "name": "KAboutData::setShortDescription", "url": "classKAboutData.html#a0681ccd1ab9cdffe7d05e6e50e07a7e1", "keyword": "setShortDescription KAboutData::setShortDescription KAboutData", "text": "shortDescription The program description This string should be translated Example i18n"}, {"type": "function", "name": "KAboutData::setTranslator", "url": "classKAboutData.html#a9a0a3e87cede16d6bb2e96d5bc5e5d4b", "keyword": "setTranslator KAboutData::setTranslator KAboutData", "text": "The canonical use with the ki18n framework is If you are using a KMainWindow this is done for you automatically The name and emailAddress are treated as lists separated with If the strings are empty or respectively they will be ignored name the name(s) of the translator(s) emailAddress the email address(es) of the translator(s) KAboutTranslator"}, {"type": "function", "name": "KAboutData::setupCommandLine", "url": "classKAboutData.html#afaf16b9be9deacfe10669219c50f2b43", "keyword": "setupCommandLine KAboutData::setupCommandLine KAboutData", "text": "Additionally it will set the description to the command line parser will add the help option and if the QApplication has a version set e.g via KAboutData::setApplicationData it will also add the version option Since 5.16 it also adds an option to set the desktop file name true if adding the options was successful otherwise returns false processCommandLine()"}, {"type": "function", "name": "KAboutData::setVersion", "url": "classKAboutData.html#abdbaf4044a9ec7363f0a975f75287d66", "keyword": "setVersion KAboutData::setVersion KAboutData", "text": "version The program version"}, {"type": "function", "name": "KAboutData::shortDescription", "url": "classKAboutData.html#a7bbc280f230c0caf606baaea24487e56", "keyword": "shortDescription KAboutData::shortDescription KAboutData", "text": "the short description translated Can be QString() if not set"}, {"type": "function", "name": "KAboutData::translators", "url": "classKAboutData.html#aac21ca1a260db2a015b5b4432c565325", "keyword": "translators KAboutData::translators KAboutData", "text": "translators information list of persons"}, {"type": "function", "name": "KAboutData::unsetCustomAuthorText", "url": "classKAboutData.html#ad98ce61ca02148742c48b4da21359d0d", "keyword": "unsetCustomAuthorText KAboutData::unsetCustomAuthorText KAboutData", "text": ""}, {"type": "function", "name": "KAboutData::version", "url": "classKAboutData.html#aa07c5ebb13e890bd6da1a44ceb94111e", "keyword": "version KAboutData::version KAboutData", "text": "the version string"}, {"type": "function", "name": "KAboutData::aboutTranslationTeam", "url": "classKAboutData.html#a1926165cd3fbb53bfe3e5c5abc98e9ec", "keyword": "aboutTranslationTeam KAboutData::aboutTranslationTeam KAboutData", "text": "a message about the translation team"}, {"type": "function", "name": "KAboutData::applicationData", "url": "classKAboutData.html#afa4023328d0c9a8e2ad203d33e2c046e", "keyword": "applicationData KAboutData::applicationData KAboutData", "text": "This contains information such as authors license etc provided that setApplicationData has been called before If not called before the returned KAboutData will be initialized from the equivalent properties of QCoreApplication and its subclasses if an instance of that already exists For the list of such properties see setApplicationData before 5.22 limited to QCoreApplication::applicationName setApplicationData"}, {"type": "function", "name": "KAboutData::fromPluginMetaData", "url": "classKAboutData.html#a5e4b50d32203838fb0bbcac2df2841e6", "keyword": "fromPluginMetaData KAboutData::fromPluginMetaData KAboutData", "text": "5.18"}, {"type": "function", "name": "KAboutData::pluginData", "url": "classKAboutData.html#ac95006f6c2df7b709573fef6e6a22d08", "keyword": "pluginData KAboutData::pluginData KAboutData", "text": ""}, {"type": "function", "name": "KAboutData::registerPluginData", "url": "classKAboutData.html#a11b9f6ec6fe63245618e4d6c167752e2", "keyword": "registerPluginData KAboutData::registerPluginData KAboutData", "text": "Call this from the constructor of the plugin This will register the plugin s aboutData under the component name that was set in aboutData"}, {"type": "function", "name": "KAboutData::setApplicationData", "url": "classKAboutData.html#abc5d31f414d19744ff0092112d411bcb", "keyword": "setApplicationData KAboutData::setApplicationData KAboutData", "text": "In addition to changing the result of applicationData() this initializes the equivalent properties of QCoreApplication and its subclasses with information from aboutData if an instance of that already exists Those properties are QCoreApplication::applicationName QCoreApplication::applicationVersion QCoreApplication::organizationDomain QGuiApplication::applicationDisplayName QGuiApplication::desktopFileName since 5.16 applicationData"}, {"type": "class", "name": "KAboutLicense", "url": "classKAboutLicense.html", "keyword": "KAboutLicense", "text": "The license can be one of some predefined one given as text or one that can be loaded from a file This class is used in the KAboutData class Explicitly creating a KAboutLicense object is not possible If the license is wanted for a KDE component having KAboutData object use KAboutData::licenses() to get the licenses for that component If the license is for a non-code resource and given by a keyword e.g in desktop files try using KAboutLicense::byKeyword()"}, {"type": "enum", "name": "KAboutLicense::LicenseKey", "url": "classKAboutLicense.html#a29386ce80267871552aedd21d9ce6bbb", "keyword": "LicenseKey KAboutLicense::LicenseKey KAboutLicense", "text": ""}, {"type": "enumvalue", "name": "KAboutLicense::LGPL_V2_1", "url": "classKAboutLicense.html#a29386ce80267871552aedd21d9ce6bbba8eafb75929aea8c9424127904a828534", "keyword": "LGPL_V2_1 KAboutLicense::LGPL_V2_1 KAboutLicense", "text": "5.25"}, {"type": "enum", "name": "KAboutLicense::NameFormat", "url": "classKAboutLicense.html#a5b6fa1d92fe548da1d96dc8c1e468d56", "keyword": "NameFormat KAboutLicense::NameFormat KAboutLicense", "text": ""}, {"type": "function", "name": "KAboutLicense::KAboutLicense", "url": "classKAboutLicense.html#a6e58b7ea5bad72f1d4189449ec1b3216", "keyword": "KAboutLicense KAboutLicense::KAboutLicense KAboutLicense", "text": "Performs a deep copy other object to copy"}, {"type": "function", "name": "KAboutLicense::key", "url": "classKAboutLicense.html#a0afb73ae1cc6804f307997f3e9738300", "keyword": "key KAboutLicense::key KAboutLicense", "text": "The license key as element of KAboutLicense::LicenseKey enum"}, {"type": "function", "name": "KAboutLicense::name", "url": "classKAboutLicense.html#a60ede7481143efc1330f87e97d738678", "keyword": "name KAboutLicense::name KAboutLicense", "text": "The license name as a string"}, {"type": "function", "name": "KAboutLicense::operator=", "url": "classKAboutLicense.html#acc4d319ec08d5d2355c5d2abf7380f2e", "keyword": "operator= KAboutLicense::operator= KAboutLicense", "text": "Performs a deep copy other object to copy"}, {"type": "function", "name": "KAboutLicense::text", "url": "classKAboutLicense.html#a33a60f55aa93dc1db945a01d13ad2523", "keyword": "text KAboutLicense::text KAboutLicense", "text": "If the licenseType argument of the constructor has been used any text defined by setLicenseText is ignored and the standard text for the chosen license will be returned The license text"}, {"type": "function", "name": "KAboutLicense::byKeyword", "url": "classKAboutLicense.html#a4e294b10c2b47720fa780b52a6e14171", "keyword": "byKeyword KAboutLicense::byKeyword KAboutLicense", "text": "Frequently the license data is provided by a terse keyword-like string e.g by a field in a desktop file Using this method an application can get hold of a proper KAboutLicense object providing that the license is one of the several known to KDE and use it to present more human-readable information to the user Keywords are matched by stripping all whitespace and lowercasing The known keywords correspond to the KAboutLicense::LicenseKey enumeration e.g any of would match KAboutLicense::LGPL_V3 If there is no match for the keyword a valid license object is still returned with its name and text informing about a custom license and its key equal to KAboutLicense::Custom keyword The license keyword The license object KAboutLicense::LicenseKey"}, {"type": "class", "name": "KAboutPerson", "url": "classKAboutPerson.html", "keyword": "KAboutPerson", "text": "It can store the person s name a task an email address and a link to a home page This class is intended for use in the KAboutData class but it can be used elsewhere as well Normally you should at least define the person s name Creating a KAboutPerson object by yourself is relatively useless but the KAboutData methods KAboutData::authors() and KAboutData::credits() return lists of KAboutPerson data objects which you can examine Example usage within a main() retrieving the list of people involved with a program and re-using data from one of them"}, {"type": "function", "name": "KAboutPerson::KAboutPerson", "url": "classKAboutPerson.html#aca800cdbb2831762c9ac5ae2c03bdeb6", "keyword": "KAboutPerson KAboutPerson::KAboutPerson KAboutPerson", "text": "name The name of the person task The task of this person emailAddress The email address of the person webAddress Home page of the person ocsUsername Open Collaboration Services username of the person"}, {"type": "function", "name": "KAboutPerson::KAboutPerson", "url": "classKAboutPerson.html#a872e84eb8fa801c72dfecdb90b3e8b78", "keyword": "KAboutPerson KAboutPerson::KAboutPerson KAboutPerson", "text": "Performs a deep copy other object to copy"}, {"type": "function", "name": "KAboutPerson::emailAddress", "url": "classKAboutPerson.html#a07e0895d10816c21422483440be600f2", "keyword": "emailAddress KAboutPerson::emailAddress KAboutPerson", "text": "the person s email address can be QString() if it has been constructed with an empty email"}, {"type": "function", "name": "KAboutPerson::name", "url": "classKAboutPerson.html#a9ae8d40273f7b589e1a6ee475f0ba8be", "keyword": "name KAboutPerson::name KAboutPerson", "text": "the person s name can be QString() if it has been constructed with an empty name"}, {"type": "function", "name": "KAboutPerson::ocsUsername", "url": "classKAboutPerson.html#a49eba126d25f619d3d61845e0e897b15", "keyword": "ocsUsername KAboutPerson::ocsUsername KAboutPerson", "text": "the persons OCS username can be QString() if it has been constructed with an empty username"}, {"type": "function", "name": "KAboutPerson::operator=", "url": "classKAboutPerson.html#afa420979815504aa6145747e87202da5", "keyword": "operator= KAboutPerson::operator= KAboutPerson", "text": "Performs a deep copy other object to copy"}, {"type": "function", "name": "KAboutPerson::task", "url": "classKAboutPerson.html#aba609646a9de91a8261e534616b6b6a9", "keyword": "task KAboutPerson::task KAboutPerson", "text": "the person s task can be QString() if it has been constructed with an empty task"}, {"type": "function", "name": "KAboutPerson::webAddress", "url": "classKAboutPerson.html#aabd16e1d566f1eb7c9b06afb6ca8bff7", "keyword": "webAddress KAboutPerson::webAddress KAboutPerson", "text": "the persons home page can be QString() if it has been constructed with an empty home page"}, {"type": "function", "name": "KAboutPerson::fromJSON", "url": "classKAboutPerson.html#a4337fafce6143dca42df70c9a8b2fab3", "keyword": "fromJSON KAboutPerson::fromJSON KAboutPerson", "text": "Key Accessor Name name() Email emailAddress() Task task() Website webAddress() UserName ocsUsername() The Name and Task key are translatable by using e.g a key 5.18"}, {"type": "class", "name": "KAutoSaveFile", "url": "classKAutoSaveFile.html", "keyword": "KAutoSaveFile", "text": "Autosave files are temporary files that applications use to store the unsaved data in a file they have open for editing KAutoSaveFile allows you to easily create and manage such files as well as to recover the unsaved data left over by a crashed or otherwise gone process Each KAutoSaveFile object is associated with one specific file that the application holds open KAutoSaveFile is also a QObject so it can be reparented to the actual opened file object so as to manage the lifetime of the temporary file Typical use consists of verifying whether stale autosave files exist for the opened file deciding whether to recover the old autosaved data if not recovering creating a KAutoSaveFile object for the opened file during normal execution of the program periodically save unsaved data into the KAutoSaveFile file KAutoSaveFile holds a lock on the autosave file so it s safe to delete the file and recreate it later Because of that disposing of stale autosave files should be done with releaseLock() No lock is held on the managed file Examples Opening a new file The function recoverFiles could loop over the list of files and do this If the file is unsaved periodically write the contents to the save file When the user saves the file the autosaved file is no longer necessary and can be removed or emptied Jacob R Rideout"}, {"type": "function", "name": "KAutoSaveFile::KAutoSaveFile", "url": "classKAutoSaveFile.html#ae02fc2cb752540bf344707a7c76d34bb", "keyword": "KAutoSaveFile KAutoSaveFile::KAutoSaveFile KAutoSaveFile", "text": "The temporary file is not opened or created until actually needed The file filename does not have to exist for KAutoSaveFile to be constructed if it exists it will not be touched filename the filename that this KAutoSaveFile refers to parent the parent object"}, {"type": "function", "name": "KAutoSaveFile::KAutoSaveFile", "url": "classKAutoSaveFile.html#a47054f4c458454efb17fbae8c90115c0", "keyword": "KAutoSaveFile KAutoSaveFile::KAutoSaveFile KAutoSaveFile", "text": "Note that you need to call setManagedFile() before calling open() parent the parent object"}, {"type": "function", "name": "KAutoSaveFile::~KAutoSaveFile", "url": "classKAutoSaveFile.html#aae63b18df5b87afbab97a43bbde214ec", "keyword": "KAutoSaveFile::~KAutoSaveFile KAutoSaveFile", "text": ""}, {"type": "function", "name": "KAutoSaveFile::managedFile", "url": "classKAutoSaveFile.html#a95c1d3827046819ebaf28d7c52aa7a59", "keyword": "managedFile KAutoSaveFile::managedFile KAutoSaveFile", "text": "This is the same URL that was given to setManagedFile() or the KAutoSaveFile constructor This is the name of the real file being edited by the application To get the name of the temporary file where data can be saved use fileName() after you have called open()"}, {"type": "function", "name": "KAutoSaveFile::open", "url": "classKAutoSaveFile.html#a026a39bb0951fbcbc0a8716633e37df5", "keyword": "open KAutoSaveFile::open KAutoSaveFile", "text": "The name of the temporary file where data can be saved to will be set by this function and can be retrieved with fileName() It will not change unless releaseLock() is called No other application will attempt to edit such a file either while the lock is held openmode the mode that should be used to open the file probably QIODevice::ReadWrite true if the file could be opened locked and created false if the operation failed"}, {"type": "function", "name": "KAutoSaveFile::releaseLock", "url": "classKAutoSaveFile.html#a4f4952212230600ca0597e6fc4b267da", "keyword": "releaseLock KAutoSaveFile::releaseLock KAutoSaveFile", "text": "The file name returned by fileName() will no longer be protected and can be overwritten by another application at any time To obtain a new lock call open() again This function calls remove() so the autosave temporary file will be removed too"}, {"type": "function", "name": "KAutoSaveFile::setManagedFile", "url": "classKAutoSaveFile.html#acf2d7648e881e305eb9c7b9fab2f321c", "keyword": "setManagedFile KAutoSaveFile::setManagedFile KAutoSaveFile", "text": "This should be the name of the real file being edited by the application If the file was previously set this function calls releaseLock() filename the filename that this KAutoSaveFile refers to"}, {"type": "function", "name": "KAutoSaveFile::allStaleFiles", "url": "classKAutoSaveFile.html#aba2b27b275b911329d8e560fa177d617", "keyword": "allStaleFiles KAutoSaveFile::allStaleFiles KAutoSaveFile", "text": "If not given the application name is obtained from QCoreApplication so be sure to have set it correctly before calling this function See staleFiles() for information on the returned objects"}, {"type": "function", "name": "KAutoSaveFile::staleFiles", "url": "classKAutoSaveFile.html#afc3c7421945d41fb26438aba08c492ea", "keyword": "staleFiles KAutoSaveFile::staleFiles KAutoSaveFile", "text": "Returns a list of autosave files that contain autosaved data left behind by other instances of the application due to crashing or otherwise uncleanly exiting It is the application s job to determine what to do with such unsaved data Generally this is done by asking the user if he wants to see the recovered data and then allowing the user to save if he wants to If not given the application name is obtained from QCoreApplication so be sure to have set it correctly before calling this function This function returns a list of unopened KAutoSaveFile objects By calling open() on them the application will steal the lock Subsequent releaseLock() or deleting of the object will then erase the stale autosave file"}, {"type": "class", "name": "KCharMacroExpander", "url": "classKCharMacroExpander.html", "keyword": "KCharMacroExpander", "text": "Use this instead of the functions in the KMacroExpander namespace if speculatively pre-filling the substitution map would be too expensive See KWordMacroExpander for a sample application Oswald Buddenhagen"}, {"type": "function", "name": "KCharMacroExpander::KCharMacroExpander", "url": "classKCharMacroExpander.html#a15305042658ec4a1db1f2acbdc6b119d", "keyword": "KCharMacroExpander KCharMacroExpander::KCharMacroExpander KCharMacroExpander", "text": "c escape char indicating start of macros or QChar::null for none"}, {"type": "function", "name": "KMacroExpanderBase::KMacroExpanderBase", "url": "classKMacroExpanderBase.html#aa1b43ed6087098aad09d515be1397e87", "keyword": "KMacroExpanderBase KMacroExpanderBase::KMacroExpanderBase KMacroExpanderBase KMacroExpanderBase KMacroExpanderBase::KMacroExpanderBase KMacroExpanderBase KMacroExpanderBase KMacroExpanderBase::KMacroExpanderBase KMacroExpanderBase", "text": "c escape char indicating start of macros or QChar::null for none"}, {"type": "function", "name": "KMacroExpanderBase::~KMacroExpanderBase", "url": "classKMacroExpanderBase.html#a89537301331c144bffa1e5b6f7e0a84c", "keyword": "KMacroExpanderBase::~KMacroExpanderBase KMacroExpanderBase KMacroExpanderBase::~KMacroExpanderBase KMacroExpanderBase KMacroExpanderBase::~KMacroExpanderBase KMacroExpanderBase", "text": ""}, {"type": "function", "name": "KMacroExpanderBase::escapeChar", "url": "classKMacroExpanderBase.html#a2066c0167e01ca9e9004094bb3080d50", "keyword": "escapeChar KMacroExpanderBase::escapeChar KMacroExpanderBase escapeChar KMacroExpanderBase::escapeChar KMacroExpanderBase escapeChar KMacroExpanderBase::escapeChar KMacroExpanderBase", "text": "escape char indicating start of macros or QChar::null if none"}, {"type": "function", "name": "KMacroExpanderBase::expandMacros", "url": "classKMacroExpanderBase.html#a1938a93ae6e03d517bcae5bf65a6430a", "keyword": "expandMacros KMacroExpanderBase::expandMacros KMacroExpanderBase expandMacros KMacroExpanderBase::expandMacros KMacroExpanderBase expandMacros KMacroExpanderBase::expandMacros KMacroExpanderBase", "text": "str the string in which macros are expanded in-place"}, {"type": "function", "name": "KMacroExpanderBase::expandMacrosShellQuote", "url": "classKMacroExpanderBase.html#ada9d2fbb7d0b640ba744152b40c24b00", "keyword": "expandMacrosShellQuote KMacroExpanderBase::expandMacrosShellQuote KMacroExpanderBase expandMacrosShellQuote KMacroExpanderBase::expandMacrosShellQuote KMacroExpanderBase expandMacrosShellQuote KMacroExpanderBase::expandMacrosShellQuote KMacroExpanderBase", "text": "notes Explicitly supported shell constructs Implicitly supported shell constructs Unsupported shell constructs that will cause problems Shortened case in pat syntax Use case in pat instead The rest of the shell incl bash syntax is simply ignored as it is not expected to cause problems Note that bash contains a bug which makes macro expansion within double quoted substitutions inherently insecure For security reasons never put expandos in command line arguments that are shell commands by themselves sh foo f is taboo file f sh foo is OK Windows notes All quoting syntax supported by KShell is supported here as well Additionally command grouping via parentheses is recognized note however that the parser is much stricter about unquoted parentheses than cmd itself The rest of the cmd syntax is simply ignored as it is not expected to cause problems do not use commands that embed other commands though for is taboo str the string in which macros are expanded in-place pos the position inside the string at which parsing/substitution should start and upon exit where processing stopped false if the string could not be parsed and therefore no safe substitution was possible Note that macros will have been processed up to the point where the error occurred An unmatched closing paren or brace outside any shell construct is not an error unlike in the function below but still prematurely terminates processing"}, {"type": "function", "name": "KMacroExpanderBase::expandMacrosShellQuote", "url": "classKMacroExpanderBase.html#a8b0d17f22e51b051e62aa94bef02f045", "keyword": "expandMacrosShellQuote KMacroExpanderBase::expandMacrosShellQuote KMacroExpanderBase expandMacrosShellQuote KMacroExpanderBase::expandMacrosShellQuote KMacroExpanderBase expandMacrosShellQuote KMacroExpanderBase::expandMacrosShellQuote KMacroExpanderBase", "text": ""}, {"type": "function", "name": "KMacroExpanderBase::setEscapeChar", "url": "classKMacroExpanderBase.html#a7fab042d7696dc5fc172475cb698b99f", "keyword": "setEscapeChar KMacroExpanderBase::setEscapeChar KMacroExpanderBase setEscapeChar KMacroExpanderBase::setEscapeChar KMacroExpanderBase setEscapeChar KMacroExpanderBase::setEscapeChar KMacroExpanderBase", "text": "c escape char indicating start of macros or QChar::null if none"}, {"type": "function", "name": "KCharMacroExpander::expandEscapedMacro", "url": "classKCharMacroExpander.html#a07e9a0eefbe9b065eb727e268936ede3", "keyword": "expandEscapedMacro KCharMacroExpander::expandEscapedMacro KCharMacroExpander", "text": "Not to be called or reimplemented"}, {"type": "function", "name": "KCharMacroExpander::expandMacro", "url": "classKCharMacroExpander.html#ae68e0d3c326f8f024613b5af2675619f", "keyword": "expandMacro KCharMacroExpander::expandMacro KCharMacroExpander", "text": "chr the macro to expand ret return variable reference It is guaranteed to be empty when expandMacro is entered true iff chr was a recognized macro name"}, {"type": "function", "name": "KCharMacroExpander::expandPlainMacro", "url": "classKCharMacroExpander.html#af639bc3bed306565e7498e9d788533ce", "keyword": "expandPlainMacro KCharMacroExpander::expandPlainMacro KCharMacroExpander", "text": "Not to be called or reimplemented"}, {"type": "class", "name": "KCompositeJob", "url": "classKCompositeJob.html", "keyword": "KCompositeJob", "text": ""}, {"type": "function", "name": "KCompositeJob::KCompositeJob", "url": "classKCompositeJob.html#a161696354b27b539434f04a882e17a1e", "keyword": "KCompositeJob KCompositeJob::KCompositeJob KCompositeJob", "text": "parent the parent QObject"}, {"type": "function", "name": "KCompositeJob::~KCompositeJob", "url": "classKCompositeJob.html#ae40510a2b1c43e6a81584996155ae250", "keyword": "KCompositeJob::~KCompositeJob KCompositeJob", "text": ""}, {"type": "function", "name": "KJob::KJob", "url": "classKJob.html#abb012b5f948bb7eb479849544dd8054f", "keyword": "KJob KJob::KJob KJob KJob KJob::KJob KJob", "text": "parent the parent QObject"}, {"type": "function", "name": "KJob::~KJob", "url": "classKJob.html#ae471774ad3fb512f5b52d7555fdd1a0d", "keyword": "KJob::~KJob KJob KJob::~KJob KJob", "text": ""}, {"type": "function", "name": "KJob::capabilities", "url": "classKJob.html#a791e6ced466eed1292235bdd21dfff8b", "keyword": "capabilities KJob::capabilities KJob capabilities KJob::capabilities KJob", "text": "the capabilities that this job supports setCapabilities()"}, {"type": "function", "name": "KJob::error", "url": "classKJob.html#a3ce3cc54ff80484e57dbb58b40cf1d60", "keyword": "error KJob::error KJob error KJob::error KJob", "text": "Only call this method from the slot connected to result() the error code for this job 0 if no error"}, {"type": "function", "name": "KJob::errorString", "url": "classKJob.html#a8b08f9cbe5883b44355ea07618682ee8", "keyword": "errorString KJob::errorString KJob errorString KJob::errorString KJob", "text": "This provides a translated human-readable description of the error Only call if error is not 0 Subclasses should implement this to create a translated error message from the error code and error text For example a translated error message providing error() is 0"}, {"type": "function", "name": "KJob::errorText", "url": "classKJob.html#adf02ea23c2bc6267a6eff6941831461f", "keyword": "errorText KJob::errorText KJob errorText KJob::errorText KJob", "text": "Only call if error is not 0 This is usually some extra data associated with the error such as a URL Use errorString() to get a human-readable translated message a string to help understand the error"}, {"type": "function", "name": "KJob::exec", "url": "classKJob.html#a03c768fad2f9eef7b72b068b389c42ee", "keyword": "exec KJob::exec KJob exec KJob::exec KJob", "text": "This will start a nested QEventLoop internally Nested event loop can be dangerous and can have unintended side effects you should avoid calling exec() whenever you can and use the asynchronous interface of KJob instead Should you indeed call this method you need to make sure that all callers are reentrant so that events delivered by the inner event loop don t cause non-reentrant functions to be called which usually wreaks havoc Note that the event loop started by this method does not process user input events which means your user interface will effectivly be blocked Other events like paint or network events are still being processed The advantage of not processing user input events is that the chance of accidental reentrancy is greatly reduced Still you should avoid calling this function true if the job has been executed without error false otherwise"}, {"type": "function", "name": "KJob::isAutoDelete", "url": "classKJob.html#a90ac84e8528fc8e42dfbb0c0e9765ef6", "keyword": "isAutoDelete KJob::isAutoDelete KJob isAutoDelete KJob::isAutoDelete KJob", "text": "whether the job is deleted automatically after finishing"}, {"type": "function", "name": "KJob::isSuspended", "url": "classKJob.html#a536d69fefb405fc3c7a2481c1b3ddb10", "keyword": "isSuspended KJob::isSuspended KJob isSuspended KJob::isSuspended KJob", "text": "if the job was suspended suspend() resume()"}, {"type": "function", "name": "KJob::percent", "url": "classKJob.html#a72ec308bdf788dd3a648eac5d960f7ee", "keyword": "percent KJob::percent KJob percent KJob::percent KJob", "text": "the overall progress of this job"}, {"type": "function", "name": "KJob::processedAmount", "url": "classKJob.html#a6d266550121501d9b6d24d76935ee3da", "keyword": "processedAmount KJob::processedAmount KJob processedAmount KJob::processedAmount KJob", "text": "unit the unit of the requested amount the processed size"}, {"type": "function", "name": "KJob::setAutoDelete", "url": "classKJob.html#ac3e70fb23e01094732d91a82ef642fcb", "keyword": "setAutoDelete KJob::setAutoDelete KJob setAutoDelete KJob::setAutoDelete KJob", "text": "If autodelete is set to false the job will not delete itself once it is finished The default for any KJob is to automatically delete itself autodelete set to false to disable automatic deletion of the job"}, {"type": "function", "name": "KJob::setUiDelegate", "url": "classKJob.html#aeb16f4e8fc75ae98f3b4c54663b5f2fb", "keyword": "setUiDelegate KJob::setUiDelegate KJob setUiDelegate KJob::setUiDelegate KJob", "text": "If the job had another UI delegate it s automatically deleted Once attached to the job the UI delegate will be deleted with the job delegate the new UI delegate to use KJobUiDelegate"}, {"type": "function", "name": "KJob::start", "url": "classKJob.html#ac10f2cb1cda6d32a08ad4a11e7b6bd8d", "keyword": "start KJob::start KJob start KJob::start KJob", "text": "When the job is finished result() is emitted Warning Never implement any synchronous workload in this method This method should just trigger the job startup not do any work itself It is expected to be non-blocking This is the method all subclasses need to implement It should setup and trigger the workload of the job It should not do any work itself This includes all signals and terminating the job e.g by emitResult() The workload which could be another method of the subclass is to be triggered using the event loop e.g by code like"}, {"type": "function", "name": "KJob::totalAmount", "url": "classKJob.html#a32d37b873aae950ed12fc99b569d8c73", "keyword": "totalAmount KJob::totalAmount KJob totalAmount KJob::totalAmount KJob", "text": "unit the unit of the requested amount the total size"}, {"type": "function", "name": "KJob::uiDelegate", "url": "classKJob.html#a8b4d4f432bb9df55edc62e24be5c1609", "keyword": "uiDelegate KJob::uiDelegate KJob uiDelegate KJob::uiDelegate KJob", "text": "the delegate attached to this job or 0 if there s no such delegate"}, {"type": "slot", "name": "KCompositeJob::slotInfoMessage", "url": "classKCompositeJob.html#a5cf52a205c6758a48488b6a54145a323", "keyword": "slotInfoMessage KCompositeJob::slotInfoMessage KCompositeJob", "text": "job the subjob plain the info message in plain text version rich the info message in rich text version infoMessage()"}, {"type": "slot", "name": "KCompositeJob::slotResult", "url": "classKCompositeJob.html#aac88b6446a2d76645e53ee3236412ec1", "keyword": "slotResult KCompositeJob::slotResult KCompositeJob", "text": "Default implementation checks for errors and propagates to parent job and in all cases it calls removeSubjob job the subjob"}, {"type": "function", "name": "KCompositeJob::addSubjob", "url": "classKCompositeJob.html#a182383ba6b42cfe905b0b275304bf173", "keyword": "addSubjob KCompositeJob::addSubjob KCompositeJob", "text": "This has obviously to be called before the result has been emitted by the job Note that the composite job takes ownership of job job the subjob to add true if the job has been added correctly false otherwise"}, {"type": "function", "name": "KCompositeJob::clearSubjobs", "url": "classKCompositeJob.html#ab5e7d0a4d494af330d6f7d472660ca54", "keyword": "clearSubjobs KCompositeJob::clearSubjobs KCompositeJob", "text": "Note that this will not delete the subjobs Ownership of the subjobs is passed on to the caller"}, {"type": "function", "name": "KCompositeJob::hasSubjobs", "url": "classKCompositeJob.html#a3f5f2cb4fe811e75a6c03b32bd3eddfb", "keyword": "hasSubjobs KCompositeJob::hasSubjobs KCompositeJob", "text": "true if we still have subjobs running false otherwise"}, {"type": "function", "name": "KCompositeJob::removeSubjob", "url": "classKCompositeJob.html#aa770b0c23e78973466283bebfb317cd7", "keyword": "removeSubjob KCompositeJob::removeSubjob KCompositeJob", "text": "The ownership of job is passed on to the caller job the subjob to remove true if the job has been removed correctly false otherwise"}, {"type": "function", "name": "KCompositeJob::subjobs", "url": "classKCompositeJob.html#a40abab32c60dbce144beff9ed39e716e", "keyword": "subjobs KCompositeJob::subjobs KCompositeJob", "text": "the full list of sub jobs"}, {"type": "function", "name": "KJob::doKill", "url": "classKJob.html#a530a7e84c5a68a9b418247df54a94789", "keyword": "doKill KJob::doKill KJob doKill KJob::doKill KJob", "text": "This simply kills the job no error reporting or job deletion should be involved true if the operation is supported and succeeded false otherwise"}, {"type": "function", "name": "KJob::doResume", "url": "classKJob.html#ac31545b7f0b1ddca8f8c06e25c7ebce3", "keyword": "doResume KJob::doResume KJob doResume KJob::doResume KJob", "text": "true if the operation is supported and succeeded false otherwise"}, {"type": "function", "name": "KJob::doSuspend", "url": "classKJob.html#a579209138987392ce0ec736c339bacbb", "keyword": "doSuspend KJob::doSuspend KJob doSuspend KJob::doSuspend KJob", "text": "true if the operation is supported and succeeded false otherwise"}, {"type": "function", "name": "KJob::emitPercent", "url": "classKJob.html#abc2e9a1b27f3d07e717faf34565fed21", "keyword": "emitPercent KJob::emitPercent KJob emitPercent KJob::emitPercent KJob", "text": "Emits the percent signal if bigger than previous value after calculating it from the parameters processedAmount the processed amount totalAmount the total amount percent()"}, {"type": "function", "name": "KJob::emitResult", "url": "classKJob.html#a2cbae3c87fa7dddd25e3ab528e94ceee", "keyword": "emitResult KJob::emitResult KJob emitResult KJob::emitResult KJob", "text": "It first notifies the observers to hide the progress for this job using the finished() signal Deletes this job using deleteLater() result() finished()"}, {"type": "function", "name": "KJob::emitSpeed", "url": "classKJob.html#aeebe1bfd536b766fb92a7d23e5d343a6", "keyword": "emitSpeed KJob::emitSpeed KJob emitSpeed KJob::emitSpeed KJob", "text": "Emits the speed signal and starts the timer for removing that info speed the speed in bytes/s"}, {"type": "function", "name": "KJob::setCapabilities", "url": "classKJob.html#a9eb35f34df97da45874a8e30b38edcf4", "keyword": "setCapabilities KJob::setCapabilities KJob setCapabilities KJob::setCapabilities KJob", "text": "capabilities are the capabilities supported by this job capabilities()"}, {"type": "function", "name": "KJob::setError", "url": "classKJob.html#a859926d61ecfde11a13410abab4790a8", "keyword": "setError KJob::setError KJob setError KJob::setError KJob", "text": "It should be called when an error is encountered in the job just before calling emitResult() You should define an anonymous enum of error codes with values starting at KJob::UserDefinedError and use those For example errorCode the error code emitResult()"}, {"type": "function", "name": "KJob::setErrorText", "url": "classKJob.html#a08849b10c05076e867ced5727ed35930", "keyword": "setErrorText KJob::setErrorText KJob setErrorText KJob::setErrorText KJob", "text": "It should be called when an error is encountered in the job just before calling emitResult() Provides extra information about the error that cannot be determined directly from the error code For example a URL or filename This string is not normally translatable errorText the error text emitResult() errorString() setError()"}, {"type": "function", "name": "KJob::setPercent", "url": "classKJob.html#a7177fa35785b66e749f444148016afa5", "keyword": "setPercent KJob::setPercent KJob setPercent KJob::setPercent KJob", "text": "The percent() signal is emitted if the value changed percentage the new overall progress"}, {"type": "function", "name": "KJob::setProcessedAmount", "url": "classKJob.html#adf19c8899d3217bae6d05ad8e493e8ca", "keyword": "setProcessedAmount KJob::setProcessedAmount KJob setProcessedAmount KJob::setProcessedAmount KJob", "text": "The processedAmount() and percent() signals are emitted if the values changed The percent() signal is emitted only for the progress unit unit the unit of the new processed amount amount the new processed amount"}, {"type": "function", "name": "KJob::setTotalAmount", "url": "classKJob.html#a261739ac0eafa4a7e80098fd0c6e9e61", "keyword": "setTotalAmount KJob::setTotalAmount KJob setTotalAmount KJob::setTotalAmount KJob", "text": "The totalSize() and percent() signals are emitted if the values changed The percent() signal is emitted only for the progress unit unit the unit of the new total amount amount the new total amount"}, {"type": "signal", "name": "KJob::description", "url": "classKJob.html#a145f7a7648f06ef79cf526a2c6125b88", "keyword": "description KJob::description KJob description KJob::description KJob", "text": "A description has a title and two optional fields which can be used to complete the description Examples of titles are etc The fields of the description can be with an URL and with an URL for a description job the job that emitted this signal title the general description of the job field1 first field localized name and value field2 second field localized name and value"}, {"type": "signal", "name": "KJob::finished", "url": "classKJob.html#a67b6c63fc5eb7bd31234960e7a5487d9", "keyword": "finished KJob::finished KJob finished KJob::finished KJob", "text": "It is used to notify observers that the job is terminated and that progress can be hidden This is a private signal it can t be emitted directly by subclasses of KJob use emitResult() instead In general to be notified of a job s completion client code should connect to result() rather than finished() so that kill(Quietly) is indeed quiet However if you store a list of jobs and they might get killed silently then you must connect to this instead of result() to avoid dangling pointers in your list job the job that emitted this signal result"}, {"type": "signal", "name": "KJob::infoMessage", "url": "classKJob.html#afed68ccf8ff292cb95ca8d286080cc61", "keyword": "infoMessage KJob::infoMessage KJob infoMessage KJob::infoMessage KJob", "text": "Examples of message are etc job the job that emitted this signal plain the info message rich the rich text version of the message or QString() is none is available"}, {"type": "signal", "name": "KJob::percent", "url": "classKJob.html#a91803b47fc242540d60e0502e3175a56", "keyword": "percent KJob::percent KJob percent KJob::percent KJob", "text": "see KProgressBar Note that this signal is not emitted for finished jobs This is a private signal it can t be emitted directly by subclasses of KJob use emitPercent() setPercent() setTotalAmount() or setProcessedAmount() instead job the job that emitted this signal percent the percentage"}, {"type": "signal", "name": "KJob::processedAmount", "url": "classKJob.html#a9a199bc3ad5a94b721231218c13fc9c6", "keyword": "processedAmount KJob::processedAmount KJob processedAmount KJob::processedAmount KJob", "text": "The unit of this amount is sent too It can be emitted several times if the job manages several different units This is a private signal it can t be emitted directly by subclasses of KJob use setProcessedAmount() instead job the job that emitted this signal unit the unit of the processed amount amount the processed amount"}, {"type": "signal", "name": "KJob::processedSize", "url": "classKJob.html#a457d296aab2ef3db2ee9e1ac5d0a5edb", "keyword": "processedSize KJob::processedSize KJob processedSize KJob::processedSize KJob", "text": "This is a private signal it can t be emitted directly by subclasses of KJob use setProcessedAmount() instead job the job that emitted this signal size the processed size"}, {"type": "signal", "name": "KJob::result", "url": "classKJob.html#a4df53d071366b7c2702551a415ed5bd7", "keyword": "result KJob::result KJob result KJob::result KJob", "text": "Use error to know if the job was finished with error This is a private signal it can t be emitted directly by subclasses of KJob use emitResult() instead Please connect to this signal instead of finished job the job that emitted this signal kill"}, {"type": "signal", "name": "KJob::resumed", "url": "classKJob.html#a00c91c85bcf63d93b5a1ae6721f4d468", "keyword": "resumed KJob::resumed KJob resumed KJob::resumed KJob", "text": "This is a private signal it can t be emitted directly by subclasses of KJob job the job that emitted this signal"}, {"type": "signal", "name": "KJob::speed", "url": "classKJob.html#af2f7afa9087dee468bd61f5f76c705ad", "keyword": "speed KJob::speed KJob speed KJob::speed KJob", "text": "This is a private signal it can t be emitted directly by subclasses of KJob use emitSpeed() instead job the job that emitted this signal speed the speed in bytes/s"}, {"type": "signal", "name": "KJob::suspended", "url": "classKJob.html#aafbecd4ee151a9a7b51b0420c75934c0", "keyword": "suspended KJob::suspended KJob suspended KJob::suspended KJob", "text": "This is a private signal it can t be emitted directly by subclasses of KJob job the job that emitted this signal"}, {"type": "signal", "name": "KJob::totalAmount", "url": "classKJob.html#ab9c97d2776629fb7fb6479f798adaf98", "keyword": "totalAmount KJob::totalAmount KJob totalAmount KJob::totalAmount KJob", "text": "The unit of this amount is sent too It can be emitted several times if the job manages several different units This is a private signal it can t be emitted directly by subclasses of KJob use setTotalAmount() instead job the job that emitted this signal unit the unit of the total amount amount the total amount"}, {"type": "signal", "name": "KJob::totalSize", "url": "classKJob.html#a9ddfc488b9930e6b8758d681335ff31f", "keyword": "totalSize KJob::totalSize KJob totalSize KJob::totalSize KJob", "text": "This is a private signal it can t be emitted directly by subclasses of KJob use setTotalAmount() instead job the job that emitted this signal size the total size"}, {"type": "signal", "name": "KJob::warning", "url": "classKJob.html#a95959afefa47852b6fd35c7fb9f3288d", "keyword": "warning KJob::warning KJob warning KJob::warning KJob", "text": "job the job that emitted this signal plain the warning message rich the rich text version of the message or QString() is none is available"}, {"type": "slot", "name": "KJob::kill", "url": "classKJob.html#a4cf31ed005f4abf01c478fd26fba03ee", "keyword": "kill KJob::kill KJob kill KJob::kill KJob", "text": "This kills and deletes the job verbosity if equals to EmitResult Job will emit signal result and ask uiserver to close the progress window verbosity is set to EmitResult for subjobs Whether applications should call with Quietly or EmitResult depends on whether they rely on result being emitted or not Please notice that if verbosity is set to Quietly signal result will NOT be emitted true if the operation is supported and succeeded false otherwise"}, {"type": "slot", "name": "KJob::resume", "url": "classKJob.html#a0ab533129a803a7f565a6a0ab9ccc7fc", "keyword": "resume KJob::resume KJob resume KJob::resume KJob", "text": "true if the operation is supported and succeeded false otherwise"}, {"type": "slot", "name": "KJob::suspend", "url": "classKJob.html#a1aa81820372970fad514d596a5f59472", "keyword": "suspend KJob::suspend KJob suspend KJob::suspend KJob", "text": "The job should be kept in a state in which it is possible to resume it true if the operation is supported and succeeded false otherwise"}, {"type": "class", "name": "Kdelibs4ConfigMigrator", "url": "classKdelibs4ConfigMigrator.html", "keyword": "Kdelibs4ConfigMigrator", "text": "Class for migration of config files and ui file from kdelibs4 5.2"}, {"type": "function", "name": "Kdelibs4ConfigMigrator::Kdelibs4ConfigMigrator", "url": "classKdelibs4ConfigMigrator.html#a343a8f8ab35f7ecf23c497bd149c6da5", "keyword": "Kdelibs4ConfigMigrator Kdelibs4ConfigMigrator::Kdelibs4ConfigMigrator Kdelibs4ConfigMigrator", "text": "appName The application name which is used for the directory containing the ui files"}, {"type": "function", "name": "Kdelibs4ConfigMigrator::~Kdelibs4ConfigMigrator", "url": "classKdelibs4ConfigMigrator.html#a6404e25fff4140e081eeb00cfd0fa29a", "keyword": "Kdelibs4ConfigMigrator::~Kdelibs4ConfigMigrator Kdelibs4ConfigMigrator", "text": ""}, {"type": "function", "name": "Kdelibs4ConfigMigrator::migrate", "url": "classKdelibs4ConfigMigrator.html#ada3289c46de51111fdc2791a919d9de6", "keyword": "migrate Kdelibs4ConfigMigrator::migrate Kdelibs4ConfigMigrator", "text": "Returns true if the migration happened It will return false if there was nothing to migrate no KDEHOME This return value is unrelated to error handling It is just a way to skip anything else related to migration on a clean system by writing"}, {"type": "function", "name": "Kdelibs4ConfigMigrator::setConfigFiles", "url": "classKdelibs4ConfigMigrator.html#aef5d6a4cbe5c00b689aa6f6c663e9b90", "keyword": "setConfigFiles Kdelibs4ConfigMigrator::setConfigFiles Kdelibs4ConfigMigrator", "text": "configFileNameList list of config files"}, {"type": "function", "name": "Kdelibs4ConfigMigrator::setUiFiles", "url": "classKdelibs4ConfigMigrator.html#abc298e8c9fb3b553fbf6116ed7991d63", "keyword": "setUiFiles Kdelibs4ConfigMigrator::setUiFiles Kdelibs4ConfigMigrator", "text": "uiFileNameList list of ui files"}, {"type": "class", "name": "Kdelibs4Migration", "url": "classKdelibs4Migration.html", "keyword": "Kdelibs4Migration", "text": "typically kde Distributions that built kdelibs4 with a custom KDE home with the CMake option _KDE_DEFAULT_HOME_POSTFIX should use the same option here with _KDE4_DEFAULT_HOME_POSTFIX The purpose is to be able to let the application migrate these files to the KF5/Qt5 location for these files QStandardPaths Files from the resource as saved by KConfig should be migrated to QStandardPaths::writableLocation(QStandardPaths::ConfigLocation) Files from the resource should be migrated to a subdirectory of QStandardPaths::writableLocation(QStandardPaths::DataLocation) The following resources are supported config data services servicetypes wallpaper emoticons templates Use kdeHome() for anything else Class for migration of config files from kdelibs4 5.0"}, {"type": "function", "name": "Kdelibs4Migration::Kdelibs4Migration", "url": "classKdelibs4Migration.html#ae0f19609284c8b645ca0d96db7ad90d8", "keyword": "Kdelibs4Migration Kdelibs4Migration::Kdelibs4Migration Kdelibs4Migration", "text": "The constructor attempts to locate the user s from kdelibs4"}, {"type": "function", "name": "Kdelibs4Migration::~Kdelibs4Migration", "url": "classKdelibs4Migration.html#a3427c5bfcfd543744d4c6b595c49a92e", "keyword": "Kdelibs4Migration::~Kdelibs4Migration Kdelibs4Migration", "text": ""}, {"type": "function", "name": "Kdelibs4Migration::kdeHome", "url": "classKdelibs4Migration.html#a0e56f773ce324dad7efd6db14d805941", "keyword": "kdeHome Kdelibs4Migration::kdeHome Kdelibs4Migration", "text": "Don t use this method if you can use locateLocal or saveLocation 5.13"}, {"type": "function", "name": "Kdelibs4Migration::kdeHomeFound", "url": "classKdelibs4Migration.html#a7dde9ab228d87337cabc82d0949f79f3", "keyword": "kdeHomeFound Kdelibs4Migration::kdeHomeFound Kdelibs4Migration", "text": "Otherwise there is nothing to migrate"}, {"type": "function", "name": "Kdelibs4Migration::locateLocal", "url": "classKdelibs4Migration.html#a2580965205c7d78d5025e5c724d991f6", "keyword": "locateLocal Kdelibs4Migration::locateLocal Kdelibs4Migration", "text": "This API is inspired by KStandardDirs::locateLocal for ease of porting type The type of wanted resource filename A relative filename of the resource"}, {"type": "function", "name": "Kdelibs4Migration::saveLocation", "url": "classKdelibs4Migration.html#a5488049a3c30498ab9aaa449313c2271", "keyword": "saveLocation Kdelibs4Migration::saveLocation Kdelibs4Migration", "text": "type The type of location to return suffix A subdirectory name"}, {"type": "class", "name": "KDirWatch", "url": "classKDirWatch.html", "keyword": "KDirWatch", "text": "Watch directories and files for changes The watched directories or files don t have to exist yet When a watched directory is changed i.e when files therein are created or deleted KDirWatch will emit the signal dirty() When a watched but previously not existing directory gets created KDirWatch will emit the signal created() When a watched directory gets deleted KDirWatch will emit the signal deleted() The directory is still watched for new creation When a watched file is changed i.e attributes changed or written to KDirWatch will emit the signal dirty() Scanning of particular directories or files can be stopped temporarily and restarted The whole class can be stopped and restarted Directories and files can be added/removed from the list in any state The implementation uses the INOTIFY functionality on LINUX Otherwise the FAM service is used when available As a last resort a regular polling for change of modification times is done the polling interval is a global config option DirWatch/PollInterval and DirWatch/NFSPollInterval for NFS mounted directories The choice of implementation can be adjusted by the user with the key DirWatch PreferredMethod Fam|Stat|QFSWatch|inotify self() Sven Radej in 1998"}, {"type": "enum", "name": "KDirWatch::WatchMode", "url": "classKDirWatch.html#a9079cb1c760811c098e8810d3189a2c7", "keyword": "WatchMode KDirWatch::WatchMode KDirWatch", "text": ""}, {"type": "enumvalue", "name": "KDirWatch::WatchDirOnly", "url": "classKDirWatch.html#a9079cb1c760811c098e8810d3189a2c7a40a8e2adc506f2e46bbcbbe47b4e6d1c", "keyword": "WatchDirOnly KDirWatch::WatchDirOnly KDirWatch", "text": "Watch just the specified directory"}, {"type": "enumvalue", "name": "KDirWatch::WatchFiles", "url": "classKDirWatch.html#a9079cb1c760811c098e8810d3189a2c7aa576e33934ffda26a95f6e010c5dc49b", "keyword": "WatchFiles KDirWatch::WatchFiles KDirWatch", "text": "Watch also all files contained by the directory"}, {"type": "enumvalue", "name": "KDirWatch::WatchSubDirs", "url": "classKDirWatch.html#a9079cb1c760811c098e8810d3189a2c7a08f0bc40496d27b9ed78c2d3dd7e12bf", "keyword": "WatchSubDirs KDirWatch::WatchSubDirs KDirWatch", "text": "Watch also all the subdirs contained by the directory"}, {"type": "signal", "name": "KDirWatch::created", "url": "classKDirWatch.html#ad0762720d60895300f0e5204e2757268", "keyword": "created KDirWatch::created KDirWatch", "text": "This is not emitted when creating a file is created in a watched directory path the path of the file or directory"}, {"type": "signal", "name": "KDirWatch::deleted", "url": "classKDirWatch.html#a6c534a2ffeb7aac60cfd85918b2f69eb", "keyword": "deleted KDirWatch::deleted KDirWatch", "text": "The object is still watched for new creation path the path of the file or directory"}, {"type": "signal", "name": "KDirWatch::dirty", "url": "classKDirWatch.html#ab8cd416cda40770a0496b7fe2abff524", "keyword": "dirty KDirWatch::dirty KDirWatch", "text": "For a directory this signal is emitted when files therein are created or deleted For a file this signal is emitted when its size or attributes change When you watch a directory changes in the size or attributes of contained files may or may not trigger this signal to be emitted depending on which backend is used by KDirWatch The new ctime is set before the signal is emitted path the path of the file or directory"}, {"type": "slot", "name": "KDirWatch::setCreated", "url": "classKDirWatch.html#a0ecc3e6ee57a20b4e20d2b25fa73c440", "keyword": "setCreated KDirWatch::setCreated KDirWatch", "text": "path the path of the file or directory"}, {"type": "slot", "name": "KDirWatch::setDeleted", "url": "classKDirWatch.html#a049a456a049f1dc62fc4a2e0ebb29b9c", "keyword": "setDeleted KDirWatch::setDeleted KDirWatch", "text": "path the path of the file or directory"}, {"type": "slot", "name": "KDirWatch::setDirty", "url": "classKDirWatch.html#abd22d2d90d28a1fb465b1f7dc32797dd", "keyword": "setDirty KDirWatch::setDirty KDirWatch", "text": "path the path of the file or directory"}, {"type": "function", "name": "KDirWatch::KDirWatch", "url": "classKDirWatch.html#aa06e50033abe5093f6e5847f11e47d17", "keyword": "KDirWatch KDirWatch::KDirWatch KDirWatch", "text": "Scanning begins immediately when a dir/file watch is added parent the parent of the QObject or 0 for parent-less KDataTools"}, {"type": "function", "name": "KDirWatch::~KDirWatch", "url": "classKDirWatch.html#a99a1c9ee75410346b8b2593684ce9750", "keyword": "KDirWatch::~KDirWatch KDirWatch", "text": "Stops scanning and cleans up"}, {"type": "function", "name": "KDirWatch::addDir", "url": "classKDirWatch.html#a83cbc622c885848603b338ace24ebe0b", "keyword": "addDir KDirWatch::addDir KDirWatch", "text": "The directory does not have to exist When watchModes is set to WatchDirOnly the default the signals dirty() created() deleted() can be emitted all for the watched directory When watchModes is set to WatchFiles all files in the watched directory are watched for changes too Thus the signals dirty() created() deleted() can be emitted When watchModes is set to WatchSubDirs all subdirs are watched using the same flags specified in watchModes symlinks aren t followed If the path points to a symlink to a directory the target directory is watched instead If you want to watch the link use addFile() path the path to watch watchModes watch modes KDirWatch::WatchMode"}, {"type": "function", "name": "KDirWatch::addFile", "url": "classKDirWatch.html#a0a0c54da2139a0bf563ad4216e005ff6", "keyword": "addFile KDirWatch::addFile KDirWatch", "text": "If it s a symlink to a directory it watches the symlink itself file the file to watch"}, {"type": "function", "name": "KDirWatch::contains", "url": "classKDirWatch.html#a416d04d018fa13425b8fefc9709e28a3", "keyword": "contains KDirWatch::contains KDirWatch", "text": "path the directory to check true if the directory is being watched"}, {"type": "function", "name": "KDirWatch::ctime", "url": "classKDirWatch.html#ac5c8d92c25876c02abd91c87ea6bc731", "keyword": "ctime KDirWatch::ctime KDirWatch", "text": "path the file to check the date of the last modification"}, {"type": "function", "name": "KDirWatch::internalMethod", "url": "classKDirWatch.html#a00508b637a4d40cdb376f82fa803a14f", "keyword": "internalMethod KDirWatch::internalMethod KDirWatch", "text": ""}, {"type": "function", "name": "KDirWatch::isStopped", "url": "classKDirWatch.html#ab648b010f779acf1251eecbc58d270e0", "keyword": "isStopped KDirWatch::isStopped KDirWatch", "text": "true when scanning stopped"}, {"type": "function", "name": "KDirWatch::removeDir", "url": "classKDirWatch.html#a601a6452633708e2527e950417c20298", "keyword": "removeDir KDirWatch::removeDir KDirWatch", "text": "If specified path is not in the list this does nothing path the path of the dir to be removed from the list"}, {"type": "function", "name": "KDirWatch::removeFile", "url": "classKDirWatch.html#a4093ed4d2faea496dadc952bf3a346b6", "keyword": "removeFile KDirWatch::removeFile KDirWatch", "text": "If specified path is not in the list this does nothing file the file to be removed from the list"}, {"type": "function", "name": "KDirWatch::restartDirScan", "url": "classKDirWatch.html#aef498d8aa538183540f5251be707118f", "keyword": "restartDirScan KDirWatch::restartDirScan KDirWatch", "text": "It doesn t notify about the changes by emitting a signal The ctime value is reset Call it when you are finished with big operations on that path and when you have refreshed that path path the path to restart scanning true if the path is being watched otherwise false stopDirScanning()"}, {"type": "function", "name": "KDirWatch::startScan", "url": "classKDirWatch.html#a7c18b6a35b96200210d9dece988e6d90", "keyword": "startScan KDirWatch::startScan KDirWatch", "text": "notify If true all changed directories since stopScan() call will be notified for refresh If notify is false all ctimes will be reset except those who are stopped but only if skippedToo is false and changed dirs won t be notified You can start scanning even if the list is empty First call should be called with false or else all directories in list will be notified skippedToo if true the skipped directoris scanning of which was stopped with stopDirScan() will be reset and notified for change Otherwise stopped directories will continue to be unnotified"}, {"type": "function", "name": "KDirWatch::stopDirScan", "url": "classKDirWatch.html#a4f3b2fba0615bd4fb4b8f4eb35680433", "keyword": "stopDirScan KDirWatch::stopDirScan KDirWatch", "text": "The path is not deleted from the internal list it is just skipped Call this function when you perform an huge operation on this directory copy/move big files or many files When finished call restartDirScan(path) path the path to skip true if the path is being watched otherwise false restartDirScanning()"}, {"type": "function", "name": "KDirWatch::stopScan", "url": "classKDirWatch.html#a0eee71d6029b224692a73031cbe720ba", "keyword": "stopScan KDirWatch::stopScan KDirWatch", "text": "The timer is stopped but the list is not cleared"}, {"type": "function", "name": "KDirWatch::exists", "url": "classKDirWatch.html#a820423bac0bda71473e2365b37c921b1", "keyword": "exists KDirWatch::exists KDirWatch", "text": "true if there is an instance of KDirWatch KDirWatch::self()"}, {"type": "function", "name": "KDirWatch::self", "url": "classKDirWatch.html#a599b7ca7a1882b16fb898c5a29853936", "keyword": "self KDirWatch::self KDirWatch", "text": "It is automatically deleted when the application exits However you can create an arbitrary number of KDirWatch instances aside from this one for those you have to take care of memory management This function returns an instance of KDirWatch If there is none it will be created a KDirWatch instance"}, {"type": "function", "name": "KDirWatch::statistics", "url": "classKDirWatch.html#a540fc83c8c0e8f2508f09d83fda8ca09", "keyword": "statistics KDirWatch::statistics KDirWatch", "text": "This checks for consistency too"}, {"type": "class", "name": "KFormat", "url": "classKFormat.html", "keyword": "KFormat", "text": "John Layt Michael Pyne Albert Astals Cid Class for formatting numbers and datetimes 5.0"}, {"type": "enum", "name": "KFormat::BinarySizeUnits", "url": "classKFormat.html#aee876852dde402e4b5340cd215bbb8c0", "keyword": "BinarySizeUnits KFormat::BinarySizeUnits KFormat", "text": "NOTE There are several different units standards 1 SI i.e metric powers-of-10 2 IEC powers-of-2 with specific units KiB MiB etc 3 JEDEC powers-of-2 used for solid state memory sizing which is why you see flash cards labels as e.g 4GB These ab use the metric units Although JEDEC only defines KB MB GB if JEDEC is selected all units will be powers-of-2 with metric prefixes for clarity in the event of sizes larger than 1024 GB Although 3 different dialects are possible this enum only uses metric names since adding all 3 different names of essentially the same unit would be pointless Use BinaryUnitDialect to control the exact units returned BinaryUnitDialect formatByteSize"}, {"type": "enumvalue", "name": "KFormat::DefaultBinaryUnits", "url": "classKFormat.html#aee876852dde402e4b5340cd215bbb8c0a9055316d613e9a662333ca5795bb0d37", "keyword": "DefaultBinaryUnits KFormat::DefaultBinaryUnits KFormat", "text": "Auto-choose a unit such that the result is in the range 0 1000 or 1024"}, {"type": "enumvalue", "name": "KFormat::UnitByte", "url": "classKFormat.html#aee876852dde402e4b5340cd215bbb8c0ad6e10a66b2ef2a953095ce76f120f430", "keyword": "UnitByte KFormat::UnitByte KFormat", "text": "B 1 byte"}, {"type": "enumvalue", "name": "KFormat::UnitKiloByte", "url": "classKFormat.html#aee876852dde402e4b5340cd215bbb8c0a9a2003d9203f390c2a3ed46fde073ea7", "keyword": "UnitKiloByte KFormat::UnitKiloByte KFormat", "text": "KiB/KB/kB 1024/1000 bytes"}, {"type": "enumvalue", "name": "KFormat::UnitMegaByte", "url": "classKFormat.html#aee876852dde402e4b5340cd215bbb8c0ad3a9de09f6d455a075ee22864559f0f2", "keyword": "UnitMegaByte KFormat::UnitMegaByte KFormat", "text": "MiB/MB/MB 2^20/10^06 bytes"}, {"type": "enumvalue", "name": "KFormat::UnitGigaByte", "url": "classKFormat.html#aee876852dde402e4b5340cd215bbb8c0a870f2b0a1594b75d2df2ca998ae63272", "keyword": "UnitGigaByte KFormat::UnitGigaByte KFormat", "text": "GiB/GB/GB 2^30/10^09 bytes"}, {"type": "enumvalue", "name": "KFormat::UnitTeraByte", "url": "classKFormat.html#aee876852dde402e4b5340cd215bbb8c0a3f042cdb791fc94792abc1647d9aab14", "keyword": "UnitTeraByte KFormat::UnitTeraByte KFormat", "text": "TiB/TB/TB 2^40/10^12 bytes"}, {"type": "enumvalue", "name": "KFormat::UnitPetaByte", "url": "classKFormat.html#aee876852dde402e4b5340cd215bbb8c0a01c6ebe8562ad50c0b9571feede985c8", "keyword": "UnitPetaByte KFormat::UnitPetaByte KFormat", "text": "PiB/PB/PB 2^50/10^15 bytes"}, {"type": "enumvalue", "name": "KFormat::UnitExaByte", "url": "classKFormat.html#aee876852dde402e4b5340cd215bbb8c0ae34aaf20ffdc0e5d7f5accb18e6e3c98", "keyword": "UnitExaByte KFormat::UnitExaByte KFormat", "text": "EiB/EB/EB 2^60/10^18 bytes"}, {"type": "enumvalue", "name": "KFormat::UnitZettaByte", "url": "classKFormat.html#aee876852dde402e4b5340cd215bbb8c0a3f11ef85c1e38bfeeece06d04094a276", "keyword": "UnitZettaByte KFormat::UnitZettaByte KFormat", "text": "ZiB/ZB/ZB 2^70/10^21 bytes"}, {"type": "enumvalue", "name": "KFormat::UnitYottaByte", "url": "classKFormat.html#aee876852dde402e4b5340cd215bbb8c0ac1b4893bbf02dd6b467625674f3ff3c8", "keyword": "UnitYottaByte KFormat::UnitYottaByte KFormat", "text": "YiB/YB/YB 2^80/10^24 bytes"}, {"type": "enum", "name": "KFormat::BinaryUnitDialect", "url": "classKFormat.html#ae85925c279bf4d395ce829fe6be3e096", "keyword": "BinaryUnitDialect KFormat::BinaryUnitDialect KFormat", "text": "Note Although JEDEC abuses the metric prefixes and can therefore be confusing it has been used to describe memory sizes for quite some time and programs should therefore use either Default JEDEC or IEC 60027-2 for memory sizes On the other hand network transmission rates are typically in metric so Default Metric or IEC which is unambiguous should be chosen Normally choosing DefaultBinaryDialect is the best option as that uses the user s selection for units If the user has not selected a preference IECBinaryDialect will typically be used BinarySizeUnits formatByteSize"}, {"type": "enumvalue", "name": "KFormat::DefaultBinaryDialect", "url": "classKFormat.html#ae85925c279bf4d395ce829fe6be3e096aac44238951f1b8f767f69ed454413af4", "keyword": "DefaultBinaryDialect KFormat::DefaultBinaryDialect KFormat", "text": "Used if no specific preference"}, {"type": "enumvalue", "name": "KFormat::IECBinaryDialect", "url": "classKFormat.html#ae85925c279bf4d395ce829fe6be3e096ac6e25c78a05814723da705b2f2c01a8d", "keyword": "IECBinaryDialect KFormat::IECBinaryDialect KFormat", "text": "KiB MiB etc 2^ 10*n"}, {"type": "enumvalue", "name": "KFormat::JEDECBinaryDialect", "url": "classKFormat.html#ae85925c279bf4d395ce829fe6be3e096a76dbd321cbf838c588998de85aa9f69e", "keyword": "JEDECBinaryDialect KFormat::JEDECBinaryDialect KFormat", "text": "KB MB etc 2^ 10*n"}, {"type": "enumvalue", "name": "KFormat::MetricBinaryDialect", "url": "classKFormat.html#ae85925c279bf4d395ce829fe6be3e096ae3b74e29561b40500ff23a5368b470f3", "keyword": "MetricBinaryDialect KFormat::MetricBinaryDialect KFormat", "text": "SI Units kB MB etc 10^ 3*n"}, {"type": "enum", "name": "KFormat::DurationFormatOption", "url": "classKFormat.html#a7ed4b40cb08c4537069716281ed62ab4", "keyword": "DurationFormatOption KFormat::DurationFormatOption KFormat", "text": ""}, {"type": "enumvalue", "name": "KFormat::DefaultDuration", "url": "classKFormat.html#a7ed4b40cb08c4537069716281ed62ab4af24d8456b786b6e1fca305bc03539728", "keyword": "DefaultDuration KFormat::DefaultDuration KFormat", "text": "Default formatting in localized 1 23 45 format"}, {"type": "enumvalue", "name": "KFormat::InitialDuration", "url": "classKFormat.html#a7ed4b40cb08c4537069716281ed62ab4a53fe208011e3d4d999e42a9431e31716", "keyword": "InitialDuration KFormat::InitialDuration KFormat", "text": "Default formatting in localized 1h23m45s format"}, {"type": "enumvalue", "name": "KFormat::ShowMilliseconds", "url": "classKFormat.html#a7ed4b40cb08c4537069716281ed62ab4a0ddbb85bc17d53a017952643e5b597c5", "keyword": "ShowMilliseconds KFormat::ShowMilliseconds KFormat", "text": "Include milliseconds in format e.g 1 23 45.678"}, {"type": "enumvalue", "name": "KFormat::HideSeconds", "url": "classKFormat.html#a7ed4b40cb08c4537069716281ed62ab4a1709522424c3e950b9be762e6f0661d2", "keyword": "HideSeconds KFormat::HideSeconds KFormat", "text": "Hide the seconds e.g 1 23 or 1h23m overrides ShowMilliseconds"}, {"type": "enumvalue", "name": "KFormat::FoldHours", "url": "classKFormat.html#a7ed4b40cb08c4537069716281ed62ab4a1140119181e55510e87e1d583532480e", "keyword": "FoldHours KFormat::FoldHours KFormat", "text": "Fold the hours into the minutes e.g 83 45 or 83m45s overrides HideSeconds"}, {"type": "function", "name": "KFormat::KFormat", "url": "classKFormat.html#a8e92e080a1dbc4a53c9d6fa9228f6f4e", "keyword": "KFormat KFormat::KFormat KFormat", "text": "locale the locale to use defaults to the system locale"}, {"type": "function", "name": "KFormat::KFormat", "url": "classKFormat.html#ae95971545a6e6f145a15c884441091f0", "keyword": "KFormat KFormat::KFormat KFormat", "text": ""}, {"type": "function", "name": "KFormat::~KFormat", "url": "classKFormat.html#a0d5342a622cdac36647b8bfcc03169fd", "keyword": "KFormat::~KFormat KFormat", "text": ""}, {"type": "function", "name": "KFormat::formatByteSize", "url": "classKFormat.html#a00817e8329403436e9b3964a9fab7342", "keyword": "formatByteSize KFormat::formatByteSize KFormat", "text": "Example formatByteSize(1000, unit, KFormat::UnitKiloByte) returns for KFormat::MetricBinaryDialect for KFormat::IECBinaryDialect for KFormat::JEDECBinaryDialect size size in bytes precision number of places after the decimal point to use KDE uses 1 by default so when in doubt use 1 dialect binary unit standard to use Use DefaultBinaryDialect to use the localized user selection unless you need to use a specific unit type such as displaying a flash memory size in JEDEC specificUnit specific unit size to use in result Use DefaultBinaryUnits to automatically select a unit that will return a sanely-sized number converted size as a translated string including the units E.g JEDEC Metric BinarySizeUnits BinaryUnitDialect"}, {"type": "function", "name": "KFormat::formatDecimalDuration", "url": "classKFormat.html#a267084edc309ed752e973dbe797fe59e", "keyword": "formatDecimalDuration KFormat::formatDecimalDuration KFormat", "text": "e.g given formatDuration(60000) returns msecs Time duration in milliseconds decimalPlaces Deciaml places to round off to defaults to 2 converted duration as a string e.g"}, {"type": "function", "name": "KFormat::formatDuration", "url": "classKFormat.html#a536f9520ce8de6ca6e2468db9fff5c29", "keyword": "formatDuration KFormat::formatDuration KFormat", "text": "1 23 45 msecs Time duration in milliseconds options options to use in the duration format converted duration as a string e.g"}, {"type": "function", "name": "KFormat::formatRelativeDate", "url": "classKFormat.html#acfe8eb3d75a769ae77fc41a55ebba4c6", "keyword": "formatRelativeDate KFormat::formatRelativeDate KFormat", "text": "If the date falls within one week before or after the current date then a relative date string will be returned such as Yesterday Today Tomorrow Last Tuesday Next Wednesday If the date falls outside this period then the format is used date the date to be formatted format the date format to use the date as a string"}, {"type": "function", "name": "KFormat::formatRelativeDateTime", "url": "classKFormat.html#a022a6ad216787a128127efeac7b36126", "keyword": "formatRelativeDateTime KFormat::formatRelativeDateTime KFormat", "text": "If the dateTime falls within one week before or after the current date then a relative date string will be returned such as Yesterday 3 00pm Today 3 00pm Tomorrow 3 00pm Last Tuesday 3 00pm Next Wednesday 3 00pm If the dateTime falls outside this period then the format is used dateTime the date to be formatted format the date format to use the date as a string"}, {"type": "function", "name": "KFormat::formatSpelloutDuration", "url": "classKFormat.html#a4e030ae190e6bd3320eb126ecf0558bc", "keyword": "formatSpelloutDuration KFormat::formatSpelloutDuration KFormat", "text": "e.g given formatSpelloutDuration(60001) returns given formatSpelloutDuration(62005) returns given formatSpelloutDuration(90060000) returns msecs Time duration in milliseconds converted duration as a string Units not interesting to the user for example seconds or minutes when the first unit is day are not returned because they are irrelevant The same applies for seconds when the first unit is hour"}, {"type": "struct", "name": "KGroupId", "url": "structKGroupId.html", "keyword": "KGroupId", "text": "KUserOrGroupId 5.0 Alex Richardson"}, {"type": "function", "name": "KGroupId::KGroupId", "url": "structKGroupId.html#ab07795a0df4a30284925b8e8c08d3eef", "keyword": "KGroupId KGroupId::KGroupId KGroupId", "text": ""}, {"type": "function", "name": "KGroupId::KGroupId", "url": "structKGroupId.html#ade53fd419ada47d2e39ed2b6692dae2b", "keyword": "KGroupId KGroupId::KGroupId KGroupId", "text": ""}, {"type": "function", "name": "KUserOrGroupId< K_GID >::isValid", "url": "structKUserOrGroupId.html#a0900d0ecc1d90504c65e8ff374e45dbb", "keyword": "isValid KUserOrGroupId< K_GID >::isValid KUserOrGroupId< K_GID > isValid KUserOrGroupId< K_UID >::isValid KUserOrGroupId< K_UID > isValid KUserOrGroupId::isValid KUserOrGroupId< T >", "text": "true if this object references a valid user/group ID If this returns true it doesn t necessarily mean that the referenced user/group exists it only checks whether this value could be a valid user/group ID"}, {"type": "function", "name": "KUserOrGroupId< K_GID >::nativeId", "url": "structKUserOrGroupId.html#a46e5f34b7b956f35e46ef11d63d230f9", "keyword": "nativeId KUserOrGroupId< K_GID >::nativeId KUserOrGroupId< K_GID > nativeId KUserOrGroupId< K_UID >::nativeId KUserOrGroupId< K_UID > nativeId KUserOrGroupId::nativeId KUserOrGroupId< T >", "text": "A user/group ID that can be used in operating system specific functions On Windows the returned pointer will be freed once the last KUserOrGroupId referencing this user/group ID is deleted Make sure that the KUserOrGroupId object remains valid as long as the native pointer is needed"}, {"type": "function", "name": "KUserOrGroupId< K_GID >::operator!=", "url": "structKUserOrGroupId.html#ae685e2ce3d90ad70ddbc5b4d78037f2d", "keyword": "operator!= KUserOrGroupId< K_GID >::operator!= KUserOrGroupId< K_GID > operator!= KUserOrGroupId< K_UID >::operator!= KUserOrGroupId< K_UID > operator!= KUserOrGroupId::operator!= KUserOrGroupId< T >", "text": "whether this KUserOrGroupId is not equal to other"}, {"type": "function", "name": "KUserOrGroupId< K_GID >::operator==", "url": "structKUserOrGroupId.html#a03c5d681137077621e865412de441b7b", "keyword": "operator== KUserOrGroupId< K_GID >::operator== KUserOrGroupId< K_GID > operator== KUserOrGroupId< K_UID >::operator== KUserOrGroupId< K_UID > operator== KUserOrGroupId::operator== KUserOrGroupId< T >", "text": "whether this KUserOrGroupId is equal to other"}, {"type": "function", "name": "KUserOrGroupId< K_GID >::toString", "url": "structKUserOrGroupId.html#a640708ebf61e7593d770cc96022c5355", "keyword": "toString KUserOrGroupId< K_GID >::toString KUserOrGroupId< K_GID > toString KUserOrGroupId< K_UID >::toString KUserOrGroupId< K_UID > toString KUserOrGroupId::toString KUserOrGroupId< T >", "text": "A string representation of this user ID not the name of the user On UNIX this is a simple integer e.g for root On Windows this is a string like e.g for the Administrators group"}, {"type": "function", "name": "KGroupId::currentEffectiveGroupId", "url": "structKGroupId.html#afd0fe1fc406ca81bd528851c1697f9c5", "keyword": "currentEffectiveGroupId KGroupId::currentEffectiveGroupId KGroupId", "text": "a KGroupId for the current effective user This is like on UNIX Windows does not have setuid binaries so on Windows this will always be the same as KGroupId::currentGroupId()"}, {"type": "function", "name": "KGroupId::currentGroupId", "url": "structKGroupId.html#aed01298767978d1ce897557a4af132c3", "keyword": "currentGroupId KGroupId::currentGroupId KGroupId", "text": "a KGroupId for the current user This is like on UNIX"}, {"type": "function", "name": "KGroupId::fromName", "url": "structKGroupId.html#a35eb8075c5b28511b8975bbfd9978f4e", "keyword": "fromName KGroupId::fromName KGroupId", "text": "A KGroupId for the user with name name or an invalid KGroupId if no user with this name was found on the system"}, {"type": "function", "name": "KUserOrGroupId< K_GID >::KUserOrGroupId", "url": "structKUserOrGroupId.html#aed8ba6bf8a546c528348e1b57a3af951", "keyword": "KUserOrGroupId KUserOrGroupId< K_GID >::KUserOrGroupId KUserOrGroupId< K_GID > KUserOrGroupId KUserOrGroupId< K_UID >::KUserOrGroupId KUserOrGroupId< K_UID > KUserOrGroupId KUserOrGroupId::KUserOrGroupId KUserOrGroupId< T >", "text": ""}, {"type": "function", "name": "KUserOrGroupId< K_GID >::KUserOrGroupId", "url": "structKUserOrGroupId.html#aa72f5689b5e558801251325e691c3b8e", "keyword": "KUserOrGroupId KUserOrGroupId< K_GID >::KUserOrGroupId KUserOrGroupId< K_GID > KUserOrGroupId KUserOrGroupId< K_UID >::KUserOrGroupId KUserOrGroupId< K_UID > KUserOrGroupId KUserOrGroupId::KUserOrGroupId KUserOrGroupId< T >", "text": "On windows this will not take ownership over the passed SID a copy will be created instead"}, {"type": "function", "name": "KUserOrGroupId< K_GID >::KUserOrGroupId", "url": "structKUserOrGroupId.html#ae925d5c1f5886665d609f2a916166e24", "keyword": "KUserOrGroupId KUserOrGroupId< K_GID >::KUserOrGroupId KUserOrGroupId< K_GID > KUserOrGroupId KUserOrGroupId< K_UID >::KUserOrGroupId KUserOrGroupId< K_UID > KUserOrGroupId KUserOrGroupId::KUserOrGroupId KUserOrGroupId< T >", "text": "This is very fast objects can be passed by value"}, {"type": "class", "name": "KJob", "url": "classKJob.html", "keyword": "KJob", "text": "For all jobs created in an application the code looks like other connects specific to the job And handleResult is usually at least With the synchronous interface the code looks like Subclasses must implement start() which should trigger the execution of the job although the work should be done asynchronously errorString() should also be reimplemented by any subclasses that introduce new error codes KJob and its subclasses are meant to be used in a fire-and-forget way Jobs will delete themselves when they finish using deleteLater() although this behaviour can be changed so a job instance will disappear after the next event loop run"}, {"type": "class", "name": "KJobTrackerInterface", "url": "classKJobTrackerInterface.html", "keyword": "KJobTrackerInterface", "text": ""}, {"type": "slot", "name": "KJobTrackerInterface::registerJob", "url": "classKJobTrackerInterface.html#a02be1fe828ead6c57601272950c1cd4d", "keyword": "registerJob KJobTrackerInterface::registerJob KJobTrackerInterface", "text": "job the job to register"}, {"type": "slot", "name": "KJobTrackerInterface::unregisterJob", "url": "classKJobTrackerInterface.html#a9f944a5327b7ec929011e5bc96b9b8c6", "keyword": "unregisterJob KJobTrackerInterface::unregisterJob KJobTrackerInterface", "text": "job the job to unregister"}, {"type": "function", "name": "KJobTrackerInterface::KJobTrackerInterface", "url": "classKJobTrackerInterface.html#a61a43771e17bdfdedf4a209344a840d5", "keyword": "KJobTrackerInterface KJobTrackerInterface::KJobTrackerInterface KJobTrackerInterface", "text": "parent the parent object"}, {"type": "function", "name": "KJobTrackerInterface::~KJobTrackerInterface", "url": "classKJobTrackerInterface.html#a8d728d151d6410e383b24c5e7dfbebaa", "keyword": "KJobTrackerInterface::~KJobTrackerInterface KJobTrackerInterface", "text": ""}, {"type": "slot", "name": "KJobTrackerInterface::description", "url": "classKJobTrackerInterface.html#ae707c5705de5fb48a081a59af767342a", "keyword": "description KJobTrackerInterface::description KJobTrackerInterface", "text": "A description has a title and two optional fields which can be used to complete the description Examples of titles are etc The fields of the description can be with an URL and with an URL for a description job the job that emitted this signal title the general description of the job field1 first field localized name and value field2 second field localized name and value"}, {"type": "slot", "name": "KJobTrackerInterface::finished", "url": "classKJobTrackerInterface.html#a4695d9dd038002e4a2e70ffbea048c02", "keyword": "finished KJobTrackerInterface::finished KJobTrackerInterface", "text": "It is used to notify that the job is terminated and that progress UI if any can be hidden job the job that emitted this signal"}, {"type": "slot", "name": "KJobTrackerInterface::infoMessage", "url": "classKJobTrackerInterface.html#a83a2749f6a0b599ce8461c932eafbdf7", "keyword": "infoMessage KJobTrackerInterface::infoMessage KJobTrackerInterface", "text": "Examples of message are etc job the job that emitted this signal plain the info message rich the rich text version of the message or QString() is none is available"}, {"type": "slot", "name": "KJobTrackerInterface::percent", "url": "classKJobTrackerInterface.html#a7a47dddce842359b084dd72617d2e7ce", "keyword": "percent KJobTrackerInterface::percent KJobTrackerInterface", "text": "Note that this is not called for finished jobs job the job that emitted this signal percent the percentage"}, {"type": "slot", "name": "KJobTrackerInterface::processedAmount", "url": "classKJobTrackerInterface.html#ac71054d631ef917edfec348036c54da8", "keyword": "processedAmount KJobTrackerInterface::processedAmount KJobTrackerInterface", "text": "The unit of this amount is provided too It can be called several times for a given job if the job manages several different units job the job that emitted this signal unit the unit of the processed amount amount the processed amount"}, {"type": "slot", "name": "KJobTrackerInterface::resumed", "url": "classKJobTrackerInterface.html#a714d9455c56e1a3bca4ce09e4851c972", "keyword": "resumed KJobTrackerInterface::resumed KJobTrackerInterface", "text": "job the job that emitted this signal"}, {"type": "slot", "name": "KJobTrackerInterface::speed", "url": "classKJobTrackerInterface.html#a0a65cf36946ba0465ee9654698c3ba4d", "keyword": "speed KJobTrackerInterface::speed KJobTrackerInterface", "text": "job the job that emitted this signal value the current speed of the job"}, {"type": "slot", "name": "KJobTrackerInterface::suspended", "url": "classKJobTrackerInterface.html#a8111af0befa29c993d9ad8dc600fcc9e", "keyword": "suspended KJobTrackerInterface::suspended KJobTrackerInterface", "text": "job the job that emitted this signal"}, {"type": "slot", "name": "KJobTrackerInterface::totalAmount", "url": "classKJobTrackerInterface.html#a6accf2294a34bee0a04f2f99936fbf4d", "keyword": "totalAmount KJobTrackerInterface::totalAmount KJobTrackerInterface", "text": "The unit of this amount is provided too It can be called several times for a given job if the job manages several different units job the job that emitted this signal unit the unit of the total amount amount the total amount"}, {"type": "slot", "name": "KJobTrackerInterface::warning", "url": "classKJobTrackerInterface.html#ac41710553e93757f552e742835b09fa3", "keyword": "warning KJobTrackerInterface::warning KJobTrackerInterface", "text": "job the job that emitted this signal plain the warning message rich the rich text version of the message or QString() is none is available"}, {"type": "class", "name": "KJobUiDelegate", "url": "classKJobUiDelegate.html", "keyword": "KJobUiDelegate", "text": "A UI delegate is responsible for the events of a job and provides a UI for them an error message box or warning etc KJob"}, {"type": "function", "name": "KJobUiDelegate::KJobUiDelegate", "url": "classKJobUiDelegate.html#a4306dee13586b51246360b6743cb1d49", "keyword": "KJobUiDelegate KJobUiDelegate::KJobUiDelegate KJobUiDelegate", "text": ""}, {"type": "function", "name": "KJobUiDelegate::~KJobUiDelegate", "url": "classKJobUiDelegate.html#a5388c4b8485af61ec0d4cc89a2db4ae0", "keyword": "KJobUiDelegate::~KJobUiDelegate KJobUiDelegate", "text": ""}, {"type": "function", "name": "KJobUiDelegate::isAutoErrorHandlingEnabled", "url": "classKJobUiDelegate.html#a108dc52ef887f03372153694f480fbf5", "keyword": "isAutoErrorHandlingEnabled KJobUiDelegate::isAutoErrorHandlingEnabled KJobUiDelegate", "text": "See also setAutoErrorHandlingEnabled true if automatic error handling is enabled setAutoErrorHandlingEnabled()"}, {"type": "function", "name": "KJobUiDelegate::isAutoWarningHandlingEnabled", "url": "classKJobUiDelegate.html#a28577bd2834e18d6b0ea74ec7ef98234", "keyword": "isAutoWarningHandlingEnabled KJobUiDelegate::isAutoWarningHandlingEnabled KJobUiDelegate", "text": "See also setAutoWarningHandlingEnabled true if automatic warning handling is enabled setAutoWarningHandlingEnabled()"}, {"type": "function", "name": "KJobUiDelegate::setAutoErrorHandlingEnabled", "url": "classKJobUiDelegate.html#a90dbe3a0af9b695dc23cfc5940bca317", "keyword": "setAutoErrorHandlingEnabled KJobUiDelegate::setAutoErrorHandlingEnabled KJobUiDelegate", "text": "When automatic error handling is enabled and an error occurs then showErrorDialog() is called right before the emission of the result signal The default is false See also isAutoErrorHandlingEnabled showErrorDialog enable enable or disable automatic error handling isAutoErrorHandlingEnabled()"}, {"type": "function", "name": "KJobUiDelegate::setAutoWarningHandlingEnabled", "url": "classKJobUiDelegate.html#aeb10435ca89ed0bc7f435eb95fe21c73", "keyword": "setAutoWarningHandlingEnabled KJobUiDelegate::setAutoWarningHandlingEnabled KJobUiDelegate", "text": "When automatic warning handling is enabled and an error occurs then a message box is displayed with the warning message The default is true See also isAutoWarningHandlingEnabled showErrorDialog enable enable or disable automatic warning handling isAutoWarningHandlingEnabled()"}, {"type": "function", "name": "KJobUiDelegate::showErrorMessage", "url": "classKJobUiDelegate.html#a874130e3ab8a80f487984da85ce9ee26", "keyword": "showErrorMessage KJobUiDelegate::showErrorMessage KJobUiDelegate", "text": "Only call if error is not 0 and only in the slot connected to result"}, {"type": "function", "name": "KJobUiDelegate::job", "url": "classKJobUiDelegate.html#a8e5576e6c0ba9c2a7cd036f226f43947", "keyword": "job KJobUiDelegate::job KJobUiDelegate", "text": "current job this UI delegate is attached to or 0 if this UI delegate is not tracking any job"}, {"type": "function", "name": "KJobUiDelegate::setJob", "url": "classKJobUiDelegate.html#acfd5c786241eb31ad1562f920c21d8d9", "keyword": "setJob KJobUiDelegate::setJob KJobUiDelegate", "text": "Once attached it ll track the job events true if the job we re correctly attached to the job false otherwise"}, {"type": "class", "name": "KMacroExpanderBase", "url": "classKMacroExpanderBase.html", "keyword": "KMacroExpanderBase", "text": "Oswald Buddenhagen"}, {"type": "function", "name": "KMacroExpanderBase::expandEscapedMacro", "url": "classKMacroExpanderBase.html#ab73e880b0dcf06da05ad6ee8d7ec98ba", "keyword": "expandEscapedMacro KMacroExpanderBase::expandEscapedMacro KMacroExpanderBase", "text": "It should determine whether the string starting at pos witin str is a valid macro and return the substitution value for it if so str the input string pos the offset within str Note that this is the position of the occurrence of the escape char ret return value the string to substitute for the macro If greater than zero the number of chars at pos in str to substitute with ret i.e a valid macro was found If less than zero subtract this value from pos to skip a macro i.e substitute it with itself If zero scanning continues as if no escape char was encountered at all"}, {"type": "function", "name": "KMacroExpanderBase::expandPlainMacro", "url": "classKMacroExpanderBase.html#a796748175343a35c28a4ca898639e590", "keyword": "expandPlainMacro KMacroExpanderBase::expandPlainMacro KMacroExpanderBase", "text": "It should determine whether the string starting at pos within str is a valid macro and return the substitution value for it if so str the input string pos the offset within str ret return value the string to substitute for the macro If greater than zero the number of chars at pos in str to substitute with ret i.e a valid macro was found If less than zero subtract this value from pos to skip a macro i.e substitute it with itself If zero no macro starts at pos"}, {"type": "class", "name": "KMessageHandler", "url": "classKMessageHandler.html", "keyword": "KMessageHandler", "text": "This class define how KMessage display a message Reimplement the virtual methods then set your custom KMessageHandler using KMessage::setMessageHandler() Micha\u00ebl Larouche"}, {"type": "function", "name": "KMessageHandler::message", "url": "classKMessageHandler.html#af43e08e9cdc0468e5fa5c702616e6705", "keyword": "message KMessageHandler::message KMessageHandler", "text": "A long message span on multiple lines and can have a caption type Currrent type of message See MessageType enum text Long message to be displayed caption Caption to be used This is optional"}, {"type": "class", "name": "KPluginFactory", "url": "classKPluginFactory.html", "keyword": "KPluginFactory", "text": "Qt plugins provide a singleton object but a common pattern is for plugins to generate as many objects of a particular type as the application requires By using KPluginFactory you can avoid implementing the factory pattern yourself KPluginFactory also allows plugins to provide multiple different object types indexed by keywords The objects created by KPluginFactory must inherit QObject and must have a standard constructor pattern if the object is a KPart::Part it must be of the form if it is a QWidget it must be of the form otherwise it must be of the form You should typically use either K_PLUGIN_FACTORY() or K_PLUGIN_FACTORY_WITH_JSON() in your plugin code to create the factory The typical pattern is If you want to write a custom KPluginFactory not using the standard macro(s) you can reimplement the create(const char *iface, QWidget *parentWidget, QObject *parent, const QVariantList &args, const QString &keyword) method Example If you want to load a library use KPluginLoader The application that wants to instantiate plugin classes can do the following Matthias Kretz Bernhard Loos"}, {"type": "function", "name": "KPluginFactory::KPluginFactory", "url": "classKPluginFactory.html#acc33691452a9b339995a4e3d0d9e57b6", "keyword": "KPluginFactory KPluginFactory::KPluginFactory KPluginFactory", "text": ""}, {"type": "function", "name": "KPluginFactory::~KPluginFactory", "url": "classKPluginFactory.html#a046c54b216cc2f661dad59484fa6e3d9", "keyword": "KPluginFactory::~KPluginFactory KPluginFactory", "text": ""}, {"type": "function", "name": "KPluginFactory::create", "url": "classKPluginFactory.html#a93e83b1985db058c44e67515bdcae1f6", "keyword": "create KPluginFactory::create KPluginFactory", "text": "It will try to create an object which inherits T If it has multiple choices you will get a fatal error kFatal() so be careful to request a unique interface or use keywords T The interface for which an object should be created The object will inherit T parent The parent of the object If parent is a widget type it will also passed to the parentWidget argument of the CreateInstanceFunction for the object args Additional arguments which will be passed to the object A pointer to the created object is returned or 0 if an error occurred"}, {"type": "function", "name": "KPluginFactory::create", "url": "classKPluginFactory.html#a6f02c20aae75e57396b63d5c8cd2800a", "keyword": "create KPluginFactory::create KPluginFactory", "text": "It will try to create an object which inherits T and was registered with keyword T The interface for which an object should be created The object will inherit T keyword The keyword of the object parent The parent of the object If parent is a widget type it will also passed to the parentWidget argument of the CreateInstanceFunction for the object args Additional arguments which will be passed to the object A pointer to the created object is returned or 0 if an error occurred"}, {"type": "function", "name": "KPluginFactory::create", "url": "classKPluginFactory.html#a79cfca4a6d243975590b90a3c339afff", "keyword": "create KPluginFactory::create KPluginFactory", "text": "It will try to create an object which inherits T and was registered with keyword This overload has an additional parentWidget argument which is used by some plugins e.g Parts T The interface for which an object should be created The object will inherit T parentWidget An additional parent widget parent The parent of the object If parent is a widget type it will also passed to the parentWidget argument of the CreateInstanceFunction for the object keyword The keyword of the object args Additional arguments which will be passed to the object A pointer to the created object is returned or 0 if an error occurred"}, {"type": "function", "name": "KPluginFactory::create", "url": "classKPluginFactory.html#a80ef48d75bfcd6e40a026730d3a6df7c", "keyword": "create KPluginFactory::create KPluginFactory", "text": ""}, {"type": "function", "name": "KPluginFactory::create", "url": "classKPluginFactory.html#aafd3c3cacb945b22f7ea10b1729cfa33", "keyword": "create KPluginFactory::create KPluginFactory", "text": ""}, {"type": "function", "name": "KPluginFactory::stringListToVariantList", "url": "classKPluginFactory.html#a2a3cdb4564dcb954d006729996d0b06f", "keyword": "stringListToVariantList KPluginFactory::stringListToVariantList KPluginFactory", "text": "Converts a QStringList to a QVariantList"}, {"type": "function", "name": "KPluginFactory::variantListToStringList", "url": "classKPluginFactory.html#a29fb09e2bf29d15fb43d8daa0c6710d6", "keyword": "variantListToStringList KPluginFactory::variantListToStringList KPluginFactory", "text": "Converts a QVariantList of strings to a QStringList"}, {"type": "typedef", "name": "KPluginFactory::CreateInstanceFunction", "url": "classKPluginFactory.html#adafb2ea531979d68792ca9ff3e8873b6", "keyword": "CreateInstanceFunction KPluginFactory::CreateInstanceFunction KPluginFactory", "text": ""}, {"type": "function", "name": "KPluginFactory::create", "url": "classKPluginFactory.html#a9ce2bc6a252ff199aea2275c190cfb1d", "keyword": "create KPluginFactory::create KPluginFactory", "text": "You may reimplement it to provide a very flexible factory This is especially useful to provide generic factories for plugins implemeted using a scripting language iface The staticMetaObject::className() string identifying the plugin interface that was requested E.g for KCModule plugins this string will be parentWidget Only used if the requested plugin is a KPart parent The parent object for the plugin object args A plugin specific list of arbitrary arguments keyword A string that uniquely identifies the plugin If a KService is used this keyword is read from the X-KDE-PluginKeyword entry in the desktop file"}, {"type": "function", "name": "KPluginFactory::createObject", "url": "classKPluginFactory.html#ab004f59d313eee1b9479218347336d12", "keyword": "createObject KPluginFactory::createObject KPluginFactory", "text": ""}, {"type": "function", "name": "KPluginFactory::createPartObject", "url": "classKPluginFactory.html#ac31c9c8828e25de346352ed8a7644bb3", "keyword": "createPartObject KPluginFactory::createPartObject KPluginFactory", "text": ""}, {"type": "function", "name": "KPluginFactory::registerPlugin", "url": "classKPluginFactory.html#a1c10bfd9eee6fce88bd60c9bd58ced96", "keyword": "registerPlugin KPluginFactory::registerPlugin KPluginFactory", "text": "Call this function from the constructor of the KPluginFactory subclass to make the create function able to instantiate the plugin when asked for an interface the plugin implements You can register as many plugin classes as you want as long as either the plugin interface or the keyword makes it unique E.g it is possible to register a KCModule and a KParts::Part without having to specify keywords since their interfaces differ T the name of the plugin class keyword An optional keyword as unique identifier for the plugin This allows you to put more than one plugin with the same interface into the same library using the same factory X-KDE-PluginKeyword is a convenient way to specify the keyword in a desktop file instanceFunction A function pointer to a function that creates an instance of the plugin The default function that will be used depends on the type of interface If the interface inherits from KParts::Part the function will call QWidget the function will call else the function will call"}, {"type": "related", "name": "KPluginFactory::K_PLUGIN_FACTORY", "url": "classKPluginFactory.html#a8acc809ba542c82fa8f1941cce24170c", "keyword": "K_PLUGIN_FACTORY KPluginFactory::K_PLUGIN_FACTORY KPluginFactory", "text": "Create a KPluginFactory subclass and export it as the root plugin object name The name of the KPluginFactory derived class pluginRegistrations Code to be inserted into the constructor of the class Usually a series of registerPlugin() calls Example If you want to compile a json file into the plugin use K_PLUGIN_FACTORY_WITH_JSON K_PLUGIN_FACTORY_WITH_JSON K_PLUGIN_FACTORY_DECLARATION K_PLUGIN_FACTORY_DEFINITION"}, {"type": "related", "name": "KPluginFactory::K_PLUGIN_FACTORY_DECLARATION", "url": "classKPluginFactory.html#a156f26603093d0c9ef0c9694b80e9da2", "keyword": "K_PLUGIN_FACTORY_DECLARATION KPluginFactory::K_PLUGIN_FACTORY_DECLARATION KPluginFactory", "text": "K_PLUGIN_FACTORY_DECLARATION declares the KPluginFactory subclass This macro can be used in a header file name The name of the KPluginFactory derived class K_PLUGIN_FACTORY K_PLUGIN_FACTORY_DEFINITION"}, {"type": "related", "name": "KPluginFactory::K_PLUGIN_FACTORY_DEFINITION", "url": "classKPluginFactory.html#a715d03196945b4396b6171f7deec6b84", "keyword": "K_PLUGIN_FACTORY_DEFINITION KPluginFactory::K_PLUGIN_FACTORY_DEFINITION KPluginFactory", "text": "K_PLUGIN_FACTORY_DEFINITION defines the KPluginFactory subclass This macro can not be used in a header file name The name of the KPluginFactory derived class pluginRegistrations Code to be inserted into the constructor of the class Usually a series of registerPlugin() calls K_PLUGIN_FACTORY K_PLUGIN_FACTORY_DECLARATION"}, {"type": "related", "name": "KPluginFactory::K_PLUGIN_FACTORY_WITH_JSON", "url": "classKPluginFactory.html#aa8bc10b3b6a9d95d2573b8f5e9d83708", "keyword": "K_PLUGIN_FACTORY_WITH_JSON KPluginFactory::K_PLUGIN_FACTORY_WITH_JSON KPluginFactory", "text": "Create a KPluginFactory subclass and export it as the root plugin object with JSON metadata This macro does the same as K_PLUGIN_FACTORY but adds a JSON file as plugin metadata See Q_PLUGIN_METADATA() for more information name The name of the KPluginFactory derived class pluginRegistrations Code to be inserted into the constructor of the class Usually a series of registerPlugin() calls jsonFile Name of the json file to be compiled into the plugin as metadata Example K_PLUGIN_FACTORY K_PLUGIN_FACTORY_DECLARATION K_PLUGIN_FACTORY_DEFINITION 5.0"}, {"type": "struct", "name": "KPluginFactory::InheritanceChecker", "url": "structKPluginFactory_1_1InheritanceChecker.html", "keyword": "InheritanceChecker", "text": "You can inherit it if you want to add new classes and still keep support for the old ones"}, {"type": "class", "name": "KPluginLoader", "url": "classKPluginLoader.html", "keyword": "KPluginLoader", "text": "Note that the factory() is a typesafe convenience method that just wraps a qobject_cast on the result of QPluginLoader::instance() Therefore if you do not need the plugin version feature you can and should just use QPluginLoader instead Unlike QPluginLoader it is not possible to re-use KPluginLoader for more than one plugin it provides no setFileName method The same notes and caveats that apply to QPluginLoader also apply to KPluginLoader Sample code KPluginFactory Bernhard Loos"}, {"type": "function", "name": "KPluginLoader::KPluginLoader", "url": "classKPluginLoader.html#a984e2bed40283b4be38729ceedc8da26", "keyword": "KPluginLoader KPluginLoader::KPluginLoader KPluginLoader", "text": "This should be the name of the plugin object file without any suffix like so or dll Plugin object files should not have a lib prefix fileName() will be empty if the plugin could not be found plugin The name of the plugin parent A parent object"}, {"type": "function", "name": "KPluginLoader::KPluginLoader", "url": "classKPluginLoader.html#a0c0177a006b446dd48a8ff44d4b8ea1f", "keyword": "KPluginLoader KPluginLoader::KPluginLoader KPluginLoader", "text": "This constructor behaves exactly the same as KPluginLoader(const QString&,QObject*) It allows any class that can be cast to KPluginName such as KService to be passed to KPluginLoader name The name of the plugin parent A parent object"}, {"type": "function", "name": "KPluginLoader::~KPluginLoader", "url": "classKPluginLoader.html#a9218a209e48bad8a2674c1853c0776ce", "keyword": "KPluginLoader::~KPluginLoader KPluginLoader", "text": "Unless unload() was called explicitly the plugin stays in memory until the application terminates"}, {"type": "function", "name": "KPluginLoader::errorString", "url": "classKPluginLoader.html#a5946adcb4875ff4559ce45109276c5ac", "keyword": "errorString KPluginLoader::errorString KPluginLoader", "text": "The description of the last error QPluginLoader::errorString()"}, {"type": "function", "name": "KPluginLoader::factory", "url": "classKPluginLoader.html#a606ba35fc203e419e9318dbb4ee48738", "keyword": "factory KPluginLoader::factory KPluginLoader", "text": "This is typically created by one of the KPluginFactory macros Internally this uses QPluginLoader::instance() and the same behaviours apply The factory of the plugin or 0 on error"}, {"type": "function", "name": "KPluginLoader::fileName", "url": "classKPluginLoader.html#aea0ae91b58e26608d8c530f30a4cb33a", "keyword": "fileName KPluginLoader::fileName KPluginLoader", "text": "This will be the full path of the plugin if it was found and empty if it could not be found The full path of the plugin or the null string if it could not be found QPluginLoader::fileName() pluginName()"}, {"type": "function", "name": "KPluginLoader::instance", "url": "classKPluginLoader.html#a8e66938a21d1f6da57245b4ba283a39e", "keyword": "instance KPluginLoader::instance KPluginLoader", "text": "The plugin will be loaded if necessary If the plugin used one of the KPluginFactory macros you should use factory() instead The plugin s root object QPluginLoader::instance()"}, {"type": "function", "name": "KPluginLoader::isLoaded", "url": "classKPluginLoader.html#a1becb866362f7afcf32d31f1193b699a", "keyword": "isLoaded KPluginLoader::isLoaded KPluginLoader", "text": "True if the plugin is loaded false otherwise QPluginLoader::isLoaded()"}, {"type": "function", "name": "KPluginLoader::load", "url": "classKPluginLoader.html#a5fc3ca8f68bb520989cd3eed78c4bc47", "keyword": "load KPluginLoader::load KPluginLoader", "text": "It is safe to call this multiple times if the plugin was already loaded it will just return true Methods that require the plugin to be loaded will load it as necessary anyway so you do not normally need to call this method True if the plugin was loaded successfully false otherwise QPluginLoader::load()"}, {"type": "function", "name": "KPluginLoader::loadHints", "url": "classKPluginLoader.html#abeeac0beb222cd9882e3e049bc2e9a2d", "keyword": "loadHints KPluginLoader::loadHints KPluginLoader", "text": "Determines how load() should work See QLibrary::loadHints for more information The load hints for the plugin QPluginLoader::loadHints() setLoadHints()"}, {"type": "function", "name": "KPluginLoader::metaData", "url": "classKPluginLoader.html#aef87229b778a4b30d09680539579b910", "keyword": "metaData KPluginLoader::metaData KPluginLoader", "text": "A JSON object containing the plugin s metadata if found QPluginLoader::metaData()"}, {"type": "function", "name": "KPluginLoader::pluginName", "url": "classKPluginLoader.html#a4ccb4478e90992bee16b02e84c083d3d", "keyword": "pluginName KPluginLoader::pluginName KPluginLoader", "text": "If the KService constructor was used this is the name of the library provided by the service The plugin name fileName()"}, {"type": "function", "name": "KPluginLoader::pluginVersion", "url": "classKPluginLoader.html#abb0cadbbc94aa56f4cfc4139502d0256", "keyword": "pluginVersion KPluginLoader::pluginVersion KPluginLoader", "text": "This will load the plugin if it is not already loaded The version given to K_EXPORT_PLUGIN_VERSION or quint32 if the macro was not used or the plugin could not be loaded"}, {"type": "function", "name": "KPluginLoader::setLoadHints", "url": "classKPluginLoader.html#a9f583f22f3283c4afc410bfe9ad95aa3", "keyword": "setLoadHints KPluginLoader::setLoadHints KPluginLoader", "text": "Determines how load() should work See QLibrary::loadHints for more information loadHints The load hints for the plugin QPluginLoader::setLoadHints() loadHints()"}, {"type": "function", "name": "KPluginLoader::unload", "url": "classKPluginLoader.html#a18e3f751ecd02360ed9e8ace853dc016", "keyword": "unload KPluginLoader::unload KPluginLoader", "text": "If other instances of KPluginLoader or QPluginLoader are using the same plugin this will fail unloading will only happen when every instance has called unload() True if the plugin was unloaded false otherwise QPluginLoader::unload() load() instance() factory()"}, {"type": "function", "name": "KPluginLoader::findPlugin", "url": "classKPluginLoader.html#a3a69c4f1826926a2145f14770b8b5010", "keyword": "findPlugin KPluginLoader::findPlugin KPluginLoader", "text": "Searches for a dynamic object file in the locations KPluginLoader and QPluginLoader would search ie the current directory and QCoreApplication::libraryPaths() This can be useful if you wish to use a plugin that does not conform to the Qt plugin scheme of providing a QObject that declares Q_PLUGIN_METADATA In this case you can find the plugin with this method and load it with QLibrary Note that the path is not necessarily absolute In particular if the plugin is found in the current directory it will be a relative path name The name of the plugin can be a relative path see above This should not include a file extension like so or dll The path to the plugin if it was found or QString() if it could not be found 5.0"}, {"type": "function", "name": "KPluginLoader::findPlugins", "url": "classKPluginLoader.html#abe8d620c94c3f7c3d05b991777b37815", "keyword": "findPlugins KPluginLoader::findPlugins KPluginLoader", "text": "Only plugins which have JSON metadata will be considered directory The directory to search for plugins If a relative path is given for directory all entries of QCoreApplication::libraryPaths() will be checked with directory appended as a subdirectory If an absolute path is given only that directory will be searched filter a callback function that returns true if the found plugin should be loaded and false if it should be skipped If this argument is omitted all plugins will be loaded all plugins found in directory that fulfil the constraints of filter KPluginLoader::instantiatePlugins() 5.1"}, {"type": "function", "name": "KPluginLoader::findPluginsById", "url": "classKPluginLoader.html#a7448249b7b7dbc337f82bd91b17d91c7", "keyword": "findPluginsById KPluginLoader::findPluginsById KPluginLoader", "text": "Only plugins which have JSON metadata will be considered directory The directory to search for plugins If a relative path is given for directory all entries of QCoreApplication::libraryPaths() will be checked with directory appended as a subdirectory If an absolute path is given only that directory will be searched pluginId The Id of the plugin for example KPluginMetaData.pluginId() all plugins found in directory with the given pluginId KPluginLoader::instantiatePlugins() 5.11"}, {"type": "function", "name": "KPluginLoader::forEachPlugin", "url": "classKPluginLoader.html#a7f8bc12a6e3620de37e160559ebe965f", "keyword": "forEachPlugin KPluginLoader::forEachPlugin KPluginLoader", "text": "This is useful if your application needs to customize the behaviour of KPluginLoader::findPlugins() or KPluginLoader::instantiatePlugins() The files found do not necessarily contain JSON metadata and may not be loadable using K/QPluginLoader The only guarantee made is that they are valid library file names as determined by QLibrary::isLibrary() directory The directory to search for plugins If a relative path is given for directory all entries of QCoreApplication::libraryPaths() will be checked with directory appended as a subdirectory If an absolute path is given only that directory will be searched callback This function will be invoked for each valid plugin that is found It will receive the absolute path to the plugin as an argument KPluginLoader::findPlugins() KPluginLoader::instantiatePlugins() 5.1"}, {"type": "function", "name": "KPluginLoader::instantiatePlugins", "url": "classKPluginLoader.html#aafc1d4d9bacac0b790396e85a296cc7a", "keyword": "instantiatePlugins KPluginLoader::instantiatePlugins KPluginLoader", "text": "Only plugins which have JSON metadata will be considered A filter can be passed which determines which of the found plugins should actually be loaded If you use KConfig you could have a group in your configuration file with the plugin name as the key and true/false as the value to indicate whether the plugin should be loaded In order to easily load all the enable plugins you could use the following code directory the directory to search for plugins If a relative path is given for directory all entries of QCoreApplication::libraryPaths() will be checked with directory appended as a subdirectory If an absolute path is given only that directory will be searched filter a callback function that returns true if the found plugin should be loaded and false if it should be skipped If this argument is omitted all plugins will be loaded parent the parent to set for the instantiated plugins if the plugins were not already loaded If the plugins have been previously loaded via QPluginLoader directly or due to this class without being deleted in the meantime then they are not re-created or re-parented and will be returned using the parent they were originally created with QPluginLoader::instance() a list containing an instantiation of each plugin that met the filter criteria KPluginLoader::findPlugins() 5.1"}, {"type": "related", "name": "KPluginLoader::K_EXPORT_PLUGIN_VERSION", "url": "classKPluginLoader.html#aa8c6d67202b5b0dec86efeebf65a259d", "keyword": "K_EXPORT_PLUGIN_VERSION KPluginLoader::K_EXPORT_PLUGIN_VERSION KPluginLoader", "text": "Use this macro if you want to give your plugin a version number You can later access the version number with KPluginLoader::pluginVersion()"}, {"type": "related", "name": "KPluginLoader::Q_STANDARD_CALL", "url": "classKPluginLoader.html#ac3ba610b4fe7fad63427be66dee8d6e4", "keyword": "Q_STANDARD_CALL KPluginLoader::Q_STANDARD_CALL KPluginLoader", "text": "This macro exports the main object of the plugin Most times this will be a KPluginFactory or derived class but any QObject derived class can be used Take a look at the documentation of Q_EXPORT_PLUGIN2 for some details"}, {"type": "class", "name": "KPluginMetaData", "url": "classKPluginMetaData.html", "keyword": "KPluginMetaData", "text": "Additional plugin-specific metadata can be retrieved by directly reading from the QJsonObject returned by KPluginMetaData::rawData() This class can be used instead of KPluginInfo from KService for applications that only load Qt C++ plugins The following keys will be read from an object inside the metadata JSON Key Accessor function JSON Type Name name() string Description description() string ExtraInformation extraInformation() string Icon iconName() string Authors authors() object array KAboutPerson Category category() string License license() string Copyright copyrightText() string Id pluginId() string Version version() string Website website() string EnabledByDefault isEnabledByDefault() bool ServiceTypes serviceTypes() string array MimeTypes mimeTypes() string array FormFactors formFactors() string array Translators translators() object array KAboutPerson OtherContributors otherContributors() object array KAboutPerson The Authors Translators and OtherContributors keys are expected to be list of objects that match the structure expected by KAboutPerson::fromJSON() An example metadata json file could look like this KAboutPerson::fromJSON() 5.1"}, {"type": "function", "name": "KPluginMetaData::KPluginMetaData", "url": "classKPluginMetaData.html#a4dcccc645bd07a7f49a88b54846f227b", "keyword": "KPluginMetaData KPluginMetaData::KPluginMetaData KPluginMetaData", "text": ""}, {"type": "function", "name": "KPluginMetaData::KPluginMetaData", "url": "classKPluginMetaData.html#a449ce8a3569498bd65464e08813c9d6c", "keyword": "KPluginMetaData KPluginMetaData::KPluginMetaData KPluginMetaData", "text": "You must call KPluginLoader::setFileName() or use the appropriate constructor on loader before calling this"}, {"type": "function", "name": "KPluginMetaData::KPluginMetaData", "url": "classKPluginMetaData.html#ab2e7d4c4d056966e565382571614e90b", "keyword": "KPluginMetaData KPluginMetaData::KPluginMetaData KPluginMetaData", "text": "You must call QPluginLoader::setFileName() or use the appropriate constructor on loader before calling this"}, {"type": "function", "name": "KPluginMetaData::KPluginMetaData", "url": "classKPluginMetaData.html#a0516c295306719273d38c86606082762", "keyword": "KPluginMetaData KPluginMetaData::KPluginMetaData KPluginMetaData", "text": "For plugins platform-specific library suffixes may be omitted since file will be resolved using the same logic as QPluginLoader If the file name ends with the desktop file will be parsed instead of reading the metadata from the QPluginLoader This is the same as calling KPluginMetaData::fromDesktopFile() without the serviceTypes parameter If file ends with json the file will be loaded as the QJsonObject metadata QPluginLoader::setFileName() KPluginMetaData::fromDesktopFile()"}, {"type": "function", "name": "KPluginMetaData::KPluginMetaData", "url": "classKPluginMetaData.html#aa68eb26460d7b83d8ddedd4cd9a8c398", "keyword": "KPluginMetaData KPluginMetaData::KPluginMetaData KPluginMetaData", "text": "KPluginMetaData(const QJsonObject &, const QString &, const QString &)"}, {"type": "function", "name": "KPluginMetaData::KPluginMetaData", "url": "classKPluginMetaData.html#a7bbdbb7e9aaf250fba43fb946a2b4089", "keyword": "KPluginMetaData KPluginMetaData::KPluginMetaData KPluginMetaData", "text": "metaData the JSON metadata to use for this object pluginFile the file that the plugin can be loaded from metaDataFile the file that the JSON metadata was read from This can be used if the data is not retrieved from a Qt C++ plugin library but from some other source 5.5"}, {"type": "function", "name": "KPluginMetaData::KPluginMetaData", "url": "classKPluginMetaData.html#a0fb8469c88524f85704f7b4b3a14be25", "keyword": "KPluginMetaData KPluginMetaData::KPluginMetaData KPluginMetaData", "text": ""}, {"type": "function", "name": "KPluginMetaData::~KPluginMetaData", "url": "classKPluginMetaData.html#a53d7c2c2feda71ab2c1aad92e212a322", "keyword": "KPluginMetaData::~KPluginMetaData KPluginMetaData", "text": ""}, {"type": "function", "name": "KPluginMetaData::authors", "url": "classKPluginMetaData.html#a5ed3f2d7180da50252fbe8a51d08453a", "keyword": "authors KPluginMetaData::authors KPluginMetaData", "text": "the author(s) of this plugin"}, {"type": "function", "name": "KPluginMetaData::category", "url": "classKPluginMetaData.html#a180f69cc826818124edd7214570fe46f", "keyword": "category KPluginMetaData::category KPluginMetaData", "text": "the categories of this plugin e.g"}, {"type": "function", "name": "KPluginMetaData::copyrightText", "url": "classKPluginMetaData.html#a37898ea09c863c4a9c75eee794381f6e", "keyword": "copyrightText KPluginMetaData::copyrightText KPluginMetaData", "text": "a short copyright statement 5.18"}, {"type": "function", "name": "KPluginMetaData::dependencies", "url": "classKPluginMetaData.html#a82d2e87db9b834bfbb6f0155709b617c", "keyword": "dependencies KPluginMetaData::dependencies KPluginMetaData", "text": "a list of plugins that this plugin depends on so that it can function properly KJsonPluginInfo::pluginId()"}, {"type": "function", "name": "KPluginMetaData::description", "url": "classKPluginMetaData.html#ae43bf4faf9e18daca990b078b75f365e", "keyword": "description KPluginMetaData::description KPluginMetaData", "text": "a short description of the plugin"}, {"type": "function", "name": "KPluginMetaData::extraInformation", "url": "classKPluginMetaData.html#abd2fccc76b54d28f401ca34672b5d3cf", "keyword": "extraInformation KPluginMetaData::extraInformation KPluginMetaData", "text": "additional information about this plugin e.g for use in an dialog 5.18"}, {"type": "function", "name": "KPluginMetaData::fileName", "url": "classKPluginMetaData.html#a758e9e9ff04b9731ec8366db4fe15150", "keyword": "fileName KPluginMetaData::fileName KPluginMetaData", "text": "the path to the plugin This string can be passed to the KPluginLoader or QPluginLoader constructors in order to attempt to load this plugin It is not guaranteed that this is a valid path to a shared library i.e loadable by QPluginLoader since the metadata could also refer to a non-C++ plugin"}, {"type": "function", "name": "KPluginMetaData::formFactors", "url": "classKPluginMetaData.html#aee0aa2c916f3421625107701500d82f0", "keyword": "formFactors KPluginMetaData::formFactors KPluginMetaData", "text": "A string list of formfactors this plugin is useful for e.g desktop tablet handset mediacenter etc The keys for this are not formally defined 5.12"}, {"type": "function", "name": "KPluginMetaData::iconName", "url": "classKPluginMetaData.html#a88b810061ce01edf3c70cd78143ee938", "keyword": "iconName KPluginMetaData::iconName KPluginMetaData", "text": "the icon name for this plugin QIcon::fromTheme()"}, {"type": "function", "name": "KPluginMetaData::instantiate", "url": "classKPluginMetaData.html#aebd1096b7fd356dd84bc7ef19ab08d01", "keyword": "instantiate KPluginMetaData::instantiate KPluginMetaData", "text": "The value of KPluginMetaData::dependencies() is not used here dependencies must be resolved manually The plugin root object or nullptr if it could not be loaded QPluginLoader::instance() KPluginLoader::instance()"}, {"type": "function", "name": "KPluginMetaData::isEnabledByDefault", "url": "classKPluginMetaData.html#ad48f98a3a3be6b07d9359ea0774ebf0f", "keyword": "isEnabledByDefault KPluginMetaData::isEnabledByDefault KPluginMetaData", "text": "whether the plugin should be enabled by default This is only a recommendation applications can ignore this value if they want to"}, {"type": "function", "name": "KPluginMetaData::isHidden", "url": "classKPluginMetaData.html#a24482f74542b07a6be502bd9d2ee38a2", "keyword": "isHidden KPluginMetaData::isHidden KPluginMetaData", "text": "whether this object should be hidden this is usually not used for binary plugins when loading a KPluginMetaData from a desktop file this will reflect the value of the key 5.8"}, {"type": "function", "name": "KPluginMetaData::isValid", "url": "classKPluginMetaData.html#a9205b02a9444f87e501f221bd97f6533", "keyword": "isValid KPluginMetaData::isValid KPluginMetaData", "text": "whether this object holds valid information about a plugin If this is true pluginId() will return a non-empty string"}, {"type": "function", "name": "KPluginMetaData::license", "url": "classKPluginMetaData.html#a5336c78daa810e14ec1dd303e9c327b3", "keyword": "license KPluginMetaData::license KPluginMetaData", "text": "the short license identifier e.g LGPL KAboutLicense::byKeyword() for retrieving the full license information"}, {"type": "function", "name": "KPluginMetaData::metaDataFileName", "url": "classKPluginMetaData.html#a3d64a2a5bbc19874c11dc003c8f203a6", "keyword": "metaDataFileName KPluginMetaData::metaDataFileName KPluginMetaData", "text": "the file that the metadata was read from This is not necessarily the same as fileName() since not all plugins have the metadata embedded The metadata could also be stored in a separate desktop file 5.5"}, {"type": "function", "name": "KPluginMetaData::mimeTypes", "url": "classKPluginMetaData.html#a1f02e0567f393d33c3f59955aa8f9260", "keyword": "mimeTypes KPluginMetaData::mimeTypes KPluginMetaData", "text": "a list of MIME types this plugin can handle e.g etc 5.16"}, {"type": "function", "name": "KPluginMetaData::name", "url": "classKPluginMetaData.html#a9011b7492ac24e0370aad06397c43352", "keyword": "name KPluginMetaData::name KPluginMetaData", "text": "the user visible name of the plugin"}, {"type": "function", "name": "KPluginMetaData::operator!=", "url": "classKPluginMetaData.html#a4dc965510a0e5f4147cb401e5a1eb615", "keyword": "operator!= KPluginMetaData::operator!= KPluginMetaData", "text": "true if this object is not equal to other otherwise false"}, {"type": "function", "name": "KPluginMetaData::operator=", "url": "classKPluginMetaData.html#a7e88b4a436e75d8e7ec13dc80cdef3ac", "keyword": "operator= KPluginMetaData::operator= KPluginMetaData", "text": ""}, {"type": "function", "name": "KPluginMetaData::operator==", "url": "classKPluginMetaData.html#aa74438c63e21519b6185b65a6d41832a", "keyword": "operator== KPluginMetaData::operator== KPluginMetaData", "text": "true if this object is equal to other otherwise false"}, {"type": "function", "name": "KPluginMetaData::otherContributors", "url": "classKPluginMetaData.html#aa32d033670fc5e9c639e13e43d9d0cd5", "keyword": "otherContributors KPluginMetaData::otherContributors KPluginMetaData", "text": "a list of people that contributed to this plugin other than the authors and translators 5.18"}, {"type": "function", "name": "KPluginMetaData::pluginId", "url": "classKPluginMetaData.html#a06b3f4742bb2d5ad5a2598c4ef8bd75d", "keyword": "pluginId KPluginMetaData::pluginId KPluginMetaData", "text": "the internal name of the plugin for KParts Plugins this is the same name as set in the rc file If the plugin name property is not set in the metadata this will return the plugin file name without the file extension"}, {"type": "function", "name": "KPluginMetaData::rawData", "url": "classKPluginMetaData.html#a61a4c18a7ad2ebd063221a9936be1113", "keyword": "rawData KPluginMetaData::rawData KPluginMetaData", "text": "the full metadata stored inside the plugin file"}, {"type": "function", "name": "KPluginMetaData::serviceTypes", "url": "classKPluginMetaData.html#aa1d6d1a0f58f750f7a36dbc9d1f03b09", "keyword": "serviceTypes KPluginMetaData::serviceTypes KPluginMetaData", "text": "Unlike KService this does not contain the MIME types To get the handled MIME types use the KPluginMetaData::mimeTypes() function a list of service types this plugin implements e.g"}, {"type": "function", "name": "KPluginMetaData::translators", "url": "classKPluginMetaData.html#aff3a7690fd4c88e5229061cc8df87a89", "keyword": "translators KPluginMetaData::translators KPluginMetaData", "text": "the translator(s) of this plugin 5.18"}, {"type": "function", "name": "KPluginMetaData::value", "url": "classKPluginMetaData.html#a375fa8ec5b1a562d8fad70c593f825b7", "keyword": "value KPluginMetaData::value KPluginMetaData", "text": "the value for key from the metadata or defaultValue if the key does not exist or the value for key is not of type string KPluginMetaData::rawData() if QString is not the correct type for key"}, {"type": "function", "name": "KPluginMetaData::version", "url": "classKPluginMetaData.html#ac19d8a09870418b903b816b9b19eec57", "keyword": "version KPluginMetaData::version KPluginMetaData", "text": "the version of the plugin"}, {"type": "function", "name": "KPluginMetaData::website", "url": "classKPluginMetaData.html#a409ef7e1391c68f36f25ab994932b774", "keyword": "website KPluginMetaData::website KPluginMetaData", "text": "the website of the plugin"}, {"type": "function", "name": "KPluginMetaData::fromDesktopFile", "url": "classKPluginMetaData.html#ac6e87c110b4743ce1b16044c649838ba", "keyword": "fromDesktopFile KPluginMetaData::fromDesktopFile KPluginMetaData", "text": "Unlike the constructor which takes a single file parameter this method allows you to specify which service type files should be parsed to determine the correct type for a given desktop property This ensures that a e.g comma-separated string list field in the desktop file will correctly be converted to a JSON string array This function mostly exists for backwards-compatibility It is recommended that new applications load JSON files directly instead of using desktop files for plugin metadata file the desktop file to load serviceTypes a list of files to parse If one of these paths is a relative path it will be resolved relative to the subdirectory in QStandardPaths::GenericDataLocation If the list is empty only the default set of properties will be treated specially and all other entries will be read as the JSON string type 5.16"}, {"type": "function", "name": "KPluginMetaData::readStringList", "url": "classKPluginMetaData.html#a3bf0f2edf5cf1f4b4ed66269eae35c68", "keyword": "readStringList KPluginMetaData::readStringList KPluginMetaData", "text": "the value for key inside jo as a string list If the type of key is string a list with containing just that string will be returned if it is an array the list will contain one entry for each array member If the key cannot be found an empty list will be returned"}, {"type": "function", "name": "KPluginMetaData::readTranslatedString", "url": "classKPluginMetaData.html#a0fc9f5db9cecfd1a245e2a4a98b83fb0", "keyword": "readTranslatedString KPluginMetaData::readTranslatedString KPluginMetaData", "text": "the translated value of key from jo as a string or defaultValue if key was not found or the value for key is not of type string KPluginMetaData::readTranslatedValue(const QJsonObject &jo, const QString &key)"}, {"type": "function", "name": "KPluginMetaData::readTranslatedValue", "url": "classKPluginMetaData.html#ab71f4d031e39fe834f4ac83d6f27e36a", "keyword": "readTranslatedValue KPluginMetaData::readTranslatedValue KPluginMetaData", "text": "or When looking for a key with German Germany locale we will first attempt to read if that does not exist finally falling back to if that also doesn t exist the translated value for key from jo or defaultValue if key was not found"}, {"type": "class", "name": "KPluginName", "url": "classKPluginName.html", "keyword": "KPluginName", "text": "This exists only so that classes such as KService can provide a cast operator to allow them to be used as arguments to KPluginLoader Unless you are implementing such a cast operator you should never need to use this class directly"}, {"type": "function", "name": "KPluginName::KPluginName", "url": "classKPluginName.html#a04dad0cf2de5cba593516f6e3eb8bdff", "keyword": "KPluginName KPluginName::KPluginName KPluginName", "text": "If there was an error and the name could not be determined fromErrorString() should be used instead to construct an appropriate error message name The name of the plugin this should not be empty"}, {"type": "function", "name": "KPluginName::errorString", "url": "classKPluginName.html#ad403352894968a92741b4faa8b65846c", "keyword": "errorString KPluginName::errorString KPluginName", "text": "The string passed to fromErrorString() if isValid() is false QString() otherwise"}, {"type": "function", "name": "KPluginName::isValid", "url": "classKPluginName.html#af2f7b92dbdf1d29e530187e316e74640", "keyword": "isValid KPluginName::isValid KPluginName", "text": "Note that this only determines how the KPluginName was constructed not anything about the value of the string true if the KPluginName(const QString&) constructor was used false if fromErrorString() was used"}, {"type": "function", "name": "KPluginName::name", "url": "classKPluginName.html#ad4317fa6c84cab13a8c4ba9d03137010", "keyword": "name KPluginName::name KPluginName", "text": "The string passed to the constructor if isValid() is true QString() otherwise"}, {"type": "function", "name": "KPluginName::fromErrorString", "url": "classKPluginName.html#a994d6b7b1418cae4b8c65b2b36fcdc08", "keyword": "fromErrorString KPluginName::fromErrorString KPluginName", "text": "When this object is passed to KPluginLoader errorString will be used for KPluginLoader::errorString() errorString The translated error string"}, {"type": "class", "name": "KProcess", "url": "classKProcess.html", "keyword": "KProcess", "text": "This class extends QProcess by some useful functionality overrides some defaults with saner values and wraps parts of the API into a more accessible one Only use KProcess if you need the extra features otherwise QProcess is the preferred way of spawning child processes Oswald Buddenhagen"}, {"type": "enum", "name": "KProcess::OutputChannelMode", "url": "classKProcess.html#a4acf3452f1bf5bd3954d272168b16c87", "keyword": "OutputChannelMode KProcess::OutputChannelMode KProcess", "text": ""}, {"type": "enumvalue", "name": "KProcess::SeparateChannels", "url": "classKProcess.html#a4acf3452f1bf5bd3954d272168b16c87af4d4c1acd2fb7db2f33e0063cada2f1a", "keyword": "SeparateChannels KProcess::SeparateChannels KProcess", "text": "Standard output and standard error are handled by KProcess as separate channels"}, {"type": "enumvalue", "name": "KProcess::MergedChannels", "url": "classKProcess.html#a4acf3452f1bf5bd3954d272168b16c87ad56a69aaab2b00eaebcae0ca58debbbc", "keyword": "MergedChannels KProcess::MergedChannels KProcess", "text": "Standard output and standard error are handled by KProcess as one channel"}, {"type": "enumvalue", "name": "KProcess::ForwardedChannels", "url": "classKProcess.html#a4acf3452f1bf5bd3954d272168b16c87ae59dc625768089fceea8977391c02e0b", "keyword": "ForwardedChannels KProcess::ForwardedChannels KProcess", "text": "Both standard output and standard error are forwarded to the parent process respective channel"}, {"type": "enumvalue", "name": "KProcess::OnlyStdoutChannel", "url": "classKProcess.html#a4acf3452f1bf5bd3954d272168b16c87a6b5f2d82d9a5599806b5d8013ab58694", "keyword": "OnlyStdoutChannel KProcess::OnlyStdoutChannel KProcess", "text": "Only standard output is handled standard error is forwarded"}, {"type": "enumvalue", "name": "KProcess::OnlyStderrChannel", "url": "classKProcess.html#a4acf3452f1bf5bd3954d272168b16c87af91ed9d3f45f13f1c58901a61b1df887", "keyword": "OnlyStderrChannel KProcess::OnlyStderrChannel KProcess", "text": "Only standard error is handled standard output is forwarded"}, {"type": "function", "name": "KProcess::KProcess", "url": "classKProcess.html#a94456056835012a07c9dc077d00ce286", "keyword": "KProcess KProcess::KProcess KProcess", "text": ""}, {"type": "function", "name": "KProcess::~KProcess", "url": "classKProcess.html#aaaf0e2133a2218bdcd88003162f67602", "keyword": "KProcess::~KProcess KProcess", "text": ""}, {"type": "function", "name": "KProcess::clearEnvironment", "url": "classKProcess.html#aa0c47cd15a2782c36404870c024f4915", "keyword": "clearEnvironment KProcess::clearEnvironment KProcess", "text": "Note that LD_LIBRARY_PATH/DYLD_LIBRARY_PATH is automatically added on This function must be called before starting the process"}, {"type": "function", "name": "KProcess::clearProgram", "url": "classKProcess.html#a432e2ddd9c3f2b56f3430ae92b097827", "keyword": "clearProgram KProcess::clearProgram KProcess", "text": ""}, {"type": "function", "name": "KProcess::execute", "url": "classKProcess.html#adc5c9b1a37d04ad56c8261503a08ea82", "keyword": "execute KProcess::execute KProcess", "text": "This method is roughly equivalent to the sequence start() waitForFinished(msecs) return exitCode() Unlike the other execute() variants this method is not static so the process can be parametrized properly and talked to msecs time to wait for process to exit before killing it if the process could not be started if it crashed otherwise its exit code"}, {"type": "function", "name": "KProcess::operator<<", "url": "classKProcess.html#a622180f48f80ff03c7d29b2d6ae8fa70", "keyword": "operator<< KProcess::operator<< KProcess", "text": "If no executable is set yet it will be set instead For example doing an can be achieved by This function must be called before starting the process obviously arg the argument to add a reference to this KProcess"}, {"type": "function", "name": "KProcess::operator<<", "url": "classKProcess.html#a2c023c6dea904e00486ff08ea7214f7e", "keyword": "operator<< KProcess::operator<< KProcess", "text": "args the arguments to add a reference to this KProcess"}, {"type": "function", "name": "KProcess::outputChannelMode", "url": "classKProcess.html#a63e4e99b82df9671fd88a14380084d20", "keyword": "outputChannelMode KProcess::outputChannelMode KProcess", "text": "the output channel handling mode"}, {"type": "function", "name": "KProcess::pid", "url": "classKProcess.html#a0c991c492a346417f352b88b4e313c8c", "keyword": "pid KProcess::pid KProcess", "text": "Unlike with QProcess::pid() this is a real PID also on Windows This function can be called only while the process is running It cannot be applied to detached processes the process ID"}, {"type": "function", "name": "KProcess::program", "url": "classKProcess.html#a680bbb4c8186dd463d044640358344ff", "keyword": "program KProcess::program KProcess", "text": "a list the first element being the program the remaining ones being command line arguments to the program"}, {"type": "function", "name": "KProcess::setEnv", "url": "classKProcess.html#ad5218a3478719d72a4db4a1adf3dbb20", "keyword": "setEnv KProcess::setEnv KProcess", "text": "This function must be called before starting the process name the name of the environment variable value the new value for the environment variable overwrite if false and the environment variable is already set the old value will be preserved"}, {"type": "function", "name": "KProcess::setNextOpenMode", "url": "classKProcess.html#a2fde098c4fea5e5178982309d02f266f", "keyword": "setNextOpenMode KProcess::setNextOpenMode KProcess", "text": "This function must be called before starting the process obviously mode the open mode Note that this mode is automatically according to the channel modes and redirections The default is QIODevice::ReadWrite"}, {"type": "function", "name": "KProcess::setOutputChannelMode", "url": "classKProcess.html#a7c91d212c2fa397f4a7b1840c5de5c2f", "keyword": "setOutputChannelMode KProcess::setOutputChannelMode KProcess", "text": "The default is ForwardedChannels which is unlike in QProcess Do not request more than you actually handle as this output is simply lost otherwise This function must be called before starting the process mode the output channel handling mode"}, {"type": "function", "name": "KProcess::setProgram", "url": "classKProcess.html#afad13da571471df810159602aea3d781", "keyword": "setProgram KProcess::setProgram KProcess", "text": "This function must be called before starting the process obviously exe the program to execute args the command line arguments for the program one per list element"}, {"type": "function", "name": "KProcess::setProgram", "url": "classKProcess.html#aa0d38be873db69cd97863e429e2e37ad", "keyword": "setProgram KProcess::setProgram KProcess", "text": "argv the program to execute and the command line arguments for the program one per list element"}, {"type": "function", "name": "KProcess::setShellCommand", "url": "classKProcess.html#a291b7b2bec6c9f49e0f5140ff06e75c2", "keyword": "setShellCommand KProcess::setShellCommand KProcess", "text": "Using this for anything but user-supplied commands is usually a bad idea as the command s syntax depends on the platform Redirections including pipes etc are better handled by the respective functions provided by QProcess If KProcess determines that the command does not really need a shell it will trasparently execute it without one for performance reasons This function must be called before starting the process obviously cmd the command to execute through a shell The caller must make sure that all filenames etc are properly quoted when passed as argument Failure to do so often results in serious security holes See KShell::quoteArg()"}, {"type": "function", "name": "KProcess::start", "url": "classKProcess.html#a28f6c3ffc96c76490fe9a552c053a417", "keyword": "start KProcess::start KProcess", "text": "QProcess::start(const QString &, const QStringList &, OpenMode)"}, {"type": "function", "name": "KProcess::startDetached", "url": "classKProcess.html#a724d24732a54ae27f1c83133f18a2de8", "keyword": "startDetached KProcess::startDetached KProcess", "text": "See QProcess::startDetached() for details Unlike the other startDetached() variants this method is not static so the process can be parametrized properly Currently only the setProgram() and setWorkingDirectory() parametrizations are supported The KProcess object may be re-used immediately after calling this function the PID of the started process or 0 on error"}, {"type": "function", "name": "KProcess::unsetEnv", "url": "classKProcess.html#a536b23bca1d0b25a885dc83752eb0619", "keyword": "unsetEnv KProcess::unsetEnv KProcess", "text": "This function must be called before starting the process name the name of the environment variable"}, {"type": "function", "name": "KProcess::execute", "url": "classKProcess.html#a913f73fb177f7425f7f76f06bfb203b9", "keyword": "execute KProcess::execute KProcess", "text": "exe the program to execute args the command line arguments for the program one per list element msecs time to wait for process to exit before killing it if the process could not be started if it crashed otherwise its exit code"}, {"type": "function", "name": "KProcess::execute", "url": "classKProcess.html#a998db042f0ad3f6b92fd738cd73c0379", "keyword": "execute KProcess::execute KProcess", "text": "argv the program to execute and the command line arguments for the program one per list element msecs time to wait for process to exit before killing it if the process could not be started if it crashed otherwise its exit code"}, {"type": "function", "name": "KProcess::startDetached", "url": "classKProcess.html#a24321850a114a718cdf7d601d1c076a1", "keyword": "startDetached KProcess::startDetached KProcess", "text": "exe the program to start args the command line arguments for the program one per list element the PID of the started process or 0 on error"}, {"type": "function", "name": "KProcess::startDetached", "url": "classKProcess.html#a74af9d9f41d3f6fd41366d371c98015e", "keyword": "startDetached KProcess::startDetached KProcess", "text": "argv the program to start and the command line arguments for the program one per list element the PID of the started process or 0 on error"}, {"type": "function", "name": "KProcess::KProcess", "url": "classKProcess.html#a3ab437173ad7c4280ff8c7d0031c90ac", "keyword": "KProcess KProcess::KProcess KProcess", "text": ""}, {"type": "variable", "name": "KProcess::d_ptr", "url": "classKProcess.html#a3e9af74721a82e0c0dea2c0596886a99", "keyword": "d_ptr KProcess::d_ptr KProcess", "text": ""}, {"type": "class", "name": "KRandomSequence", "url": "classKRandomSequence.html", "keyword": "KRandomSequence", "text": "Given a seed number this class will produce a sequence of pseudo-random numbers This would typically be used in applications like games In general you should instantiate a KRandomSequence object and pass along your seed number in the constructor From then on simply call getDouble or getLong to obtain the next number in the sequence Sean Harmer"}, {"type": "function", "name": "KRandomSequence::KRandomSequence", "url": "classKRandomSequence.html#acae86b6075b581dbf28c838a304d682c", "keyword": "KRandomSequence KRandomSequence::KRandomSequence KRandomSequence", "text": "A Pseudo-random sequence is different for each seed but can be reproduced by starting the sequence with the same seed If you need a single value which needs to be unpredictable you need to use KRandom::random() instead intSeed Seed to initialize the sequence with If lngSeed is 0 the sequence is initialized with a value from KRandom::random() Do not use methods working with long type because on 64-bit their size is different"}, {"type": "function", "name": "KRandomSequence::KRandomSequence", "url": "classKRandomSequence.html#a8f0271691bcc53233396f163997d4524", "keyword": "KRandomSequence KRandomSequence::KRandomSequence KRandomSequence", "text": ""}, {"type": "function", "name": "KRandomSequence::~KRandomSequence", "url": "classKRandomSequence.html#a1d4d76db08827e3b39a0564a5699da1e", "keyword": "KRandomSequence::~KRandomSequence KRandomSequence", "text": ""}, {"type": "function", "name": "KRandomSequence::getBool", "url": "classKRandomSequence.html#ae304e60895f39b698719aa00ed365dea", "keyword": "getBool KRandomSequence::getBool KRandomSequence", "text": "a boolean which is either true or false"}, {"type": "function", "name": "KRandomSequence::getDouble", "url": "classKRandomSequence.html#a7942e764b28120fca4fc9de2a314eac5", "keyword": "getDouble KRandomSequence::getDouble KRandomSequence", "text": "a pseudo-random double value between 0 1"}, {"type": "function", "name": "KRandomSequence::getInt", "url": "classKRandomSequence.html#a11d7a8414a76c724e2bd21242e307069", "keyword": "getInt KRandomSequence::getInt KRandomSequence", "text": "a pseudo-random integer value between 0 max with 0 max 1.000.000"}, {"type": "function", "name": "KRandomSequence::modulate", "url": "classKRandomSequence.html#a7c05df1c56887ad233f1c677d09836c5", "keyword": "modulate KRandomSequence::modulate KRandomSequence", "text": "If S(i) is the sequence of numbers that will follow given the current state after calling modulate(i) then S(i) S(j) for i j and S(i) S(j) for i j This can be useful in game situation where restores the state of the random sequence If the game modulates the random sequence with the move chosen by the player the random sequence will be identical whenever the player his or hers original move but different when the player chooses another move With this scenario can no longer be used to repeat a certain move over and over again until the computer reacts with a favorable response or to predict the response for a certain move based on the response to another move i the sequence identified"}, {"type": "function", "name": "KRandomSequence::operator=", "url": "classKRandomSequence.html#a0d8434667e8162f9c1bb4720266cc720", "keyword": "operator= KRandomSequence::operator= KRandomSequence", "text": ""}, {"type": "function", "name": "KRandomSequence::randomize", "url": "classKRandomSequence.html#a4faaf5e339f0c618dae4f8c03de540d6", "keyword": "randomize KRandomSequence::randomize KRandomSequence", "text": "Since kdelibs 4.11 this function uses a more efficient algorithm Fisher-Yates Therefore the order of the items in the randomized list is different from the one in earlier versions if the same seed value is used for the random sequence list the list whose order will be modified modifies the list in place"}, {"type": "function", "name": "KRandomSequence::setSeed", "url": "classKRandomSequence.html#a04876327f17ce23d77486c7c128f8b61", "keyword": "setSeed KRandomSequence::setSeed KRandomSequence", "text": "intSeed Seed to initialize the sequence with If lngSeed is 0 the sequence is initialized with a value from KRandom::random()"}, {"type": "class", "name": "KSharedDataCache", "url": "classKSharedDataCache.html", "keyword": "KSharedDataCache", "text": "This class is meant to be used with KImageCache and similar classes but can be used directly if used with care Example usage Michael Pyne KImageCache 4.5"}, {"type": "function", "name": "KSharedDataCache::KSharedDataCache", "url": "classKSharedDataCache.html#a9bf6b590d48889bb2dd3116cce0be3a9", "keyword": "KSharedDataCache KSharedDataCache::KSharedDataCache KSharedDataCache", "text": "If supported this data cache will be shared across all processes using this cache with subsequent memory savings If shared memory is unsupported or a failure occurs caching will still be supported but only in the same process and only using the same KSharedDataCache object cacheName Name of the cache to use/share defaultCacheSize Amount of data to be able to store in bytes The actual size will be slightly larger on disk due to accounting overhead If the cache already existed then it will not be resized For this reason you should specify some reasonable size expectedItemSize The average size of an item that would be stored in the cache in bytes Choosing an average size of zero bytes causes KSharedDataCache to use whatever it feels is the best default for the system"}, {"type": "function", "name": "KSharedDataCache::clear", "url": "classKSharedDataCache.html#a57466d4deb2939f69da2dccdd4a6267e", "keyword": "clear KSharedDataCache::clear KSharedDataCache", "text": ""}, {"type": "function", "name": "KSharedDataCache::contains", "url": "classKSharedDataCache.html#ae6666c9437ef076af6345d54faa3d13a", "keyword": "contains KSharedDataCache::contains KSharedDataCache", "text": "NOTE Calling this function is threadsafe but it is in general not possible to guarantee the image stays cached immediately afterwards so if you need the result use find()"}, {"type": "function", "name": "KSharedDataCache::evictionPolicy", "url": "classKSharedDataCache.html#aea19f382f0c3fcb465140ac102871040", "keyword": "evictionPolicy KSharedDataCache::evictionPolicy KSharedDataCache", "text": "The removal policy in use by the shared cache EvictionPolicy"}, {"type": "function", "name": "KSharedDataCache::find", "url": "classKSharedDataCache.html#aed74e53a0eccdd1fd111d70e4e98ac91", "keyword": "find KSharedDataCache::find KSharedDataCache", "text": "If there is no entry named by key then destination is left unchanged The return value is used to tell what happened If you simply want to verify whether an entry is present in the cache then see contains() key The key to find in the cache destination Is set to the value of key in the cache if key is present left unchanged otherwise true if key was present in the cache destination will also be updated false if key was not present destination will be unchanged"}, {"type": "function", "name": "KSharedDataCache::freeSize", "url": "classKSharedDataCache.html#a53fb99cc1ac1d9221a2e2498a44cb622", "keyword": "freeSize KSharedDataCache::freeSize KSharedDataCache", "text": "Due to implementation details it is possible to still not be able to fit an entry in the cache at any given time even if it is smaller than the amount of space remaining"}, {"type": "function", "name": "KSharedDataCache::insert", "url": "classKSharedDataCache.html#ac655ec627e842f24ce6148e12c57c477", "keyword": "insert KSharedDataCache::insert KSharedDataCache", "text": "Note that even if the insert was successful that the newly added entry may be evicted by other processes contending for the cache"}, {"type": "function", "name": "KSharedDataCache::setEvictionPolicy", "url": "classKSharedDataCache.html#a917ba952af794cb09d08a86e87083e2d", "keyword": "setEvictionPolicy KSharedDataCache::setEvictionPolicy KSharedDataCache", "text": "The default is EvictionPolicy::NoEvictionPreference EvictionPolicy"}, {"type": "function", "name": "KSharedDataCache::setTimestamp", "url": "classKSharedDataCache.html#aeaa4c736c28affcd97dc7a8bdc2193be", "keyword": "setTimestamp KSharedDataCache::setTimestamp KSharedDataCache", "text": "Timestamping is supported to allow applications to more effectively the data stored in the cache However the timestamp is shared with all applications using the cache so you should always be prepared for invalid timestamps When the cache is first created note that this is different from attaching to an existing shared cache on disk the cache timestamp is initialized to the time returned by time(2) KSharedDataCache will not update the timestamp again it is only updated through this method Example newTimestamp The new timestamp to mark the shared cache with timestamp() 4.6"}, {"type": "function", "name": "KSharedDataCache::timestamp", "url": "classKSharedDataCache.html#ad1435451970770347c5e5845b283579a", "keyword": "timestamp KSharedDataCache::timestamp KSharedDataCache", "text": "The shared timestamp of the cache The interpretation of the timestamp returned is up to the application KSharedDataCache will initialize the timestamp to the time returned by time(2) on cache creation but KSharedDataCache will not touch the timestamp again setTimestamp() 4.6"}, {"type": "function", "name": "KSharedDataCache::totalSize", "url": "classKSharedDataCache.html#a65e74368247c1b0cbad14119db423231", "keyword": "totalSize KSharedDataCache::totalSize KSharedDataCache", "text": "The actual amount of memory used will be slightly larger than this to account for required accounting overhead"}, {"type": "function", "name": "KSharedDataCache::deleteCache", "url": "classKSharedDataCache.html#a55d4d21f16e1cee23b93fb1278b66ee4", "keyword": "deleteCache KSharedDataCache::deleteCache KSharedDataCache", "text": "Note that this is all that this function does The shared memory segment is still attached and will still contain all the data until all processes currently attached remove the mapping In order to remove the data see clear()"}, {"type": "class", "name": "KTextToHTMLEmoticonsInterface", "url": "classKTextToHTMLEmoticonsInterface.html", "keyword": "KTextToHTMLEmoticonsInterface", "text": "Used internally by KTextToHTML implemented by plugin for dynamic dependency on KEmoticons"}, {"type": "class", "name": "KUser", "url": "classKUser.html", "keyword": "KUser", "text": "This class represents a user on your system You can either get information about the current user of fetch information about a user on the system Instances of this class will be explicitly shared so copying objects is very cheap and you can safely pass objects by value Tim Jansen"}, {"type": "enum", "name": "KUser::UIDMode", "url": "classKUser.html#af872dddbf613057193693bfe5de51aef", "keyword": "UIDMode KUser::UIDMode KUser", "text": ""}, {"type": "enumvalue", "name": "KUser::UseEffectiveUID", "url": "classKUser.html#af872dddbf613057193693bfe5de51aefa2aff982de5ed9f280cf925b62a7ef353", "keyword": "UseEffectiveUID KUser::UseEffectiveUID KUser", "text": "Use the effective user id"}, {"type": "enumvalue", "name": "KUser::UseRealUserID", "url": "classKUser.html#af872dddbf613057193693bfe5de51aefa3456d31acdb3e5a50219bfdd327a0fdd", "keyword": "UseRealUserID KUser::UseRealUserID KUser", "text": "Use the real user id"}, {"type": "function", "name": "KUser::KUser", "url": "classKUser.html#a1acf0491cf181d06b7ef88c5d1b3feae", "keyword": "KUser KUser::KUser KUser", "text": "as returned by getuid(2) or geteuid(2) taking into account mode if UseEffectiveUID is passed the effective user is returned If UseRealUserID is passed the real user will be returned The real UID will be different than the effective UID in setuid programs in such a case use the effective UID for checking permissions and the real UID for displaying information about the user"}, {"type": "function", "name": "KUser::KUser", "url": "classKUser.html#a5186ec6f24e3d0287ebbf829fb20fae2", "keyword": "KUser KUser::KUser KUser", "text": "If the user does not exist isValid() will return false uid the user id"}, {"type": "function", "name": "KUser::KUser", "url": "classKUser.html#ac9f1c5e4f61c795bdb58a645e1ee8570", "keyword": "KUser KUser::KUser KUser", "text": "If the KUserId object is invalid this one will be too uid the user id"}, {"type": "function", "name": "KUser::KUser", "url": "classKUser.html#a61fada3543ad2c462ed864f677985cd8", "keyword": "KUser KUser::KUser KUser", "text": "If the user does not exist isValid() will return false name the name of the user"}, {"type": "function", "name": "KUser::KUser", "url": "classKUser.html#a224a9fe52abfa4a4771eb936fa915add", "keyword": "KUser KUser::KUser KUser", "text": "If the user does not exist isValid() will return false name the name of the user"}, {"type": "function", "name": "KUser::KUser", "url": "classKUser.html#a7e4fcd8f1467b08571408f03179c4d69", "keyword": "KUser KUser::KUser KUser", "text": "If the pointer is null isValid() will return false p the passwd structure to create the user from"}, {"type": "function", "name": "KUser::KUser", "url": "classKUser.html#af78d601f5fd4cbb648cdece3f1a78db3", "keyword": "KUser KUser::KUser KUser", "text": "user the user to create the new object from"}, {"type": "function", "name": "KUser::~KUser", "url": "classKUser.html#a8ad75c3dffd4883e8751fd505053f3c0", "keyword": "KUser::~KUser KUser", "text": ""}, {"type": "function", "name": "KUser::faceIconPath", "url": "classKUser.html#a0a799dfd9c983d2c5ab6b1f8b349d84b", "keyword": "faceIconPath KUser::faceIconPath KUser", "text": "the path to the user s face file or QString() if no face has been set"}, {"type": "function", "name": "KUser::fullName", "url": "classKUser.html#a6b22f277c3e42aef350c1d4eea29583b", "keyword": "fullName KUser::fullName KUser", "text": "the full name of the user or QString() if user is invalid use property(KUser::FullName) instead"}, {"type": "function", "name": "KUser::gid", "url": "classKUser.html#a0b974efa847004b78aca890df1ac51c8", "keyword": "gid KUser::gid KUser", "text": "the id of the group or if user is invalid since 5.0 use KUser::groupId()"}, {"type": "function", "name": "KUser::groupId", "url": "classKUser.html#a2a4c5f4d078277d185a0fb56ed520159", "keyword": "groupId KUser::groupId KUser", "text": "the native user id of the user"}, {"type": "function", "name": "KUser::groupNames", "url": "classKUser.html#aa79dbc12bed585507baae72b213a4a7e", "keyword": "groupNames KUser::groupNames KUser", "text": "maxCount the maximum number of groups to return all group names of the user"}, {"type": "function", "name": "KUser::groups", "url": "classKUser.html#a45432d1566a266138106dd2e20dc5f83", "keyword": "groups KUser::groups KUser", "text": "maxCount the maximum number of groups to return all groups of the user"}, {"type": "function", "name": "KUser::homeDir", "url": "classKUser.html#a31a4e6fbe147bc04a49c370007819ede", "keyword": "homeDir KUser::homeDir KUser", "text": "the home directory of the user or QString() if the user is invalid"}, {"type": "function", "name": "KUser::isSuperUser", "url": "classKUser.html#ae2da3b175ca36b6782cecbb4867df81b", "keyword": "isSuperUser KUser::isSuperUser KUser", "text": "true if the user is root"}, {"type": "function", "name": "KUser::isValid", "url": "classKUser.html#ad2aae5fe28e4786e807508d65ea9c1c6", "keyword": "isValid KUser::isValid KUser", "text": "A KUser object can be invalid if you created it with an non-existing uid or name true if the user is valid"}, {"type": "function", "name": "KUser::loginName", "url": "classKUser.html#ac5143fdc256294a6573550cd5fc02cf6", "keyword": "loginName KUser::loginName KUser", "text": "the login name of the user or QString() if user is invalid"}, {"type": "function", "name": "KUser::operator!=", "url": "classKUser.html#a8116b16117e9863a7f041dac6ca7d045", "keyword": "operator!= KUser::operator!= KUser", "text": "Invalid users always compare unequal"}, {"type": "function", "name": "KUser::operator=", "url": "classKUser.html#ae785a281a5fda01d16e0b696a7a78bbb", "keyword": "operator= KUser::operator= KUser", "text": "user the user to copy this object"}, {"type": "function", "name": "KUser::operator==", "url": "classKUser.html#aa3eb21ca0102b1e827b55c42391f94cb", "keyword": "operator== KUser::operator== KUser", "text": "Invalid users never compare equal"}, {"type": "function", "name": "KUser::property", "url": "classKUser.html#a3cd96e7e0bcc7e8d84e490001f45783b", "keyword": "property KUser::property KUser", "text": "Under Windows RoomNumber WorkPhone and HomePhone are unsupported a QVariant with the value of the property or an invalid QVariant if the property is not set"}, {"type": "function", "name": "KUser::shell", "url": "classKUser.html#a579720548f16ed7e63826120a39dc543", "keyword": "shell KUser::shell KUser", "text": "the login shell of the user or QString() if the user is invalid"}, {"type": "function", "name": "KUser::uid", "url": "classKUser.html#a0c509d96b5e7fbeda6d39c2a395f9d01", "keyword": "uid KUser::uid KUser", "text": "the id of the user or UNIX null(Windows) if user is invalid since 5.0 use KUser::userId()"}, {"type": "function", "name": "KUser::userId", "url": "classKUser.html#aaea06d897eb004ea209bb80f6c59c120", "keyword": "userId KUser::userId KUser", "text": "the native user id of the user"}, {"type": "function", "name": "KUser::allUserNames", "url": "classKUser.html#af09c5b6850c1c65cf32db8b68e1d7d03", "keyword": "allUserNames KUser::allUserNames KUser", "text": "maxCount the maximum number of users to return all user names of the system"}, {"type": "function", "name": "KUser::allUsers", "url": "classKUser.html#ad66af3c15544ae252730c9d65c3957f2", "keyword": "allUsers KUser::allUsers KUser", "text": "maxCount the maximum number of users to return all users of the system"}, {"type": "class", "name": "KUserGroup", "url": "classKUserGroup.html", "keyword": "KUserGroup", "text": "This class represents a group on your system You can either get information about the group of the current user of fetch information about a group on the system Instances of this class will be explicitly shared so copying objects is very cheap and you can safely pass objects by value Jan Schaefer"}, {"type": "function", "name": "KUserGroup::KUserGroup", "url": "classKUserGroup.html#a94a7ced5eb9cf5fbc841fb9e563c53f9", "keyword": "KUserGroup KUserGroup::KUserGroup KUserGroup", "text": "If the group does not exist isValid() will return false name the name of the group"}, {"type": "function", "name": "KUserGroup::KUserGroup", "url": "classKUserGroup.html#abc5a5be5efce7d3d7a3016eb51112471", "keyword": "KUserGroup KUserGroup::KUserGroup KUserGroup", "text": "If the group does not exist isValid() will return false name the name of the group"}, {"type": "function", "name": "KUserGroup::KUserGroup", "url": "classKUserGroup.html#a7c0a32d4117cde0060ab73dee13c3180", "keyword": "KUserGroup KUserGroup::KUserGroup KUserGroup", "text": "If the KGroupId object is invalid this one will be too gid the group id"}, {"type": "function", "name": "KUserGroup::KUserGroup", "url": "classKUserGroup.html#a12ac7321c12932f8a5280d1eb1a0c2ad", "keyword": "KUserGroup KUserGroup::KUserGroup KUserGroup", "text": "mode if KUser::UseEffectiveUID is passed the effective user will be used If KUser::UseRealUserID is passed the real user will be used The real UID will be different than the effective UID in setuid programs in such a case use the effective UID for checking permissions and the real UID for displaying information about the group associated with the user"}, {"type": "function", "name": "KUserGroup::KUserGroup", "url": "classKUserGroup.html#a0c0b560fd5409427071d5c7649a0ce71", "keyword": "KUserGroup KUserGroup::KUserGroup KUserGroup", "text": "If the group does not exist isValid() will return false gid the group id"}, {"type": "function", "name": "KUserGroup::KUserGroup", "url": "classKUserGroup.html#a2a89ea5ef818762f122696aca3bbdbe7", "keyword": "KUserGroup KUserGroup::KUserGroup KUserGroup", "text": "If the pointer is null isValid() will return false g the group structure to create the group from"}, {"type": "function", "name": "KUserGroup::KUserGroup", "url": "classKUserGroup.html#a69c386cdbc21d466f9032c95a598e4b6", "keyword": "KUserGroup KUserGroup::KUserGroup KUserGroup", "text": "group the KUserGroup to copy"}, {"type": "function", "name": "KUserGroup::~KUserGroup", "url": "classKUserGroup.html#ad645181e83b12fb96b614bc825a411d2", "keyword": "KUserGroup::~KUserGroup KUserGroup", "text": ""}, {"type": "function", "name": "KUserGroup::gid", "url": "classKUserGroup.html#a018852a8da106e6efe937e702f93724f", "keyword": "gid KUserGroup::gid KUserGroup", "text": "the group id of the group or if the group is invalid since 5.0 use KUserGroup::groupId()"}, {"type": "function", "name": "KUserGroup::groupId", "url": "classKUserGroup.html#aa43be4faaef845fd607078dd57e7302a", "keyword": "groupId KUserGroup::groupId KUserGroup", "text": "the native group id of the user"}, {"type": "function", "name": "KUserGroup::isValid", "url": "classKUserGroup.html#a9b0a1e7aa556511873cee39032141e53", "keyword": "isValid KUserGroup::isValid KUserGroup", "text": "A KUserGroup object can be invalid if it is created with a non-existing gid or name true if the group is valid"}, {"type": "function", "name": "KUserGroup::name", "url": "classKUserGroup.html#a5e51687006c36e22a10800e0849bf668", "keyword": "name KUserGroup::name KUserGroup", "text": "the name of the group"}, {"type": "function", "name": "KUserGroup::operator!=", "url": "classKUserGroup.html#aa6b45f15870d189b41c74f38d925724c", "keyword": "operator!= KUserGroup::operator!= KUserGroup", "text": "Invalid groups always compare unequal true if the groups are not identical"}, {"type": "function", "name": "KUserGroup::operator=", "url": "classKUserGroup.html#ae957cdd6b41524bd333b31d3d02a8be3", "keyword": "operator= KUserGroup::operator= KUserGroup", "text": "group the group that should be copied this group"}, {"type": "function", "name": "KUserGroup::operator==", "url": "classKUserGroup.html#ab3344c8f384cfa97c1b654351f199dfc", "keyword": "operator== KUserGroup::operator== KUserGroup", "text": "Invalid groups never compare equal true if the groups are identical"}, {"type": "function", "name": "KUserGroup::userNames", "url": "classKUserGroup.html#a3d58f49a6dd27c05388a4385111658ed", "keyword": "userNames KUserGroup::userNames KUserGroup", "text": "maxCount the maximum number of groups to return a list of all user login names of the group"}, {"type": "function", "name": "KUserGroup::users", "url": "classKUserGroup.html#aab06ae6db18e9c78f0d64be237b83e2e", "keyword": "users KUserGroup::users KUserGroup", "text": "maxCount the maximum number of users to return a list of all users of the group"}, {"type": "function", "name": "KUserGroup::allGroupNames", "url": "classKUserGroup.html#ac747d18afb00a62c8285ee4feba4941b", "keyword": "allGroupNames KUserGroup::allGroupNames KUserGroup", "text": "maxCount the maximum number of groups to return a list of all group names on this system"}, {"type": "function", "name": "KUserGroup::allGroups", "url": "classKUserGroup.html#a5d85a00981b637416e6b9ebf569aa2ab", "keyword": "allGroups KUserGroup::allGroups KUserGroup", "text": "maxCount the maximum number of groups to return a list of all groups on this system"}, {"type": "struct", "name": "KUserId", "url": "structKUserId.html", "keyword": "KUserId", "text": "KUserOrGroupId 5.0 Alex Richardson"}, {"type": "function", "name": "KUserId::KUserId", "url": "structKUserId.html#a9a62f5edbc7125d127171b2b17d7e578", "keyword": "KUserId KUserId::KUserId KUserId", "text": ""}, {"type": "function", "name": "KUserId::KUserId", "url": "structKUserId.html#a9d07119937a22e4fb1046196dc8bd6ff", "keyword": "KUserId KUserId::KUserId KUserId", "text": ""}, {"type": "function", "name": "KUserId::currentEffectiveUserId", "url": "structKUserId.html#ac4f3393bd103a885f86a924f6c2ca0eb", "keyword": "currentEffectiveUserId KUserId::currentEffectiveUserId KUserId", "text": "a KUserId for the current effective user This is like on UNIX Windows does not have setuid binaries so on Windows this will always be the same as KUserId::currentUserId()"}, {"type": "function", "name": "KUserId::currentUserId", "url": "structKUserId.html#a8517f04aa5f805ee123a76240b977ee0", "keyword": "currentUserId KUserId::currentUserId KUserId", "text": "a KUserId for the current user This is like on UNIX"}, {"type": "function", "name": "KUserId::fromName", "url": "structKUserId.html#aab449efd423eb7bd1aa1735f8682f3bf", "keyword": "fromName KUserId::fromName KUserId", "text": "a KUserId for the user with name name or an invalid KUserId if no user with this name was found on the system"}, {"type": "struct", "name": "KUserOrGroupId", "url": "structKUserOrGroupId.html", "keyword": "KUserOrGroupId", "text": "This struct is required since Windows does not have an integer uid_t/gid_t type but instead uses an opaque binary blob SID which must free allocated memory On UNIX this is simply a uid_t/gid_t and all operations are inline so there is no runtime overhead over using the uid_t/gid_t directly On Windows this is an implicitly shared class that frees the underlying SID once no more references remain Unlike KUser/KUserGroup this does not query additional information it is simply an abstraction over the native user/group ID type If more information is necessary a KUser or KUserGroup instance can be constructed from this ID Alex Richardson"}, {"type": "class", "name": "KWordMacroExpander", "url": "classKWordMacroExpander.html", "keyword": "KWordMacroExpander", "text": "Use this instead of the functions in the KMacroExpander namespace if speculatively pre-filling the substitution map would be too expensive A typical application Alternatively MyClass could inherit from KWordMacroExpander directly Oswald Buddenhagen"}, {"type": "function", "name": "KWordMacroExpander::KWordMacroExpander", "url": "classKWordMacroExpander.html#a5cb84bb9efc7a69f71b77ad74de0ed14", "keyword": "KWordMacroExpander KWordMacroExpander::KWordMacroExpander KWordMacroExpander", "text": "c escape char indicating start of macros or QChar::null for none"}, {"type": "function", "name": "KWordMacroExpander::expandEscapedMacro", "url": "classKWordMacroExpander.html#a46a401dffd4ec5b093929df7d51ee2e9", "keyword": "expandEscapedMacro KWordMacroExpander::expandEscapedMacro KWordMacroExpander", "text": "Not to be called or reimplemented"}, {"type": "function", "name": "KWordMacroExpander::expandMacro", "url": "classKWordMacroExpander.html#abd8f19f38c8eca239ba2989310bd4674", "keyword": "expandMacro KWordMacroExpander::expandMacro KWordMacroExpander", "text": "str the macro to expand ret return variable reference It is guaranteed to be empty when expandMacro is entered true iff chr was a recognized macro name"}, {"type": "function", "name": "KWordMacroExpander::expandPlainMacro", "url": "classKWordMacroExpander.html#aa776feecca0b869070d4cbd78e7af15b", "keyword": "expandPlainMacro KWordMacroExpander::expandPlainMacro KWordMacroExpander", "text": "Not to be called or reimplemented"}, {"type": "namespace", "name": "KMacroExpander", "url": "namespaceKMacroExpander.html", "keyword": "KMacroExpander", "text": ""}, {"type": "function", "name": "KMacroExpander::expandMacros", "url": "namespaceKMacroExpander.html#a26809231ab3e3b5444bddaa4cf5a5935", "keyword": "expandMacros KMacroExpander::expandMacros KMacroExpander", "text": "The escape char must be quoted with itself to obtain its literal representation in the resulting string str The string to expand map map with substitutions c escape char indicating start of macro or QChar::null if none the string with all valid macros expanded"}, {"type": "function", "name": "KMacroExpander::expandMacros", "url": "namespaceKMacroExpander.html#a62456f8f453c6010deea16956332c91d", "keyword": "expandMacros KMacroExpander::expandMacros KMacroExpander", "text": "The escape char must be quoted with itself to obtain its literal representation in the resulting string Macro names can consist of chars in the range A-Za-z0-9_ use braces to delimit macros from following words starting with these chars or to use other chars for macro names str The string to expand map map with substitutions c escape char indicating start of macro or QChar::null if none the string with all valid macros expanded"}, {"type": "function", "name": "KMacroExpander::expandMacros", "url": "namespaceKMacroExpander.html#a1245c6b5218f206abb16323d1ab47a2c", "keyword": "expandMacros KMacroExpander::expandMacros KMacroExpander", "text": ""}, {"type": "function", "name": "KMacroExpander::expandMacrosShellQuote", "url": "namespaceKMacroExpander.html#a73a1897127bebf52d22b020742178219", "keyword": "expandMacrosShellQuote KMacroExpander::expandMacrosShellQuote KMacroExpander", "text": "The escape char must be quoted with itself to obtain its literal representation in the resulting string str The string to expand map map with substitutions c escape char indicating start of macro or QChar::null if none the string with all valid macros expanded or a null string if a shell syntax error was detected in the command"}, {"type": "function", "name": "KMacroExpander::expandMacrosShellQuote", "url": "namespaceKMacroExpander.html#a3238e5452160978eb5ba318f81ef2b70", "keyword": "expandMacrosShellQuote KMacroExpander::expandMacrosShellQuote KMacroExpander", "text": "See KMacroExpanderBase::expandMacrosShellQuote() for the exact semantics The escape char must be quoted with itself to obtain its literal representation in the resulting string Macro names can consist of chars in the range A-Za-z0-9_ use braces to delimit macros from following words starting with these chars or to use other chars for macro names str The string to expand map map with substitutions c escape char indicating start of macro or QChar::null if none the string with all valid macros expanded or a null string if a shell syntax error was detected in the command"}, {"type": "function", "name": "KMacroExpander::expandMacrosShellQuote", "url": "namespaceKMacroExpander.html#accf5b4a8dbb3b771c872d1276213bcb8", "keyword": "expandMacrosShellQuote KMacroExpander::expandMacrosShellQuote KMacroExpander", "text": "If the macro appears inside a quoted string the list is simply join ed together otherwise every element expands to a separate quoted string"}, {"type": "namespace", "name": "KMessage", "url": "namespaceKMessage.html", "keyword": "KMessage", "text": "This class does not define how to display a message it is just a clean interface for developers to use The job is done by the current KMessageHandler set in the class If no KMessageHandler is currently registered in KMessage the message will be outputed to stderr Use KMessage::setMessageHandler() to use a KMessageHandler Some KMessageHandler are already done such as KMessageBoxMessageHandler and KPassivePopupMessageHandler Micha\u00ebl Larouche"}, {"type": "enum", "name": "KMessage::MessageType", "url": "namespaceKMessage.html#a5aa3116d87fc525c7e093f9f2c0269da", "keyword": "MessageType KMessage::MessageType KMessage", "text": ""}, {"type": "enumvalue", "name": "KMessage::Error", "url": "namespaceKMessage.html#a5aa3116d87fc525c7e093f9f2c0269daaf06e453f8b184285214b694148a7b82a", "keyword": "Error KMessage::Error KMessage", "text": "Error message Display critical information that affect the behavior of the application"}, {"type": "enumvalue", "name": "KMessage::Information", "url": "namespaceKMessage.html#a5aa3116d87fc525c7e093f9f2c0269daa6dd731a7855ae90d4ae208bfafb43aca", "keyword": "Information KMessage::Information KMessage", "text": "Information message Display useful information to the user"}, {"type": "enumvalue", "name": "KMessage::Warning", "url": "namespaceKMessage.html#a5aa3116d87fc525c7e093f9f2c0269daa5c294ecd41ee2c61a4d1186c0df13178", "keyword": "Warning KMessage::Warning KMessage", "text": "Warning message Display a message that could affect the behavior of the application"}, {"type": "enumvalue", "name": "KMessage::Sorry", "url": "namespaceKMessage.html#a5aa3116d87fc525c7e093f9f2c0269daade639415cd2f9b9d052d8ed3202d5e9f", "keyword": "Sorry KMessage::Sorry KMessage", "text": "Sorry message Display a message explaining that a task couldn t be accomplished"}, {"type": "enumvalue", "name": "KMessage::Fatal", "url": "namespaceKMessage.html#a5aa3116d87fc525c7e093f9f2c0269daafc97b1c0c8972542a2d1c5eacfc759ef", "keyword": "Fatal KMessage::Fatal KMessage", "text": "Fatal message Display a message before the application fail and close itself"}, {"type": "function", "name": "KMessage::message", "url": "namespaceKMessage.html#a2f10e5966efbb9e992319a8d2c1c5307", "keyword": "message KMessage::message KMessage", "text": "A long message span on multiple lines and can have a caption messageType Currrent type of message See MessageType enum text Long message to be displayed caption Caption to be used This is optional"}, {"type": "function", "name": "KMessage::setMessageHandler", "url": "namespaceKMessage.html#a2ef28b5c7023b39b8aef413b20f92ed6", "keyword": "setMessageHandler KMessage::setMessageHandler KMessage", "text": "handler Instance of a real KMessageHandler This function isn t thread-safe You don t want to change the message handler during the program s execution anyways Do so only at start-up"}, {"type": "namespace", "name": "KRandom", "url": "namespaceKRandom.html", "keyword": "KRandom", "text": "This namespace provides methods which generate random data KRandom is not recommended for serious random-number generation needs like cryptography"}, {"type": "function", "name": "KRandom::random", "url": "namespaceKRandom.html#a4e3256aa33ae698204a602ae29fb8c64", "keyword": "random KRandom::random KRandom", "text": "A random number in the range 0 RAND_MAX The RNG is seeded on first use"}, {"type": "function", "name": "KRandom::randomString", "url": "namespaceKRandom.html#a80bfb2f72742481bf89b1b6f46486b92", "keyword": "randomString KRandom::randomString KRandom", "text": "It operates in the range A-Za-z0-9 length Generate a string of this length the random string"}, {"type": "namespace", "name": "KShell", "url": "namespaceKShell.html", "keyword": "KShell", "text": "KStringHandler"}, {"type": "enum", "name": "KShell::Errors", "url": "namespaceKShell.html#af6f8d4a40db8066bea4a36beb1c75c83", "keyword": "Errors KShell::Errors KShell", "text": ""}, {"type": "enumvalue", "name": "KShell::NoError", "url": "namespaceKShell.html#af6f8d4a40db8066bea4a36beb1c75c83abe054a8b4ea3d14a7c95dc5e374bdf7f", "keyword": "NoError KShell::NoError KShell", "text": "Success"}, {"type": "enumvalue", "name": "KShell::BadQuoting", "url": "namespaceKShell.html#af6f8d4a40db8066bea4a36beb1c75c83a2132d5231cbeb1c16f3f7f86b9c0abc5", "keyword": "BadQuoting KShell::BadQuoting KShell", "text": "Indicates a parsing error like an unterminated quoted string"}, {"type": "enumvalue", "name": "KShell::FoundMeta", "url": "namespaceKShell.html#af6f8d4a40db8066bea4a36beb1c75c83a63971c1823de094bb0a1cf0b0a9b4a2c", "keyword": "FoundMeta KShell::FoundMeta KShell", "text": "The AbortOnMeta flag was set and an unhandled shell meta character was encountered"}, {"type": "enum", "name": "KShell::Option", "url": "namespaceKShell.html#a92d7678cf9ce365ee64d7b7605d409d3", "keyword": "Option KShell::Option KShell", "text": ""}, {"type": "enumvalue", "name": "KShell::TildeExpand", "url": "namespaceKShell.html#a92d7678cf9ce365ee64d7b7605d409d3a2f94a11182b1568e2cacf006d86ca8ad", "keyword": "TildeExpand KShell::TildeExpand KShell", "text": "Perform tilde expansion On Windows this flag is ignored as the Windows shell has no equivalent functionality"}, {"type": "enumvalue", "name": "KShell::AbortOnMeta", "url": "namespaceKShell.html#a92d7678cf9ce365ee64d7b7605d409d3a370b199cf87b08725f99b132260ae062", "keyword": "AbortOnMeta KShell::AbortOnMeta KShell", "text": "Put the parser into full shell mode and bail out if a too complex construct is encountered A particular purpose of this flag is finding out whether the command line being split would be executable directly via KProcess::setProgram() or whether it needs to be run through a real shell via KProcess::setShellCommand() Note however that shell builtins are not recognized you need to do that yourself compare with a list of known commands or verify that an executable exists for the named command Meta characters that cause a bail-out are the command separators semicolon and ampersand the redirection symbols less-than greater-than and the pipe symbol and the grouping symbols opening and closing parentheses Further meta characters on are the grouping symbols opening and closing braces the command substitution symbol backquote the generic substitution symbol dollar if not followed by an apostrophe the wildcards asterisk question mark and opening and closing square brackets and the comment symbol hash mark Additionally a variable assignment in the first word is recognized A further meta character on Windows is the environment variable expansion symbol percent Occurrences of PERCENT_SIGN as inserted by quoteArg() are converted back and cause no bail-out though"}, {"type": "function", "name": "KShell::joinArgs", "url": "namespaceKShell.html#ad92ed56d00a678554dd04b0b1429760e", "keyword": "joinArgs KShell::joinArgs KShell", "text": "If the output is fed back into splitArgs() the AbortOnMeta flag needs to be used on Windows On no such requirement exists See quoteArg() for more info args a list of strings to quote and join a command suitable for shell execution"}, {"type": "function", "name": "KShell::quoteArg", "url": "namespaceKShell.html#a471161f0b7fb9b516932d2a9121c715b", "keyword": "quoteArg KShell::quoteArg KShell", "text": "This function can be used to quote an argument string such that the shell processes it properly This is e.g necessary for user-provided file names which may contain spaces or quotes It also prevents expansion of wild cards and environment variables On the output is POSIX shell compliant On Windows it is compliant with the argument splitting code of the Microsoft C runtime and the cmd shell used together Occurrences of the percent sign are replaced with PERCENT_SIGN to prevent spurious variable expansion related KDE functions are prepared for this arg the argument to quote the quoted argument"}, {"type": "function", "name": "KShell::splitArgs", "url": "namespaceKShell.html#a8d7c7dda510b29a6dfd7834a93f0a369", "keyword": "splitArgs KShell::splitArgs KShell", "text": "Can optionally perform tilde expansion and/or abort if it finds shell meta characters it cannot process On the behavior is based on the POSIX shell and bash Whitespace splits tokens The backslash quotes the following character A string enclosed in single quotes is not split No shell meta characters are interpreted A string enclosed in double quotes is not split Within the string the backslash quotes shell meta characters if it is followed by a character the backslash is output verbatim A string enclosed in is not split Within the string the backslash has a similar meaning to the one in C strings Consult the bash manual for more information On Windows the behavior is defined by the Microsoft C runtime Qt and many other implementations comply with this standard but many do not Whitespace splits tokens A string enclosed in double quotes is not split 2N double quotes within a quoted string yield N literal quotes This is not documented on MSDN Backslashes have special semantics iff they are followed by a double quote 2N backslashes double quote N backslashes and begin/end quoting 2N+1 backslashes double quote N backslashes literal quote If AbortOnMeta is used on Windows this function applies cmd shell semantics before proceeding with word splitting Cmd ignores all special chars between double quotes Note that the quotes are not removed at this stage the tokenization rules described above still apply The circumflex is the escape char for everything including itself cmd the command to split flags operation flags see Option err if not NULL a status code will be stored at the pointer target see Errors a list of unquoted words or an empty list if an error occurred"}, {"type": "function", "name": "KShell::tildeExpand", "url": "namespaceKShell.html#aee26c68c6634fee78266863f9fcf0efd", "keyword": "tildeExpand KShell::tildeExpand KShell", "text": "Interprets and If the path starts with an escaped tilde on UNIX on Windows the escape char is removed and the path is returned as is Note that if path starts with a tilde but cannot be properly expanded this function will return an empty string path the path to tilde-expand the expanded path"}, {"type": "namespace", "name": "KStringHandler", "url": "namespaceKStringHandler.html", "keyword": "KStringHandler", "text": "The functions here are intended to provide an easy way to cut/slice/splice words inside sentences in whatever order desired While the main focus of KStringHandler is words ie characters separated by spaces/tabs the two core functions here split() and join() will allow you to use any character as a separator This will make it easy to redefine what a word means in the future if needed The function names and calling styles are based on python and mIRC s scripting support The ranges are a fairly powerful way of getting/stripping words from a string These ranges function for the large part as they would in python See the word(const QString&, int) and remword(const QString&, int) functions for more detail The methods here are completely stateless All strings are cut on the fly and returned as new qstrings/qstringlists Namespace for manipulating words and sentences in strings Ian Zepp KShell"}, {"type": "function", "name": "KStringHandler::capwords", "url": "namespaceKStringHandler.html#af9182d35f0232e42079bc319def02c74", "keyword": "capwords KStringHandler::capwords KStringHandler", "text": "text the text to capitalize the resulting string"}, {"type": "function", "name": "KStringHandler::capwords", "url": "namespaceKStringHandler.html#aacf38a42b22df2959ff668d31a1614c3", "keyword": "capwords KStringHandler::capwords KStringHandler", "text": "list the list to capitalize the resulting list"}, {"type": "function", "name": "KStringHandler::csqueeze", "url": "namespaceKStringHandler.html#ab9032f75d3edf82a4561fdd4cf7b007a", "keyword": "csqueeze KStringHandler::csqueeze KStringHandler", "text": "str is the string to modify maxlen is the maximum length the modified string will have If the original string is shorter than it is returned verbatim the modified string"}, {"type": "function", "name": "KStringHandler::from8Bit", "url": "namespaceKStringHandler.html#a47e67c7f87de83c70a758ac72dda01f0", "keyword": "from8Bit KStringHandler::from8Bit KStringHandler", "text": "str the input string the hopefully correctly guessed QString representation of str KEncodingProber"}, {"type": "function", "name": "KStringHandler::isUtf8", "url": "namespaceKStringHandler.html#a91d20757430cf64f7703935a1a57b7d6", "keyword": "isUtf8 KStringHandler::isUtf8 KStringHandler", "text": "str the string to check true if UTF8 If false the string is probably in Local8Bit"}, {"type": "function", "name": "KStringHandler::lsqueeze", "url": "namespaceKStringHandler.html#a2bee19a8321cf58797887fdf702a3a3c", "keyword": "lsqueeze KStringHandler::lsqueeze KStringHandler", "text": "str is the string to modify maxlen is the maximum length the modified string will have If the original string is shorter than it is returned verbatim the modified string"}, {"type": "function", "name": "KStringHandler::obscure", "url": "namespaceKStringHandler.html#afa464f27b952f544619fd2059eab80b0", "keyword": "obscure KStringHandler::obscure KStringHandler", "text": "Applying the function to a string obscured by this function will result in the original string The function can be used to obscure passwords stored to configuration files Note that this won t give you any more security than preventing that the password is directly copied and pasted str string to be obscured obscured string"}, {"type": "function", "name": "KStringHandler::perlSplit", "url": "namespaceKStringHandler.html#a2f077f435642c2aae3548665453a5127", "keyword": "perlSplit KStringHandler::perlSplit KStringHandler", "text": "If max is specified 0 then only that number of tokens will be extracted The final token will be the remainder of the string Example sep is the string to use to delimit s s is the input string max is the maximum number of extractions to perform or 0 A QStringList containing tokens extracted from s"}, {"type": "function", "name": "KStringHandler::perlSplit", "url": "namespaceKStringHandler.html#a0630b3755b76bb0392a1e83f9f73a9f7", "keyword": "perlSplit KStringHandler::perlSplit KStringHandler", "text": "If max is specified 0 then only that number of tokens will be extracted The final token will be the remainder of the string Example sep is the character to use to delimit s s is the input string max is the maximum number of extractions to perform or 0 A QStringList containing tokens extracted from s"}, {"type": "function", "name": "KStringHandler::perlSplit", "url": "namespaceKStringHandler.html#a461008a9ac0b595bd87225acfe0fb1d7", "keyword": "perlSplit KStringHandler::perlSplit KStringHandler", "text": "If max is specified 0 then only that number of tokens will be extracted The final token will be the remainder of the string Example sep is the regular expression to use to delimit s s is the input string max is the maximum number of extractions to perform or 0 A QStringList containing tokens extracted from s"}, {"type": "function", "name": "KStringHandler::preProcessWrap", "url": "namespaceKStringHandler.html#a170ecf061f4880bc5dd595fde1ca0a0e", "keyword": "preProcessWrap KStringHandler::preProcessWrap KStringHandler", "text": "This is done by inserting ZWSP Zero-width space characters in the string at points that wouldn t normally be considered word boundaries by QTextLayout but where wrapping the text will produce good results Examples of such points includes after punctuation signs underscores and dashes that aren t followed by spaces 4.4"}, {"type": "function", "name": "KStringHandler::rsqueeze", "url": "namespaceKStringHandler.html#ab295c63fba80cc95fda53761ad8b5b59", "keyword": "rsqueeze KStringHandler::rsqueeze KStringHandler", "text": "str is the string to modify maxlen is the maximum length the modified string will have If the original string is shorter than it is returned verbatim the modified string"}, {"type": "function", "name": "KStringHandler::tagUrls", "url": "namespaceKStringHandler.html#a159a26842501b345bdc44550d59e2f27", "keyword": "tagUrls KStringHandler::tagUrls KStringHandler", "text": "text the string which may contain URLs the resulting text"}, {"type": "namespace", "name": "KTextToHTML", "url": "namespaceKTextToHTML.html", "keyword": "KTextToHTML", "text": "Dave Corrie"}, {"type": "enum", "name": "KTextToHTML::Option", "url": "namespaceKTextToHTML.html#a4c85544df01935145d4a2f5a2b62db65", "keyword": "Option KTextToHTML::Option KTextToHTML", "text": "5.5.0"}, {"type": "enumvalue", "name": "KTextToHTML::PreserveSpaces", "url": "namespaceKTextToHTML.html#a4c85544df01935145d4a2f5a2b62db65ad1dc95dc12f6cd3e8744a96e0d1e3646", "keyword": "PreserveSpaces KTextToHTML::PreserveSpaces KTextToHTML", "text": "Preserve white-space formatting of the text"}, {"type": "enumvalue", "name": "KTextToHTML::ReplaceSmileys", "url": "namespaceKTextToHTML.html#a4c85544df01935145d4a2f5a2b62db65a03e7760472b93177323e96e421ea5af4", "keyword": "ReplaceSmileys KTextToHTML::ReplaceSmileys KTextToHTML", "text": "Replace text emoticons smileys by emoticons images This option works only when KEmoticons framework is available at runtime and requires QGuiApplication otherwise the flag is simply ignored"}, {"type": "enumvalue", "name": "KTextToHTML::IgnoreUrls", "url": "namespaceKTextToHTML.html#a4c85544df01935145d4a2f5a2b62db65a0cfd24fbac6435a0f9e9ba68def65895", "keyword": "IgnoreUrls KTextToHTML::IgnoreUrls KTextToHTML", "text": "Don t parse and replace any URLs"}, {"type": "enumvalue", "name": "KTextToHTML::HighlightText", "url": "namespaceKTextToHTML.html#a4c85544df01935145d4a2f5a2b62db65a8b0b3953918b4c6fed5dc6328fc2cfca", "keyword": "HighlightText KTextToHTML::HighlightText KTextToHTML", "text": "Interpret text highlighting markup like bold underline and and wrap them in corresponding HTML entities"}, {"type": "function", "name": "KTextToHTML::convertToHtml", "url": "namespaceKTextToHTML.html#a1ebe61e15ba8fa32761487d76b1e56c2", "keyword": "convertToHtml KTextToHTML::convertToHtml KTextToHTML", "text": "The following characters are converted to HTML entities Newlines are also preserved plainText The text to be converted into HTML flags The flags to consider when processing plainText maxUrlLen The maximum length of permitted URLs The reason for this limit is that there may be possible security implications in handling URLs of unlimited length maxAddressLen The maximum length of permitted email addresses The reason for this limit is that there may be possible security implications in handling addresses of unlimited length An HTML version of the text supplied in the plainText parameter suitable for inclusion in the BODY of an HTML document 5.5.0"}, {"type": "namespace", "name": "KUrlMimeData", "url": "namespaceKUrlMimeData.html", "keyword": "KUrlMimeData", "text": "In addition to QMimeData::setUrls() and QMimeData::urls() these functions allow to Store two sets of URLs the KDE-specific URLs and the equivalent local-file URLs for compatibility with non-KDE applications Store KIO metadata such as the HTTP referrer for a given URL some websites require it for downloading e.g an image 5.0"}, {"type": "enum", "name": "KUrlMimeData::DecodeOptions", "url": "namespaceKUrlMimeData.html#ad13baa49cd27a64c038a6609a4800301", "keyword": "DecodeOptions KUrlMimeData::DecodeOptions KUrlMimeData", "text": ""}, {"type": "enumvalue", "name": "KUrlMimeData::PreferLocalUrls", "url": "namespaceKUrlMimeData.html#ad13baa49cd27a64c038a6609a4800301a845c47f6f65676fd0fce041bdf93bc5a", "keyword": "PreferLocalUrls KUrlMimeData::PreferLocalUrls KUrlMimeData", "text": "When the mimedata contains both KDE-style URLs eg desktop and the version of the URLs eg decode it as local urls Useful in paste/drop operations that end up calling KIO so that urls from other users work as well"}, {"type": "enumvalue", "name": "KUrlMimeData::PreferKdeUrls", "url": "namespaceKUrlMimeData.html#ad13baa49cd27a64c038a6609a4800301a29d2ec5bc41fe7e545eedaec80a0a324", "keyword": "PreferKdeUrls KUrlMimeData::PreferKdeUrls KUrlMimeData", "text": "When the mimedata contains both KDE-style URLs eg desktop and the version of the URLs eg decode it as the KDE-style URL Useful in DnD code e.g when moving icons and the kde-style url is used as identifier for the icons"}, {"type": "function", "name": "KUrlMimeData::mimeDataTypes", "url": "namespaceKUrlMimeData.html#a4093143726ced351371adf4f59e2ecdb", "keyword": "mimeDataTypes KUrlMimeData::mimeDataTypes KUrlMimeData", "text": ""}, {"type": "function", "name": "KUrlMimeData::setMetaData", "url": "namespaceKUrlMimeData.html#a3e12d202e68fd1cab75d14a769606dfd", "keyword": "setMetaData KUrlMimeData::setMetaData KUrlMimeData", "text": "metaData KIO metadata shipped in the mime data which is used for instance to set a correct HTTP referrer some websites require it for downloading e.g an image"}, {"type": "function", "name": "KUrlMimeData::setUrls", "url": "namespaceKUrlMimeData.html#a0ac0d53cde49e31d245e78b035eabc50", "keyword": "setUrls KUrlMimeData::setUrls KUrlMimeData", "text": "WARNING do not call this method multiple times on the same mimedata object you can add urls only once But you can add other things e.g images XML mimeData the QMimeData instance used to drag or copy this URL"}, {"type": "function", "name": "KUrlMimeData::urlsFromMimeData", "url": "namespaceKUrlMimeData.html#a74bd3fc78527911c24b9fd769368aed1", "keyword": "urlsFromMimeData KUrlMimeData::urlsFromMimeData KUrlMimeData", "text": "Compared to QMimeData::urls() this method has support for retrieving KDE-specific URLs when urls() would retrieve instead Decoding will fail if mimeData does not contain any URLs or if at least one extracted URL is not valid mimeData the mime data to extract from cannot be 0 decodeOptions options for decoding metaData optional pointer to a map which will hold the metadata after this call the list of urls"}, {"type": "page", "name": "index", "url": "index.html", "keyword": null, "text": "KCoreAddons Qt addon library with a collection of non-GUI utilities Introduction KCoreAddons provides classes built on top of QtCore to perform various tasks such as manipulating mime types autosaving files creating backup files generating random sequences performing text manipulations such as macro replacement accessing user information and many more"}]}