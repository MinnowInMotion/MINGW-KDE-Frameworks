<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="class">
    <name>KSelectionOwner</name>
    <filename>classKSelectionOwner.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>claimedOwnership</name>
      <anchorfile>classKSelectionOwner.html</anchorfile>
      <anchor>a850f95606e259ec5782a34dee81151d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>failedToClaimOwnership</name>
      <anchorfile>classKSelectionOwner.html</anchorfile>
      <anchor>a587d9e43f65da3743bca98b3194628d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>lostOwnership</name>
      <anchorfile>classKSelectionOwner.html</anchorfile>
      <anchor>ab8ce76fb9a643416242ba45420c8b260</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KSelectionOwner</name>
      <anchorfile>classKSelectionOwner.html</anchorfile>
      <anchor>a9ba1fbe497e7bec7f8e5cc9003134bd7</anchor>
      <arglist>(xcb_atom_t selection, int screen=-1, QObject *parent=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KSelectionOwner</name>
      <anchorfile>classKSelectionOwner.html</anchorfile>
      <anchor>a46cd860a3e62f3599bc37b483eecfefc</anchor>
      <arglist>(const char *selection, int screen=-1, QObject *parent=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KSelectionOwner</name>
      <anchorfile>classKSelectionOwner.html</anchorfile>
      <anchor>a50f2c2bf5fbdad7b7c6ee4cb886e703a</anchor>
      <arglist>(xcb_atom_t selection, xcb_connection_t *c, xcb_window_t root, QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KSelectionOwner</name>
      <anchorfile>classKSelectionOwner.html</anchorfile>
      <anchor>a2583b55cc0c30c7e4feb0c485757bd29</anchor>
      <arglist>(const char *selection, xcb_connection_t *c, xcb_window_t root, QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KSelectionOwner</name>
      <anchorfile>classKSelectionOwner.html</anchorfile>
      <anchor>a15673162d1adae28e855bc9d8c2691ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>claim</name>
      <anchorfile>classKSelectionOwner.html</anchorfile>
      <anchor>aae7de74271def7cfb3075b69eecbb5c2</anchor>
      <arglist>(bool force, bool force_kill=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>filterEvent</name>
      <anchorfile>classKSelectionOwner.html</anchorfile>
      <anchor>ae1abaab1b03179ed7a6e59fd4660f6ca</anchor>
      <arglist>(void *ev_P)</arglist>
    </member>
    <member kind="function">
      <type>xcb_window_t</type>
      <name>ownerWindow</name>
      <anchorfile>classKSelectionOwner.html</anchorfile>
      <anchor>a4070624e3733be27195f4e34b2e66880</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release</name>
      <anchorfile>classKSelectionOwner.html</anchorfile>
      <anchor>a209f6993ec407d44c5c363c3b75558a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerEvent</name>
      <anchorfile>classKSelectionOwner.html</anchorfile>
      <anchor>a5eadd8947302aea87abcfd5b7345cc10</anchor>
      <arglist>(QTimerEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>genericReply</name>
      <anchorfile>classKSelectionOwner.html</anchorfile>
      <anchor>a0ede03a255665f463fef6b2c5eae3eae</anchor>
      <arglist>(xcb_atom_t target, xcb_atom_t property, xcb_window_t requestor)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getAtoms</name>
      <anchorfile>classKSelectionOwner.html</anchorfile>
      <anchor>aba05e98469b6178d4aca6c518f8596a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>replyTargets</name>
      <anchorfile>classKSelectionOwner.html</anchorfile>
      <anchor>ae56f45844958115800d8a34015294b89</anchor>
      <arglist>(xcb_atom_t property, xcb_window_t requestor)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classKSelectionOwner.html</anchorfile>
      <anchor>a23943c7a17a0452a6dfb61708f680c57</anchor>
      <arglist>(uint32_t extra1, uint32_t extra2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KSelectionWatcher</name>
    <filename>classKSelectionWatcher.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>lostOwner</name>
      <anchorfile>classKSelectionWatcher.html</anchorfile>
      <anchor>aca52c5ecffb48923807f6aa79eebe11b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>newOwner</name>
      <anchorfile>classKSelectionWatcher.html</anchorfile>
      <anchor>a1a881308a9a3adde593ef16044907f0e</anchor>
      <arglist>(xcb_window_t owner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KSelectionWatcher</name>
      <anchorfile>classKSelectionWatcher.html</anchorfile>
      <anchor>acf708d83e63f2a22bed3218459358fb2</anchor>
      <arglist>(xcb_atom_t selection, int screen=-1, QObject *parent=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KSelectionWatcher</name>
      <anchorfile>classKSelectionWatcher.html</anchorfile>
      <anchor>ae4cab470a9133063db2b7118a552d406</anchor>
      <arglist>(const char *selection, int screen=-1, QObject *parent=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KSelectionWatcher</name>
      <anchorfile>classKSelectionWatcher.html</anchorfile>
      <anchor>ae816d65596d60f37dbeea798d48a5e27</anchor>
      <arglist>(xcb_atom_t selection, xcb_connection_t *c, xcb_window_t root, QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KSelectionWatcher</name>
      <anchorfile>classKSelectionWatcher.html</anchorfile>
      <anchor>a09cd63e700cd01ba5f04f2374ee8209f</anchor>
      <arglist>(const char *selection, xcb_connection_t *c, xcb_window_t root, QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>filterEvent</name>
      <anchorfile>classKSelectionWatcher.html</anchorfile>
      <anchor>a6834171daf84f90e055514ecb9102d2f</anchor>
      <arglist>(void *ev_P)</arglist>
    </member>
    <member kind="function">
      <type>xcb_window_t</type>
      <name>owner</name>
      <anchorfile>classKSelectionWatcher.html</anchorfile>
      <anchor>a38fb4d7370bf7aeca691a676e292e76c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KStartupInfo</name>
    <filename>classKStartupInfo.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>startup_t</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a14ff94e935414facd7bea4177eb15843</anchor>
      <arglist></arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>gotNewStartup</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>ac29b6cd75f0bdccd369c154ccec3a151</anchor>
      <arglist>(const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>gotRemoveStartup</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>ab9787fe944af2b30199be271603300d3</anchor>
      <arglist>(const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>gotStartupChange</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>ac1855325159c211974108c8ae8a20be4</anchor>
      <arglist>(const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KStartupInfo</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>af2a53237d3ab8da943acab51e5387105</anchor>
      <arglist>(int flags, QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>KWINDOWSYSTEM_DEPRECATED</type>
      <name>KStartupInfo</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>ac6c746f4d2985e3f2ba025390e032682</anchor>
      <arglist>(bool clean_on_cantdetect, QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>startup_t</type>
      <name>checkStartup</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a61c33eed3ee1f4d69cfb5060f7e508e6</anchor>
      <arglist>(WId w)</arglist>
    </member>
    <member kind="function">
      <type>startup_t</type>
      <name>checkStartup</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>aad51fa046e21cced1f4a91b2417e56ce</anchor>
      <arglist>(WId w, KStartupInfoId &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>startup_t</type>
      <name>checkStartup</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a4cfb827f30b159551567af8ed0d350af</anchor>
      <arglist>(WId w, KStartupInfoData &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>startup_t</type>
      <name>checkStartup</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a05213eec48eba279c0ac25db55107dd3</anchor>
      <arglist>(WId w, KStartupInfoId &amp;id, KStartupInfoData &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeout</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a032993d3c40202e63745c4aebb9f642d</anchor>
      <arglist>(unsigned int secs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>appStarted</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a24a4ac3828a06c65af8090d48a49e5d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>appStarted</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>aab7534b0cad55284ff055442952c64ab</anchor>
      <arglist>(const QByteArray &amp;startup_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QByteArray</type>
      <name>createNewStartupId</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>afaa020835e66680c117747c8ad313ace</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QByteArray</type>
      <name>createNewStartupIdForTimestamp</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a9ac981279a3a7a3d87ae4a917a5a8ac8</anchor>
      <arglist>(quint32 timestamp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KStartupInfoId</type>
      <name>currentStartupIdEnv</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>ad0eb915555d8c3d984bde4b32406387e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>resetStartupEnv</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a8e8cfdb428f0e74c915d5577fb0dfe10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>sendChange</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a6dd6155a22a516f6f84eab701f115dc1</anchor>
      <arglist>(const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KWINDOWSYSTEM_DEPRECATED bool</type>
      <name>sendChangeX</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a8a1e24c1d875f70c0dffc21aff246b0b</anchor>
      <arglist>(Display *dpy, const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>sendChangeXcb</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>aa19be0587024f62ebf3e7d1dfebce853</anchor>
      <arglist>(xcb_connection_t *conn, int screen, const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>sendFinish</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>ad91e250a9fa439d2fc95299e68e3a4bd</anchor>
      <arglist>(const KStartupInfoId &amp;id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>sendFinish</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a30d700c99705bf17888769e80fd175e6</anchor>
      <arglist>(const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KWINDOWSYSTEM_DEPRECATED bool</type>
      <name>sendFinishX</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>aad4f7c3403919e32ab55a418d408649e</anchor>
      <arglist>(Display *dpy, const KStartupInfoId &amp;id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KWINDOWSYSTEM_DEPRECATED bool</type>
      <name>sendFinishX</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a1e003438b913cf0f2696b76917b45104</anchor>
      <arglist>(Display *dpy, const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>sendFinishXcb</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>adb81d1aae0254d760b9690e131f46953</anchor>
      <arglist>(xcb_connection_t *conn, int screen, const KStartupInfoId &amp;id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>sendFinishXcb</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a409f88737d27a05eca43f1e90dab196e</anchor>
      <arglist>(xcb_connection_t *conn, int screen, const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>sendStartup</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a617accc81738e76713bbd3956ddec9b2</anchor>
      <arglist>(const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KWINDOWSYSTEM_DEPRECATED bool</type>
      <name>sendStartupX</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a3f29c95250e817abb314196612b4ed25</anchor>
      <arglist>(Display *dpy, const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>sendStartupXcb</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a759c076313d219487aeddff6158afad8</anchor>
      <arglist>(xcb_connection_t *conn, int screen, const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setNewStartupId</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a3cee4fc464df9f18276d98609ebf1df1</anchor>
      <arglist>(QWidget *window, const QByteArray &amp;startup_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setStartupId</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>acd274ab683025f22236d2b84b4a4f31b</anchor>
      <arglist>(const QByteArray &amp;startup_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setWindowStartupId</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a819a12e54346d8be814a914d7d3874be</anchor>
      <arglist>(WId window, const QByteArray &amp;id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>silenceStartup</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>af919bb5570da1e00457746b6f4aa1512</anchor>
      <arglist>(bool silence)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QByteArray</type>
      <name>startupId</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>adde69db7956c38bc9ed967e9c3a53def</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QByteArray</type>
      <name>windowStartupId</name>
      <anchorfile>classKStartupInfo.html</anchorfile>
      <anchor>a67aea070b0f1e62bb94ffab41a21f17f</anchor>
      <arglist>(WId w)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KStartupInfoData</name>
    <filename>classKStartupInfoData.html</filename>
    <member kind="function">
      <type></type>
      <name>KStartupInfoData</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a9edda3b026a9a378d6135dd30d15ff8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KStartupInfoData</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a338d92816a97f5e7dbfff0ff764c030c</anchor>
      <arglist>(const KStartupInfoData &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPid</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a56c615764a16ff59f0c7c9c959541f01</anchor>
      <arglist>(pid_t pid)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>applicationId</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a38d4c2b67c08834599063981c5b13244</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>bin</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a56ad26342e192054a6a2763a3fca4fe5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>description</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a0df7d1584a815bb94044feacf19721d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>desktop</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>ad5d3ebf5fd09a7d044f91dc99af6b852</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>findDescription</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a01d06ae1051b0c9df0416a79b5413e09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>findIcon</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a4317bc047f2ca0500dfd7b06f2e15c7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>findName</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>afae41a4879cc46ba2a1a62d1cf293a33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const QByteArray</type>
      <name>findWMClass</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>ab8af773df3b00e6aaff08a887ee88e9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>hostname</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>ad214b03eb80e723371f790b40378735d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>icon</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>ab71155cf06e00922a4b0d5d085e675da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_pid</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>ac8e1174148071589e7d9b0563b4a8dfa</anchor>
      <arglist>(pid_t pid) const</arglist>
    </member>
    <member kind="function">
      <type>WId</type>
      <name>launchedBy</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a5dcbf9ac0d61500d7e2f58cc679daa8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>name</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a56acb5aa1abf867fd5424b13f6954931</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; pid_t &gt;</type>
      <name>pids</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a563eb5182a230eca07c63e1539bd757e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>screen</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a7846757b83742d9dd58876f2b4e78807</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setApplicationId</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>ae259c826f465e01264d38d419e086c2c</anchor>
      <arglist>(const QString &amp;desktop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBin</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a8e60c173fae73691b1e3a1da73700fe2</anchor>
      <arglist>(const QString &amp;bin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDescription</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a9fb7724d3c359562c7d9494c673d7935</anchor>
      <arglist>(const QString &amp;descr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDesktop</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a3500a60366743243e99395f2b238c55b</anchor>
      <arglist>(int desktop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHostname</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a20413af8c5ac69e93990a26fd9f587f2</anchor>
      <arglist>(const QByteArray &amp;hostname=QByteArray())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a816dc1cf00e28d5eee3b791c8f5671e3</anchor>
      <arglist>(const QString &amp;icon)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLaunchedBy</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a64b3ca4dbf552fc6cfd64c5073955a0d</anchor>
      <arglist>(WId window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a588b6ca52626ba82745b88a93bd49095</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScreen</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>aec44e055c5fc59e423c0570322daf54a</anchor>
      <arglist>(int screen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSilent</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>ac7ff8e4196cd31399cc2cd595a373e2e</anchor>
      <arglist>(TriState state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWMClass</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a7864480d3e4e7cee7bae4ead7d832ec7</anchor>
      <arglist>(const QByteArray &amp;wmclass)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXinerama</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a60cb9fb47133a98ee58ea43df3eed95c</anchor>
      <arglist>(int xinerama)</arglist>
    </member>
    <member kind="function">
      <type>TriState</type>
      <name>silent</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a2b77d6c80498bee93e30f81274a6c6f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a1d53526c146286cf41b8345424863c28</anchor>
      <arglist>(const KStartupInfoData &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>WMClass</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a1b9c5deec86c39b7ebe91c5fd30bcd0a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>xinerama</name>
      <anchorfile>classKStartupInfoData.html</anchorfile>
      <anchor>a87e6e506c45ff8e2c43ad38d7654e534</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KStartupInfoId</name>
    <filename>classKStartupInfoId.html</filename>
    <member kind="function">
      <type></type>
      <name>KStartupInfoId</name>
      <anchorfile>classKStartupInfoId.html</anchorfile>
      <anchor>a3f69c9d94b4dfd25a1483cb0a215dde0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KStartupInfoId</name>
      <anchorfile>classKStartupInfoId.html</anchorfile>
      <anchor>a8e9b3d0ad3d3682757bc361ea1115789</anchor>
      <arglist>(const KStartupInfoId &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>const QByteArray &amp;</type>
      <name>id</name>
      <anchorfile>classKStartupInfoId.html</anchorfile>
      <anchor>ace2c7bae0af21240c4d8ff051c2d2a9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initId</name>
      <anchorfile>classKStartupInfoId.html</anchorfile>
      <anchor>a045a22f63825a7c822986b0845ba382d</anchor>
      <arglist>(const QByteArray &amp;id=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classKStartupInfoId.html</anchorfile>
      <anchor>a2f224b13339629f01c60118221c462c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classKStartupInfoId.html</anchorfile>
      <anchor>a8b4f6744e05d2153f8cb4b71d6ebeabf</anchor>
      <arglist>(const KStartupInfoId &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classKStartupInfoId.html</anchorfile>
      <anchor>aa915963c1662df06399a48485d6f444d</anchor>
      <arglist>(const KStartupInfoId &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setupStartupEnv</name>
      <anchorfile>classKStartupInfoId.html</anchorfile>
      <anchor>a287905c62ddda413f3833d9eadd63cb2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>timestamp</name>
      <anchorfile>classKStartupInfoId.html</anchorfile>
      <anchor>a3144702f80c23fbc3f19f2c242684593</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KWindowInfo</name>
    <filename>classKWindowInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>KWindowInfo</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>adc84f679cb7e41a6d8162aec269b5d1c</anchor>
      <arglist>(WId window, NET::Properties properties, NET::Properties2 properties2=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KWindowInfo</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>a705ac028602f1fe7ed38567bb71d3688</anchor>
      <arglist>(const KWindowInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>actionSupported</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>a68ec3e0dc25380ce64dfe1c52b2e116a</anchor>
      <arglist>(NET::Action action) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>activities</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>aea17f97765e326e1714a36c9788a54b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>clientMachine</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>aed9f10e12e08ae0cc1968583002d322d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>desktop</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>ae03a929a10f29d4ccce69e688b3fa7ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NETExtendedStrut</type>
      <name>extendedStrut</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>a40a5b7dabca5ea6ab4f9ac9ae4d27ac1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QRect</type>
      <name>frameGeometry</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>ae8c23daf062a483ac3a6ec553470d8c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QRect</type>
      <name>geometry</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>ac5670640b20828266c07286b70829dc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WId</type>
      <name>groupLeader</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>abfdd340d7324bcf88d025a55a3a37690</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasState</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>aa4707b17298ab0973c9b8dac7ed36f1b</anchor>
      <arglist>(NET::States s) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>iconName</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>a2ee6ce92e378eb8789cec17ab8b17641</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMinimized</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>a4be2fef752258d396af6104d271a88b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOnCurrentDesktop</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>a89434dbcf60ce201c0c46573980134dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOnDesktop</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>a9dde0a0631cac332fe96b95cfa8d8d50</anchor>
      <arglist>(int desktop) const</arglist>
    </member>
    <member kind="function">
      <type>NET::MappingState</type>
      <name>mappingState</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>ae720a1e8679a1adfc02b927b0037b0c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>afc6f59d43d679a5fa8f560170c879c28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>onAllDesktops</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>ac224751c24789d922725b6c50085da6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>KWindowInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>ab5374fc1a7a8198efd737de8cbc9a681</anchor>
      <arglist>(const KWindowInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type>NET::States</type>
      <name>state</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>a48bbaefcad809f73568ba6969571e3eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WId</type>
      <name>transientFor</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>aad98ddb3d808cec12f3499d216d85736</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>a58c5456a62f368141345398f4dfc1570</anchor>
      <arglist>(bool withdrawn_is_valid=false) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>visibleIconName</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>ab7291dae67367b69f5fb0bd1f8a32875</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>visibleIconNameWithState</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>a7bafc600d62b801e3e3ea13ea1d32fe6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>visibleName</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>a53ae7f64eee6096141799f443bd081f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>visibleNameWithState</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>a9163b91f7face2e5e13b6e882e5536f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WId</type>
      <name>win</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>a9e4c106503288083d159992cadd5b21b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>windowClassClass</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>ae16f46d1ba6520a3936db54287a4ba86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>windowClassName</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>a7083f26c428038e42abd4e4519a06dd7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>windowRole</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>a78798a3ef2dea881734c4030cadf6421</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NET::WindowType</type>
      <name>windowType</name>
      <anchorfile>classKWindowInfo.html</anchorfile>
      <anchor>acc1d8c4ef5646fd4146ae6d5b6b68805</anchor>
      <arglist>(NET::WindowTypes supported_types) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KWindowSystem</name>
    <filename>classKWindowSystem.html</filename>
    <base>NET</base>
    <member kind="enumvalue">
      <name>ClassHint</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a86168b00f991cee85271c8b69e0a77f7a393e0a4fb3ec498116064e228a840682</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IconSource</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a86168b00f991cee85271c8b69e0a77f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NETWM</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a86168b00f991cee85271c8b69e0a77f7a6cc04cbba240aefd9ee3a035ad93ea6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WMHints</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a86168b00f991cee85271c8b69e0a77f7aa1b0d90d4e2db239a19b0b61ec06436c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ClassHint</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a86168b00f991cee85271c8b69e0a77f7a393e0a4fb3ec498116064e228a840682</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XApp</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a86168b00f991cee85271c8b69e0a77f7abde190c2ccb6883e088e265301b501f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NETWM</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a86168b00f991cee85271c8b69e0a77f7a6cc04cbba240aefd9ee3a035ad93ea6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Platform</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>afc13d8221eb73625f708554f786cd6e7</anchor>
      <arglist></arglist>
      <enumvalue file="classKWindowSystem.html" anchor="afc13d8221eb73625f708554f786cd6e7a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
      <enumvalue file="classKWindowSystem.html" anchor="afc13d8221eb73625f708554f786cd6e7ad21ab1ce30c9c7735c0591317f50ab85">X11</enumvalue>
      <enumvalue file="classKWindowSystem.html" anchor="afc13d8221eb73625f708554f786cd6e7abd9c6c9ca372721e187caeb1654b4209">Wayland</enumvalue>
    </member>
    <member kind="enumvalue">
      <name>WMHints</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a86168b00f991cee85271c8b69e0a77f7aa1b0d90d4e2db239a19b0b61ec06436c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XApp</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a86168b00f991cee85271c8b69e0a77f7abde190c2ccb6883e088e265301b501f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>activeWindowChanged</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>adb83e45593ca6703576983d7daad08ce</anchor>
      <arglist>(WId id)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>compositingChanged</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a316fc199557d20dd187081070efddb82</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>currentDesktopChanged</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a5ff0c02733368f3bacb05ea30a26ff87</anchor>
      <arglist>(int desktop)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>desktopNamesChanged</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a109eab9d2965462aad4e2c241738996f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>numberOfDesktopsChanged</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a30c446352309a2957d47e27e296f422c</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>showingDesktopChanged</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a6d97985ef9d827e44b978751d860bdf6</anchor>
      <arglist>(bool showing)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>stackingOrderChanged</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a067998d6a47bad2ccdd2ea129b434312</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>strutChanged</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a2a44b678bd812e2dbd34c80759a24e81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>windowAdded</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>acc8645a889810325a9ab6dbaf0b22935</anchor>
      <arglist>(WId id)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>windowChanged</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a7e8bde429a1be905fccd00644a4614ca</anchor>
      <arglist>(WId id, NET::Properties properties, NET::Properties2 properties2)</arglist>
    </member>
    <member kind="signal">
      <type>QT_MOC_COMPAT void</type>
      <name>windowChanged</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>ac8d368d83fa5e137f38e7c885d9a18ce</anchor>
      <arglist>(WId id, const unsigned long *properties)</arglist>
    </member>
    <member kind="signal">
      <type>QT_MOC_COMPAT void</type>
      <name>windowChanged</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>afcbd835f78080bd94cb78fe754d08a49</anchor>
      <arglist>(WId id, unsigned int properties)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>windowChanged</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>aa3c6faf243ef8faa9fb0d9c98bc5ca25</anchor>
      <arglist>(WId id)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>windowRemoved</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>af112465c2202a0f93f08f0e9d67e9e69</anchor>
      <arglist>(WId id)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>workAreaChanged</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a8dc32dbad47905c847b940ccbda50c12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>activateWindow</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a7a04fd62d97ed3104e02bfa3ffa19ad5</anchor>
      <arglist>(WId win, long time=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WId</type>
      <name>activeWindow</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>ad905b23d7d88d9400915e1827d04d374</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>allowedActionsSupported</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a2d98510eb8aa7c5f23db31503fd7fcce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>allowExternalProcessWindowActivation</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a432d8f7835db2fae46b40d705f1a700a</anchor>
      <arglist>(int pid=-1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>clearState</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a3a2c28ca8a49efe2c628a04f754e4c86</anchor>
      <arglist>(WId win, NET::States state)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>compositingActive</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a8693714dc9f40b337fa6b63896e25d78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QPoint</type>
      <name>constrainViewportRelativePosition</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>afe508447b01a6c57365dc4b1d8601fed</anchor>
      <arglist>(const QPoint &amp;pos)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>currentDesktop</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a84a94ec21041033d30e5895c9a8a4baa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>demandAttention</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>af5e5085d1a4433701df8b9c0b00d6a5a</anchor>
      <arglist>(WId win, bool set=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>desktopName</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>ab8b7b5a354bfa9673ad3ed74546f424a</anchor>
      <arglist>(int desktop)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QPoint</type>
      <name>desktopToViewport</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a917aa40d1a98aa4796e2497d207e9dad</anchor>
      <arglist>(int desktop, bool absolute)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>forceActiveWindow</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>aecb213d950a6615fc0e961273d72e166</anchor>
      <arglist>(WId win, long time=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KWINDOWSYSTEM_DEPRECATED WId</type>
      <name>groupLeader</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>acd12c88b68d2aac23408f5232d3a4469</anchor>
      <arglist>(WId window)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasWId</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a797ecb85728494f897c2213cc548bbf7</anchor>
      <arglist>(WId id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>icccmCompliantMappingState</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>ab7bb94e4a51b6247498c33d6de01cd0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QPixmap</type>
      <name>icon</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>ad822d5468187d4c7095e2568ab7d8138</anchor>
      <arglist>(WId win, int width=-1, int height=-1, bool scale=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QPixmap</type>
      <name>icon</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a41724bd8b503b2fb6049b0ba46da37bf</anchor>
      <arglist>(WId win, int width, int height, bool scale, int flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QPixmap</type>
      <name>icon</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a51e5aaced114eb7f33d25672e42013d8</anchor>
      <arglist>(WId win, int width, int height, bool scale, int flags, NETWinInfo *info)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isPlatformWayland</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a7c826b0c25ed36fb3d07dd5cff3b9ff9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isPlatformX11</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a2a1f999a03807eb828f279b72e507066</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>lowerWindow</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>aff6abc7bd5c456a33409487952e9456e</anchor>
      <arglist>(WId win)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>mapViewport</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a48f67899f9f8d4a3e76c81cbb68ebe1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>minimizeWindow</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>ad02330a42dc2ab70f44a3029309fd909</anchor>
      <arglist>(WId win)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>minimizeWindow</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a86316291677ef881c88cefb9b971ae3e</anchor>
      <arglist>(WId win, bool animation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>numberOfDesktops</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>aed809b7c1d2beeae7bb6ff3e63563ef5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Platform</type>
      <name>platform</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>ae9f7971618790b50cf64af09cc0d7d7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>raiseWindow</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>afcc586f92b6d7e3a01453713b6f633d5</anchor>
      <arglist>(WId win)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>readNameProperty</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a9446ca20d00b16cfeffb9eb9c798ccd6</anchor>
      <arglist>(WId window, unsigned long atom)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KWindowSystem *</type>
      <name>self</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>af6ca1136d4f7f25f94b0568d9e596572</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBlockingCompositing</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a77a2e23da581d69bbd80387306eafc10</anchor>
      <arglist>(WId window, bool active)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setCurrentDesktop</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>ad390e52c8dd6331b89a5a9f372435129</anchor>
      <arglist>(int desktop)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDesktopName</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a2cc00668de9eb13084c2f8eb480f097f</anchor>
      <arglist>(int desktop, const QString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setExtendedStrut</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a669469a6738ccb8642a1c57c4ce08227</anchor>
      <arglist>(WId win, int left_width, int left_start, int left_end, int right_width, int right_start, int right_end, int top_width, int top_start, int top_end, int bottom_width, int bottom_start, int bottom_end)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setIcons</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a8dcba86e828ff19749e3d3e8746b898b</anchor>
      <arglist>(WId win, const QPixmap &amp;icon, const QPixmap &amp;miniIcon)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMainWindow</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a5f06ffab37bd705735f9d326f2969f52</anchor>
      <arglist>(QWidget *subwindow, WId mainwindow)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setOnActivities</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a63fe335efaca06bb43ad107b8e28936c</anchor>
      <arglist>(WId win, const QStringList &amp;activities)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setOnAllDesktops</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a3dfdfbe26d5bb59dd34ade9afa4d3971</anchor>
      <arglist>(WId win, bool b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setOnDesktop</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a252fc7c6e389a41b73075a98d4bb843a</anchor>
      <arglist>(WId win, int desktop)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setShowingDesktop</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a38b8c889d4b129845c2592acf54767cf</anchor>
      <arglist>(bool showing)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setState</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a2fcec2ab4297afe9edae7971b1a4cd86</anchor>
      <arglist>(WId win, NET::States state)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setStrut</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>af83b6d1db5390b191b5b9b0c061a1e03</anchor>
      <arglist>(WId win, int left, int right, int top, int bottom)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setType</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a0f45456ff470a7b464dfe26d33bc322e</anchor>
      <arglist>(WId win, NET::WindowType windowType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setUserTime</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a850371a25bf332c921617c8080553cdb</anchor>
      <arglist>(WId win, long time)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>showingDesktop</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>ae8850e1e845ee1bb88bab638387aa2fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QList&lt; WId &gt;</type>
      <name>stackingOrder</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a625644ee62355a88f32ab4e84130122a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KWINDOWSYSTEM_DEPRECATED WId</type>
      <name>transientFor</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a65dc3b550c9fde3bfc723a0c49b4c83b</anchor>
      <arglist>(WId window)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unminimizeWindow</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a2e804e86d60f2b461e1de4e17b7550f5</anchor>
      <arglist>(WId win)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unminimizeWindow</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a2bf6cc50c89e828926bd938b673e9be2</anchor>
      <arglist>(WId win, bool animation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>viewportToDesktop</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a02c88af96a4fc2b7e2d4810193d20e1b</anchor>
      <arglist>(const QPoint &amp;pos)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>viewportWindowToDesktop</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a73e98537ca90bf1dc15959c1c4153948</anchor>
      <arglist>(const QRect &amp;r)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KWINDOWSYSTEM_DEPRECATED KWindowInfo</type>
      <name>windowInfo</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>aeecbc8872422c25310cc9835f92423ad</anchor>
      <arglist>(WId win, NET::Properties properties, NET::Properties2 properties2=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QList&lt; WId &gt;</type>
      <name>windows</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>a739867bc45308fb75e474838142b050d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QRect</type>
      <name>workArea</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>ac03bfeef22c5ec6d7916666a0119d8a4</anchor>
      <arglist>(int desktop=- 1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QRect</type>
      <name>workArea</name>
      <anchorfile>classKWindowSystem.html</anchorfile>
      <anchor>ab461f7a79aad4a3f36552d2b10f9b925</anchor>
      <arglist>(const QList&lt; WId &gt; &amp;excludes, int desktop=-1)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KXMessages</name>
    <filename>classKXMessages.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>gotMessage</name>
      <anchorfile>classKXMessages.html</anchorfile>
      <anchor>a558b8d3136334fd9d651f3142635453a</anchor>
      <arglist>(const QString &amp;message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KXMessages</name>
      <anchorfile>classKXMessages.html</anchorfile>
      <anchor>a5446954387c4a649a3ccf28bde235f76</anchor>
      <arglist>(const char *accept_broadcast=NULL, QObject *parent=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KXMessages</name>
      <anchorfile>classKXMessages.html</anchorfile>
      <anchor>af07881e57b254db66e72d76881c90482</anchor>
      <arglist>(xcb_connection_t *connection, xcb_window_t rootWindow, const char *accept_broadcast=Q_NULLPTR, QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>broadcastMessage</name>
      <anchorfile>classKXMessages.html</anchorfile>
      <anchor>abdea70bab301928734a9dd5bab974d9e</anchor>
      <arglist>(const char *msg_type, const QString &amp;message, int screen=-1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KWINDOWSYSTEM_DEPRECATED bool</type>
      <name>broadcastMessageX</name>
      <anchorfile>classKXMessages.html</anchorfile>
      <anchor>a0f0f7d9aef343cb09588b9a631581f4b</anchor>
      <arglist>(Display *disp, const char *msg_type, const QString &amp;message, int screen=-1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>broadcastMessageX</name>
      <anchorfile>classKXMessages.html</anchorfile>
      <anchor>aa61c13c4d32adc6a8585b980f7e6926f</anchor>
      <arglist>(xcb_connection_t *c, const char *msg_type, const QString &amp;message, int screenNumber)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NET</name>
    <filename>classNET.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Action</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>afa9281c19ea7e280327b01b2c6236928</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AllTypesMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa8f1418a2a15499cc1ff2380b2d2ec34a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a5d6f825794e1d7e005d56cac269e7aa0a4fdc6016b721032a2bd8c5f9890f5f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ComboBox</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0adf15e4b5b7558558fd4adb72866d5972</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ComboBoxMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aaf58c7d2c12f39f237b2cabfa270e8ab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ContextHelpProtocol</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a02aad36d7abf162c186cdb2b0e6e961ba818d0a3ae2e6f85ecdd47c7f60ca60b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DeleteWindowProtocol</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a02aad36d7abf162c186cdb2b0e6e961ba55ebbf6a31791adca72f460b7e13eb39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DemandsAttention</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea3bb48830079a11c504153794ebbd4213</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Desktop</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a379d353173caf50b0e3992e770ded7f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DesktopLayoutCorner</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a3359c32a21f438e0e6564f26179e458f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DesktopMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa78b084561fcb174877983d4941ba9747</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dialog</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a9ada102bbd3caf4377ecf8fa93fc7f1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DialogMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa18e3bbea0b794f61a96af05ff590ae74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Direction</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>ae29e22ac36b48d9cbcb28727db5258ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNDIcon</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a3f2e95b29fea412b74e23deb530bb7fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNDIconMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa4303bedea838238b651e755a56097d17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dock</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0aebde24b0e6a51a008f120edd01d84be1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DockMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa5c1f0a7d7a70102c047db14a9de18dbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DropdownMenu</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0abbd1eb83dab2ebd2b1e1909f9bf03809</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DropdownMenuMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aad53a4ceb2c6250fe15685753265b4b61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FromApplication</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>ab8310daed1ca6a628b77ad4f92eeae74a7a242a3888a59f336a2c9091f046c204</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FromTool</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>ab8310daed1ca6a628b77ad4f92eeae74ae9b1014f038b95b825ed3a5a9adaf2d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FromUnknown</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>ab8310daed1ca6a628b77ad4f92eeae74afa9b1fe54160f94efbbd36abf3817f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FullScreen</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea52c9fb05445b3724c1f3e02838d89e32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Hidden</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea9da0cfee6ad77ce1cb2d266543244eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Iconic</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>afb6eef2d78c27ea693652a30d2a07c05a2d6d6784820519475f0177ea2cf3e04d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KeepAbove</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea7b5e0fc7795fc0a66930fb0937035817</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KeepBelow</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eeabb33d1a7ef6aeee3bd0e73cba9d8565d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MappingState</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>afb6eef2d78c27ea693652a30d2a07c05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Visible</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>afb6eef2d78c27ea693652a30d2a07c05ac19143b5e0209f618a5518c11ac38689</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Withdrawn</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>afb6eef2d78c27ea693652a30d2a07c05a7648a58c155ce6b36e05031c7ab0a4f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Iconic</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>afb6eef2d78c27ea693652a30d2a07c05a2d6d6784820519475f0177ea2cf3e04d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Max</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea11465696144d095ebe6d51085f7f47e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaxHoriz</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea05e760aabf98bbf0887e2f5adf4af5eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaxVert</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea2b5dbc22e9e5f3a7a238fc0d9775b7bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Menu</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0ab3858ccebaa5f5dc9fe176e1308de089</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MenuMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa302e156b07c1f151bcc6378cbf67c6dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Modal</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea59b7f512e7c7ff71430ad7349a32d91d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Normal</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a47e478847ad30f9f71dcc5091cc0cead</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NormalMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa769ee5513fae44cbc23ea06d80203525</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Notification</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a0f3f4349eae1a7aca0e44da1f7f26984</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotificationMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa9e4aa0d1f656f17c73263424dd9d347c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OnScreenDisplay</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a7b858c5d7e10f407e7c6c2d91a57184f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OnScreenDisplayMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa31cb24e878e096c5dc302ae6d8285836</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Orientation</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>afac5b26cfb4e28ec2f18cd5cc9e1989a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Override</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a169c19bad87c970ee27283f2b3378b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OverrideMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa4246ace0fadfb0cc91dab281a6a5a93b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PingProtocol</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a02aad36d7abf162c186cdb2b0e6e961bac01fb7a0b7834f7e2385755472ca95cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PopupMenu</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0abf2250001e5fc6e63a42f8cc86fc8725</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PopupMenuMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa5d2dbb4e6213a85653c2784f1c110a35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Property</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>aaea92340c4b9901e05aa7748587dcde5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Property2</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a851d15d9aa748b5f76e44b1e2d7c79b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Protocol</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a02aad36d7abf162c186cdb2b0e6e961b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TakeFocusProtocol</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a02aad36d7abf162c186cdb2b0e6e961ba88aab7af44c314e40504d05bea9790d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DeleteWindowProtocol</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a02aad36d7abf162c186cdb2b0e6e961ba55ebbf6a31791adca72f460b7e13eb39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PingProtocol</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a02aad36d7abf162c186cdb2b0e6e961bac01fb7a0b7834f7e2385755472ca95cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SyncRequestProtocol</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a02aad36d7abf162c186cdb2b0e6e961baed283a207c3f69d29bf9898e5e09968e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ContextHelpProtocol</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a02aad36d7abf162c186cdb2b0e6e961ba818d0a3ae2e6f85ecdd47c7f60ca60b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RequestSource</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>ab8310daed1ca6a628b77ad4f92eeae74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FromUnknown</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>ab8310daed1ca6a628b77ad4f92eeae74afa9b1fe54160f94efbbd36abf3817f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FromApplication</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>ab8310daed1ca6a628b77ad4f92eeae74a7a242a3888a59f336a2c9091f046c204</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FromTool</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>ab8310daed1ca6a628b77ad4f92eeae74ae9b1014f038b95b825ed3a5a9adaf2d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Role</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a5d6f825794e1d7e005d56cac269e7aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Client</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a5d6f825794e1d7e005d56cac269e7aa0a4fdc6016b721032a2bd8c5f9890f5f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WindowManager</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a5d6f825794e1d7e005d56cac269e7aa0a949cb303dc6e1c81c0f6c7b2c66055c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Shaded</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea2a7c8fed35a833f0b664fc577cb85015</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SkipPager</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eeaacf3a06dfb0c28d5ade1fb8f11ca06bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SkipTaskbar</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea4143fd2f9ab51548070993729951a5b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Splash</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a07c62266f94f41d18b1f522c8f917333</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SplashMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa3830935ae4e085f953886aa018f2fff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Modal</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea59b7f512e7c7ff71430ad7349a32d91d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sticky</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea091104e8b00c4b1a0cfb81ae186f3637</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaxVert</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea2b5dbc22e9e5f3a7a238fc0d9775b7bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaxHoriz</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea05e760aabf98bbf0887e2f5adf4af5eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Max</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea11465696144d095ebe6d51085f7f47e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Shaded</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea2a7c8fed35a833f0b664fc577cb85015</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SkipTaskbar</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea4143fd2f9ab51548070993729951a5b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KeepAbove</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea7b5e0fc7795fc0a66930fb0937035817</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StaysOnTop</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eeae5698354cff53f6e3aebdad9da826dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SkipPager</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eeaacf3a06dfb0c28d5ade1fb8f11ca06bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Hidden</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea9da0cfee6ad77ce1cb2d266543244eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FullScreen</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea52c9fb05445b3724c1f3e02838d89e32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KeepBelow</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eeabb33d1a7ef6aeee3bd0e73cba9d8565d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DemandsAttention</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea3bb48830079a11c504153794ebbd4213</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StaysOnTop</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eeae5698354cff53f6e3aebdad9da826dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sticky</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a08dce7f5ea8a2a6d1d38aea3498f00eea091104e8b00c4b1a0cfb81ae186f3637</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SyncRequestProtocol</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a02aad36d7abf162c186cdb2b0e6e961baed283a207c3f69d29bf9898e5e09968e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TakeFocusProtocol</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a02aad36d7abf162c186cdb2b0e6e961ba88aab7af44c314e40504d05bea9790d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Toolbar</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0aa34709d530baff911c780166f1a5ccfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ToolbarMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa5816df72b6aedb600f0977bbbb00d32c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Tooltip</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a8e9c1aa0e9c868b99aa8b5c2008cc45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TooltipMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa1db84820110a58c01ebdb9681460a782</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TopMenu</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a87b7bcd5109a36c8ffcf4705eb8865c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TopMenuMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa9c7b7555c2856befb21489b361571a78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Unknown</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a53e8de9bd4352248edad9137546aa4fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Utility</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0aed5a5fbe48af6bcd46122f9bda58f0c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UtilityMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa3d1837de4f3b33786169b6d1734f62d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Visible</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>afb6eef2d78c27ea693652a30d2a07c05ac19143b5e0209f618a5518c11ac38689</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WindowManager</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a5d6f825794e1d7e005d56cac269e7aa0a949cb303dc6e1c81c0f6c7b2c66055c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowType</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Unknown</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a53e8de9bd4352248edad9137546aa4fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Normal</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a47e478847ad30f9f71dcc5091cc0cead</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Desktop</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a379d353173caf50b0e3992e770ded7f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dock</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0aebde24b0e6a51a008f120edd01d84be1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Toolbar</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0aa34709d530baff911c780166f1a5ccfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Menu</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0ab3858ccebaa5f5dc9fe176e1308de089</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dialog</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a9ada102bbd3caf4377ecf8fa93fc7f1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Override</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a169c19bad87c970ee27283f2b3378b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TopMenu</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a87b7bcd5109a36c8ffcf4705eb8865c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Utility</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0aed5a5fbe48af6bcd46122f9bda58f0c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Splash</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a07c62266f94f41d18b1f522c8f917333</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DropdownMenu</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0abbd1eb83dab2ebd2b1e1909f9bf03809</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PopupMenu</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0abf2250001e5fc6e63a42f8cc86fc8725</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Tooltip</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a8e9c1aa0e9c868b99aa8b5c2008cc45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Notification</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a0f3f4349eae1a7aca0e44da1f7f26984</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ComboBox</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0adf15e4b5b7558558fd4adb72866d5972</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNDIcon</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a3f2e95b29fea412b74e23deb530bb7fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OnScreenDisplay</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a4b3115c0f40e7bc8e38119cc44dd60e0a7b858c5d7e10f407e7c6c2d91a57184f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WindowTypeMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NormalMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa769ee5513fae44cbc23ea06d80203525</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DesktopMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa78b084561fcb174877983d4941ba9747</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DockMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa5c1f0a7d7a70102c047db14a9de18dbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ToolbarMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa5816df72b6aedb600f0977bbbb00d32c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MenuMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa302e156b07c1f151bcc6378cbf67c6dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DialogMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa18e3bbea0b794f61a96af05ff590ae74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OverrideMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa4246ace0fadfb0cc91dab281a6a5a93b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TopMenuMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa9c7b7555c2856befb21489b361571a78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UtilityMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa3d1837de4f3b33786169b6d1734f62d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SplashMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa3830935ae4e085f953886aa018f2fff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DropdownMenuMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aad53a4ceb2c6250fe15685753265b4b61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PopupMenuMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa5d2dbb4e6213a85653c2784f1c110a35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TooltipMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa1db84820110a58c01ebdb9681460a782</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotificationMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa9e4aa0d1f656f17c73263424dd9d347c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ComboBoxMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aaf58c7d2c12f39f237b2cabfa270e8ab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNDIconMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa4303bedea838238b651e755a56097d17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OnScreenDisplayMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa31cb24e878e096c5dc302ae6d8285836</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AllTypesMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a157924046678eec09044df42968b785aa8f1418a2a15499cc1ff2380b2d2ec34a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Withdrawn</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>afb6eef2d78c27ea693652a30d2a07c05a7648a58c155ce6b36e05031c7ab0a4f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>timestampCompare</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a9257abc93441d96f380d690f2aeea058</anchor>
      <arglist>(unsigned long time1, unsigned long time2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>timestampDiff</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>ae5353d1ebb9514a696158f46b54157f4</anchor>
      <arglist>(unsigned long time1, unsigned long time2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>typeMatchesMask</name>
      <anchorfile>classNET.html</anchorfile>
      <anchor>a27fbb80ed615b8a177aa38f2f65ef40f</anchor>
      <arglist>(WindowType type, WindowTypes mask)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NETExtendedStrut</name>
    <filename>structNETExtendedStrut.html</filename>
    <member kind="function">
      <type></type>
      <name>NETExtendedStrut</name>
      <anchorfile>structNETExtendedStrut.html</anchorfile>
      <anchor>a187cba4430313bffb597b4ce7a98ed40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bottom_width</name>
      <anchorfile>structNETExtendedStrut.html</anchorfile>
      <anchor>a12ee0a2d04e980001139a7677a821148</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>left_width</name>
      <anchorfile>structNETExtendedStrut.html</anchorfile>
      <anchor>a79fc79c632ccc599b393693d99f24164</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>right_width</name>
      <anchorfile>structNETExtendedStrut.html</anchorfile>
      <anchor>a7c1f4d0bf33fe20f5dba649e8a2a505b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>top_width</name>
      <anchorfile>structNETExtendedStrut.html</anchorfile>
      <anchor>acb07800b67a53e134faaf09c571a1f0e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NETFullscreenMonitors</name>
    <filename>structNETFullscreenMonitors.html</filename>
    <member kind="function">
      <type></type>
      <name>NETFullscreenMonitors</name>
      <anchorfile>structNETFullscreenMonitors.html</anchorfile>
      <anchor>a74bc97dfedfeb5a94eb89bd6e8016fb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSet</name>
      <anchorfile>structNETFullscreenMonitors.html</anchorfile>
      <anchor>a1d9fe17820f48414ef282aaa702499a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bottom</name>
      <anchorfile>structNETFullscreenMonitors.html</anchorfile>
      <anchor>ae92fa25c1ad0a67f919ef8e81c5b4b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>left</name>
      <anchorfile>structNETFullscreenMonitors.html</anchorfile>
      <anchor>ae17cba79fc3c8fb46222e2fe08d1f5e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>right</name>
      <anchorfile>structNETFullscreenMonitors.html</anchorfile>
      <anchor>a3a52de56ffa8ab20db65ccfb51bf5b53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>top</name>
      <anchorfile>structNETFullscreenMonitors.html</anchorfile>
      <anchor>a956d8e03b8b2f645165d514fd90c2247</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NETIcon</name>
    <filename>structNETIcon.html</filename>
    <member kind="function">
      <type></type>
      <name>NETIcon</name>
      <anchorfile>structNETIcon.html</anchorfile>
      <anchor>ac1a350948e1128b4629f5914a306af66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>data</name>
      <anchorfile>structNETIcon.html</anchorfile>
      <anchor>aaa6c9f9828e7d2f9a29f408529a68822</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NETSize</type>
      <name>size</name>
      <anchorfile>structNETIcon.html</anchorfile>
      <anchor>a6506944fe7143f0a37bbe58cc0d8df94</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NETPoint</name>
    <filename>structNETPoint.html</filename>
    <member kind="function">
      <type></type>
      <name>NETPoint</name>
      <anchorfile>structNETPoint.html</anchorfile>
      <anchor>aa922d92ff9c0cd7a782fd57438265050</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>structNETPoint.html</anchorfile>
      <anchor>a662b6d948b949dabcaf2e955a078e63f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>structNETPoint.html</anchorfile>
      <anchor>ac64b3831f6fd7f1874f7e344beb117bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NETRect</name>
    <filename>structNETRect.html</filename>
    <member kind="variable">
      <type>NETPoint</type>
      <name>pos</name>
      <anchorfile>structNETRect.html</anchorfile>
      <anchor>a2604a60ef01bb245df79ada826b1718d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NETSize</type>
      <name>size</name>
      <anchorfile>structNETRect.html</anchorfile>
      <anchor>a97102c18e356965d829855c570bb45ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NETRootInfo</name>
    <filename>classNETRootInfo.html</filename>
    <base>NET</base>
    <member kind="function">
      <type></type>
      <name>NETRootInfo</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a89f26951db9fa3402ebfcac73a13b248</anchor>
      <arglist>(xcb_connection_t *connection, xcb_window_t supportWindow, const char *wmName, NET::Properties properties, NET::WindowTypes windowTypes, NET::States states, NET::Properties2 properties2, NET::Actions actions, int screen=-1, bool doActivate=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NETRootInfo</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>aa9e67e0b9e262b810b5749ac3cd31a4b</anchor>
      <arglist>(xcb_connection_t *connection, NET::Properties properties, NET::Properties2 properties2=0, int screen=-1, bool doActivate=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NETRootInfo</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a960dc3710c9cf34347285026b93bcd6f</anchor>
      <arglist>(const NETRootInfo &amp;rootinfo)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NETRootInfo</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a88dd4ee9906662bf072d9e703b7df710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>activate</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a600ae69b2dfbbe78f2758c19af6748aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>xcb_window_t</type>
      <name>activeWindow</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a4ae7b7baf102438cb5f6484e4237abbb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const xcb_window_t *</type>
      <name>clientList</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>aaf1a87a8f4f44254449151aa10895d32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>clientListCount</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a035ed071e2412d6496776d5079a6cb36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const xcb_window_t *</type>
      <name>clientListStacking</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a50bbdce13267e297929a8a7c47f6c1ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>clientListStackingCount</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a6488dbb60e1696f80ef4dbd6465203ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeWindowRequest</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a9cdbb685d45dc467039f5d682110c176</anchor>
      <arglist>(xcb_window_t window)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentDesktop</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a447ad4051423f7c099789425ae814063</anchor>
      <arglist>(bool ignore_viewport=false) const</arglist>
    </member>
    <member kind="function">
      <type>NETSize</type>
      <name>desktopGeometry</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a97843623505e056546fde77d4f02086b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>desktopLayoutColumnsRows</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>aad5abb54b952460cc7db1271a0b1f2fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NET::DesktopLayoutCorner</type>
      <name>desktopLayoutCorner</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a91be2518fd5648543ebb2bd1ef83e672</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NET::Orientation</type>
      <name>desktopLayoutOrientation</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a1147ee4d8a14fe363760e250b7e64c38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>desktopName</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a9ba60eb0b7b5a4c9b1c86c1be2bcd386</anchor>
      <arglist>(int desktop) const</arglist>
    </member>
    <member kind="function">
      <type>NETPoint</type>
      <name>desktopViewport</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a6cd5234c11a1eaf92b25ea1e3a1cb1c5</anchor>
      <arglist>(int desktop) const</arglist>
    </member>
    <member kind="function">
      <type>KWINDOWSYSTEM_DEPRECATED void</type>
      <name>event</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>ad9ac9343868f6a1ad4920e0b958ed7c9</anchor>
      <arglist>(xcb_generic_event_t *event, unsigned long *properties, int properties_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>event</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>aa06811a2349fa8b8e427edcfe175cb09</anchor>
      <arglist>(xcb_generic_event_t *event, NET::Properties *properties, NET::Properties2 *properties2=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type>NET::Properties</type>
      <name>event</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a40ce5ceef60cb7130480ced856c28744</anchor>
      <arglist>(xcb_generic_event_t *event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSupported</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>ae96a250ac6f683e5d2f703f8584e826a</anchor>
      <arglist>(NET::Property property) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSupported</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>aa727d28200a86c48563b642689b2fbcf</anchor>
      <arglist>(NET::Property2 property) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSupported</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>ad00b04f0f6aa6a0af70157a781b525a2</anchor>
      <arglist>(NET::WindowTypeMask type) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSupported</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a276e2952063e546564c2ee5e6238ac29</anchor>
      <arglist>(NET::State state) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSupported</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a10947572060a0c38dbe56533954de36a</anchor>
      <arglist>(NET::Action action) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveResizeRequest</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a6ef49909d42b1a1a04f2292b8605b79b</anchor>
      <arglist>(xcb_window_t window, int x_root, int y_root, Direction direction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveResizeWindowRequest</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>abedcf941d9633d7234d610511a7a50d0</anchor>
      <arglist>(xcb_window_t window, int flags, int x, int y, int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfDesktops</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>afcc5bf61b1a98087e0a8399b5ee107cd</anchor>
      <arglist>(bool ignore_viewport=false) const</arglist>
    </member>
    <member kind="function">
      <type>const NETRootInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>af117a2f45605de015325765540130ecc</anchor>
      <arglist>(const NETRootInfo &amp;rootinfo)</arglist>
    </member>
    <member kind="function">
      <type>NET::Actions</type>
      <name>passedActions</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>aeac657d1a5a2bc2bbff13ba2b3753ecc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NET::Properties</type>
      <name>passedProperties</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a7aba0412460d5de7223850bcde26cd3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NET::Properties2</type>
      <name>passedProperties2</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>ab92f2c0b90a07bb51080626b888c3fff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NET::States</type>
      <name>passedStates</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a0ef3d66dffc5ae60d3974e51e09efe5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NET::WindowTypes</type>
      <name>passedWindowTypes</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a8a82100d346fb5a3a0103a0c2a5cc27a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restackRequest</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a57f81b08f00cf960ea63eb63e81987ca</anchor>
      <arglist>(xcb_window_t window, RequestSource source, xcb_window_t above, int detail, xcb_timestamp_t timestamp)</arglist>
    </member>
    <member kind="function">
      <type>xcb_window_t</type>
      <name>rootWindow</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a231a5b46ec3cbfc15a73ae139fac5d92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendPing</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a5e03bc4f40db8ad105e1708c22ea00eb</anchor>
      <arglist>(xcb_window_t window, xcb_timestamp_t timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActiveWindow</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>aefac0a31c98427a5a84dd09d812fe6f4</anchor>
      <arglist>(xcb_window_t window, NET::RequestSource src, xcb_timestamp_t timestamp, xcb_window_t active_window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActiveWindow</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>ab4aa5924f1f051199940828dbce4a118</anchor>
      <arglist>(xcb_window_t window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClientList</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a02dae359439488195aceb7f0a2b479ab</anchor>
      <arglist>(const xcb_window_t *windows, unsigned int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClientListStacking</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>af358dab6b0dfc8083a771dcc9f2dad73</anchor>
      <arglist>(const xcb_window_t *windows, unsigned int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentDesktop</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>aab9e17977eec8d2a8ee8695bca184fbb</anchor>
      <arglist>(int desktop, bool ignore_viewport=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDesktopGeometry</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>aa4bbe7eec4123d1794fca9f233ebad93</anchor>
      <arglist>(const NETSize &amp;geometry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDesktopLayout</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a06f991c0b1540e779e5e324404337241</anchor>
      <arglist>(NET::Orientation orientation, int columns, int rows, NET::DesktopLayoutCorner corner)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDesktopName</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a5b747a5f42d1627498a43c2df6670024</anchor>
      <arglist>(int desktop, const char *desktopName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDesktopViewport</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a3325efae9006a73cc16d9c259cee6f2b</anchor>
      <arglist>(int desktop, const NETPoint &amp;viewport)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumberOfDesktops</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>ad2e7aca69ab4fa624eb86af70aaf70bd</anchor>
      <arglist>(int numberOfDesktops)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShowingDesktop</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a9f9c9aa337a71ecc6b61b3bc29e37de2</anchor>
      <arglist>(bool showing)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSupported</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a8b7935546a87ee3b27c02f861fff827e</anchor>
      <arglist>(NET::Property property, bool on=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSupported</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>af99010d9744bfca2d1866ecfda2478c4</anchor>
      <arglist>(NET::Property2 property, bool on=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSupported</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>aa5b995911d7de433807dc7f79d5712ce</anchor>
      <arglist>(NET::WindowTypeMask property, bool on=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSupported</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>adeb83b39ed3eeea9b5626c282a03e445</anchor>
      <arglist>(NET::State property, bool on=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSupported</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a265528fb331b79a05bc2c33897141022</anchor>
      <arglist>(NET::Action property, bool on=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVirtualRoots</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>ab44bc95e6ca88043dbd1bba2cd20269b</anchor>
      <arglist>(const xcb_window_t *windows, unsigned int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWorkArea</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a7cb2a8b55300c6e363efe89f6702ddb7</anchor>
      <arglist>(int desktop, const NETRect &amp;workArea)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingDesktop</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>afecf7557cb87d1d6e38d183a3f2a7545</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NET::Actions</type>
      <name>supportedActions</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>aeced8d9474a23a19c5992e1160153dea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NET::Properties</type>
      <name>supportedProperties</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a9c9b1ee1fb41bebf0837c465ac9dcdee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NET::Properties2</type>
      <name>supportedProperties2</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a61118ab0e50d5db4bb7e1128e0984b43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NET::States</type>
      <name>supportedStates</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>adc3b3209ba69cd90ee91d7a8f90801d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NET::WindowTypes</type>
      <name>supportedWindowTypes</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>abf7d368ac4d319098d1291abeb92035e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>xcb_window_t</type>
      <name>supportWindow</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a8edabc7b370c743c76bea72c3253dabc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const xcb_window_t *</type>
      <name>virtualRoots</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a5e2002c7e9e3aa608c81ca08a1a1a02a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>virtualRootsCount</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a1d97019b468992157030d773cc019fe1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>wmName</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>af51e1fbd88028b70958f5b08cabd82be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NETRect</type>
      <name>workArea</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>ad6c3a3adc4684ab3eeac2b48fe40801e</anchor>
      <arglist>(int desktop) const</arglist>
    </member>
    <member kind="function">
      <type>xcb_connection_t *</type>
      <name>xcbConnection</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a1c9613c282ce0140df8a7653a2f2adcb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addClient</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a0a4cd1ccb8097bf8aadc7dbaa5ca5ed7</anchor>
      <arglist>(xcb_window_t window)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>changeActiveWindow</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a57ed7346a3fa56a543079678049bdae9</anchor>
      <arglist>(xcb_window_t window, NET::RequestSource src, xcb_timestamp_t timestamp, xcb_window_t active_window)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>changeCurrentDesktop</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>ae305549c1052c9a56438dbbe4d85302f</anchor>
      <arglist>(int desktop)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>changeDesktopGeometry</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a8dbf88d76644b4e912ee7e860c89225a</anchor>
      <arglist>(int desktop, const NETSize &amp;geom)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>changeDesktopViewport</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a0081e46b972ba2efca3e0d4b301e34da</anchor>
      <arglist>(int desktop, const NETPoint &amp;viewport)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>changeNumberOfDesktops</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>aa177bec4607fd2b38529e9fc135d51b9</anchor>
      <arglist>(int numberOfDesktops)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>changeShowingDesktop</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>af86664c4429e79430db0360a5a608dd6</anchor>
      <arglist>(bool showing)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>closeWindow</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a0058f0368e02834b73d164c84a58adbd</anchor>
      <arglist>(xcb_window_t window)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>gotPing</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a29decfa17ae9ef6f7b866b7dae72460e</anchor>
      <arglist>(xcb_window_t window, xcb_timestamp_t timestamp)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>moveResize</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a67232e7858fb5ac4bb752c32283f08bb</anchor>
      <arglist>(xcb_window_t window, int x_root, int y_root, unsigned long direction)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>moveResizeWindow</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a17d75ad375ac020f5acc62e4316cd350</anchor>
      <arglist>(xcb_window_t window, int flags, int x, int y, int width, int height)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>removeClient</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a9ece857514d7b994cc6cc671dfc69df9</anchor>
      <arglist>(xcb_window_t window)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>restackWindow</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a3a7f30db68710827abf9801f5440617d</anchor>
      <arglist>(xcb_window_t window, RequestSource source, xcb_window_t above, int detail, xcb_timestamp_t timestamp)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>virtual_hook</name>
      <anchorfile>classNETRootInfo.html</anchorfile>
      <anchor>a8d97a3a5bb0726e991037eaece10279a</anchor>
      <arglist>(int id, void *data)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NETSize</name>
    <filename>structNETSize.html</filename>
    <member kind="function">
      <type></type>
      <name>NETSize</name>
      <anchorfile>structNETSize.html</anchorfile>
      <anchor>aac718a821bc131ecc0c736a8eed0a8cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>height</name>
      <anchorfile>structNETSize.html</anchorfile>
      <anchor>a0a6def5683983f7f3478192248ef2f8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>width</name>
      <anchorfile>structNETSize.html</anchorfile>
      <anchor>af2e6a5fcac88037fa745273e85c5e219</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NETStrut</name>
    <filename>structNETStrut.html</filename>
    <member kind="function">
      <type></type>
      <name>NETStrut</name>
      <anchorfile>structNETStrut.html</anchorfile>
      <anchor>af4263329e1d7e5aa48248fbcbc2284a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bottom</name>
      <anchorfile>structNETStrut.html</anchorfile>
      <anchor>a031e023bb8f0c8cf3d00b748c7dd7ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>left</name>
      <anchorfile>structNETStrut.html</anchorfile>
      <anchor>a3ffe1d55e64632f4cdc1225ae8a301df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>right</name>
      <anchorfile>structNETStrut.html</anchorfile>
      <anchor>a46c92f5dc806d6def2390f258d00b80e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>top</name>
      <anchorfile>structNETStrut.html</anchorfile>
      <anchor>ac359ac56290a66002010f64dc4842aa2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NETWinInfo</name>
    <filename>classNETWinInfo.html</filename>
    <base>NET</base>
    <member kind="function">
      <type></type>
      <name>NETWinInfo</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>adf91f4fb54f368506913f1e5dafe78f6</anchor>
      <arglist>(xcb_connection_t *connection, xcb_window_t window, xcb_window_t rootWindow, NET::Properties properties, NET::Properties2 properties2, Role role=Client)</arglist>
    </member>
    <member kind="function">
      <type>KWINDOWSYSTEM_DEPRECATED</type>
      <name>NETWinInfo</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a66be82d80a0c75eecff47d1acc21dec6</anchor>
      <arglist>(xcb_connection_t *connection, xcb_window_t window, xcb_window_t rootWindow, NET::Properties properties, Role role=Client)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NETWinInfo</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a84db7dff7f2458fd3f66e041573bb997</anchor>
      <arglist>(const NETWinInfo &amp;wininfo)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NETWinInfo</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>ae03403bb3bd691e8a3fa2da3a1161d33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>activities</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a2ab7b37c25a584ea300331562498572e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NET::Actions</type>
      <name>allowedActions</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>aeafdfaacb707bba4ae8fa387f2460955</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>clientMachine</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>aba26b0a73ba6b2664a363e498a028de0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>desktop</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a3c80672b9fe183f1209640c1da4db495</anchor>
      <arglist>(bool ignore_viewport=false) const</arglist>
    </member>
    <member kind="function">
      <type>KWINDOWSYSTEM_DEPRECATED void</type>
      <name>event</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a05f7f01e51f8d25455b573c64854bd84</anchor>
      <arglist>(xcb_generic_event_t *event, unsigned long *properties, int properties_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>event</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a6aafb5925d82c803d97984a1378f56be</anchor>
      <arglist>(xcb_generic_event_t *event, NET::Properties *properties, NET::Properties2 *properties2=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type>NET::Properties</type>
      <name>event</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a1c335476b55f3f4454411126ba9ba924</anchor>
      <arglist>(xcb_generic_event_t *event)</arglist>
    </member>
    <member kind="function">
      <type>NETExtendedStrut</type>
      <name>extendedStrut</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a77254cc74f15b155171eef816f4d764b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NETStrut</type>
      <name>frameExtents</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a5ce42a76e6c119a26504b422c2278e8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NETStrut</type>
      <name>frameOverlap</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>ab8b6cdd03474c14666ccf486178c9f5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NETFullscreenMonitors</type>
      <name>fullscreenMonitors</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>aed9259092abb5e8437a6f72ac1039d13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>xcb_window_t</type>
      <name>groupLeader</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>ad78515c5141e18268d1176d6ffbedc74</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handledIcons</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>ac2d331f9643b74c8dd82c9811b763698</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNETSupport</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>adaf4b1b763ebc53db481b09f3ef33431</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasWindowType</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a112add6db8a64985e415f3e3e507c235</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>xcb_pixmap_t</type>
      <name>icccmIconPixmap</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a9221fe1fd6702c8925593643c064eabf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>xcb_pixmap_t</type>
      <name>icccmIconPixmapMask</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a692dd9c9b1364a1056739521f982caaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NETIcon</type>
      <name>icon</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a60f99155059dc18d740685bb38e282b5</anchor>
      <arglist>(int width=-1, int height=-1) const</arglist>
    </member>
    <member kind="function">
      <type>NETRect</type>
      <name>iconGeometry</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>afe6f6aea8847cc260db854ff9e2b00da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>iconName</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a8d71f7b93d3a5223efe4a017b917c05b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const int *</type>
      <name>iconSizes</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a900706baea75d23b5f03cd351a8077d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MappingState</type>
      <name>initialMappingState</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a3e829d11b2cbb5fee2b154c749c564f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>input</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a4b85fb45350225df5fe243923d01d456</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBlockingCompositing</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a326e6ec8a7a91cba2eb7b1902e4eff3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>kdeGeometry</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a27ca3c4fb9170a15c9f7b779c0bd51dd</anchor>
      <arglist>(NETRect &amp;frame, NETRect &amp;window)</arglist>
    </member>
    <member kind="function">
      <type>MappingState</type>
      <name>mappingState</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a4ed55e3ba2240e25eadba11159d4530e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>name</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a42f4596234b1cd1517c2ac5f8fc9b879</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>opacity</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a4dbb43fae97678665c14e91a16fa8e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NETRect &gt;</type>
      <name>opaqueRegion</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a6e9c8a6ef50c66ee097c987b793cf61c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const NETWinInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a79640a11e0f4ccb09ec81dd68cbb59ba</anchor>
      <arglist>(const NETWinInfo &amp;wintinfo)</arglist>
    </member>
    <member kind="function">
      <type>NET::Properties</type>
      <name>passedProperties</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a5b5011a26f9517510ce612baea72f9a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NET::Properties2</type>
      <name>passedProperties2</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a264884e8c627e9840b7e5d544f39e019</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pid</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>adbe9d87d81170a7e027b603157005314</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NET::Protocols</type>
      <name>protocols</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a68ec17d6fd187bd4b5ddf917017fa0ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActivities</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a90d3b14186b074aaa0309ca4c8c670db</anchor>
      <arglist>(const char *activities)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllowedActions</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>af0b92d7673ce879ec377ed47fc312ad7</anchor>
      <arglist>(NET::Actions actions)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBlockingCompositing</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>ac264bd0ff15058b4158ea2932ea2fda2</anchor>
      <arglist>(bool active)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDesktop</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>ac4d23861033e10ca674b0434f246a690</anchor>
      <arglist>(int desktop, bool ignore_viewport=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtendedStrut</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a6a6964c115a4f2f24e9fc6688b2d79dc</anchor>
      <arglist>(const NETExtendedStrut &amp;extended_strut)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrameExtents</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>ab50f281e50e6652abfc56e36cab398f4</anchor>
      <arglist>(NETStrut strut)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrameOverlap</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a0d27f5e71e08990e3aa0b2cd74694216</anchor>
      <arglist>(NETStrut strut)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFullscreenMonitors</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>ae026b1b5d2aca9ae0fb0a70ce03913a9</anchor>
      <arglist>(NETFullscreenMonitors topology)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHandledIcons</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a05c22f70a2d7659b4b8e836c926b350f</anchor>
      <arglist>(bool handled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>aeacf220f1698b64cefa715ca70b5e38a</anchor>
      <arglist>(NETIcon icon, bool replace=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIconGeometry</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>aff2aba23f23b7cd0efd120449706fda4</anchor>
      <arglist>(NETRect geometry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIconName</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a5f141654450eec3b153b866e0299e02c</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>aff40999729f1304c6ce6a8fafb9e7b45</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOpacity</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a1bd1f2ff92d908eece1ef675d68002ae</anchor>
      <arglist>(unsigned long opacity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPid</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a0c2dc2f4babf3efa3b0454c51504f9b1</anchor>
      <arglist>(int pid)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStartupId</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>ad92c6841ffdcc826065554bd0df89c62</anchor>
      <arglist>(const char *startup_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a15fd655ed64a418397b2c93dacf45a3a</anchor>
      <arglist>(NET::States state, NET::States mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStrut</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a55d3265cab9042f4a3904a46ca02fcdd</anchor>
      <arglist>(NETStrut strut)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUserTime</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>aea17de9b0eaa052bafa25e2ec2a6af54</anchor>
      <arglist>(xcb_timestamp_t time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVisibleIconName</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>ac2d7bcff77df4a068fa56736077dca33</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVisibleName</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>abcf5bf06a71c4b73b67f5acd1b216cbc</anchor>
      <arglist>(const char *visibleName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWindowType</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>ab617fe015564e043bfa5ca8e708b6e8f</anchor>
      <arglist>(WindowType type)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>startupId</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>aac76a94e5d3d5017cf82c06a83d482fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NET::States</type>
      <name>state</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>aa26a0bc40a868cfbfb9f335e800d3fe2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NETStrut</type>
      <name>strut</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a6acff362532b5e3a276cae6b09f5f68a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsProtocol</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a0291f40413807b62431b8e2878efe04c</anchor>
      <arglist>(NET::Protocol protocol) const</arglist>
    </member>
    <member kind="function">
      <type>xcb_window_t</type>
      <name>transientFor</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a4690e2ddaad2aae82dd6557f5b63a2e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>urgency</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>adfa4f51510c911068598458c39c44d39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>xcb_timestamp_t</type>
      <name>userTime</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>adba4b96c3dae8d693298db9d868b5849</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>visibleIconName</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a80f7db38cc5fbc9c55d46d8bf316d1e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>visibleName</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>aca3a277424174d211b8e10e11c0cc3f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>windowClassClass</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>af73d7f461eeb195ce513d378ffa7e0c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>windowClassName</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>aeebdda5d8f00b6c2a749d0fa6145a051</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>windowRole</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a59963aaaf7c747d1f0df3f1b9230a3d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WindowType</type>
      <name>windowType</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a69b6ae89bfd46c0f4d5f4e1676c3a23b</anchor>
      <arglist>(WindowTypes supported_types) const</arglist>
    </member>
    <member kind="function">
      <type>xcb_connection_t *</type>
      <name>xcbConnection</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a11616f79e1ea83e1c6252a9c2bc85064</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>OnAllDesktops</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>ac89cabd7cbc04c77821586ecfb4590ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>changeDesktop</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a291a93ca5ebde0d81346738101620b48</anchor>
      <arglist>(int desktop)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>changeFullscreenMonitors</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a633de08820d95a54bc063fcae0bef067</anchor>
      <arglist>(NETFullscreenMonitors topology)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>changeState</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>a56d44cdd0cfd0b500823410db5a85c6a</anchor>
      <arglist>(NET::States state, NET::States mask)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>virtual_hook</name>
      <anchorfile>classNETWinInfo.html</anchorfile>
      <anchor>ab6820e23e9f423892963317f0772794e</anchor>
      <arglist>(int id, void *data)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>KKeyServer</name>
    <filename>namespaceKKeyServer.html</filename>
    <member kind="function">
      <type>uint</type>
      <name>accelModMaskX</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>ae407cb37157ddc3ea23894f32d782812</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initializeMods</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>a54671bed2d347e7ab104e5c1a89ad87d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isShiftAsModifierAllowed</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>a8c69e9757d72c01d46dd59d046e41575</anchor>
      <arglist>(int keyQt)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>keyboardHasMetaKey</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>a99b4ad168b54f4bc462bec08e0d49fb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KWINDOWSYSTEM_EXPORT bool</type>
      <name>keyQtToCodeMac</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>adae970c91d26c7f6aca92420b2ffa071</anchor>
      <arglist>(int keyQt, QList&lt; uint &gt; &amp;keyCodes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>keyQtToCodeWin</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>ae6b70be8f930c1d8ea63681d94799f78</anchor>
      <arglist>(int keyQt, uint *sym)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>keyQtToCodeX</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>aa52937263a8d8f238b78a9c1884eeaf2</anchor>
      <arglist>(int keyQt, int *keyCode)</arglist>
    </member>
    <member kind="function">
      <type>KWINDOWSYSTEM_EXPORT bool</type>
      <name>keyQtToModMac</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>a8b33d4b55841ad2f034df72712cd2479</anchor>
      <arglist>(int keyQt, uint &amp;mod)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>keyQtToModWin</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>ab2fa4238363153cb6f9bccb70fa13c19</anchor>
      <arglist>(int keyQt, uint *mod)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>keyQtToModX</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>ae8c14557db238d8da20e7f1cf4be93d7</anchor>
      <arglist>(int keyQt, uint *mod)</arglist>
    </member>
    <member kind="function">
      <type>KWINDOWSYSTEM_EXPORT bool</type>
      <name>keyQtToSymMac</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>ae2da6221631e4b6928cada693f501918</anchor>
      <arglist>(int keyQt, int &amp;sym)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>keyQtToSymX</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>a872a7efde5c1c83084651ffba90d1516</anchor>
      <arglist>(int keyQt, int *sym)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>modToStringUser</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>aeca4c09c25ba39c3c91790c7be931d1b</anchor>
      <arglist>(uint mod)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>modXAlt</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>a2e73f99014a7ad204a9d97a23c539ace</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>modXCtrl</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>aa3c0576a00ef44c42cbf9da014da10b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>modXLock</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>a2d399ef8dfe78e0c26642132fab2c69e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>modXMeta</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>a2eadea9f61890f68a0c85331928186a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>modXModeSwitch</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>ad6b0d854bdd80bb11a0001abcec3506c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>modXNumLock</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>af22ba15a4b093319ababf4a6fea1d8a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>modXScrollLock</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>ab5012bf9d5ad000d9fce354826b369eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>modXShift</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>abef307d03b6c77dca1a69b345fc7c7ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>modXToQt</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>ad4e636fc3b5281cac0a8439ed4a4e5b2</anchor>
      <arglist>(uint modX, int *modQt)</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>stringUserToMod</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>a610a599d70821c37cda8daced3577e53</anchor>
      <arglist>(const QString &amp;mod)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>symXToKeyQt</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>aa5e183f739e9a6b0d718100f29609c28</anchor>
      <arglist>(uint sym, int *keyQt)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>xcbKeyPressEventToQt</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>aecda09c5614e4386835a11b743643aec</anchor>
      <arglist>(xcb_generic_event_t *e, int *keyModQt)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>xcbKeyPressEventToQt</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>a794ff3fe9ff31d9b93bf04a68c3d789c</anchor>
      <arglist>(xcb_key_press_event_t *e, int *keyModQt)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>xEventToQt</name>
      <anchorfile>namespaceKKeyServer.html</anchorfile>
      <anchor>a9cf038dbe7813c08a74906b5913b63d6</anchor>
      <arglist>(XEvent *e, int *keyModQt)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>KWindowEffects</name>
    <filename>namespaceKWindowEffects.html</filename>
    <member kind="function">
      <type>void</type>
      <name>enableBackgroundContrast</name>
      <anchorfile>namespaceKWindowEffects.html</anchorfile>
      <anchor>a166a5fc7121ecf57a69fd19545c6f724</anchor>
      <arglist>(WId window, bool enable=true, qreal contrast=1, qreal intensity=1, qreal saturation=1, const QRegion &amp;region=QRegion())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableBlurBehind</name>
      <anchorfile>namespaceKWindowEffects.html</anchorfile>
      <anchor>adc5fc0dee7b2464c99328d5e2f601269</anchor>
      <arglist>(WId window, bool enable=true, const QRegion &amp;region=QRegion())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>highlightWindows</name>
      <anchorfile>namespaceKWindowEffects.html</anchorfile>
      <anchor>aafb9d94f52b3859067e8f7af36679ecb</anchor>
      <arglist>(WId controller, const QList&lt; WId &gt; &amp;ids)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEffectAvailable</name>
      <anchorfile>namespaceKWindowEffects.html</anchorfile>
      <anchor>ae24dc2523465c246ed82a1ef9a7256fd</anchor>
      <arglist>(Effect effect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markAsDashboard</name>
      <anchorfile>namespaceKWindowEffects.html</anchorfile>
      <anchor>a5bd4b6656ee8da93ef97d1ebf147d965</anchor>
      <arglist>(WId window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>presentWindows</name>
      <anchorfile>namespaceKWindowEffects.html</anchorfile>
      <anchor>a9d1e02fbaa04a4388ab306c402ff4199</anchor>
      <arglist>(WId controller, const QList&lt; WId &gt; &amp;ids)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>presentWindows</name>
      <anchorfile>namespaceKWindowEffects.html</anchorfile>
      <anchor>a2d0298563600fbf6e4b090d9e8347756</anchor>
      <arglist>(WId controller, int desktop=NET::OnAllDesktops)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>slideWindow</name>
      <anchorfile>namespaceKWindowEffects.html</anchorfile>
      <anchor>ab6a2f7c15b4e3f5eb7d2825668e28be5</anchor>
      <arglist>(WId id, SlideFromLocation location, int offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>slideWindow</name>
      <anchorfile>namespaceKWindowEffects.html</anchorfile>
      <anchor>aa84c5ab9961a1df0e1d875fa0ca21ce2</anchor>
      <arglist>(QWidget *widget, SlideFromLocation location)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QSize &gt;</type>
      <name>windowSizes</name>
      <anchorfile>namespaceKWindowEffects.html</anchorfile>
      <anchor>a79b95fe909e1d6121a458229e4fd9091</anchor>
      <arglist>(const QList&lt; WId &gt; &amp;ids)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>KWindowSystem</title>
    <filename>index</filename>
  </compound>
</tagfile>
