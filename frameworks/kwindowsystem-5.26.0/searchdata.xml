<?xml version="1.0" encoding="UTF-8"?>
<add>
  <doc>
    <field name="type">source</field>
    <field name="name">fixx11h.h</field>
    <field name="url">fixx11h_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">X XUnsorted Unsorted Unsorted XUnsorted XID XNone None XID None XNone Bool XBool XBool Bool XKeyPress KeyPress KeyPress XKeyPress XKeyRelease KeyRelease KeyRelease XKeyRelease XAbove Above Above XAbove XBelow Below Below XBelow XFocusIn FocusIn FocusIn XFocusIn XFocusOut FocusOut FocusOut XFocusOut XAlways Always Always XAlways XExpose Expose Expose XExpose XSuccess Success Success XSuccess XGrayScale GrayScale GrayScale XGrayScale Status XStatus XStatus Status XCursorShape CursorShape CursorShape XCursorShape XFontChange FontChange FontChange XFontChange XNormalState NormalState NormalState XNormalState Xindex s c index s c index s c Xindex s c Xrindex s c rindex s c rindex s c Xrindex s c X</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">kkeyserver_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">kkeyserver_8cpp_source.html#l00025</field>
    <field name="keywords"></field>
    <field name="text">KKeyServer ModInfo modQt psName QString sLabel ModInfo g_rgModInfo Qt::SHIFT Qt::CTRL Qt::ALT Qt::META g_bInitializedKKeyLabels g_bMacLabels intializeKKeyLabels g_rgModInfo sLabel QString QApplication::translate g_rgModInfo psName KEYCTXT g_rgModInfo sLabel QString QApplication::translate g_rgModInfo psName KEYCTXT g_rgModInfo sLabel QString QApplication::translate g_rgModInfo psName KEYCTXT g_rgModInfo sLabel QString QApplication::translate g_rgModInfo psName KEYCTXT g_bMacLabels g_rgModInfo sLabel QLatin1String g_bInitializedKKeyLabels QString modToString uint mod bUserSpace bUserSpace g_bInitializedKKeyLabels intializeKKeyLabels QString s i i i mod g_rgModInfo i modQt s isEmpty s QLatin1Char s bUserSpace g_rgModInfo i sLabel QLatin1String g_rgModInfo i psName s</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">kkeyserver_8cpp_source.html#l00092</field>
    <field name="keywords"></field>
    <field name="text">QString modToStringUser uint mod modToString mod</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">kkeyserver_8cpp_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text">uint stringUserToMod QString mod i i i mod toLower g_rgModInfo i sLabel toLower g_rgModInfo i modQt</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">kkeyserver_8cpp_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text">isShiftAsModifierAllowed keyQt keyQt Qt keyQt Qt::Key_F1 keyQt Qt::Key_F35 QChar keyQt isLetter keyQt Qt::Key_Return Qt::Key_Space Qt::Key_Backspace Qt::Key_Backtab Qt::Key_Escape Qt::Key_Print Qt::Key_ScrollLock Qt::Key_Pause Qt::Key_PageUp Qt::Key_PageDown Qt::Key_Insert Qt::Key_Delete Qt::Key_Home Qt::Key_End Qt::Key_Up Qt::Key_Down Qt::Key_Left Qt::Key_Right Qt::Key_Enter Qt::Key_SysReq Qt::Key_CapsLock Qt::Key_NumLock Qt::Key_Help Qt::Key_Back Qt::Key_Forward Qt::Key_Stop Qt::Key_Refresh Qt::Key_Favorites Qt::Key_LaunchMedia Qt::Key_OpenUrl Qt::Key_HomePage Qt::Key_Search Qt::Key_VolumeDown Qt::Key_VolumeMute Qt::Key_VolumeUp Qt::Key_BassBoost Qt::Key_BassUp Qt::Key_BassDown Qt::Key_TrebleUp Qt::Key_TrebleDown Qt::Key_MediaPlay Qt::Key_MediaStop Qt::Key_MediaPrevious Qt::Key_MediaNext Qt::Key_MediaRecord Qt::Key_MediaPause Qt::Key_MediaTogglePlayPause Qt::Key_LaunchMail Qt::Key_Calculator Qt::Key_Memo Qt::Key_ToDoList Qt::Key_Calendar Qt::Key_PowerDown Qt::Key_ContrastAdjust Qt::Key_Standby Qt::Key_MonBrightnessUp Qt::Key_MonBrightnessDown Qt::Key_KeyboardLightOnOff Qt::Key_KeyboardBrightnessUp Qt::Key_KeyboardBrightnessDown Qt::Key_PowerOff Qt::Key_WakeUp Qt::Key_Eject Qt::Key_ScreenSaver Qt::Key_WWW Qt::Key_Sleep Qt::Key_LightBulb Qt::Key_Shop Qt::Key_History Qt::Key_AddFavorite Qt::Key_HotLinks Qt::Key_BrightnessAdjust Qt::Key_Finance Qt::Key_Community Qt::Key_AudioRewind Qt::Key_BackForward Qt::Key_ApplicationLeft Qt::Key_ApplicationRight Qt::Key_Book Qt::Key_CD Qt::Key_Clear Qt::Key_ClearGrab Qt::Key_Close Qt::Key_Copy Qt::Key_Cut Qt::Key_Display Qt::Key_DOS Qt::Key_Documents Qt::Key_Excel Qt::Key_Explorer Qt::Key_Game Qt::Key_Go Qt::Key_iTouch Qt::Key_LogOff Qt::Key_Market Qt::Key_Meeting Qt::Key_MenuKB Qt::Key_MenuPB Qt::Key_MySites Qt::Key_News Qt::Key_OfficeHome Qt::Key_Option Qt::Key_Paste Qt::Key_Phone Qt::Key_Reply Qt::Key_Reload Qt::Key_RotateWindows Qt::Key_RotationPB Qt::Key_RotationKB Qt::Key_Save Qt::Key_Send Qt::Key_Spell Qt::Key_SplitScreen Qt::Key_Support Qt::Key_TaskPane Qt::Key_Terminal Qt::Key_Tools Qt::Key_Travel Qt::Key_Video Qt::Key_Word Qt::Key_Xfer Qt::Key_ZoomIn Qt::Key_ZoomOut Qt::Key_Away Qt::Key_Messenger Qt::Key_WebCam Qt::Key_MailForward Qt::Key_Pictures Qt::Key_Music Qt::Key_Battery Qt::Key_Bluetooth Qt::Key_WLAN Qt::Key_UWB Qt::Key_AudioForward Qt::Key_AudioRepeat Qt::Key_AudioRandomPlay Qt::Key_Subtitle Qt::Key_AudioCycleTrack Qt::Key_Time Qt::Key_Select Qt::Key_View Qt::Key_TopMenu Qt::Key_Suspend Qt::Key_Hibernate Qt::Key_Launch0 Qt::Key_Launch1 Qt::Key_Launch2 Qt::Key_Launch3 Qt::Key_Launch4 Qt::Key_Launch5 Qt::Key_Launch6 Qt::Key_Launch7 Qt::Key_Launch8 Qt::Key_Launch9 Qt::Key_LaunchA Qt::Key_LaunchB Qt::Key_LaunchC Qt::Key_LaunchD Qt::Key_LaunchE Qt::Key_LaunchF</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2osx_2kkeyserver_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KKeyServer TransKey qt_code mac_code TransKey qtKeyToChar Qt::Key_Escape kEscapeCharCode Qt::Key_Tab kTabCharCode Qt::Key_Backtab kTabCharCode Qt::Key_Backspace kBackspaceCharCode Qt::Key_Return kReturnCharCode Qt::Key_Enter kEnterCharCode Qt::Key_Delete kDeleteCharCode Qt::Key_Clear kClearCharCode Qt::Key_Home kHomeCharCode Qt::Key_End kEndCharCode Qt::Key_Left kLeftArrowCharCode Qt::Key_Up kUpArrowCharCode Qt::Key_Right kRightArrowCharCode Qt::Key_Down kDownArrowCharCode Qt::Key_PageUp kPageUpCharCode Qt::Key_PageDown kPageDownCharCode Qt::Key_Help kHelpCharCode Qt::Key_nobreakspace kNonBreakingSpaceCharCode QMultiMap&lt;int, uint&gt; scancodes lastLayoutID TISInputSourceRef lastLayout KeyboardLayoutRef lastLayout NULL updateScancodes TISInputSourceRef layout TISCopyCurrentKeyboardLayoutInputSource layout qWarning layout lastLayout CFRelease layout name TISGetInputSourceProperty layout kTISPropertyLocalizedName qDebug CFStringGetCStringPtr CFStringRef name lastLayout layout scancodes clear CFDataRef data CFDataRef TISGetInputSourceProperty layout kTISPropertyUnicodeKeyLayoutData UCKeyboardLayout ucData data UCKeyboardLayout CFDataGetBytePtr data ucData qWarning i i i UInt32 tmpState UniChar str UniCharCount actualLength OSStatus err UCKeyTranslate ucData i kUCKeyActionDown LMGetKbdType kUCKeyTranslateNoDeadKeysMask tmpState actualLength str err noErr qWarning err str str kFunctionKeyCharCode scancodes insert str i KeyboardLayoutRef layout KLGetCurrentKeyboardLayout layout noErr qWarning layout lastLayout name KLGetKeyboardLayoutProperty layout kKLName const_cast&lt;const void **&gt; name qDebug CFStringGetCStringPtr CFStringRef name lastLayout layout scancodes clear kchr KLGetKeyboardLayoutProperty layout kKLKCHRData const_cast&lt;const void **&gt; kchr noErr qWarning i i i UInt32 tmpState UInt32 chr KeyTranslate kchr i tmpState chr chr kFunctionKeyCharCode scancodes insert chr i TransKey functionKeys SCANCODE F1 SCANCODE F2 SCANCODE F3 SCANCODE F4 SCANCODE F5 SCANCODE F6 SCANCODE F7 SCANCODE F8 SCANCODE F9 SCANCODE F10 keyQtToSymMac keyQt sym keyQt x20 keyQt Qt::Key_A sym keyQt keyQt Qt::Key_A keyQt Qt::Key_Z sym keyQt Qt::Key_A keyQt Qt::Key_Z keyQt x60 sym keyQt keyQt x7B keyQt x7F sym keyQt keyQt Qt::Key_F1 keyQt Qt::Key_F35 sym kFunctionKeyCharCode i qtKeyToChar i qt_code i qtKeyToChar i qt_code keyQt sym qtKeyToChar i mac_code keyQtToCodeMac keyQt QList&lt;uint&gt; keyCodes updateScancodes keyCodes clear keyQt Qt chr keyQtToSymMac keyQt chr chr kFunctionKeyCharCode i functionKeys i qt_code i functionKeys i qt_code keyQt keyCodes append functionKeys i mac_code keyCodes scancodes values chr keyCodes count keyQtToModMac keyQt uint mod mod keyQt Qt::ShiftModifier mod shiftKey keyQt Qt::ControlModifier mod cmdKey keyQt Qt::AltModifier mod optionKey keyQt Qt::MetaModifier mod controlKey keyQt Qt::KeypadModifier mod kEventKeyModifierNumLockMask keyQt Qt::KeyboardModifierMask Qt::Key_Backtab mod shiftKey</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2windows_2kkeyserver_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KKeyServer TransKey uint keySymQt uint keySymWin TransKey KeyTbl Qt::Key_Cancel VK_CANCEL Qt::Key_Backspace VK_BACK Qt::Key_Tab VK_TAB Qt::Key_Clear VK_CLEAR Qt::Key_Return VK_RETURN Qt::Key_Shift VK_SHIFT Qt::Key_Control VK_CONTROL Qt::Key_Alt VK_MENU Qt::Key_Pause VK_PAUSE Qt::Key_CapsLock VK_CAPITAL Qt::Key_Escape VK_ESCAPE Qt::Key_Mode_switch VK_MODECHANGE Qt::Key_Space VK_SPACE Qt::Key_PageUp VK_PRIOR Qt::Key_PageDown VK_NEXT Qt::Key_End VK_END Qt::Key_Home VK_HOME Qt::Key_Left VK_LEFT Qt::Key_Up VK_UP Qt::Key_Right VK_RIGHT Qt::Key_Down VK_DOWN Qt::Key_Select VK_SELECT Qt::Key_Printer VK_PRINT Qt::Key_Execute VK_EXECUTE Qt::Key_Print VK_SNAPSHOT Qt::Key_Insert VK_INSERT Qt::Key_Delete VK_DELETE Qt::Key_Help VK_HELP Qt::Key_Meta VK_LWIN Qt::Key_Meta VK_RWIN Qt::Key_Menu VK_APPS Qt::Key_Sleep VK_SLEEP Qt::Key_0 VK_NUMPAD0 Qt::Key_1 VK_NUMPAD1 Qt::Key_2 VK_NUMPAD2 Qt::Key_3 VK_NUMPAD3 Qt::Key_4 VK_NUMPAD4 Qt::Key_5 VK_NUMPAD5 Qt::Key_6 VK_NUMPAD6 Qt::Key_7 VK_NUMPAD7 Qt::Key_8 VK_NUMPAD8 Qt::Key_9 VK_NUMPAD9 Qt::Key_Asterisk VK_MULTIPLY Qt::Key_Plus VK_ADD Qt::Key_Comma VK_SEPARATOR Qt::Key_Minus VK_SUBTRACT Qt::Key_Period VK_DECIMAL Qt::Key_Slash VK_DIVIDE Qt::Key_F1 VK_F1 Qt::Key_F2 VK_F2 Qt::Key_F3 VK_F3 Qt::Key_F4 VK_F4 Qt::Key_F5 VK_F5 Qt::Key_F6 VK_F6 Qt::Key_F7 VK_F7 Qt::Key_F8 VK_F8 Qt::Key_F9 VK_F9 Qt::Key_F10 VK_F10 Qt::Key_F11 VK_F11 Qt::Key_F12 VK_F12 Qt::Key_F13 VK_F13 Qt::Key_F14 VK_F14 Qt::Key_F15 VK_F15 Qt::Key_F16 VK_F16 Qt::Key_F17 VK_F17 Qt::Key_F18 VK_F18 Qt::Key_F19 VK_F19 Qt::Key_F20 VK_F20 Qt::Key_F21 VK_F21 Qt::Key_F22 VK_F22 Qt::Key_F23 VK_F23 Qt::Key_F24 VK_F24 Qt::Key_NumLock VK_NUMLOCK Qt::Key_ScrollLock VK_SCROLL Qt::Key_Shift VK_LSHIFT Qt::Key_Shift VK_RSHIFT Qt::Key_Control VK_LCONTROL Qt::Key_Control VK_RCONTROL Qt::Key_Alt VK_LMENU Qt::Key_Alt VK_RMENU Qt::Key_Back VK_BROWSER_BACK Qt::Key_Forward VK_BROWSER_FORWARD Qt::Key_Refresh VK_BROWSER_REFRESH Qt::Key_Stop VK_BROWSER_STOP Qt::Key_Search VK_BROWSER_SEARCH Qt::Key_Favorites VK_BROWSER_FAVORITES Qt::Key_HomePage VK_BROWSER_HOME Qt::Key_VolumeMute VK_VOLUME_MUTE Qt::Key_VolumeDown VK_VOLUME_DOWN Qt::Key_VolumeUp VK_VOLUME_UP Qt::Key_MediaNext VK_MEDIA_NEXT_TRACK Qt::Key_MediaPrevious VK_MEDIA_PREV_TRACK Qt::Key_MediaStop VK_MEDIA_STOP Qt::Key_MediaPlay VK_MEDIA_PLAY_PAUSE Qt::Key_LaunchMail VK_LAUNCH_MAIL Qt::Key_LaunchMedia VK_LAUNCH_MEDIA_SELECT Qt::Key_Launch0 VK_LAUNCH_APP1 Qt::Key_Launch1 VK_LAUNCH_APP2 Qt::Key_Play VK_PLAY Qt::Key_Zoom VK_ZOOM Qt::Key_Clear VK_OEM_CLEAR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2windows_2kkeyserver_8cpp_source.html#l00198</field>
    <field name="keywords"></field>
    <field name="text">keyQtToModWin keyQt uint mod mod keyQt Qt::ShiftModifier mod MOD_SHIFT keyQt Qt::ControlModifier mod MOD_CONTROL keyQt Qt::AltModifier mod MOD_ALT keyQt Qt::MetaModifier mod MOD_WIN modWinToKeyQt uint mod keyQt keyQt mod MOD_SHIFT keyQt Qt::ShiftModifier mod MOD_CONTROL keyQt Qt::ControlModifier mod MOD_ALT keyQt Qt::AltModifier mod MOD_WIN keyQt Qt::MetaModifier</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2windows_2kkeyserver_8cpp_source.html#l00236</field>
    <field name="keywords"></field>
    <field name="text">keyQtToCodeWin keyQt uint sym symQt keyQt Qt symQt Qt::Key_A symQt Qt::Key_Z sym symQt uint i i KeyTbl i KeyTbl i keySymQt symQt sym KeyTbl i keySymWin sym symQt Qt::Key_Shift symQt Qt::Key_Control symQt Qt::Key_Alt symQt Qt::Key_Meta symQt Qt::Key_Direction_L symQt Qt::Key_Direction_R codeWinToKeyQt uint sym keyQt sym Qt::Key_A sym Qt::Key_Z keyQt sym uint i i KeyTbl i KeyTbl i keySymWin sym keyQt KeyTbl i keySymQt keyQt</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KKeyServer Mod m_mod X11ModInfo modQt modX SymVariation uint sym symVariation bActive SymName uint sym psName TransKey keySymQt uint keySymX X11ModInfo g_rgX11ModInfo Qt::SHIFT X11_ONLY ShiftMask Qt::CTRL X11_ONLY ControlMask Qt::ALT X11_ONLY Mod1Mask Qt::META X11_ONLY Mod4Mask TransKey g_rgQtToSymX Qt::Key_Escape XK_Escape Qt::Key_Tab XK_Tab Qt::Key_Backtab XK_ISO_Left_Tab Qt::Key_Backspace XK_BackSpace Qt::Key_Return XK_Return Qt::Key_Enter XK_KP_Enter Qt::Key_Insert XK_Insert Qt::Key_Delete XK_Delete Qt::Key_Pause XK_Pause Qt::Key_Print XK_F22 Qt::Key_Print XK_Print Qt::Key_SysReq XK_Sys_Req Qt::Key_Home XK_Home Qt::Key_End XK_End Qt::Key_Left XK_Left Qt::Key_Up XK_Up Qt::Key_Right XK_Right Qt::Key_Down XK_Down Qt::Key_PageUp XK_Prior Qt::Key_PageDown XK_Next Qt::Key_CapsLock XK_Caps_Lock Qt::Key_NumLock XK_Num_Lock Qt::Key_ScrollLock XK_Scroll_Lock Qt::Key_F1 XK_F1 Qt::Key_F2 XK_F2 Qt::Key_F3 XK_F3 Qt::Key_F4 XK_F4 Qt::Key_F5 XK_F5 Qt::Key_F6 XK_F6 Qt::Key_F7 XK_F7 Qt::Key_F8 XK_F8 Qt::Key_F9 XK_F9 Qt::Key_F10 XK_F10 Qt::Key_F11 XK_F11 Qt::Key_F12 XK_F12 Qt::Key_F13 XK_F13 Qt::Key_F14 XK_F14 Qt::Key_F15 XK_F15 Qt::Key_F16 XK_F16 Qt::Key_F17 XK_F17 Qt::Key_F18 XK_F18 Qt::Key_F19 XK_F19 Qt::Key_F20 XK_F20 Qt::Key_F21 XK_F21 Qt::Key_F22 XK_F22 Qt::Key_F23 XK_F23 Qt::Key_F24 XK_F24 Qt::Key_F25 XK_F25 Qt::Key_F26 XK_F26 Qt::Key_F27 XK_F27 Qt::Key_F28 XK_F28 Qt::Key_F29 XK_F29 Qt::Key_F30 XK_F30 Qt::Key_F31 XK_F31 Qt::Key_F32 XK_F32 Qt::Key_F33 XK_F33 Qt::Key_F34 XK_F34 Qt::Key_F35 XK_F35 Qt::Key_Super_L XK_Super_L Qt::Key_Super_R XK_Super_R Qt::Key_Menu XK_Menu Qt::Key_Hyper_L XK_Hyper_L Qt::Key_Hyper_R XK_Hyper_R Qt::Key_Help XK_Help XK_KP_Divide XK_KP_Multiply XK_KP_Subtract XK_KP_Add Qt::Key_Return XK_KP_Enter Qt::Key_Back XF86XK_Back Qt::Key_Forward XF86XK_Forward Qt::Key_Stop XF86XK_Stop Qt::Key_Refresh XF86XK_Refresh Qt::Key_Favorites XF86XK_Favorites Qt::Key_LaunchMedia XF86XK_AudioMedia Qt::Key_OpenUrl XF86XK_OpenURL Qt::Key_HomePage XF86XK_HomePage Qt::Key_Search XF86XK_Search Qt::Key_VolumeDown XF86XK_AudioLowerVolume Qt::Key_VolumeMute XF86XK_AudioMute Qt::Key_VolumeUp XF86XK_AudioRaiseVolume Qt::Key_MediaPlay XF86XK_AudioPlay Qt::Key_MediaStop XF86XK_AudioStop Qt::Key_MediaPrevious XF86XK_AudioPrev Qt::Key_MediaNext XF86XK_AudioNext Qt::Key_MediaRecord XF86XK_AudioRecord Qt::Key_LaunchMail XF86XK_Mail Qt::Key_Launch0 XF86XK_MyComputer Qt::Key_Launch1 XF86XK_Calculator Qt::Key_Memo XF86XK_Memo Qt::Key_ToDoList XF86XK_ToDoList Qt::Key_Calendar XF86XK_Calendar Qt::Key_PowerDown XF86XK_PowerDown Qt::Key_ContrastAdjust XF86XK_ContrastAdjust Qt::Key_Standby XF86XK_Standby Qt::Key_MonBrightnessUp XF86XK_MonBrightnessUp Qt::Key_MonBrightnessDown XF86XK_MonBrightnessDown Qt::Key_KeyboardLightOnOff XF86XK_KbdLightOnOff Qt::Key_KeyboardBrightnessUp XF86XK_KbdBrightnessUp Qt::Key_KeyboardBrightnessDown XF86XK_KbdBrightnessDown Qt::Key_PowerOff XF86XK_PowerOff Qt::Key_WakeUp XF86XK_WakeUp Qt::Key_Eject XF86XK_Eject Qt::Key_ScreenSaver XF86XK_ScreenSaver Qt::Key_WWW XF86XK_WWW Qt::Key_Sleep XF86XK_Sleep Qt::Key_LightBulb XF86XK_LightBulb Qt::Key_Shop XF86XK_Shop Qt::Key_History XF86XK_History Qt::Key_AddFavorite XF86XK_AddFavorite Qt::Key_HotLinks XF86XK_HotLinks Qt::Key_BrightnessAdjust XF86XK_BrightnessAdjust Qt::Key_Finance XF86XK_Finance Qt::Key_Community XF86XK_Community Qt::Key_AudioRewind XF86XK_AudioRewind Qt::Key_BackForward XF86XK_BackForward Qt::Key_ApplicationLeft XF86XK_ApplicationLeft Qt::Key_ApplicationRight XF86XK_ApplicationRight Qt::Key_Book XF86XK_Book Qt::Key_CD XF86XK_CD Qt::Key_Calculator XF86XK_Calculater Qt::Key_Clear XF86XK_Clear Qt::Key_ClearGrab XF86XK_ClearGrab Qt::Key_Close XF86XK_Close Qt::Key_Copy XF86XK_Copy Qt::Key_Cut XF86XK_Cut Qt::Key_Display XF86XK_Display Qt::Key_DOS XF86XK_DOS Qt::Key_Documents XF86XK_Documents Qt::Key_Excel XF86XK_Excel Qt::Key_Explorer XF86XK_Explorer Qt::Key_Game XF86XK_Game Qt::Key_Go XF86XK_Go Qt::Key_iTouch XF86XK_iTouch Qt::Key_LogOff XF86XK_LogOff Qt::Key_Market XF86XK_Market Qt::Key_Meeting XF86XK_Meeting Qt::Key_MenuKB XF86XK_MenuKB Qt::Key_MenuPB XF86XK_MenuPB Qt::Key_MySites XF86XK_MySites Qt::Key_News XF86XK_News Qt::Key_OfficeHome XF86XK_OfficeHome Qt::Key_Option XF86XK_Option Qt::Key_Paste XF86XK_Paste Qt::Key_Phone XF86XK_Phone Qt::Key_Reply XF86XK_Reply Qt::Key_Reload XF86XK_Reload Qt::Key_RotateWindows XF86XK_RotateWindows Qt::Key_RotationPB XF86XK_RotationPB Qt::Key_RotationKB XF86XK_RotationKB Qt::Key_Save XF86XK_Save Qt::Key_Send XF86XK_Send Qt::Key_Spell XF86XK_Spell Qt::Key_SplitScreen XF86XK_SplitScreen Qt::Key_Support XF86XK_Support Qt::Key_TaskPane XF86XK_TaskPane Qt::Key_Terminal XF86XK_Terminal Qt::Key_Tools XF86XK_Tools Qt::Key_Travel XF86XK_Travel Qt::Key_Video XF86XK_Video Qt::Key_Word XF86XK_Word Qt::Key_Xfer XF86XK_Xfer Qt::Key_ZoomIn XF86XK_ZoomIn Qt::Key_ZoomOut XF86XK_ZoomOut Qt::Key_Away XF86XK_Away Qt::Key_Messenger XF86XK_Messenger Qt::Key_WebCam XF86XK_WebCam Qt::Key_MailForward XF86XK_MailForward Qt::Key_Pictures XF86XK_Pictures Qt::Key_Music XF86XK_Music Qt::Key_Battery XF86XK_Battery Qt::Key_Bluetooth XF86XK_Bluetooth Qt::Key_WLAN XF86XK_WLAN Qt::Key_UWB XF86XK_UWB Qt::Key_AudioForward XF86XK_AudioForward Qt::Key_AudioRepeat XF86XK_AudioRepeat Qt::Key_AudioRandomPlay XF86XK_AudioRandomPlay Qt::Key_Subtitle XF86XK_Subtitle Qt::Key_AudioCycleTrack XF86XK_AudioCycleTrack Qt::Key_Time XF86XK_Time Qt::Key_Select XF86XK_Select Qt::Key_View XF86XK_View Qt::Key_TopMenu XF86XK_TopMenu Qt::Key_Bluetooth XF86XK_Bluetooth Qt::Key_Suspend XF86XK_Suspend Qt::Key_Hibernate XF86XK_Hibernate Qt::Key_TouchpadToggle XF86XK_TouchpadToggle Qt::Key_TouchpadOn XF86XK_TouchpadOn Qt::Key_TouchpadOff XF86XK_TouchpadOff Qt::Key_MicMute XF86XK_AudioMicMute Qt::Key_Launch2 XF86XK_Launch0 Qt::Key_Launch3 XF86XK_Launch1 Qt::Key_Launch4 XF86XK_Launch2 Qt::Key_Launch5 XF86XK_Launch3 Qt::Key_Launch6 XF86XK_Launch4 Qt::Key_Launch7 XF86XK_Launch5 Qt::Key_Launch8 XF86XK_Launch6 Qt::Key_Launch9 XF86XK_Launch7 Qt::Key_LaunchA XF86XK_Launch8 Qt::Key_LaunchB XF86XK_Launch9 Qt::Key_LaunchC XF86XK_LaunchA Qt::Key_LaunchD XF86XK_LaunchB Qt::Key_LaunchE XF86XK_LaunchC Qt::Key_LaunchF XF86XK_LaunchD checkDisplay QX11Info::display qCCritical LOG_KKEYSERVER_X11 endl qCCritical LOG_KKEYSERVER_X11 endl g_bInitializedMods uint g_modXNumLock g_modXScrollLock g_modXModeSwitch g_alt_mask g_meta_mask g_super_mask g_hyper_mask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00471</field>
    <field name="keywords"></field>
    <field name="text">initializeMods g_modXNumLock g_modXScrollLock g_modXModeSwitch g_alt_mask g_meta_mask g_super_mask g_hyper_mask QX11Info::isPlatformX11 qCWarning LOG_KKEYSERVER_X11 g_bInitializedMods checkDisplay XModifierKeymap xmk XGetModifierMapping QX11Info::display min_keycode max_keycode keysyms_per_keycode XDisplayKeycodes QX11Info::display min_keycode max_keycode XFree XGetKeyboardMapping QX11Info::display min_keycode keysyms_per_keycode i Mod1MapIndex i i uint mask i uint keySymX NoSymbol j j xmk max_keypermod j k k keysyms_per_keycode k keySymX XKeycodeToKeysym QX11Info::display xmk modifiermap xmk max_keypermod i j k keySymX XK_Alt_L XK_Alt_R g_alt_mask mask XK_Super_L XK_Super_R g_super_mask mask XK_Hyper_L XK_Hyper_R g_hyper_mask mask XK_Meta_L XK_Meta_R g_meta_mask mask XK_Num_Lock g_modXNumLock mask XK_Scroll_Lock g_modXScrollLock mask XK_Mode_switch g_modXModeSwitch mask qCDebug LOG_KKEYSERVER_X11 g_alt_mask qCDebug LOG_KKEYSERVER_X11 g_meta_mask qCDebug LOG_KKEYSERVER_X11 g_super_mask qCDebug LOG_KKEYSERVER_X11 g_hyper_mask qCDebug LOG_KKEYSERVER_X11 g_modXNumLock qCDebug LOG_KKEYSERVER_X11 g_modXScrollLock qCDebug LOG_KKEYSERVER_X11 g_modXModeSwitch g_hyper_mask g_super_mask g_meta_mask g_alt_mask qCDebug LOG_KKEYSERVER_X11 g_hyper_mask g_super_mask g_meta_mask g_alt_mask g_super_mask g_meta_mask g_alt_mask qCDebug LOG_KKEYSERVER_X11 g_super_mask g_meta_mask g_alt_mask g_meta_mask g_alt_mask qCDebug LOG_KKEYSERVER_X11 g_meta_mask g_alt_mask g_meta_mask qCDebug LOG_KKEYSERVER_X11 g_super_mask qCDebug LOG_KKEYSERVER_X11 g_meta_mask g_super_mask g_hyper_mask qCDebug LOG_KKEYSERVER_X11 g_meta_mask g_hyper_mask g_meta_mask qCDebug LOG_KKEYSERVER_X11 g_alt_mask qCDebug LOG_KKEYSERVER_X11 g_meta_mask qCDebug LOG_KKEYSERVER_X11 g_super_mask qCDebug LOG_KKEYSERVER_X11 g_hyper_mask qCDebug LOG_KKEYSERVER_X11 g_modXNumLock qCDebug LOG_KKEYSERVER_X11 g_modXScrollLock qCDebug LOG_KKEYSERVER_X11 g_modXModeSwitch g_meta_mask qCWarning LOG_KKEYSERVER_X11 g_rgX11ModInfo modX g_alt_mask g_rgX11ModInfo modX g_meta_mask XFreeModifiermap xmk g_bInitializedMods</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00618</field>
    <field name="keywords"></field>
    <field name="text">uint modXShift ShiftMask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00622</field>
    <field name="keywords"></field>
    <field name="text">uint modXCtrl ControlMask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00626</field>
    <field name="keywords"></field>
    <field name="text">uint modXAlt g_bInitializedMods initializeMods g_alt_mask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00632</field>
    <field name="keywords"></field>
    <field name="text">uint modXMeta g_bInitializedMods initializeMods g_meta_mask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00639</field>
    <field name="keywords"></field>
    <field name="text">uint modXNumLock g_bInitializedMods initializeMods g_modXNumLock</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00645</field>
    <field name="keywords"></field>
    <field name="text">uint modXLock LockMask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00649</field>
    <field name="keywords"></field>
    <field name="text">uint modXScrollLock g_bInitializedMods initializeMods g_modXScrollLock</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00655</field>
    <field name="keywords"></field>
    <field name="text">uint modXModeSwitch g_bInitializedMods initializeMods g_modXModeSwitch</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00662</field>
    <field name="keywords"></field>
    <field name="text">keyboardHasMetaKey modXMeta uint getModsRequired uint sym QX11Info::isPlatformX11 qCWarning LOG_KKEYSERVER_X11 uint mod sym XK_Sys_Req Qt::ALT sym XK_Break Qt::CTRL sym x3000 QChar c sym c isLetter c toLower c toUpper sym c toUpper unicode Qt::SHIFT uchar code XKeysymToKeycode QX11Info::display sym code sym XKeycodeToKeysym QX11Info::display code sym XKeycodeToKeysym QX11Info::display code mod Qt::SHIFT sym XKeycodeToKeysym QX11Info::display code mod MODE_SWITCH sym XKeycodeToKeysym QX11Info::display code mod Qt::SHIFT MODE_SWITCH mod</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00708</field>
    <field name="keywords"></field>
    <field name="text">keyQtToCodeX keyQt keyCode QX11Info::isPlatformX11 qCWarning LOG_KKEYSERVER_X11 sym uint mod keyQtToSymX keyQt sym keyQtToModX keyQt mod uint modExtra getModsRequired sym sym keyQtToModX keyQt Qt::KeyboardModifierMask modExtra mod keyCode keyCode XKeysymToKeycode QX11Info::display sym</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00732</field>
    <field name="keywords"></field>
    <field name="text">keyQtToSymX keyQt keySym symQt keyQt Qt symQt x1000 keySym QChar symQt toUpper unicode uint i i g_rgQtToSymX TransKey i g_rgQtToSymX i keySymQt symQt keySym g_rgQtToSymX i keySymX keySym symQt Qt::Key_Shift symQt Qt::Key_Control symQt Qt::Key_Alt symQt Qt::Key_Meta symQt Qt::Key_Direction_L symQt Qt::Key_Direction_R</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00756</field>
    <field name="keywords"></field>
    <field name="text">symXToKeyQt uint keySym keyQt keyQt Qt::Key_unknown keySym x1000 keySym keySym keyQt QChar keySym toUpper unicode keyQt keySym keySym x3000 keyQt keySym uint i i g_rgQtToSymX TransKey i g_rgQtToSymX i keySymX keySym keyQt g_rgQtToSymX i keySymQt keyQt Qt::Key_unknown</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00785</field>
    <field name="keywords"></field>
    <field name="text">keyQtToModX modQt uint modX g_bInitializedMods initializeMods modX i i i modQt g_rgX11ModInfo i modQt g_rgX11ModInfo i modX modX g_rgX11ModInfo i modX</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00806</field>
    <field name="keywords"></field>
    <field name="text">modXToQt uint modX modQt g_bInitializedMods initializeMods modQt i i i modX g_rgX11ModInfo i modX modQt g_rgX11ModInfo i modQt codeXToSym uchar codeX uint modX uint sym QX11Info::isPlatformX11 qCWarning LOG_KKEYSERVER_X11 KeySym keySym XKeyPressedEvent event checkDisplay type KeyPress display QX11Info::display state modX keycode codeX XLookupString event keySym sym uint keySym</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00843</field>
    <field name="keywords"></field>
    <field name="text">uint accelModMaskX modXShift modXCtrl modXAlt modXMeta</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00848</field>
    <field name="keywords"></field>
    <field name="text">xEventToQt XEvent e keyQt Q_ASSERT e type KeyPress e type KeyRelease uchar keyCodeX e xkey keycode uint keyModX e xkey state accelModMaskX MODE_SWITCH KeySym keySym buffer XLookupString XKeyEvent e buffer keySym uint keySymX uint keySym e xkey state modXNumLock uint sym XKeycodeToKeysym QX11Info::display keyCodeX sym XK_KP_Space sym XK_KP_9 sym XK_KP_Multiply XK_KP_Add XK_KP_Subtract XK_KP_Divide keyModX modXShift keyModX modXShift keyModX modXShift keyCodeQt keyModQt symXToKeyQt keySymX keyCodeQt modXToQt keyModX keyModQt keyQt keyCodeQt keyModQt</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00894</field>
    <field name="keywords"></field>
    <field name="text">xcbKeyPressEventToQt xcb_generic_event_t e keyQt e response_type x80 XCB_KEY_PRESS e response_type x80 XCB_KEY_RELEASE xcbKeyPressEventToQt reinterpret_cast&lt;xcb_key_press_event_t *&gt; e keyQt</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.cpp</field>
    <field name="url">platforms_2xcb_2kkeyserver_8cpp_source.html#l00902</field>
    <field name="keywords"></field>
    <field name="text">xcbKeyPressEventToQt xcb_key_press_event_t e keyQt xcb_keycode_t keyCodeX e detail uint keyModX e state accelModMaskX MODE_SWITCH xcb_key_symbols_t symbols xcb_key_symbols_alloc QX11Info::connection xcb_keysym_t keySymX xcb_key_symbols_get_keysym symbols keyCodeX e state modXNumLock keySymX XK_KP_Space keySymX XK_KP_9 keySymX XK_KP_Multiply XK_KP_Add XK_KP_Subtract XK_KP_Divide keyModX modXShift keyModX modXShift keyModX modXShift keyCodeQt keyModQt symXToKeyQt keySymX keyCodeQt modXToQt keyModX keyModQt keyQt keyCodeQt keyModQt xcb_key_symbols_free symbols</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver.h</field>
    <field name="url">kkeyserver_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QString KKeyServer KWINDOWSYSTEM_EXPORT QString modToStringUser uint mod KWINDOWSYSTEM_EXPORT uint stringUserToMod QString mod KWINDOWSYSTEM_EXPORT isShiftAsModifierAllowed keyQt</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver_mac.h</field>
    <field name="url">kkeyserver__mac_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KKeyServer KWINDOWSYSTEM_EXPORT keyQtToSymMac keyQt sym KWINDOWSYSTEM_EXPORT keyQtToCodeMac keyQt QList&lt;uint&gt; keyCodes KWINDOWSYSTEM_EXPORT keyQtToModMac keyQt uint mod</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver_win.h</field>
    <field name="url">kkeyserver__win_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KKeyServer KWINDOWSYSTEM_EXPORT keyQtToModWin keyQt uint mod KWINDOWSYSTEM_EXPORT modWinToKeyQt uint mod keyQt KWINDOWSYSTEM_EXPORT keyQtToCodeWin keyQt uint sym KWINDOWSYSTEM_EXPORT codeWinToKeyQt uint sym keyQt</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kkeyserver_x11.h</field>
    <field name="url">kkeyserver__x11_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KKeyServer MODE_SWITCH KWINDOWSYSTEM_EXPORT initializeMods KWINDOWSYSTEM_EXPORT keyboardHasMetaKey KWINDOWSYSTEM_EXPORT uint modXShift KWINDOWSYSTEM_EXPORT uint modXLock KWINDOWSYSTEM_EXPORT uint modXCtrl KWINDOWSYSTEM_EXPORT uint modXAlt KWINDOWSYSTEM_EXPORT uint modXMeta KWINDOWSYSTEM_EXPORT uint modXNumLock KWINDOWSYSTEM_EXPORT uint modXScrollLock KWINDOWSYSTEM_EXPORT uint modXModeSwitch KWINDOWSYSTEM_EXPORT uint accelModMaskX KWINDOWSYSTEM_EXPORT keyQtToSymX keyQt sym KWINDOWSYSTEM_EXPORT keyQtToCodeX keyQt keyCode KWINDOWSYSTEM_EXPORT keyQtToModX keyQt uint mod KWINDOWSYSTEM_EXPORT symXToKeyQt uint sym keyQt KWINDOWSYSTEM_EXPORT modXToQt uint modX modQt KWINDOWSYSTEM_EXPORT xEventToQt XEvent e keyModQt KWINDOWSYSTEM_EXPORT xcbKeyPressEventToQt xcb_generic_event_t e keyModQt KWINDOWSYSTEM_EXPORT xcbKeyPressEventToQt xcb_key_press_event_t e keyModQt</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kmanagerselection.h</field>
    <field name="url">kmanagerselection_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionowner.cpp</field>
    <field name="url">kselectionowner_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">xcb_window_t get_selection_owner xcb_connection_t c xcb_atom_t selection xcb_window_t owner XCB_NONE xcb_get_selection_owner_reply_t reply xcb_get_selection_owner_reply c xcb_get_selection_owner c selection reply owner reply owner free reply owner xcb_atom_t intern_atom xcb_connection_t c name xcb_atom_t atom XCB_NONE xcb_intern_atom_reply_t reply xcb_intern_atom_reply c xcb_intern_atom c strlen name name reply atom reply atom free reply atom KSelectionOwner::Private QAbstractNativeEventFilter State Idle WaitingForTimestamp WaitingForPreviousOwner Private KSelectionOwner owner_P xcb_atom_t selection_P xcb_connection_t c xcb_window_t root state Idle selection selection_P connection c root root window XCB_NONE prev_owner XCB_NONE timestamp XCB_CURRENT_TIME extra1 extra2 force_kill false owner owner_P QCoreApplication::instance installNativeEventFilter claimSucceeded gotTimestamp timeout State state xcb_atom_t selection xcb_connection_t connection xcb_window_t root xcb_window_t window xcb_window_t prev_owner xcb_timestamp_t timestamp uint32_t extra1 extra2 QBasicTimer timer force_kill xcb_atom_t manager_atom xcb_atom_t xa_multiple xcb_atom_t xa_targets xcb_atom_t xa_timestamp Private create KSelectionOwner owner xcb_atom_t selection_P screen_P Private create KSelectionOwner owner selection_P screen_P Private create KSelectionOwner owner xcb_atom_t selection_P xcb_connection_t c xcb_window_t root Private create KSelectionOwner owner selection_P xcb_connection_t c xcb_window_t root nativeEventFilter QByteArray eventType message result Q_DECL_OVERRIDE Q_UNUSED result eventType owner filterEvent message KSelectionOwner owner KSelectionOwner::Private KSelectionOwner::Private::create KSelectionOwner owner xcb_atom_t selection_P screen_P QGuiApplication::platformName QStringLiteral create owner selection_P QX11Info::connection QX11Info::appRootWindow screen_P qWarning Q_NULLPTR KSelectionOwner::Private KSelectionOwner::Private::create KSelectionOwner owner xcb_atom_t selection_P xcb_connection_t c xcb_window_t root Private owner selection_P c root KSelectionOwner::Private KSelectionOwner::Private::create KSelectionOwner owner selection_P screen_P QGuiApplication::platformName QStringLiteral create owner selection_P QX11Info::connection QX11Info::appRootWindow screen_P qWarning Q_NULLPTR KSelectionOwner::Private KSelectionOwner::Private::create KSelectionOwner owner selection_P xcb_connection_t c xcb_window_t root Private owner intern_atom c selection_P c root</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionowner.cpp</field>
    <field name="url">kselectionowner_8cpp_source.html#l00152</field>
    <field name="keywords"></field>
    <field name="text">KSelectionOwner::KSelectionOwner xcb_atom_t selection_P screen_P QObject parent_P QObject parent_P d Private create this selection_P screen_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionowner.cpp</field>
    <field name="url">kselectionowner_8cpp_source.html#l00158</field>
    <field name="keywords"></field>
    <field name="text">KSelectionOwner::KSelectionOwner selection_P screen_P QObject parent_P QObject parent_P d Private create this selection_P screen_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionowner.cpp</field>
    <field name="url">kselectionowner_8cpp_source.html#l00164</field>
    <field name="keywords"></field>
    <field name="text">KSelectionOwner::KSelectionOwner xcb_atom_t selection xcb_connection_t c xcb_window_t root QObject parent QObject parent d Private create this selection c root</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionowner.cpp</field>
    <field name="url">kselectionowner_8cpp_source.html#l00170</field>
    <field name="keywords"></field>
    <field name="text">KSelectionOwner::KSelectionOwner selection xcb_connection_t c xcb_window_t root QObject parent QObject parent d Private create this selection c root</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionowner.cpp</field>
    <field name="url">kselectionowner_8cpp_source.html#l00176</field>
    <field name="keywords"></field>
    <field name="text">KSelectionOwner::~KSelectionOwner d release d window XCB_WINDOW_NONE xcb_destroy_window d connection d window d KSelectionOwner::Private::claimSucceeded state Idle xcb_client_message_event_t ev ev response_type XCB_CLIENT_MESSAGE ev format ev window root ev type Private::manager_atom ev data data32 timestamp ev data data32 selection ev data data32 window ev data data32 extra1 ev data data32 extra2 xcb_send_event connection root XCB_EVENT_MASK_STRUCTURE_NOTIFY ev emit owner claimedOwnership KSelectionOwner::Private::gotTimestamp Q_ASSERT state WaitingForTimestamp state Idle xcb_connection_t c connection xcb_set_selection_owner c window selection timestamp xcb_window_t new_owner get_selection_owner c selection new_owner window xcb_destroy_window c window timestamp XCB_CURRENT_TIME window XCB_NONE emit owner failedToClaimOwnership prev_owner XCB_NONE force_kill timer start owner state WaitingForPreviousOwner claimSucceeded KSelectionOwner::Private::timeout Q_ASSERT state WaitingForPreviousOwner state Idle force_kill xcb_connection_t c connection xcb_generic_error_t err xcb_request_check c xcb_kill_client_checked c prev_owner free err claimSucceeded emit owner failedToClaimOwnership</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionowner.cpp</field>
    <field name="url">kselectionowner_8cpp_source.html#l00264</field>
    <field name="keywords"></field>
    <field name="text">KSelectionOwner::claim force_P force_kill_P d Q_ASSERT d state Private::Idle Private::manager_atom XCB_NONE getAtoms d timestamp XCB_CURRENT_TIME release xcb_connection_t c d connection d prev_owner get_selection_owner c d selection d prev_owner XCB_NONE force_P emit failedToClaimOwnership uint32_t mask XCB_EVENT_MASK_STRUCTURE_NOTIFY xcb_change_window_attributes c d prev_owner XCB_CW_EVENT_MASK mask uint32_t values XCB_EVENT_MASK_PROPERTY_CHANGE XCB_EVENT_MASK_STRUCTURE_NOTIFY d window xcb_generate_id c xcb_create_window c XCB_COPY_FROM_PARENT d window d root XCB_WINDOW_CLASS_INPUT_ONLY XCB_COPY_FROM_PARENT XCB_CW_OVERRIDE_REDIRECT XCB_CW_EVENT_MASK values xcb_atom_t tmp XCB_ATOM_ATOM xcb_change_property c XCB_PROP_MODE_REPLACE d window XCB_ATOM_ATOM XCB_ATOM_ATOM tmp d force_kill force_kill_P d state Private::WaitingForTimestamp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionowner.cpp</field>
    <field name="url">kselectionowner_8cpp_source.html#l00312</field>
    <field name="keywords"></field>
    <field name="text">KSelectionOwner::release d d timestamp XCB_CURRENT_TIME xcb_destroy_window d connection d window d window XCB_NONE d timestamp XCB_CURRENT_TIME</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionowner.cpp</field>
    <field name="url">kselectionowner_8cpp_source.html#l00329</field>
    <field name="keywords"></field>
    <field name="text">xcb_window_t KSelectionOwner::ownerWindow d XCB_WINDOW_NONE d timestamp XCB_CURRENT_TIME XCB_NONE d window</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionowner.cpp</field>
    <field name="url">kselectionowner_8cpp_source.html#l00341</field>
    <field name="keywords"></field>
    <field name="text">KSelectionOwner::setData uint32_t extra1_P uint32_t extra2_P d d extra1 extra1_P d extra2 extra2_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionowner.cpp</field>
    <field name="url">kselectionowner_8cpp_source.html#l00350</field>
    <field name="keywords"></field>
    <field name="text">KSelectionOwner::filterEvent ev_P d xcb_generic_event_t xcb_generic_event_t ev_P uint response_type response_type d timestamp CurrentTime ev_P xany window d window handleMessage ev_P response_type XCB_SELECTION_CLEAR xcb_selection_clear_event_t ev xcb_selection_clear_event_t event d timestamp XCB_CURRENT_TIME ev selection d selection d timestamp XCB_CURRENT_TIME xcb_window_t window d window emit lostOwnership uint32_t event_mask XCB_NONE xcb_change_window_attributes d connection window XCB_CW_EVENT_MASK event_mask xcb_destroy_window d connection window XCB_DESTROY_NOTIFY xcb_destroy_notify_event_t ev xcb_destroy_notify_event_t event ev window d prev_owner d state Private::WaitingForPreviousOwner d timer stop d claimSucceeded d prev_owner XCB_NONE d timestamp XCB_CURRENT_TIME ev window d window d timestamp XCB_CURRENT_TIME emit lostOwnership XCB_SELECTION_NOTIFY xcb_selection_notify_event_t ev xcb_selection_notify_event_t event d timestamp XCB_CURRENT_TIME ev selection d selection XCB_SELECTION_REQUEST filter_selection_request event XCB_PROPERTY_NOTIFY xcb_property_notify_event_t ev xcb_property_notify_event_t event ev window d window d state Private::WaitingForTimestamp d timestamp ev time d gotTimestamp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionowner.cpp</field>
    <field name="url">kselectionowner_8cpp_source.html#l00434</field>
    <field name="keywords"></field>
    <field name="text">KSelectionOwner::timerEvent QTimerEvent event d QObject::timerEvent event event timerId d timer timerId d timer stop d timeout QObject::timerEvent event KSelectionOwner::handleMessage XEvent KSelectionOwner::filter_selection_request event d xcb_selection_request_event_t ev xcb_selection_request_event_t event d timestamp XCB_CURRENT_TIME ev selection d selection ev time XCB_CURRENT_TIME ev time d timestamp U xcb_connection_t c d connection handled ev target Private::xa_multiple ev property XCB_NONE MAX_ATOMS xcb_get_property_cookie_t cookie xcb_get_property c ev requestor ev property XCB_GET_PROPERTY_TYPE_ANY MAX_ATOMS xcb_get_property_reply_t reply xcb_get_property_reply c cookie reply reply format reply value_len xcb_atom_t atoms xcb_atom_t xcb_get_property_value reply handled_array MAX_ATOMS uint i i reply value_len i handled_array i handle_selection atoms i atoms i ev requestor all_handled uint i i reply value_len i handled_array i all_handled atoms i XCB_NONE all_handled xcb_change_property c ev requestor ev property XCB_ATOM_ATOM XCB_PROP_MODE_REPLACE reply value_len reinterpret_cast&lt;const void *&gt; atoms handled reply free reply ev property XCB_NONE ev property ev target handled handle_selection ev target ev property ev requestor xcb_selection_notify_event_t xev xev response_type XCB_SELECTION_NOTIFY xev selection ev selection xev requestor ev requestor xev target ev target xev property handled ev property XCB_NONE xcb_send_event c ev requestor xev KSelectionOwner::handle_selection xcb_atom_t target_P xcb_atom_t property_P xcb_window_t requestor_P d target_P Private::xa_timestamp xcb_change_property d connection requestor_P property_P XCB_ATOM_INTEGER XCB_PROP_MODE_REPLACE reinterpret_cast&lt;const void *&gt; d timestamp target_P Private::xa_targets replyTargets property_P requestor_P genericReply target_P property_P requestor_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionowner.cpp</field>
    <field name="url">kselectionowner_8cpp_source.html#l00550</field>
    <field name="keywords"></field>
    <field name="text">KSelectionOwner::replyTargets xcb_atom_t property_P xcb_window_t requestor_P d xcb_atom_t atoms Private::xa_multiple Private::xa_timestamp Private::xa_targets xcb_change_property d connection requestor_P property_P XCB_ATOM_ATOM XCB_PROP_MODE_REPLACE atoms atoms reinterpret_cast&lt;const void *&gt; atoms</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionowner.cpp</field>
    <field name="url">kselectionowner_8cpp_source.html#l00563</field>
    <field name="keywords"></field>
    <field name="text">KSelectionOwner::genericReply xcb_atom_t xcb_atom_t xcb_window_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionowner.cpp</field>
    <field name="url">kselectionowner_8cpp_source.html#l00568</field>
    <field name="keywords"></field>
    <field name="text">KSelectionOwner::getAtoms d Private::manager_atom XCB_NONE xcb_connection_t c d connection name xcb_atom_t atom atoms Private::manager_atom Private::xa_multiple Private::xa_targets Private::xa_timestamp count atoms atoms xcb_intern_atom_cookie_t cookies count i i count i cookies i xcb_intern_atom c strlen atoms i name atoms i name i i count i xcb_intern_atom_reply_t reply xcb_intern_atom_reply c cookies i atoms i atom reply atom free reply xcb_atom_t KSelectionOwner::Private::manager_atom XCB_NONE xcb_atom_t KSelectionOwner::Private::xa_multiple XCB_NONE xcb_atom_t KSelectionOwner::Private::xa_targets XCB_NONE xcb_atom_t KSelectionOwner::Private::xa_timestamp XCB_NONE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionowner.h</field>
    <field name="url">kselectionowner_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionowner.h</field>
    <field name="url">kselectionowner_8h_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">KWINDOWSYSTEM_EXPORT KSelectionOwner QObject Q_OBJECT KSelectionOwner xcb_atom_t selection screen QObject parent NULL KSelectionOwner selection screen QObject parent NULL KSelectionOwner xcb_atom_t selection xcb_connection_t c xcb_window_t root QObject parent Q_NULLPTR KSelectionOwner selection xcb_connection_t c xcb_window_t root QObject parent Q_NULLPTR KSelectionOwner claim force force_kill release xcb_window_t ownerWindow filterEvent ev_P timerEvent QTimerEvent event Q_SIGNALS lostOwnership claimedOwnership failedToClaimOwnership genericReply xcb_atom_t target xcb_atom_t property xcb_window_t requestor replyTargets xcb_atom_t property xcb_window_t requestor getAtoms setData uint32_t extra1 uint32_t extra2 filter_selection_request ev_P handle_selection xcb_atom_t target_P xcb_atom_t property_P xcb_window_t requestor_P Private Private d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionwatcher.cpp</field>
    <field name="url">kselectionwatcher_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">xcb_window_t get_selection_owner xcb_connection_t c xcb_atom_t selection xcb_window_t owner XCB_NONE xcb_get_selection_owner_reply_t reply xcb_get_selection_owner_reply c xcb_get_selection_owner c selection reply owner reply owner free reply owner xcb_atom_t intern_atom xcb_connection_t c name xcb_atom_t atom XCB_NONE xcb_intern_atom_reply_t reply xcb_intern_atom_reply c xcb_intern_atom c strlen name name reply atom reply atom free reply atom KSelectionWatcher::Private QAbstractNativeEventFilter Private KSelectionWatcher watcher_P xcb_atom_t selection_P xcb_connection_t c xcb_window_t root connection c root root selection selection_P selection_owner XCB_NONE watcher watcher_P QCoreApplication::instance installNativeEventFilter xcb_connection_t connection xcb_window_t root xcb_atom_t selection xcb_window_t selection_owner xcb_atom_t manager_atom Private create KSelectionWatcher watcher xcb_atom_t selection_P screen_P Private create KSelectionWatcher watcher selection_P screen_P Private create KSelectionWatcher watcher xcb_atom_t selection_P xcb_connection_t c xcb_window_t root Private create KSelectionWatcher watcher selection_P xcb_connection_t c xcb_window_t root nativeEventFilter QByteArray eventType message result Q_DECL_OVERRIDE Q_UNUSED result eventType watcher filterEvent message KSelectionWatcher watcher KSelectionWatcher::Private KSelectionWatcher::Private::create KSelectionWatcher watcher xcb_atom_t selection_P screen_P QGuiApplication::platformName QStringLiteral create watcher selection_P QX11Info::connection QX11Info::appRootWindow screen_P Q_NULLPTR KSelectionWatcher::Private KSelectionWatcher::Private::create KSelectionWatcher watcher xcb_atom_t selection_P xcb_connection_t c xcb_window_t root Private watcher selection_P c root KSelectionWatcher::Private KSelectionWatcher::Private::create KSelectionWatcher watcher selection_P screen_P QGuiApplication::platformName QStringLiteral create watcher selection_P QX11Info::connection QX11Info::appRootWindow screen_P Q_NULLPTR KSelectionWatcher::Private KSelectionWatcher::Private::create KSelectionWatcher watcher selection_P xcb_connection_t c xcb_window_t root Private watcher intern_atom c selection_P c root</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionwatcher.cpp</field>
    <field name="url">kselectionwatcher_8cpp_source.html#l00131</field>
    <field name="keywords"></field>
    <field name="text">KSelectionWatcher::KSelectionWatcher xcb_atom_t selection_P screen_P QObject parent_P QObject parent_P d Private create this selection_P screen_P init</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionwatcher.cpp</field>
    <field name="url">kselectionwatcher_8cpp_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text">KSelectionWatcher::KSelectionWatcher selection_P screen_P QObject parent_P QObject parent_P d Private create this selection_P screen_P init</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionwatcher.cpp</field>
    <field name="url">kselectionwatcher_8cpp_source.html#l00145</field>
    <field name="keywords"></field>
    <field name="text">KSelectionWatcher::KSelectionWatcher xcb_atom_t selection xcb_connection_t c xcb_window_t root QObject parent QObject parent d Private create this selection c root init</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionwatcher.cpp</field>
    <field name="url">kselectionwatcher_8cpp_source.html#l00152</field>
    <field name="keywords"></field>
    <field name="text">KSelectionWatcher::KSelectionWatcher selection xcb_connection_t c xcb_window_t root QObject parent QObject parent d Private create this selection c root init KSelectionWatcher::~KSelectionWatcher d KSelectionWatcher::init d Private::manager_atom XCB_NONE xcb_connection_t c d connection xcb_intern_atom_cookie_t atom_cookie xcb_intern_atom c strlen xcb_get_window_attributes_cookie_t attr_cookie xcb_get_window_attributes c d root xcb_intern_atom_reply_t atom_reply xcb_intern_atom_reply c atom_cookie Private::manager_atom atom_reply atom free atom_reply xcb_get_window_attributes_reply_t attr xcb_get_window_attributes_reply c attr_cookie uint32_t event_mask attr your_event_mask free attr event_mask XCB_EVENT_MASK_STRUCTURE_NOTIFY event_mask XCB_EVENT_MASK_STRUCTURE_NOTIFY xcb_change_window_attributes c d root XCB_CW_EVENT_MASK event_mask owner</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionwatcher.cpp</field>
    <field name="url">kselectionwatcher_8cpp_source.html#l00193</field>
    <field name="keywords"></field>
    <field name="text">xcb_window_t KSelectionWatcher::owner d XCB_WINDOW_NONE xcb_connection_t c d connection xcb_window_t current_owner get_selection_owner c d selection current_owner XCB_NONE XCB_NONE current_owner d selection_owner d selection_owner uint32_t mask XCB_EVENT_MASK_STRUCTURE_NOTIFY xcb_void_cookie_t cookie xcb_change_window_attributes_checked c current_owner XCB_CW_EVENT_MASK mask xcb_window_t new_owner get_selection_owner c d selection xcb_generic_error_t err xcb_request_check c cookie err current_owner new_owner d selection_owner current_owner emit newOwner d selection_owner d selection_owner XCB_NONE err free err d selection_owner</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionwatcher.cpp</field>
    <field name="url">kselectionwatcher_8cpp_source.html#l00232</field>
    <field name="keywords"></field>
    <field name="text">KSelectionWatcher::filterEvent ev_P d xcb_generic_event_t xcb_generic_event_t ev_P uint response_type response_type response_type XCB_CLIENT_MESSAGE xcb_client_message_event_t cm_event xcb_client_message_event_t event cm_event type Private::manager_atom cm_event data data32 d selection owner response_type XCB_DESTROY_NOTIFY xcb_destroy_notify_event_t ev xcb_destroy_notify_event_t event d selection_owner XCB_NONE ev window d selection_owner d selection_owner XCB_NONE owner XCB_NONE emit lostOwner xcb_atom_t KSelectionWatcher::Private::manager_atom XCB_NONE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionwatcher.h</field>
    <field name="url">kselectionwatcher_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kselectionwatcher.h</field>
    <field name="url">kselectionwatcher_8h_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">KWINDOWSYSTEM_EXPORT KSelectionWatcher QObject Q_OBJECT KSelectionWatcher xcb_atom_t selection screen QObject parent NULL KSelectionWatcher selection screen QObject parent NULL KSelectionWatcher xcb_atom_t selection xcb_connection_t c xcb_window_t root QObject parent Q_NULLPTR KSelectionWatcher selection xcb_connection_t c xcb_window_t root QObject parent Q_NULLPTR KSelectionWatcher xcb_window_t owner filterEvent ev_P Q_SIGNALS newOwner xcb_window_t owner lostOwner init Private Private d Q_DECLARE_METATYPE xcb_window_t</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">NET_STARTUP_MSG NET_STARTUP_WINDOW NET_STARTUP_ENV QByteArray s_startup_id get_num QString item_P QString get_str QString item_P QByteArray get_cstr QString item_P QStringList get_fields QString txt_P QString escape_str QString str_P KStartupInfo::Data KStartupInfoData Data age Data QString txt_P KStartupInfoData txt_P age age KStartupInfoId::Private Private id QString to_text QByteArray id KStartupInfoData::Private Private desktop wmclass hostname silent KStartupInfoData Unknown screen xinerama launched_by QString to_text remove_pid pid_t pid QString bin QString name QString description QString icon desktop QList&lt; pid_t &gt; pids QByteArray wmclass QByteArray hostname KStartupInfoData::TriState silent screen xinerama WId launched_by QString application_id KStartupInfo::Private startups_cleanup startups_cleanup_no_age got_message QString msg window_added WId w slot_window_added WId w init flags got_startup_info QString msg_P update_only_P got_remove_startup_info QString msg_P new_startup_info_internal KStartupInfoId id_P Data data_P update_only_P removeAllStartupInfoInternal KStartupInfoId id_P QMap&lt; KStartupInfoId, Data &gt;::iterator removeStartupInfoInternal QMap&lt; KStartupInfoId, Data &gt;::iterator it remove_startup_pids KStartupInfoId KStartupInfoData data remove_startup_pids KStartupInfoData data startup_t check_startup_internal WId w KStartupInfoId KStartupInfoData data find_id QByteArray id_P KStartupInfoId id_O KStartupInfoData data_O find_pid pid_t pid_P QByteArray hostname KStartupInfoId id_O KStartupInfoData data_O find_wclass QByteArray res_name_P QByteArray res_class_P KStartupInfoId id_O KStartupInfoData data_O startups_cleanup_internal age_P clean_all_noncompliant QString check_required_startup_fields QString msg KStartupInfoData data screen KStartupInfo q timeout QMap&lt; KStartupInfoId, KStartupInfo::Data &gt; startups QMap&lt; KStartupInfoId, KStartupInfo::Data &gt; silent_startups QMap&lt; KStartupInfoId, KStartupInfo::Data &gt; uninited_startups KXMessages msgs QTimer cleanup flags Private flags_P KStartupInfo q q q timeout if KWINDOWSYSTEM_HAVE_X11 msgs NET_STARTUP_MSG endif cleanup Q_NULLPTR flags flags_P createConnections QX11Info::isPlatformX11 QX11Info::display flags DisableKWinModule QObject::connect KWindowSystem::self SIGNAL windowAdded WId q SLOT slot_window_added WId QObject::connect msgs SIGNAL gotMessage QString q SLOT got_message QString cleanup QTimer q QObject::connect cleanup SIGNAL timeout q SLOT startups_cleanup</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00211</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::KStartupInfo flags_P QObject parent_P QObject parent_P d new Private flags_P this d createConnections</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00219</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::KStartupInfo clean_on_cantdetect_P QObject parent_P QObject parent_P d new Private clean_on_cantdetect_P CleanOnCantDetect this d createConnections KStartupInfo::~KStartupInfo d KStartupInfo::Private::got_message QString msg_P QString msg msg_P trimmed msg startsWith QLatin1String got_startup_info msg mid msg startsWith QLatin1String got_startup_info msg mid msg startsWith QLatin1String got_remove_startup_info msg mid Q_UNUSED msg_P DelayedWindowEvent QEvent DelayedWindowEvent WId w_P QEvent uniqueType w w_P Window w WId w Type uniqueType Type QEvent::User KStartupInfo::Private::slot_window_added WId w_P qApp postEvent q DelayedWindowEvent w_P KStartupInfo::customEvent QEvent e_P e_P type DelayedWindowEvent::uniqueType d window_added static_cast&lt; DelayedWindowEvent * &gt; e_P w QObject::customEvent e_P KStartupInfo::Private::window_added WId w_P KStartupInfoId id KStartupInfoData data startup_t ret check_startup_internal w_P data ret Match NoMatch CantDetect flags CleanOnCantDetect clean_all_noncompliant KStartupInfo::Private::got_startup_info QString msg_P update_P KStartupInfoId id msg_P isNull KStartupInfo::Data data msg_P new_startup_info_internal data update_P KStartupInfo::Private::new_startup_info_internal KStartupInfoId id_P KStartupInfo::Data data_P update_P id_P isNull startups contains id_P startups id_P update data_P startups id_P age startups id_P silent KStartupInfo::Data::Yes flags AnnounceSilenceChanges silent_startups id_P startups id_P startups remove id_P emit q gotRemoveStartup id_P silent_startups id_P emit q gotStartupChange id_P startups id_P silent_startups contains id_P silent_startups id_P update data_P silent_startups id_P age silent_startups id_P silent Data::Yes startups id_P silent_startups id_P silent_startups remove id_P q emit gotNewStartup id_P startups id_P emit q gotStartupChange id_P silent_startups id_P uninited_startups contains id_P uninited_startups id_P update data_P update_P startups id_P uninited_startups id_P uninited_startups remove id_P emit q gotNewStartup id_P startups id_P update_P uninited_startups insert id_P data_P data_P silent Data::Yes flags AnnounceSilenceChanges startups insert id_P data_P emit q gotNewStartup id_P data_P silent_startups insert id_P data_P cleanup start KStartupInfo::Private::got_remove_startup_info QString msg_P KStartupInfoId id msg_P KStartupInfoData data msg_P data pids count isNull remove_startup_pids data remove_startup_pids data removeAllStartupInfoInternal KStartupInfo::Private::removeAllStartupInfoInternal KStartupInfoId id_P it startups find id_P it startups end emit q gotRemoveStartup it key it value startups erase it it silent_startups find id_P it silent_startups end silent_startups erase it it uninited_startups find id_P it uninited_startups end uninited_startups erase it QMap&lt; KStartupInfoId, KStartupInfo::Data &gt;::iterator KStartupInfo::Private::removeStartupInfoInternal QMap&lt; KStartupInfoId, Data &gt;::iterator it emit q gotRemoveStartup it key it value startups erase it KStartupInfo::Private::remove_startup_pids KStartupInfoData data_P QMap&lt; KStartupInfoId, KStartupInfo::Data &gt;::Iterator it startups begin it startups end it hostname data_P hostname is_pid data_P pids first remove_startup_pids it key data_P KStartupInfo::Private::remove_startup_pids KStartupInfoId id_P KStartupInfoData data_P data_P pids count qFatal Data data NULL startups contains id_P data startups id_P silent_startups contains id_P data silent_startups id_P uninited_startups contains id_P data uninited_startups id_P QList&lt; pid_t &gt;::ConstIterator it2 data_P pids constBegin it2 data_P pids constEnd it2 data d remove_pid it2 data pids count removeAllStartupInfoInternal id_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00465</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::sendStartup KStartupInfoId id_P KStartupInfoData data_P id_P isNull sendStartupXcb QX11Info::connection QX11Info::appScreen id_P data_P Q_UNUSED data_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00479</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::sendStartupX Display disp_P KStartupInfoId id_P KStartupInfoData data_P id_P isNull QString msg QString::fromLatin1 arg id_P d to_text arg data_P d to_text msg Private::check_required_startup_fields msg data_P DefaultScreen disp_P qCDebug LOG_KWINDOWSYSTEM msg KXMessages::broadcastMessageX disp_P NET_STARTUP_MSG msg Q_UNUSED disp_P Q_UNUSED data_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00501</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::sendStartupXcb xcb_connection_t conn screen KStartupInfoId id_P KStartupInfoData data_P id_P isNull QString msg QString::fromLatin1 arg id_P d to_text arg data_P d to_text msg Private::check_required_startup_fields msg data_P screen qCDebug LOG_KWINDOWSYSTEM msg KXMessages::broadcastMessageX conn NET_STARTUP_MSG msg screen Q_UNUSED conn Q_UNUSED screen Q_UNUSED data_P QString KStartupInfo::Private::check_required_startup_fields QString msg KStartupInfoData data_P screen QString ret msg data_P name isEmpty QString name data_P bin name isEmpty name ret QString arg escape_str name data_P screen ret QString arg screen ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00541</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::sendChange KStartupInfoId id_P KStartupInfoData data_P id_P isNull sendChangeXcb QX11Info::connection QX11Info::appScreen id_P data_P Q_UNUSED data_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00555</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::sendChangeX Display disp_P KStartupInfoId id_P KStartupInfoData data_P id_P isNull QString msg QString::fromLatin1 arg id_P d to_text arg data_P d to_text qCDebug LOG_KWINDOWSYSTEM msg KXMessages::broadcastMessageX disp_P NET_STARTUP_MSG msg Q_UNUSED disp_P Q_UNUSED data_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00576</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::sendChangeXcb xcb_connection_t conn screen KStartupInfoId id_P KStartupInfoData data_P id_P isNull QString msg QString::fromLatin1 arg id_P d to_text arg data_P d to_text qCDebug LOG_KWINDOWSYSTEM msg KXMessages::broadcastMessageX conn NET_STARTUP_MSG msg screen Q_UNUSED conn Q_UNUSED screen Q_UNUSED data_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00597</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::sendFinish KStartupInfoId id_P id_P isNull sendFinishXcb QX11Info::connection QX11Info::appScreen id_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00609</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::sendFinishX Display disp_P KStartupInfoId id_P id_P isNull QString msg QString::fromLatin1 arg id_P d to_text qCDebug LOG_KWINDOWSYSTEM msg KXMessages::broadcastMessageX disp_P NET_STARTUP_MSG msg Q_UNUSED disp_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00627</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::sendFinishXcb xcb_connection_t conn screen KStartupInfoId id_P id_P isNull QString msg QString::fromLatin1 arg id_P d to_text qCDebug LOG_KWINDOWSYSTEM msg KXMessages::broadcastMessageX conn NET_STARTUP_MSG msg screen Q_UNUSED conn Q_UNUSED screen</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00645</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::sendFinish KStartupInfoId id_P KStartupInfoData data_P sendFinishXcb QX11Info::connection QX11Info::appScreen id_P data_P Q_UNUSED id_P Q_UNUSED data_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00659</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::sendFinishX Display disp_P KStartupInfoId id_P KStartupInfoData data_P QString msg QString::fromLatin1 arg id_P d to_text arg data_P d to_text qCDebug LOG_KWINDOWSYSTEM msg KXMessages::broadcastMessageX disp_P NET_STARTUP_MSG msg Q_UNUSED disp_P Q_UNUSED id_P Q_UNUSED data_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00680</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::sendFinishXcb xcb_connection_t conn screen KStartupInfoId id_P KStartupInfoData data_P QString msg QString::fromLatin1 arg id_P d to_text arg data_P d to_text qCDebug LOG_KWINDOWSYSTEM msg KXMessages::broadcastMessageX conn NET_STARTUP_MSG msg screen Q_UNUSED conn Q_UNUSED screen Q_UNUSED id_P Q_UNUSED data_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00701</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::appStarted appStarted startupId setStartupId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00707</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::appStarted QByteArray startup_id KStartupInfoId id initId startup_id isNull QX11Info::isPlatformX11 qgetenv isEmpty Display disp XOpenDisplay NULL disp NULL KStartupInfo::sendFinishX disp XCloseDisplay disp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00725</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::silenceStartup silence KStartupInfoId id initId startupId isNull KStartupInfoData data data setSilent silence KStartupInfoData::Yes KStartupInfoData::No sendChange data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00737</field>
    <field name="keywords"></field>
    <field name="text">QByteArray KStartupInfo::startupId s_startup_id isEmpty KStartupInfoId currentStartupIdEnv resetStartupEnv s_startup_id id s_startup_id</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00748</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::setStartupId QByteArray startup_id startup_id startupId startup_id isEmpty s_startup_id s_startup_id startup_id QX11Info::isPlatformX11 KStartupInfoId id initId startup_id timestamp timestamp timestamp QX11Info::appUserTime NET::timestampCompare timestamp QX11Info::appUserTime QX11Info::setAppUserTime timestamp QX11Info::appTime NET::timestampCompare timestamp QX11Info::appTime QX11Info::setAppTime timestamp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00777</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::setNewStartupId QWidget window QByteArray startup_id activate setStartupId startup_id window NULL QX11Info::isPlatformX11 startup_id isEmpty startup_id NETRootInfo i QX11Info::connection NET::Supported i isSupported NET::WM2StartupId KStartupInfo::setWindowStartupId window winId startup_id activate activate KWindowSystem::setOnDesktop window winId KWindowSystem::currentDesktop KWindowSystem::forceActiveWindow window winId Q_UNUSED activate Q_UNUSED window</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00805</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::startup_t KStartupInfo::checkStartup WId w_P KStartupInfoId id_O KStartupInfoData data_O d check_startup_internal w_P id_O data_O</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00811</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::startup_t KStartupInfo::checkStartup WId w_P KStartupInfoId id_O d check_startup_internal w_P id_O NULL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00816</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::startup_t KStartupInfo::checkStartup WId w_P KStartupInfoData data_O d check_startup_internal w_P NULL data_O</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00821</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::startup_t KStartupInfo::checkStartup WId w_P d check_startup_internal w_P NULL NULL KStartupInfo::startup_t KStartupInfo::Private::check_startup_internal WId w_P KStartupInfoId id_O KStartupInfoData data_O startups count NoMatch qCDebug LOG_KWINDOWSYSTEM QByteArray windowStartupId w_P isNull isEmpty qCDebug LOG_KWINDOWSYSTEM NoMatch find_id id_O data_O Match NoMatch QX11Info::isPlatformX11 qCDebug LOG_KWINDOWSYSTEM CantDetect NETWinInfo info QX11Info::connection w_P QX11Info::appRootWindow NET::WMWindowType NET::WMPid NET::WMState NET::WM2WindowClass NET::WM2ClientMachine NET::WM2TransientFor pid_t pid info pid pid QByteArray hostname info clientMachine hostname isEmpty find_pid pid hostname id_O data_O Match find_wclass info windowClassName info windowClassClass id_O data_O Match NET::WindowType type info windowType NET::NormalMask NET::DesktopMask NET::DockMask NET::ToolbarMask NET::MenuMask NET::DialogMask NET::OverrideMask NET::TopMenuMask NET::UtilityMask NET::SplashMask type NET::Normal type NET::Override type NET::Unknown type NET::Dialog type NET::Utility NoMatch xcb_window_t transient_for info transientFor transient_for QX11Info::appRootWindow transient_for XCB_WINDOW_NONE NoMatch qCDebug LOG_KWINDOWSYSTEM CantDetect KStartupInfo::Private::find_id QByteArray id_P KStartupInfoId id_O KStartupInfoData data_O KStartupInfoId id initId id_P startups contains id_O NULL id_O id data_O NULL data_O startups id KStartupInfo::Private::find_pid pid_t pid_P QByteArray hostname_P KStartupInfoId id_O KStartupInfoData data_O QMap&lt; KStartupInfoId, KStartupInfo::Data &gt;::Iterator it startups begin it startups end it is_pid pid_P hostname hostname_P id_O NULL id_O it key data_O NULL data_O it removeStartupInfoInternal it KStartupInfo::Private::find_wclass QByteArray _res_name QByteArray _res_class KStartupInfoId id_O KStartupInfoData data_O QByteArray res_name _res_name toLower QByteArray res_class _res_class toLower QMap&lt; KStartupInfoId, Data &gt;::Iterator it startups begin it startups end it QByteArray wmclass findWMClass wmclass toLower res_name wmclass toLower res_class id_O NULL id_O it key data_O NULL data_O it removeStartupInfoInternal it</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00961</field>
    <field name="keywords"></field>
    <field name="text">QByteArray KStartupInfo::windowStartupId WId w_P QX11Info::isPlatformX11 QByteArray NETWinInfo info QX11Info::connection w_P QX11Info::appRootWindow NET::WM2StartupId NET::WM2GroupLeader QByteArray ret info startupId ret isEmpty info groupLeader XCB_WINDOW_NONE NETWinInfo groupLeaderInfo QX11Info::connection info groupLeader QX11Info::appRootWindow NET::WM2StartupId ret groupLeaderInfo startupId ret Q_UNUSED w_P QByteArray</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00981</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::setWindowStartupId WId w_P QByteArray id_P QX11Info::isPlatformX11 id_P isNull NETWinInfo info QX11Info::connection w_P QX11Info::appRootWindow info setStartupId id_P constData Q_UNUSED w_P Q_UNUSED id_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l00998</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::setTimeout secs_P d timeout secs_P QTimer::singleShot SLOT startups_cleanup_no_age KStartupInfo::Private::startups_cleanup_no_age startups_cleanup_internal KStartupInfo::Private::startups_cleanup startups count silent_startups count uninited_startups count cleanup stop startups_cleanup_internal KStartupInfo::Private::startups_cleanup_internal age_P checkCleanup age_P QMap&lt;KStartupInfoId, KStartupInfo::Data&gt; s doEmit it s begin it s end age_P age tout timeout silent KStartupInfo::Data::Yes tout QByteArray timeoutEnvVariable qgetenv timeoutEnvVariable isNull tout timeoutEnvVariable toUInt age tout doEmit emit q gotRemoveStartup it key it value it s erase it it checkCleanup startups checkCleanup silent_startups checkCleanup uninited_startups KStartupInfo::Private::clean_all_noncompliant QMap&lt; KStartupInfoId, KStartupInfo::Data &gt;::Iterator it startups begin it startups end WMClass it it removeStartupInfoInternal it</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01065</field>
    <field name="keywords"></field>
    <field name="text">QByteArray KStartupInfo::createNewStartupId quint32 timestamp QX11Info::isPlatformX11 timestamp QX11Info::getTimestamp KStartupInfo::createNewStartupIdForTimestamp timestamp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01076</field>
    <field name="keywords"></field>
    <field name="text">QByteArray KStartupInfo::createNewStartupIdForTimestamp quint32 timestamp timeval tm qint64 msecsSinceEpoch QDateTime::currentMSecsSinceEpoch tm tv_sec msecsSinceEpoch tm tv_usec msecsSinceEpoch gettimeofday tm NULL hostname hostname gethostname hostname hostname hostname QByteArray QString::fromLatin1 arg hostname arg tm tv_sec arg tm tv_usec arg getpid arg timestamp toUtf8 id</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01101</field>
    <field name="keywords"></field>
    <field name="text">QByteArray KStartupInfoId::id d id QString KStartupInfoId::Private::to_text QString::fromLatin1 arg escape_str KStartupInfoId::KStartupInfoId QString txt_P d Private QStringList items get_fields txt_P QString id_str QLatin1String QStringList::ConstIterator it items begin it items end it startsWith id_str d id get_cstr it</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01124</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoId::initId QByteArray id_P id_P isEmpty d id id_P qCDebug LOG_KWINDOWSYSTEM d id QByteArray startup_env qgetenv NET_STARTUP_ENV startup_env isEmpty d id startup_env qCDebug LOG_KWINDOWSYSTEM d id d id KStartupInfo::createNewStartupId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01145</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoId::setupStartupEnv isNull qunsetenv NET_STARTUP_ENV qputenv NET_STARTUP_ENV</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01154</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoId KStartupInfo::currentStartupIdEnv QByteArray startup_env qgetenv NET_STARTUP_ENV KStartupInfoId id startup_env isEmpty d id startup_env d id id</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01166</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfo::resetStartupEnv qunsetenv NET_STARTUP_ENV</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01171</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoId::KStartupInfoId d new Private KStartupInfoId::~KStartupInfoId d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01180</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoId::KStartupInfoId KStartupInfoId id_P d new Private id_P d KStartupInfoId KStartupInfoId::operator= KStartupInfoId id_P id_P d id_P d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01193</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoId::operator== KStartupInfoId id_P id id_P id</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01198</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoId::operator!= KStartupInfoId id_P id_P KStartupInfoId::operator&lt; KStartupInfoId id_P id id_P id</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01209</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoId::isNull d id isEmpty d id</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01214</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoId::timestamp isNull pos d id lastIndexOf pos ok time QString d id mid pos toULong ok ok d id pos time QString d id mid pos toLong ok ok time QString KStartupInfoData::Private::to_text QString ret bin isEmpty ret QString::fromLatin1 arg escape_str bin name isEmpty ret QString::fromLatin1 arg escape_str name description isEmpty ret QString::fromLatin1 arg escape_str description icon isEmpty ret QString::fromLatin1 arg icon desktop ret QString::fromLatin1 arg desktop NET::OnAllDesktops NET::OnAllDesktops desktop wmclass isEmpty ret QString::fromLatin1 arg QString wmclass hostname isEmpty ret QString::fromLatin1 arg QString hostname QList&lt; pid_t &gt;::ConstIterator it pids begin it pids end it ret QString::fromLatin1 arg it silent KStartupInfoData::Unknown ret QString::fromLatin1 arg silent KStartupInfoData::Yes screen ret QString::fromLatin1 arg screen xinerama ret QString::fromLatin1 arg xinerama launched_by ret QString::fromLatin1 arg qptrdiff launched_by application_id isEmpty ret QString::fromLatin1 arg application_id ret KStartupInfoData::KStartupInfoData QString txt_P d Private QStringList items get_fields txt_P QString bin_str QString::fromLatin1 QString name_str QString::fromLatin1 QString description_str QString::fromLatin1 QString icon_str QString::fromLatin1 QString desktop_str QString::fromLatin1 QString wmclass_str QString::fromLatin1 QString hostname_str QString::fromLatin1 QString pid_str QString::fromLatin1 QString silent_str QString::fromLatin1 QString timestamp_str QString::fromLatin1 QString screen_str QString::fromLatin1 QString xinerama_str QString::fromLatin1 QString launched_by_str QString::fromLatin1 QString application_id_str QString::fromLatin1 QStringList::ConstIterator it items begin it items end it startsWith bin_str d bin get_str it startsWith name_str d name get_str it startsWith description_str d description get_str it startsWith icon_str d icon get_str it startsWith desktop_str d desktop get_num it d desktop NET::OnAllDesktops d desktop startsWith wmclass_str d wmclass get_cstr it startsWith hostname_str d hostname get_cstr it startsWith pid_str addPid get_num it startsWith silent_str d silent get_num it Yes No startsWith screen_str d screen get_num it startsWith xinerama_str d xinerama get_num it startsWith launched_by_str d launched_by WId get_num it startsWith application_id_str d application_id get_str it</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01333</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::KStartupInfoData KStartupInfoData data d new Private data d KStartupInfoData KStartupInfoData::operator= KStartupInfoData data data d data d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01346</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::update KStartupInfoData data_P data_P bin isEmpty d bin data_P bin data_P name isEmpty name isEmpty d name data_P name data_P description isEmpty description isEmpty d description data_P description data_P icon isEmpty icon isEmpty d icon data_P icon data_P desktop desktop d desktop data_P desktop data_P d wmclass isEmpty d wmclass data_P d wmclass data_P d hostname isEmpty d hostname data_P d hostname QList&lt; pid_t &gt;::ConstIterator it data_P d pids constBegin it data_P d pids constEnd it addPid it data_P silent Unknown d silent data_P silent data_P screen d screen data_P screen data_P xinerama xinerama d xinerama data_P xinerama data_P launchedBy launchedBy d launched_by data_P launchedBy data_P applicationId isEmpty applicationId isEmpty d application_id data_P applicationId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01391</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::KStartupInfoData d new Private KStartupInfoData::~KStartupInfoData d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01400</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::setBin QString bin_P d bin bin_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01405</field>
    <field name="keywords"></field>
    <field name="text">QString KStartupInfoData::bin d bin</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01410</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::setName QString name_P d name name_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01415</field>
    <field name="keywords"></field>
    <field name="text">QString KStartupInfoData::name d name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01420</field>
    <field name="keywords"></field>
    <field name="text">QString KStartupInfoData::findName name isEmpty name bin</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01428</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::setDescription QString desc_P d description desc_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01433</field>
    <field name="keywords"></field>
    <field name="text">QString KStartupInfoData::description d description</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01438</field>
    <field name="keywords"></field>
    <field name="text">QString KStartupInfoData::findDescription description isEmpty description name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01446</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::setIcon QString icon_P d icon icon_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01451</field>
    <field name="keywords"></field>
    <field name="text">QString KStartupInfoData::findIcon icon isEmpty icon bin</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01459</field>
    <field name="keywords"></field>
    <field name="text">QString KStartupInfoData::icon d icon</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01464</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::setDesktop desktop_P d desktop desktop_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01469</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::desktop d desktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01474</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::setWMClass QByteArray wmclass_P d wmclass wmclass_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01479</field>
    <field name="keywords"></field>
    <field name="text">QByteArray KStartupInfoData::findWMClass WMClass isEmpty WMClass WMClass bin toUtf8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01487</field>
    <field name="keywords"></field>
    <field name="text">QByteArray KStartupInfoData::WMClass d wmclass</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01492</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::setHostname QByteArray hostname_P hostname_P isNull d hostname hostname_P tmp tmp gethostname tmp tmp tmp d hostname tmp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01506</field>
    <field name="keywords"></field>
    <field name="text">QByteArray KStartupInfoData::hostname d hostname</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01511</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::addPid pid_t pid_P d pids contains pid_P d pids append pid_P KStartupInfoData::Private::remove_pid pid_t pid_P pids removeAll pid_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01523</field>
    <field name="keywords"></field>
    <field name="text">QList&lt; pid_t &gt; KStartupInfoData::pids d pids</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01528</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::is_pid pid_t pid_P d pids contains pid_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01533</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::setSilent TriState state_P d silent state_P</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01538</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::TriState KStartupInfoData::silent d silent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01543</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::setScreen _screen d screen _screen</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01548</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::screen d screen</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01553</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::setXinerama xinerama d xinerama xinerama</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01558</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::xinerama d xinerama</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01563</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::setLaunchedBy WId window d launched_by window</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01568</field>
    <field name="keywords"></field>
    <field name="text">WId KStartupInfoData::launchedBy d launched_by</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01573</field>
    <field name="keywords"></field>
    <field name="text">KStartupInfoData::setApplicationId QString desktop desktop startsWith d application_id desktop QString desk QStandardPaths::locate QStandardPaths::ApplicationsLocation desktop desk isEmpty desk QStandardPaths::locate QStandardPaths::GenericDataLocation desktop desk isEmpty d application_id desk</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.cpp</field>
    <field name="url">kstartupinfo_8cpp_source.html#l01590</field>
    <field name="keywords"></field>
    <field name="text">QString KStartupInfoData::applicationId d application_id get_num QString item_P pos item_P indexOf QLatin1Char item_P mid pos toLong QString get_str QString item_P pos item_P indexOf QLatin1Char item_P length pos item_P at pos QLatin1Char pos2 item_P left pos indexOf QLatin1Char pos2 QString item_P mid pos pos2 pos item_P mid pos QByteArray get_cstr QString item_P get_str item_P toUtf8 QStringList get_fields QString txt_P QString txt txt_P simplified QStringList ret QString item in escape pos pos txt length pos escape item txt pos escape txt pos escape txt pos in in txt pos in ret append item item item txt pos ret append item ret QString escape_str QString str_P QString ret pos pos str_P length pos str_P pos str_P pos ret ret str_P pos ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.h</field>
    <field name="url">kstartupinfo_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">_XDisplay Display xcb_connection_t pid_t KStartupInfoId KStartupInfoData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.h</field>
    <field name="url">kstartupinfo_8h_source.html#l00068</field>
    <field name="keywords"></field>
    <field name="text">KWINDOWSYSTEM_EXPORT KStartupInfo QObject Q_OBJECT appStarted appStarted QByteArray startup_id QByteArray startupId setStartupId QByteArray startup_id setNewStartupId QWidget window QByteArray startup_id silenceStartup silence QByteArray createNewStartupId QByteArray createNewStartupIdForTimestamp quint32 timestamp CleanOnCantDetect DisableKWinModule AnnounceSilenceChanges KStartupInfo flags QObject parent KWINDOWSYSTEM_DEPRECATED KStartupInfo clean_on_cantdetect QObject parent KStartupInfo sendStartup KStartupInfoId KStartupInfoData data KWINDOWSYSTEM_DEPRECATED sendStartupX Display dpy KStartupInfoId KStartupInfoData data sendStartupXcb xcb_connection_t conn screen KStartupInfoId KStartupInfoData data sendChange KStartupInfoId KStartupInfoData data KWINDOWSYSTEM_DEPRECATED sendChangeX Display dpy KStartupInfoId KStartupInfoData data sendChangeXcb xcb_connection_t conn screen KStartupInfoId KStartupInfoData data sendFinish KStartupInfoId KWINDOWSYSTEM_DEPRECATED sendFinishX Display dpy KStartupInfoId sendFinishXcb xcb_connection_t conn screen KStartupInfoId sendFinish KStartupInfoId KStartupInfoData data KWINDOWSYSTEM_DEPRECATED sendFinishX Display dpy KStartupInfoId KStartupInfoData data sendFinishXcb xcb_connection_t conn screen KStartupInfoId KStartupInfoData data KStartupInfoId currentStartupIdEnv resetStartupEnv</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.h</field>
    <field name="url">kstartupinfo_8h_source.html#l00343</field>
    <field name="keywords"></field>
    <field name="text">startup_t NoMatch Match CantDetect startup_t checkStartup WId w startup_t checkStartup WId w KStartupInfoId startup_t checkStartup WId w KStartupInfoData data startup_t checkStartup WId w KStartupInfoId KStartupInfoData data setTimeout secs setWindowStartupId WId window QByteArray QByteArray windowStartupId WId w Data Private Q_SIGNALS gotNewStartup KStartupInfoId KStartupInfoData data gotStartupChange KStartupInfoId KStartupInfoData data gotRemoveStartup KStartupInfoId KStartupInfoData data customEvent QEvent e_P Q_PRIVATE_SLOT d startups_cleanup Q_PRIVATE_SLOT d startups_cleanup_no_age Q_PRIVATE_SLOT d got_message QString msg Q_PRIVATE_SLOT d window_added WId w Q_PRIVATE_SLOT d slot_window_added WId w Private d Q_DISABLE_COPY KStartupInfo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.h</field>
    <field name="url">kstartupinfo_8h_source.html#l00452</field>
    <field name="keywords"></field>
    <field name="text">KWINDOWSYSTEM_EXPORT KStartupInfoId operator== KStartupInfoId operator!= KStartupInfoId isNull KWINDOWSYSTEM_DEPRECATED none isNull initId QByteArray QByteArray id timestamp setupStartupEnv KStartupInfoId KStartupInfoId KStartupInfoId data KStartupInfoId KStartupInfoId operator= KStartupInfoId data operator&lt; KStartupInfoId KStartupInfoId QString txt KStartupInfo KStartupInfo::Private Private Private d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kstartupinfo.h</field>
    <field name="url">kstartupinfo_8h_source.html#l00527</field>
    <field name="keywords"></field>
    <field name="text">KWINDOWSYSTEM_EXPORT KStartupInfoData setBin QString bin QString bin setName QString name QString findName QString name setDescription QString descr QString findDescription QString description setIcon QString icon QString findIcon QString icon setDesktop desktop desktop setWMClass QByteArray wmclass QByteArray findWMClass QByteArray WMClass addPid pid_t pid QList&lt; pid_t &gt; pids is_pid pid_t pid setHostname QByteArray hostname QByteArray QByteArray hostname TriState Yes No Unknown setSilent TriState state TriState silent screen setScreen screen xinerama setXinerama xinerama WId launchedBy setLaunchedBy WId window QString applicationId setApplicationId QString desktop update KStartupInfoData data KStartupInfoData KStartupInfoData KStartupInfoData data KStartupInfoData KStartupInfoData operator= KStartupInfoData data KStartupInfoData QString txt KStartupInfo KStartupInfo::Data KStartupInfo::Private Private Private d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kusertimestamp.cpp</field>
    <field name="url">kusertimestamp_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUserTimestamp::userTimestamp QGuiApplication::platformName QStringLiteral QX11Info::appUserTime KUserTimestamp::updateUserTimestamp time QGuiApplication::platformName QStringLiteral time time QX11Info::getTimestamp QX11Info::appUserTime NET::timestampCompare time QX11Info::appUserTime QX11Info::setAppUserTime time QX11Info::appTime NET::timestampCompare time QX11Info::appTime QX11Info::setAppTime time Q_UNUSED time</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kusertimestamp.h</field>
    <field name="url">kusertimestamp_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUserTimestamp KWINDOWSYSTEM_EXPORT userTimestamp KWINDOWSYSTEM_EXPORT updateUserTimestamp time</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindoweffects.cpp</field>
    <field name="url">kwindoweffects_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KWindowEffectsPrivate::KWindowEffectsPrivate KWindowEffectsPrivate::~KWindowEffectsPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindoweffects.cpp</field>
    <field name="url">kwindoweffects_8cpp_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">KWindowEffects</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindoweffects.cpp</field>
    <field name="url">kwindoweffects_8cpp_source.html#l00035</field>
    <field name="keywords"></field>
    <field name="text">isEffectAvailable Effect effect KWindowSystemPluginWrapper::self effects isEffectAvailable effect</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindoweffects.cpp</field>
    <field name="url">kwindoweffects_8cpp_source.html#l00040</field>
    <field name="keywords"></field>
    <field name="text">enableBlurBehind WId window enable QRegion region KWindowSystemPluginWrapper::self effects enableBlurBehind window enable region</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindoweffects.cpp</field>
    <field name="url">kwindoweffects_8cpp_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">enableBackgroundContrast WId window enable qreal contrast qreal intensity qreal saturation QRegion region KWindowSystemPluginWrapper::self effects enableBackgroundContrast window enable contrast intensity saturation region</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindoweffects.cpp</field>
    <field name="url">kwindoweffects_8cpp_source.html#l00050</field>
    <field name="keywords"></field>
    <field name="text">highlightWindows WId controller QList&lt; WId &gt; ids KWindowSystemPluginWrapper::self effects highlightWindows controller ids</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindoweffects.cpp</field>
    <field name="url">kwindoweffects_8cpp_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">markAsDashboard WId window KWindowSystemPluginWrapper::self effects markAsDashboard window</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindoweffects.cpp</field>
    <field name="url">kwindoweffects_8cpp_source.html#l00060</field>
    <field name="keywords"></field>
    <field name="text">presentWindows WId controller QList&lt; WId &gt; ids KWindowSystemPluginWrapper::self effects presentWindows controller ids</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindoweffects.cpp</field>
    <field name="url">kwindoweffects_8cpp_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">presentWindows WId controller desktop KWindowSystemPluginWrapper::self effects presentWindows controller desktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindoweffects.cpp</field>
    <field name="url">kwindoweffects_8cpp_source.html#l00070</field>
    <field name="keywords"></field>
    <field name="text">slideWindow WId SlideFromLocation location offset KWindowSystemPluginWrapper::self effects slideWindow location offset</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindoweffects.cpp</field>
    <field name="url">kwindoweffects_8cpp_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text">slideWindow QWidget widget SlideFromLocation location KWindowSystemPluginWrapper::self effects slideWindow widget location</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindoweffects.cpp</field>
    <field name="url">kwindoweffects_8cpp_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">QList&lt; QSize &gt; windowSizes QList&lt; WId &gt; ids KWindowSystemPluginWrapper::self effects windowSizes ids</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindoweffects.cpp</field>
    <field name="url">platforms_2xcb_2kwindoweffects_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">DASHBOARD_WIN_CLASS KWindowEffects KWindowEffectsPrivateX11::KWindowEffectsPrivateX11 KWindowEffectsPrivateX11::~KWindowEffectsPrivateX11 KWindowEffectsPrivateX11::isEffectAvailable Effect effect KWindowSystem::self compositingActive QByteArray effectName effect Slide effectName QByteArrayLiteral PresentWindows effectName QByteArrayLiteral PresentWindowsGroup effectName QByteArrayLiteral HighlightWindows effectName QByteArrayLiteral BlurBehind effectName QByteArrayLiteral Dashboard effectName QByteArrayLiteral BackgroundContrast effectName QByteArrayLiteral xcb_connection_t c QX11Info::connection xcb_list_properties_cookie_t propsCookie xcb_list_properties_unchecked c QX11Info::appRootWindow xcb_intern_atom_cookie_t atomCookie xcb_intern_atom_unchecked c effectName length effectName constData QScopedPointer&lt;xcb_list_properties_reply_t, QScopedPointerPodDeleter&gt; props xcb_list_properties_reply c propsCookie NULL QScopedPointer&lt;xcb_intern_atom_reply_t, QScopedPointerPodDeleter&gt; atom xcb_intern_atom_reply c atomCookie NULL atom props xcb_atom_t atoms xcb_list_properties_atoms props data i i props atoms_len i atoms i atom atom KWindowEffectsPrivateX11::slideWindow WId SlideFromLocation location offset xcb_connection_t c QX11Info::connection c QByteArray effectName QByteArrayLiteral xcb_intern_atom_cookie_t atomCookie xcb_intern_atom_unchecked c effectName length effectName constData size int32_t data size data offset location LeftEdge data TopEdge data RightEdge data BottomEdge data QScopedPointer&lt;xcb_intern_atom_reply_t, QScopedPointerPodDeleter&gt; atom xcb_intern_atom_reply c atomCookie NULL atom location NoEdge xcb_delete_property c atom atom xcb_change_property c XCB_PROP_MODE_REPLACE atom atom atom atom size data KWindowEffectsPrivateX11::slideWindow QWidget widget SlideFromLocation location slideWindow widget effectiveWinId location QList&lt;QSize&gt; KWindowEffectsPrivateX11::windowSizes QList&lt;WId&gt; ids QList&lt;QSize&gt; windowSizes Q_FOREACH WId ids KWindowInfo info NET::WMGeometry NET::WMFrameExtents windowSizes append info frameGeometry size windowSizes append QSize windowSizes KWindowEffectsPrivateX11::presentWindows WId controller QList&lt;WId&gt; ids xcb_connection_t c QX11Info::connection c numWindows ids count QVarLengthArray&lt;int32_t, 32&gt; data numWindows actualCount i i numWindows i data i ids at i actualCount actualCount numWindows data resize actualCount data isEmpty QByteArray effectName QByteArrayLiteral xcb_intern_atom_cookie_t atomCookie xcb_intern_atom_unchecked c effectName length effectName constData QScopedPointer&lt;xcb_intern_atom_reply_t, QScopedPointerPodDeleter&gt; atom xcb_intern_atom_reply c atomCookie NULL atom xcb_change_property c XCB_PROP_MODE_REPLACE controller atom atom atom atom data size data constData KWindowEffectsPrivateX11::presentWindows WId controller desktop xcb_connection_t c QX11Info::connection c QByteArray effectName QByteArrayLiteral xcb_intern_atom_cookie_t atomCookie xcb_intern_atom_unchecked c effectName length effectName constData QScopedPointer&lt;xcb_intern_atom_reply_t, QScopedPointerPodDeleter&gt; atom xcb_intern_atom_reply c atomCookie NULL atom int32_t data desktop xcb_change_property c XCB_PROP_MODE_REPLACE controller atom atom atom atom data KWindowEffectsPrivateX11::highlightWindows WId controller QList&lt;WId&gt; ids xcb_connection_t c QX11Info::connection c QByteArray effectName QByteArrayLiteral xcb_intern_atom_cookie_t atomCookie xcb_intern_atom_unchecked c effectName length effectName constData QScopedPointer&lt;xcb_intern_atom_reply_t, QScopedPointerPodDeleter&gt; atom xcb_intern_atom_reply c atomCookie NULL atom numWindows ids count numWindows xcb_delete_property c controller atom atom QVarLengthArray&lt;int32_t, 32&gt; data numWindows actualCount i i numWindows i data i ids at i actualCount actualCount numWindows data resize actualCount data isEmpty xcb_change_property c XCB_PROP_MODE_REPLACE controller atom atom atom atom data size data constData KWindowEffectsPrivateX11::enableBlurBehind WId window enable QRegion region xcb_connection_t c QX11Info::connection c QByteArray effectName QByteArrayLiteral xcb_intern_atom_cookie_t atomCookie xcb_intern_atom_unchecked c effectName length effectName constData QScopedPointer&lt;xcb_intern_atom_reply_t, QScopedPointerPodDeleter&gt; atom xcb_intern_atom_reply c atomCookie NULL atom enable QVector&lt;QRect&gt; rects region rects QVector&lt;uint32_t&gt; data Q_FOREACH QRect r rects data r x r y r width r height xcb_change_property c XCB_PROP_MODE_REPLACE window atom atom XCB_ATOM_CARDINAL data size data constData xcb_delete_property c window atom atom KWindowEffectsPrivateX11::enableBackgroundContrast WId window enable qreal contrast qreal intensity qreal saturation QRegion region xcb_connection_t c QX11Info::connection QByteArray effectName QByteArrayLiteral xcb_intern_atom_cookie_t atomCookie xcb_intern_atom_unchecked c effectName length effectName constData QScopedPointer&lt;xcb_intern_atom_reply_t, QScopedPointerPodDeleter&gt; atom xcb_intern_atom_reply c atomCookie NULL atom enable QVector&lt;QRect&gt; rects region rects QVector&lt;uint32_t&gt; data Q_FOREACH QRect r rects data r x r y r width r height QMatrix4x4 satMatrix QMatrix4x4 intMatrix QMatrix4x4 contMatrix qFuzzyCompare saturation qreal rval saturation qreal gval saturation qreal bval saturation satMatrix QMatrix4x4 rval saturation rval rval gval gval saturation gval bval bval bval saturation qFuzzyCompare intensity intMatrix scale intensity intensity intensity qFuzzyCompare contrast transl contrast contMatrix QMatrix4x4 contrast contrast contrast transl transl transl QMatrix4x4 colorMatrix contMatrix satMatrix intMatrix colorMatrix colorMatrix colorMatrix colorMatrix transposed uint32_t rawData uint32_t colorMatrix data i i i data rawData i xcb_change_property c XCB_PROP_MODE_REPLACE window atom atom atom atom data size data constData xcb_delete_property c window atom atom KWindowEffectsPrivateX11::markAsDashboard WId window xcb_connection_t c QX11Info::connection c xcb_change_property c XCB_PROP_MODE_REPLACE window XCB_ATOM_WM_CLASS XCB_ATOM_STRING DASHBOARD_WIN_CLASS</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindoweffects.h</field>
    <field name="url">kwindoweffects_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KWindowEffects Effect Slide PresentWindows PresentWindowsGroup HighlightWindows BlurBehind Dashboard BackgroundContrast SlideFromLocation NoEdge TopEdge RightEdge BottomEdge LeftEdge KWINDOWSYSTEM_EXPORT isEffectAvailable Effect effect KWINDOWSYSTEM_EXPORT slideWindow WId SlideFromLocation location offset KWINDOWSYSTEM_EXPORT slideWindow QWidget widget SlideFromLocation location KWINDOWSYSTEM_EXPORT QList&lt;QSize&gt; windowSizes QList&lt;WId&gt; ids KWINDOWSYSTEM_EXPORT presentWindows WId controller QList&lt;WId&gt; ids KWINDOWSYSTEM_EXPORT presentWindows WId controller desktop NET::OnAllDesktops KWINDOWSYSTEM_EXPORT highlightWindows WId controller QList&lt;WId&gt; ids KWINDOWSYSTEM_EXPORT enableBlurBehind WId window enable QRegion region QRegion KWINDOWSYSTEM_EXPORT enableBackgroundContrast WId window enable qreal contrast qreal intensity qreal saturation QRegion region QRegion KWINDOWSYSTEM_EXPORT markAsDashboard WId window</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindoweffects_dummy.cpp</field>
    <field name="url">kwindoweffects__dummy_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KWindowEffectsPrivateDummy::KWindowEffectsPrivateDummy KWindowEffectsPrivateDummy::~KWindowEffectsPrivateDummy KWindowEffectsPrivateDummy::isEffectAvailable KWindowEffects::Effect effect Q_UNUSED effect KWindowEffectsPrivateDummy::slideWindow WId KWindowEffects::SlideFromLocation location offset Q_UNUSED Q_UNUSED location Q_UNUSED offset KWindowEffectsPrivateDummy::slideWindow QWidget widget KWindowEffects::SlideFromLocation location Q_UNUSED widget Q_UNUSED location QList&lt;QSize&gt; KWindowEffectsPrivateDummy::windowSizes QList&lt;WId&gt; ids QList&lt;QSize&gt; windowSizes i i ids size i windowSizes append QSize windowSizes KWindowEffectsPrivateDummy::presentWindows WId controller QList&lt;WId&gt; ids Q_UNUSED controller Q_UNUSED ids KWindowEffectsPrivateDummy::presentWindows WId controller desktop Q_UNUSED controller Q_UNUSED desktop KWindowEffectsPrivateDummy::highlightWindows WId controller QList&lt;WId&gt; ids Q_UNUSED controller Q_UNUSED ids KWindowEffectsPrivateDummy::enableBlurBehind WId window enable QRegion region Q_UNUSED window Q_UNUSED enable Q_UNUSED region KWindowEffectsPrivateDummy::enableBackgroundContrast WId window enable qreal contrast qreal intensity qreal saturation QRegion region Q_UNUSED window Q_UNUSED enable Q_UNUSED contrast Q_UNUSED intensity Q_UNUSED saturation Q_UNUSED region KWindowEffectsPrivateDummy::markAsDashboard WId window Q_UNUSED window</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindoweffects_x11.h</field>
    <field name="url">kwindoweffects__x11_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KWindowEffectsPrivateX11 KWindowEffectsPrivate KWindowEffectsPrivateX11 KWindowEffectsPrivateX11 isEffectAvailable KWindowEffects::Effect effect Q_DECL_OVERRIDE slideWindow WId KWindowEffects::SlideFromLocation location offset Q_DECL_OVERRIDE slideWindow QWidget widget KWindowEffects::SlideFromLocation location Q_DECL_OVERRIDE QList&lt; QSize &gt; windowSizes QList&lt;WId&gt; ids Q_DECL_OVERRIDE presentWindows WId controller QList&lt;WId&gt; ids Q_DECL_OVERRIDE presentWindows WId controller desktop NET::OnAllDesktops Q_DECL_OVERRIDE highlightWindows WId controller QList&lt;WId&gt; ids Q_DECL_OVERRIDE enableBlurBehind WId window enable QRegion region QRegion Q_DECL_OVERRIDE enableBackgroundContrast WId window enable true qreal contrast qreal intensity qreal saturation const QRegion region QRegion Q_DECL_OVERRIDE markAsDashboard WId window Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KWindowInfoPrivate KWindowInfoPrivate::create WId window NET::Properties properties NET::Properties2 properties2 KWindowSystemPluginWrapper::self createWindowInfo window properties properties2 KWindowInfoPrivate::Private Private WId window NET::Properties properties NET::Properties2 properties2 WId window NET::Properties properties NET::Properties2 properties2 KWindowInfoPrivate::Private::Private WId window NET::Properties properties NET::Properties2 properties2 window window properties properties properties2 properties2 KWindowInfoPrivate::KWindowInfoPrivate WId window NET::Properties properties NET::Properties2 properties2 d new Private window properties properties2 KWindowInfoPrivate::~KWindowInfoPrivate WId KWindowInfoPrivate::win d window KWindowInfoPrivateDummy::KWindowInfoPrivateDummy WId window NET::Properties properties NET::Properties2 properties2 KWindowInfoPrivate window properties properties2 KWindowInfoPrivateDummy::~KWindowInfoPrivateDummy KWindowInfoPrivateDummy::valid withdrawn_is_valid Q_UNUSED withdrawn_is_valid NET::States KWindowInfoPrivateDummy::state KWindowInfoPrivateDummy::isMinimized NET::MappingState KWindowInfoPrivateDummy::mappingState NET::Visible NETExtendedStrut KWindowInfoPrivateDummy::extendedStrut NETExtendedStrut NET::WindowType KWindowInfoPrivateDummy::windowType NET::WindowTypes supported_types Q_UNUSED supported_types NET::Unknown QString KWindowInfoPrivateDummy::visibleName QString QString KWindowInfoPrivateDummy::visibleNameWithState QString QString KWindowInfoPrivateDummy::name QString QString KWindowInfoPrivateDummy::visibleIconName QString QString KWindowInfoPrivateDummy::visibleIconNameWithState QString QString KWindowInfoPrivateDummy::iconName QString KWindowInfoPrivateDummy::onAllDesktops KWindowInfoPrivateDummy::isOnDesktop desktop Q_UNUSED desktop KWindowInfoPrivateDummy::desktop QStringList KWindowInfoPrivateDummy::activities QStringList QRect KWindowInfoPrivateDummy::geometry QRect QRect KWindowInfoPrivateDummy::frameGeometry QRect WId KWindowInfoPrivateDummy::transientFor WId KWindowInfoPrivateDummy::groupLeader QByteArray KWindowInfoPrivateDummy::windowClassClass QByteArray QByteArray KWindowInfoPrivateDummy::windowClassName QByteArray QByteArray KWindowInfoPrivateDummy::windowRole QByteArray QByteArray KWindowInfoPrivateDummy::clientMachine QByteArray KWindowInfoPrivateDummy::actionSupported NET::Action action Q_UNUSED action</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00207</field>
    <field name="keywords"></field>
    <field name="text">KWindowInfo::KWindowInfo WId window NET::Properties properties NET::Properties2 properties2 d KWindowInfoPrivate create window properties properties2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00212</field>
    <field name="keywords"></field>
    <field name="text">KWindowInfo::KWindowInfo KWindowInfo other d other d KWindowInfo::~KWindowInfo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00221</field>
    <field name="keywords"></field>
    <field name="text">KWindowInfo KWindowInfo::operator= KWindowInfo other d other d d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00232</field>
    <field name="keywords"></field>
    <field name="text">KWindowInfo::valid withdrawn_is_valid DELEGATE valid withdrawn_is_valid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00237</field>
    <field name="keywords"></field>
    <field name="text">WId KWindowInfo::win d win</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00242</field>
    <field name="keywords"></field>
    <field name="text">NET::States KWindowInfo::state DELEGATE state</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00247</field>
    <field name="keywords"></field>
    <field name="text">KWindowInfo::hasState NET::States s state s s</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00252</field>
    <field name="keywords"></field>
    <field name="text">KWindowInfo::isMinimized DELEGATE isMinimized</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00257</field>
    <field name="keywords"></field>
    <field name="text">NET::MappingState KWindowInfo::mappingState DELEGATE mappingState</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00262</field>
    <field name="keywords"></field>
    <field name="text">NETExtendedStrut KWindowInfo::extendedStrut DELEGATE extendedStrut</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00267</field>
    <field name="keywords"></field>
    <field name="text">NET::WindowType KWindowInfo::windowType NET::WindowTypes supported_types DELEGATE windowType supported_types</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00272</field>
    <field name="keywords"></field>
    <field name="text">QString KWindowInfo::visibleName DELEGATE visibleName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00277</field>
    <field name="keywords"></field>
    <field name="text">QString KWindowInfo::visibleNameWithState DELEGATE visibleNameWithState</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00282</field>
    <field name="keywords"></field>
    <field name="text">QString KWindowInfo::name DELEGATE name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00287</field>
    <field name="keywords"></field>
    <field name="text">QString KWindowInfo::visibleIconName DELEGATE visibleIconName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00292</field>
    <field name="keywords"></field>
    <field name="text">QString KWindowInfo::visibleIconNameWithState DELEGATE visibleIconNameWithState</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00297</field>
    <field name="keywords"></field>
    <field name="text">QString KWindowInfo::iconName DELEGATE iconName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00302</field>
    <field name="keywords"></field>
    <field name="text">KWindowInfo::isOnCurrentDesktop isOnDesktop KWindowSystem::currentDesktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00307</field>
    <field name="keywords"></field>
    <field name="text">KWindowInfo::isOnDesktop desktop DELEGATE isOnDesktop desktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00312</field>
    <field name="keywords"></field>
    <field name="text">KWindowInfo::onAllDesktops DELEGATE onAllDesktops</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00317</field>
    <field name="keywords"></field>
    <field name="text">KWindowInfo::desktop DELEGATE desktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00322</field>
    <field name="keywords"></field>
    <field name="text">QStringList KWindowInfo::activities DELEGATE activities</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00327</field>
    <field name="keywords"></field>
    <field name="text">QRect KWindowInfo::geometry DELEGATE geometry</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00332</field>
    <field name="keywords"></field>
    <field name="text">QRect KWindowInfo::frameGeometry DELEGATE frameGeometry</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00337</field>
    <field name="keywords"></field>
    <field name="text">WId KWindowInfo::transientFor DELEGATE transientFor</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00342</field>
    <field name="keywords"></field>
    <field name="text">WId KWindowInfo::groupLeader DELEGATE groupLeader</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00347</field>
    <field name="keywords"></field>
    <field name="text">QByteArray KWindowInfo::windowClassClass DELEGATE windowClassClass</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00352</field>
    <field name="keywords"></field>
    <field name="text">QByteArray KWindowInfo::windowClassName DELEGATE windowClassName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00357</field>
    <field name="keywords"></field>
    <field name="text">QByteArray KWindowInfo::windowRole DELEGATE windowRole</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00362</field>
    <field name="keywords"></field>
    <field name="text">QByteArray KWindowInfo::clientMachine DELEGATE clientMachine</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">kwindowinfo_8cpp_source.html#l00367</field>
    <field name="keywords"></field>
    <field name="text">KWindowInfo::actionSupported NET::Action action DELEGATE actionSupported action</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">platforms_2osx_2kwindowinfo_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KWindowInfo::Private::Private ref win isLocal false loadedData false m_axWin parent m_pid KWindowInfo::Private::setAxElement AXUIElementRef axWin m_axWin axWin CFRetain m_axWin KWindowInfo::Private::setProcessSerialNumber ProcessSerialNumber psn m_psn psn GetProcessPID psn m_pid KWindowInfo::Private::~Private m_axWin CFRelease m_axWin KWindowInfo::Private::updateData ProcessInfoRec pinfo processName FSSpec appSpec FSRef ref pinfo processInfoLength pinfo pinfo processName processName pinfo processAppSpec appSpec pinfo processAppRef ref GetProcessInformation m_psn pinfo name QString::fromLatin1 processName processName m_axWin CFStringRef title AXUIElementCopyAttributeValue m_axWin kAXTitleAttribute CFTypeRef title noErr CFStringGetCString title processName processName kCFStringEncodingUTF8 name QString::fromUtf8 processName iconSpec appSpec FSRef ref FSpMakeFSRef appSpec ref iconSpec ref HFSUniStr255 name FSRef parentRef FSGetCatalogInfo ref kFSCatInfoNone name parentRef ref parentRef FSGetCatalogInfo ref kFSCatInfoNone name parentRef QString::fromUtf16 name unicode name length ref parentRef FSGetCatalogInfo ref kFSCatInfoNone name parentRef QString::fromUtf16 name unicode name length FSSpec spec ref parentRef FSGetCatalogInfo ref kFSCatInfoNone name spec parentRef iconSpec spec iconSpec parentRef loadedData KWindowInfo::KWindowInfo WId win d new Private d ref d win win d isLocal win d win WId d d isLocal KWindowInfo::KWindowInfo d NULL KWindowInfo::~KWindowInfo d NULL d ref d KWindowInfo::KWindowInfo KWindowInfo wininfo d wininfo d d NULL d ref KWindowInfo KWindowInfo::operator= KWindowInfo wininfo d wininfo d d NULL d ref d d wininfo d d NULL d ref KWindowInfo::valid withdrawn_is_valid d pid WId KWindowInfo::win d win KWindowInfo::state KWindowInfo::hasState s KWindowInfo::isMinimized d axElement CFBooleanRef val AXUIElementCopyAttributeValue d axElement kAXMinimizedAttribute CFTypeRef val noErr CFBooleanGetValue val NET::MappingState KWindowInfo::mappingState NET::MappingState NETExtendedStrut KWindowInfo::extendedStrut NETExtendedStrut ext ext NET::WindowType KWindowInfo::windowType supported_types NET::WindowType QString KWindowInfo::visibleNameWithState QString s visibleName isMinimized s prepend QLatin1Char s append QLatin1Char s QString KWindowInfo::visibleName name QString KWindowInfo::name d loadedData d updateData d name QString KWindowInfo::visibleIconNameWithState QString s visibleIconName isMinimized s prepend QLatin1Char s append QLatin1Char s QString KWindowInfo::visibleIconName visibleName QString KWindowInfo::iconName name KWindowInfo::isOnCurrentDesktop isOnDesktop KWindowSystem::currentDesktop KWindowInfo::isOnDesktop _desktop KWindowInfo::onAllDesktops KWindowInfo::desktop QRect KWindowInfo::geometry QRect QRect KWindowInfo::frameGeometry QRect KWindowInfo::actionSupported NET::Action action WId KWindowInfo::transientFor kWarning d info passedProperties NETWinInfo::PROTOCOLS2 NET::WM2TransientFor d info transientFor WId KWindowInfo::groupLeader kWarning d info passedProperties NETWinInfo::PROTOCOLS2 NET::WM2GroupLeader d info groupLeader QByteArray KWindowInfo::windowClassClass kWarning d info passedProperties NETWinInfo::PROTOCOLS2 NET::WM2WindowClass d info windowClassClass QByteArray KWindowInfo::windowClassName kWarning d info passedProperties NETWinInfo::PROTOCOLS2 NET::WM2WindowClass d info windowClassName QByteArray KWindowInfo::windowRole kWarning d info passedProperties NETWinInfo::PROTOCOLS2 NET::WM2WindowRole d info windowRole QByteArray KWindowInfo::clientMachine kWarning d info passedProperties NETWinInfo::PROTOCOLS2 NET::WM2ClientMachine d info clientMachine KWindowInfo::actionSupported NET::Action action kWarning d info passedProperties NETWinInfo::PROTOCOLS2 NET::WM2AllowedActions KWindowSystem::allowedActionsSupported d info allowedActions action KWindowInfo::isMinimized mappingState NET::Iconic state NET::Hidden state NET::Shaded KWindowSystem::icccmCompliantMappingState false</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">platforms_2windows_2kwindowinfo_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KWindowInfo::Private Private properties properties2 Private HWND win_ ref properties properties2 Private Private operator= Private KWindowInfo::KWindowInfo WId win properties properties2 d new Private d ref d win_ HWND win d properties properties d properties2 properties2 KWindowInfo::KWindowInfo d NULL KWindowInfo::~KWindowInfo d NULL d ref d KWindowInfo::KWindowInfo KWindowInfo wininfo d wininfo d d NULL d ref KWindowInfo KWindowInfo::operator= KWindowInfo wininfo d wininfo d d NULL d ref d d wininfo d d NULL d ref KWindowInfo::valid withdrawn_is_valid WId KWindowInfo::win WId d win_ KWindowInfo::state state IsZoomed d win_ state NET::Max IsWindowVisible d win_ state NET::Hidden LONG_PTR lp GetWindowLongPtr d win_ GWL_EXSTYLE lp WS_EX_TOOLWINDOW state NET::SkipTaskbar state KWindowInfo::hasState s state s KWindowInfo::isMinimized IsIconic d win_ NET::MappingState KWindowInfo::mappingState IsIconic d win_ NET::Iconic IsWindowVisible d win_ NET::Withdrawn NET::Visible NETExtendedStrut KWindowInfo::extendedStrut NETExtendedStrut NET::WindowType KWindowInfo::windowType supported_types NET::WindowType wt NET::Normal windowStyle GetWindowLong d win_ GWL_STYLE windowStyleEx GetWindowLong d win_ GWL_EXSTYLE windowStyle WS_POPUP supported_types NET::PopupMenuMask NET::PopupMenu windowStyleEx WS_EX_TOOLWINDOW supported_types NET::TooltipMask NET::Tooltip windowStyle WS_CHILD supported_types NET::NormalMask NET::Normal wt QString KWindowInfo::visibleNameWithState QString s visibleName isMinimized s prepend QLatin1Char s append QLatin1Char s QString KWindowInfo::visibleName name QString KWindowInfo::name QByteArray windowText QByteArray GetWindowTextLength d win_ GetWindowTextW d win_ LPWSTR windowText data windowText size QString::fromWCharArray windowText data QString KWindowInfo::visibleIconNameWithState QString QString KWindowInfo::visibleIconName QString QString KWindowInfo::iconName QString KWindowInfo::isOnCurrentDesktop KWindowInfo::isOnDesktop desk desk desktop KWindowInfo::onAllDesktops KWindowInfo::desktop QRect KWindowInfo::geometry RECT wndRect memset wndRect wndRect GetWindowRect d win_ wndRect QRect result result setCoords wndRect left wndRect top wndRect right wndRect bottom result QRect QRect KWindowInfo::frameGeometry RECT wndRect memset wndRect wndRect GetClientRect d win_ wndRect QRect result result setCoords wndRect left wndRect top wndRect right wndRect bottom result QRect KWindowInfo::actionSupported NET::Action action WId KWindowInfo::transientFor kWarning d info passedProperties NETWinInfo::PROTOCOLS2 NET::WM2TransientFor d info transientFor WId KWindowInfo::groupLeader kWarning d info passedProperties NETWinInfo::PROTOCOLS2 NET::WM2GroupLeader d info groupLeader QByteArray KWindowInfo::windowClassClass resourcenamevar resourcenamevar getenv resourcenamevar NULL QByteArray resourcenamevar QCoreApplication::applicationName toLocal8Bit QByteArray KWindowInfo::windowClassName max TCHAR name max count GetClassName d win_ name max QString::fromUtf16 ushort name toLocal8Bit QByteArray KWindowInfo::windowRole kWarning d info passedProperties NETWinInfo::PROTOCOLS2 NET::WM2WindowRole d info windowRole QByteArray KWindowInfo::clientMachine kWarning d info passedProperties NETWinInfo::PROTOCOLS2 NET::WM2ClientMachine d info clientMachine KWindowInfo::actionSupported NET::Action action kWarning d info passedProperties NETWinInfo::PROTOCOLS2 NET::WM2AllowedActions KWindowSystem::allowedActionsSupported d info allowedActions action</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.cpp</field>
    <field name="url">platforms_2xcb_2kwindowinfo_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KWindowInfoPrivateX11::KWindowInfoPrivateX11 WId _win NET::Properties properties NET::Properties2 properties2 KWindowInfoPrivate _win properties properties2 KXErrorHandler handler properties NET::WMVisibleIconName properties NET::WMIconName NET::WMVisibleName properties NET::WMVisibleName properties NET::WMName properties2 NET::WM2ExtendedStrut properties NET::WMStrut properties NET::WMWindowType properties2 NET::WM2TransientFor properties NET::WMDesktop KWindowSystem::mapViewport properties NET::WMGeometry properties NET::XAWMState m_info reset NETWinInfo QX11Info::connection _win QX11Info::appRootWindow properties properties2 properties NET::WMName m_info name m_info name m_name QString::fromUtf8 m_info name m_name KWindowSystem::readNameProperty _win XA_WM_NAME properties NET::WMIconName m_info iconName m_info iconName m_iconic_name QString::fromUtf8 m_info iconName m_iconic_name KWindowSystem::readNameProperty _win XA_WM_ICON_NAME properties NET::WMGeometry NET::WMFrameExtents NETRect frame geom m_info kdeGeometry frame geom m_geometry setRect geom pos x geom pos y geom size width geom size height m_frame_geometry setRect frame pos x frame pos y frame size width frame size height m_valid handler error KWindowInfoPrivateX11::~KWindowInfoPrivateX11 KWindowInfoPrivateX11::valid withdrawn_is_valid m_valid withdrawn_is_valid mappingState NET::Withdrawn NET::States KWindowInfoPrivateX11::state m_info passedProperties NET::WMState qWarning m_info state NET::MappingState KWindowInfoPrivateX11::mappingState m_info passedProperties NET::XAWMState qWarning m_info mappingState NETExtendedStrut KWindowInfoPrivateX11::extendedStrut m_info passedProperties2 NET::WM2ExtendedStrut qWarning NETExtendedStrut ext m_info extendedStrut NETStrut str m_info strut ext left_width ext right_width ext top_width ext bottom_width str left str right str top str bottom str left ext left_width str left ext left_start ext left_end XDisplayHeight QX11Info::display DefaultScreen QX11Info::display str right ext right_width str right ext right_start ext right_end XDisplayHeight QX11Info::display DefaultScreen QX11Info::display str top ext top_width str top ext top_start ext top_end XDisplayWidth QX11Info::display DefaultScreen QX11Info::display str bottom ext bottom_width str bottom ext bottom_start ext bottom_end XDisplayWidth QX11Info::display DefaultScreen QX11Info::display ext NET::WindowType KWindowInfoPrivateX11::windowType NET::WindowTypes supported_types m_info passedProperties NET::WMWindowType qWarning m_info hasWindowType transientFor XCB_WINDOW_NONE supported_types NET::DialogMask NET::Dialog supported_types NET::NormalMask NET::Normal m_info windowType supported_types QString KWindowInfoPrivateX11::visibleNameWithState QString s visibleName isMinimized s prepend QLatin1Char s append QLatin1Char s QString KWindowInfoPrivateX11::visibleName m_info passedProperties NET::WMVisibleName qWarning m_info visibleName m_info visibleName QString::fromUtf8 m_info visibleName name QString KWindowInfoPrivateX11::name m_info passedProperties NET::WMName qWarning m_name QString KWindowInfoPrivateX11::visibleIconNameWithState QString s visibleIconName isMinimized s prepend QLatin1Char s append QLatin1Char s QString KWindowInfoPrivateX11::visibleIconName m_info passedProperties NET::WMVisibleIconName qWarning m_info visibleIconName m_info visibleIconName QString::fromUtf8 m_info visibleIconName m_info iconName m_info iconName QString::fromUtf8 m_info iconName m_iconic_name isEmpty m_iconic_name visibleName QString KWindowInfoPrivateX11::iconName m_info passedProperties NET::WMIconName qWarning m_info iconName m_info iconName QString::fromUtf8 m_info iconName m_iconic_name isEmpty m_iconic_name name KWindowInfoPrivateX11::isOnDesktop _desktop m_info passedProperties NET::WMDesktop qWarning KWindowSystem::mapViewport onAllDesktops KWindowSystem::viewportWindowToDesktop m_geometry _desktop m_info desktop _desktop m_info desktop NET::OnAllDesktops KWindowInfoPrivateX11::onAllDesktops m_info passedProperties NET::WMDesktop qWarning KWindowSystem::mapViewport m_info passedProperties NET::WMState m_info state NET::Sticky NETWinInfo info QX11Info::connection win QX11Info::appRootWindow NET::WMState info state NET::Sticky m_info desktop NET::OnAllDesktops KWindowInfoPrivateX11::desktop m_info passedProperties NET::WMDesktop qWarning KWindowSystem::mapViewport onAllDesktops NET::OnAllDesktops KWindowSystem::viewportWindowToDesktop m_geometry m_info desktop QStringList KWindowInfoPrivateX11::activities m_info passedProperties2 NET::WM2Activities qWarning QStringList result QString::fromLatin1 m_info activities split QLatin1Char QString::SkipEmptyParts result contains QStringLiteral KDE_ALL_ACTIVITIES_UUID QStringList result QRect KWindowInfoPrivateX11::geometry m_info passedProperties NET::WMGeometry qWarning m_geometry QRect KWindowInfoPrivateX11::frameGeometry m_info passedProperties NET::WMFrameExtents qWarning m_frame_geometry WId KWindowInfoPrivateX11::transientFor m_info passedProperties2 NET::WM2TransientFor qWarning m_info transientFor WId KWindowInfoPrivateX11::groupLeader m_info passedProperties2 NET::WM2GroupLeader qWarning m_info groupLeader QByteArray KWindowInfoPrivateX11::windowClassClass m_info passedProperties2 NET::WM2WindowClass qWarning m_info windowClassClass QByteArray KWindowInfoPrivateX11::windowClassName m_info passedProperties2 NET::WM2WindowClass qWarning m_info windowClassName QByteArray KWindowInfoPrivateX11::windowRole m_info passedProperties2 NET::WM2WindowRole qWarning m_info windowRole QByteArray KWindowInfoPrivateX11::clientMachine m_info passedProperties2 NET::WM2ClientMachine qWarning m_info clientMachine KWindowInfoPrivateX11::actionSupported NET::Action action m_info passedProperties2 NET::WM2AllowedActions qWarning KWindowSystem::allowedActionsSupported m_info allowedActions action KWindowInfoPrivateX11::isMinimized mappingState NET::Iconic state NET::Hidden state NET::Shaded KWindowSystem::icccmCompliantMappingState false</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.h</field>
    <field name="url">kwindowinfo_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KWindowInfoPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo.h</field>
    <field name="url">kwindowinfo_8h_source.html#l00072</field>
    <field name="keywords"></field>
    <field name="text">KWINDOWSYSTEM_EXPORT KWindowInfo KWindowInfo WId window NET::Properties properties NET::Properties2 properties2 KWindowInfo valid withdrawn_is_valid WId win NET::States state hasState NET::States s isMinimized NET::MappingState mappingState NETExtendedStrut extendedStrut NET::WindowType windowType NET::WindowTypes supported_types QString visibleName QString visibleNameWithState QString name QString visibleIconName QString visibleIconNameWithState QString iconName isOnCurrentDesktop isOnDesktop desktop onAllDesktops desktop QStringList activities QRect geometry QRect frameGeometry WId transientFor WId groupLeader QByteArray windowClassClass QByteArray windowClassName QByteArray windowRole QByteArray clientMachine actionSupported NET::Action action KWindowInfo KWindowInfo KWindowInfo operator= KWindowInfo QExplicitlySharedDataPointer&lt;KWindowInfoPrivate&gt; d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowinfo_p_x11.h</field>
    <field name="url">kwindowinfo__p__x11_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo KWindowInfoPrivateX11 KWindowInfoPrivate KWindowInfoPrivateX11 WId window NET::Properties properties NET::Properties2 properties2 KWindowInfoPrivateX11 valid withdrawn_is_valid Q_DECL_OVERRIDE NET::States state const Q_DECL_OVERRIDE isMinimized const Q_DECL_OVERRIDE NET MappingState mappingState const Q_DECL_OVERRIDE NETExtendedStrut extendedStrut const Q_DECL_OVERRIDE NET WindowType windowType NET WindowTypes supported_types const Q_DECL_OVERRIDE QString visibleName const Q_DECL_OVERRIDE QString visibleNameWithState const Q_DECL_OVERRIDE QString name const Q_DECL_OVERRIDE QString visibleIconName const Q_DECL_OVERRIDE QString visibleIconNameWithState const Q_DECL_OVERRIDE QString iconName const Q_DECL_OVERRIDE onAllDesktops const Q_DECL_OVERRIDE isOnDesktop desktop const Q_DECL_OVERRIDE desktop const Q_DECL_OVERRIDE QStringList activities const Q_DECL_OVERRIDE QRect geometry const Q_DECL_OVERRIDE QRect frameGeometry const Q_DECL_OVERRIDE WId transientFor const Q_DECL_OVERRIDE WId groupLeader const Q_DECL_OVERRIDE QByteArray windowClassClass const Q_DECL_OVERRIDE QByteArray windowClassName const Q_DECL_OVERRIDE QByteArray windowRole const Q_DECL_OVERRIDE QByteArray clientMachine const Q_DECL_OVERRIDE actionSupported NET Action action const Q_DECL_OVERRIDE private QScopedPointer NETWinInfo m_info QString m_name QString m_iconic_name QRect m_geometry QRect m_frame_geometry m_valid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QRect operator/ QRect rectangle qreal factor QRect rectangle topLeft factor rectangle size factor KWindowSystemStaticContainer KWindowSystemStaticContainer d reset KWindowSystemPluginWrapper::self createWindowSystem QCoreApplication::instance kwm moveToThread QCoreApplication::instance thread KWindowSystemPrivate xcbPlugin xcbPrivate isNull QPluginLoader loader QStringLiteral XCB_PLUGIN_PATH QScopedPointer&lt;KWindowSystemPluginInterface&gt; xcbPlugin qobject_cast&lt; KWindowSystemPluginInterface* &gt; loader instance xcbPlugin isNull xcbPrivate reset xcbPlugin createWindowSystem xcbPrivate data KWindowSystem kwm QScopedPointer&lt;KWindowSystemPrivate&gt; d QScopedPointer&lt;KWindowSystemPrivate&gt; xcbPrivate Q_GLOBAL_STATIC KWindowSystemStaticContainer g_kwmInstanceContainer KWindowSystemPrivate::~KWindowSystemPrivate QPixmap KWindowSystemPrivate::iconFromNetWinInfo width height scale flags NETWinInfo info Q_UNUSED width Q_UNUSED height Q_UNUSED scale Q_UNUSED flags Q_UNUSED info QPixmap QList&lt;WId&gt; KWindowSystemPrivateDummy::windows QList&lt;WId&gt; QList&lt;WId&gt; KWindowSystemPrivateDummy::stackingOrder QList&lt;WId&gt; WId KWindowSystemPrivateDummy::activeWindow KWindowSystemPrivateDummy::activateWindow WId win time Q_UNUSED win Q_UNUSED time KWindowSystemPrivateDummy::forceActiveWindow WId win time Q_UNUSED win Q_UNUSED time KWindowSystemPrivateDummy::demandAttention WId win Q_UNUSED win Q_UNUSED KWindowSystemPrivateDummy::compositingActive KWindowSystemPrivateDummy::currentDesktop KWindowSystemPrivateDummy::numberOfDesktops KWindowSystemPrivateDummy::setCurrentDesktop desktop Q_UNUSED desktop KWindowSystemPrivateDummy::setOnAllDesktops WId win b Q_UNUSED win Q_UNUSED b KWindowSystemPrivateDummy::setOnDesktop WId win desktop Q_UNUSED win Q_UNUSED desktop KWindowSystemPrivateDummy::setOnActivities WId win QStringList activities Q_UNUSED win Q_UNUSED activities WId KWindowSystemPrivateDummy::transientFor WId window Q_UNUSED window WId KWindowSystemPrivateDummy::groupLeader WId window Q_UNUSED window QPixmap KWindowSystemPrivateDummy::icon WId win width height scale flags Q_UNUSED win Q_UNUSED width Q_UNUSED height Q_UNUSED scale Q_UNUSED flags QPixmap KWindowSystemPrivateDummy::setIcons WId win QPixmap icon QPixmap miniIcon Q_UNUSED win Q_UNUSED icon Q_UNUSED miniIcon KWindowSystemPrivateDummy::setType WId win NET::WindowType windowType Q_UNUSED win Q_UNUSED windowType KWindowSystemPrivateDummy::setState WId win NET::States state Q_UNUSED win Q_UNUSED state KWindowSystemPrivateDummy::clearState WId win NET::States state Q_UNUSED win Q_UNUSED state KWindowSystemPrivateDummy::minimizeWindow WId win Q_UNUSED win KWindowSystemPrivateDummy::unminimizeWindow WId win Q_UNUSED win KWindowSystemPrivateDummy::raiseWindow WId win Q_UNUSED win KWindowSystemPrivateDummy::lowerWindow WId win Q_UNUSED win KWindowSystemPrivateDummy::icccmCompliantMappingState QRect KWindowSystemPrivateDummy::workArea desktop Q_UNUSED desktop QRect QRect KWindowSystemPrivateDummy::workArea QList&lt;WId&gt; excludes desktop Q_UNUSED excludes Q_UNUSED desktop QRect QString KWindowSystemPrivateDummy::desktopName desktop Q_UNUSED desktop QString KWindowSystemPrivateDummy::setDesktopName desktop QString name Q_UNUSED desktop Q_UNUSED name KWindowSystemPrivateDummy::showingDesktop KWindowSystemPrivateDummy::setShowingDesktop showing Q_UNUSED showing KWindowSystemPrivateDummy::setUserTime WId win time Q_UNUSED win Q_UNUSED time KWindowSystemPrivateDummy::setExtendedStrut WId win left_width left_start left_end right_width right_start right_end top_width top_start top_end bottom_width bottom_start bottom_end Q_UNUSED win Q_UNUSED left_width Q_UNUSED left_start Q_UNUSED left_end Q_UNUSED right_width Q_UNUSED right_start Q_UNUSED right_end Q_UNUSED top_width Q_UNUSED top_start Q_UNUSED top_end Q_UNUSED bottom_width Q_UNUSED bottom_start Q_UNUSED bottom_end KWindowSystemPrivateDummy::setStrut WId win left right top bottom Q_UNUSED win Q_UNUSED left Q_UNUSED right Q_UNUSED top Q_UNUSED bottom KWindowSystemPrivateDummy::allowedActionsSupported QString KWindowSystemPrivateDummy::readNameProperty WId window atom Q_UNUSED window Q_UNUSED atom QString KWindowSystemPrivateDummy::allowExternalProcessWindowActivation pid Q_UNUSED pid KWindowSystemPrivateDummy::setBlockingCompositing WId window active Q_UNUSED window Q_UNUSED active KWindowSystemPrivateDummy::mapViewport KWindowSystemPrivateDummy::viewportToDesktop QPoint pos Q_UNUSED pos KWindowSystemPrivateDummy::viewportWindowToDesktop QRect r Q_UNUSED r QPoint KWindowSystemPrivateDummy::desktopToViewport desktop absolute Q_UNUSED desktop Q_UNUSED absolute QPoint QPoint KWindowSystemPrivateDummy::constrainViewportRelativePosition QPoint pos Q_UNUSED pos QPoint KWindowSystemPrivateDummy::connectNotify QMetaMethod signal Q_UNUSED signal</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00357</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem KWindowSystem::self g_kwmInstanceContainer kwm KWindowSystemPrivate KWindowSystem::d_func g_kwmInstanceContainer d data KWindowSystem::connectNotify QMetaMethod signal Q_D KWindowSystem d connectNotify signal QObject::connectNotify signal</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00374</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;WId&gt; KWindowSystem::windows Q_D KWindowSystem d windows</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00381</field>
    <field name="keywords"></field>
    <field name="text">KWindowInfo KWindowSystem::windowInfo WId win NET::Properties properties NET::Properties2 properties2 KWindowInfo win properties properties2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00387</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::hasWId WId w windows contains w</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00392</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;WId&gt; KWindowSystem::stackingOrder Q_D KWindowSystem d stackingOrder</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00398</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::currentDesktop Q_D KWindowSystem d currentDesktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00404</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::numberOfDesktops Q_D KWindowSystem d numberOfDesktops</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00410</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::setCurrentDesktop desktop Q_D KWindowSystem d setCurrentDesktop desktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00416</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::setOnAllDesktops WId win b Q_D KWindowSystem d setOnAllDesktops win b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00422</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::setOnDesktop WId win desktop Q_D KWindowSystem d setOnDesktop win desktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00428</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::setOnActivities WId win QStringList activities Q_D KWindowSystem d setOnActivities win activities</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00434</field>
    <field name="keywords"></field>
    <field name="text">WId KWindowSystem::activeWindow Q_D KWindowSystem d activeWindow</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00440</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::activateWindow WId win time Q_D KWindowSystem d activateWindow win time</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00446</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::forceActiveWindow WId win time Q_D KWindowSystem d forceActiveWindow win time</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00452</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::demandAttention WId win Q_D KWindowSystem d demandAttention win</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00459</field>
    <field name="keywords"></field>
    <field name="text">WId KWindowSystem::transientFor WId win Q_D KWindowSystem d transientFor win</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00466</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::setMainWindow QWidget subWidget WId mainWindowId subWidget setAttribute Qt::WA_NativeWindow QWindow subWindow subWidget windowHandle Q_ASSERT subWindow QWindow mainWindow QWindow::fromWinId mainWindowId mainWindow connect subWidget QObject::destroyed mainWindow QObject::deleteLater subWindow setTransientParent mainWindow</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00485</field>
    <field name="keywords"></field>
    <field name="text">WId KWindowSystem::groupLeader WId win Q_D KWindowSystem d groupLeader win</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00492</field>
    <field name="keywords"></field>
    <field name="text">QPixmap KWindowSystem::icon WId win width height scale icon win width height scale NETWM WMHints ClassHint XApp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00497</field>
    <field name="keywords"></field>
    <field name="text">QPixmap KWindowSystem::icon WId win width height scale flags Q_D KWindowSystem d icon win width height scale flags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00503</field>
    <field name="keywords"></field>
    <field name="text">QPixmap KWindowSystem::icon WId win width height scale flags NETWinInfo info Q_D KWindowSystem width qApp devicePixelRatio height qApp devicePixelRatio info QGuiApplication::platformName compare QLatin1String Qt::CaseInsensitive d iconFromNetWinInfo width height scale flags info KWindowSystemPrivate p g_kwmInstanceContainer xcbPlugin p iconFromNetWinInfo width height scale flags info Q_UNUSED info d icon win width height scale flags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00526</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::setIcons WId win QPixmap icon QPixmap miniIcon Q_D KWindowSystem d setIcons win icon miniIcon</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00532</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::setType WId win NET::WindowType windowType Q_D KWindowSystem d setType win windowType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00538</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::setState WId win NET::States state Q_D KWindowSystem d setState win state</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00544</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::clearState WId win NET::States state Q_D KWindowSystem d clearState win state</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00550</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::minimizeWindow WId win Q_D KWindowSystem d minimizeWindow win</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00556</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::unminimizeWindow WId win Q_D KWindowSystem d unminimizeWindow win</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00563</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::minimizeWindow WId win animation Q_UNUSED animation minimizeWindow win</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00571</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::unminimizeWindow WId win animation Q_UNUSED animation unminimizeWindow win</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00578</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::raiseWindow WId win Q_D KWindowSystem d raiseWindow win</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00584</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::lowerWindow WId win Q_D KWindowSystem d lowerWindow win</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00590</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::compositingActive Q_D KWindowSystem d compositingActive</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00596</field>
    <field name="keywords"></field>
    <field name="text">QRect KWindowSystem::workArea desktop Q_D KWindowSystem d workArea desktop qApp devicePixelRatio</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00602</field>
    <field name="keywords"></field>
    <field name="text">QRect KWindowSystem::workArea QList&lt;WId&gt; exclude desktop Q_D KWindowSystem d workArea exclude desktop qApp devicePixelRatio</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00608</field>
    <field name="keywords"></field>
    <field name="text">QString KWindowSystem::desktopName desktop Q_D KWindowSystem d desktopName desktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00614</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::setDesktopName desktop QString name Q_D KWindowSystem d setDesktopName desktop name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00620</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::showingDesktop Q_D KWindowSystem d showingDesktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00626</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::setShowingDesktop showing Q_D KWindowSystem d setShowingDesktop showing</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00632</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::setUserTime WId win time Q_D KWindowSystem d setUserTime win time</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00638</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::setExtendedStrut WId win left_width left_start left_end right_width right_start right_end top_width top_start top_end bottom_width bottom_start bottom_end Q_D KWindowSystem qreal dpr qApp devicePixelRatio d setExtendedStrut win left_width dpr left_start dpr left_end dpr right_width dpr right_start dpr right_end dpr top_width dpr top_start dpr top_end dpr bottom_width dpr bottom_start dpr bottom_end dpr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00649</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::setStrut WId win left right top bottom Q_D KWindowSystem qreal dpr qApp devicePixelRatio d setStrut win left dpr right dpr top dpr bottom dpr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00656</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::icccmCompliantMappingState Q_D KWindowSystem d icccmCompliantMappingState</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00662</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::allowedActionsSupported Q_D KWindowSystem d allowedActionsSupported</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00668</field>
    <field name="keywords"></field>
    <field name="text">QString KWindowSystem::readNameProperty WId win atom Q_D KWindowSystem d readNameProperty win atom</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00674</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::allowExternalProcessWindowActivation pid Q_D KWindowSystem d allowExternalProcessWindowActivation pid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00680</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::setBlockingCompositing WId window active Q_D KWindowSystem d setBlockingCompositing window active</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00686</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::mapViewport Q_D KWindowSystem d mapViewport</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00692</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::viewportToDesktop QPoint p Q_D KWindowSystem d viewportToDesktop p qApp devicePixelRatio</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00698</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::viewportWindowToDesktop QRect r Q_D KWindowSystem d viewportWindowToDesktop r qApp devicePixelRatio</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00704</field>
    <field name="keywords"></field>
    <field name="text">QPoint KWindowSystem::desktopToViewport desktop absolute Q_D KWindowSystem d desktopToViewport desktop absolute</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00710</field>
    <field name="keywords"></field>
    <field name="text">QPoint KWindowSystem::constrainViewportRelativePosition QPoint pos Q_D KWindowSystem d constrainViewportRelativePosition pos qApp devicePixelRatio KWindowSystem::Platform initPlatform QX11Info::isPlatformX11 KWindowSystem::Platform::X11 QGuiApplication::platformName startsWith QLatin1String Qt::CaseInsensitive KWindowSystem::Platform::Wayland KWindowSystem::Platform::Unknown</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00729</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::Platform KWindowSystem::platform Platform s_platform initPlatform s_platform</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00735</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::isPlatformX11 platform Platform::X11</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">kwindowsystem_8cpp_source.html#l00740</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem::isPlatformWayland platform Platform::Wayland</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">platforms_2osx_2kwindowsystem_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">operator&lt; ProcessSerialNumber a ProcessSerialNumber b a lowLongOfPSN b lowLongOfPSN a lowLongOfPSN b lowLongOfPSN a highLongOfPSN b highLongOfPSN KWindowSystemPrivate QObject Q_OBJECT KWindowSystemPrivate QMap&lt;WId, KWindowInfo&gt; windows QList&lt;WId&gt; winids QMap&lt;pid_t, AXObserverRef&gt; newWindowObservers QMap&lt;pid_t, AXObserverRef&gt; windowClosedObservers QMap&lt;ProcessSerialNumber, WId&gt; processes QList&lt;KWindowInfo&gt; nonProcessedWindows EventTargetRef m_eventTarget EventHandlerUPP m_eventHandler EventTypeSpec m_eventType EventHandlerRef m_curHandler applicationLaunched ProcessSerialNumber psn applicationTerminated ProcessSerialNumber psn m_noEmit waitingForTimer newWindow AXUIElementRef element windowInfoPrivate windowClosed AXUIElementRef element windowInfoPrivate KWindowSystemPrivate KWindowSystem::s_d_func Q_SLOTS tryRegisterProcess KWindowSystemStaticContainer KWindowSystemStaticContainer d new KWindowSystemPrivate KWindowSystem kwm KWindowSystemPrivate d KWINDOWSYSTEM_GLOBAL_STATIC KWindowSystemStaticContainer g_kwmInstanceContainer OSStatus applicationEventHandler EventHandlerCallRef inHandlerCallRef EventRef inEvent inUserData KWindowSystemPrivate d KWindowSystemPrivate inUserData UInt32 kind kind GetEventKind inEvent ProcessSerialNumber psn GetEventParameter inEvent kEventParamProcessID typeProcessSerialNumber NULL psn NULL psn noErr kWarning eventNotHandledErr kind kEventAppLaunched d applicationLaunched psn kind kEventAppTerminated d applicationTerminated psn noErr windowClosedObserver AXObserverRef observer AXUIElementRef element CFStringRef notification refcon KWindowSystemPrivate::self windowClosed element refcon newWindowObserver AXObserverRef observer AXUIElementRef element CFStringRef notification refcon KWindowSystemPrivate::self newWindow element refcon KWindowSystemPrivate::KWindowSystemPrivate QObject m_noEmit true waitingForTimer false ProcessSerialNumber psn kNoProcess GetNextProcess psn noErr qDebug psn lowLongOfPSN psn highLongOfPSN applicationLaunched psn m_noEmit m_eventTarget GetApplicationEventTarget m_eventHandler NewEventHandlerUPP applicationEventHandler m_eventType eventClass kEventClassApplication m_eventType eventKind kEventAppLaunched m_eventType eventClass kEventClassApplication m_eventType eventKind kEventAppTerminated InstallEventHandler m_eventTarget m_eventHandler m_eventType m_curHandler noErr qDebug KWindowSystemPrivate::applicationLaunched ProcessSerialNumber psn qDebug psn lowLongOfPSN psn highLongOfPSN ProcessInfoRec pinfo FSSpec appSpec pinfo processInfoLength pinfo pinfo processName pinfo processAppSpec appSpec GetProcessInformation psn pinfo pinfo processMode modeOnlyBackground KWindowInfo winfo windows winfo win winfo winids append winfo win winfo d setProcessSerialNumber psn pid_t pid winfo d pid processes psn winfo win qDebug pid AXUIElementRef app AXUIElementCreateApplication pid winfo d setAxElement app m_noEmit emit KWindowSystem::self windowAdded winfo win AXObserverRef observer newObserver OSStatus err AXObserverCreate pid windowClosedObserver observer noErr CFRunLoopAddSource CFRunLoopGetCurrent AXObserverGetRunLoopSource observer kCFRunLoopCommonModes windowClosedObservers pid observer err AXObserverCreate pid newWindowObserver newObserver noErr CFRunLoopAddSource CFRunLoopGetCurrent AXObserverGetRunLoopSource newObserver kCFRunLoopCommonModes newWindowObservers pid newObserver err AXObserverAddNotification newObserver app kAXWindowCreatedNotification winfo d noErr qDebug err QTimer::singleShot SLOT tryRegisterProcess nonProcessedWindows append winfo qDebug qDebug CFIndex windowsInApp AXUIElementGetAttributeValueCount app kAXWindowsAttribute windowsInApp CFArrayRef array AXUIElementCopyAttributeValue app kAXWindowsAttribute CFTypeRef array CFIndex j j windowsInApp j AXUIElementRef win AXUIElementRef CFArrayGetValueAtIndex array j newWindow win winfo d KWindowSystemPrivate::tryRegisterProcess qDebug nonProcessedWindows empty KWindowInfo winfo nonProcessedWindows takeLast pid_t pid winfo d pid AXUIElementRef app winfo d axElement ProcessSerialNumber psn winfo d psn AXObserverRef observer OSStatus err observer newWindowObservers pid err AXObserverAddNotification observer app kAXWindowCreatedNotification winfo d noErr qDebug err qDebug observer windowClosedObservers pid CFIndex windowsInApp AXUIElementGetAttributeValueCount app kAXWindowsAttribute windowsInApp CFArrayRef array AXUIElementCopyAttributeValue app kAXWindowsAttribute CFTypeRef array CFIndex j j windowsInApp j AXUIElementRef win AXUIElementRef CFArrayGetValueAtIndex array j newWindow win winfo d KWindowSystemPrivate::applicationTerminated ProcessSerialNumber psn qDebug psn lowLongOfPSN psn highLongOfPSN WId processes psn windows contains KWindowInfo winfo windows id KWindowInfo::Private wi winfo d children winids removeAll wi win emit KWindowSystem::self windowRemoved wi win winids removeAll emit KWindowSystem::self windowRemoved winfo win KWindowSystemPrivate::windowClosed AXUIElementRef element refcon qDebug KWindowInfo::Private wind KWindowInfo::Private refcon KWindowInfo::Private parent wind parent parent children removeAll wind winids removeAll wind win m_noEmit emit KWindowSystem::self windowRemoved wind win KWindowSystemPrivate::newWindow AXUIElementRef win refcon qDebug KWindowInfo::Private winfod KWindowInfo::Private refcon pid_t pid winfod pid ProcessSerialNumber psn winfod psn AXObserverRef observer windowClosedObservers pid KWindowInfo win2 AXObserverAddNotification observer win kAXUIElementDestroyedNotification win2 d noErr qDebug windows win2 win win2 winids append win2 win win2 d setProcessSerialNumber psn win2 d setAxElement win winfod children append win2 d win2 d parent winfod m_noEmit emit KWindowSystem::self windowAdded win2 win KWindowSystem KWindowSystem::self g_kwmInstanceContainer kwm KWindowSystemPrivate KWindowSystem::s_d_func g_kwmInstanceContainer d QList&lt;WId&gt; KWindowSystem::windows KWindowSystemPrivate d KWindowSystem::s_d_func d winids KWindowSystem::hasWId WId KWindowSystemPrivate d KWindowSystem::s_d_func d windows contains KWindowInfo KWindowSystem::windowInfo WId win properties properties2 KWindowSystemPrivate d KWindowSystem::s_d_func d windows contains win d windows win KWindowInfo win properties properties2 QList&lt;WId&gt; KWindowSystem::stackingOrder QList&lt;WId&gt; lst qDebug lst WId KWindowSystem::activeWindow qDebug KWindowSystem::activateWindow WId win time qDebug KWindowSystemPrivate d KWindowSystem::s_d_func d windows contains win ProcessSerialNumber psn d windows win d psn SetFrontProcess psn KWindowSystem::forceActiveWindow WId win time qDebug activateWindow win time KWindowSystem::demandAttention WId win qDebug KWindowSystem::compositingActive KWindowSystem::currentDesktop KWindowSystem::numberOfDesktops KWindowSystem::setCurrentDesktop desktop qDebug KWindowSystem::setOnAllDesktops WId win b qDebug KWindowSystem::setOnDesktop WId win desktop qDebug KWindowSystem::setMainWindow QWidget subwindow WId qDebug QPixmap KWindowSystem::icon WId win width height scale hasWId win KWindowInfo info windowInfo win info d loadedData info d updateData IconRef icon SInt16 label OSErr err GetIconRefFromFile info d iconSpec icon label OSStatus err GetIconRefFromFileInfo info d iconSpec kIconServicesCatalogInfoMask kIconServicesNormalUsageFlag icon label err noErr qDebug QPixmap QPixmap ret width height ret fill QColor CGRect rect CGRectMake width height CGContextRef ctx qt_mac_cg_context ret CGAffineTransform old_xform CGContextGetCTM ctx CGContextConcatCTM ctx CGAffineTransformInvert old_xform CGContextConcatCTM ctx CGAffineTransformIdentity b b blue b green b red PlotIconRefInContext ctx rect kAlignNone kTransformNone b kPlotIconRefNormalFlags icon CGContextRelease ctx ReleaseIconRef icon ret qDebug QPixmap QPixmap KWindowSystem::icon WId win width height scale flags icon win width height scale KWindowSystem::setIcons WId win QPixmap icon QPixmap miniIcon qDebug KWindowSystem::setType WId winid NET::WindowType windowType hasWId winid WindowGroupRef desktopGroup WindowGroupRef dockGroup WindowRef win HIViewGetWindow HIViewRef winid windowType NET::Desktop windowType NET::Dock qDebug windowType NET::Desktop desktopGroup CreateWindowGroup desktopGroup SetWindowGroupLevel desktopGroup kCGDesktopIconWindowLevel SetWindowGroup win desktopGroup windowType NET::Dock dockGroup CreateWindowGroup dockGroup SetWindowGroupLevel dockGroup kCGDockWindowLevel SetWindowGroup win dockGroup ChangeWindowAttributes win kWindowNoTitleBarAttribute kWindowNoAttributes KWindowSystem::setState WId win NET::States state qDebug KWindowSystem::clearState WId win NET::States state qDebug KWindowSystem::minimizeWindow WId win animation qDebug KWindowSystem::unminimizeWindow WId win animation qDebug KWindowSystem::raiseWindow WId win qDebug KWindowSystem::lowerWindow WId win qDebug KWindowSystem::icccmCompliantMappingState QRect KWindowSystem::workArea desktop qDebug QRect QRect KWindowSystem::workArea QList&lt;WId&gt; exclude desktop qDebug QRect QString KWindowSystem::desktopName desktop tr arg desktop KWindowSystem::setDesktopName desktop QString name qDebug KWindowSystem::showingDesktop KWindowSystem::setUserTime WId win time qDebug KWindowSystem::setExtendedStrut WId win left_width left_start left_end right_width right_start right_end top_width top_start top_end bottom_width bottom_start bottom_end qDebug KWindowSystem::setStrut WId win left right top bottom qDebug KWindowSystem::allowedActionsSupported QString KWindowSystem::readNameProperty WId window atom qDebug QString KWindowSystem::connectNotify signal qDebug KWindowSystem::allowExternalProcessWindowActivation pid KWindowSystem::setBlockingCompositing WId window active qDebug</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">platforms_2wayland_2kwindowsystem_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;WId&gt; KWindowSystemPrivateWayland::windows QList&lt;WId&gt; QList&lt;WId&gt; KWindowSystemPrivateWayland::stackingOrder QList&lt;WId&gt; WId KWindowSystemPrivateWayland::activeWindow KWindowSystemPrivateWayland::activateWindow WId win time Q_UNUSED win Q_UNUSED time KWindowSystemPrivateWayland::forceActiveWindow WId win time Q_UNUSED win Q_UNUSED time KWindowSystemPrivateWayland::demandAttention WId win Q_UNUSED win Q_UNUSED KWindowSystemPrivateWayland::compositingActive KWindowSystemPrivateWayland::currentDesktop KWindowSystemPrivateWayland::numberOfDesktops KWindowSystemPrivateWayland::setCurrentDesktop desktop Q_UNUSED desktop KWindowSystemPrivateWayland::setOnAllDesktops WId win b Q_UNUSED win Q_UNUSED b KWindowSystemPrivateWayland::setOnDesktop WId win desktop Q_UNUSED win Q_UNUSED desktop KWindowSystemPrivateWayland::setOnActivities WId win QStringList activities Q_UNUSED win Q_UNUSED activities WId KWindowSystemPrivateWayland::transientFor WId window Q_UNUSED window WId KWindowSystemPrivateWayland::groupLeader WId window Q_UNUSED window QPixmap KWindowSystemPrivateWayland::icon WId win width height scale flags Q_UNUSED win Q_UNUSED width Q_UNUSED height Q_UNUSED scale Q_UNUSED flags QPixmap KWindowSystemPrivateWayland::setIcons WId win QPixmap icon QPixmap miniIcon Q_UNUSED win Q_UNUSED icon Q_UNUSED miniIcon KWindowSystemPrivateWayland::setType WId win NET::WindowType windowType Q_UNUSED win Q_UNUSED windowType KWindowSystemPrivateWayland::setState WId win NET::States state Q_UNUSED win Q_UNUSED state KWindowSystemPrivateWayland::clearState WId win NET::States state Q_UNUSED win Q_UNUSED state KWindowSystemPrivateWayland::minimizeWindow WId win Q_UNUSED win KWindowSystemPrivateWayland::unminimizeWindow WId win Q_UNUSED win KWindowSystemPrivateWayland::raiseWindow WId win Q_UNUSED win KWindowSystemPrivateWayland::lowerWindow WId win Q_UNUSED win KWindowSystemPrivateWayland::icccmCompliantMappingState QRect KWindowSystemPrivateWayland::workArea desktop Q_UNUSED desktop QRect QRect KWindowSystemPrivateWayland::workArea QList&lt;WId&gt; excludes desktop Q_UNUSED excludes Q_UNUSED desktop QRect QString KWindowSystemPrivateWayland::desktopName desktop Q_UNUSED desktop QString KWindowSystemPrivateWayland::setDesktopName desktop QString name Q_UNUSED desktop Q_UNUSED name KWindowSystemPrivateWayland::showingDesktop KWindowSystemPrivateWayland::setShowingDesktop showing Q_UNUSED showing KWindowSystemPrivateWayland::setUserTime WId win time Q_UNUSED win Q_UNUSED time KWindowSystemPrivateWayland::setExtendedStrut WId win left_width left_start left_end right_width right_start right_end top_width top_start top_end bottom_width bottom_start bottom_end Q_UNUSED win Q_UNUSED left_width Q_UNUSED left_start Q_UNUSED left_end Q_UNUSED right_width Q_UNUSED right_start Q_UNUSED right_end Q_UNUSED top_width Q_UNUSED top_start Q_UNUSED top_end Q_UNUSED bottom_width Q_UNUSED bottom_start Q_UNUSED bottom_end KWindowSystemPrivateWayland::setStrut WId win left right top bottom Q_UNUSED win Q_UNUSED left Q_UNUSED right Q_UNUSED top Q_UNUSED bottom KWindowSystemPrivateWayland::allowedActionsSupported QString KWindowSystemPrivateWayland::readNameProperty WId window atom Q_UNUSED window Q_UNUSED atom QString KWindowSystemPrivateWayland::allowExternalProcessWindowActivation pid Q_UNUSED pid KWindowSystemPrivateWayland::setBlockingCompositing WId window active Q_UNUSED window Q_UNUSED active KWindowSystemPrivateWayland::mapViewport KWindowSystemPrivateWayland::viewportToDesktop QPoint pos Q_UNUSED pos KWindowSystemPrivateWayland::viewportWindowToDesktop QRect r Q_UNUSED r QPoint KWindowSystemPrivateWayland::desktopToViewport desktop absolute Q_UNUSED desktop Q_UNUSED absolute QPoint QPoint KWindowSystemPrivateWayland::constrainViewportRelativePosition QPoint pos Q_UNUSED pos QPoint KWindowSystemPrivateWayland::connectNotify QMetaMethod signal Q_UNUSED signal</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">platforms_2windows_2kwindowsystem_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">bool WINAPI PtrRegisterShellHook HWND hWnd DWORD method PtrRegisterShellHook pRegisterShellHook WM_SHELLHOOK KWindowSystemStaticContainer KWindowSystemStaticContainer d KWindowSystem kwm KWindowSystemPrivate d Q_GLOBAL_STATIC KWindowSystemStaticContainer g_kwmInstanceContainer InternalWindowInfo InternalWindowInfo QPixmap bigIcon QPixmap smallIcon QString windowName KWindowSystemPrivate QWidget KWindowSystem KWindowSystemPrivate what KWindowSystemPrivate CALLBACK EnumWindProc HWND hwnd LPARAM lparam readWindowInfo HWND hwnd InternalWindowInfo winfo windowAdded WId wid windowRemoved WId wid windowActivated WId wid windowRedraw WId wid windowFlash WId wid windowStateChanged WId wid reloadStackList activate nativeEvent QByteArray eventType message result Q_DECL_OVERRIDE activated what WId fakeHwnd QList&lt;WId&gt; stackingOrder QMap&lt;WId, InternalWindowInfo&gt; winInfos HBITMAP QPixmapMask2HBitmap QPixmap pix QBitmap bm pix mask bm isNull bm QBitmap pix size bm fill Qt::color1 QImage im bm toImage convertToFormat QImage::Format_Mono im invertPixels w im width h im height bpl w QByteArray bits bpl h y y h y memcpy bits data y bpl im scanLine y bpl CreateBitmap w h bits constData KWindowSystemPrivate::KWindowSystemPrivate what QWidget activated false what KWindowSystem::INFO_WINDOWS setVisible KWindowSystemPrivate::activate activated activated pRegisterShellHook pRegisterShellHook PtrRegisterShellHook QLibrary::resolve LPCSTR WM_SHELLHOOK WM_SHELLHOOK RegisterWindowMessage TEXT shellHookRegistered pRegisterShellHook shellHookRegistered pRegisterShellHook winId RSH_TASKMGR shellHookRegistered qDebug reloadStackList KWindowSystemPrivate::~KWindowSystemPrivate pRegisterShellHook pRegisterShellHook reinterpret_cast&lt;HWND&gt; winId RSH_UNREGISTER KWindowSystemPrivate::nativeEvent QByteArray eventType message_ result eventType QByteArrayLiteral QWidget::nativeEvent eventType message_ result MSG message MSG message_ message message WM_SHELLHOOK message wParam HSHELL_WINDOWCREATED KWindowSystem::s_d_func windowAdded static_cast&lt;WId&gt; message lParam HSHELL_WINDOWDESTROYED KWindowSystem::s_d_func windowRemoved static_cast&lt;WId&gt; message lParam HSHELL_WINDOWACTIVATED HSHELL_RUDEAPPACTIVATED KWindowSystem::s_d_func windowActivated static_cast&lt;WId&gt; message lParam HSHELL_GETMINRECT KWindowSystem::s_d_func windowStateChanged static_cast&lt;WId&gt; message lParam HSHELL_REDRAW KWindowSystem::s_d_func windowRedraw static_cast&lt;WId&gt; message lParam HSHELL_FLASH KWindowSystem::s_d_func windowFlash static_cast&lt;WId&gt; message lParam QWidget::nativeEvent eventType message_ result CALLBACK KWindowSystemPrivate::EnumWindProc HWND hWnd LPARAM lparam WId win WId hWnd QByteArray windowText QByteArray GetWindowTextLength hWnd GetWindowTextW hWnd LPWSTR windowText data windowText size DWORD ex_style GetWindowExStyle hWnd KWindowSystemPrivate p KWindowSystem::s_d_func QString add QString::fromWCharArray windowText data trimmed isEmpty IsWindowVisible hWnd ex_style WS_EX_TOOLWINDOW GetParent hWnd GetWindow hWnd GW_OWNER p winInfos contains win InternalWindowInfo winfo KWindowSystemPrivate::readWindowInfo hWnd winfo p stackingOrder append win p winInfos insert win winfo KWindowSystemPrivate::readWindowInfo HWND hWnd InternalWindowInfo winfo QByteArray windowText QByteArray GetWindowTextLength hWnd GetWindowTextW hWnd LPWSTR windowText data windowText size QPixmap smallIcon HICON hSmallIcon HICON SendMessage hWnd WM_GETICON ICON_SMALL hSmallIcon hSmallIcon HICON SendMessage hWnd WM_GETICON ICON_BIG hSmallIcon hSmallIcon HICON GetClassLong hWnd GCL_HICONSM hSmallIcon hSmallIcon HICON GetClassLong hWnd GCL_HICON hSmallIcon hSmallIcon HICON SendMessage hWnd WM_QUERYDRAGICON hSmallIcon smallIcon QtWin::fromHICON hSmallIcon QPixmap bigIcon HICON hBigIcon HICON SendMessage hWnd WM_GETICON ICON_BIG hBigIcon hBigIcon HICON SendMessage hWnd WM_GETICON ICON_SMALL hBigIcon hBigIcon HICON GetClassLong hWnd GCL_HICON hBigIcon hBigIcon HICON GetClassLong hWnd GCL_HICONSM hBigIcon hBigIcon HICON SendMessage hWnd WM_QUERYDRAGICON hBigIcon bigIcon QtWin::fromHICON hBigIcon winfo bigIcon bigIcon winfo smallIcon smallIcon winfo windowName QString::fromWCharArray windowText data trimmed KWindowSystemPrivate::windowAdded WId wid KWindowSystem::s_d_func reloadStackList emit KWindowSystem::self windowAdded wid emit KWindowSystem::self activeWindowChanged wid emit KWindowSystem::self stackingOrderChanged KWindowSystemPrivate::windowRemoved WId wid KWindowSystem::s_d_func reloadStackList emit KWindowSystem::self windowRemoved wid emit KWindowSystem::self stackingOrderChanged KWindowSystemPrivate::windowActivated WId wid wid KWindowSystem::s_d_func reloadStackList emit KWindowSystem::self activeWindowChanged wid emit KWindowSystem::self stackingOrderChanged KWindowSystemPrivate::windowRedraw WId wid KWindowSystem::s_d_func reloadStackList KWindowSystemPrivate::windowFlash WId wid KWindowSystemPrivate::windowStateChanged WId wid emit KWindowSystem::self windowChanged wid KWindowSystemPrivate::reloadStackList KWindowSystem::s_d_func stackingOrder clear KWindowSystem::s_d_func winInfos clear KWindowSystem KWindowSystem::self g_kwmInstanceContainer kwm KWindowSystemPrivate KWindowSystem::s_d_func g_kwmInstanceContainer d KWindowSystem::init what KWindowSystemPrivate s_d s_d_func what INFO_WINDOWS what INFO_WINDOWS what INFO_BASIC s_d g_kwmInstanceContainer d KWindowSystemPrivate what g_kwmInstanceContainer d activate s_d what what s_d g_kwmInstanceContainer d KWindowSystemPrivate what g_kwmInstanceContainer d activate KWindowSystem::allowedActionsSupported KWindowSystem::currentDesktop KWindowSystem::numberOfDesktops KWindowSystem::setMainWindow QWidget subwindow WId mainwindow SetForegroundWindow reinterpret_cast&lt;HWND&gt; subwindow winId KWindowSystem::setCurrentDesktop desktop qDebug KWindowSystem::setOnAllDesktops WId win b qDebug KWindowSystem::setOnDesktop WId win desktop qDebug WId KWindowSystem::activeWindow WId GetActiveWindow KWindowSystem::activateWindow WId win SetActiveWindow reinterpret_cast&lt;HWND&gt; win KWindowSystem::forceActiveWindow WId win time HWND hwnd HWND win IsIconic hwnd ShowWindow hwnd SW_SHOWNOACTIVATE HWND hwndActiveWin GetForegroundWindow idActive GetWindowThreadProcessId hwndActiveWin NULL AttachThreadInput GetCurrentThreadId idActive TRUE SetForegroundWindow hwnd SetFocus hwnd AttachThreadInput GetCurrentThreadId idActive FALSE KWindowSystem::demandAttention WId win FLASHWINFO fi fi cbSize FLASHWINFO fi hwnd HWND win fi dwFlags FLASHW_ALL FLASHW_STOP fi uCount fi dwTimeout FlashWindowEx fi QPixmap KWindowSystem::icon WId win width height scale KWindowSystem::init INFO_WINDOWS QPixmap pm KWindowSystem::s_d_func winInfos contains win width height pm KWindowSystem::s_d_func winInfos win smallIcon pm KWindowSystem::s_d_func winInfos win bigIcon qDebug UINT size ICON_BIG width height size ICON_SMALL HICON hIcon HICON SendMessage reinterpret_cast&lt;HWND&gt; win WM_GETICON size hIcon NULL pm QtWin::fromHICON hIcon scale pm pm scaled width height pm QPixmap KWindowSystem::icon WId win width height scale icon win width height scale KWindowSystem::setIcons WId win QPixmap icon QPixmap miniIcon KWindowSystem::init INFO_WINDOWS KWindowSystemPrivate s_d s_d_func s_d winInfos contains win s_d winInfos win smallIcon miniIcon s_d winInfos win bigIcon icon HICON hIconBig QtWin::toHICON icon HICON hIconSmall QtWin::toHICON miniIcon HWND hwnd HWND win hIconBig HICON SendMessage hwnd WM_SETICON ICON_BIG LPARAM hIconBig hIconSmall HICON SendMessage hwnd WM_SETICON ICON_SMALL LPARAM hIconSmall KWindowSystem::setState WId win NET::States state HWND hwnd HWND win got state NET::SkipTaskbar got LONG_PTR lp GetWindowLongPtr hwnd GWL_EXSTYLE SetWindowLongPtr hwnd GWL_EXSTYLE lp WS_EX_TOOLWINDOW state NET::KeepAbove got SetWindowPos hwnd HWND_TOPMOST SWP_NOMOVE SWP_NOSIZE state NET::KeepBelow got SetWindowPos hwnd HWND_BOTTOM SWP_NOMOVE SWP_NOSIZE state NET::Max got ShowWindow hwnd SW_MAXIMIZE got qDebug KWindowSystem::clearState WId win NET::States state got HWND hwnd HWND win state NET::SkipTaskbar got LONG_PTR lp GetWindowLongPtr hwnd GWL_EXSTYLE SetWindowLongPtr hwnd GWL_EXSTYLE lp WS_EX_TOOLWINDOW state NET::KeepAbove got SetWindowPos hwnd HWND_TOP SWP_NOMOVE SWP_NOSIZE state NET::Max got ShowWindow hwnd SW_RESTORE got qDebug KWindowSystem::minimizeWindow WId win animation Q_UNUSED animation ShowWindow reinterpret_cast&lt;HWND&gt; win SW_MINIMIZE KWindowSystem::unminimizeWindow WId win animation Q_UNUSED animation ShowWindow reinterpret_cast&lt;HWND&gt; win SW_RESTORE KWindowSystem::raiseWindow WId win HWND hwndActiveWin GetForegroundWindow idActive GetWindowThreadProcessId hwndActiveWin NULL AttachThreadInput GetCurrentThreadId idActive TRUE SetForegroundWindow reinterpret_cast&lt;HWND&gt; win AttachThreadInput GetCurrentThreadId idActive FALSE KWindowSystem::lowerWindow WId win SetWindowPos reinterpret_cast&lt;HWND&gt; win HWND_BOTTOM SWP_NOACTIVATE SWP_NOMOVE SWP_NOSIZE KWindowSystem::compositingActive QRect KWindowSystem::workArea desktop qApp desktop availableGeometry desktop QRect KWindowSystem::workArea QList&lt;WId&gt; exclude desktop qDebug QRect QString KWindowSystem::desktopName desktop tr arg desktop KWindowSystem::setDesktopName desktop QString name qDebug KWindowSystem::showingDesktop KWindowSystem::setUserTime WId win time qDebug KWindowSystem::icccmCompliantMappingState KWindowSystem::connectNotify QMetaMethod method what INFO_BASIC method QMetaMethod::fromSignal KWindowSystem::workAreaChanged what INFO_WINDOWS method QMetaMethod::fromSignal KWindowSystem::strutChanged what INFO_WINDOWS method QMetaMethod::fromSignal KWindowSystem WId ulong KWindowSystem::windowChanged what INFO_WINDOWS method QMetaMethod::fromSignal KWindowSystem WId uint KWindowSystem::windowChanged what INFO_WINDOWS method QMetaMethod::fromSignal KWindowSystem WId KWindowSystem::windowChanged what INFO_WINDOWS init what QObject::connectNotify method KWindowSystem::setExtendedStrut WId win left_width left_start left_end right_width right_start right_end top_width top_start top_end bottom_width bottom_start bottom_end qDebug KWindowSystem::setStrut WId win left right top bottom qDebug QString KWindowSystem::readNameProperty WId window atom qDebug QString QList&lt;WId&gt; KWindowSystem::stackingOrder KWindowSystem::init INFO_WINDOWS KWindowSystem::s_d_func stackingOrder QList&lt;WId&gt; KWindowSystem::windows KWindowSystem::init INFO_WINDOWS KWindowSystem::s_d_func stackingOrder KWindowSystem::setType WId win NET::WindowType windowType qDebug KWindowInfo KWindowSystem::windowInfo WId win properties properties2 KWindowSystem::init INFO_WINDOWS KWindowInfo win properties properties2 KWindowSystem::hasWId WId w KWindowSystem::init INFO_WINDOWS KWindowSystem::s_d_func winInfos contains w KWindowSystem::allowExternalProcessWindowActivation pid AllowSetForegroundWindow pid ASFW_ANY pid KWindowSystem::setBlockingCompositing WId window active qDebug</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.cpp</field>
    <field name="url">platforms_2xcb_2kwindowsystem_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Atom net_wm_cm create_atoms QRect displayGeometry QRect displayGeometry isDirty isDirty QList&lt;QMetaObject::Connection&gt; connections dirtify isDirty QMetaObject::Connection con connections QObject::disconnect con connections clear QObject::connect qApp QGuiApplication::screenAdded dirtify QObject::connect qApp QGuiApplication::screenRemoved dirtify QList&lt;QScreen *&gt; screenList QGuiApplication::screens QRegion region i i screenList count i QScreen screen screenList at i connections QObject::connect screen QScreen::geometryChanged dirtify region screen geometry displayGeometry region boundingRect isDirty displayGeometry displayWidth displayGeometry width displayHeight displayGeometry height NET::Properties windowsProperties NET::ClientList NET::ClientListStacking NET::Supported NET::NumberOfDesktops NET::DesktopGeometry NET::DesktopViewport NET::CurrentDesktop NET::DesktopNames NET::ActiveWindow NET::WorkArea NET::Properties2 windowsProperties2 NET::WM2ShowingDesktop NET::Properties desktopProperties NET::ClientList NET::ClientListStacking NET::Supported NET::NumberOfDesktops NET::DesktopGeometry NET::DesktopViewport NET::CurrentDesktop NET::DesktopNames NET::ActiveWindow NET::WorkArea NET::Properties2 desktopProperties2 NET::WM2ShowingDesktop MainThreadInstantiator::MainThreadInstantiator KWindowSystemPrivateX11::FilterInfo _what QObject m_what _what NETEventFilter MainThreadInstantiator::createNETEventFilter NETEventFilter m_what NETEventFilter::NETEventFilter KWindowSystemPrivateX11::FilterInfo _what NETRootInfo QX11Info connection _what KWindowSystemPrivateX11 INFO_WINDOWS windowsProperties desktopProperties _what KWindowSystemPrivateX11 INFO_WINDOWS windowsProperties2 desktopProperties2 false QAbstractNativeEventFilter strutSignalConnected false compositingEnabled false haveXfixes false what _what winId XCB_WINDOW_NONE m_appRootWindow QX11Info appRootWindow QCoreApplication::instance installNativeEventFilter errorBase haveXfixes XFixesQueryExtension QX11Info::display xfixesEventBase errorBase create_atoms winId xcb_generate_id QX11Info::connection uint32_t values XCB_EVENT_MASK_PROPERTY_CHANGE XCB_EVENT_MASK_STRUCTURE_NOTIFY xcb_create_window QX11Info::connection XCB_COPY_FROM_PARENT winId m_appRootWindow XCB_WINDOW_CLASS_INPUT_ONLY XCB_COPY_FROM_PARENT XCB_CW_OVERRIDE_REDIRECT XCB_CW_EVENT_MASK values XFixesSelectSelectionInput QX11Info::display winId net_wm_cm XFixesSetSelectionOwnerNotifyMask XFixesSelectionWindowDestroyNotifyMask XFixesSelectionClientCloseNotifyMask compositingEnabled XGetSelectionOwner QX11Info::display net_wm_cm None NETEventFilter::~NETEventFilter QX11Info::connection winId XCB_WINDOW_NONE xcb_destroy_window QX11Info::connection winId winId XCB_WINDOW_NONE NETEventFilter::activate NETRootInfo::activate updateStackingOrder NETEventFilter::nativeEventFilter QByteArray eventType message result Q_UNUSED result eventType nativeEventFilter reinterpret_cast&lt;xcb_generic_event_t *&gt; message NETEventFilter::nativeEventFilter xcb_generic_event_t ev KWindowSystem s_q KWindowSystem::self uint8_t eventType ev response_type eventType xfixesEventBase XCB_XFIXES_SELECTION_NOTIFY xcb_xfixes_selection_notify_event_t xcb_xfixes_selection_notify_event_t ev event window winId haveOwner owner XCB_WINDOW_NONE compositingEnabled haveOwner compositingEnabled haveOwner emit s_q compositingChanged compositingEnabled event window m_appRootWindow event selection net_wm_cm haveOwner owner XCB_WINDOW_NONE compositingEnabled haveOwner compositingEnabled haveOwner emit s_q compositingChanged compositingEnabled xcb_window_t eventWindow XCB_WINDOW_NONE eventType XCB_CLIENT_MESSAGE eventWindow xcb_client_message_event_t ev window XCB_PROPERTY_NOTIFY eventWindow xcb_property_notify_event_t ev window XCB_CONFIGURE_NOTIFY eventWindow xcb_configure_notify_event_t ev window eventWindow m_appRootWindow old_current_desktop currentDesktop xcb_window_t old_active_window activeWindow old_number_of_desktops numberOfDesktops old_showing_desktop showingDesktop m NETRootInfo::event ev m m PROTOCOLS CurrentDesktop currentDesktop old_current_desktop emit s_q currentDesktopChanged currentDesktop m PROTOCOLS DesktopViewport mapViewport currentDesktop old_current_desktop emit s_q currentDesktopChanged currentDesktop m PROTOCOLS ActiveWindow activeWindow old_active_window emit s_q activeWindowChanged activeWindow m PROTOCOLS DesktopNames emit s_q desktopNamesChanged m PROTOCOLS NumberOfDesktops numberOfDesktops old_number_of_desktops emit s_q numberOfDesktopsChanged numberOfDesktops m PROTOCOLS DesktopGeometry mapViewport numberOfDesktops old_number_of_desktops emit s_q numberOfDesktopsChanged numberOfDesktops m PROTOCOLS WorkArea emit s_q workAreaChanged m PROTOCOLS ClientListStacking updateStackingOrder emit s_q stackingOrderChanged m PROTOCOLS2 WM2ShowingDesktop showingDesktop old_showing_desktop emit s_q showingDesktopChanged showingDesktop windows contains eventWindow NETWinInfo ni QX11Info::connection eventWindow m_appRootWindow NET::Properties dirtyProperties NET::Properties2 dirtyProperties2 ni event ev dirtyProperties dirtyProperties2 eventType XCB_PROPERTY_NOTIFY xcb_property_notify_event_t xcb_property_notify_event_t ev event atom XCB_ATOM_WM_HINTS dirtyProperties NET::WMIcon event atom XCB_ATOM_WM_NAME dirtyProperties NET::WMName event atom XCB_ATOM_WM_ICON_NAME dirtyProperties NET::WMIconName mapViewport dirtyProperties NET::WMState NET::WMGeometry dirtyProperties NET::WMDesktop dirtyProperties NET::WMStrut removeStrutWindow eventWindow possibleStrutWindows contains eventWindow possibleStrutWindows append eventWindow dirtyProperties dirtyProperties2 emit s_q windowChanged eventWindow emit s_q windowChanged eventWindow dirtyProperties dirtyProperties2 dirty dirtyProperties dirtyProperties2 emit s_q windowChanged eventWindow dirty emit s_q windowChanged eventWindow dirtyProperties dirtyProperties NET::WMStrut emit s_q strutChanged NETEventFilter::removeStrutWindow WId w QList&lt; StrutData &gt;::Iterator it strutWindows begin it strutWindows end it window w strutWindows erase it NETEventFilter::updateStackingOrder stackingOrder clear i i clientListStackingCount i stackingOrder append clientListStacking i NETEventFilter::addClient xcb_window_t w KWindowSystem s_q KWindowSystem::self what KWindowSystemPrivateX11::INFO_WINDOWS xcb_connection_t c QX11Info::connection QScopedPointer&lt;xcb_get_window_attributes_reply_t, QScopedPointerPodDeleter&gt; attr xcb_get_window_attributes_reply c xcb_get_window_attributes_unchecked c w Q_NULLPTR uint32_t events XCB_EVENT_MASK_PROPERTY_CHANGE XCB_EVENT_MASK_STRUCTURE_NOTIFY attr isNull events events attr your_event_mask xcb_change_window_attributes c w XCB_CW_EVENT_MASK events emit_strutChanged strutSignalConnected NETWinInfo info QX11Info::connection w QX11Info::appRootWindow NET::WMStrut NET::WMDesktop NETStrut strut info strut strut left strut top strut right strut bottom strutWindows append StrutData w strut info desktop emit_strutChanged possibleStrutWindows append w windows append w emit s_q windowAdded w emit_strutChanged emit s_q strutChanged NETEventFilter::removeClient xcb_window_t w KWindowSystem s_q KWindowSystem::self emit_strutChanged removeStrutWindow w strutSignalConnected possibleStrutWindows contains w NETWinInfo info QX11Info::connection w QX11Info::appRootWindow NET::WMStrut NETStrut strut info strut strut left strut top strut right strut bottom emit_strutChanged possibleStrutWindows removeAll w windows removeAll w emit s_q windowRemoved w emit_strutChanged emit s_q strutChanged NETEventFilter::mapViewport isSupported NET::DesktopViewport numberOfDesktops desktopGeometry width displayWidth desktopGeometry height displayHeight atoms_created Atom _wm_protocols Atom _wm_change_state Atom kwm_utf8_string create_atoms atoms_created max Atom atoms max names max Atom atoms_return max n atoms n _wm_protocols names n atoms n _wm_change_state names n atoms n kwm_utf8_string names n net_wm_cm_name sprintf net_wm_cm_name QX11Info::appScreen atoms n net_wm_cm names n net_wm_cm_name XInternAtoms QX11Info::display const_cast&lt;char **&gt; names n atoms_return i i n i atoms i atoms_return i atoms_created True KWindowSystemPrivateX11::connectNotify QMetaMethod signal FilterInfo what INFO_BASIC signal QMetaMethod::fromSignal KWindowSystem::workAreaChanged what INFO_WINDOWS signal QMetaMethod::fromSignal KWindowSystem::strutChanged what INFO_WINDOWS signal QMetaMethod::fromSignal KWindowSystem WId NET::Properties NET::Properties2 KWindowSystem::windowChanged what INFO_WINDOWS signal QMetaMethod::fromSignal KWindowSystem WId KWindowSystem::windowChanged what INFO_WINDOWS signal QMetaMethod::fromSignal KWindowSystem WId uint KWindowSystem::windowChanged what INFO_WINDOWS signal QMetaMethod::fromSignal KWindowSystem WId KWindowSystem::windowChanged what INFO_WINDOWS init what NETEventFilter s_d s_d_func s_d strutSignalConnected signal QMetaMethod::fromSignal KWindowSystem::strutChanged s_d strutSignalConnected KWindowSystemPrivateX11::init FilterInfo what NETEventFilter s_d s_d_func what INFO_WINDOWS what INFO_WINDOWS what INFO_BASIC s_d s_d what what wasCompositing s_d s_d compositingEnabled MainThreadInstantiator instantiator what NETEventFilter filter instantiator thread QCoreApplication::instance thread filter instantiator createNETEventFilter instantiator moveToThread QCoreApplication::instance thread QMetaObject::invokeMethod instantiator Qt::BlockingQueuedConnection Q_RETURN_ARG NETEventFilter filter d reset filter d activate wasCompositing s_d_func compositingEnabled emit KWindowSystem::self compositingChanged s_d_func compositingEnabled QList&lt;WId&gt; KWindowSystemPrivateX11::windows init INFO_BASIC s_d_func windows QList&lt;WId&gt; KWindowSystemPrivateX11::stackingOrder init INFO_BASIC s_d_func stackingOrder KWindowSystemPrivateX11::currentDesktop QX11Info::connection mapViewport init INFO_BASIC NETEventFilter s_d s_d_func NETPoint p s_d desktopViewport s_d currentDesktop viewportToDesktop QPoint p x p y NETEventFilter s_d s_d_func s_d s_d currentDesktop NETRootInfo info QX11Info::connection NET::CurrentDesktop info currentDesktop KWindowSystemPrivateX11::numberOfDesktops QX11Info::connection mapViewport init INFO_BASIC NETEventFilter s_d s_d_func NETSize s s_d desktopGeometry s width displayWidth s height displayHeight NETEventFilter s_d s_d_func s_d s_d numberOfDesktops NETRootInfo info QX11Info::connection NET::NumberOfDesktops info numberOfDesktops KWindowSystemPrivateX11::setCurrentDesktop desktop mapViewport init INFO_BASIC NETEventFilter s_d s_d_func NETRootInfo info QX11Info::connection QPoint pos desktopToViewport desktop NETPoint p p x pos x p y pos y info setDesktopViewport s_d currentDesktop p NETRootInfo info QX11Info::connection info setCurrentDesktop desktop KWindowSystemPrivateX11::setOnAllDesktops WId win b mapViewport b setState win NET::Sticky clearState win NET::Sticky NETWinInfo info QX11Info::connection win QX11Info::appRootWindow NET::WMDesktop b info setDesktop NETWinInfo::OnAllDesktops info desktop NETWinInfo::OnAllDesktops NETRootInfo rinfo QX11Info::connection NET::CurrentDesktop info setDesktop rinfo currentDesktop KWindowSystemPrivateX11::setOnDesktop WId win desktop mapViewport desktop NET::OnAllDesktops setOnAllDesktops win clearState win NET::Sticky init INFO_BASIC QPoint p desktopToViewport desktop Window dummy x y w h b dp XGetGeometry QX11Info::display win dummy x y w h b dp XTranslateCoordinates QX11Info::display win QX11Info::appRootWindow x y dummy x w y h x x displayWidth y y displayHeight x x x displayWidth y y y displayHeight x p x y p y x w y h p constrainViewportRelativePosition QPoint x y flags NET::FromTool x03 NETEventFilter s_d s_d_func s_d moveResizeWindowRequest win flags p x p y w h NETWinInfo info QX11Info::connection win QX11Info::appRootWindow NET::WMDesktop info setDesktop desktop KWindowSystemPrivateX11::setOnActivities WId win QStringList activities NETWinInfo info QX11Info::connection win QX11Info::appRootWindow NET::WM2Activities info setActivities activities join QLatin1Char toLatin1 constData WId KWindowSystemPrivateX11::activeWindow NETEventFilter s_d s_d_func s_d s_d activeWindow NETRootInfo info QX11Info::connection NET::ActiveWindow info activeWindow KWindowSystemPrivateX11::activateWindow WId win time NETRootInfo info QX11Info::connection time time QX11Info::appUserTime info setActiveWindow win NET::FromApplication time QGuiApplication::focusWindow QGuiApplication::focusWindow winId KWindowSystemPrivateX11::forceActiveWindow WId win time NETRootInfo info QX11Info::connection time time QX11Info::appTime info setActiveWindow win NET::FromTool time KWindowSystemPrivateX11::demandAttention WId win NETWinInfo info QX11Info::connection win QX11Info::appRootWindow NET::WMState info setState NET::DemandsAttention NET::States NET::DemandsAttention WId KWindowSystemPrivateX11::transientFor WId win KWindowInfo info win NET::WM2TransientFor info transientFor WId KWindowSystemPrivateX11::groupLeader WId win KWindowInfo info win NET::WM2GroupLeader info groupLeader QPixmap KWindowSystemPrivateX11::icon WId win width height scale flags NETWinInfo info QX11Info::connection win QX11Info::appRootWindow NET::WMIcon NET::WM2WindowClass NET::WM2IconPixmap iconFromNetWinInfo width height scale flags info QPixmap KWindowSystemPrivateX11::iconFromNetWinInfo width height scale flags NETWinInfo info QPixmap result info result flags KWindowSystem::NETWM NETIcon ni info icon width height ni data ni size width ni size height QImage img uchar ni data ni size width ni size height QImage::Format_ARGB32 scale width height img size QSize width height img isNull img img scaled width height Qt::IgnoreAspectRatio Qt::SmoothTransformation img isNull result QPixmap::fromImage img result flags KWindowSystem::WMHints xcb_pixmap_t p info icccmIconPixmap xcb_pixmap_t p_mask info icccmIconPixmapMask p XCB_PIXMAP_NONE QPixmap pm KXUtils::createPixmapFromHandle info xcbConnection p p_mask scale width height pm isNull pm width width pm height height result QPixmap::fromImage pm toImage scaled width height Qt::IgnoreAspectRatio Qt::SmoothTransformation result pm iconWidth width iconWidth width iconWidth width iconWidth width iconWidth width iconWidth iconWidth flags KWindowSystem::ClassHint result isNull QIcon icon QIcon::fromTheme QString::fromUtf8 info windowClassClass toLower QPixmap pm icon isNull QPixmap icon pixmap iconWidth iconWidth scale pm isNull result QPixmap::fromImage pm toImage scaled width height Qt::IgnoreAspectRatio Qt::SmoothTransformation result pm flags KWindowSystem::XApp result isNull QIcon icon QIcon::fromTheme QLatin1String QPixmap pm icon isNull QPixmap icon pixmap iconWidth iconWidth scale pm isNull result QPixmap::fromImage pm toImage scaled width height Qt::IgnoreAspectRatio Qt::SmoothTransformation result pm result KWindowSystemPrivateX11::setIcons WId win QPixmap icon QPixmap miniIcon icon isNull NETWinInfo info QX11Info::connection win QX11Info::appRootWindow QImage img icon toImage convertToFormat QImage::Format_ARGB32 NETIcon ni ni size width img size width ni size height img size height ni data img bits info setIcon ni miniIcon isNull img miniIcon toImage convertToFormat QImage::Format_ARGB32 img isNull ni size width img size width ni size height img size height ni data img bits info setIcon ni KWindowSystemPrivateX11::setType WId win NET::WindowType windowType NETWinInfo info QX11Info::connection win QX11Info::appRootWindow info setWindowType windowType KWindowSystemPrivateX11::setState WId win NET::States state NETWinInfo info QX11Info::connection win QX11Info::appRootWindow NET::WMState info setState state state KWindowSystemPrivateX11::clearState WId win NET::States state NETWinInfo info QX11Info::connection win QX11Info::appRootWindow NET::WMState info setState state _ICCCM_WM_STATE_WITHDRAWN _ICCCM_WM_STATE_NORMAL _ICCCM_WM_STATE_ICONIC KWindowSystemPrivateX11::minimizeWindow WId win create_atoms xcb_client_message_event_t ev memset ev ev ev response_type XCB_CLIENT_MESSAGE ev window win ev type _wm_change_state ev format ev data data32 _ICCCM_WM_STATE_ICONIC ev data data32 ev data data32 ev data data32 ev data data32 xcb_send_event QX11Info::connection QX11Info::appRootWindow XCB_EVENT_MASK_SUBSTRUCTURE_NOTIFY XCB_EVENT_MASK_SUBSTRUCTURE_REDIRECT reinterpret_cast&lt;const char*&gt; ev KWindowSystemPrivateX11::unminimizeWindow WId win xcb_map_window QX11Info::connection win KWindowSystemPrivateX11::raiseWindow WId win NETRootInfo info QX11Info::connection NET::Supported info isSupported NET::WM2RestackWindow info restackRequest win NET::FromTool XCB_WINDOW_NONE XCB_STACK_MODE_ABOVE QX11Info::appUserTime uint32_t values XCB_STACK_MODE_ABOVE xcb_configure_window QX11Info::connection win XCB_CONFIG_WINDOW_STACK_MODE values KWindowSystemPrivateX11::lowerWindow WId win NETRootInfo info QX11Info::connection NET::Supported info isSupported NET::WM2RestackWindow info restackRequest win NET::FromTool XCB_WINDOW_NONE XCB_STACK_MODE_BELOW QX11Info::appUserTime uint32_t values XCB_STACK_MODE_BELOW xcb_configure_window QX11Info::connection win XCB_CONFIG_WINDOW_STACK_MODE values KWindowSystemPrivateX11::compositingActive init INFO_BASIC s_d_func haveXfixes s_d_func compositingEnabled create_atoms XGetSelectionOwner QX11Info::display net_wm_cm QRect KWindowSystemPrivateX11::workArea desktop init INFO_BASIC desk desktop desktop int s_d_func numberOfDesktops desktop currentDesktop desk displayGeometry NETRect r s_d_func workArea desk r size width r size height displayGeometry QRect r pos x r pos y r size width r size height QRect KWindowSystemPrivateX11::workArea QList&lt;WId&gt; exclude desktop init INFO_WINDOWS NETEventFilter s_d s_d_func QRect all displayGeometry QRect a all desktop desktop s_d currentDesktop QList&lt;WId&gt;::ConstIterator it1 it1 s_d windows constBegin it1 s_d windows constEnd it1 exclude contains it1 NETStrut strut it2 s_d strutWindows begin it2 s_d strutWindows end it2 window it1 it2 s_d strutWindows end desktop desktop desktop NETWinInfo::OnAllDesktops strut strut s_d possibleStrutWindows contains it1 NETWinInfo info QX11Info::connection it1 QX11Info::appRootWindow NET::WMStrut NET::WMDesktop strut info strut s_d possibleStrutWindows removeAll it1 s_d strutWindows append NETEventFilter::StrutData it1 info strut info desktop info desktop desktop info desktop NETWinInfo::OnAllDesktops QRect r all strut left r setLeft r left int strut left strut top r setTop r top int strut top strut right r setRight r right int strut right strut bottom r setBottom r bottom int strut bottom a a intersected r a QString KWindowSystemPrivateX11::desktopName desktop init INFO_BASIC NETEventFilter s_d s_d_func isDesktopSane desktop desktop int s_d numberOfDesktops name s_d desktopName isDesktopSane desktop currentDesktop name name QString::fromUtf8 name KWindowSystem::tr arg desktop KWindowSystemPrivateX11::setDesktopName desktop QString name NETEventFilter s_d s_d_func desktop &lt;= 0 || desktop &gt; numberOfDesktops desktop currentDesktop s_d s_d setDesktopName desktop name toUtf8 constData NETRootInfo info QX11Info::connection info setDesktopName desktop name toUtf8 constData KWindowSystemPrivateX11::showingDesktop init INFO_BASIC s_d_func showingDesktop KWindowSystemPrivateX11::setShowingDesktop showing NETRootInfo info QX11Info::connection NET::WM2ShowingDesktop info setShowingDesktop showing KWindowSystemPrivateX11::setUserTime WId win time NETWinInfo info QX11Info::connection win QX11Info::appRootWindow info setUserTime time KWindowSystemPrivateX11::setExtendedStrut WId win left_width left_start left_end right_width right_start right_end top_width top_start top_end bottom_width bottom_start bottom_end NETWinInfo info QX11Info::connection win QX11Info::appRootWindow NETExtendedStrut strut strut left_width left_width strut right_width right_width strut top_width top_width strut bottom_width bottom_width strut left_start left_start strut left_end left_end strut right_start right_start strut right_end right_end strut top_start top_start strut top_end top_end strut bottom_start bottom_start strut bottom_end bottom_end info setExtendedStrut strut NETStrut oldstrut oldstrut left left_width oldstrut right right_width oldstrut top top_width oldstrut bottom bottom_width info setStrut oldstrut KWindowSystemPrivateX11::setStrut WId win left right top bottom w displayWidth h displayHeight setExtendedStrut win left left w right right w top top h bottom bottom h KWindowSystemPrivateX11::icccmCompliantMappingState noidea yes no wm_is_1_2_compliant noidea wm_is_1_2_compliant noidea NETRootInfo info QX11Info::connection NET::Supported wm_is_1_2_compliant info isSupported NET::Hidden yes no wm_is_1_2_compliant yes KWindowSystemPrivateX11::allowedActionsSupported noidea yes no wm_supports_allowed_actions noidea wm_supports_allowed_actions noidea NETRootInfo info QX11Info::connection NET::Supported wm_supports_allowed_actions info isSupported NET::WM2AllowedActions yes no wm_supports_allowed_actions yes QString KWindowSystemPrivateX11::readNameProperty WId win atom XTextProperty tp text NULL count QString result XGetTextProperty QX11Info::display win tp atom tp value NULL create_atoms tp encoding kwm_utf8_string result QString::fromUtf8 tp value XmbTextPropertyToTextList QX11Info::display tp text count Success text NULL count result QString::fromLocal8Bit text tp encoding XA_STRING result QString::fromLocal8Bit tp value text NULL XFreeStringList text XFree tp value result KWindowSystemPrivateX11::allowExternalProcessWindowActivation pid Q_UNUSED pid KWindowSystemPrivateX11::setBlockingCompositing WId window active NETWinInfo info QX11Info::connection window QX11Info::appRootWindow info setBlockingCompositing active KWindowSystemPrivateX11::mapViewport NETEventFilter s_d s_d_func s_d s_d mapViewport NETRootInfo infos QX11Info::connection NET::Supported infos isSupported NET::DesktopViewport NETRootInfo info QX11Info::connection NET::NumberOfDesktops NET::CurrentDesktop NET::DesktopGeometry info numberOfDesktops info desktopGeometry width displayWidth info desktopGeometry height displayHeight KWindowSystemPrivateX11::viewportToDesktop QPoint p init INFO_BASIC NETEventFilter s_d s_d_func NETSize s s_d desktopGeometry QSize vs displayWidth displayHeight xs s width vs width x p x p x s width xs p x vs width ys s height vs height y p y p y s height ys p y vs height y xs x KWindowSystemPrivateX11::viewportWindowToDesktop QRect r init INFO_BASIC NETEventFilter s_d s_d_func QPoint p r center p QPoint p x s_d desktopViewport s_d currentDesktop x p y s_d desktopViewport s_d currentDesktop y NETSize s s_d desktopGeometry QSize vs displayWidth displayHeight xs s width vs width x p x p x s width xs p x vs width ys s height vs height y p y p y s height ys p y vs height y xs x QPoint KWindowSystemPrivateX11::desktopToViewport desktop absolute init INFO_BASIC NETEventFilter s_d s_d_func NETSize s s_d desktopGeometry QSize vs displayWidth displayHeight xs s width vs width ys s height vs height desktop &lt;= 0 || desktop &gt; xs ys QPoint desktop QPoint ret vs width desktop xs vs height desktop xs absolute ret QPoint ret x s_d desktopViewport s_d currentDesktop x ret y s_d desktopViewport s_d currentDesktop y ret x s width ret setX ret x s width ret x ret setX ret x s width ret y s height ret setY ret y s height ret y ret setY ret y s height ret QPoint KWindowSystemPrivateX11::constrainViewportRelativePosition QPoint pos init INFO_BASIC NETEventFilter s_d s_d_func NETSize s s_d desktopGeometry NETPoint c s_d desktopViewport s_d currentDesktop x pos x c x s width y pos y c y s height if x x s width y y s height QPoint x c x y c y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.h</field>
    <field name="url">kwindowsystem_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystemPrivate NETWinInfo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.h</field>
    <field name="url">kwindowsystem_8h_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">KWINDOWSYSTEM_EXPORT KWindowSystem QObject NET Q_OBJECT KWindowSystem QList&lt;WId&gt; windows hasWId WId KWINDOWSYSTEM_DEPRECATED KWindowInfo windowInfo WId win NET::Properties properties NET::Properties2 properties2 QList&lt;WId&gt; stackingOrder WId activeWindow activateWindow WId win time forceActiveWindow WId win time demandAttention WId win compositingActive currentDesktop numberOfDesktops setCurrentDesktop desktop setOnAllDesktops WId win b setOnDesktop WId win desktop setOnActivities WId win QStringList activities setMainWindow QWidget subwindow WId mainwindow KWINDOWSYSTEM_DEPRECATED WId transientFor WId window KWINDOWSYSTEM_DEPRECATED WId groupLeader WId window QPixmap icon WId win width height scale</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.h</field>
    <field name="url">kwindowsystem_8h_source.html#l00282</field>
    <field name="keywords"></field>
    <field name="text">IconSource NETWM</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.h</field>
    <field name="url">kwindowsystem_8h_source.html#l00283</field>
    <field name="keywords"></field>
    <field name="text">WMHints</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.h</field>
    <field name="url">kwindowsystem_8h_source.html#l00284</field>
    <field name="keywords"></field>
    <field name="text">ClassHint</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.h</field>
    <field name="url">kwindowsystem_8h_source.html#l00285</field>
    <field name="keywords"></field>
    <field name="text">XApp QPixmap icon WId win width height scale flags QPixmap icon WId win width height scale flags NETWinInfo info setIcons WId win QPixmap icon QPixmap miniIcon setType WId win NET::WindowType windowType setState WId win NET::States state clearState WId win NET::States state minimizeWindow WId win unminimizeWindow WId win minimizeWindow WId win animation unminimizeWindow WId win animation raiseWindow WId win lowerWindow WId win icccmCompliantMappingState QRect workArea desktop QRect workArea QList&lt;WId&gt; excludes desktop QString desktopName desktop setDesktopName desktop QString name showingDesktop setShowingDesktop showing setUserTime WId win time setExtendedStrut WId win left_width left_start left_end right_width right_start right_end top_width top_start top_end bottom_width bottom_start bottom_end setStrut WId win left right top bottom allowedActionsSupported QString readNameProperty WId window atom allowExternalProcessWindowActivation pid setBlockingCompositing WId window active mapViewport viewportToDesktop QPoint pos viewportWindowToDesktop QRect r QPoint desktopToViewport desktop absolute QPoint constrainViewportRelativePosition QPoint pos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem.h</field>
    <field name="url">kwindowsystem_8h_source.html#l00587</field>
    <field name="keywords"></field>
    <field name="text">Platform Unknown X11 Wayland Platform platform isPlatformX11 isPlatformWayland Q_SIGNALS currentDesktopChanged desktop windowAdded WId windowRemoved WId activeWindowChanged WId desktopNamesChanged numberOfDesktopsChanged num workAreaChanged strutChanged stackingOrderChanged windowChanged WId NET::Properties properties NET::Properties2 properties2 QT_MOC_COMPAT windowChanged WId properties QT_MOC_COMPAT windowChanged WId properties windowChanged WId showingDesktopChanged showing compositingChanged enabled connectNotify QMetaMethod signal Q_DECL_OVERRIDE KWindowSystemStaticContainer KWindowSystem KWindowSystemPrivate d_func</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem_p_wayland.h</field>
    <field name="url">kwindowsystem__p__wayland_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystemPrivateWayland KWindowSystemPrivate QList&lt;WId&gt; windows Q_DECL_OVERRIDE QList WId stackingOrder Q_DECL_OVERRIDE WId activeWindow Q_DECL_OVERRIDE activateWindow WId win time Q_DECL_OVERRIDE forceActiveWindow WId win time Q_DECL_OVERRIDE demandAttention WId win set Q_DECL_OVERRIDE compositingActive Q_DECL_OVERRIDE currentDesktop Q_DECL_OVERRIDE numberOfDesktops Q_DECL_OVERRIDE setCurrentDesktop desktop Q_DECL_OVERRIDE setOnAllDesktops WId win b Q_DECL_OVERRIDE setOnDesktop WId win desktop Q_DECL_OVERRIDE setOnActivities WId win const QStringList activities Q_DECL_OVERRIDE WId transientFor WId window Q_DECL_OVERRIDE WId groupLeader WId window Q_DECL_OVERRIDE QPixmap icon WId win width height scale flags Q_DECL_OVERRIDE setIcons WId win QPixmap icon QPixmap miniIcon Q_DECL_OVERRIDE setType WId win NET::WindowType windowType Q_DECL_OVERRIDE setState WId win NET::States state Q_DECL_OVERRIDE clearState WId win NET::States state Q_DECL_OVERRIDE minimizeWindow WId win Q_DECL_OVERRIDE unminimizeWindow WId win Q_DECL_OVERRIDE raiseWindow WId win Q_DECL_OVERRIDE lowerWindow WId win Q_DECL_OVERRIDE icccmCompliantMappingState Q_DECL_OVERRIDE QRect workArea desktop Q_DECL_OVERRIDE QRect workArea const QList WId excludes desktop Q_DECL_OVERRIDE QString desktopName desktop Q_DECL_OVERRIDE setDesktopName desktop const QString name Q_DECL_OVERRIDE showingDesktop Q_DECL_OVERRIDE setShowingDesktop showing Q_DECL_OVERRIDE setUserTime WId win time Q_DECL_OVERRIDE setExtendedStrut WId win left_width left_start left_end right_width right_start right_end top_width top_start top_end bottom_width bottom_start bottom_end Q_DECL_OVERRIDE setStrut WId win left right top bottom Q_DECL_OVERRIDE allowedActionsSupported Q_DECL_OVERRIDE QString readNameProperty WId window atom Q_DECL_OVERRIDE allowExternalProcessWindowActivation pid Q_DECL_OVERRIDE setBlockingCompositing WId window active Q_DECL_OVERRIDE mapViewport Q_DECL_OVERRIDE viewportToDesktop const QPoint pos Q_DECL_OVERRIDE viewportWindowToDesktop const QRect r Q_DECL_OVERRIDE QPoint desktopToViewport desktop absolute Q_DECL_OVERRIDE QPoint constrainViewportRelativePosition const QPoint pos Q_DECL_OVERRIDE connectNotify const QMetaMethod signal Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystem_p_x11.h</field>
    <field name="url">kwindowsystem__p__x11_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">NETEventFilter KWindowSystemPrivateX11 KWindowSystemPrivate QList&lt;WId&gt; windows Q_DECL_OVERRIDE QList WId stackingOrder Q_DECL_OVERRIDE WId activeWindow Q_DECL_OVERRIDE activateWindow WId win time Q_DECL_OVERRIDE forceActiveWindow WId win time Q_DECL_OVERRIDE demandAttention WId win set Q_DECL_OVERRIDE compositingActive Q_DECL_OVERRIDE currentDesktop Q_DECL_OVERRIDE numberOfDesktops Q_DECL_OVERRIDE setCurrentDesktop desktop Q_DECL_OVERRIDE setOnAllDesktops WId win b Q_DECL_OVERRIDE setOnDesktop WId win desktop Q_DECL_OVERRIDE setOnActivities WId win const QStringList activities Q_DECL_OVERRIDE WId transientFor WId window Q_DECL_OVERRIDE WId groupLeader WId window Q_DECL_OVERRIDE QPixmap icon WId win width height scale flags Q_DECL_OVERRIDE QPixmap iconFromNetWinInfo width height scale flags NETWinInfo info Q_DECL_OVERRIDE setIcons WId win QPixmap icon QPixmap miniIcon Q_DECL_OVERRIDE setType WId win NET::WindowType windowType Q_DECL_OVERRIDE setState WId win NET::States state Q_DECL_OVERRIDE clearState WId win NET::States state Q_DECL_OVERRIDE minimizeWindow WId win Q_DECL_OVERRIDE unminimizeWindow WId win Q_DECL_OVERRIDE raiseWindow WId win Q_DECL_OVERRIDE lowerWindow WId win Q_DECL_OVERRIDE icccmCompliantMappingState Q_DECL_OVERRIDE QRect workArea desktop Q_DECL_OVERRIDE QRect workArea const QList WId excludes desktop Q_DECL_OVERRIDE QString desktopName desktop Q_DECL_OVERRIDE setDesktopName desktop const QString name Q_DECL_OVERRIDE showingDesktop Q_DECL_OVERRIDE setShowingDesktop showing Q_DECL_OVERRIDE setUserTime WId win time Q_DECL_OVERRIDE setExtendedStrut WId win left_width left_start left_end right_width right_start right_end top_width top_start top_end bottom_width bottom_start bottom_end Q_DECL_OVERRIDE setStrut WId win left right top bottom Q_DECL_OVERRIDE allowedActionsSupported Q_DECL_OVERRIDE QString readNameProperty WId window atom Q_DECL_OVERRIDE allowExternalProcessWindowActivation pid Q_DECL_OVERRIDE setBlockingCompositing WId window active Q_DECL_OVERRIDE mapViewport Q_DECL_OVERRIDE viewportToDesktop const QPoint pos Q_DECL_OVERRIDE viewportWindowToDesktop const QRect r Q_DECL_OVERRIDE QPoint desktopToViewport desktop absolute Q_DECL_OVERRIDE QPoint constrainViewportRelativePosition const QPoint pos Q_DECL_OVERRIDE connectNotify const QMetaMethod signal Q_DECL_OVERRIDE enum FilterInfo INFO_BASIC INFO_WINDOWS init FilterInfo info NETEventFilter s_d_func d data QScopedPointer&lt;NETEventFilter&gt; d MainThreadInstantiator QObject Q_OBJECT MainThreadInstantiator KWindowSystemPrivateX11::FilterInfo _what Q_INVOKABLE NETEventFilter createNETEventFilter KWindowSystemPrivateX11::FilterInfo m_what NETEventFilter NETRootInfo QAbstractNativeEventFilter NETEventFilter KWindowSystemPrivateX11::FilterInfo _what NETEventFilter activate QList&lt;WId&gt; windows QList&lt;WId&gt; stackingOrder StrutData StrutData WId window_ NETStrut strut_ desktop_ window window_ strut strut_ desktop desktop_ WId window NETStrut strut desktop QList&lt;StrutData&gt; strutWindows QList&lt;WId&gt; possibleStrutWindows strutSignalConnected compositingEnabled haveXfixes KWindowSystemPrivateX11::FilterInfo what xfixesEventBase mapViewport nativeEventFilter QByteArray eventType message result Q_DECL_OVERRIDE updateStackingOrder removeStrutWindow WId addClient xcb_window_t Q_DECL_OVERRIDE removeClient xcb_window_t Q_DECL_OVERRIDE nativeEventFilter xcb_generic_event_t event xcb_window_t winId xcb_window_t m_appRootWindow</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwindowsystemplugininterface.cpp</field>
    <field name="url">kwindowsystemplugininterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystemPluginInterface::KWindowSystemPluginInterface QObject parent QObject parent KWindowSystemPluginInterface::~KWindowSystemPluginInterface KWindowEffectsPrivate KWindowSystemPluginInterface::createEffects Q_NULLPTR KWindowSystemPrivate KWindowSystemPluginInterface::createWindowSystem Q_NULLPTR KWindowInfoPrivate KWindowSystemPluginInterface::createWindowInfo WId window NET::Properties properties NET::Properties2 properties2 Q_UNUSED window Q_UNUSED properties Q_UNUSED properties2 Q_NULLPTR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kxerrorhandler.cpp</field>
    <field name="url">kxerrorhandler_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KXErrorHandlerPrivate KXErrorHandlerPrivate Display dpy first_request XNextRequest dpy display dpy was_error false first_request Display display was_error XErrorEvent error_event KXErrorHandler KXErrorHandler::handlers NULL KXErrorHandler::pos KXErrorHandler::size KXErrorHandler::KXErrorHandler Display dpy user_handler1 NULL user_handler2 NULL old_handler XSetErrorHandler handler_wrapper d new KXErrorHandlerPrivate dpy addHandler KXErrorHandler::KXErrorHandler handler Display XErrorEvent Display dpy user_handler1 NULL user_handler2 handler old_handler XSetErrorHandler handler_wrapper d new KXErrorHandlerPrivate dpy addHandler KXErrorHandler::~KXErrorHandler XSetErrorHandler old_handler Q_ASSERT_X handlers pos pos d KXErrorHandler::addHandler size pos size handlers KXErrorHandler realloc handlers size KXErrorHandler handlers pos KXErrorHandler::error sync sync XSync d display False d was_error XErrorEvent KXErrorHandler::errorEvent d error_event KXErrorHandler::handler_wrapper Display dpy XErrorEvent e pos ret handlers pos handle dpy e pos ret KXErrorHandler::handle Display dpy XErrorEvent e dpy d display NET::timestampCompare e serial d first_request error user_handler1 NULL user_handler1 e request_code e error_code e resourceid error user_handler2 NULL user_handler2 dpy e error error error d was_error d was_error d error_event e old_handler dpy e QByteArray KXErrorHandler::errorMessage XErrorEvent event Display dpy QByteArray ret tmp num event request_code XGetErrorText dpy event error_code tmp paren strchr tmp paren ret QByteArray tmp QByteArray::number event error_code sprintf num event request_code XGetErrorDatabaseText dpy num tmp ret QByteArray tmp QByteArray::number event request_code event resourceid ret QByteArray QByteArray::number qlonglong event resourceid Display dpy2 XOpenDisplay XDisplayString dpy nextensions extensions XListExtensions dpy2 nextensions majors NULL error_bases NULL extensions NULL nextensions majors nextensions error_bases nextensions i i nextensions i dummy XQueryExtension dpy2 extensions i majors i dummy error_bases i majors i error_bases i XGetErrorText dpy event error_code tmp index base i i nextensions i error_bases i event error_code error_bases i index error_bases i base index i base error_bases i tmp QString::number event error_code index qsnprintf num extensions index event error_code base XGetErrorDatabaseText dpy num tmp strcpy tmp paren strchr tmp paren index ret QByteArray tmp extensions index QByteArray::number event error_code base ret QByteArray tmp QByteArray::number event error_code tmp i i nextensions i majors i event request_code qsnprintf num extensions i event minor_code XGetErrorDatabaseText dpy num tmp ret QByteArray tmp extensions i QByteArray::number event minor_code tmp ret QByteArray QByteArray::number event request_code QByteArray::number event minor_code event resourceid ret QByteArray QByteArray::number qlonglong event resourceid extensions NULL XFreeExtensionList extensions majors error_bases XCloseDisplay dpy2 ret</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kxmessages.cpp</field>
    <field name="url">kxmessages_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">XcbAtom XcbAtom QByteArray name onlyIfExists m_name name m_atom XCB_ATOM_NONE m_connection Q_NULLPTR m_retrieved false m_onlyIfExists onlyIfExists m_cookie sequence XcbAtom xcb_connection_t c QByteArray name onlyIfExists m_name name m_atom XCB_ATOM_NONE m_cookie xcb_intern_atom_unchecked c onlyIfExists name length name constData m_connection c m_retrieved false m_onlyIfExists onlyIfExists XcbAtom m_retrieved m_cookie sequence m_connection xcb_discard_reply m_connection m_cookie sequence xcb_atom_t getReply m_atom QByteArray name m_name setConnection xcb_connection_t c m_connection c fetch m_connection m_name isEmpty m_cookie xcb_intern_atom_unchecked m_connection m_onlyIfExists m_name length m_name constData getReply m_retrieved m_cookie sequence m_connection KXUtils::ScopedCPointer&lt;xcb_intern_atom_reply_t&gt; reply xcb_intern_atom_reply m_connection m_cookie Q_NULLPTR reply isNull m_atom reply atom m_retrieved QByteArray m_name xcb_atom_t m_atom xcb_intern_atom_cookie_t m_cookie xcb_connection_t m_connection m_retrieved m_onlyIfExists KXMessagesPrivate QAbstractNativeEventFilter KXMessagesPrivate KXMessages parent acceptBroadcast xcb_connection_t c xcb_window_t root accept_atom1 acceptBroadcast QByteArray acceptBroadcast QByteArrayLiteral QByteArray accept_atom2 acceptBroadcast QByteArray acceptBroadcast QByteArray handle new QWidget q parent valid c connection c rootWindow root acceptBroadcast accept_atom1 setConnection c accept_atom1 fetch accept_atom2 setConnection c accept_atom2 fetch QCoreApplication::instance installNativeEventFilter XcbAtom accept_atom1 XcbAtom accept_atom2 QMap&lt; WId, QByteArray &gt; incoming_messages QScopedPointer&lt;QWidget&gt; handle KXMessages q valid xcb_connection_t connection xcb_window_t rootWindow nativeEventFilter QByteArray eventType message result Q_UNUSED result eventType xcb_generic_event_t xcb_generic_event_t message uint response_type response_type response_type XCB_CLIENT_MESSAGE xcb_client_message_event_t cm_event xcb_client_message_event_t event cm_event format cm_event type accept_atom1 cm_event type accept_atom2 buf qstrncpy buf reinterpret_cast&lt;char *&gt; cm_event data data8 incoming_messages contains cm_event window cm_event type accept_atom1 incoming_messages cm_event window QByteArray incoming_messages cm_event window buf cm_event type accept_atom2 incoming_messages cm_event window buf strlen buf emit q gotMessage QString::fromUtf8 incoming_messages cm_event window constData incoming_messages remove cm_event window send_message_internal WId w_P QString msg_P mask_P Display disp Atom atom1_P Atom atom2_P Window handle_P BROADCAST_MASK PropertyChangeMask send_message_internal xcb_window_t w QString msg xcb_connection_t c xcb_atom_t leadingMessage xcb_atom_t followingMessage xcb_window_t handle</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kxmessages.cpp</field>
    <field name="url">kxmessages_8cpp_source.html#l00191</field>
    <field name="keywords"></field>
    <field name="text">KXMessages::KXMessages accept_broadcast_P QObject parent_P QObject parent_P d new KXMessagesPrivate this accept_broadcast_P QX11Info isPlatformX11 QX11Info connection Q_NULLPTR QX11Info isPlatformX11 QX11Info appRootWindow</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kxmessages.cpp</field>
    <field name="url">kxmessages_8cpp_source.html#l00197</field>
    <field name="keywords"></field>
    <field name="text">KXMessages::KXMessages xcb_connection_t connection xcb_window_t rootWindow accept_broadcast QObject parent QObject parent d new KXMessagesPrivate this accept_broadcast connection rootWindow KXMessages::~KXMessages d xcb_screen_t defaultScreen xcb_connection_t c screen xcb_screen_iterator_t it xcb_setup_roots_iterator xcb_get_setup c it rem screen xcb_screen_next it screen it data Q_NULLPTR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kxmessages.cpp</field>
    <field name="url">kxmessages_8cpp_source.html#l00221</field>
    <field name="keywords"></field>
    <field name="text">KXMessages::broadcastMessage msg_type_P QString message_P screen_P d valid qWarning QByteArray msg msg_type_P XcbAtom a2 d connection msg XcbAtom a1 d connection msg QByteArrayLiteral xcb_window_t root screen_P d rootWindow defaultScreen d connection screen_P root send_message_internal root message_P d connection a1 a2 d handle winId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kxmessages.cpp</field>
    <field name="url">kxmessages_8cpp_source.html#l00236</field>
    <field name="keywords"></field>
    <field name="text">KXMessages::broadcastMessageX Display disp msg_type_P QString message_P screen_P disp NULL Atom a2 XInternAtom disp msg_type_P Atom a1 XInternAtom disp QByteArray QByteArray msg_type_P constData Window root screen_P DefaultRootWindow disp RootWindow disp screen_P Window win XCreateSimpleWindow disp root BlackPixel disp screen_P DefaultScreen disp screen_P BlackPixel disp screen_P DefaultScreen disp screen_P send_message_internal root message_P BROADCAST_MASK disp a1 a2 win XDestroyWindow disp win</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kxmessages.cpp</field>
    <field name="url">kxmessages_8cpp_source.html#l00255</field>
    <field name="keywords"></field>
    <field name="text">KXMessages::broadcastMessageX xcb_connection_t c msg_type_P QString message screenNumber c QByteArray msg msg_type_P XcbAtom a2 c msg XcbAtom a1 c msg QByteArrayLiteral xcb_screen_t screen defaultScreen c screenNumber screen xcb_window_t root screen root xcb_window_t win xcb_generate_id c xcb_create_window c XCB_COPY_FROM_PARENT win root XCB_COPY_FROM_PARENT XCB_COPY_FROM_PARENT Q_NULLPTR send_message_internal root message c a1 a2 win xcb_destroy_window c win KXMessages::sendMessage WId w_P msg_type_P QString message_P Atom a2 XInternAtom QX11Info::display msg_type_P Atom a1 XInternAtom QX11Info::display QByteArray QByteArray msg_type_P constData send_message_internal w_P message_P QX11Info::display a1 a2 d handle winId KXMessages::sendMessageX Display disp WId w_P msg_type_P QString message_P disp NULL Atom a2 XInternAtom disp msg_type_P Atom a1 XInternAtom disp QByteArray QByteArray msg_type_P constData Window win XCreateSimpleWindow disp DefaultRootWindow disp BlackPixelOfScreen DefaultScreenOfDisplay disp BlackPixelOfScreen DefaultScreenOfDisplay disp send_message_internal w_P message_P disp a1 a2 win XDestroyWindow disp win send_message_internal WId w_P QString msg_P mask_P Display disp Atom atom1_P Atom atom2_P Window handle_P pos QByteArray msg msg_P toUtf8 len strlen msg constData XEvent e e xclient type ClientMessage e xclient message_type atom1_P e xclient display disp e xclient window handle_P e xclient format i i i i pos len i e xclient data b i msg i pos XSendEvent disp w_P mask_P e e xclient message_type atom2_P pos i pos len XFlush disp send_message_internal xcb_window_t w QString msg_P xcb_connection_t c xcb_atom_t leadingMessage xcb_atom_t followingMessage xcb_window_t handle pos QByteArray msg msg_P toUtf8 len strlen msg constData xcb_client_message_event_t event response_type XCB_CLIENT_MESSAGE format sequence window handle type leadingMessage i i i i pos len i data data8 i msg i pos j i j j data data8 j xcb_send_event c w XCB_EVENT_MASK_PROPERTY_CHANGE event type followingMessage pos i pos len xcb_flush c</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kxmessages.h</field>
    <field name="url">kxmessages_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">_XDisplay Display QString KXMessagesPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kxmessages.h</field>
    <field name="url">kxmessages_8h_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">KWINDOWSYSTEM_EXPORT KXMessages QObject Q_OBJECT KXMessages accept_broadcast NULL QObject parent NULL KXMessages xcb_connection_t connection xcb_window_t rootWindow accept_broadcast Q_NULLPTR QObject parent Q_NULLPTR KXMessages broadcastMessage msg_type QString message screen KWINDOWSYSTEM_DEPRECATED broadcastMessageX Display disp msg_type QString message screen broadcastMessageX xcb_connection_t c msg_type QString message screenNumber sendMessage WId w msg_type QString message sendMessageX Display disp WId w msg_type QString message Q_SIGNALS gotMessage QString message KXMessagesPrivate KXMessagesPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kxutils.cpp</field>
    <field name="url">kxutils_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KXUtils T fromNative xcb_pixmap_t pixmap xcb_connection_t c xcb_get_geometry_cookie_t geoCookie xcb_get_geometry_unchecked c pixmap ScopedCPointer&lt;xcb_get_geometry_reply_t&gt; geo xcb_get_geometry_reply c geoCookie Q_NULLPTR geo isNull T xcb_get_image_cookie_t imageCookie xcb_get_image_unchecked c XCB_IMAGE_FORMAT_Z_PIXMAP pixmap geo width geo height ScopedCPointer&lt;xcb_get_image_reply_t&gt; xImage xcb_get_image_reply c imageCookie Q_NULLPTR xImage isNull T QImage::Format format QImage::Format_Invalid xImage depth format QImage::Format_MonoLSB format QImage::Format_RGB16 format QImage::Format_RGB32 uint32_t pixels uint32_t xcb_get_image_data xImage data uint i i xImage data length i r pixels i xff g pixels i xff b pixels i xff pixels i qRgba r g b xff format QImage::Format_ARGB32_Premultiplied T QImage image xcb_get_image_data xImage data geo width geo height xcb_get_image_data_length xImage data geo height format free xImage data xImage take image isNull T image format QImage::Format_MonoLSB image setColorCount image setColor QColor Qt::white rgb image setColor QColor Qt::black rgb T::fromImage image QPixmap createPixmapFromHandle WId pixmap WId pixmap_mask createPixmapFromHandle QX11Info::connection pixmap pixmap_mask QPixmap createPixmapFromHandle xcb_connection_t c WId pixmap WId pixmap_mask qDebug QPixmap xcb_setup_t setup xcb_get_setup c setup image_byte_order XCB_IMAGE_ORDER_LSB_FIRST qDebug QPixmap QPixmap pix fromNative&lt;QPixmap&gt; pixmap c pixmap_mask XCB_PIXMAP_NONE QBitmap mask fromNative&lt;QBitmap&gt; pixmap_mask c mask size pix size QPixmap pix setMask mask pix timestampCompare Time time1 Time time2 time1 time2 time1 time2 U Time timestampDiff Time time1 Time time2 time2 time1 timestampCompare time1_ time2_ quint32 time1 time1_ quint32 time2 time2_ time1 time2 quint32 time1 time2 U timestampDiff time1_ time2_ quint32 time1 time1_ quint32 time2 time2_ quint32 time2 time1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">kde_wm_hints uint32_t flags uint32_t input int32_t initial_state xcb_pixmap_t icon_pixmap xcb_window_t icon_window int32_t icon_x int32_t icon_y xcb_pixmap_t icon_mask xcb_window_t window_group QHash&lt; xcb_connection_t*, QSharedDataPointer&lt;Atoms&gt; AtomHash Q_GLOBAL_STATIC AtomHash s_gAtomsHash QSharedDataPointer&lt;Atoms&gt; atomsForConnection xcb_connection_t c it s_gAtomsHash constFind c it s_gAtomsHash constEnd QSharedDataPointer&lt;Atoms&gt; atom Atoms c s_gAtomsHash insert c atom atom it value Atoms::Atoms xcb_connection_t c QSharedData m_connection c i i KwsAtomCount i m_atoms i XCB_ATOM_NONE init uint32_t netwm_sendevent_mask XCB_EVENT_MASK_SUBSTRUCTURE_REDIRECT XCB_EVENT_MASK_SUBSTRUCTURE_NOTIFY MAX_PROP_SIZE nstrdup s1 s1 l strlen s1 s2 l strncpy s2 s1 l s2 nstrndup s1 l s1 l s2 l strncpy s2 s1 l s2 l s2 xcb_window_t nwindup xcb_window_t w1 n w1 n xcb_window_t xcb_window_t w2 xcb_window_t n n w2 n w1 n w2 refdec_nri NETRootInfoPrivate p fprintf stderr p ref p ref fprintf stderr p name p stacking p clients p virtual_roots p temp_buf i i i p desktop_names size i p desktop_names i refdec_nwi NETWinInfoPrivate p fprintf stderr p ref p ref fprintf stderr p name p visible_name p window_role p icon_name p visible_icon_name p startup_id p class_class p class_name p activities p client_machine i i i p icons size i p icons i data p icon_sizes T get_value_reply xcb_connection_t c xcb_get_property_cookie_t cookie xcb_atom_t type T def success T value def xcb_get_property_reply_t reply xcb_get_property_reply c cookie success success reply reply type type reply value_len reply format T value T xcb_get_property_value reply success success free reply value QVector&lt;T&gt; get_array_reply xcb_connection_t c xcb_get_property_cookie_t cookie xcb_atom_t type xcb_get_property_reply_t reply xcb_get_property_reply c cookie reply QVector&lt;T&gt; QVector&lt;T&gt; vector reply type type reply value_len reply format T T data T xcb_get_property_value reply vector resize reply value_len memcpy vector first data reply value_len T free reply vector QByteArray get_string_reply xcb_connection_t c xcb_get_property_cookie_t cookie xcb_atom_t type xcb_get_property_reply_t reply xcb_get_property_reply c cookie reply QByteArray QByteArray value reply type type reply format reply value_len data xcb_get_property_value reply len reply value_len data value QByteArray data data len len len free reply value QList&lt;QByteArray&gt; get_stringlist_reply xcb_connection_t c xcb_get_property_cookie_t cookie xcb_atom_t type xcb_get_property_reply_t reply xcb_get_property_reply c cookie reply QList&lt;QByteArray&gt; QList&lt;QByteArray&gt; list reply type type reply format reply value_len data xcb_get_property_value reply len reply value_len data QByteArray ba QByteArray data data len len len list ba split free reply list QByteArray get_atom_name xcb_connection_t c xcb_atom_t atom xcb_get_atom_name_cookie_t cookie xcb_get_atom_name c atom xcb_get_atom_name_reply_t reply xcb_get_atom_name_reply p conn cookie reply QByteArray QByteArray ba xcb_get_atom_name_name reply free reply ba Atoms::init xcb_intern_atom_cookie_t cookies KwsAtomCount i i KwsAtomCount i cookies i xcb_intern_atom m_connection strlen KwsAtomStrings i KwsAtomStrings i i i KwsAtomCount i xcb_intern_atom_reply_t reply xcb_intern_atom_reply m_connection cookies i reply m_atoms i reply atom free reply readIcon xcb_connection_t c xcb_get_property_cookie_t cookie NETRArray&lt;NETIcon&gt; icons icon_count fprintf stderr i i icons size i icons i data icons reset icon_count xcb_get_property_reply_t reply xcb_get_property_reply c cookie reply reply value_len reply format reply type XCB_ATOM_CARDINAL reply free reply uint32_t data uint32_t xcb_get_property_value reply i j j reply value_len i uint32_t width data j uint32_t height data j uint32_t size width height uint32_t j width height reply value_len fprintf stderr width height width height fprintf stderr width height icons i size width width icons i size height height icons i data size memcpy icons i data data j size j width height icon_count free reply fprintf stderr icon_count send_client_message xcb_connection_t c uint32_t mask xcb_window_t destination xcb_window_t window xcb_atom_t message uint32_t data xcb_client_message_event_t event response_type XCB_CLIENT_MESSAGE format sequence window window type message i i i data data32 i data i xcb_send_event c destination mask event NETRArray&lt;Z&gt;::NETRArray sz capacity d Z calloc capacity Z NETRArray&lt;Z&gt;::~NETRArray free d NETRArray&lt;Z&gt;::reset sz capacity d Z realloc d Z capacity memset d Z capacity Z NETRArray&lt;Z&gt;::operator[] index index capacity newcapacity capacity index capacity index d Z realloc d Z newcapacity memset d capacity Z newcapacity capacity capacity newcapacity index sz sz index d index</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l00448</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::NETRootInfo xcb_connection_t connection xcb_window_t supportWindow wmName NET::Properties properties NET::WindowTypes windowTypes NET::States states NET::Properties2 properties2 NET::Actions actions screen doActivate fprintf stderr p NETRootInfoPrivate p ref p atoms atomsForConnection connection p name nstrdup wmName p conn connection p temp_buf p temp_buf_size xcb_setup_t setup xcb_get_setup p conn xcb_screen_iterator_t it xcb_setup_roots_iterator setup screen screen &lt; setup-&gt; roots_len i i screen i xcb_screen_next it p root it data root p supportwindow supportWindow p number_of_desktops p current_desktop p active XCB_WINDOW_NONE p clients p stacking p virtual_roots xcb_window_t p clients_count p stacking_count p virtual_roots_count p showing_desktop p desktop_layout_orientation OrientationHorizontal p desktop_layout_corner DesktopLayoutCornerTopLeft p desktop_layout_columns p desktop_layout_rows setDefaultProperties p properties properties p properties2 properties2 p windowTypes windowTypes p states states p actions actions p properties Supported SupportingWMCheck p clientProperties DesktopNames WMPing p clientProperties2 WM2DesktopLayout p role WindowManager doActivate activate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l00507</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::NETRootInfo xcb_connection_t connection NET::Properties properties NET::Properties2 properties2 screen doActivate fprintf stderr p NETRootInfoPrivate p ref p atoms atomsForConnection connection p name p conn connection p temp_buf p temp_buf_size xcb_setup_t setup xcb_get_setup p conn xcb_screen_iterator_t it xcb_setup_roots_iterator setup screen screen &lt; setup-&gt; roots_len i i screen i xcb_screen_next it p root it data root p rootSize width it data width_in_pixels p rootSize height it data height_in_pixels p supportwindow XCB_WINDOW_NONE p number_of_desktops p current_desktop p active XCB_WINDOW_NONE p clients p stacking p virtual_roots xcb_window_t p clients_count p stacking_count p virtual_roots_count p showing_desktop p desktop_layout_orientation OrientationHorizontal p desktop_layout_corner DesktopLayoutCornerTopLeft p desktop_layout_columns p desktop_layout_rows setDefaultProperties p clientProperties properties p clientProperties2 properties2 p properties p properties2 p windowTypes p states p actions p role Client doActivate activate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l00568</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::NETRootInfo NETRootInfo rootinfo fprintf stderr p rootinfo p p ref</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l00582</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::~NETRootInfo refdec_nri p p ref p NETRootInfo::setDefaultProperties p properties Supported SupportingWMCheck p windowTypes NormalMask DesktopMask DockMask ToolbarMask MenuMask DialogMask p states Modal Sticky MaxVert MaxHoriz Shaded SkipTaskbar StaysOnTop p properties2 p actions p clientProperties p clientProperties2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l00604</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::activate p role WindowManager fprintf stderr setSupported update p clientProperties p clientProperties2 fprintf stderr update p clientProperties p clientProperties2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l00625</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setClientList xcb_window_t windows count p role WindowManager p clients_count count p clients p clients nwindup windows count fprintf stderr p clients_count xcb_change_property p conn XCB_PROP_MODE_REPLACE p root p atom _NET_CLIENT_LIST XCB_ATOM_WINDOW p clients_count windows</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l00646</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setClientListStacking xcb_window_t windows count p role WindowManager p stacking_count count p stacking p stacking nwindup windows count fprintf stderr p clients_count xcb_change_property p conn XCB_PROP_MODE_REPLACE p root p atom _NET_CLIENT_LIST_STACKING XCB_ATOM_WINDOW p stacking_count windows</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l00667</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setNumberOfDesktops numberOfDesktops fprintf stderr numberOfDesktops p role WindowManager p role WindowManager p number_of_desktops numberOfDesktops uint32_t d numberOfDesktops xcb_change_property p conn XCB_PROP_MODE_REPLACE p root p atom _NET_NUMBER_OF_DESKTOPS XCB_ATOM_CARDINAL d uint32_t data uint32_t numberOfDesktops send_client_message p conn netwm_sendevent_mask p root p root p atom _NET_NUMBER_OF_DESKTOPS data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l00690</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setCurrentDesktop desktop ignore_viewport fprintf stderr desktop p role WindowManager p role WindowManager p current_desktop desktop uint32_t d p current_desktop xcb_change_property p conn XCB_PROP_MODE_REPLACE p root p atom _NET_CURRENT_DESKTOP XCB_ATOM_CARDINAL d ignore_viewport KWindowSystem::mapViewport KWindowSystem::setCurrentDesktop desktop uint32_t data uint32_t desktop send_client_message p conn netwm_sendevent_mask p root p root p atom _NET_CURRENT_DESKTOP data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l00719</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setDesktopName desktop desktopName desktop p desktop_names desktop p desktop_names desktop nstrdup desktopName i proplen num p number_of_desktops p desktop_names size p number_of_desktops p desktop_names size i proplen i num i proplen p desktop_names i strlen p desktop_names i prop proplen propp prop i i num i p desktop_names i strcpy propp p desktop_names i propp strlen p desktop_names i propp fprintf stderr desktop desktopName proplen xcb_change_property p conn XCB_PROP_MODE_REPLACE p root p atom _NET_DESKTOP_NAMES p atom UTF8_STRING proplen prop prop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l00759</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setDesktopGeometry NETSize geometry fprintf stderr geometry width geometry height p role WindowManager p role WindowManager p geometry geometry uint32_t data data p geometry width data p geometry height xcb_change_property p conn XCB_PROP_MODE_REPLACE p root p atom _NET_DESKTOP_GEOMETRY XCB_ATOM_CARDINAL data uint32_t data uint32_t geometry width uint32_t geometry height send_client_message p conn netwm_sendevent_mask p root p root p atom _NET_DESKTOP_GEOMETRY data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l00785</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setDesktopViewport desktop NETPoint viewport fprintf stderr desktop viewport x viewport y p role WindowManager desktop p role WindowManager p viewport desktop viewport d i l l p number_of_desktops uint32_t data uint32_t l d i d p number_of_desktops d data i p viewport d x data i p viewport d y xcb_change_property p conn XCB_PROP_MODE_REPLACE p root p atom _NET_DESKTOP_VIEWPORT XCB_ATOM_CARDINAL l data data uint32_t data uint32_t viewport x uint32_t viewport y send_client_message p conn netwm_sendevent_mask p root p root p atom _NET_DESKTOP_VIEWPORT data NETRootInfo::setSupported p role WindowManager fprintf stderr xcb_atom_t atoms KwsAtomCount pnum atoms p atom _NET_SUPPORTED atoms p atom _NET_SUPPORTING_WM_CHECK p properties ClientList atoms pnum p atom _NET_CLIENT_LIST p properties ClientListStacking atoms pnum p atom _NET_CLIENT_LIST_STACKING p properties NumberOfDesktops atoms pnum p atom _NET_NUMBER_OF_DESKTOPS p properties DesktopGeometry atoms pnum p atom _NET_DESKTOP_GEOMETRY p properties DesktopViewport atoms pnum p atom _NET_DESKTOP_VIEWPORT p properties CurrentDesktop atoms pnum p atom _NET_CURRENT_DESKTOP p properties DesktopNames atoms pnum p atom _NET_DESKTOP_NAMES p properties ActiveWindow atoms pnum p atom _NET_ACTIVE_WINDOW p properties WorkArea atoms pnum p atom _NET_WORKAREA p properties VirtualRoots atoms pnum p atom _NET_VIRTUAL_ROOTS p properties2 WM2DesktopLayout atoms pnum p atom _NET_DESKTOP_LAYOUT p properties CloseWindow atoms pnum p atom _NET_CLOSE_WINDOW p properties2 WM2RestackWindow atoms pnum p atom _NET_RESTACK_WINDOW p properties2 WM2ShowingDesktop atoms pnum p atom _NET_SHOWING_DESKTOP p properties WMMoveResize atoms pnum p atom _NET_WM_MOVERESIZE p properties2 WM2MoveResizeWindow atoms pnum p atom _NET_MOVERESIZE_WINDOW p properties WMName atoms pnum p atom _NET_WM_NAME p properties WMVisibleName atoms pnum p atom _NET_WM_VISIBLE_NAME p properties WMIconName atoms pnum p atom _NET_WM_ICON_NAME p properties WMVisibleIconName atoms pnum p atom _NET_WM_VISIBLE_ICON_NAME p properties WMDesktop atoms pnum p atom _NET_WM_DESKTOP p properties WMWindowType atoms pnum p atom _NET_WM_WINDOW_TYPE p windowTypes NormalMask atoms pnum p atom _NET_WM_WINDOW_TYPE_NORMAL p windowTypes DesktopMask atoms pnum p atom _NET_WM_WINDOW_TYPE_DESKTOP p windowTypes DockMask atoms pnum p atom _NET_WM_WINDOW_TYPE_DOCK p windowTypes ToolbarMask atoms pnum p atom _NET_WM_WINDOW_TYPE_TOOLBAR p windowTypes MenuMask atoms pnum p atom _NET_WM_WINDOW_TYPE_MENU p windowTypes DialogMask atoms pnum p atom _NET_WM_WINDOW_TYPE_DIALOG p windowTypes UtilityMask atoms pnum p atom _NET_WM_WINDOW_TYPE_UTILITY p windowTypes SplashMask atoms pnum p atom _NET_WM_WINDOW_TYPE_SPLASH p windowTypes DropdownMenuMask atoms pnum p atom _NET_WM_WINDOW_TYPE_DROPDOWN_MENU p windowTypes PopupMenuMask atoms pnum p atom _NET_WM_WINDOW_TYPE_POPUP_MENU p windowTypes TooltipMask atoms pnum p atom _NET_WM_WINDOW_TYPE_TOOLTIP p windowTypes NotificationMask atoms pnum p atom _NET_WM_WINDOW_TYPE_NOTIFICATION p windowTypes ComboBoxMask atoms pnum p atom _NET_WM_WINDOW_TYPE_COMBOBOX p windowTypes DNDIconMask atoms pnum p atom _NET_WM_WINDOW_TYPE_DND p windowTypes OverrideMask atoms pnum p atom _KDE_NET_WM_WINDOW_TYPE_OVERRIDE p windowTypes TopMenuMask atoms pnum p atom _KDE_NET_WM_WINDOW_TYPE_TOPMENU p windowTypes OnScreenDisplayMask atoms pnum p atom _KDE_NET_WM_WINDOW_TYPE_ON_SCREEN_DISPLAY p properties WMState atoms pnum p atom _NET_WM_STATE p states Modal atoms pnum p atom _NET_WM_STATE_MODAL p states Sticky atoms pnum p atom _NET_WM_STATE_STICKY p states MaxVert atoms pnum p atom _NET_WM_STATE_MAXIMIZED_VERT p states MaxHoriz atoms pnum p atom _NET_WM_STATE_MAXIMIZED_HORZ p states Shaded atoms pnum p atom _NET_WM_STATE_SHADED p states SkipTaskbar atoms pnum p atom _NET_WM_STATE_SKIP_TASKBAR p states SkipPager atoms pnum p atom _NET_WM_STATE_SKIP_PAGER p states Hidden atoms pnum p atom _NET_WM_STATE_HIDDEN p states FullScreen atoms pnum p atom _NET_WM_STATE_FULLSCREEN p states KeepAbove atoms pnum p atom _NET_WM_STATE_ABOVE p states KeepBelow atoms pnum p atom _NET_WM_STATE_BELOW p states DemandsAttention atoms pnum p atom _NET_WM_STATE_DEMANDS_ATTENTION p states StaysOnTop atoms pnum p atom _NET_WM_STATE_STAYS_ON_TOP p properties WMStrut atoms pnum p atom _NET_WM_STRUT p properties2 WM2ExtendedStrut atoms pnum p atom _NET_WM_STRUT_PARTIAL p properties WMIconGeometry atoms pnum p atom _NET_WM_ICON_GEOMETRY p properties WMIcon atoms pnum p atom _NET_WM_ICON p properties WMPid atoms pnum p atom _NET_WM_PID p properties WMHandledIcons atoms pnum p atom _NET_WM_HANDLED_ICONS p properties WMPing atoms pnum p atom _NET_WM_PING p properties2 WM2UserTime atoms pnum p atom _NET_WM_USER_TIME p properties2 WM2StartupId atoms pnum p atom _NET_STARTUP_ID p properties2 WM2Opacity atoms pnum p atom _NET_WM_WINDOW_OPACITY p properties2 WM2FullscreenMonitors atoms pnum p atom _NET_WM_FULLSCREEN_MONITORS p properties2 WM2AllowedActions atoms pnum p atom _NET_WM_ALLOWED_ACTIONS p actions ActionMove atoms pnum p atom _NET_WM_ACTION_MOVE p actions ActionResize atoms pnum p atom _NET_WM_ACTION_RESIZE p actions ActionMinimize atoms pnum p atom _NET_WM_ACTION_MINIMIZE p actions ActionShade atoms pnum p atom _NET_WM_ACTION_SHADE p actions ActionStick atoms pnum p atom _NET_WM_ACTION_STICK p actions ActionMaxVert atoms pnum p atom _NET_WM_ACTION_MAXIMIZE_VERT p actions ActionMaxHoriz atoms pnum p atom _NET_WM_ACTION_MAXIMIZE_HORZ p actions ActionFullScreen atoms pnum p atom _NET_WM_ACTION_FULLSCREEN p actions ActionChangeDesktop atoms pnum p atom _NET_WM_ACTION_CHANGE_DESKTOP p actions ActionClose atoms pnum p atom _NET_WM_ACTION_CLOSE p properties WMFrameExtents atoms pnum p atom _NET_FRAME_EXTENTS atoms pnum p atom _KDE_NET_WM_FRAME_STRUT p properties2 WM2FrameOverlap atoms pnum p atom _NET_WM_FRAME_OVERLAP p properties2 WM2KDETemporaryRules atoms pnum p atom _KDE_NET_WM_TEMPORARY_RULES p properties2 WM2FullPlacement atoms pnum p atom _NET_WM_FULL_PLACEMENT p properties2 WM2Activities atoms pnum p atom _KDE_NET_WM_ACTIVITIES p properties2 WM2BlockCompositing atoms pnum p atom _KDE_NET_WM_BLOCK_COMPOSITING atoms pnum p atom _NET_WM_BYPASS_COMPOSITOR p properties2 WM2KDEShadow atoms pnum p atom _KDE_NET_WM_SHADOW p properties2 WM2OpaqueRegion atoms pnum p atom _NET_WM_OPAQUE_REGION xcb_change_property p conn XCB_PROP_MODE_REPLACE p root p atom _NET_SUPPORTED XCB_ATOM_ATOM pnum atoms xcb_change_property p conn XCB_PROP_MODE_REPLACE p root p atom _NET_SUPPORTING_WM_CHECK XCB_ATOM_WINDOW p supportwindow fprintf stderr p supportwindow p supportwindow p name p supportwindow xcb_change_property p conn XCB_PROP_MODE_REPLACE p supportwindow p atom _NET_SUPPORTING_WM_CHECK XCB_ATOM_WINDOW p supportwindow xcb_change_property p conn XCB_PROP_MODE_REPLACE p supportwindow p atom _NET_WM_NAME p atom UTF8_STRING strlen p name p name NETRootInfo::updateSupportedProperties xcb_atom_t atom atom p atom _NET_SUPPORTED p properties Supported atom p atom _NET_SUPPORTING_WM_CHECK p properties SupportingWMCheck atom p atom _NET_CLIENT_LIST p properties ClientList atom p atom _NET_CLIENT_LIST_STACKING p properties ClientListStacking atom p atom _NET_NUMBER_OF_DESKTOPS p properties NumberOfDesktops atom p atom _NET_DESKTOP_GEOMETRY p properties DesktopGeometry atom p atom _NET_DESKTOP_VIEWPORT p properties DesktopViewport atom p atom _NET_CURRENT_DESKTOP p properties CurrentDesktop atom p atom _NET_DESKTOP_NAMES p properties DesktopNames atom p atom _NET_ACTIVE_WINDOW p properties ActiveWindow atom p atom _NET_WORKAREA p properties WorkArea atom p atom _NET_VIRTUAL_ROOTS p properties VirtualRoots atom p atom _NET_DESKTOP_LAYOUT p properties2 WM2DesktopLayout atom p atom _NET_CLOSE_WINDOW p properties CloseWindow atom p atom _NET_RESTACK_WINDOW p properties2 WM2RestackWindow atom p atom _NET_SHOWING_DESKTOP p properties2 WM2ShowingDesktop atom p atom _NET_WM_MOVERESIZE p properties WMMoveResize atom p atom _NET_MOVERESIZE_WINDOW p properties2 WM2MoveResizeWindow atom p atom _NET_WM_NAME p properties WMName atom p atom _NET_WM_VISIBLE_NAME p properties WMVisibleName atom p atom _NET_WM_ICON_NAME p properties WMIconName atom p atom _NET_WM_VISIBLE_ICON_NAME p properties WMVisibleIconName atom p atom _NET_WM_DESKTOP p properties WMDesktop atom p atom _NET_WM_WINDOW_TYPE p properties WMWindowType atom p atom _NET_WM_WINDOW_TYPE_NORMAL p windowTypes NormalMask atom p atom _NET_WM_WINDOW_TYPE_DESKTOP p windowTypes DesktopMask atom p atom _NET_WM_WINDOW_TYPE_DOCK p windowTypes DockMask atom p atom _NET_WM_WINDOW_TYPE_TOOLBAR p windowTypes ToolbarMask atom p atom _NET_WM_WINDOW_TYPE_MENU p windowTypes MenuMask atom p atom _NET_WM_WINDOW_TYPE_DIALOG p windowTypes DialogMask atom p atom _NET_WM_WINDOW_TYPE_UTILITY p windowTypes UtilityMask atom p atom _NET_WM_WINDOW_TYPE_SPLASH p windowTypes SplashMask atom p atom _NET_WM_WINDOW_TYPE_DROPDOWN_MENU p windowTypes DropdownMenuMask atom p atom _NET_WM_WINDOW_TYPE_POPUP_MENU p windowTypes PopupMenuMask atom p atom _NET_WM_WINDOW_TYPE_TOOLTIP p windowTypes TooltipMask atom p atom _NET_WM_WINDOW_TYPE_NOTIFICATION p windowTypes NotificationMask atom p atom _NET_WM_WINDOW_TYPE_COMBOBOX p windowTypes ComboBoxMask atom p atom _NET_WM_WINDOW_TYPE_DND p windowTypes DNDIconMask atom p atom _KDE_NET_WM_WINDOW_TYPE_OVERRIDE p windowTypes OverrideMask atom p atom _KDE_NET_WM_WINDOW_TYPE_TOPMENU p windowTypes TopMenuMask atom p atom _KDE_NET_WM_WINDOW_TYPE_ON_SCREEN_DISPLAY p windowTypes OnScreenDisplayMask atom p atom _NET_WM_STATE p properties WMState atom p atom _NET_WM_STATE_MODAL p states Modal atom p atom _NET_WM_STATE_STICKY p states Sticky atom p atom _NET_WM_STATE_MAXIMIZED_VERT p states MaxVert atom p atom _NET_WM_STATE_MAXIMIZED_HORZ p states MaxHoriz atom p atom _NET_WM_STATE_SHADED p states Shaded atom p atom _NET_WM_STATE_SKIP_TASKBAR p states SkipTaskbar atom p atom _NET_WM_STATE_SKIP_PAGER p states SkipPager atom p atom _NET_WM_STATE_HIDDEN p states Hidden atom p atom _NET_WM_STATE_FULLSCREEN p states FullScreen atom p atom _NET_WM_STATE_ABOVE p states KeepAbove atom p atom _NET_WM_STATE_BELOW p states KeepBelow atom p atom _NET_WM_STATE_DEMANDS_ATTENTION p states DemandsAttention atom p atom _NET_WM_STATE_STAYS_ON_TOP p states StaysOnTop atom p atom _NET_WM_STRUT p properties WMStrut atom p atom _NET_WM_STRUT_PARTIAL p properties2 WM2ExtendedStrut atom p atom _NET_WM_ICON_GEOMETRY p properties WMIconGeometry atom p atom _NET_WM_ICON p properties WMIcon atom p atom _NET_WM_PID p properties WMPid atom p atom _NET_WM_HANDLED_ICONS p properties WMHandledIcons atom p atom _NET_WM_PING p properties WMPing atom p atom _NET_WM_USER_TIME p properties2 WM2UserTime atom p atom _NET_STARTUP_ID p properties2 WM2StartupId atom p atom _NET_WM_WINDOW_OPACITY p properties2 WM2Opacity atom p atom _NET_WM_FULLSCREEN_MONITORS p properties2 WM2FullscreenMonitors atom p atom _NET_WM_ALLOWED_ACTIONS p properties2 WM2AllowedActions atom p atom _NET_WM_ACTION_MOVE p actions ActionMove atom p atom _NET_WM_ACTION_RESIZE p actions ActionResize atom p atom _NET_WM_ACTION_MINIMIZE p actions ActionMinimize atom p atom _NET_WM_ACTION_SHADE p actions ActionShade atom p atom _NET_WM_ACTION_STICK p actions ActionStick atom p atom _NET_WM_ACTION_MAXIMIZE_VERT p actions ActionMaxVert atom p atom _NET_WM_ACTION_MAXIMIZE_HORZ p actions ActionMaxHoriz atom p atom _NET_WM_ACTION_FULLSCREEN p actions ActionFullScreen atom p atom _NET_WM_ACTION_CHANGE_DESKTOP p actions ActionChangeDesktop atom p atom _NET_WM_ACTION_CLOSE p actions ActionClose atom p atom _NET_FRAME_EXTENTS p properties WMFrameExtents atom p atom _KDE_NET_WM_FRAME_STRUT p properties WMFrameExtents atom p atom _NET_WM_FRAME_OVERLAP p properties2 WM2FrameOverlap atom p atom _KDE_NET_WM_TEMPORARY_RULES p properties2 WM2KDETemporaryRules atom p atom _NET_WM_FULL_PLACEMENT p properties2 WM2FullPlacement atom p atom _KDE_NET_WM_ACTIVITIES p properties2 WM2Activities atom p atom _KDE_NET_WM_BLOCK_COMPOSITING atom p atom _NET_WM_BYPASS_COMPOSITOR p properties2 WM2BlockCompositing atom p atom _KDE_NET_WM_SHADOW p properties2 WM2KDEShadow atom p atom _NET_WM_OPAQUE_REGION p properties2 WM2OpaqueRegion</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l01438</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setActiveWindow xcb_window_t window setActiveWindow window FromUnknown QX11Info::appUserTime XCB_WINDOW_NONE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l01443</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setActiveWindow xcb_window_t window NET::RequestSource src xcb_timestamp_t timestamp xcb_window_t active_window fprintf stderr window p role WindowManager p role WindowManager p active window xcb_change_property p conn XCB_PROP_MODE_REPLACE p root p atom _NET_ACTIVE_WINDOW XCB_ATOM_WINDOW p active uint32_t data src timestamp active_window send_client_message p conn netwm_sendevent_mask p root window p atom _NET_ACTIVE_WINDOW data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l01466</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setWorkArea desktop NETRect workarea fprintf stderr desktop workarea pos x workarea pos y workarea size width workarea size height p role WindowManager p role WindowManager desktop p workarea desktop workarea uint32_t wa uint32_t p number_of_desktops i o i o i p number_of_desktops i wa o p workarea i pos x wa o p workarea i pos y wa o p workarea i size width wa o p workarea i size height xcb_change_property p conn XCB_PROP_MODE_REPLACE p root p atom _NET_WORKAREA XCB_ATOM_CARDINAL p number_of_desktops wa wa</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l01496</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setVirtualRoots xcb_window_t windows count p role WindowManager p virtual_roots_count count p virtual_roots p virtual_roots nwindup windows count fprintf stderr p virtual_roots_count xcb_change_property p conn XCB_PROP_MODE_REPLACE p root p atom _NET_VIRTUAL_ROOTS XCB_ATOM_WINDOW p virtual_roots_count windows</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l01516</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setDesktopLayout NET::Orientation orientation columns rows NET::DesktopLayoutCorner corner p desktop_layout_orientation orientation p desktop_layout_columns columns p desktop_layout_rows rows p desktop_layout_corner corner fprintf stderr orientation columns rows corner uint32_t data data orientation data columns data rows data corner xcb_change_property p conn XCB_PROP_MODE_REPLACE p root p atom _NET_DESKTOP_LAYOUT XCB_ATOM_CARDINAL data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l01539</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setShowingDesktop showing p role WindowManager uint32_t d p showing_desktop showing xcb_change_property p conn XCB_PROP_MODE_REPLACE p root p atom _NET_SHOWING_DESKTOP XCB_ATOM_CARDINAL d uint32_t data uint32_t showing send_client_message p conn netwm_sendevent_mask p root p root p atom _NET_SHOWING_DESKTOP data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l01554</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::showingDesktop p showing_desktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l01559</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::closeWindowRequest xcb_window_t window fprintf stderr window uint32_t data send_client_message p conn netwm_sendevent_mask p root window p atom _NET_CLOSE_WINDOW data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l01570</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::moveResizeRequest xcb_window_t window x_root y_root Direction direction fprintf stderr window x_root y_root direction uint32_t data uint32_t x_root uint32_t y_root uint32_t direction send_client_message p conn netwm_sendevent_mask p root window p atom _NET_WM_MOVERESIZE data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l01586</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::moveResizeWindowRequest xcb_window_t window flags x y width height fprintf stderr window flags x y width height uint32_t data uint32_t flags uint32_t x uint32_t y uint32_t width uint32_t height send_client_message p conn netwm_sendevent_mask p root window p atom _NET_MOVERESIZE_WINDOW data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l01601</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::restackRequest xcb_window_t window RequestSource src xcb_window_t above detail xcb_timestamp_t timestamp fprintf stderr window above detail uint32_t data uint32_t src uint32_t above uint32_t detail uint32_t timestamp send_client_message p conn netwm_sendevent_mask p root window p atom _NET_RESTACK_WINDOW data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l01616</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::sendPing xcb_window_t window xcb_timestamp_t timestamp p role WindowManager fprintf stderr window timestamp uint32_t data p atom _NET_WM_PING timestamp window send_client_message p conn window window p atom WM_PROTOCOLS data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l01636</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo NETRootInfo::operator= NETRootInfo rootinfo fprintf stderr p rootinfo p refdec_nri p p ref p p rootinfo p p ref</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l01657</field>
    <field name="keywords"></field>
    <field name="text">NET::Properties NETRootInfo::event xcb_generic_event_t ev NET::Properties props event ev props props</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l01665</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::event xcb_generic_event_t ev properties properties_size props PROPERTIES_SIZE assert PROPERTIES_SIZE NET::Properties p NET::Properties2 p2 event ev p p2 props PROTOCOLS p props PROTOCOLS2 p2 properties_size PROPERTIES_SIZE properties_size PROPERTIES_SIZE i i properties_size i properties i props i</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l01686</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::event xcb_generic_event_t event NET::Properties properties NET::Properties2 properties2 NET::Properties dirty NET::Properties2 dirty2 do_update uint8_t eventType response_type p role WindowManager eventType XCB_CLIENT_MESSAGE reinterpret_cast&lt;xcb_client_message_event_t *&gt; event format xcb_client_message_event_t message xcb_client_message_event_t event fprintf stderr message type p atom _NET_NUMBER_OF_DESKTOPS dirty NumberOfDesktops fprintf stderr message data data32 changeNumberOfDesktops message data data32 message type p atom _NET_DESKTOP_GEOMETRY dirty DesktopGeometry NETSize sz sz width message data data32 sz height message data data32 fprintf stderr sz width sz height changeDesktopGeometry sz message type p atom _NET_DESKTOP_VIEWPORT dirty DesktopViewport NETPoint pt pt x message data data32 pt y message data data32 fprintf stderr p current_desktop pt x pt y changeDesktopViewport p current_desktop pt message type p atom _NET_CURRENT_DESKTOP dirty CurrentDesktop fprintf stderr message data data32 changeCurrentDesktop message data data32 message type p atom _NET_ACTIVE_WINDOW dirty ActiveWindow fprintf stderr message window RequestSource src FromUnknown xcb_timestamp_t timestamp XCB_TIME_CURRENT_TIME xcb_window_t active_window XCB_WINDOW_NONE message data data32 FromUnknown message data data32 FromTool src RequestSource message data data32 timestamp message data data32 active_window message data data32 changeActiveWindow message window src timestamp active_window message type p atom _NET_WM_MOVERESIZE fprintf stderr message window message data data32 message data data32 message data data32 moveResize message window message data data32 message data data32 message data data32 message type p atom _NET_MOVERESIZE_WINDOW fprintf stderr message window message data data32 message data data32 message data data32 message data data32 message data data32 moveResizeWindow message window message data data32 message data data32 message data data32 message data data32 message data data32 message type p atom _NET_CLOSE_WINDOW fprintf stderr message window closeWindow message window message type p atom _NET_RESTACK_WINDOW fprintf stderr message window RequestSource src FromUnknown xcb_timestamp_t timestamp XCB_TIME_CURRENT_TIME message data data32 FromUnknown message data data32 FromTool src RequestSource message data data32 timestamp message data data32 restackWindow message window src message data data32 message data data32 timestamp message type p atom WM_PROTOCOLS xcb_atom_t message data data32 p atom _NET_WM_PING dirty WMPing fprintf stderr message window message data data32 gotPing message data data32 message data data32 message type p atom _NET_SHOWING_DESKTOP dirty2 WM2ShowingDesktop fprintf stderr message data data32 changeShowingDesktop message data data32 eventType XCB_PROPERTY_NOTIFY fprintf stderr xcb_property_notify_event_t pe xcb_property_notify_event_t event pe atom p atom _NET_CLIENT_LIST dirty ClientList pe atom p atom _NET_CLIENT_LIST_STACKING dirty ClientListStacking pe atom p atom _NET_DESKTOP_NAMES dirty DesktopNames pe atom p atom _NET_WORKAREA dirty WorkArea pe atom p atom _NET_NUMBER_OF_DESKTOPS dirty NumberOfDesktops pe atom p atom _NET_DESKTOP_GEOMETRY dirty DesktopGeometry pe atom p atom _NET_DESKTOP_VIEWPORT dirty DesktopViewport pe atom p atom _NET_CURRENT_DESKTOP dirty CurrentDesktop pe atom p atom _NET_ACTIVE_WINDOW dirty ActiveWindow pe atom p atom _NET_SHOWING_DESKTOP dirty2 WM2ShowingDesktop pe atom p atom _NET_SUPPORTED dirty Supported pe atom p atom _NET_SUPPORTING_WM_CHECK dirty SupportingWMCheck pe atom p atom _NET_VIRTUAL_ROOTS dirty VirtualRoots pe atom p atom _NET_DESKTOP_LAYOUT dirty2 WM2DesktopLayout do_update do_update update dirty dirty2 fprintf stderr dirty dirty2 properties properties dirty properties2 properties2 dirty2 NETRootInfo::update NET::Properties properties NET::Properties2 properties2 NET::Properties dirty properties p clientProperties NET::Properties2 dirty2 properties2 p clientProperties2 xcb_get_property_cookie_t cookies xcb_get_property_cookie_t wm_name_cookie c dirty Supported cookies c xcb_get_property p conn p root p atom _NET_SUPPORTED XCB_ATOM_ATOM MAX_PROP_SIZE dirty ClientList cookies c xcb_get_property p conn p root p atom _NET_CLIENT_LIST XCB_ATOM_WINDOW MAX_PROP_SIZE dirty ClientListStacking cookies c xcb_get_property p conn p root p atom _NET_CLIENT_LIST_STACKING XCB_ATOM_WINDOW MAX_PROP_SIZE dirty NumberOfDesktops cookies c xcb_get_property p conn p root p atom _NET_NUMBER_OF_DESKTOPS XCB_ATOM_CARDINAL dirty DesktopGeometry cookies c xcb_get_property p conn p root p atom _NET_DESKTOP_GEOMETRY XCB_ATOM_CARDINAL dirty DesktopViewport cookies c xcb_get_property p conn p root p atom _NET_DESKTOP_VIEWPORT XCB_ATOM_CARDINAL MAX_PROP_SIZE dirty CurrentDesktop cookies c xcb_get_property p conn p root p atom _NET_CURRENT_DESKTOP XCB_ATOM_CARDINAL dirty DesktopNames cookies c xcb_get_property p conn p root p atom _NET_DESKTOP_NAMES p atom UTF8_STRING MAX_PROP_SIZE dirty ActiveWindow cookies c xcb_get_property p conn p root p atom _NET_ACTIVE_WINDOW XCB_ATOM_WINDOW dirty WorkArea cookies c xcb_get_property p conn p root p atom _NET_WORKAREA XCB_ATOM_CARDINAL MAX_PROP_SIZE dirty SupportingWMCheck cookies c xcb_get_property p conn p root p atom _NET_SUPPORTING_WM_CHECK XCB_ATOM_WINDOW dirty VirtualRoots cookies c xcb_get_property p conn p root p atom _NET_VIRTUAL_ROOTS XCB_ATOM_WINDOW dirty2 WM2DesktopLayout cookies c xcb_get_property p conn p root p atom _NET_DESKTOP_LAYOUT XCB_ATOM_CARDINAL MAX_PROP_SIZE dirty2 WM2ShowingDesktop cookies c xcb_get_property p conn p root p atom _NET_SHOWING_DESKTOP XCB_ATOM_CARDINAL c dirty Supported p properties p properties2 p windowTypes p states p actions QVector&lt;xcb_atom_t&gt; atoms get_array_reply&lt;xcb_atom_t&gt; p conn cookies c XCB_ATOM_ATOM Q_FOREACH xcb_atom_t atom atoms updateSupportedProperties atom dirty ClientList QList&lt;xcb_window_t&gt; clientsToRemove QList&lt;xcb_window_t&gt; clientsToAdd QVector&lt;xcb_window_t&gt; clients get_array_reply&lt;xcb_window_t&gt; p conn cookies c XCB_ATOM_WINDOW qSort clients p clients p role Client new_index old_index old_count p clients_count new_count clients count old_index old_count new_index new_count old_index old_count clientsToAdd append clients new_index new_index new_count clientsToRemove append p clients old_index p clients old_index clients new_index clientsToRemove append p clients old_index clients new_index p clients old_index clientsToAdd append clients new_index new_index old_index p clients p clients fprintf stderr i i clients count i clientsToAdd append clients i clients count p clients_count clients count p clients xcb_window_t clients count i i clients count i p clients i clients at i fprintf stderr p clients_count i i clientsToRemove size i removeClient clientsToRemove at i i i clientsToAdd size i addClient clientsToAdd at i dirty ClientListStacking p stacking_count p stacking p stacking NULL QVector&lt;xcb_window_t&gt; wins get_array_reply&lt;xcb_window_t&gt; p conn cookies c XCB_ATOM_WINDOW wins count p stacking_count wins count p stacking xcb_window_t wins count i i wins count i p stacking i wins at i fprintf stderr p stacking_count dirty NumberOfDesktops p number_of_desktops get_value_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL fprintf stderr p number_of_desktops dirty DesktopGeometry p geometry p rootSize QVector&lt;uint32_t&gt; data get_array_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL data count p geometry width data at p geometry height data at fprintf stderr dirty DesktopViewport i i p viewport size i p viewport i x p viewport i y QVector&lt;uint32_t&gt; data get_array_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL data count n data count d i d n d p viewport d x data i p viewport d y data i fprintf stderr p viewport size data count fprintf stderr dirty CurrentDesktop p current_desktop get_value_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL fprintf stderr p current_desktop dirty DesktopNames i i p desktop_names size i p desktop_names i p desktop_names reset QList&lt;QByteArray&gt; names get_stringlist_reply p conn cookies c p atom UTF8_STRING i i names count i p desktop_names i nstrndup names i constData names i length fprintf stderr p desktop_names size dirty ActiveWindow p active get_value_reply&lt;xcb_window_t&gt; p conn cookies c XCB_ATOM_WINDOW fprintf stderr p active dirty WorkArea p workarea reset QVector&lt;uint32_t&gt; data get_array_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL data count p number_of_desktops i j i p number_of_desktops i p workarea i pos x data j p workarea i pos y data j p workarea i size width data j p workarea i size height data j fprintf stderr p workarea size dirty SupportingWMCheck p name p name NULL p supportwindow get_value_reply&lt;xcb_window_t&gt; p conn cookies c XCB_ATOM_WINDOW p supportwindow wm_name_cookie xcb_get_property p conn p supportwindow p atom _NET_WM_NAME p atom UTF8_STRING MAX_PROP_SIZE dirty VirtualRoots p virtual_roots_count p virtual_roots p virtual_roots NULL QVector&lt;xcb_window_t&gt; wins get_array_reply&lt;xcb_window_t&gt; p conn cookies c XCB_ATOM_CARDINAL wins count p virtual_roots_count wins count p virtual_roots xcb_window_t wins count i i wins count i p virtual_roots i wins at i fprintf stderr p virtual_roots_count dirty2 WM2DesktopLayout p desktop_layout_orientation OrientationHorizontal p desktop_layout_corner DesktopLayoutCornerTopLeft p desktop_layout_columns p desktop_layout_rows QVector&lt;uint32_t&gt; data get_array_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL data count data p desktop_layout_corner NET::DesktopLayoutCorner data data count data p desktop_layout_orientation NET::Orientation data p desktop_layout_columns data p desktop_layout_rows data fprintf stderr p desktop_layout_orientation p desktop_layout_columns p desktop_layout_rows p desktop_layout_corner dirty2 WM2ShowingDesktop uint32_t val get_value_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL p showing_desktop bool val fprintf stderr p showing_desktop dirty SupportingWMCheck p supportwindow QByteArray ba get_string_reply p conn wm_name_cookie p atom UTF8_STRING ba length p name nstrndup ba constData ba length fprintf stderr p name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02264</field>
    <field name="keywords"></field>
    <field name="text">xcb_connection_t NETRootInfo::xcbConnection p conn</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02269</field>
    <field name="keywords"></field>
    <field name="text">xcb_window_t NETRootInfo::rootWindow p root</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02274</field>
    <field name="keywords"></field>
    <field name="text">xcb_window_t NETRootInfo::supportWindow p supportwindow</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02279</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::wmName p name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02284</field>
    <field name="keywords"></field>
    <field name="text">NET::Properties NETRootInfo::supportedProperties p properties</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02289</field>
    <field name="keywords"></field>
    <field name="text">NET::Properties2 NETRootInfo::supportedProperties2 p properties2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02294</field>
    <field name="keywords"></field>
    <field name="text">NET::States NETRootInfo::supportedStates p states</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02299</field>
    <field name="keywords"></field>
    <field name="text">NET::WindowTypes NETRootInfo::supportedWindowTypes p windowTypes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02304</field>
    <field name="keywords"></field>
    <field name="text">NET::Actions NETRootInfo::supportedActions p actions</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02309</field>
    <field name="keywords"></field>
    <field name="text">NET::Properties NETRootInfo::passedProperties p role WindowManager p properties p clientProperties</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02316</field>
    <field name="keywords"></field>
    <field name="text">NET::Properties2 NETRootInfo::passedProperties2 p role WindowManager p properties2 p clientProperties2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02323</field>
    <field name="keywords"></field>
    <field name="text">NET::States NETRootInfo::passedStates p role WindowManager p states NET::States</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02330</field>
    <field name="keywords"></field>
    <field name="text">NET::WindowTypes NETRootInfo::passedWindowTypes p role WindowManager p windowTypes NET::WindowTypes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02337</field>
    <field name="keywords"></field>
    <field name="text">NET::Actions NETRootInfo::passedActions p role WindowManager p actions NET::Actions</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02344</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setSupported NET::Property property on p role WindowManager on isSupported property p properties property setSupported on isSupported property p properties property setSupported</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02359</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setSupported NET::Property2 property on p role WindowManager on isSupported property p properties2 property setSupported on isSupported property p properties2 property setSupported</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02374</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setSupported NET::WindowTypeMask property on p role WindowManager on isSupported property p windowTypes property setSupported on isSupported property p windowTypes property setSupported</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02389</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setSupported NET::State property on p role WindowManager on isSupported property p states property setSupported on isSupported property p states property setSupported</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02404</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::setSupported NET::Action property on p role WindowManager on isSupported property p actions property setSupported on isSupported property p actions property setSupported</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02419</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::isSupported NET::Property property p properties property</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02424</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::isSupported NET::Property2 property p properties2 property</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02429</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::isSupported NET::WindowTypeMask type p windowTypes type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02434</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::isSupported NET::State state p states state</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02439</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::isSupported NET::Action action p actions action</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02444</field>
    <field name="keywords"></field>
    <field name="text">xcb_window_t NETRootInfo::clientList p clients</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02449</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::clientListCount p clients_count</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02454</field>
    <field name="keywords"></field>
    <field name="text">xcb_window_t NETRootInfo::clientListStacking p stacking</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02459</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::clientListStackingCount p stacking_count</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02464</field>
    <field name="keywords"></field>
    <field name="text">NETSize NETRootInfo::desktopGeometry p geometry width p geometry p rootSize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02469</field>
    <field name="keywords"></field>
    <field name="text">NETPoint NETRootInfo::desktopViewport desktop desktop NETPoint pt pt p viewport desktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02479</field>
    <field name="keywords"></field>
    <field name="text">NETRect NETRootInfo::workArea desktop desktop NETRect rt rt p workarea desktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02489</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::desktopName desktop desktop p desktop_names desktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02498</field>
    <field name="keywords"></field>
    <field name="text">xcb_window_t NETRootInfo::virtualRoots p virtual_roots</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02503</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::virtualRootsCount p virtual_roots_count</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02508</field>
    <field name="keywords"></field>
    <field name="text">NET::Orientation NETRootInfo::desktopLayoutOrientation p desktop_layout_orientation</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02513</field>
    <field name="keywords"></field>
    <field name="text">QSize NETRootInfo::desktopLayoutColumnsRows QSize p desktop_layout_columns p desktop_layout_rows</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02518</field>
    <field name="keywords"></field>
    <field name="text">NET::DesktopLayoutCorner NETRootInfo::desktopLayoutCorner p desktop_layout_corner</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02523</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::numberOfDesktops ignore_viewport ignore_viewport KWindowSystem::mapViewport KWindowSystem::numberOfDesktops p number_of_desktops p number_of_desktops</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02531</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::currentDesktop ignore_viewport ignore_viewport KWindowSystem::mapViewport KWindowSystem::currentDesktop p current_desktop p current_desktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02539</field>
    <field name="keywords"></field>
    <field name="text">xcb_window_t NETRootInfo::activeWindow p active NETWinInfo::OnAllDesktops NET::OnAllDesktops</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02548</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::NETWinInfo xcb_connection_t connection xcb_window_t window xcb_window_t rootWindow NET::Properties properties NET::Properties2 properties2 Role role fprintf stderr role WindowManager p NETWinInfoPrivate p ref p atoms atomsForConnection connection p conn connection p window window p root rootWindow p mapping_state Withdrawn p mapping_state_dirty p state p types Unknown p name p visible_name p icon_name p visible_icon_name p desktop p pid p handled_icons p user_time U p startup_id NULL p transient_for XCB_NONE p opacity U p window_group XCB_NONE p icon_pixmap XCB_PIXMAP_NONE p icon_mask XCB_PIXMAP_NONE p allowed_actions p has_net_support p class_class p class_name p window_role p client_machine p icon_sizes NULL p activities p blockCompositing p urgency p input p initialMappingState NET::Withdrawn p protocols NET::NoProtocol p properties properties p properties2 properties2 p icon_count p role role update p properties p properties2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02611</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::NETWinInfo xcb_connection_t connection xcb_window_t window xcb_window_t rootWindow NET::Properties properties Role role fprintf stderr role WindowManager p NETWinInfoPrivate p ref p atoms atomsForConnection connection p conn connection p window window p root rootWindow p mapping_state Withdrawn p mapping_state_dirty p state p types Unknown p name p visible_name p icon_name p visible_icon_name p desktop p pid p handled_icons p user_time U p startup_id NULL p transient_for XCB_NONE p opacity U p window_group XCB_NONE p icon_pixmap XCB_PIXMAP_NONE p icon_mask XCB_PIXMAP_NONE p allowed_actions p has_net_support p class_class p class_name p window_role p client_machine p icon_sizes NULL p activities p blockCompositing p urgency p input p initialMappingState NET::Withdrawn p protocols NET::NoProtocol p properties properties p properties2 p icon_count p role role update p properties</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02673</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::NETWinInfo NETWinInfo wininfo p wininfo p p ref</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02679</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::~NETWinInfo refdec_nwi p p ref p</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02690</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo NETWinInfo::operator= NETWinInfo wininfo fprintf stderr p wininfo p refdec_nwi p p ref p p wininfo p p ref</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02711</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setIcon NETIcon icon replace setIconInternal p icons p icon_count p atom _NET_WM_ICON icon replace NETWinInfo::setIconInternal NETRArray&lt;NETIcon&gt; icons icon_count xcb_atom_t property NETIcon icon replace p role Client replace i i icons size i icons i data icons i data icons i size width icons i size height icon_count icons icon_count icon icon_count NETIcon ni icons icon_count sz ni size width ni size height uint32_t d uint32_t sz ni data d memcpy d icon data sz uint32_t proplen i i icon_count i proplen icons i size width icons i size height uint32_t prop uint32_t proplen pprop prop i i icon_count i pprop icons i size width pprop icons i size height sz icons i size width icons i size height uint32_t d32 uint32_t icons i data j j sz j pprop d32 xcb_change_property p conn XCB_PROP_MODE_REPLACE p window property XCB_ATOM_CARDINAL proplen prop prop p icon_sizes p icon_sizes NULL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02774</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setIconGeometry NETRect geometry p role Client p icon_geom geometry geometry size width xcb_delete_property p conn p window p atom _NET_WM_ICON_GEOMETRY uint32_t data data geometry pos x data geometry pos y data geometry size width data geometry size height xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_ICON_GEOMETRY XCB_ATOM_CARDINAL data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02796</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setExtendedStrut NETExtendedStrut extended_strut p role Client p extended_strut extended_strut uint32_t data data extended_strut left_width data extended_strut right_width data extended_strut top_width data extended_strut bottom_width data extended_strut left_start data extended_strut left_end data extended_strut right_start data extended_strut right_end data extended_strut top_start data extended_strut top_end data extended_strut bottom_start data extended_strut bottom_end xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_STRUT_PARTIAL XCB_ATOM_CARDINAL data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02822</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setStrut NETStrut strut p role Client p strut strut uint32_t data data strut left data strut right data strut top data strut bottom xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_STRUT XCB_ATOM_CARDINAL data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02840</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setFullscreenMonitors NETFullscreenMonitors topology p role Client p fullscreen_monitors topology uint32_t data data topology top data topology bottom data topology left data topology right xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_FULLSCREEN_MONITORS XCB_ATOM_CARDINAL data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l02858</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setState NET::States state NET::States mask p mapping_state_dirty updateWMState p properties WMState p properties WMState update WMState p properties WMState p role Client p mapping_state Withdrawn fprintf stderr state mask xcb_client_message_event_t event response_type XCB_CLIENT_MESSAGE format sequence window p window type p atom _NET_WM_STATE data data32 data data32 mask Modal p state Modal state Modal data data32 state Modal data data32 p atom _NET_WM_STATE_MODAL data data32 l xcb_send_event p conn p root netwm_sendevent_mask event mask Sticky p state Sticky state Sticky data data32 state Sticky data data32 p atom _NET_WM_STATE_STICKY data data32 l xcb_send_event p conn p root netwm_sendevent_mask event mask Max p state mask Max state Max NET::States wishstate p state mask state mask wishstate MaxHoriz p state MaxHoriz wishstate MaxVert p state MaxVert wishstate Max Max data data32 data data32 p atom _NET_WM_STATE_MAXIMIZED_HORZ data data32 p atom _NET_WM_STATE_MAXIMIZED_VERT xcb_send_event p conn p root netwm_sendevent_mask event wishstate Max data data32 data data32 p atom _NET_WM_STATE_MAXIMIZED_HORZ data data32 p atom _NET_WM_STATE_MAXIMIZED_VERT xcb_send_event p conn p root netwm_sendevent_mask event data data32 wishstate MaxHoriz data data32 p atom _NET_WM_STATE_MAXIMIZED_HORZ data data32 xcb_send_event p conn p root netwm_sendevent_mask event data data32 wishstate MaxVert data data32 p atom _NET_WM_STATE_MAXIMIZED_VERT data data32 xcb_send_event p conn p root netwm_sendevent_mask event wishstate MaxVert p state MaxVert data data32 wishstate MaxVert data data32 p atom _NET_WM_STATE_MAXIMIZED_VERT data data32 xcb_send_event p conn p root netwm_sendevent_mask event wishstate MaxHoriz p state MaxHoriz data data32 wishstate MaxHoriz data data32 p atom _NET_WM_STATE_MAXIMIZED_HORZ data data32 xcb_send_event p conn p root netwm_sendevent_mask event mask Shaded p state Shaded state Shaded data data32 state Shaded data data32 p atom _NET_WM_STATE_SHADED data data32 l xcb_send_event p conn p root netwm_sendevent_mask event mask SkipTaskbar p state SkipTaskbar state SkipTaskbar data data32 state SkipTaskbar data data32 p atom _NET_WM_STATE_SKIP_TASKBAR data data32 l xcb_send_event p conn p root netwm_sendevent_mask event mask SkipPager p state SkipPager state SkipPager data data32 state SkipPager data data32 p atom _NET_WM_STATE_SKIP_PAGER data data32 l xcb_send_event p conn p root netwm_sendevent_mask event mask Hidden p state Hidden state Hidden data data32 state Hidden data data32 p atom _NET_WM_STATE_HIDDEN data data32 l xcb_send_event p conn p root netwm_sendevent_mask event mask FullScreen p state FullScreen state FullScreen data data32 state FullScreen data data32 p atom _NET_WM_STATE_FULLSCREEN data data32 l xcb_send_event p conn p root netwm_sendevent_mask event mask KeepAbove p state KeepAbove state KeepAbove data data32 state KeepAbove data data32 p atom _NET_WM_STATE_ABOVE data data32 l xcb_send_event p conn p root netwm_sendevent_mask event mask KeepBelow p state KeepBelow state KeepBelow data data32 state KeepBelow data data32 p atom _NET_WM_STATE_BELOW data data32 l xcb_send_event p conn p root netwm_sendevent_mask event mask StaysOnTop p state StaysOnTop state StaysOnTop data data32 state StaysOnTop data data32 p atom _NET_WM_STATE_STAYS_ON_TOP data data32 l xcb_send_event p conn p root netwm_sendevent_mask event mask DemandsAttention p state DemandsAttention state DemandsAttention data data32 state DemandsAttention data data32 p atom _NET_WM_STATE_DEMANDS_ATTENTION data data32 l xcb_send_event p conn p root netwm_sendevent_mask event p state mask p state state uint32_t data count p state Modal data count p atom _NET_WM_STATE_MODAL p state MaxVert data count p atom _NET_WM_STATE_MAXIMIZED_VERT p state MaxHoriz data count p atom _NET_WM_STATE_MAXIMIZED_HORZ p state Shaded data count p atom _NET_WM_STATE_SHADED p state Hidden data count p atom _NET_WM_STATE_HIDDEN p state FullScreen data count p atom _NET_WM_STATE_FULLSCREEN p state DemandsAttention data count p atom _NET_WM_STATE_DEMANDS_ATTENTION p state KeepAbove data count p atom _NET_WM_STATE_ABOVE p state KeepBelow data count p atom _NET_WM_STATE_BELOW p state StaysOnTop data count p atom _NET_WM_STATE_STAYS_ON_TOP p state Sticky data count p atom _NET_WM_STATE_STICKY p state SkipTaskbar data count p atom _NET_WM_STATE_SKIP_TASKBAR p state SkipPager data count p atom _NET_WM_STATE_SKIP_PAGER fprintf stderr count i i count i QByteArray ba get_atom_name p conn data i fprintf stderr data i ba constData xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_STATE XCB_ATOM_ATOM count data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03082</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setWindowType WindowType type p role Client len uint32_t data type Override data p atom _KDE_NET_WM_WINDOW_TYPE_OVERRIDE data p atom _NET_WM_WINDOW_TYPE_NORMAL len Dialog data p atom _NET_WM_WINDOW_TYPE_DIALOG data XCB_NONE len Menu data p atom _NET_WM_WINDOW_TYPE_MENU data XCB_NONE len TopMenu data p atom _KDE_NET_WM_WINDOW_TYPE_TOPMENU data p atom _NET_WM_WINDOW_TYPE_DOCK len Toolbar data p atom _NET_WM_WINDOW_TYPE_TOOLBAR data XCB_NONE len Dock data p atom _NET_WM_WINDOW_TYPE_DOCK data XCB_NONE len Desktop data p atom _NET_WM_WINDOW_TYPE_DESKTOP data XCB_NONE len Utility data p atom _NET_WM_WINDOW_TYPE_UTILITY data p atom _NET_WM_WINDOW_TYPE_DIALOG len Splash data p atom _NET_WM_WINDOW_TYPE_SPLASH data p atom _NET_WM_WINDOW_TYPE_DOCK len DropdownMenu data p atom _NET_WM_WINDOW_TYPE_DROPDOWN_MENU data p atom _NET_WM_WINDOW_TYPE_MENU len PopupMenu data p atom _NET_WM_WINDOW_TYPE_POPUP_MENU data p atom _NET_WM_WINDOW_TYPE_MENU len Tooltip data p atom _NET_WM_WINDOW_TYPE_TOOLTIP data XCB_NONE len Notification data p atom _NET_WM_WINDOW_TYPE_NOTIFICATION data p atom _NET_WM_WINDOW_TYPE_UTILITY len ComboBox data p atom _NET_WM_WINDOW_TYPE_COMBOBOX data XCB_NONE len DNDIcon data p atom _NET_WM_WINDOW_TYPE_DND data XCB_NONE len OnScreenDisplay data p atom _KDE_NET_WM_WINDOW_TYPE_ON_SCREEN_DISPLAY data p atom _NET_WM_WINDOW_TYPE_NOTIFICATION len Normal data p atom _NET_WM_WINDOW_TYPE_NORMAL data XCB_NONE len xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_WINDOW_TYPE XCB_ATOM_ATOM len data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03204</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setName name p role Client p name p name nstrdup name p name xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_NAME p atom UTF8_STRING strlen p name p name xcb_delete_property p conn p window p atom _NET_WM_NAME</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03221</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setVisibleName visibleName p role WindowManager p visible_name p visible_name nstrdup visibleName p visible_name xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_VISIBLE_NAME p atom UTF8_STRING strlen p visible_name p visible_name xcb_delete_property p conn p window p atom _NET_WM_VISIBLE_NAME</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03239</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setIconName iconName p role Client p icon_name p icon_name nstrdup iconName p icon_name xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_ICON_NAME p atom UTF8_STRING strlen p icon_name p icon_name xcb_delete_property p conn p window p atom _NET_WM_ICON_NAME</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03257</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setVisibleIconName visibleIconName p role WindowManager p visible_icon_name p visible_icon_name nstrdup visibleIconName p visible_icon_name xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_VISIBLE_ICON_NAME p atom UTF8_STRING strlen p visible_icon_name p visible_icon_name xcb_delete_property p conn p window p atom _NET_WM_VISIBLE_ICON_NAME</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03275</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setDesktop desktop ignore_viewport p mapping_state_dirty updateWMState p role Client p mapping_state Withdrawn desktop ignore_viewport KWindowSystem::mapViewport KWindowSystem::setOnDesktop p window desktop uint32_t data desktop OnAllDesktops desktop send_client_message p conn netwm_sendevent_mask p root p window p atom _NET_WM_DESKTOP data p desktop desktop desktop xcb_delete_property p conn p window p atom _NET_WM_DESKTOP uint32_t d desktop OnAllDesktops desktop xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_DESKTOP XCB_ATOM_CARDINAL d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03312</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setPid pid p role Client p pid pid uint32_t d pid xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_PID XCB_ATOM_CARDINAL d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03324</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setHandledIcons handled p role Client p handled_icons handled uint32_t d handled xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_HANDLED_ICONS XCB_ATOM_CARDINAL d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03336</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setStartupId p role Client p startup_id p startup_id nstrdup xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_STARTUP_ID p atom UTF8_STRING strlen p startup_id p startup_id</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03350</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setOpacity opacity p opacity opacity xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_WINDOW_OPACITY XCB_ATOM_CARDINAL p opacity</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03359</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setAllowedActions NET::Actions actions p role WindowManager uint32_t data count p allowed_actions actions p allowed_actions ActionMove data count p atom _NET_WM_ACTION_MOVE p allowed_actions ActionResize data count p atom _NET_WM_ACTION_RESIZE p allowed_actions ActionMinimize data count p atom _NET_WM_ACTION_MINIMIZE p allowed_actions ActionShade data count p atom _NET_WM_ACTION_SHADE p allowed_actions ActionStick data count p atom _NET_WM_ACTION_STICK p allowed_actions ActionMaxVert data count p atom _NET_WM_ACTION_MAXIMIZE_VERT p allowed_actions ActionMaxHoriz data count p atom _NET_WM_ACTION_MAXIMIZE_HORZ p allowed_actions ActionFullScreen data count p atom _NET_WM_ACTION_FULLSCREEN p allowed_actions ActionChangeDesktop data count p atom _NET_WM_ACTION_CHANGE_DESKTOP p allowed_actions ActionClose data count p atom _NET_WM_ACTION_CLOSE fprintf stderr count i i count i QByteArray ba get_atom_name p conn data i fprintf stderr data i ba constData xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_ALLOWED_ACTIONS XCB_ATOM_ATOM count data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03413</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setFrameExtents NETStrut strut p role WindowManager p frame_strut strut uint32_t d d strut left d strut right d strut top d strut bottom xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_FRAME_EXTENTS XCB_ATOM_CARDINAL d xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _KDE_NET_WM_FRAME_STRUT XCB_ATOM_CARDINAL d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03433</field>
    <field name="keywords"></field>
    <field name="text">NETStrut NETWinInfo::frameExtents p frame_strut</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03438</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setFrameOverlap NETStrut strut strut left strut top strut right strut bottom strut left qMax strut left strut top qMax strut top strut right qMax strut right strut bottom qMax strut bottom p frame_overlap strut uint32_t d d strut left d strut right d strut top d strut bottom xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_FRAME_OVERLAP XCB_ATOM_CARDINAL d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03459</field>
    <field name="keywords"></field>
    <field name="text">NETStrut NETWinInfo::frameOverlap p frame_overlap</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03464</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::kdeGeometry NETRect frame NETRect window p win_geom size width p win_geom size height xcb_get_geometry_cookie_t geometry_cookie xcb_get_geometry p conn p window xcb_translate_coordinates_cookie_t translate_cookie xcb_translate_coordinates p conn p window p root xcb_get_geometry_reply_t geometry xcb_get_geometry_reply p conn geometry_cookie xcb_translate_coordinates_reply_t translated xcb_translate_coordinates_reply p conn translate_cookie geometry translated p win_geom pos x translated dst_x p win_geom pos y translated dst_y p win_geom size width geometry width p win_geom size height geometry height geometry free geometry translated free translated window p win_geom frame pos x window pos x p frame_strut left frame pos y window pos y p frame_strut top frame size width window size width p frame_strut left p frame_strut right frame size height window size height p frame_strut top p frame_strut bottom</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03503</field>
    <field name="keywords"></field>
    <field name="text">NETIcon NETWinInfo::icon width height iconInternal p icons p icon_count width height</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03508</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::iconSizes p icon_sizes NULL p icon_sizes p icon_count i i p icon_count i p icon_sizes i p icons i size width p icon_sizes i p icons i size height p icon_sizes p icon_count p icon_sizes p icon_count p icon_sizes NETIcon NETWinInfo::iconInternal NETRArray&lt;NETIcon&gt; icons icon_count width height NETIcon result icon_count result size width result size height result data result result icons i i icons size i icons i size width result size width icons i size height result size height result icons i width height result i i icons size i icons i size width width icons i size width result size width icons i size height height icons i size height result size height result icons i result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03562</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setUserTime xcb_timestamp_t time p role Client p user_time time uint32_t d time xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_USER_TIME XCB_ATOM_CARDINAL d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03575</field>
    <field name="keywords"></field>
    <field name="text">NET::Properties NETWinInfo::event xcb_generic_event_t ev NET::Properties properties event ev properties properties</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03582</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::event xcb_generic_event_t event NET::Properties properties NET::Properties2 properties2 NET::Properties dirty NET::Properties2 dirty2 do_update uint8_t eventType response_type p role WindowManager eventType XCB_CLIENT_MESSAGE reinterpret_cast&lt;xcb_client_message_event_t *&gt; event format xcb_client_message_event_t message xcb_client_message_event_t event fprintf stderr message type p atom _NET_WM_STATE dirty WMState fprintf stderr i NET::States state mask i i i debug_txt XGetAtomName p display xcb_atom_t message data data32 i fprintf stderr message data data32 i debug_txt debug_txt XFree debug_txt xcb_atom_t message data data32 i p atom _NET_WM_STATE_MODAL mask Modal xcb_atom_t message data data32 i p atom _NET_WM_STATE_STICKY mask Sticky xcb_atom_t message data data32 i p atom _NET_WM_STATE_MAXIMIZED_VERT mask MaxVert xcb_atom_t message data data32 i p atom _NET_WM_STATE_MAXIMIZED_HORZ mask MaxHoriz xcb_atom_t message data data32 i p atom _NET_WM_STATE_SHADED mask Shaded xcb_atom_t message data data32 i p atom _NET_WM_STATE_SKIP_TASKBAR mask SkipTaskbar xcb_atom_t message data data32 i p atom _NET_WM_STATE_SKIP_PAGER mask SkipPager xcb_atom_t message data data32 i p atom _NET_WM_STATE_HIDDEN mask Hidden xcb_atom_t message data data32 i p atom _NET_WM_STATE_FULLSCREEN mask FullScreen xcb_atom_t message data data32 i p atom _NET_WM_STATE_ABOVE mask KeepAbove xcb_atom_t message data data32 i p atom _NET_WM_STATE_BELOW mask KeepBelow xcb_atom_t message data data32 i p atom _NET_WM_STATE_DEMANDS_ATTENTION mask DemandsAttention xcb_atom_t message data data32 i p atom _NET_WM_STATE_STAYS_ON_TOP mask StaysOnTop message data data32 state mask state p state mask mask fprintf stderr state mask changeState state mask message type p atom _NET_WM_DESKTOP dirty WMDesktop message data data32 OnAllDesktops changeDesktop OnAllDesktops changeDesktop message data data32 message type p atom _NET_WM_FULLSCREEN_MONITORS dirty2 WM2FullscreenMonitors NETFullscreenMonitors topology topology top message data data32 topology bottom message data data32 topology left message data data32 topology right message data data32 fprintf stderr message window message data data32 message data data32 message data data32 message data data32 changeFullscreenMonitors topology eventType XCB_PROPERTY_NOTIFY fprintf stderr xcb_property_notify_event_t pe xcb_property_notify_event_t event pe atom p atom _NET_WM_NAME dirty WMName pe atom p atom _NET_WM_VISIBLE_NAME dirty WMVisibleName pe atom p atom _NET_WM_DESKTOP dirty WMDesktop pe atom p atom _NET_WM_WINDOW_TYPE dirty WMWindowType pe atom p atom _NET_WM_STATE dirty WMState pe atom p atom _NET_WM_STRUT dirty WMStrut pe atom p atom _NET_WM_STRUT_PARTIAL dirty2 WM2ExtendedStrut pe atom p atom _NET_WM_ICON_GEOMETRY dirty WMIconGeometry pe atom p atom _NET_WM_ICON dirty WMIcon pe atom p atom _NET_WM_PID dirty WMPid pe atom p atom _NET_WM_HANDLED_ICONS dirty WMHandledIcons pe atom p atom _NET_STARTUP_ID dirty2 WM2StartupId pe atom p atom _NET_WM_WINDOW_OPACITY dirty2 WM2Opacity pe atom p atom _NET_WM_ALLOWED_ACTIONS dirty2 WM2AllowedActions pe atom p atom WM_STATE dirty XAWMState pe atom p atom _NET_FRAME_EXTENTS dirty WMFrameExtents pe atom p atom _KDE_NET_WM_FRAME_STRUT dirty WMFrameExtents pe atom p atom _NET_WM_FRAME_OVERLAP dirty2 WM2FrameOverlap pe atom p atom _NET_WM_ICON_NAME dirty WMIconName pe atom p atom _NET_WM_VISIBLE_ICON_NAME dirty WMVisibleIconName pe atom p atom _NET_WM_USER_TIME dirty2 WM2UserTime pe atom XCB_ATOM_WM_HINTS dirty2 WM2GroupLeader dirty2 WM2Urgency dirty2 WM2Input dirty2 WM2InitialMappingState dirty2 WM2IconPixmap pe atom XCB_ATOM_WM_TRANSIENT_FOR dirty2 WM2TransientFor pe atom XCB_ATOM_WM_CLASS dirty2 WM2WindowClass pe atom p atom WM_WINDOW_ROLE dirty2 WM2WindowRole pe atom XCB_ATOM_WM_CLIENT_MACHINE dirty2 WM2ClientMachine pe atom p atom _KDE_NET_WM_ACTIVITIES dirty2 WM2Activities pe atom p atom _KDE_NET_WM_BLOCK_COMPOSITING pe atom p atom _NET_WM_BYPASS_COMPOSITOR dirty2 WM2BlockCompositing pe atom p atom _KDE_NET_WM_SHADOW dirty2 WM2KDEShadow pe atom p atom WM_PROTOCOLS dirty2 WM2Protocols pe atom p atom _NET_WM_OPAQUE_REGION dirty2 WM2OpaqueRegion do_update eventType XCB_CONFIGURE_NOTIFY fprintf stderr dirty WMGeometry xcb_configure_notify_event_t configure xcb_configure_notify_event_t event p win_geom pos x configure x p win_geom pos y configure y p win_geom size width configure width p win_geom size height configure height do_update update dirty dirty2 properties properties dirty properties2 properties2 dirty2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l03809</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::event xcb_generic_event_t ev properties properties_size NET::Properties p NET::Properties2 p2 event ev p p2 props PROPERTIES_SIZE p p2 assert PROPERTIES_SIZE properties_size PROPERTIES_SIZE properties_size PROPERTIES_SIZE i i properties_size i properties i props i NETWinInfo::updateWMState update XAWMState NETWinInfo::update NET::Properties dirtyProperties NET::Properties2 dirtyProperties2 Properties dirty dirtyProperties p properties Properties2 dirty2 dirtyProperties2 p properties2 dirtyProperties XAWMState dirty XAWMState xcb_get_property_cookie_t cookies c dirty XAWMState cookies c xcb_get_property p conn p window p atom WM_STATE p atom WM_STATE dirty WMState cookies c xcb_get_property p conn p window p atom _NET_WM_STATE XCB_ATOM_ATOM dirty WMDesktop cookies c xcb_get_property p conn p window p atom _NET_WM_DESKTOP XCB_ATOM_CARDINAL dirty WMName cookies c xcb_get_property p conn p window p atom _NET_WM_NAME p atom UTF8_STRING MAX_PROP_SIZE dirty WMVisibleName cookies c xcb_get_property p conn p window p atom _NET_WM_VISIBLE_NAME p atom UTF8_STRING MAX_PROP_SIZE dirty WMIconName cookies c xcb_get_property p conn p window p atom _NET_WM_ICON_NAME p atom UTF8_STRING MAX_PROP_SIZE dirty WMVisibleIconName cookies c xcb_get_property p conn p window p atom _NET_WM_VISIBLE_ICON_NAME p atom UTF8_STRING MAX_PROP_SIZE dirty WMWindowType cookies c xcb_get_property p conn p window p atom _NET_WM_WINDOW_TYPE XCB_ATOM_ATOM dirty WMStrut cookies c xcb_get_property p conn p window p atom _NET_WM_STRUT XCB_ATOM_CARDINAL dirty2 WM2ExtendedStrut cookies c xcb_get_property p conn p window p atom _NET_WM_STRUT_PARTIAL XCB_ATOM_CARDINAL dirty2 WM2FullscreenMonitors cookies c xcb_get_property p conn p window p atom _NET_WM_FULLSCREEN_MONITORS XCB_ATOM_CARDINAL dirty WMIconGeometry cookies c xcb_get_property p conn p window p atom _NET_WM_ICON_GEOMETRY XCB_ATOM_CARDINAL dirty WMIcon cookies c xcb_get_property p conn p window p atom _NET_WM_ICON XCB_ATOM_CARDINAL dirty WMFrameExtents cookies c xcb_get_property p conn p window p atom _NET_FRAME_EXTENTS XCB_ATOM_CARDINAL cookies c xcb_get_property p conn p window p atom _KDE_NET_WM_FRAME_STRUT XCB_ATOM_CARDINAL dirty2 WM2FrameOverlap cookies c xcb_get_property p conn p window p atom _NET_WM_FRAME_OVERLAP XCB_ATOM_CARDINAL dirty2 WM2Activities cookies c xcb_get_property p conn p window p atom _KDE_NET_WM_ACTIVITIES XCB_ATOM_STRING MAX_PROP_SIZE dirty2 WM2BlockCompositing cookies c xcb_get_property p conn p window p atom _KDE_NET_WM_BLOCK_COMPOSITING XCB_ATOM_CARDINAL cookies c xcb_get_property p conn p window p atom _NET_WM_BYPASS_COMPOSITOR XCB_ATOM_CARDINAL dirty WMPid cookies c xcb_get_property p conn p window p atom _NET_WM_PID XCB_ATOM_CARDINAL dirty2 WM2StartupId cookies c xcb_get_property p conn p window p atom _NET_STARTUP_ID p atom UTF8_STRING MAX_PROP_SIZE dirty2 WM2Opacity cookies c xcb_get_property p conn p window p atom _NET_WM_WINDOW_OPACITY XCB_ATOM_CARDINAL dirty2 WM2AllowedActions cookies c xcb_get_property p conn p window p atom _NET_WM_ALLOWED_ACTIONS XCB_ATOM_ATOM dirty2 WM2UserTime cookies c xcb_get_property p conn p window p atom _NET_WM_USER_TIME XCB_ATOM_CARDINAL dirty2 WM2TransientFor cookies c xcb_get_property p conn p window XCB_ATOM_WM_TRANSIENT_FOR XCB_ATOM_WINDOW dirty2 WM2GroupLeader WM2Urgency WM2Input WM2InitialMappingState WM2IconPixmap cookies c xcb_get_property p conn p window XCB_ATOM_WM_HINTS XCB_ATOM_WM_HINTS dirty2 WM2WindowClass cookies c xcb_get_property p conn p window XCB_ATOM_WM_CLASS XCB_ATOM_STRING MAX_PROP_SIZE dirty2 WM2WindowRole cookies c xcb_get_property p conn p window p atom WM_WINDOW_ROLE XCB_ATOM_STRING MAX_PROP_SIZE dirty2 WM2ClientMachine cookies c xcb_get_property p conn p window XCB_ATOM_WM_CLIENT_MACHINE XCB_ATOM_STRING MAX_PROP_SIZE dirty2 WM2Protocols cookies c xcb_get_property p conn p window p atom WM_PROTOCOLS XCB_ATOM_ATOM dirty2 WM2OpaqueRegion cookies c xcb_get_property p conn p window p atom _NET_WM_OPAQUE_REGION XCB_ATOM_CARDINAL MAX_PROP_SIZE c dirty XAWMState p mapping_state Withdrawn success uint32_t state get_value_reply&lt;uint32_t&gt; p conn cookies c p atom WM_STATE success success state p mapping_state Iconic p mapping_state Visible p mapping_state Withdrawn p mapping_state_dirty dirty WMState p state QVector&lt;xcb_atom_t&gt; states get_array_reply&lt;xcb_atom_t&gt; p conn cookies c XCB_ATOM_ATOM fprintf stderr states count Q_FOREACH xcb_atom_t state states QByteArray ba get_atom_name p conn state fprintf stderr state ba constData state p atom _NET_WM_STATE_MODAL p state Modal state p atom _NET_WM_STATE_STICKY p state Sticky state p atom _NET_WM_STATE_MAXIMIZED_VERT p state MaxVert state p atom _NET_WM_STATE_MAXIMIZED_HORZ p state MaxHoriz state p atom _NET_WM_STATE_SHADED p state Shaded state p atom _NET_WM_STATE_SKIP_TASKBAR p state SkipTaskbar state p atom _NET_WM_STATE_SKIP_PAGER p state SkipPager state p atom _NET_WM_STATE_HIDDEN p state Hidden state p atom _NET_WM_STATE_FULLSCREEN p state FullScreen state p atom _NET_WM_STATE_ABOVE p state KeepAbove state p atom _NET_WM_STATE_BELOW p state KeepBelow state p atom _NET_WM_STATE_DEMANDS_ATTENTION p state DemandsAttention state p atom _NET_WM_STATE_STAYS_ON_TOP p state StaysOnTop dirty WMDesktop p desktop success uint32_t desktop get_value_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL success success desktop xffffffff p desktop desktop p desktop OnAllDesktops dirty WMName p name p name NULL QByteArray str get_string_reply p conn cookies c p atom UTF8_STRING str length p name nstrndup str constData str length dirty WMVisibleName p visible_name p visible_name NULL QByteArray str get_string_reply p conn cookies c p atom UTF8_STRING str length p visible_name nstrndup str constData str length dirty WMIconName p icon_name p icon_name NULL QByteArray str get_string_reply p conn cookies c p atom UTF8_STRING str length p icon_name nstrndup str constData str length dirty WMVisibleIconName p visible_icon_name p visible_icon_name NULL QByteArray str get_string_reply p conn cookies c p atom UTF8_STRING str length p visible_icon_name nstrndup str constData str length dirty WMWindowType p types reset p types Unknown p has_net_support QVector&lt;xcb_atom_t&gt; types get_array_reply&lt;xcb_atom_t&gt; p conn cookies c XCB_ATOM_ATOM types count fprintf stderr types count p has_net_support pos Q_FOREACH xcb_atom_t type types QByteArray name get_atom_name p conn type fprintf stderr type name constData type p atom _NET_WM_WINDOW_TYPE_NORMAL p types pos Normal type p atom _NET_WM_WINDOW_TYPE_DESKTOP p types pos Desktop type p atom _NET_WM_WINDOW_TYPE_DOCK p types pos Dock type p atom _NET_WM_WINDOW_TYPE_TOOLBAR p types pos Toolbar type p atom _NET_WM_WINDOW_TYPE_MENU p types pos Menu type p atom _NET_WM_WINDOW_TYPE_DIALOG p types pos Dialog type p atom _NET_WM_WINDOW_TYPE_UTILITY p types pos Utility type p atom _NET_WM_WINDOW_TYPE_SPLASH p types pos Splash type p atom _NET_WM_WINDOW_TYPE_DROPDOWN_MENU p types pos DropdownMenu type p atom _NET_WM_WINDOW_TYPE_POPUP_MENU p types pos PopupMenu type p atom _NET_WM_WINDOW_TYPE_TOOLTIP p types pos Tooltip type p atom _NET_WM_WINDOW_TYPE_NOTIFICATION p types pos Notification type p atom _NET_WM_WINDOW_TYPE_COMBOBOX p types pos ComboBox type p atom _NET_WM_WINDOW_TYPE_DND p types pos DNDIcon type p atom _KDE_NET_WM_WINDOW_TYPE_OVERRIDE p types pos Override type p atom _KDE_NET_WM_WINDOW_TYPE_TOPMENU p types pos TopMenu type p atom _KDE_NET_WM_WINDOW_TYPE_ON_SCREEN_DISPLAY p types pos OnScreenDisplay dirty WMStrut p strut NETStrut QVector&lt;uint32_t&gt; data get_array_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL data count p strut left data p strut right data p strut top data p strut bottom data dirty2 WM2ExtendedStrut p extended_strut NETExtendedStrut QVector&lt;uint32_t&gt; data get_array_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL data count p extended_strut left_width data p extended_strut right_width data p extended_strut top_width data p extended_strut bottom_width data p extended_strut left_start data p extended_strut left_end data p extended_strut right_start data p extended_strut right_end data p extended_strut top_start data p extended_strut top_end data p extended_strut bottom_start data p extended_strut bottom_end data dirty2 WM2FullscreenMonitors p fullscreen_monitors NETFullscreenMonitors QVector&lt;uint32_t&gt; data get_array_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL data count p fullscreen_monitors top data p fullscreen_monitors bottom data p fullscreen_monitors left data p fullscreen_monitors right data dirty WMIconGeometry p icon_geom NETRect QVector&lt;uint32_t&gt; data get_array_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL data count p icon_geom pos x data p icon_geom pos y data p icon_geom size width data p icon_geom size height data dirty WMIcon readIcon p conn cookies c p icons p icon_count p icon_sizes p icon_sizes NULL dirty WMFrameExtents p frame_strut NETStrut QVector&lt;uint32_t&gt; data get_array_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL data count data get_array_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL xcb_discard_reply p conn cookies c sequence data count p frame_strut left data p frame_strut right data p frame_strut top data p frame_strut bottom data dirty2 WM2FrameOverlap p frame_overlap NETStrut QVector&lt;uint32_t&gt; data get_array_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL data count p frame_overlap left data p frame_overlap right data p frame_overlap top data p frame_overlap bottom data dirty2 WM2Activities p activities p activities NULL QByteArray activities get_string_reply p conn cookies c XCB_ATOM_STRING activities length p activities nstrndup activities constData activities length dirty2 WM2BlockCompositing success p blockCompositing uint32_t data get_value_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL success success p blockCompositing bool data data get_value_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL success success data p blockCompositing p blockCompositing dirty WMPid p pid get_value_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL dirty2 WM2StartupId p startup_id p startup_id NULL QByteArray get_string_reply p conn cookies c p atom UTF8_STRING length p startup_id nstrndup constData length dirty2 WM2Opacity p opacity get_value_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL dirty2 WM2AllowedActions p allowed_actions QVector&lt;xcb_atom_t&gt; actions get_array_reply&lt;xcb_atom_t&gt; p conn cookies c XCB_ATOM_ATOM actions count fprintf stderr actions count Q_FOREACH xcb_atom_t action actions QByteArray name get_atom_name p conn action fprintf stderr action name constData action p atom _NET_WM_ACTION_MOVE p allowed_actions ActionMove action p atom _NET_WM_ACTION_RESIZE p allowed_actions ActionResize action p atom _NET_WM_ACTION_MINIMIZE p allowed_actions ActionMinimize action p atom _NET_WM_ACTION_SHADE p allowed_actions ActionShade action p atom _NET_WM_ACTION_STICK p allowed_actions ActionStick action p atom _NET_WM_ACTION_MAXIMIZE_VERT p allowed_actions ActionMaxVert action p atom _NET_WM_ACTION_MAXIMIZE_HORZ p allowed_actions ActionMaxHoriz action p atom _NET_WM_ACTION_FULLSCREEN p allowed_actions ActionFullScreen action p atom _NET_WM_ACTION_CHANGE_DESKTOP p allowed_actions ActionChangeDesktop action p atom _NET_WM_ACTION_CLOSE p allowed_actions ActionClose dirty2 WM2UserTime p user_time U success uint32_t value get_value_reply&lt;uint32_t&gt; p conn cookies c XCB_ATOM_CARDINAL success success p user_time value dirty2 WM2TransientFor p transient_for get_value_reply&lt;xcb_window_t&gt; p conn cookies c XCB_ATOM_WINDOW dirty2 WM2GroupLeader WM2Urgency WM2Input WM2InitialMappingState WM2IconPixmap xcb_get_property_reply_t reply xcb_get_property_reply p conn cookies c reply reply format reply value_len reply type XCB_ATOM_WM_HINTS kde_wm_hints hints kde_wm_hints xcb_get_property_value reply hints flags p input hints input hints flags hints initial_state p initialMappingState Iconic p initialMappingState Visible p initialMappingState Withdrawn hints flags p icon_pixmap hints icon_pixmap hints flags p icon_mask hints icon_mask hints flags p window_group hints window_group p urgency hints flags reply free reply dirty2 WM2WindowClass p class_name p class_class p class_name NULL p class_class NULL QList&lt;QByteArray&gt; list get_stringlist_reply p conn cookies c XCB_ATOM_STRING list count p class_name nstrdup list at constData p class_class nstrdup list at constData dirty2 WM2WindowRole p window_role p window_role NULL QByteArray role get_string_reply p conn cookies c XCB_ATOM_STRING role length p window_role nstrndup role constData role length dirty2 WM2ClientMachine p client_machine p client_machine NULL QByteArray value get_string_reply p conn cookies c XCB_ATOM_STRING value length p client_machine nstrndup value constData value length dirty2 WM2Protocols QVector&lt;xcb_atom_t&gt; protocols get_array_reply&lt;xcb_atom_t&gt; p conn cookies c XCB_ATOM_ATOM p protocols NET::NoProtocol it protocols begin it protocols end it it p atom WM_TAKE_FOCUS p protocols TakeFocusProtocol it p atom WM_DELETE_WINDOW p protocols DeleteWindowProtocol it p atom _NET_WM_PING p protocols PingProtocol it p atom _NET_WM_SYNC_REQUEST p protocols SyncRequestProtocol it p atom _NET_WM_CONTEXT_HELP p protocols ContextHelpProtocol dirty2 WM2OpaqueRegion QVector&lt;qint32&gt; values get_array_reply&lt;qint32&gt; p conn cookies c XCB_ATOM_CARDINAL p opaqueRegion clear p opaqueRegion reserve values count i i values count i NETRect rect rect pos x values at i rect pos y values at i rect size width values at i rect size height values at i p opaqueRegion push_back rect</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04529</field>
    <field name="keywords"></field>
    <field name="text">NETRect NETWinInfo::iconGeometry p icon_geom</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04534</field>
    <field name="keywords"></field>
    <field name="text">NET::States NETWinInfo::state p state</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04539</field>
    <field name="keywords"></field>
    <field name="text">NETStrut NETWinInfo::strut p strut</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04544</field>
    <field name="keywords"></field>
    <field name="text">NETExtendedStrut NETWinInfo::extendedStrut p extended_strut</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04549</field>
    <field name="keywords"></field>
    <field name="text">NETFullscreenMonitors NETWinInfo::fullscreenMonitors p fullscreen_monitors</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04554</field>
    <field name="keywords"></field>
    <field name="text">NET::typeMatchesMask WindowType type WindowTypes mask type CHECK_TYPE_MASK Normal CHECK_TYPE_MASK Desktop CHECK_TYPE_MASK Dock CHECK_TYPE_MASK Toolbar CHECK_TYPE_MASK Menu CHECK_TYPE_MASK Dialog CHECK_TYPE_MASK Override CHECK_TYPE_MASK TopMenu CHECK_TYPE_MASK Utility CHECK_TYPE_MASK Splash CHECK_TYPE_MASK DropdownMenu CHECK_TYPE_MASK PopupMenu CHECK_TYPE_MASK Tooltip CHECK_TYPE_MASK Notification CHECK_TYPE_MASK ComboBox CHECK_TYPE_MASK DNDIcon CHECK_TYPE_MASK OnScreenDisplay</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04586</field>
    <field name="keywords"></field>
    <field name="text">NET::WindowType NETWinInfo::windowType WindowTypes supported_types i i p types size i typeMatchesMask p types i supported_types p types i Unknown</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04599</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::hasWindowType p types size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04604</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::name p name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04609</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::visibleName p visible_name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04614</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::iconName p icon_name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04619</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::visibleIconName p visible_icon_name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04624</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::desktop ignore_viewport ignore_viewport KWindowSystem::mapViewport KWindowInfo info p window NET::WMDesktop info desktop p desktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04633</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::pid p pid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04638</field>
    <field name="keywords"></field>
    <field name="text">xcb_timestamp_t NETWinInfo::userTime p user_time</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04643</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::startupId p startup_id</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04648</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::opacity p opacity</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04653</field>
    <field name="keywords"></field>
    <field name="text">NET::Actions NETWinInfo::allowedActions p allowed_actions</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04658</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::hasNETSupport p has_net_support</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04663</field>
    <field name="keywords"></field>
    <field name="text">xcb_window_t NETWinInfo::transientFor p transient_for</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04668</field>
    <field name="keywords"></field>
    <field name="text">xcb_window_t NETWinInfo::groupLeader p window_group</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04673</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::urgency p urgency</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04678</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::input p input</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04683</field>
    <field name="keywords"></field>
    <field name="text">NET::MappingState NETWinInfo::initialMappingState p initialMappingState</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04688</field>
    <field name="keywords"></field>
    <field name="text">xcb_pixmap_t NETWinInfo::icccmIconPixmap p icon_pixmap</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04693</field>
    <field name="keywords"></field>
    <field name="text">xcb_pixmap_t NETWinInfo::icccmIconPixmapMask p icon_mask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04698</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::windowClassClass p class_class</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04703</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::windowClassName p class_name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04708</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::windowRole p window_role</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04713</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::clientMachine p client_machine</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04718</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::activities p activities</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04723</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setActivities activities p activities activities NULL activities nulluuid KDE_ALL_ACTIVITIES_UUID p activities nstrdup nulluuid p activities nstrdup activities xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _KDE_NET_WM_ACTIVITIES XCB_ATOM_STRING strlen p activities p activities</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04742</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::setBlockingCompositing active p role Client p blockCompositing active active uint32_t d xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _KDE_NET_WM_BLOCK_COMPOSITING XCB_ATOM_CARDINAL d xcb_change_property p conn XCB_PROP_MODE_REPLACE p window p atom _NET_WM_BYPASS_COMPOSITOR XCB_ATOM_CARDINAL d xcb_delete_property p conn p window p atom _KDE_NET_WM_BLOCK_COMPOSITING xcb_delete_property p conn p window p atom _NET_WM_BYPASS_COMPOSITOR</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04761</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::isBlockingCompositing p blockCompositing</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04766</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::handledIcons p handled_icons</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04771</field>
    <field name="keywords"></field>
    <field name="text">NET::Properties NETWinInfo::passedProperties p properties</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04776</field>
    <field name="keywords"></field>
    <field name="text">NET::Properties2 NETWinInfo::passedProperties2 p properties2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04781</field>
    <field name="keywords"></field>
    <field name="text">NET::MappingState NETWinInfo::mappingState p mapping_state</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04786</field>
    <field name="keywords"></field>
    <field name="text">NET::Protocols NETWinInfo::protocols p protocols</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04791</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::supportsProtocol NET::Protocol protocol p protocols testFlag protocol</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04796</field>
    <field name="keywords"></field>
    <field name="text">std::vector&lt; NETRect &gt; NETWinInfo::opaqueRegion p opaqueRegion</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04801</field>
    <field name="keywords"></field>
    <field name="text">xcb_connection_t NETWinInfo::xcbConnection p conn</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04806</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfo::virtual_hook</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04811</field>
    <field name="keywords"></field>
    <field name="text">NETWinInfo::virtual_hook</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04816</field>
    <field name="keywords"></field>
    <field name="text">NET::timestampCompare time1 time2 KXUtils::timestampCompare time1 time2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.cpp</field>
    <field name="url">netwm_8cpp_source.html#l04821</field>
    <field name="keywords"></field>
    <field name="text">NET::timestampDiff time1 time2 KXUtils::timestampDiff time1 time2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">NETRootInfoPrivate NETWinInfoPrivate NETRArray</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">KWINDOWSYSTEM_EXPORT NETRootInfo NET PROTOCOLS WINDOW_TYPES STATES PROTOCOLS2 ACTIONS PROPERTIES_SIZE NETRootInfo xcb_connection_t connection xcb_window_t supportWindow wmName NET::Properties properties NET::WindowTypes windowTypes NET::States states NET::Properties2 properties2 NET::Actions actions screen doActivate NETRootInfo xcb_connection_t connection NET::Properties properties NET::Properties2 properties2 screen doActivate NETRootInfo NETRootInfo rootinfo NETRootInfo xcb_connection_t xcbConnection xcb_window_t rootWindow xcb_window_t supportWindow wmName setSupported NET::Property property on setSupported NET::Property2 property on setSupported NET::WindowTypeMask property on setSupported NET::State property on setSupported NET::Action property on isSupported NET::Property property isSupported NET::Property2 property isSupported NET::WindowTypeMask type isSupported NET::State state isSupported NET::Action action NET::Properties supportedProperties NET::Properties2 supportedProperties2 NET::States supportedStates NET::WindowTypes supportedWindowTypes NET::Actions supportedActions NET::Properties passedProperties NET::Properties2 passedProperties2 NET::States passedStates NET::WindowTypes passedWindowTypes NET::Actions passedActions xcb_window_t clientList clientListCount xcb_window_t clientListStacking clientListStackingCount NETSize desktopGeometry NETPoint desktopViewport desktop NETRect workArea desktop desktopName desktop xcb_window_t virtualRoots virtualRootsCount NET::Orientation desktopLayoutOrientation QSize desktopLayoutColumnsRows NET::DesktopLayoutCorner desktopLayoutCorner numberOfDesktops ignore_viewport currentDesktop ignore_viewport xcb_window_t activeWindow activate setClientList xcb_window_t windows count setClientListStacking xcb_window_t windows count setCurrentDesktop desktop ignore_viewport setDesktopGeometry NETSize geometry setDesktopViewport desktop NETPoint viewport setNumberOfDesktops numberOfDesktops setDesktopName desktop desktopName setActiveWindow xcb_window_t window NET::RequestSource src xcb_timestamp_t timestamp xcb_window_t active_window setActiveWindow xcb_window_t window setWorkArea desktop NETRect workArea setVirtualRoots xcb_window_t windows count setDesktopLayout NET::Orientation orientation columns rows NET::DesktopLayoutCorner corner setShowingDesktop showing showingDesktop NETRootInfo operator= NETRootInfo rootinfo closeWindowRequest xcb_window_t window moveResizeRequest xcb_window_t window x_root y_root Direction direction moveResizeWindowRequest xcb_window_t window flags x y width height restackRequest xcb_window_t window RequestSource source xcb_window_t above detail xcb_timestamp_t timestamp sendPing xcb_window_t window xcb_timestamp_t timestamp KWINDOWSYSTEM_DEPRECATED event xcb_generic_event_t event properties properties_size event xcb_generic_event_t event NET::Properties properties NET::Properties2 properties2 Q_NULLPTR NET::Properties event xcb_generic_event_t event</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l00735</field>
    <field name="keywords"></field>
    <field name="text">addClient xcb_window_t window Q_UNUSED window</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l00746</field>
    <field name="keywords"></field>
    <field name="text">removeClient xcb_window_t window Q_UNUSED window</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l00758</field>
    <field name="keywords"></field>
    <field name="text">changeNumberOfDesktops numberOfDesktops Q_UNUSED numberOfDesktops</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l00772</field>
    <field name="keywords"></field>
    <field name="text">changeDesktopGeometry desktop NETSize geom Q_UNUSED desktop Q_UNUSED geom</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l00787</field>
    <field name="keywords"></field>
    <field name="text">changeDesktopViewport desktop NETPoint viewport Q_UNUSED desktop Q_UNUSED viewport</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l00800</field>
    <field name="keywords"></field>
    <field name="text">changeCurrentDesktop desktop Q_UNUSED desktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l00811</field>
    <field name="keywords"></field>
    <field name="text">closeWindow xcb_window_t window Q_UNUSED window</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l00829</field>
    <field name="keywords"></field>
    <field name="text">moveResize xcb_window_t window x_root y_root direction Q_UNUSED window Q_UNUSED x_root Q_UNUSED y_root Q_UNUSED direction</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l00844</field>
    <field name="keywords"></field>
    <field name="text">gotPing xcb_window_t window xcb_timestamp_t timestamp Q_UNUSED window Q_UNUSED timestamp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l00859</field>
    <field name="keywords"></field>
    <field name="text">changeActiveWindow xcb_window_t window NET::RequestSource src xcb_timestamp_t timestamp xcb_window_t active_window Q_UNUSED window Q_UNUSED src Q_UNUSED timestamp Q_UNUSED active_window</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l00880</field>
    <field name="keywords"></field>
    <field name="text">moveResizeWindow xcb_window_t window flags x y width height Q_UNUSED window Q_UNUSED flags Q_UNUSED x Q_UNUSED y Q_UNUSED width Q_UNUSED height</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l00901</field>
    <field name="keywords"></field>
    <field name="text">restackWindow xcb_window_t window RequestSource source xcb_window_t above detail xcb_timestamp_t timestamp Q_UNUSED window Q_UNUSED source Q_UNUSED above Q_UNUSED detail Q_UNUSED timestamp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l00918</field>
    <field name="keywords"></field>
    <field name="text">changeShowingDesktop showing Q_UNUSED showing update NET::Properties properties NET::Properties2 properties2 setSupported setDefaultProperties updateSupportedProperties xcb_atom_t atom virtual_hook data NETRootInfoPrivate p</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l00951</field>
    <field name="keywords"></field>
    <field name="text">KWINDOWSYSTEM_EXPORT NETWinInfo NET PROTOCOLS PROTOCOLS2 PROPERTIES_SIZE NETWinInfo xcb_connection_t connection xcb_window_t window xcb_window_t rootWindow NET::Properties properties NET::Properties2 properties2 Role role Client KWINDOWSYSTEM_DEPRECATED NETWinInfo xcb_connection_t connection xcb_window_t window xcb_window_t rootWindow NET::Properties properties Role role Client NETWinInfo NETWinInfo wininfo NETWinInfo NETWinInfo operator= NETWinInfo wintinfo xcb_connection_t xcbConnection hasNETSupport NET::Properties passedProperties NET::Properties2 passedProperties2 NETRect iconGeometry NET::States state NETExtendedStrut extendedStrut NETStrut strut WindowType windowType WindowTypes supported_types hasWindowType name visibleName iconName visibleIconName desktop ignore_viewport pid handledIcons MappingState mappingState setIcon NETIcon icon replace setIconGeometry NETRect geometry setExtendedStrut NETExtendedStrut extended_strut setStrut NETStrut strut setState NET::States state NET::States mask setWindowType WindowType type setName name setVisibleName visibleName setIconName name setVisibleIconName name setDesktop desktop ignore_viewport setPid pid setHandledIcons handled setFrameExtents NETStrut strut NETStrut frameExtents setFrameOverlap NETStrut strut NETStrut frameOverlap NETIcon icon width height iconSizes setUserTime xcb_timestamp_t time xcb_timestamp_t userTime setStartupId startup_id startupId setOpacity opacity opacity setAllowedActions NET::Actions actions NET::Actions allowedActions xcb_window_t transientFor xcb_window_t groupLeader urgency input MappingState initialMappingState xcb_pixmap_t icccmIconPixmap xcb_pixmap_t icccmIconPixmapMask windowClassClass windowClassName windowRole clientMachine activities setActivities activities setBlockingCompositing active isBlockingCompositing kdeGeometry NETRect frame NETRect window setFullscreenMonitors NETFullscreenMonitors topology NETFullscreenMonitors fullscreenMonitors KWINDOWSYSTEM_DEPRECATED event xcb_generic_event_t event properties properties_size event xcb_generic_event_t event NET::Properties properties NET::Properties2 properties2 Q_NULLPTR NET::Properties event xcb_generic_event_t event NET::Protocols protocols supportsProtocol NET::Protocol protocol std::vector&lt;NETRect&gt; opaqueRegion</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l01591</field>
    <field name="keywords"></field>
    <field name="text">OnAllDesktops</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l01601</field>
    <field name="keywords"></field>
    <field name="text">changeDesktop desktop Q_UNUSED desktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l01615</field>
    <field name="keywords"></field>
    <field name="text">changeState NET::States state NET::States mask Q_UNUSED state Q_UNUSED mask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm.h</field>
    <field name="url">netwm_8h_source.html#l01629</field>
    <field name="keywords"></field>
    <field name="text">changeFullscreenMonitors NETFullscreenMonitors topology Q_UNUSED topology update NET::Properties dirtyProperties NET::Properties2 dirtyProperties2 updateWMState setIconInternal NETRArray&lt;NETIcon&gt; icons icon_count xcb_atom_t property NETIcon icon replace NETIcon iconInternal NETRArray&lt;NETIcon&gt; icons icon_count width height virtual_hook data NETWinInfoPrivate p</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">NETPoint</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">NETPoint x y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00053</field>
    <field name="keywords"></field>
    <field name="text">x y</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00070</field>
    <field name="keywords"></field>
    <field name="text">NETSize</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00074</field>
    <field name="keywords"></field>
    <field name="text">NETSize width height</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text">width height</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text">NETRect</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text">NETPoint pos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00106</field>
    <field name="keywords"></field>
    <field name="text">NETSize size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text">NETIcon</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00124</field>
    <field name="keywords"></field>
    <field name="text">NETIcon data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00131</field>
    <field name="keywords"></field>
    <field name="text">NETSize size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text">data</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00150</field>
    <field name="keywords"></field>
    <field name="text">NETExtendedStrut</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00154</field>
    <field name="keywords"></field>
    <field name="text">NETExtendedStrut left_width left_start left_end right_width right_start right_end top_width top_start top_end bottom_width bottom_start bottom_end</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00161</field>
    <field name="keywords"></field>
    <field name="text">left_width left_start left_end</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00166</field>
    <field name="keywords"></field>
    <field name="text">right_width right_start right_end</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00171</field>
    <field name="keywords"></field>
    <field name="text">top_width top_start top_end</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00176</field>
    <field name="keywords"></field>
    <field name="text">bottom_width bottom_start bottom_end</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00191</field>
    <field name="keywords"></field>
    <field name="text">NETStrut</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00195</field>
    <field name="keywords"></field>
    <field name="text">NETStrut left right top bottom</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00200</field>
    <field name="keywords"></field>
    <field name="text">left</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00205</field>
    <field name="keywords"></field>
    <field name="text">right</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00210</field>
    <field name="keywords"></field>
    <field name="text">top</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00215</field>
    <field name="keywords"></field>
    <field name="text">bottom</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00230</field>
    <field name="keywords"></field>
    <field name="text">NETFullscreenMonitors</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00235</field>
    <field name="keywords"></field>
    <field name="text">NETFullscreenMonitors top bottom left right</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00240</field>
    <field name="keywords"></field>
    <field name="text">top</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00245</field>
    <field name="keywords"></field>
    <field name="text">bottom</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00250</field>
    <field name="keywords"></field>
    <field name="text">left</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00255</field>
    <field name="keywords"></field>
    <field name="text">right</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00263</field>
    <field name="keywords"></field>
    <field name="text">isSet top</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00281</field>
    <field name="keywords"></field>
    <field name="text">KWINDOWSYSTEM_EXPORT NET</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00289</field>
    <field name="keywords"></field>
    <field name="text">Role</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00293</field>
    <field name="keywords"></field>
    <field name="text">Client</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00297</field>
    <field name="keywords"></field>
    <field name="text">WindowManager</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00304</field>
    <field name="keywords"></field>
    <field name="text">WindowType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00308</field>
    <field name="keywords"></field>
    <field name="text">Unknown</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00312</field>
    <field name="keywords"></field>
    <field name="text">Normal</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00319</field>
    <field name="keywords"></field>
    <field name="text">Desktop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00323</field>
    <field name="keywords"></field>
    <field name="text">Dock</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00327</field>
    <field name="keywords"></field>
    <field name="text">Toolbar</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00331</field>
    <field name="keywords"></field>
    <field name="text">Menu</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00335</field>
    <field name="keywords"></field>
    <field name="text">Dialog</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00339</field>
    <field name="keywords"></field>
    <field name="text">Override</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00344</field>
    <field name="keywords"></field>
    <field name="text">TopMenu</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00348</field>
    <field name="keywords"></field>
    <field name="text">Utility</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00352</field>
    <field name="keywords"></field>
    <field name="text">Splash</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00356</field>
    <field name="keywords"></field>
    <field name="text">DropdownMenu</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00360</field>
    <field name="keywords"></field>
    <field name="text">PopupMenu</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00364</field>
    <field name="keywords"></field>
    <field name="text">Tooltip</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00368</field>
    <field name="keywords"></field>
    <field name="text">Notification</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00372</field>
    <field name="keywords"></field>
    <field name="text">ComboBox</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00376</field>
    <field name="keywords"></field>
    <field name="text">DNDIcon</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00381</field>
    <field name="keywords"></field>
    <field name="text">OnScreenDisplay</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00388</field>
    <field name="keywords"></field>
    <field name="text">WindowTypeMask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00389</field>
    <field name="keywords"></field>
    <field name="text">NormalMask u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00390</field>
    <field name="keywords"></field>
    <field name="text">DesktopMask u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00391</field>
    <field name="keywords"></field>
    <field name="text">DockMask u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00392</field>
    <field name="keywords"></field>
    <field name="text">ToolbarMask u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00393</field>
    <field name="keywords"></field>
    <field name="text">MenuMask u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00394</field>
    <field name="keywords"></field>
    <field name="text">DialogMask u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00395</field>
    <field name="keywords"></field>
    <field name="text">OverrideMask u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00396</field>
    <field name="keywords"></field>
    <field name="text">TopMenuMask u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00397</field>
    <field name="keywords"></field>
    <field name="text">UtilityMask u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00398</field>
    <field name="keywords"></field>
    <field name="text">SplashMask u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00399</field>
    <field name="keywords"></field>
    <field name="text">DropdownMenuMask u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00400</field>
    <field name="keywords"></field>
    <field name="text">PopupMenuMask u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00401</field>
    <field name="keywords"></field>
    <field name="text">TooltipMask u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00402</field>
    <field name="keywords"></field>
    <field name="text">NotificationMask u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00403</field>
    <field name="keywords"></field>
    <field name="text">ComboBoxMask u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00404</field>
    <field name="keywords"></field>
    <field name="text">DNDIconMask u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00405</field>
    <field name="keywords"></field>
    <field name="text">OnScreenDisplayMask u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00406</field>
    <field name="keywords"></field>
    <field name="text">AllTypesMask U Q_DECLARE_FLAGS WindowTypes WindowTypeMask typeMatchesMask WindowType type WindowTypes mask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00431</field>
    <field name="keywords"></field>
    <field name="text">State</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00437</field>
    <field name="keywords"></field>
    <field name="text">Modal u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00443</field>
    <field name="keywords"></field>
    <field name="text">Sticky u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00447</field>
    <field name="keywords"></field>
    <field name="text">MaxVert u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00451</field>
    <field name="keywords"></field>
    <field name="text">MaxHoriz u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00455</field>
    <field name="keywords"></field>
    <field name="text">Max MaxVert MaxHoriz</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00459</field>
    <field name="keywords"></field>
    <field name="text">Shaded u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00463</field>
    <field name="keywords"></field>
    <field name="text">SkipTaskbar u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00468</field>
    <field name="keywords"></field>
    <field name="text">KeepAbove u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00472</field>
    <field name="keywords"></field>
    <field name="text">StaysOnTop KeepAbove</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00476</field>
    <field name="keywords"></field>
    <field name="text">SkipPager u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00481</field>
    <field name="keywords"></field>
    <field name="text">Hidden u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00486</field>
    <field name="keywords"></field>
    <field name="text">FullScreen u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00490</field>
    <field name="keywords"></field>
    <field name="text">KeepBelow u</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00496</field>
    <field name="keywords"></field>
    <field name="text">DemandsAttention u Q_DECLARE_FLAGS States State</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00519</field>
    <field name="keywords"></field>
    <field name="text">enum Direction TopLeft Top TopRight Right BottomRight Bottom BottomLeft Left Move KeyboardSize KeyboardMove MoveResizeCancel</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00540</field>
    <field name="keywords"></field>
    <field name="text">MappingState</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00544</field>
    <field name="keywords"></field>
    <field name="text">Visible</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00548</field>
    <field name="keywords"></field>
    <field name="text">Withdrawn</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00554</field>
    <field name="keywords"></field>
    <field name="text">Iconic</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00560</field>
    <field name="keywords"></field>
    <field name="text">Action ActionMove u ActionResize u ActionMinimize u ActionShade u ActionStick u ActionMaxVert u ActionMaxHoriz u ActionMax ActionMaxVert ActionMaxHoriz ActionFullScreen u ActionChangeDesktop u ActionClose u Q_DECLARE_FLAGS Actions Action</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00620</field>
    <field name="keywords"></field>
    <field name="text">enum Property Supported u ClientList u ClientListStacking u NumberOfDesktops u DesktopGeometry u DesktopViewport u CurrentDesktop u DesktopNames u ActiveWindow u WorkArea u SupportingWMCheck u VirtualRoots u CloseWindow u WMMoveResize u WMName u WMVisibleName u WMDesktop u WMWindowType u WMState u WMStrut u WMIconGeometry u WMIcon u WMPid u WMHandledIcons u WMPing u XAWMState u WMFrameExtents u WMIconName u WMVisibleIconName u WMGeometry u WMAllProperties u Q_DECLARE_FLAGS Properties Property</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00691</field>
    <field name="keywords"></field>
    <field name="text">enum Property2 WM2UserTime u WM2StartupId u WM2TransientFor u WM2GroupLeader u WM2AllowedActions u WM2RestackWindow u WM2MoveResizeWindow u WM2ExtendedStrut u WM2KDETemporaryRules u WM2WindowClass u WM2WindowRole u WM2ClientMachine u WM2ShowingDesktop u WM2Opacity u WM2DesktopLayout u WM2FullPlacement u WM2FullscreenMonitors u WM2FrameOverlap u WM2Activities u WM2BlockCompositing u WM2KDEShadow u WM2Urgency u WM2Input u WM2Protocols u WM2InitialMappingState u WM2IconPixmap u WM2OpaqueRegion u WM2AllProperties u Q_DECLARE_FLAGS Properties2 Property2 OnAllDesktops</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00733</field>
    <field name="keywords"></field>
    <field name="text">RequestSource</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00737</field>
    <field name="keywords"></field>
    <field name="text">FromUnknown</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00741</field>
    <field name="keywords"></field>
    <field name="text">FromApplication</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00745</field>
    <field name="keywords"></field>
    <field name="text">FromTool</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00751</field>
    <field name="keywords"></field>
    <field name="text">Orientation OrientationHorizontal OrientationVertical</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00759</field>
    <field name="keywords"></field>
    <field name="text">DesktopLayoutCorner DesktopLayoutCornerTopLeft DesktopLayoutCornerTopRight DesktopLayoutCornerBottomLeft DesktopLayoutCornerBottomRight</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00772</field>
    <field name="keywords"></field>
    <field name="text">Protocol NoProtocol</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00774</field>
    <field name="keywords"></field>
    <field name="text">TakeFocusProtocol</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00775</field>
    <field name="keywords"></field>
    <field name="text">DeleteWindowProtocol</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00776</field>
    <field name="keywords"></field>
    <field name="text">PingProtocol</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00777</field>
    <field name="keywords"></field>
    <field name="text">SyncRequestProtocol</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">netwm_def.h</field>
    <field name="url">netwm__def_8h_source.html#l00778</field>
    <field name="keywords"></field>
    <field name="text">ContextHelpProtocol Q_DECLARE_FLAGS Protocols Protocol timestampCompare time1 time2 timestampDiff time1 time2 Q_DECLARE_OPERATORS_FOR_FLAGS NET::Properties Q_DECLARE_OPERATORS_FOR_FLAGS NET::Properties2 Q_DECLARE_OPERATORS_FOR_FLAGS NET::WindowTypes Q_DECLARE_OPERATORS_FOR_FLAGS NET::States Q_DECLARE_OPERATORS_FOR_FLAGS NET::Actions Q_DECLARE_OPERATORS_FOR_FLAGS NET::Protocols</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">plugin.cpp</field>
    <field name="url">wayland_2plugin_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">WaylandPlugin::WaylandPlugin QObject parent KWindowSystemPluginInterface parent WaylandPlugin::~WaylandPlugin KWindowSystemPrivate WaylandPlugin::createWindowSystem KWindowSystemPrivateWayland</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">plugin.cpp</field>
    <field name="url">xcb_2plugin_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">X11Plugin::X11Plugin QObject parent KWindowSystemPluginInterface parent X11Plugin::~X11Plugin KWindowEffectsPrivate X11Plugin::createEffects KWindowEffectsPrivateX11 KWindowSystemPrivate X11Plugin::createWindowSystem KWindowSystemPrivateX11 KWindowInfoPrivate X11Plugin::createWindowInfo WId window NET::Properties properties NET::Properties2 properties2 KWindowInfoPrivateX11 window properties properties2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">plugin.h</field>
    <field name="url">wayland_2plugin_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">WaylandPlugin KWindowSystemPluginInterface Q_OBJECT Q_PLUGIN_METADATA IID FILE Q_INTERFACES KWindowSystemPluginInterface WaylandPlugin QObject parent WaylandPlugin KWindowSystemPrivate createWindowSystem Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">plugin.h</field>
    <field name="url">xcb_2plugin_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">X11Plugin KWindowSystemPluginInterface Q_OBJECT Q_PLUGIN_METADATA IID FILE Q_INTERFACES KWindowSystemPluginInterface X11Plugin QObject parent X11Plugin KWindowEffectsPrivate createEffects Q_DECL_OVERRIDE KWindowSystemPrivate createWindowSystem Q_DECL_OVERRIDE KWindowInfoPrivate createWindowInfo WId window NET Properties properties NET Properties2 properties2 Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pluginwrapper.cpp</field>
    <field name="url">pluginwrapper_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_GLOBAL_STATIC KWindowSystemPluginWrapper s_pluginWrapper QStringList pluginCandidates QStringList ret QString path QCoreApplication::libraryPaths QDir pluginDir path QLatin1Literal pluginDir exists QString entry pluginDir entryList QDir::Files QDir::NoDotAndDotDot ret pluginDir absoluteFilePath entry ret KWindowSystemPluginInterface loadPlugin QString candidate pluginCandidates QLibrary::isLibrary candidate QPluginLoader loader candidate QJsonObject metaData loader metaData QJsonArray platforms metaData value QStringLiteral toObject value QStringLiteral toArray it platforms begin it platforms end it QString::compare QGuiApplication::platformName toString Qt::CaseInsensitive KWindowSystemPluginInterface qobject_cast KWindowSystemPluginInterface loader instance interface qCDebug LOG_KWINDOWSYSTEM candidate QGuiApplication::platformName interface qCWarning LOG_KWINDOWSYSTEM Q_NULLPTR KWindowSystemPluginWrapper::KWindowSystemPluginWrapper m_plugin loadPlugin m_effects m_plugin isNull m_effects reset m_plugin createEffects m_effects isNull m_effects reset KWindowEffectsPrivateDummy KWindowSystemPluginWrapper::~KWindowSystemPluginWrapper KWindowEffectsPrivate KWindowSystemPluginWrapper::effects m_effects data KWindowSystemPrivate KWindowSystemPluginWrapper::createWindowSystem KWindowSystemPrivate p Q_NULLPTR m_plugin isNull p m_plugin createWindowSystem p p KWindowSystemPrivateDummy p KWindowInfoPrivate KWindowSystemPluginWrapper::createWindowInfo WId window NET::Properties properties NET::Properties2 properties2 KWindowInfoPrivate p Q_NULLPTR m_plugin isNull p m_plugin createWindowInfo window properties properties2 p p KWindowInfoPrivateDummy window properties properties2 p KWindowSystemPluginWrapper KWindowSystemPluginWrapper::self s_pluginWrapper</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">deprecated</field>
    <field name="url">deprecated.html</field>
    <field name="keywords"></field>
    <field name="text">Deprecated List Member KStartupInfo KStartupInfo bool clean_on_cantdetect QObject 0 since 5.0 Member KStartupInfo sendChangeX Display const KStartupInfoId id const KStartupInfoData data since 5.18 use sendChangeXcb Member KStartupInfo sendFinishX Display const KStartupInfoId id const KStartupInfoData data since 5.18 use sendFinishXcb Member KStartupInfo sendFinishX Display const KStartupInfoId id since 5.18 use sendFinishXcb Member KStartupInfo sendStartupX Display const KStartupInfoId id const KStartupInfoData data since 5.18 use sendStartupXcb Member KWindowSystem groupLeader WId window Use KWindowInfo::groupLeader Member KWindowSystem minimizeWindow WId win bool animation since 5.0 the animation is ignored Member KWindowSystem transientFor WId window Use KWindowInfo::transientFor Member KWindowSystem unminimizeWindow WId win bool animation since 5.0 the animation is ignored Member KWindowSystem windowChanged WId id const unsigned long since 5.0 use windowChanged(WId, NET::Properties, NET::Properties2) Member KWindowSystem windowChanged WId id unsigned int properties The window changed Member KWindowSystem windowInfo WId win NET::Properties properties NET::Properties2 properties2 0 use KWindowInfo directly Member KXMessages broadcastMessageX Display const char const QString message int screen since 5.0 use xcb variant Member NET Override has unclear meaning and is KDE-only Member NET StaysOnTop This is an obsolete name for KeepAbove Member NETRootInfo event xcb_generic_event_t unsigned long int properties_size since 5.0 use event(xcb_generic_event_t*, NET::Properties*, NET::Properties2*) Class NETStrut use NETExtendedStrut Member NETWinInfo event xcb_generic_event_t unsigned long int properties_size since 5.0 use event(xcb_generic_event_t*, NET::Properties*, NET::Properties2*) Member NETWinInfo NETWinInfo xcb_connection_t xcb_window_t window xcb_window_t rootWindow NET::Properties properties Role role Client since 5.0 use above ctor Member NETWinInfo setStrut NETStrut strut use setExtendedStrut() Set the strut for the application window Member NETWinInfo strut const use strutPartial() Returns the strut specified by this client</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KSelectionOwner</field>
    <field name="url">classKSelectionOwner.html</field>
    <field name="keywords">KSelectionOwner</field>
    <field name="text">The selection atom is passed to the constructor claim() attemps to claim ownership of the selection release() gives up the selection ownership Signal lostOwnership() is emitted when the selection is claimed by another owner ICCCM manager selection owner This class is only useful on the xcb platform On other platforms the code is only functional if the constructor overloads taking an xcb_connection_t are used In case you inherit from this class ensure that you don t use xcb and/or XLib without verifying the platform</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KSelectionOwner::claimedOwnership</field>
    <field name="args">()</field>
    <field name="url">classKSelectionOwner.html#a850f95606e259ec5782a34dee81151d9</field>
    <field name="keywords">claimedOwnership KSelectionOwner::claimedOwnership KSelectionOwner</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KSelectionOwner::failedToClaimOwnership</field>
    <field name="args">()</field>
    <field name="url">classKSelectionOwner.html#a587d9e43f65da3743bca98b3194628d5</field>
    <field name="keywords">failedToClaimOwnership KSelectionOwner::failedToClaimOwnership KSelectionOwner</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KSelectionOwner::lostOwnership</field>
    <field name="args">()</field>
    <field name="url">classKSelectionOwner.html#ab8ce76fb9a643416242ba45420c8b260</field>
    <field name="keywords">lostOwnership KSelectionOwner::lostOwnership KSelectionOwner</field>
    <field name="text">IMPORTANT It s not safe to delete the instance in a slot connected to this signal</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionOwner::KSelectionOwner</field>
    <field name="args">(xcb_atom_t selection, int screen=-1, QObject *parent=NULL)</field>
    <field name="url">classKSelectionOwner.html#a9ba1fbe497e7bec7f8e5cc9003134bd7</field>
    <field name="keywords">KSelectionOwner KSelectionOwner::KSelectionOwner KSelectionOwner</field>
    <field name="text">selection atom representing the manager selection screen X screen or for default parent parent object or NULL if there is none</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionOwner::KSelectionOwner</field>
    <field name="args">(const char *selection, int screen=-1, QObject *parent=NULL)</field>
    <field name="url">classKSelectionOwner.html#a46cd860a3e62f3599bc37b483eecfefc</field>
    <field name="keywords">KSelectionOwner KSelectionOwner::KSelectionOwner KSelectionOwner</field>
    <field name="text">selection name of the manager selection screen X screen or for default parent parent object or NULL if there is none</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionOwner::KSelectionOwner</field>
    <field name="args">(xcb_atom_t selection, xcb_connection_t *c, xcb_window_t root, QObject *parent=Q_NULLPTR)</field>
    <field name="url">classKSelectionOwner.html#a50f2c2bf5fbdad7b7c6ee4cb886e703a</field>
    <field name="keywords">KSelectionOwner KSelectionOwner::KSelectionOwner KSelectionOwner</field>
    <field name="text">Otherwise this constructor behaves like the similar one without the xcb_connection_t selection atom representing the manager selection c the xcb connection this KSelectionWatcher should use root the root window this KSelectionWatcher should use parent parent object or NULL if there is none 5.8</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionOwner::KSelectionOwner</field>
    <field name="args">(const char *selection, xcb_connection_t *c, xcb_window_t root, QObject *parent=Q_NULLPTR)</field>
    <field name="url">classKSelectionOwner.html#a2583b55cc0c30c7e4feb0c485757bd29</field>
    <field name="keywords">KSelectionOwner KSelectionOwner::KSelectionOwner KSelectionOwner</field>
    <field name="text">Otherwise this constructor behaves like the similar one without the xcb_connection_t selection name of the manager selection c the xcb connection this KSelectionWatcher should use root the root window this KSelectionWatcher should use parent parent object or NULL if there is none 5.8</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionOwner::~KSelectionOwner</field>
    <field name="args">()</field>
    <field name="url">classKSelectionOwner.html#a15673162d1adae28e855bc9d8c2691ba</field>
    <field name="keywords">KSelectionOwner::~KSelectionOwner KSelectionOwner</field>
    <field name="text">Calls release()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionOwner::claim</field>
    <field name="args">(bool force, bool force_kill=true)</field>
    <field name="url">classKSelectionOwner.html#aae7de74271def7cfb3075b69eecbb5c2</field>
    <field name="keywords">claim KSelectionOwner::claim KSelectionOwner</field>
    <field name="text">This function returns immediately but it may take up to one second for the claim to succeed or fail at which point either the claimedOwnership() or failedToClaimOwnership() signal is emitted The claim will not be completed until the caller has returned to the event loop If force is false and the selection is already owned the selection is not claimed and failedToClaimOwnership() is emitted If force is true and the selection is owned by another client the client will be given one second to relinquish ownership of the selection If force_kill is true and the previous owner fails to disown the selection in time it will be forcibly killed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionOwner::filterEvent</field>
    <field name="args">(void *ev_P)</field>
    <field name="url">classKSelectionOwner.html#ae1abaab1b03179ed7a6e59fd4660f6ca</field>
    <field name="keywords">filterEvent KSelectionOwner::filterEvent KSelectionOwner</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionOwner::ownerWindow</field>
    <field name="args">() const</field>
    <field name="url">classKSelectionOwner.html#a4070624e3733be27195f4e34b2e66880</field>
    <field name="keywords">ownerWindow KSelectionOwner::ownerWindow KSelectionOwner</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionOwner::release</field>
    <field name="args">()</field>
    <field name="url">classKSelectionOwner.html#a209f6993ec407d44c5c363c3b75558a3</field>
    <field name="keywords">release KSelectionOwner::release KSelectionOwner</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionOwner::timerEvent</field>
    <field name="args">(QTimerEvent *event)</field>
    <field name="url">classKSelectionOwner.html#a5eadd8947302aea87abcfd5b7345cc10</field>
    <field name="keywords">timerEvent KSelectionOwner::timerEvent KSelectionOwner</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionOwner::genericReply</field>
    <field name="args">(xcb_atom_t target, xcb_atom_t property, xcb_window_t requestor)</field>
    <field name="url">classKSelectionOwner.html#a0ede03a255665f463fef6b2c5eae3eae</field>
    <field name="keywords">genericReply KSelectionOwner::genericReply KSelectionOwner</field>
    <field name="text">If true is returned the event is filtered out Called when a SelectionRequest event is received A reply should be sent using the selection handling mechanism described in the ICCCM section 2 target requested target type property property to use for the reply data requestor requestor window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionOwner::getAtoms</field>
    <field name="args">()</field>
    <field name="url">classKSelectionOwner.html#aba05e98469b6178d4aca6c518f8596a5</field>
    <field name="keywords">getAtoms KSelectionOwner::getAtoms KSelectionOwner</field>
    <field name="text">The default implementation must be called if reimplemented This method may be called repeatedly</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionOwner::replyTargets</field>
    <field name="args">(xcb_atom_t property, xcb_window_t requestor)</field>
    <field name="url">classKSelectionOwner.html#ae56f45844958115800d8a34015294b89</field>
    <field name="keywords">replyTargets KSelectionOwner::replyTargets KSelectionOwner</field>
    <field name="text">The default implementation announces the required targets MULTIPLE TIMESTAMP and TARGETS</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionOwner::setData</field>
    <field name="args">(uint32_t extra1, uint32_t extra2)</field>
    <field name="url">classKSelectionOwner.html#a23943c7a17a0452a6dfb61708f680c57</field>
    <field name="keywords">setData KSelectionOwner::setData KSelectionOwner</field>
    <field name="text">These extra data are in data.l 3 and data.l 4 fields of the XClientMessage</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KSelectionWatcher</field>
    <field name="url">classKSelectionWatcher.html</field>
    <field name="keywords">KSelectionWatcher</field>
    <field name="text">It emits signal newOwner() when a new owner claim the selection and emits lostOwner() when the selection ownership is given up To find out current owner of the selection owner() can be used ICCCM manager selection watching This class is only useful on the xcb platform On other platforms the code is only functional if the constructor overloads taking an xcb_connection_t are used In case you inherit from this class ensure that you don t use xcb and/or XLib without verifying the platform</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KSelectionWatcher::lostOwner</field>
    <field name="args">()</field>
    <field name="url">classKSelectionWatcher.html#aca52c5ecffb48923807f6aa79eebe11b</field>
    <field name="keywords">lostOwner KSelectionWatcher::lostOwner KSelectionWatcher</field>
    <field name="text">there s no owner Note that the selection may be immediatelly claimed again so the newOwner() signal may be emitted right after this one It s safe to delete the instance in a slot connected to this signal</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KSelectionWatcher::newOwner</field>
    <field name="args">(xcb_window_t owner)</field>
    <field name="url">classKSelectionWatcher.html#a1a881308a9a3adde593ef16044907f0e</field>
    <field name="keywords">newOwner KSelectionWatcher::newOwner KSelectionWatcher</field>
    <field name="text">owner the new owner of the selection</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionWatcher::KSelectionWatcher</field>
    <field name="args">(xcb_atom_t selection, int screen=-1, QObject *parent=NULL)</field>
    <field name="url">classKSelectionWatcher.html#acf708d83e63f2a22bed3218459358fb2</field>
    <field name="keywords">KSelectionWatcher KSelectionWatcher::KSelectionWatcher KSelectionWatcher</field>
    <field name="text">selection atom representing the manager selection screen X screen or for default parent parent object or NULL if there is none</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionWatcher::KSelectionWatcher</field>
    <field name="args">(const char *selection, int screen=-1, QObject *parent=NULL)</field>
    <field name="url">classKSelectionWatcher.html#ae4cab470a9133063db2b7118a552d406</field>
    <field name="keywords">KSelectionWatcher KSelectionWatcher::KSelectionWatcher KSelectionWatcher</field>
    <field name="text">selection name of the manager selection screen X screen or for default parent parent object or NULL if there is none</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionWatcher::KSelectionWatcher</field>
    <field name="args">(xcb_atom_t selection, xcb_connection_t *c, xcb_window_t root, QObject *parent=Q_NULLPTR)</field>
    <field name="url">classKSelectionWatcher.html#ae816d65596d60f37dbeea798d48a5e27</field>
    <field name="keywords">KSelectionWatcher KSelectionWatcher::KSelectionWatcher KSelectionWatcher</field>
    <field name="text">Otherwise this constructor behaves like the similar one without the xcb_connection_t selection atom representing the manager selection c the xcb connection this KSelectionWatcher should use root the root window this KSelectionWatcher should use 5.8</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionWatcher::KSelectionWatcher</field>
    <field name="args">(const char *selection, xcb_connection_t *c, xcb_window_t root, QObject *parent=Q_NULLPTR)</field>
    <field name="url">classKSelectionWatcher.html#a09cd63e700cd01ba5f04f2374ee8209f</field>
    <field name="keywords">KSelectionWatcher KSelectionWatcher::KSelectionWatcher KSelectionWatcher</field>
    <field name="text">Otherwise this constructor behaves like the similar one without the xcb_connection_t selection name of the manager selection c the xcb connection this KSelectionWatcher should use root the root window this KSelectionWatcher should use 5.8</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionWatcher::filterEvent</field>
    <field name="args">(void *ev_P)</field>
    <field name="url">classKSelectionWatcher.html#a6834171daf84f90e055514ecb9102d2f</field>
    <field name="keywords">filterEvent KSelectionWatcher::filterEvent KSelectionWatcher</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSelectionWatcher::owner</field>
    <field name="args">()</field>
    <field name="url">classKSelectionWatcher.html#a38fb4d7370bf7aeca691a676e292e76c</field>
    <field name="keywords">owner KSelectionWatcher::owner KSelectionWatcher</field>
    <field name="text">Note that if the event informing about the owner change is still in the input queue newOwner() might have been emitted yet</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KStartupInfo</field>
    <field name="url">classKStartupInfo.html</field>
    <field name="keywords">KStartupInfo</field>
    <field name="text">This class can be used to send information about started application change the information and receive this information For detailed description see kdelibs/kdecore/README.kstartupinfo You usually don t need to use this class for sending the notification information as KDE libraries should do this when an application is started e.g KRun class For receiving the startup notification info create an instance and connect to its slots It will automatically detect started applications and when they are ready KStartupInfoId KStartupInfoData Lubos Lunak</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KStartupInfo::startup_t</field>
    <field name="url">classKStartupInfo.html#a14ff94e935414facd7bea4177eb15843</field>
    <field name="keywords">startup_t KStartupInfo::startup_t KStartupInfo</field>
    <field name="text">NoMatch the window doesn t match any existing startup notification Match the window matches an existing startup notification CantDetect unable to detect if the window matches any existing startup notification</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KStartupInfo::gotNewStartup</field>
    <field name="args">(const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</field>
    <field name="url">classKStartupInfo.html#ac29b6cd75f0bdccd369c154ccec3a151</field>
    <field name="keywords">gotNewStartup KStartupInfo::gotNewStartup KStartupInfo</field>
    <field name="text">a new application is being started id the notification identification data the notification data</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KStartupInfo::gotRemoveStartup</field>
    <field name="args">(const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</field>
    <field name="url">classKStartupInfo.html#ab9787fe944af2b30199be271603300d3</field>
    <field name="keywords">gotRemoveStartup KStartupInfo::gotRemoveStartup KStartupInfo</field>
    <field name="text">id the notification identification data the notification data</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KStartupInfo::gotStartupChange</field>
    <field name="args">(const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</field>
    <field name="url">classKStartupInfo.html#ac1855325159c211974108c8ae8a20be4</field>
    <field name="keywords">gotStartupChange KStartupInfo::gotStartupChange KStartupInfo</field>
    <field name="text">id the notification identification data the notification data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::KStartupInfo</field>
    <field name="args">(int flags, QObject *parent=0)</field>
    <field name="url">classKStartupInfo.html#af2a53237d3ab8da943acab51e5387105</field>
    <field name="keywords">KStartupInfo KStartupInfo::KStartupInfo KStartupInfo</field>
    <field name="text">The various flags passed may be CleanOnCantDetect when a new unknown window appears all startup notifications for applications that are not compliant with the startup protocol are removed DisableKWinModule KWinModule which is normally used to detect new windows is disabled With this flag checkStartup() must be called in order to check newly mapped windows AnnounceSilenceChanges normally startup notifications are when they re silenced and when they re resumed With this flag the change is normally announced with gotStartupChange() flags OR-ed combination of flags parent the parent of this QObject can be 0 for no parent</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::KStartupInfo</field>
    <field name="args">(bool clean_on_cantdetect, QObject *parent=0)</field>
    <field name="url">classKStartupInfo.html#ac6c746f4d2985e3f2ba025390e032682</field>
    <field name="keywords">KStartupInfo KStartupInfo::KStartupInfo KStartupInfo</field>
    <field name="text">clean_on_cantdetect if true and a new unknown window appears removes all notification for applications that are not compliant with the app startup protocol parent the parent of this QObject can be 0 for no parent since 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::checkStartup</field>
    <field name="args">(WId w)</field>
    <field name="url">classKStartupInfo.html#a61c33eed3ee1f4d69cfb5060f7e508e6</field>
    <field name="keywords">checkStartup KStartupInfo::checkStartup KStartupInfo</field>
    <field name="text">w the window id to check the result of the operation</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::checkStartup</field>
    <field name="args">(WId w, KStartupInfoId &amp;id)</field>
    <field name="url">classKStartupInfo.html#aad51fa046e21cced1f4a91b2417e56ce</field>
    <field name="keywords">checkStartup KStartupInfo::checkStartup KStartupInfo</field>
    <field name="text">w the window id to check id if found the id of the startup notification will be written here the result of the operation</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::checkStartup</field>
    <field name="args">(WId w, KStartupInfoData &amp;data)</field>
    <field name="url">classKStartupInfo.html#a4cfb827f30b159551567af8ed0d350af</field>
    <field name="keywords">checkStartup KStartupInfo::checkStartup KStartupInfo</field>
    <field name="text">w the window id to check data if found the data of the startup notification will be written here the result of the operation</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::checkStartup</field>
    <field name="args">(WId w, KStartupInfoId &amp;id, KStartupInfoData &amp;data)</field>
    <field name="url">classKStartupInfo.html#a05213eec48eba279c0ac25db55107dd3</field>
    <field name="keywords">checkStartup KStartupInfo::checkStartup KStartupInfo</field>
    <field name="text">w the window id to check id if found the id of the startup notification will be written here data if found the data of the startup notification will be written here the result of the operation</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::setTimeout</field>
    <field name="args">(unsigned int secs)</field>
    <field name="url">classKStartupInfo.html#a032993d3c40202e63745c4aebb9f642d</field>
    <field name="keywords">setTimeout KStartupInfo::setTimeout KStartupInfo</field>
    <field name="text">secs the new timeout in seconds</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::appStarted</field>
    <field name="args">()</field>
    <field name="url">classKStartupInfo.html#a24a4ac3828a06c65af8090d48a49e5d1</field>
    <field name="keywords">appStarted KStartupInfo::appStarted KStartupInfo</field>
    <field name="text">If you do not map a toplevel window then startup notification will not disappear for the application until a timeout You can use this as an alternative method in this case</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::appStarted</field>
    <field name="args">(const QByteArray &amp;startup_id)</field>
    <field name="url">classKStartupInfo.html#aab7534b0cad55284ff055442952c64ab</field>
    <field name="keywords">appStarted KStartupInfo::appStarted KStartupInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::createNewStartupId</field>
    <field name="args">()</field>
    <field name="url">classKStartupInfo.html#afaa020835e66680c117747c8ad313ace</field>
    <field name="keywords">createNewStartupId KStartupInfo::createNewStartupId KStartupInfo</field>
    <field name="text">The id includes properly setup user timestamp On the X11 platform the current timestamp will be fetched from the X-Server If the caller has an adaquat timestamp e.g from a QMouseEvent it should prefer using createNewStartupIdForTimestamp to not trigger a roundtrip to the X-Server createNewStartupIdForTimestamp</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::createNewStartupIdForTimestamp</field>
    <field name="args">(quint32 timestamp)</field>
    <field name="url">classKStartupInfo.html#a9ac981279a3a7a3d87ae4a917a5a8ac8</field>
    <field name="keywords">createNewStartupIdForTimestamp KStartupInfo::createNewStartupIdForTimestamp KStartupInfo</field>
    <field name="text">timestamp The timestamp for the startup id createNewStartupId 5.5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::currentStartupIdEnv</field>
    <field name="args">()</field>
    <field name="url">classKStartupInfo.html#ad0eb915555d8c3d984bde4b32406387e</field>
    <field name="keywords">currentStartupIdEnv KStartupInfo::currentStartupIdEnv KStartupInfo</field>
    <field name="text">Note that KApplication constructor unsets the variable and you have to use KApplication::startupId the current startup notification identification</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::resetStartupEnv</field>
    <field name="args">()</field>
    <field name="url">classKStartupInfo.html#a8e8cfdb428f0e74c915d5577fb0dfe10</field>
    <field name="keywords">resetStartupEnv KStartupInfo::resetStartupEnv KStartupInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::sendChange</field>
    <field name="args">(const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</field>
    <field name="url">classKStartupInfo.html#a6dd6155a22a516f6f84eab701f115dc1</field>
    <field name="keywords">sendChange KStartupInfo::sendChange KStartupInfo</field>
    <field name="text">This is used for updating the notification info if no notification for this identification exists it s ignored id the id of the application data the application s data true if successful false otherwise KStartupInfoId KStartupInfoData</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::sendChangeX</field>
    <field name="args">(Display *dpy, const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</field>
    <field name="url">classKStartupInfo.html#a8a1e24c1d875f70c0dffc21aff246b0b</field>
    <field name="keywords">sendChangeX KStartupInfo::sendChangeX KStartupInfo</field>
    <field name="text">dpy the display of the application id the id of the application data the application s data true if successful false otherwise since 5.18 use sendChangeXcb</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::sendChangeXcb</field>
    <field name="args">(xcb_connection_t *conn, int screen, const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</field>
    <field name="url">classKStartupInfo.html#aa19be0587024f62ebf3e7d1dfebce853</field>
    <field name="keywords">sendChangeXcb KStartupInfo::sendChangeXcb KStartupInfo</field>
    <field name="text">conn the xcb connection of the application screen The x11 screen the connection belongs to id the id of the application data the application s data true if successful false otherwise 5.18</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::sendFinish</field>
    <field name="args">(const KStartupInfoId &amp;id)</field>
    <field name="url">classKStartupInfo.html#ad91e250a9fa439d2fc95299e68e3a4bd</field>
    <field name="keywords">sendFinish KStartupInfo::sendFinish KStartupInfo</field>
    <field name="text">id the id of the application true if successful false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::sendFinish</field>
    <field name="args">(const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</field>
    <field name="url">classKStartupInfo.html#a30d700c99705bf17888769e80fd175e6</field>
    <field name="keywords">sendFinish KStartupInfo::sendFinish KStartupInfo</field>
    <field name="text">PIDs of processes for this startup notification that exited id the id of the application data the application s data true if successful false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::sendFinishX</field>
    <field name="args">(Display *dpy, const KStartupInfoId &amp;id)</field>
    <field name="url">classKStartupInfo.html#aad4f7c3403919e32ab55a418d408649e</field>
    <field name="keywords">sendFinishX KStartupInfo::sendFinishX KStartupInfo</field>
    <field name="text">dpy the display of the application id the id of the application true if successful false otherwise since 5.18 use sendFinishXcb</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::sendFinishX</field>
    <field name="args">(Display *dpy, const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</field>
    <field name="url">classKStartupInfo.html#a1e003438b913cf0f2696b76917b45104</field>
    <field name="keywords">sendFinishX KStartupInfo::sendFinishX KStartupInfo</field>
    <field name="text">dpy the display of the application id the id of the application data the application s data true if successful false otherwise since 5.18 use sendFinishXcb</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::sendFinishXcb</field>
    <field name="args">(xcb_connection_t *conn, int screen, const KStartupInfoId &amp;id)</field>
    <field name="url">classKStartupInfo.html#adb81d1aae0254d760b9690e131f46953</field>
    <field name="keywords">sendFinishXcb KStartupInfo::sendFinishXcb KStartupInfo</field>
    <field name="text">conn the xcb connection of the application screen The x11 screen the connection belongs to id the id of the application true if successful false otherwise 5.18</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::sendFinishXcb</field>
    <field name="args">(xcb_connection_t *conn, int screen, const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</field>
    <field name="url">classKStartupInfo.html#a409f88737d27a05eca43f1e90dab196e</field>
    <field name="keywords">sendFinishXcb KStartupInfo::sendFinishXcb KStartupInfo</field>
    <field name="text">conn the xcb connection of the application screen The x11 screen the connection belongs to id the id of the application data the application s data true if successful false otherwise 5.18</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::sendStartup</field>
    <field name="args">(const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</field>
    <field name="url">classKStartupInfo.html#a617accc81738e76713bbd3956ddec9b2</field>
    <field name="keywords">sendStartup KStartupInfo::sendStartup KStartupInfo</field>
    <field name="text">If no notification for this identification exists yet it is created otherwise it s updated Note that the name field in data is required id the id of the application data the application s data true if successful false otherwise KStartupInfoId KStartupInfoData</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::sendStartupX</field>
    <field name="args">(Display *dpy, const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</field>
    <field name="url">classKStartupInfo.html#a3f29c95250e817abb314196612b4ed25</field>
    <field name="keywords">sendStartupX KStartupInfo::sendStartupX KStartupInfo</field>
    <field name="text">dpy the display of the application Note that the name field in data is required id the id of the application data the application s data true if successful false otherwise since 5.18 use sendStartupXcb</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::sendStartupXcb</field>
    <field name="args">(xcb_connection_t *conn, int screen, const KStartupInfoId &amp;id, const KStartupInfoData &amp;data)</field>
    <field name="url">classKStartupInfo.html#a759c076313d219487aeddff6158afad8</field>
    <field name="keywords">sendStartupXcb KStartupInfo::sendStartupXcb KStartupInfo</field>
    <field name="text">conn the xcb connection of the application Note that the name field in data is required screen The x11 screen the connection belongs to id the id of the application data the application s data true if successful false otherwise 5.18</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::setNewStartupId</field>
    <field name="args">(QWidget *window, const QByteArray &amp;startup_id)</field>
    <field name="url">classKStartupInfo.html#a3cee4fc464df9f18276d98609ebf1df1</field>
    <field name="keywords">setNewStartupId KStartupInfo::setNewStartupId KStartupInfo</field>
    <field name="text">when khelpcenter opens new URL in its window The window can be either an already existing and visible window or a new one before being shown Note that this function is usually needed only when a window is reused</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::setStartupId</field>
    <field name="args">(const QByteArray &amp;startup_id)</field>
    <field name="url">classKStartupInfo.html#acd274ab683025f22236d2b84b4a4f31b</field>
    <field name="keywords">setStartupId KStartupInfo::setStartupId KStartupInfo</field>
    <field name="text">startup_id the startup notification identifier KStartupInfo::setNewStartupId</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::setWindowStartupId</field>
    <field name="args">(WId window, const QByteArray &amp;id)</field>
    <field name="url">classKStartupInfo.html#a819a12e54346d8be814a914d7d3874be</field>
    <field name="keywords">setWindowStartupId KStartupInfo::setWindowStartupId KStartupInfo</field>
    <field name="text">window the id of the window id the startup notification id</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::silenceStartup</field>
    <field name="args">(bool silence)</field>
    <field name="url">classKStartupInfo.html#af919bb5570da1e00457746b6f4aa1512</field>
    <field name="keywords">silenceStartup KStartupInfo::silenceStartup KStartupInfo</field>
    <field name="text">To temporarily suspend and resume the notification use this function Note that this is cumulative i.e after suspending twice you have to resume twice</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::startupId</field>
    <field name="args">()</field>
    <field name="url">classKStartupInfo.html#adde69db7956c38bc9ed967e9c3a53def</field>
    <field name="keywords">startupId KStartupInfo::startupId KStartupInfo</field>
    <field name="text">the startup notification identifier</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfo::windowStartupId</field>
    <field name="args">(WId w)</field>
    <field name="url">classKStartupInfo.html#a67aea070b0f1e62bb94ffab41a21f17f</field>
    <field name="keywords">windowStartupId KStartupInfo::windowStartupId KStartupInfo</field>
    <field name="text">w the id of the window the startup notification id Can be null if not found</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KStartupInfoData</field>
    <field name="url">classKStartupInfoData.html</field>
    <field name="keywords">KStartupInfoData</field>
    <field name="text">Such data include the icon of the starting application the desktop on which the application should start the binary name of the application etc KStartupInfo KStartupInfoId Lubos Lunak</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::KStartupInfoData</field>
    <field name="args">()</field>
    <field name="url">classKStartupInfoData.html#a9edda3b026a9a378d6135dd30d15ff8c</field>
    <field name="keywords">KStartupInfoData KStartupInfoData::KStartupInfoData KStartupInfoData</field>
    <field name="text">Initializes all the data to their default empty values</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::KStartupInfoData</field>
    <field name="args">(const KStartupInfoData &amp;data)</field>
    <field name="url">classKStartupInfoData.html#a338d92816a97f5e7dbfff0ff764c030c</field>
    <field name="keywords">KStartupInfoData KStartupInfoData::KStartupInfoData KStartupInfoData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::addPid</field>
    <field name="args">(pid_t pid)</field>
    <field name="url">classKStartupInfoData.html#a56c615764a16ff59f0c7c9c959541f01</field>
    <field name="keywords">addPid KStartupInfoData::addPid KStartupInfoData</field>
    <field name="text">It may be used to increase the chance that the windows created by the starting application will be detected correctly and also for detecting if the application has quit without creating any window pid the PID to add</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::applicationId</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoData.html#a38d4c2b67c08834599063981c5b13244</field>
    <field name="keywords">applicationId KStartupInfoData::applicationId KStartupInfoData</field>
    <field name="text">This information should be used only to identify the application not to read any additional information 4.5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::bin</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoData.html#a56ad26342e192054a6a2763a3fca4fe5</field>
    <field name="keywords">bin KStartupInfoData::bin KStartupInfoData</field>
    <field name="text">the new binary name of the application</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::description</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoData.html#a0df7d1584a815bb94044feacf19721d9</field>
    <field name="keywords">description KStartupInfoData::description KStartupInfoData</field>
    <field name="text">the name of the startup notificaiton or an empty string if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::desktop</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoData.html#ad5d3ebf5fd09a7d044f91dc99af6b852</field>
    <field name="keywords">desktop KStartupInfoData::desktop KStartupInfoData</field>
    <field name="text">the desktop for the startup notification</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::findDescription</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoData.html#a01d06ae1051b0c9df0416a79b5413e09</field>
    <field name="keywords">findDescription KStartupInfoData::findDescription KStartupInfoData</field>
    <field name="text">If it s not available it returns name() the description of the startup notification</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::findIcon</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoData.html#a4317bc047f2ca0500dfd7b06f2e15c7c</field>
    <field name="keywords">findIcon KStartupInfoData::findIcon KStartupInfoData</field>
    <field name="text">the name of the startup notification s icon or the name of the binary if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::findName</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoData.html#afae41a4879cc46ba2a1a62d1cf293a33</field>
    <field name="keywords">findName KStartupInfoData::findName KStartupInfoData</field>
    <field name="text">If it s not available it tries to use other information binary name the name of the startup notification</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::findWMClass</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoData.html#ab8af773df3b00e6aaff08a887ee88e9e</field>
    <field name="keywords">findWMClass KStartupInfoData::findWMClass KStartupInfoData</field>
    <field name="text">the WM_CLASS value for the startup notification or the binary name if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::hostname</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoData.html#ad214b03eb80e723371f790b40378735d</field>
    <field name="keywords">hostname KStartupInfoData::hostname KStartupInfoData</field>
    <field name="text">the hostname</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::icon</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoData.html#ab71155cf06e00922a4b0d5d085e675da</field>
    <field name="keywords">icon KStartupInfoData::icon KStartupInfoData</field>
    <field name="text">the name of the icon or an empty string if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::is_pid</field>
    <field name="args">(pid_t pid) const</field>
    <field name="url">classKStartupInfoData.html#ac8e1174148071589e7d9b0563b4a8dfa</field>
    <field name="keywords">is_pid KStartupInfoData::is_pid KStartupInfoData</field>
    <field name="text">true if the given pid is in the list of PIDs for the startup notification</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::launchedBy</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoData.html#a5dcbf9ac0d61500d7e2f58cc679daa8b</field>
    <field name="keywords">launchedBy KStartupInfoData::launchedBy KStartupInfoData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::name</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoData.html#a56acb5aa1abf867fd5424b13f6954931</field>
    <field name="keywords">name KStartupInfoData::name KStartupInfoData</field>
    <field name="text">the name of the startup notification or an empty string if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::pids</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoData.html#a563eb5182a230eca07c63e1539bd757e</field>
    <field name="keywords">pids KStartupInfoData::pids KStartupInfoData</field>
    <field name="text">the list of all PIDs</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::screen</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoData.html#a7846757b83742d9dd58876f2b4e78807</field>
    <field name="keywords">screen KStartupInfoData::screen KStartupInfoData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::setApplicationId</field>
    <field name="args">(const QString &amp;desktop)</field>
    <field name="url">classKStartupInfoData.html#ae259c826f465e01264d38d419e086c2c</field>
    <field name="keywords">setApplicationId KStartupInfoData::setApplicationId KStartupInfoData</field>
    <field name="text">4.5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::setBin</field>
    <field name="args">(const QString &amp;bin)</field>
    <field name="url">classKStartupInfoData.html#a8e60c173fae73691b1e3a1da73700fe2</field>
    <field name="keywords">setBin KStartupInfoData::setBin KStartupInfoData</field>
    <field name="text">kcontrol bin the new binary name of the application</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::setDescription</field>
    <field name="args">(const QString &amp;descr)</field>
    <field name="url">classKStartupInfoData.html#a9fb7724d3c359562c7d9494c673d7935</field>
    <field name="keywords">setDescription KStartupInfoData::setDescription KStartupInfoData</field>
    <field name="text">Launching Control Center I.e name() describes what is being started while description() is the actual action performed by the starting</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::setDesktop</field>
    <field name="args">(int desktop)</field>
    <field name="url">classKStartupInfoData.html#a3500a60366743243e99395f2b238c55b</field>
    <field name="keywords">setDesktop KStartupInfoData::setDesktop KStartupInfoData</field>
    <field name="text">the desktop on which the starting application should appear desktop the desktop for the startup notification</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::setHostname</field>
    <field name="args">(const QByteArray &amp;hostname=QByteArray())</field>
    <field name="url">classKStartupInfoData.html#a20413af8c5ac69e93990a26fd9f587f2</field>
    <field name="keywords">setHostname KStartupInfoData::setHostname KStartupInfoData</field>
    <field name="text">It s necessary to set it if PIDs are set hostname the application s hostname If it s a null string the current hostname is used</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::setIcon</field>
    <field name="args">(const QString &amp;icon)</field>
    <field name="url">classKStartupInfoData.html#a816dc1cf00e28d5eee3b791c8f5671e3</field>
    <field name="keywords">setIcon KStartupInfoData::setIcon KStartupInfoData</field>
    <field name="text">kcontrol icon the name of the icon</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::setLaunchedBy</field>
    <field name="args">(WId window)</field>
    <field name="url">classKStartupInfoData.html#a64b3ca4dbf552fc6cfd64c5073955a0d</field>
    <field name="keywords">setLaunchedBy KStartupInfoData::setLaunchedBy KStartupInfoData</field>
    <field name="text">window window ID of the toplevel window that is responsible for this startup</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::setName</field>
    <field name="args">(const QString &amp;name)</field>
    <field name="url">classKStartupInfoData.html#a588b6ca52626ba82745b88a93bd49095</field>
    <field name="keywords">setName KStartupInfoData::setName KStartupInfoData</field>
    <field name="text">Control Center</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::setScreen</field>
    <field name="args">(int screen)</field>
    <field name="url">classKStartupInfoData.html#aec44e055c5fc59e423c0570322daf54a</field>
    <field name="keywords">setScreen KStartupInfoData::setScreen KStartupInfoData</field>
    <field name="text">This is usually not necessary to set as it s set by default to QX11Info::screen()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::setSilent</field>
    <field name="args">(TriState state)</field>
    <field name="url">classKStartupInfoData.html#ac7ff8e4196cd31399cc2cd595a373e2e</field>
    <field name="keywords">setSilent KStartupInfoData::setSilent KStartupInfoData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::setWMClass</field>
    <field name="args">(const QByteArray &amp;wmclass)</field>
    <field name="url">classKStartupInfoData.html#a7864480d3e4e7cee7bae4ead7d832ec7</field>
    <field name="keywords">setWMClass KStartupInfoData::setWMClass KStartupInfoData</field>
    <field name="text">wmclass the WM_CLASS value for the startup notification</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::setXinerama</field>
    <field name="args">(int xinerama)</field>
    <field name="url">classKStartupInfoData.html#a60cb9fb47133a98ee58ea43df3eed95c</field>
    <field name="keywords">setXinerama KStartupInfoData::setXinerama KStartupInfoData</field>
    <field name="text">the screeen on which the starting application should appear xinerama the Xinerama screen for the startup notification</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::silent</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoData.html#a2b77d6c80498bee93e30f81274a6c6f0</field>
    <field name="keywords">silent KStartupInfoData::silent KStartupInfoData</field>
    <field name="text">KStartupInfoData::Yes if visual feedback is silenced</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::update</field>
    <field name="args">(const KStartupInfoData &amp;data)</field>
    <field name="url">classKStartupInfoData.html#a1d53526c146286cf41b8345424863c28</field>
    <field name="keywords">update KStartupInfoData::update KStartupInfoData</field>
    <field name="text">Some data such as the desktop or the name won t be rewritten if already set data the data to update</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::WMClass</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoData.html#a1b9c5deec86c39b7ebe91c5fd30bcd0a</field>
    <field name="keywords">WMClass KStartupInfoData::WMClass KStartupInfoData</field>
    <field name="text">the WM_CLASS value for the startup notification or empty if not set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoData::xinerama</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoData.html#a87e6e506c45ff8e2c43ad38d7654e534</field>
    <field name="keywords">xinerama KStartupInfoData::xinerama KStartupInfoData</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KStartupInfoId</field>
    <field name="url">classKStartupInfoId.html</field>
    <field name="keywords">KStartupInfoId</field>
    <field name="text">Every existing notification about a starting application has its own unique identification that s used to identify and manipulate the notification KStartupInfo KStartupInfoData Lubos Lunak</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoId::KStartupInfoId</field>
    <field name="args">()</field>
    <field name="url">classKStartupInfoId.html#a3f69c9d94b4dfd25a1483cb0a215dde0</field>
    <field name="keywords">KStartupInfoId KStartupInfoId::KStartupInfoId KStartupInfoId</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoId::KStartupInfoId</field>
    <field name="args">(const KStartupInfoId &amp;data)</field>
    <field name="url">classKStartupInfoId.html#a8e9b3d0ad3d3682757bc361ea1115789</field>
    <field name="keywords">KStartupInfoId KStartupInfoId::KStartupInfoId KStartupInfoId</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoId::id</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoId.html#ace2c7bae0af21240c4d8ff051c2d2a9b</field>
    <field name="keywords">id KStartupInfoId::id KStartupInfoId</field>
    <field name="text">the identification string for the notification</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoId::initId</field>
    <field name="args">(const QByteArray &amp;id=&quot;&quot;)</field>
    <field name="url">classKStartupInfoId.html#a045a22f63825a7c822986b0845ba382d</field>
    <field name="keywords">initId KStartupInfoId::initId KStartupInfoId</field>
    <field name="text">id the new identification for no notification or to read the environment variable</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoId::isNull</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoId.html#a2f224b13339629f01c60118221c462c0</field>
    <field name="keywords">isNull KStartupInfoId::isNull KStartupInfoId</field>
    <field name="text">true if this object doesn t represent a valid notification identification</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoId::operator!=</field>
    <field name="args">(const KStartupInfoId &amp;id) const</field>
    <field name="url">classKStartupInfoId.html#a8b4f6744e05d2153f8cb4b71d6ebeabf</field>
    <field name="keywords">operator!= KStartupInfoId::operator!= KStartupInfoId</field>
    <field name="text">true if the notification identifications are different</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoId::operator==</field>
    <field name="args">(const KStartupInfoId &amp;id) const</field>
    <field name="url">classKStartupInfoId.html#aa915963c1662df06399a48485d6f444d</field>
    <field name="keywords">operator== KStartupInfoId::operator== KStartupInfoId</field>
    <field name="text">true if the notification identifications are the same</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoId::setupStartupEnv</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoId.html#a287905c62ddda413f3833d9eadd63cb2</field>
    <field name="keywords">setupStartupEnv KStartupInfoId::setupStartupEnv KStartupInfoId</field>
    <field name="text">true if successful false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KStartupInfoId::timestamp</field>
    <field name="args">() const</field>
    <field name="url">classKStartupInfoId.html#a3144702f80c23fbc3f19f2c242684593</field>
    <field name="keywords">timestamp KStartupInfoId::timestamp KStartupInfoId</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KWindowInfo</field>
    <field name="url">classKWindowInfo.html</field>
    <field name="keywords">KWindowInfo</field>
    <field name="text">It provides the information for the current state when a KWindowInfo instance gets created The instance does not get updated when the window changes To get update about window changes connect to the windowChanged signal of KWindowSystem and create a new KWindowInfo instance to reflect the current state KWindowInfo does not encapsulate all information about the window One needs to request which information is required by passing the appropriate NET::Property and NET::Property2 flags to the constructor Please refer to the documentation of the methods to see which flags are required This is done to limit the interaction with the underlying windowing system as fetching the information can cause several context switches and roundtrips to a server instance e.g when using the X11 platform Please note that KWindowInfo is an abstraction of the underlying windowing system inspired by the X11 platform Thus not all concepts apply to all platforms and some methods might return a default value for some platforms Example usage of this class illustrated by monitoring a QWidget for change of the demands attention window state</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::KWindowInfo</field>
    <field name="args">(WId window, NET::Properties properties, NET::Properties2 properties2=0)</field>
    <field name="url">classKWindowInfo.html#adc84f679cb7e41a6d8162aec269b5d1c</field>
    <field name="keywords">KWindowInfo KWindowInfo::KWindowInfo KWindowInfo</field>
    <field name="text">Only the information requested through the properties and properties2 parameters are fetched Refer to the methods you are interested in to see which flags to pass window The platform specific window identifier properties Bitmask of NET::Property properties2 Bitmask of NET::Property2</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::KWindowInfo</field>
    <field name="args">(const KWindowInfo &amp;)</field>
    <field name="url">classKWindowInfo.html#a705ac028602f1fe7ed38567bb71d3688</field>
    <field name="keywords">KWindowInfo KWindowInfo::KWindowInfo KWindowInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::actionSupported</field>
    <field name="args">(NET::Action action) const</field>
    <field name="url">classKWindowInfo.html#a68ec3e0dc25380ce64dfe1c52b2e116a</field>
    <field name="keywords">actionSupported KWindowInfo::actionSupported KWindowInfo</field>
    <field name="text">On platform X11 the supported actions are set by the window manager and can differ depending on the window manager Requires NET::WM2AllowedActions passed as properties2 parameter to the constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::activities</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#aea17f97765e326e1714a36c9788a54b1</field>
    <field name="keywords">activities KWindowInfo::activities KWindowInfo</field>
    <field name="text">The Plasma workspace allows the user to separate her work into different activities by assigning windows documents etc to the specific ones An activity is an abstract concept whose meaning can differ from one user to another Typical examples of activities are etc If the list is empty or contains a null UUID the window is on all activities Requires NET::WM2Activities passed as properties parameter to the constructor Activities are only supported on Plasma Workspace on X11 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::clientMachine</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#aed9f10e12e08ae0cc1968583002d322d</field>
    <field name="keywords">clientMachine KWindowInfo::clientMachine KWindowInfo</field>
    <field name="text">On platform X11 this is the value of the WM_CLIENT_MACHINE property Requires NET::WM2ClientMachine passed as properties2 parameter to the constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::desktop</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#ae03a929a10f29d4ccce69e688b3fa7ec</field>
    <field name="keywords">desktop KWindowInfo::desktop KWindowInfo</field>
    <field name="text">If the window is on all desktops NET::OnAllDesktops is returned You should prefer using isOnDesktop() Requires NET::WMDesktop passed as properties parameter to the constructor isOnDesktop()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::extendedStrut</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#a40a5b7dabca5ea6ab4f9ac9ae4d27ac1</field>
    <field name="keywords">extendedStrut KWindowInfo::extendedStrut KWindowInfo</field>
    <field name="text">Requires NET::WM2ExtendedStrut passed as properties2 parameter to the constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::frameGeometry</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#ae8c23daf062a483ac3a6ec553470d8c7</field>
    <field name="keywords">frameGeometry KWindowInfo::frameGeometry KWindowInfo</field>
    <field name="text">including the window decoration Requires NET::WMFrameExtents passed as properties parameter to the constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::geometry</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#ac5670640b20828266c07286b70829dc9</field>
    <field name="keywords">geometry KWindowInfo::geometry KWindowInfo</field>
    <field name="text">Requires NET::WMGeometry passed as properties parameter to the constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::groupLeader</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#abfdd340d7324bcf88d025a55a3a37690</field>
    <field name="keywords">groupLeader KWindowInfo::groupLeader KWindowInfo</field>
    <field name="text">Requires NET::WM2GroupLeader passed as properties2 parameter to the constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::hasState</field>
    <field name="args">(NET::States s) const</field>
    <field name="url">classKWindowInfo.html#aa4707b17298ab0973c9b8dac7ed36f1b</field>
    <field name="keywords">hasState KWindowInfo::hasState KWindowInfo</field>
    <field name="text">Requires NET::WMState passed as properties parameter to the constructor NET::State</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::iconName</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#a2ee6ce92e378eb8789cec17ab8b17641</field>
    <field name="keywords">iconName KWindowInfo::iconName KWindowInfo</field>
    <field name="text">Note that this has nothing to do with normal icons but with an representation of the window Requires NET::WMIconName passed as properties parameter to the constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::isMinimized</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#a4be2fef752258d396af6104d271a88b0</field>
    <field name="keywords">isMinimized KWindowInfo::isMinimized KWindowInfo</field>
    <field name="text">Note that it is true only if the window is truly minimized not shaded or on another virtual desktops which makes it different from mappingState() NET::Iconic or QWidget::isMinimized() Requires NET::WMState and NET::XAWMState passed as properties parameter to the constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::isOnCurrentDesktop</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#a89434dbcf60ce201c0c46573980134dc</field>
    <field name="keywords">isOnCurrentDesktop KWindowInfo::isOnCurrentDesktop KWindowInfo</field>
    <field name="text">Requires NET::WMDesktop passed as properties parameter to the constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::isOnDesktop</field>
    <field name="args">(int desktop) const</field>
    <field name="url">classKWindowInfo.html#a9dde0a0631cac332fe96b95cfa8d8d50</field>
    <field name="keywords">isOnDesktop KWindowInfo::isOnDesktop KWindowInfo</field>
    <field name="text">Requires NET::WMDesktop passed as properties parameter to the constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::mappingState</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#ae720a1e8679a1adfc02b927b0037b0c1</field>
    <field name="keywords">mappingState KWindowInfo::mappingState KWindowInfo</field>
    <field name="text">Note that it s very likely that you don t want to use this function and use isOnDesktop() isMinimized() etc instead Requires NET::XAWMState passed as properties parameter to the constructor NET::MappingState isOnDesktop() isMinimzed()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::name</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#afc6f59d43d679a5fa8f560170c879c28</field>
    <field name="keywords">name KWindowInfo::name KWindowInfo</field>
    <field name="text">The difference to visibleName() is that this is the name provided by the application without any modifications by the window manager You should often use visibleName() instead Requires NET::WMName passed as properties parameter to the constructor visibleName()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::onAllDesktops</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#ac224751c24789d922725b6c50085da6e</field>
    <field name="keywords">onAllDesktops KWindowInfo::onAllDesktops KWindowInfo</field>
    <field name="text">A window is on all desktops if desktop() returns NET::OnAllDesktops Requires NET::WMDesktop passed as properties parameter to the constructor desktop()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::operator=</field>
    <field name="args">(const KWindowInfo &amp;)</field>
    <field name="url">classKWindowInfo.html#ab5374fc1a7a8198efd737de8cbc9a681</field>
    <field name="keywords">operator= KWindowInfo::operator= KWindowInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::state</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#a48bbaefcad809f73568ba6969571e3eb</field>
    <field name="keywords">state KWindowInfo::state KWindowInfo</field>
    <field name="text">Requires NET::WMState passed as properties parameter to the constructor NET::State</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::transientFor</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#aad98ddb3d808cec12f3499d216d85736</field>
    <field name="keywords">transientFor KWindowInfo::transientFor KWindowInfo</field>
    <field name="text">On platform X11 this is the value of the WM_TRANSIENT_FOR property Requires NET::WM2TransientFor passed as properties2 parameter to the constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::valid</field>
    <field name="args">(bool withdrawn_is_valid=false) const</field>
    <field name="url">classKWindowInfo.html#a58c5456a62f368141345398f4dfc1570</field>
    <field name="keywords">valid KWindowInfo::valid KWindowInfo</field>
    <field name="text">In case the window does not exist false is returned Also if there is no appropriate implementation for KWindowInfo on the current windowing system platform this method returns false In that case all methods return a default value and thus it is recommended to check whether valid returns true withdrawn_is_valid if true windows in the withdrawn state i.e not managed are also considered This is usually not the case</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::visibleIconName</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#ab7291dae67367b69f5fb0bd1f8a32875</field>
    <field name="keywords">visibleIconName KWindowInfo::visibleIconName KWindowInfo</field>
    <field name="text">Note that this has nothing to do with normal icons but with an representation of the window Requires NET::WMVisibleIconName passed as properties parameter to the constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::visibleIconNameWithState</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#a7bafc600d62b801e3e3ea13ea1d32fe6</field>
    <field name="keywords">visibleIconNameWithState KWindowInfo::visibleIconNameWithState KWindowInfo</field>
    <field name="text">This is a simple convenience function that returns the visible iconic name but with parentheses around minimized windows Note that this has nothing to do with normal icons Requires NET::WMVisibleIconName NET::WMState and NET::XAWMState passed as properties parameter to the constructor the window iconic name with state visibleIconName()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::visibleName</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#a53ae7f64eee6096141799f443bd081f2</field>
    <field name="keywords">visibleName KWindowInfo::visibleName KWindowInfo</field>
    <field name="text">The visible name differs from the name by including possible 2 appended when there are two or more windows with the same name Requires NET::WMVisibleName passed as properties parameter to the constructor name()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::visibleNameWithState</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#a9163b91f7face2e5e13b6e882e5536f9</field>
    <field name="keywords">visibleNameWithState KWindowInfo::visibleNameWithState KWindowInfo</field>
    <field name="text">This is a simple convenience function that returns the visible name but with parentheses around minimized windows Requires NET::WMVisibleName NET::WMState and NET::XAWMState passed as properties parameter to the constructor the window name with state visibleName()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::win</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#a9e4c106503288083d159992cadd5b21b</field>
    <field name="keywords">win KWindowInfo::win KWindowInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::windowClassClass</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#ae16f46d1ba6520a3936db54287a4ba86</field>
    <field name="keywords">windowClassClass KWindowInfo::windowClassClass KWindowInfo</field>
    <field name="text">On platform X11 this is part of the WM_CLASS property Requires NET::WM2WindowClass passed as properties2 parameter to the constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::windowClassName</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#a7083f26c428038e42abd4e4519a06dd7</field>
    <field name="keywords">windowClassName KWindowInfo::windowClassName KWindowInfo</field>
    <field name="text">On platform X11 this is part of the WM_CLASS property Requires NET::WM2WindowClass passed as properties2 parameter to the constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::windowRole</field>
    <field name="args">() const</field>
    <field name="url">classKWindowInfo.html#a78798a3ef2dea881734c4030cadf6421</field>
    <field name="keywords">windowRole KWindowInfo::windowRole KWindowInfo</field>
    <field name="text">On platform X11 this is the value of the WM_WINDOW_ROLE property Requires NET::WM2WindowRole passed as properties2 parameter to the constructor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowInfo::windowType</field>
    <field name="args">(NET::WindowTypes supported_types) const</field>
    <field name="url">classKWindowInfo.html#acc1d8c4ef5646fd4146ae6d5b6b68805</field>
    <field name="keywords">windowType KWindowInfo::windowType KWindowInfo</field>
    <field name="text">The argument should be all window types your application supports Requires NET::WMWindowType passed as properties parameter to the constructor NET::WindowType NET::WindowTypeMask</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KWindowSystem</field>
    <field name="url">classKWindowSystem.html</field>
    <field name="keywords">KWindowSystem</field>
    <field name="text">The class KWindowSystem provides information about the state of the window manager and allows asking the window manager to change them using a more high-level interface than the NETWinInfo/NETRootInfo lowlevel classes Because of limitiations of the way Qt is implemented on Mac OSX the WId s returned by methods in this class are not compatible with those expected by other Qt methods So while it should be fine to pass WId s retrieved by for example calling the winId method on a QWidget to methods in this class the reverse is not true You should never pass a WId obtained from this class to a Qt method accepting a WId parameter Class for interaction with the window manager Matthias Ettrich</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KWindowSystem::IconSource</field>
    <field name="url">classKWindowSystem.html#a86168b00f991cee85271c8b69e0a77f7</field>
    <field name="keywords">IconSource KWindowSystem::IconSource KWindowSystem</field>
    <field name="text">They are tried from the best until an icon is found NETWM from property from the window manager specification WMHints from WMHints property ClassHint load icon after getting name from the classhint XApp load the standard X icon last fallback</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KWindowSystem::NETWM</field>
    <field name="url">classKWindowSystem.html#a86168b00f991cee85271c8b69e0a77f7a6cc04cbba240aefd9ee3a035ad93ea6e</field>
    <field name="keywords">NETWM KWindowSystem::NETWM KWindowSystem</field>
    <field name="text">read from property from the window manager specification</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KWindowSystem::WMHints</field>
    <field name="url">classKWindowSystem.html#a86168b00f991cee85271c8b69e0a77f7aa1b0d90d4e2db239a19b0b61ec06436c</field>
    <field name="keywords">WMHints KWindowSystem::WMHints KWindowSystem</field>
    <field name="text">read from WMHints property</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KWindowSystem::ClassHint</field>
    <field name="url">classKWindowSystem.html#a86168b00f991cee85271c8b69e0a77f7a393e0a4fb3ec498116064e228a840682</field>
    <field name="keywords">ClassHint KWindowSystem::ClassHint KWindowSystem</field>
    <field name="text">load icon after getting name from the classhint</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KWindowSystem::XApp</field>
    <field name="url">classKWindowSystem.html#a86168b00f991cee85271c8b69e0a77f7abde190c2ccb6883e088e265301b501f7</field>
    <field name="keywords">XApp KWindowSystem::XApp KWindowSystem</field>
    <field name="text">load the standard X icon last fallback</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KWindowSystem::Platform</field>
    <field name="url">classKWindowSystem.html#afc13d8221eb73625f708554f786cd6e7</field>
    <field name="keywords">Platform KWindowSystem::Platform KWindowSystem</field>
    <field name="text">platform 5.25</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KWindowSystem::Platform::Unknown</field>
    <field name="url">classKWindowSystem.html#afc13d8221eb73625f708554f786cd6e7a88183b946cc5f0e8c96b2e66e1c74a7e</field>
    <field name="keywords">Unknown KWindowSystem::Platform::Unknown KWindowSystem</field>
    <field name="text">A platform unknown to the application is used</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KWindowSystem::Platform::X11</field>
    <field name="url">classKWindowSystem.html#afc13d8221eb73625f708554f786cd6e7ad21ab1ce30c9c7735c0591317f50ab85</field>
    <field name="keywords">X11 KWindowSystem::Platform::X11 KWindowSystem</field>
    <field name="text">The xcb/X11 windowing system platorm</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KWindowSystem::Platform::Wayland</field>
    <field name="url">classKWindowSystem.html#afc13d8221eb73625f708554f786cd6e7abd9c6c9ca372721e187caeb1654b4209</field>
    <field name="keywords">Wayland KWindowSystem::Platform::Wayland KWindowSystem</field>
    <field name="text">The Wayland windowing system platform</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">NET::Action</field>
    <field name="url">classNET.html#afa9281c19ea7e280327b01b2c6236928</field>
    <field name="keywords">Action NET::Action NET Action NET::Action NET Action NET::Action NET Action NET::Action NET</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">NET::DesktopLayoutCorner</field>
    <field name="url">classNET.html#a3359c32a21f438e0e6564f26179e458f</field>
    <field name="keywords">DesktopLayoutCorner NET::DesktopLayoutCorner NET DesktopLayoutCorner NET::DesktopLayoutCorner NET DesktopLayoutCorner NET::DesktopLayoutCorner NET DesktopLayoutCorner NET::DesktopLayoutCorner NET</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">NET::Direction</field>
    <field name="url">classNET.html#ae29e22ac36b48d9cbcb28727db5258ea</field>
    <field name="keywords">Direction NET::Direction NET Direction NET::Direction NET Direction NET::Direction NET Direction NET::Direction NET</field>
    <field name="text">When a client wants the Window Manager to start a WMMoveResize it should specify one of TopLeft Top TopRight Right BottomRight Bottom BottomLeft Left Move for movement only KeyboardSize resizing via keyboard KeyboardMove movement via keyboard</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">NET::MappingState</field>
    <field name="url">classNET.html#afb6eef2d78c27ea693652a30d2a07c05</field>
    <field name="keywords">MappingState NET::MappingState NET MappingState NET::MappingState NET MappingState NET::MappingState NET MappingState NET::MappingState NET</field>
    <field name="text">The class automatically watches the mapping state of the client windows and uses the mapping state to determine how to set/change different properties Note that this is very lowlevel and you most probably don t want to use this state</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Visible</field>
    <field name="url">classNET.html#afb6eef2d78c27ea693652a30d2a07c05ac19143b5e0209f618a5518c11ac38689</field>
    <field name="keywords">Visible NET::Visible NET Visible NET::Visible NET Visible NET::Visible NET Visible NET::Visible NET</field>
    <field name="text">indicates the client window is visible to the user</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Withdrawn</field>
    <field name="url">classNET.html#afb6eef2d78c27ea693652a30d2a07c05a7648a58c155ce6b36e05031c7ab0a4f6</field>
    <field name="keywords">Withdrawn NET::Withdrawn NET Withdrawn NET::Withdrawn NET Withdrawn NET::Withdrawn NET Withdrawn NET::Withdrawn NET</field>
    <field name="text">indicates that neither the client window nor its icon is visible</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Iconic</field>
    <field name="url">classNET.html#afb6eef2d78c27ea693652a30d2a07c05a2d6d6784820519475f0177ea2cf3e04d</field>
    <field name="keywords">Iconic NET::Iconic NET Iconic NET::Iconic NET Iconic NET::Iconic NET Iconic NET::Iconic NET</field>
    <field name="text">indicates that the client window is not visible but its icon is This can be when the window is minimized or when it s on a different virtual desktop See also NET::Hidden</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">NET::Orientation</field>
    <field name="url">classNET.html#afac5b26cfb4e28ec2f18cd5cc9e1989a</field>
    <field name="keywords">Orientation NET::Orientation NET Orientation NET::Orientation NET Orientation NET::Orientation NET Orientation NET::Orientation NET</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">NET::Property</field>
    <field name="url">classNET.html#aaea92340c4b9901e05aa7748587dcde5</field>
    <field name="keywords">Property NET::Property NET Property NET::Property NET Property NET::Property NET Property NET::Property NET</field>
    <field name="text">Clients and Window Managers must define which properties/protocols it wants to support Root/Desktop window properties and protocols Supported ClientList ClientListStacking NumberOfDesktops DesktopGeometry DesktopViewport CurrentDesktop DesktopNames ActiveWindow WorkArea SupportingWMCheck VirtualRoots CloseWindow WMMoveResize Client window properties and protocols WMName WMVisibleName WMDesktop WMWindowType WMState WMStrut obsoleted by WM2ExtendedStrut WMGeometry WMFrameExtents WMIconGeometry WMIcon WMIconName WMVisibleIconName WMHandledIcons WMPid WMPing ICCCM properties provided for convenience XAWMState</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">NET::Property2</field>
    <field name="url">classNET.html#a851d15d9aa748b5f76e44b1e2d7c79b0</field>
    <field name="keywords">Property2 NET::Property2 NET Property2 NET::Property2 NET Property2 NET::Property2 NET Property2 NET::Property2 NET</field>
    <field name="text">This enum is an extension to NET::Property because them enum is limited only to 32 bits Client window properties and protocols WM2UserTime WM2StartupId WM2TransientFor mainwindow for the window WM_TRANSIENT_FOR WM2GroupLeader group leader window_group in WM_HINTS WM2AllowedActions WM2RestackWindow WM2MoveResizeWindow WM2ExtendedStrut WM2TemporaryRules internal for kstart WM2WindowClass WM_CLASS WM2WindowRole WM_WINDOW_ROLE WM2ClientMachine WM_CLIENT_MACHINE WM2ShowingDesktop WM2Opacity _NET_WM_WINDOW_OPACITY WM2DesktopLayout _NET_DESKTOP_LAYOUT WM2FullPlacement _NET_WM_FULL_PLACEMENT WM2FullscreenMonitors _NET_WM_FULLSCREEN_MONITORS WM2Urgency urgency hint in WM_HINTS see ICCCM 4.1.2.4 WM2Input input hint input in WM_HINTS see ICCCM 4.1.2.4 WM2Protocols see NET::Protocol WM2InitialMappingState initial state hint of WM_HINTS see ICCCM 4.1.2.4 WM2IconPixmap icon pixmap and mask in WM_HINTS see ICCCM 4.1.2.4 WM2OpaqueRegion</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">NET::Protocol</field>
    <field name="url">classNET.html#a02aad36d7abf162c186cdb2b0e6e961b</field>
    <field name="keywords">Protocol NET::Protocol NET Protocol NET::Protocol NET Protocol NET::Protocol NET Protocol NET::Protocol NET</field>
    <field name="text">See ICCCM 4.1.2.7 5.3</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::TakeFocusProtocol</field>
    <field name="url">classNET.html#a02aad36d7abf162c186cdb2b0e6e961ba88aab7af44c314e40504d05bea9790d4</field>
    <field name="keywords">TakeFocusProtocol NET::TakeFocusProtocol NET TakeFocusProtocol NET::TakeFocusProtocol NET TakeFocusProtocol NET::TakeFocusProtocol NET TakeFocusProtocol NET::TakeFocusProtocol NET</field>
    <field name="text">WM_TAKE_FOCUS</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::DeleteWindowProtocol</field>
    <field name="url">classNET.html#a02aad36d7abf162c186cdb2b0e6e961ba55ebbf6a31791adca72f460b7e13eb39</field>
    <field name="keywords">DeleteWindowProtocol NET::DeleteWindowProtocol NET DeleteWindowProtocol NET::DeleteWindowProtocol NET DeleteWindowProtocol NET::DeleteWindowProtocol NET DeleteWindowProtocol NET::DeleteWindowProtocol NET</field>
    <field name="text">WM_DELETE_WINDOW</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::PingProtocol</field>
    <field name="url">classNET.html#a02aad36d7abf162c186cdb2b0e6e961bac01fb7a0b7834f7e2385755472ca95cd</field>
    <field name="keywords">PingProtocol NET::PingProtocol NET PingProtocol NET::PingProtocol NET PingProtocol NET::PingProtocol NET PingProtocol NET::PingProtocol NET</field>
    <field name="text">_NET_WM_PING from EWMH</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::SyncRequestProtocol</field>
    <field name="url">classNET.html#a02aad36d7abf162c186cdb2b0e6e961baed283a207c3f69d29bf9898e5e09968e</field>
    <field name="keywords">SyncRequestProtocol NET::SyncRequestProtocol NET SyncRequestProtocol NET::SyncRequestProtocol NET SyncRequestProtocol NET::SyncRequestProtocol NET SyncRequestProtocol NET::SyncRequestProtocol NET</field>
    <field name="text">_NET_WM_SYNC_REQUEST from EWMH</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::ContextHelpProtocol</field>
    <field name="url">classNET.html#a02aad36d7abf162c186cdb2b0e6e961ba818d0a3ae2e6f85ecdd47c7f60ca60b7</field>
    <field name="keywords">ContextHelpProtocol NET::ContextHelpProtocol NET ContextHelpProtocol NET::ContextHelpProtocol NET ContextHelpProtocol NET::ContextHelpProtocol NET ContextHelpProtocol NET::ContextHelpProtocol NET</field>
    <field name="text">_NET_WM_CONTEXT_HELP NON STANDARD!</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">NET::RequestSource</field>
    <field name="url">classNET.html#ab8310daed1ca6a628b77ad4f92eeae74</field>
    <field name="keywords">RequestSource NET::RequestSource NET RequestSource NET::RequestSource NET RequestSource NET::RequestSource NET RequestSource NET::RequestSource NET</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::FromUnknown</field>
    <field name="url">classNET.html#ab8310daed1ca6a628b77ad4f92eeae74afa9b1fe54160f94efbbd36abf3817f6d</field>
    <field name="keywords">FromUnknown NET::FromUnknown NET FromUnknown NET::FromUnknown NET FromUnknown NET::FromUnknown NET FromUnknown NET::FromUnknown NET</field>
    <field name="text">indicates that the source of the request is unknown</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::FromApplication</field>
    <field name="url">classNET.html#ab8310daed1ca6a628b77ad4f92eeae74a7a242a3888a59f336a2c9091f046c204</field>
    <field name="keywords">FromApplication NET::FromApplication NET FromApplication NET::FromApplication NET FromApplication NET::FromApplication NET FromApplication NET::FromApplication NET</field>
    <field name="text">indicates that the request comes from a normal application</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::FromTool</field>
    <field name="url">classNET.html#ab8310daed1ca6a628b77ad4f92eeae74ae9b1014f038b95b825ed3a5a9adaf2d0</field>
    <field name="keywords">FromTool NET::FromTool NET FromTool NET::FromTool NET FromTool NET::FromTool NET FromTool NET::FromTool NET</field>
    <field name="text">indicated that the request comes from pager or similar tool</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">NET::Role</field>
    <field name="url">classNET.html#a5d6f825794e1d7e005d56cac269e7aa0</field>
    <field name="keywords">Role NET::Role NET Role NET::Role NET Role NET::Role NET Role NET::Role NET</field>
    <field name="text">This is used internally to determine how several action should be performed if at all</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Client</field>
    <field name="url">classNET.html#a5d6f825794e1d7e005d56cac269e7aa0a4fdc6016b721032a2bd8c5f9890f5f6d</field>
    <field name="keywords">Client NET::Client NET Client NET::Client NET Client NET::Client NET Client NET::Client NET</field>
    <field name="text">indicates that the application is a client application</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::WindowManager</field>
    <field name="url">classNET.html#a5d6f825794e1d7e005d56cac269e7aa0a949cb303dc6e1c81c0f6c7b2c66055c8</field>
    <field name="keywords">WindowManager NET::WindowManager NET WindowManager NET::WindowManager NET WindowManager NET::WindowManager NET WindowManager NET::WindowManager NET</field>
    <field name="text">indicates that the application is a window manager application</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">NET::State</field>
    <field name="url">classNET.html#a08dce7f5ea8a2a6d1d38aea3498f00ee</field>
    <field name="keywords">State NET::State NET State NET::State NET State NET::State NET State NET::State NET</field>
    <field name="text">To set the state of a window you ll typically do something like for example to not show the window on the taskbar and desktop pager winId() is a function of QWidget() Note that KeepAbove StaysOnTop and KeepBelow are meant as user preference and applications should avoid setting these states themselves</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Modal</field>
    <field name="url">classNET.html#a08dce7f5ea8a2a6d1d38aea3498f00eea59b7f512e7c7ff71430ad7349a32d91d</field>
    <field name="keywords">Modal NET::Modal NET Modal NET::Modal NET Modal NET::Modal NET Modal NET::Modal NET</field>
    <field name="text">indicates that this is a modal dialog box The WM_TRANSIENT_FOR hint MUST be set to indicate which window the dialog is a modal for or set to the root window if the dialog is a modal for its window group</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Sticky</field>
    <field name="url">classNET.html#a08dce7f5ea8a2a6d1d38aea3498f00eea091104e8b00c4b1a0cfb81ae186f3637</field>
    <field name="keywords">Sticky NET::Sticky NET Sticky NET::Sticky NET Sticky NET::Sticky NET Sticky NET::Sticky NET</field>
    <field name="text">indicates that the Window Manager SHOULD keep the window s position fixed on the screen even when the virtual desktop scrolls Note that this is different from being kept on all desktops</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::MaxVert</field>
    <field name="url">classNET.html#a08dce7f5ea8a2a6d1d38aea3498f00eea2b5dbc22e9e5f3a7a238fc0d9775b7bd</field>
    <field name="keywords">MaxVert NET::MaxVert NET MaxVert NET::MaxVert NET MaxVert NET::MaxVert NET MaxVert NET::MaxVert NET</field>
    <field name="text">indicates that the window is vertically maximized</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::MaxHoriz</field>
    <field name="url">classNET.html#a08dce7f5ea8a2a6d1d38aea3498f00eea05e760aabf98bbf0887e2f5adf4af5eb</field>
    <field name="keywords">MaxHoriz NET::MaxHoriz NET MaxHoriz NET::MaxHoriz NET MaxHoriz NET::MaxHoriz NET MaxHoriz NET::MaxHoriz NET</field>
    <field name="text">indicates that the window is horizontally maximized</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Max</field>
    <field name="url">classNET.html#a08dce7f5ea8a2a6d1d38aea3498f00eea11465696144d095ebe6d51085f7f47e6</field>
    <field name="keywords">Max NET::Max NET Max NET::Max NET Max NET::Max NET Max NET::Max NET</field>
    <field name="text">convenience value Equal to MaxVert MaxHoriz</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Shaded</field>
    <field name="url">classNET.html#a08dce7f5ea8a2a6d1d38aea3498f00eea2a7c8fed35a833f0b664fc577cb85015</field>
    <field name="keywords">Shaded NET::Shaded NET Shaded NET::Shaded NET Shaded NET::Shaded NET Shaded NET::Shaded NET</field>
    <field name="text">indicates that the window is shaded rolled-up</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::SkipTaskbar</field>
    <field name="url">classNET.html#a08dce7f5ea8a2a6d1d38aea3498f00eea4143fd2f9ab51548070993729951a5b4</field>
    <field name="keywords">SkipTaskbar NET::SkipTaskbar NET SkipTaskbar NET::SkipTaskbar NET SkipTaskbar NET::SkipTaskbar NET SkipTaskbar NET::SkipTaskbar NET</field>
    <field name="text">indicates that a window should not be included on a taskbar</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::KeepAbove</field>
    <field name="url">classNET.html#a08dce7f5ea8a2a6d1d38aea3498f00eea7b5e0fc7795fc0a66930fb0937035817</field>
    <field name="keywords">KeepAbove NET::KeepAbove NET KeepAbove NET::KeepAbove NET KeepAbove NET::KeepAbove NET KeepAbove NET::KeepAbove NET</field>
    <field name="text">indicates that a window should on top of most windows but below fullscreen windows</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::StaysOnTop</field>
    <field name="url">classNET.html#a08dce7f5ea8a2a6d1d38aea3498f00eeae5698354cff53f6e3aebdad9da826dd7</field>
    <field name="keywords">StaysOnTop NET::StaysOnTop NET StaysOnTop NET::StaysOnTop NET StaysOnTop NET::StaysOnTop NET StaysOnTop NET::StaysOnTop NET</field>
    <field name="text">This is an obsolete name for KeepAbove</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::SkipPager</field>
    <field name="url">classNET.html#a08dce7f5ea8a2a6d1d38aea3498f00eeaacf3a06dfb0c28d5ade1fb8f11ca06bc</field>
    <field name="keywords">SkipPager NET::SkipPager NET SkipPager NET::SkipPager NET SkipPager NET::SkipPager NET SkipPager NET::SkipPager NET</field>
    <field name="text">indicates that a window should not be included on a pager</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Hidden</field>
    <field name="url">classNET.html#a08dce7f5ea8a2a6d1d38aea3498f00eea9da0cfee6ad77ce1cb2d266543244eb6</field>
    <field name="keywords">Hidden NET::Hidden NET Hidden NET::Hidden NET Hidden NET::Hidden NET Hidden NET::Hidden NET</field>
    <field name="text">indicates that a window should not be visible on the screen e.g when minimised Only the window manager is allowed to change it</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::FullScreen</field>
    <field name="url">classNET.html#a08dce7f5ea8a2a6d1d38aea3498f00eea52c9fb05445b3724c1f3e02838d89e32</field>
    <field name="keywords">FullScreen NET::FullScreen NET FullScreen NET::FullScreen NET FullScreen NET::FullScreen NET FullScreen NET::FullScreen NET</field>
    <field name="text">indicates that a window should fill the entire screen and have no window decorations</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::KeepBelow</field>
    <field name="url">classNET.html#a08dce7f5ea8a2a6d1d38aea3498f00eeabb33d1a7ef6aeee3bd0e73cba9d8565d</field>
    <field name="keywords">KeepBelow NET::KeepBelow NET KeepBelow NET::KeepBelow NET KeepBelow NET::KeepBelow NET KeepBelow NET::KeepBelow NET</field>
    <field name="text">indicates that a window should be below most windows but above any desktop windows</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::DemandsAttention</field>
    <field name="url">classNET.html#a08dce7f5ea8a2a6d1d38aea3498f00eea3bb48830079a11c504153794ebbd4213</field>
    <field name="keywords">DemandsAttention NET::DemandsAttention NET DemandsAttention NET::DemandsAttention NET DemandsAttention NET::DemandsAttention NET DemandsAttention NET::DemandsAttention NET</field>
    <field name="text">there was an attempt to activate this window but the window manager prevented this E.g taskbar should mark such window specially to bring user s attention to this window Only the window manager is allowed to change it</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">NET::WindowType</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0</field>
    <field name="keywords">WindowType NET::WindowType NET WindowType NET::WindowType NET WindowType NET::WindowType NET WindowType NET::WindowType NET</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Unknown</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0a53e8de9bd4352248edad9137546aa4fe</field>
    <field name="keywords">Unknown NET::Unknown NET Unknown NET::Unknown NET Unknown NET::Unknown NET Unknown NET::Unknown NET</field>
    <field name="text">indicates that the window did not define a window type</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Normal</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0a47e478847ad30f9f71dcc5091cc0cead</field>
    <field name="keywords">Normal NET::Normal NET Normal NET::Normal NET Normal NET::Normal NET Normal NET::Normal NET</field>
    <field name="text">indicates that this is a normal top-level window</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Desktop</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0a379d353173caf50b0e3992e770ded7f6</field>
    <field name="keywords">Desktop NET::Desktop NET Desktop NET::Desktop NET Desktop NET::Desktop NET Desktop NET::Desktop NET</field>
    <field name="text">indicates a desktop feature This can include a single window containing desktop icons with the same dimensions as the screen allowing the desktop environment to have full control of the desktop without the need for proxying root window clicks</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Dock</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0aebde24b0e6a51a008f120edd01d84be1</field>
    <field name="keywords">Dock NET::Dock NET Dock NET::Dock NET Dock NET::Dock NET Dock NET::Dock NET</field>
    <field name="text">indicates a dock or panel feature</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Toolbar</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0aa34709d530baff911c780166f1a5ccfd</field>
    <field name="keywords">Toolbar NET::Toolbar NET Toolbar NET::Toolbar NET Toolbar NET::Toolbar NET Toolbar NET::Toolbar NET</field>
    <field name="text">indicates a toolbar window</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Menu</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0ab3858ccebaa5f5dc9fe176e1308de089</field>
    <field name="keywords">Menu NET::Menu NET Menu NET::Menu NET Menu NET::Menu NET Menu NET::Menu NET</field>
    <field name="text">indicates a pinnable torn-off menu window</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Dialog</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0a9ada102bbd3caf4377ecf8fa93fc7f1d</field>
    <field name="keywords">Dialog NET::Dialog NET Dialog NET::Dialog NET Dialog NET::Dialog NET Dialog NET::Dialog NET</field>
    <field name="text">indicates that this is a dialog window</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Override</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0a169c19bad87c970ee27283f2b3378b7e</field>
    <field name="keywords">Override NET::Override NET Override NET::Override NET Override NET::Override NET Override NET::Override NET</field>
    <field name="text">has unclear meaning and is KDE-only</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::TopMenu</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0a87b7bcd5109a36c8ffcf4705eb8865c6</field>
    <field name="keywords">TopMenu NET::TopMenu NET TopMenu NET::TopMenu NET TopMenu NET::TopMenu NET TopMenu NET::TopMenu NET</field>
    <field name="text">indicates a toplevel menu AKA macmenu This is a KDE extension to the _NET_WM_WINDOW_TYPE mechanism</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Utility</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0aed5a5fbe48af6bcd46122f9bda58f0c8</field>
    <field name="keywords">Utility NET::Utility NET Utility NET::Utility NET Utility NET::Utility NET Utility NET::Utility NET</field>
    <field name="text">indicates a utility window</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Splash</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0a07c62266f94f41d18b1f522c8f917333</field>
    <field name="keywords">Splash NET::Splash NET Splash NET::Splash NET Splash NET::Splash NET Splash NET::Splash NET</field>
    <field name="text">indicates that this window is a splash screen window</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::DropdownMenu</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0abbd1eb83dab2ebd2b1e1909f9bf03809</field>
    <field name="keywords">DropdownMenu NET::DropdownMenu NET DropdownMenu NET::DropdownMenu NET DropdownMenu NET::DropdownMenu NET DropdownMenu NET::DropdownMenu NET</field>
    <field name="text">indicates a dropdown menu from a menubar typically</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::PopupMenu</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0abf2250001e5fc6e63a42f8cc86fc8725</field>
    <field name="keywords">PopupMenu NET::PopupMenu NET PopupMenu NET::PopupMenu NET PopupMenu NET::PopupMenu NET PopupMenu NET::PopupMenu NET</field>
    <field name="text">indicates a popup menu a context menu typically</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Tooltip</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0a8e9c1aa0e9c868b99aa8b5c2008cc45c</field>
    <field name="keywords">Tooltip NET::Tooltip NET Tooltip NET::Tooltip NET Tooltip NET::Tooltip NET Tooltip NET::Tooltip NET</field>
    <field name="text">indicates a tooltip window</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::Notification</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0a0f3f4349eae1a7aca0e44da1f7f26984</field>
    <field name="keywords">Notification NET::Notification NET Notification NET::Notification NET Notification NET::Notification NET Notification NET::Notification NET</field>
    <field name="text">indicates a notification window</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::ComboBox</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0adf15e4b5b7558558fd4adb72866d5972</field>
    <field name="keywords">ComboBox NET::ComboBox NET ComboBox NET::ComboBox NET ComboBox NET::ComboBox NET ComboBox NET::ComboBox NET</field>
    <field name="text">indicates that the window is a list for a combobox</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::DNDIcon</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0a3f2e95b29fea412b74e23deb530bb7fc</field>
    <field name="keywords">DNDIcon NET::DNDIcon NET DNDIcon NET::DNDIcon NET DNDIcon NET::DNDIcon NET DNDIcon NET::DNDIcon NET</field>
    <field name="text">indicates a window that represents the dragged object during DND operation</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::OnScreenDisplay</field>
    <field name="url">classNET.html#a4b3115c0f40e7bc8e38119cc44dd60e0a7b858c5d7e10f407e7c6c2d91a57184f</field>
    <field name="keywords">OnScreenDisplay NET::OnScreenDisplay NET OnScreenDisplay NET::OnScreenDisplay NET OnScreenDisplay NET::OnScreenDisplay NET OnScreenDisplay NET::OnScreenDisplay NET</field>
    <field name="text">indicates an On Screen Display window such as volume feedback 5.6</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">NET::WindowTypeMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785a</field>
    <field name="keywords">WindowTypeMask NET::WindowTypeMask NET WindowTypeMask NET::WindowTypeMask NET WindowTypeMask NET::WindowTypeMask NET WindowTypeMask NET::WindowTypeMask NET</field>
    <field name="text">for the properties argument of the NETRootInfo constructor</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::NormalMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aa769ee5513fae44cbc23ea06d80203525</field>
    <field name="keywords">NormalMask NET::NormalMask NET NormalMask NET::NormalMask NET NormalMask NET::NormalMask NET NormalMask NET::NormalMask NET</field>
    <field name="text">Normal</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::DesktopMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aa78b084561fcb174877983d4941ba9747</field>
    <field name="keywords">DesktopMask NET::DesktopMask NET DesktopMask NET::DesktopMask NET DesktopMask NET::DesktopMask NET DesktopMask NET::DesktopMask NET</field>
    <field name="text">Desktop</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::DockMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aa5c1f0a7d7a70102c047db14a9de18dbc</field>
    <field name="keywords">DockMask NET::DockMask NET DockMask NET::DockMask NET DockMask NET::DockMask NET DockMask NET::DockMask NET</field>
    <field name="text">Dock</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::ToolbarMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aa5816df72b6aedb600f0977bbbb00d32c</field>
    <field name="keywords">ToolbarMask NET::ToolbarMask NET ToolbarMask NET::ToolbarMask NET ToolbarMask NET::ToolbarMask NET ToolbarMask NET::ToolbarMask NET</field>
    <field name="text">Toolbar</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::MenuMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aa302e156b07c1f151bcc6378cbf67c6dc</field>
    <field name="keywords">MenuMask NET::MenuMask NET MenuMask NET::MenuMask NET MenuMask NET::MenuMask NET MenuMask NET::MenuMask NET</field>
    <field name="text">Menu</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::DialogMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aa18e3bbea0b794f61a96af05ff590ae74</field>
    <field name="keywords">DialogMask NET::DialogMask NET DialogMask NET::DialogMask NET DialogMask NET::DialogMask NET DialogMask NET::DialogMask NET</field>
    <field name="text">Dialog</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::OverrideMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aa4246ace0fadfb0cc91dab281a6a5a93b</field>
    <field name="keywords">OverrideMask NET::OverrideMask NET OverrideMask NET::OverrideMask NET OverrideMask NET::OverrideMask NET OverrideMask NET::OverrideMask NET</field>
    <field name="text">Override</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::TopMenuMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aa9c7b7555c2856befb21489b361571a78</field>
    <field name="keywords">TopMenuMask NET::TopMenuMask NET TopMenuMask NET::TopMenuMask NET TopMenuMask NET::TopMenuMask NET TopMenuMask NET::TopMenuMask NET</field>
    <field name="text">TopMenu</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::UtilityMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aa3d1837de4f3b33786169b6d1734f62d9</field>
    <field name="keywords">UtilityMask NET::UtilityMask NET UtilityMask NET::UtilityMask NET UtilityMask NET::UtilityMask NET UtilityMask NET::UtilityMask NET</field>
    <field name="text">Utility</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::SplashMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aa3830935ae4e085f953886aa018f2fff6</field>
    <field name="keywords">SplashMask NET::SplashMask NET SplashMask NET::SplashMask NET SplashMask NET::SplashMask NET SplashMask NET::SplashMask NET</field>
    <field name="text">Splash</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::DropdownMenuMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aad53a4ceb2c6250fe15685753265b4b61</field>
    <field name="keywords">DropdownMenuMask NET::DropdownMenuMask NET DropdownMenuMask NET::DropdownMenuMask NET DropdownMenuMask NET::DropdownMenuMask NET DropdownMenuMask NET::DropdownMenuMask NET</field>
    <field name="text">DropdownMenu</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::PopupMenuMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aa5d2dbb4e6213a85653c2784f1c110a35</field>
    <field name="keywords">PopupMenuMask NET::PopupMenuMask NET PopupMenuMask NET::PopupMenuMask NET PopupMenuMask NET::PopupMenuMask NET PopupMenuMask NET::PopupMenuMask NET</field>
    <field name="text">PopupMenu</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::TooltipMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aa1db84820110a58c01ebdb9681460a782</field>
    <field name="keywords">TooltipMask NET::TooltipMask NET TooltipMask NET::TooltipMask NET TooltipMask NET::TooltipMask NET TooltipMask NET::TooltipMask NET</field>
    <field name="text">Tooltip</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::NotificationMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aa9e4aa0d1f656f17c73263424dd9d347c</field>
    <field name="keywords">NotificationMask NET::NotificationMask NET NotificationMask NET::NotificationMask NET NotificationMask NET::NotificationMask NET NotificationMask NET::NotificationMask NET</field>
    <field name="text">Notification</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::ComboBoxMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aaf58c7d2c12f39f237b2cabfa270e8ab5</field>
    <field name="keywords">ComboBoxMask NET::ComboBoxMask NET ComboBoxMask NET::ComboBoxMask NET ComboBoxMask NET::ComboBoxMask NET ComboBoxMask NET::ComboBoxMask NET</field>
    <field name="text">ComboBox</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::DNDIconMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aa4303bedea838238b651e755a56097d17</field>
    <field name="keywords">DNDIconMask NET::DNDIconMask NET DNDIconMask NET::DNDIconMask NET DNDIconMask NET::DNDIconMask NET DNDIconMask NET::DNDIconMask NET</field>
    <field name="text">DNDIcon</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::OnScreenDisplayMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aa31cb24e878e096c5dc302ae6d8285836</field>
    <field name="keywords">OnScreenDisplayMask NET::OnScreenDisplayMask NET OnScreenDisplayMask NET::OnScreenDisplayMask NET OnScreenDisplayMask NET::OnScreenDisplayMask NET OnScreenDisplayMask NET::OnScreenDisplayMask NET</field>
    <field name="text">NON STANDARD OnScreenDisplay 5.6</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">NET::AllTypesMask</field>
    <field name="url">classNET.html#a157924046678eec09044df42968b785aa8f1418a2a15499cc1ff2380b2d2ec34a</field>
    <field name="keywords">AllTypesMask NET::AllTypesMask NET AllTypesMask NET::AllTypesMask NET AllTypesMask NET::AllTypesMask NET AllTypesMask NET::AllTypesMask NET</field>
    <field name="text">All window types</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWindowSystem::activeWindowChanged</field>
    <field name="args">(WId id)</field>
    <field name="url">classKWindowSystem.html#adb83e45593ca6703576983d7daad08ce</field>
    <field name="keywords">activeWindowChanged KWindowSystem::activeWindowChanged KWindowSystem</field>
    <field name="text">id the id of the window that is active</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWindowSystem::compositingChanged</field>
    <field name="args">(bool enabled)</field>
    <field name="url">classKWindowSystem.html#a316fc199557d20dd187081070efddb82</field>
    <field name="keywords">compositingChanged KWindowSystem::compositingChanged KWindowSystem</field>
    <field name="text">Note that this signal may be emitted before any compositing plugins have been initialized in the window manager If you need to check if a specific compositing plugin such as the blur effect is enabled you should track that separately rather than test for it in a slot connected to this signal 4.7.1</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWindowSystem::currentDesktopChanged</field>
    <field name="args">(int desktop)</field>
    <field name="url">classKWindowSystem.html#a5ff0c02733368f3bacb05ea30a26ff87</field>
    <field name="keywords">currentDesktopChanged KWindowSystem::currentDesktopChanged KWindowSystem</field>
    <field name="text">desktop the number of the new desktop</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWindowSystem::desktopNamesChanged</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#a109eab9d2965462aad4e2c241738996f</field>
    <field name="keywords">desktopNamesChanged KWindowSystem::desktopNamesChanged KWindowSystem</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWindowSystem::numberOfDesktopsChanged</field>
    <field name="args">(int num)</field>
    <field name="url">classKWindowSystem.html#a30c446352309a2957d47e27e296f422c</field>
    <field name="keywords">numberOfDesktopsChanged KWindowSystem::numberOfDesktopsChanged KWindowSystem</field>
    <field name="text">num the new number of desktops</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWindowSystem::showingDesktopChanged</field>
    <field name="args">(bool showing)</field>
    <field name="url">classKWindowSystem.html#a6d97985ef9d827e44b978751d860bdf6</field>
    <field name="keywords">showingDesktopChanged KWindowSystem::showingDesktopChanged KWindowSystem</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWindowSystem::stackingOrderChanged</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#a067998d6a47bad2ccdd2ea129b434312</field>
    <field name="keywords">stackingOrderChanged KWindowSystem::stackingOrderChanged KWindowSystem</field>
    <field name="text">The new order can be obtained with stackingOrder()</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWindowSystem::strutChanged</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#a2a44b678bd812e2dbd34c80759a24e81</field>
    <field name="keywords">strutChanged KWindowSystem::strutChanged KWindowSystem</field>
    <field name="text">Usually just using the workAreaChanged() signal is sufficient</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWindowSystem::windowAdded</field>
    <field name="args">(WId id)</field>
    <field name="url">classKWindowSystem.html#acc8645a889810325a9ab6dbaf0b22935</field>
    <field name="keywords">windowAdded KWindowSystem::windowAdded KWindowSystem</field>
    <field name="text">id the id of the window</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWindowSystem::windowChanged</field>
    <field name="args">(WId id, NET::Properties properties, NET::Properties2 properties2)</field>
    <field name="url">classKWindowSystem.html#a7e8bde429a1be905fccd00644a4614ca</field>
    <field name="keywords">windowChanged KWindowSystem::windowChanged KWindowSystem</field>
    <field name="text">Carries the NET::Properties and NET::Properties2 that were changed id the id of the window properties the properties that were modified properties2 the properties2 that were modified 5.0</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWindowSystem::windowChanged</field>
    <field name="args">(WId id, const unsigned long *properties)</field>
    <field name="url">classKWindowSystem.html#ac8d368d83fa5e137f38e7c885d9a18ce</field>
    <field name="keywords">windowChanged KWindowSystem::windowChanged KWindowSystem</field>
    <field name="text">The properties parameter contains the NET properties that were modified see netwm_def.h First element are NET::Property values second element are NET::Property2 values i.e the format is the same like for the NETWinInfo class constructor id the id of the window properties the properties that were modified since 5.0 use windowChanged(WId, NET::Properties, NET::Properties2)</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWindowSystem::windowChanged</field>
    <field name="args">(WId id, unsigned int properties)</field>
    <field name="url">classKWindowSystem.html#afcbd835f78080bd94cb78fe754d08a49</field>
    <field name="keywords">windowChanged KWindowSystem::windowChanged KWindowSystem</field>
    <field name="text">The window changed The unsigned int parameter contains the NET properties that were modified see netwm_def.h id the id of the window properties the properties that were modified</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWindowSystem::windowChanged</field>
    <field name="args">(WId id)</field>
    <field name="url">classKWindowSystem.html#aa3c6faf243ef8faa9fb0d9c98bc5ca25</field>
    <field name="keywords">windowChanged KWindowSystem::windowChanged KWindowSystem</field>
    <field name="text">id the id of the window</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWindowSystem::windowRemoved</field>
    <field name="args">(WId id)</field>
    <field name="url">classKWindowSystem.html#af112465c2202a0f93f08f0e9d67e9e69</field>
    <field name="keywords">windowRemoved KWindowSystem::windowRemoved KWindowSystem</field>
    <field name="text">id the id of the window that has been removed</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWindowSystem::workAreaChanged</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#a8dc32dbad47905c847b940ccbda50c12</field>
    <field name="keywords">workAreaChanged KWindowSystem::workAreaChanged KWindowSystem</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::activateWindow</field>
    <field name="args">(WId win, long time=0)</field>
    <field name="url">classKWindowSystem.html#a7a04fd62d97ed3104e02bfa3ffa19ad5</field>
    <field name="keywords">activateWindow KWindowSystem::activateWindow KWindowSystem</field>
    <field name="text">There are two ways how to activate a window by calling activateWindow() and forceActiveWindow() Generally applications shouldn t make attempts to explicitly activate their windows and instead let the user to activate them In the special cases where this may be needed applications should use activateWindow() Window manager may consider whether this request wouldn t result in focus stealing which would be obtrusive and may refuse the request The usage of forceActiveWindow() is meant only for pagers and similar tools which represent direct user actions related to window manipulation Except for rare cases this request will be always honored and normal applications are forbidden to use it In case of problems consult the KWin README in the kdebase package kdebase/kwin/README or ask on the mailing list win the id of the window to make active time X server timestamp of the user activity that caused this request</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::activeWindow</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#ad905b23d7d88d9400915e1827d04d374</field>
    <field name="keywords">activeWindow KWindowSystem::activeWindow KWindowSystem</field>
    <field name="text">the window id of the active window or 0 if no window is active</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::allowedActionsSupported</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#a2d98510eb8aa7c5f23db31503fd7fcce</field>
    <field name="keywords">allowedActionsSupported KWindowSystem::allowedActionsSupported KWindowSystem</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::allowExternalProcessWindowActivation</field>
    <field name="args">(int pid=-1)</field>
    <field name="url">classKWindowSystem.html#a432d8f7835db2fae46b40d705f1a700a</field>
    <field name="keywords">allowExternalProcessWindowActivation KWindowSystem::allowExternalProcessWindowActivation KWindowSystem</field>
    <field name="text">Depending on the window manager the grant may only be temporary or for a single activation and it may require the current process to be the one ie the process with the input focus You should call this function before executing actions that may trigger the showing of a window or dialog in another process e.g a dbus signal or function call or any other inter-process notification mechanism This is mostly used on Windows where windows are not allowed to be raised and activated if their process is not the foreground one but it may also apply to other window managers pid if specified the grant only applies to windows belonging to the specific process By default a value of means all processes</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::clearState</field>
    <field name="args">(WId win, NET::States state)</field>
    <field name="url">classKWindowSystem.html#a3a2c28ca8a49efe2c628a04f754e4c86</field>
    <field name="keywords">clearState KWindowSystem::clearState KWindowSystem</field>
    <field name="text">Possible values are or ed combinations of NET::Modal NET::Sticky NET::MaxVert NET::MaxHoriz NET::Shaded NET::SkipTaskbar NET::SkipPager NET::Hidden NET::FullScreen NET::KeepAbove NET::KeepBelow NET::StaysOnTop win the id of the window state the flags that will be cleared</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::compositingActive</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#a8693714dc9f40b337fa6b63896e25d78</field>
    <field name="keywords">compositingActive KWindowSystem::compositingActive KWindowSystem</field>
    <field name="text">ARGB windows are supported effects will be provided etc</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::constrainViewportRelativePosition</field>
    <field name="args">(const QPoint &amp;pos)</field>
    <field name="url">classKWindowSystem.html#afe508447b01a6c57365dc4b1d8601fed</field>
    <field name="keywords">constrainViewportRelativePosition KWindowSystem::constrainViewportRelativePosition KWindowSystem</field>
    <field name="text">4.0.1 Checks the relative difference used to move a window will still be inside valid desktop area</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::currentDesktop</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#a84a94ec21041033d30e5895c9a8a4baa</field>
    <field name="keywords">currentDesktop KWindowSystem::currentDesktop KWindowSystem</field>
    <field name="text">the current virtual desktop</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::demandAttention</field>
    <field name="args">(WId win, bool set=true)</field>
    <field name="url">classKWindowSystem.html#af5e5085d1a4433701df8b9c0b00d6a5a</field>
    <field name="keywords">demandAttention KWindowSystem::demandAttention KWindowSystem</field>
    <field name="text">Instead of activating the window which could be obtrusive the window will be marked specially as demanding user s attention See also explanation in description of activateWindow() Note that it s usually better to use KNotifyClient</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::desktopName</field>
    <field name="args">(int desktop)</field>
    <field name="url">classKWindowSystem.html#ab8b7b5a354bfa9673ad3ed74546f424a</field>
    <field name="keywords">desktopName KWindowSystem::desktopName KWindowSystem</field>
    <field name="text">desktop the number of the desktop the name of the desktop</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::desktopToViewport</field>
    <field name="args">(int desktop, bool absolute)</field>
    <field name="url">classKWindowSystem.html#a917aa40d1a98aa4796e2497d207e9dad</field>
    <field name="keywords">desktopToViewport KWindowSystem::desktopToViewport KWindowSystem</field>
    <field name="text">Returns topleft corner of the viewport area for the given mapped virtual desktop</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::forceActiveWindow</field>
    <field name="args">(WId win, long time=0)</field>
    <field name="url">classKWindowSystem.html#aecb213d950a6615fc0e961273d72e166</field>
    <field name="keywords">forceActiveWindow KWindowSystem::forceActiveWindow KWindowSystem</field>
    <field name="text">Note that this should be called only in special cases applications shouldn t force themselves or other windows to be the active window Generally this call should used only by pagers and similar tools See the explanation in description of activateWindow() win the id of the window to make active time X server timestamp of the user activity that caused this request</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::groupLeader</field>
    <field name="args">(WId window)</field>
    <field name="url">classKWindowSystem.html#acd12c88b68d2aac23408f5232d3a4469</field>
    <field name="keywords">groupLeader KWindowSystem::groupLeader KWindowSystem</field>
    <field name="text">window the id of the window Use KWindowInfo::groupLeader</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::hasWId</field>
    <field name="args">(WId id)</field>
    <field name="url">classKWindowSystem.html#a797ecb85728494f897c2213cc548bbf7</field>
    <field name="keywords">hasWId KWindowSystem::hasWId KWindowSystem</field>
    <field name="text">id the window id to test true if the window id is still managed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::icccmCompliantMappingState</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#ab7bb94e4a51b6247498c33d6de01cd0a</field>
    <field name="keywords">icccmCompliantMappingState KWindowSystem::icccmCompliantMappingState KWindowSystem</field>
    <field name="text">Returns true if the WM uses IconicState also for windows on inactive virtual desktops</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::icon</field>
    <field name="args">(WId win, int width=-1, int height=-1, bool scale=false)</field>
    <field name="url">classKWindowSystem.html#ad822d5468187d4c7095e2568ab7d8138</field>
    <field name="keywords">icon KWindowSystem::icon KWindowSystem</field>
    <field name="text">If width and height are specified the best icon for the requested size is returned If scale is true the icon is smooth-scaled to have exactly the requested size win the id of the window width the desired width or height the desired height or scale if true the icon will be scaled to the desired size Otherwise the icon will not be modified the icon of the window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::icon</field>
    <field name="args">(WId win, int width, int height, bool scale, int flags)</field>
    <field name="url">classKWindowSystem.html#a41724bd8b503b2fb6049b0ba46da37bf</field>
    <field name="keywords">icon KWindowSystem::icon KWindowSystem</field>
    <field name="text">You should usually prefer the simpler variant which tries all possibilities to get an icon win the id of the window width the desired width or height the desired height or scale if true the icon will be scaled to the desired size Otherwise the icon will not be modified flags OR-ed flags from the IconSource enum</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::icon</field>
    <field name="args">(WId win, int width, int height, bool scale, int flags, NETWinInfo *info)</field>
    <field name="url">classKWindowSystem.html#a51e5aaced114eb7f33d25672e42013d8</field>
    <field name="keywords">icon KWindowSystem::icon KWindowSystem</field>
    <field name="text">This variant is only useful on the X11 platform other platforms do not use NETWinInfo and delegate to the variant without NETWinInfo Though if compiled with X11 support the X11 variant is used on other platforms if info is not nullptr This can be used by applications using e.g platform wayland but also connecting to an XServer The NETWinInfo must be constructed with property NET::WMIcon in order to use the IconSource flag NETWM NET::WM2IconPixmap for IconSource flag WMHints and NET::WM2WindowClass for IconSource flag ClassHint win the id of the window width the desired width or height the desired height or scale if true the icon will be scaled to the desired size Otherwise the icon will not be modified flags OR-ed flags from the IconSource enum into the NETWinInfo to use for reading properties 5.7</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::isPlatformWayland</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#a7c826b0c25ed36fb3d07dd5cff3b9ff9</field>
    <field name="keywords">isPlatformWayland KWindowSystem::isPlatformWayland KWindowSystem</field>
    <field name="text">platform isPlatformX11 5.25</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::isPlatformX11</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#a2a1f999a03807eb828f279b72e507066</field>
    <field name="keywords">isPlatformX11 KWindowSystem::isPlatformX11 KWindowSystem</field>
    <field name="text">platform isPlatformWayland 5.25</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::lowerWindow</field>
    <field name="args">(WId win)</field>
    <field name="url">classKWindowSystem.html#aff6abc7bd5c456a33409487952e9456e</field>
    <field name="keywords">lowerWindow KWindowSystem::lowerWindow KWindowSystem</field>
    <field name="text">This call is only for pagers and similar tools that represent direct user actions Applications should not use it they should keep using QWidget::lower() or XLowerWindow() if necessary</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::mapViewport</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#a48f67899f9f8d4a3e76c81cbb68ebe1d</field>
    <field name="keywords">mapViewport KWindowSystem::mapViewport KWindowSystem</field>
    <field name="text">Returns true if viewports are mapped to virtual desktops</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::minimizeWindow</field>
    <field name="args">(WId win)</field>
    <field name="url">classKWindowSystem.html#ad02330a42dc2ab70f44a3029309fd909</field>
    <field name="keywords">minimizeWindow KWindowSystem::minimizeWindow KWindowSystem</field>
    <field name="text">On X11 this follows the protocol described in ICCCM section 4.1.4 win The window to minimize unminimizeWindow()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::minimizeWindow</field>
    <field name="args">(WId win, bool animation)</field>
    <field name="url">classKWindowSystem.html#a86316291677ef881c88cefb9b971ae3e</field>
    <field name="keywords">minimizeWindow KWindowSystem::minimizeWindow KWindowSystem</field>
    <field name="text">since 5.0 the animation is ignored</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::numberOfDesktops</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#aed809b7c1d2beeae7bb6ff3e63563ef5</field>
    <field name="keywords">numberOfDesktops KWindowSystem::numberOfDesktops KWindowSystem</field>
    <field name="text">the number of virtual desktops</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::platform</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#ae9f7971618790b50cf64af09cc0d7d7d</field>
    <field name="keywords">platform KWindowSystem::platform KWindowSystem</field>
    <field name="text">This method allows to check for the used windowing system in a cheap and reliable way The Platform gets resolved the first time the method is invoked and cached for further usages The Platform used by the QGuiApplication 5.25</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::raiseWindow</field>
    <field name="args">(WId win)</field>
    <field name="url">classKWindowSystem.html#afcc586f92b6d7e3a01453713b6f633d5</field>
    <field name="keywords">raiseWindow KWindowSystem::raiseWindow KWindowSystem</field>
    <field name="text">This call is only for pagers and similar tools that represent direct user actions Applications should not use it they should keep using QWidget::raise() or XRaiseWindow() if necessary</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::readNameProperty</field>
    <field name="args">(WId window, unsigned long atom)</field>
    <field name="url">classKWindowSystem.html#a9446ca20d00b16cfeffb9eb9c798ccd6</field>
    <field name="keywords">readNameProperty KWindowSystem::readNameProperty KWindowSystem</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::self</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#af6ca1136d4f7f25f94b0568d9e596572</field>
    <field name="keywords">self KWindowSystem::self KWindowSystem</field>
    <field name="text">Useful mainly for connecting to signals</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::setBlockingCompositing</field>
    <field name="args">(WId window, bool active)</field>
    <field name="url">classKWindowSystem.html#a77a2e23da581d69bbd80387306eafc10</field>
    <field name="keywords">setBlockingCompositing KWindowSystem::setBlockingCompositing KWindowSystem</field>
    <field name="text">4.7</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::setCurrentDesktop</field>
    <field name="args">(int desktop)</field>
    <field name="url">classKWindowSystem.html#ad390e52c8dd6331b89a5a9f372435129</field>
    <field name="keywords">setCurrentDesktop KWindowSystem::setCurrentDesktop KWindowSystem</field>
    <field name="text">See NETRootInfo desktop the number of the new desktop</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::setDesktopName</field>
    <field name="args">(int desktop, const QString &amp;name)</field>
    <field name="url">classKWindowSystem.html#a2cc00668de9eb13084c2f8eb480f097f</field>
    <field name="keywords">setDesktopName KWindowSystem::setDesktopName KWindowSystem</field>
    <field name="text">desktop the number of the desktop name the new name for the desktop</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::setExtendedStrut</field>
    <field name="args">(WId win, int left_width, int left_start, int left_end, int right_width, int right_start, int right_end, int top_width, int top_start, int top_end, int bottom_width, int bottom_start, int bottom_end)</field>
    <field name="url">classKWindowSystem.html#a669469a6738ccb8642a1c57c4ce08227</field>
    <field name="keywords">setExtendedStrut KWindowSystem::setExtendedStrut KWindowSystem</field>
    <field name="text">For not reserving a strut pass 0 as the width E.g to reserve 10x10 square in the topleft corner use e.g setExtendedStrut( w, 10, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0 ) win the id of the window left_width width of the strut at the left edge left_start starting y coordinate of the strut at the left edge left_end ending y coordinate of the strut at the left edge right_width width of the strut at the right edge right_start starting y coordinate of the strut at the right edge right_end ending y coordinate of the strut at the right edge top_width width of the strut at the top edge top_start starting x coordinate of the strut at the top edge top_end ending x coordinate of the strut at the top edge bottom_width width of the strut at the bottom edge bottom_start starting x coordinate of the strut at the bottom edge bottom_end ending x coordinate of the strut at the bottom edge</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::setIcons</field>
    <field name="args">(WId win, const QPixmap &amp;icon, const QPixmap &amp;miniIcon)</field>
    <field name="url">classKWindowSystem.html#a8dcba86e828ff19749e3d3e8746b898b</field>
    <field name="keywords">setIcons KWindowSystem::setIcons KWindowSystem</field>
    <field name="text">win the id of the window icon the new icon miniIcon the new mini icon</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::setMainWindow</field>
    <field name="args">(QWidget *subwindow, WId mainwindow)</field>
    <field name="url">classKWindowSystem.html#a5f06ffab37bd705735f9d326f2969f52</field>
    <field name="keywords">setMainWindow KWindowSystem::setMainWindow KWindowSystem</field>
    <field name="text">This overrides the parent set the usual way as the QWidget parent but only for the window manager e.g stacking order and window grouping will be affected but features like automatic deletion of children when the parent is deleted are unaffected and normally use the QWidget parent This function should be used before a dialog is shown for a window that belongs to another application</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::setOnActivities</field>
    <field name="args">(WId win, const QStringList &amp;activities)</field>
    <field name="url">classKWindowSystem.html#a63fe335efaca06bb43ad107b8e28936c</field>
    <field name="keywords">setOnActivities KWindowSystem::setOnActivities KWindowSystem</field>
    <field name="text">win the id of the window activities the list of activity UUIDs 5.1 KWindowInfo::activities</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::setOnAllDesktops</field>
    <field name="args">(WId win, bool b)</field>
    <field name="url">classKWindowSystem.html#a3dfdfbe26d5bb59dd34ade9afa4d3971</field>
    <field name="keywords">setOnAllDesktops KWindowSystem::setOnAllDesktops KWindowSystem</field>
    <field name="text">Otherwise the window lives only on one single desktop win the id of the window b true to show the window on all desktops false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::setOnDesktop</field>
    <field name="args">(WId win, int desktop)</field>
    <field name="url">classKWindowSystem.html#a252fc7c6e389a41b73075a98d4bb843a</field>
    <field name="keywords">setOnDesktop KWindowSystem::setOnDesktop KWindowSystem</field>
    <field name="text">win the id of the window desktop the number of the new desktop</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::setShowingDesktop</field>
    <field name="args">(bool showing)</field>
    <field name="url">classKWindowSystem.html#a38b8c889d4b129845c2592acf54767cf</field>
    <field name="keywords">setShowingDesktop KWindowSystem::setShowingDesktop KWindowSystem</field>
    <field name="text">If on windows are hidden and desktop background is shown and focused showing if true the window manager is put in mode If false the window manager is put out of that mode 5.7.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::setState</field>
    <field name="args">(WId win, NET::States state)</field>
    <field name="url">classKWindowSystem.html#a2fcec2ab4297afe9edae7971b1a4cd86</field>
    <field name="keywords">setState KWindowSystem::setState KWindowSystem</field>
    <field name="text">Possible values are or ed combinations of NET::Modal NET::Sticky NET::MaxVert NET::MaxHoriz NET::Shaded NET::SkipTaskbar NET::SkipPager NET::Hidden NET::FullScreen NET::KeepAbove NET::KeepBelow NET::StaysOnTop win the id of the window state the new flags that will be set</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::setStrut</field>
    <field name="args">(WId win, int left, int right, int top, int bottom)</field>
    <field name="url">classKWindowSystem.html#af83b6d1db5390b191b5b9b0c061a1e03</field>
    <field name="keywords">setStrut KWindowSystem::setStrut KWindowSystem</field>
    <field name="text">Sets the strut of window win to left right top bottom win the id of the window left the left strut right the right strut top the top strut bottom the bottom strut</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::setType</field>
    <field name="args">(WId win, NET::WindowType windowType)</field>
    <field name="url">classKWindowSystem.html#a0f45456ff470a7b464dfe26d33bc322e</field>
    <field name="keywords">setType KWindowSystem::setType KWindowSystem</field>
    <field name="text">win the id of the window windowType the type of the window see NET::WindowType</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::setUserTime</field>
    <field name="args">(WId win, long time)</field>
    <field name="url">classKWindowSystem.html#a850371a25bf332c921617c8080553cdb</field>
    <field name="keywords">setUserTime KWindowSystem::setUserTime KWindowSystem</field>
    <field name="text">The timestamp is expressed as XServer time If a window is shown with user timestamp older than the time of the last user action it won t be activated after being shown The most common case is the special value 0 which means not to activate the window after being shown</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::showingDesktop</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#ae8850e1e845ee1bb88bab638387aa2fb</field>
    <field name="keywords">showingDesktop KWindowSystem::showingDesktop KWindowSystem</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::stackingOrder</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#a625644ee62355a88f32ab4e84130122a</field>
    <field name="keywords">stackingOrder KWindowSystem::stackingOrder KWindowSystem</field>
    <field name="text">May be useful for pagers the list of all toplevel windows in stacking order</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::transientFor</field>
    <field name="args">(WId window)</field>
    <field name="url">classKWindowSystem.html#a65dc3b550c9fde3bfc723a0c49b4c83b</field>
    <field name="keywords">transientFor KWindowSystem::transientFor KWindowSystem</field>
    <field name="text">the mainwindow for this window window the id of the window Use KWindowInfo::transientFor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::unminimizeWindow</field>
    <field name="args">(WId win)</field>
    <field name="url">classKWindowSystem.html#a2e804e86d60f2b461e1de4e17b7550f5</field>
    <field name="keywords">unminimizeWindow KWindowSystem::unminimizeWindow KWindowSystem</field>
    <field name="text">On X11 this follows the protocol described in ICCCM section 4.1.4 win The window to unminimize minimizeWindow()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::unminimizeWindow</field>
    <field name="args">(WId win, bool animation)</field>
    <field name="url">classKWindowSystem.html#a2bf6cc50c89e828926bd938b673e9be2</field>
    <field name="keywords">unminimizeWindow KWindowSystem::unminimizeWindow KWindowSystem</field>
    <field name="text">since 5.0 the animation is ignored</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::viewportToDesktop</field>
    <field name="args">(const QPoint &amp;pos)</field>
    <field name="url">classKWindowSystem.html#a02c88af96a4fc2b7e2d4810193d20e1b</field>
    <field name="keywords">viewportToDesktop KWindowSystem::viewportToDesktop KWindowSystem</field>
    <field name="text">Returns mapped virtual desktop for the given position in the viewport</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::viewportWindowToDesktop</field>
    <field name="args">(const QRect &amp;r)</field>
    <field name="url">classKWindowSystem.html#a73e98537ca90bf1dc15959c1c4153948</field>
    <field name="keywords">viewportWindowToDesktop KWindowSystem::viewportWindowToDesktop KWindowSystem</field>
    <field name="text">Returns mapped virtual desktop for the given window geometry</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::windowInfo</field>
    <field name="args">(WId win, NET::Properties properties, NET::Properties2 properties2=0)</field>
    <field name="url">classKWindowSystem.html#aeecbc8872422c25310cc9835f92423ad</field>
    <field name="keywords">windowInfo KWindowSystem::windowInfo KWindowSystem</field>
    <field name="text">It is recommended to check whether the returned info is valid by calling the valid() method win the id of the window properties all properties that should be retrieved see NET::Property enum for details Unlisted properties cause related information to be invalid in the returned data but make this function faster when not all data is needed properties2 additional properties see NET::Property2 enum the window information use KWindowInfo directly</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::windows</field>
    <field name="args">()</field>
    <field name="url">classKWindowSystem.html#a739867bc45308fb75e474838142b050d</field>
    <field name="keywords">windows KWindowSystem::windows KWindowSystem</field>
    <field name="text">Please do not rely on indexes of this list Whenever you enter Qt s event loop in your application it may happen that entries are removed or added Your module should perhaps work on a copy of this list and verify a window with hasWId() before any operations Iteration over this list can be done easily with the list of all toplevel windows</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::workArea</field>
    <field name="args">(int desktop=- 1)</field>
    <field name="url">classKWindowSystem.html#ac03bfeef22c5ec6d7916666a0119d8a4</field>
    <field name="keywords">workArea KWindowSystem::workArea KWindowSystem</field>
    <field name="text">desktop the number of the desktop to check for the current desktop the size and position of the desktop</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowSystem::workArea</field>
    <field name="args">(const QList&lt; WId &gt; &amp;excludes, int desktop=-1)</field>
    <field name="url">classKWindowSystem.html#ab461f7a79aad4a3f36552d2b10f9b925</field>
    <field name="keywords">workArea KWindowSystem::workArea KWindowSystem</field>
    <field name="text">Excludes struts of clients in the exclude List excludes the list of clients whose struts will be excluded desktop the number of the desktop to check for the current desktop the size and position of the desktop</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NET::timestampCompare</field>
    <field name="args">(unsigned long time1, unsigned long time2)</field>
    <field name="url">classNET.html#a9257abc93441d96f380d690f2aeea058</field>
    <field name="keywords">timestampCompare NET::timestampCompare NET timestampCompare NET::timestampCompare NET timestampCompare NET::timestampCompare NET timestampCompare NET::timestampCompare NET</field>
    <field name="text">Return value is like with strcmp() 0 for equal for time1 time2 1 for time1 time2</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NET::timestampDiff</field>
    <field name="args">(unsigned long time1, unsigned long time2)</field>
    <field name="url">classNET.html#ae5353d1ebb9514a696158f46b54157f4</field>
    <field name="keywords">timestampDiff NET::timestampDiff NET timestampDiff NET::timestampDiff NET timestampDiff NET::timestampDiff NET timestampDiff NET::timestampDiff NET</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NET::typeMatchesMask</field>
    <field name="args">(WindowType type, WindowTypes mask)</field>
    <field name="url">classNET.html#a27fbb80ed615b8a177aa38f2f65ef40f</field>
    <field name="keywords">typeMatchesMask NET::typeMatchesMask NET typeMatchesMask NET::typeMatchesMask NET typeMatchesMask NET::typeMatchesMask NET typeMatchesMask NET::typeMatchesMask NET</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KXMessages</field>
    <field name="url">classKXMessages.html</field>
    <field name="keywords">KXMessages</field>
    <field name="text">Used internally by KStartupInfo and kstart You usually don t want to use this use D-Bus instead Lubos Lunak</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KXMessages::gotMessage</field>
    <field name="args">(const QString &amp;message)</field>
    <field name="url">classKXMessages.html#a558b8d3136334fd9d651f3142635453a</field>
    <field name="keywords">gotMessage KXMessages::gotMessage KXMessages</field>
    <field name="text">message the message that has been received</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KXMessages::KXMessages</field>
    <field name="args">(const char *accept_broadcast=NULL, QObject *parent=NULL)</field>
    <field name="url">classKXMessages.html#a5446954387c4a649a3ccf28bde235f76</field>
    <field name="keywords">KXMessages KXMessages::KXMessages KXMessages</field>
    <field name="text">accept_broadcast if non-NULL all broadcast messages with this message type will be received parent the parent of this widget</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KXMessages::KXMessages</field>
    <field name="args">(xcb_connection_t *connection, xcb_window_t rootWindow, const char *accept_broadcast=Q_NULLPTR, QObject *parent=Q_NULLPTR)</field>
    <field name="url">classKXMessages.html#af07881e57b254db66e72d76881c90482</field>
    <field name="keywords">KXMessages KXMessages::KXMessages KXMessages</field>
    <field name="text">connection The xcb connection rootWindow The rootWindow to use accept_broadcast if non-NULL all broadcast messages with this message type will be received parent the parent of this object 5.8</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KXMessages::broadcastMessage</field>
    <field name="args">(const char *msg_type, const QString &amp;message, int screen=-1)</field>
    <field name="url">classKXMessages.html#abdea70bab301928734a9dd5bab974d9e</field>
    <field name="keywords">broadcastMessage KXMessages::broadcastMessage KXMessages</field>
    <field name="text">msg_type the type of the message message the message itself screen X11 screen to use for the default</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KXMessages::broadcastMessageX</field>
    <field name="args">(Display *disp, const char *msg_type, const QString &amp;message, int screen=-1)</field>
    <field name="url">classKXMessages.html#a0f0f7d9aef343cb09588b9a631581f4b</field>
    <field name="keywords">broadcastMessageX KXMessages::broadcastMessageX KXMessages</field>
    <field name="text">disp X11 connection which will be used instead of QX11Info::display() msg_type the type of the message message the message itself screen X11 screen to use for the default false when an error occurred true otherwise since 5.0 use xcb variant</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KXMessages::broadcastMessageX</field>
    <field name="args">(xcb_connection_t *c, const char *msg_type, const QString &amp;message, int screenNumber)</field>
    <field name="url">classKXMessages.html#aa61c13c4d32adc6a8585b980f7e6926f</field>
    <field name="keywords">broadcastMessageX KXMessages::broadcastMessageX KXMessages</field>
    <field name="text">c X11 connection which will be used instead of QX11Info::connection() msg_type the type of the message message the message itself screenNumber X11 screen to use false when an error occurred true otherwise</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">NET</field>
    <field name="url">classNET.html</field>
    <field name="keywords">NET</field>
    <field name="text">The NET API is an implementation of the NET Window Manager Specification This class is the base class for the NETRootInfo and NETWinInfo classes which are used to retrieve and modify the properties of windows To keep the namespace relatively clean all enums are defined here</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">NETExtendedStrut</field>
    <field name="url">structNETExtendedStrut.html</field>
    <field name="keywords">NETExtendedStrut</field>
    <field name="text">This class is a convenience class defining a strut with left right top and bottom border values and ranges for them The existence of this class is to keep the implementation from being dependent on a separate framework/library See the _NET_WM_STRUT_PARTIAL property in the NETWM spec</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETExtendedStrut::NETExtendedStrut</field>
    <field name="args">()</field>
    <field name="url">structNETExtendedStrut.html#a187cba4430313bffb597b4ce7a98ed40</field>
    <field name="keywords">NETExtendedStrut NETExtendedStrut::NETExtendedStrut NETExtendedStrut</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETExtendedStrut::bottom_width</field>
    <field name="url">structNETExtendedStrut.html#a12ee0a2d04e980001139a7677a821148</field>
    <field name="keywords">bottom_width NETExtendedStrut::bottom_width NETExtendedStrut</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETExtendedStrut::left_width</field>
    <field name="url">structNETExtendedStrut.html#a79fc79c632ccc599b393693d99f24164</field>
    <field name="keywords">left_width NETExtendedStrut::left_width NETExtendedStrut</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETExtendedStrut::right_width</field>
    <field name="url">structNETExtendedStrut.html#a7c1f4d0bf33fe20f5dba649e8a2a505b</field>
    <field name="keywords">right_width NETExtendedStrut::right_width NETExtendedStrut</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETExtendedStrut::top_width</field>
    <field name="url">structNETExtendedStrut.html#acb07800b67a53e134faaf09c571a1f0e</field>
    <field name="keywords">top_width NETExtendedStrut::top_width NETExtendedStrut</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">NETFullscreenMonitors</field>
    <field name="url">structNETFullscreenMonitors.html</field>
    <field name="keywords">NETFullscreenMonitors</field>
    <field name="text">This class is a convenience class defining a multiple monitor topology for fullscreen applications that wish to be present on more than one monitor/head As per the _NET_WM_FULLSCREEN_MONITORS hint in the EWMH spec this topology consists of 4 monitor indices such that the bounding rectangle is defined by the top edge of the top monitor the bottom edge of the bottom monitor the left edge of the left monitor and the right edge of the right monitor See the _NET_WM_FULLSCREEN_MONITORS hint in the EWMH spec</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETFullscreenMonitors::NETFullscreenMonitors</field>
    <field name="args">()</field>
    <field name="url">structNETFullscreenMonitors.html#a74bc97dfedfeb5a94eb89bd6e8016fb2</field>
    <field name="keywords">NETFullscreenMonitors NETFullscreenMonitors::NETFullscreenMonitors NETFullscreenMonitors</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETFullscreenMonitors::isSet</field>
    <field name="args">() const</field>
    <field name="url">structNETFullscreenMonitors.html#a1d9fe17820f48414ef282aaa702499a6</field>
    <field name="keywords">isSet NETFullscreenMonitors::isSet NETFullscreenMonitors</field>
    <field name="text">Note that we don t want to call this isValid() because we re not actually validating the monitor topology here but merely that our initial values were overwritten at some point by real non-negative monitor indices</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETFullscreenMonitors::bottom</field>
    <field name="url">structNETFullscreenMonitors.html#ae92fa25c1ad0a67f919ef8e81c5b4b3f</field>
    <field name="keywords">bottom NETFullscreenMonitors::bottom NETFullscreenMonitors</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETFullscreenMonitors::left</field>
    <field name="url">structNETFullscreenMonitors.html#ae17cba79fc3c8fb46222e2fe08d1f5e8</field>
    <field name="keywords">left NETFullscreenMonitors::left NETFullscreenMonitors</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETFullscreenMonitors::right</field>
    <field name="url">structNETFullscreenMonitors.html#a3a52de56ffa8ab20db65ccfb51bf5b53</field>
    <field name="keywords">right NETFullscreenMonitors::right NETFullscreenMonitors</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETFullscreenMonitors::top</field>
    <field name="url">structNETFullscreenMonitors.html#a956d8e03b8b2f645165d514fd90c2247</field>
    <field name="keywords">top NETFullscreenMonitors::top NETFullscreenMonitors</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">NETIcon</field>
    <field name="url">structNETIcon.html</field>
    <field name="keywords">NETIcon</field>
    <field name="text">This class is a convenience class defining an icon of size width by height The existence of this class is to keep the implementation from being dependent on a separate framework/library NETIcon is only used by the NET API Usually QIcon is the appropriate class for representing an icon</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETIcon::NETIcon</field>
    <field name="args">()</field>
    <field name="url">structNETIcon.html#ac1a350948e1128b4629f5914a306af66</field>
    <field name="keywords">NETIcon NETIcon::NETIcon NETIcon</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETIcon::data</field>
    <field name="url">structNETIcon.html#aaa6c9f9828e7d2f9a29f408529a68822</field>
    <field name="keywords">data NETIcon::data NETIcon</field>
    <field name="text">This is an array of 32bit packed CARDINAL ARGB with high byte being A low byte being B First two bytes are width height Data is in rows left to right and top to bottom</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETIcon::size</field>
    <field name="url">structNETIcon.html#a6506944fe7143f0a37bbe58cc0d8df94</field>
    <field name="keywords">size NETIcon::size NETIcon</field>
    <field name="text">NETSize</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">NETPoint</field>
    <field name="url">structNETPoint.html</field>
    <field name="keywords">NETPoint</field>
    <field name="text">This class is a convenience class defining a point x y The existence of this class is to keep the implementation from being dependent on a separate framework/library NETPoint is only used by the NET API Usually QPoint is the appropriate class for representing a point Bradley T Hughes</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETPoint::NETPoint</field>
    <field name="args">()</field>
    <field name="url">structNETPoint.html#aa922d92ff9c0cd7a782fd57438265050</field>
    <field name="keywords">NETPoint NETPoint::NETPoint NETPoint</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETPoint::x</field>
    <field name="url">structNETPoint.html#a662b6d948b949dabcaf2e955a078e63f</field>
    <field name="keywords">x NETPoint::x NETPoint</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETPoint::y</field>
    <field name="url">structNETPoint.html#ac64b3831f6fd7f1874f7e344beb117bd</field>
    <field name="keywords">y NETPoint::y NETPoint</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">NETRect</field>
    <field name="url">structNETRect.html</field>
    <field name="keywords">NETRect</field>
    <field name="text">This class is a convenience class defining a rectangle as a point x y with a size width by height The existence of this class is to keep the implementation from being dependent on a separate framework/library NETRect is only used by the NET API Usually QRect is the appropriate class for representing a rectangle</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETRect::pos</field>
    <field name="url">structNETRect.html#a2604a60ef01bb245df79ada826b1718d</field>
    <field name="keywords">pos NETRect::pos NETRect</field>
    <field name="text">NETPoint</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETRect::size</field>
    <field name="url">structNETRect.html#a97102c18e356965d829855c570bb45ca</field>
    <field name="keywords">size NETRect::size NETRect</field>
    <field name="text">NETSize</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">NETRootInfo</field>
    <field name="url">classNETRootInfo.html</field>
    <field name="keywords">NETRootInfo</field>
    <field name="text">The NETRootInfo class provides a common API for clients and window managers to set/read/change properties on the root window as defined by the NET Window Manager Specification Bradley T Hughes NET NETWinInfo</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::NETRootInfo</field>
    <field name="args">(xcb_connection_t *connection, xcb_window_t supportWindow, const char *wmName, NET::Properties properties, NET::WindowTypes windowTypes, NET::States states, NET::Properties2 properties2, NET::Actions actions, int screen=-1, bool doActivate=true)</field>
    <field name="url">classNETRootInfo.html#a89f26951db9fa3402ebfcac73a13b248</field>
    <field name="keywords">NETRootInfo NETRootInfo::NETRootInfo NETRootInfo</field>
    <field name="text">The application role is automatically set to WindowManager when using this constructor connection XCB connection supportWindow The Window id of the supportWindow The supportWindow must be created by the window manager as a child of the rootWindow The supportWindow must not be destroyed until the Window Manager exits wmName A string which should be the window manager s name ie or properties The properties the window manager supports windowTypes The window types the window manager supports states The states the window manager supports properties2 The properties2 the window manager supports actions The actions the window manager supports screen For Window Managers that support multiple screen ie displays the screen number may be explicitly defined If this argument is omitted the default screen will be used doActivate true to activate the window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::NETRootInfo</field>
    <field name="args">(xcb_connection_t *connection, NET::Properties properties, NET::Properties2 properties2=0, int screen=-1, bool doActivate=true)</field>
    <field name="url">classNETRootInfo.html#aa9e67e0b9e262b810b5749ac3cd31a4b</field>
    <field name="keywords">NETRootInfo NETRootInfo::NETRootInfo NETRootInfo</field>
    <field name="text">The application role is automatically set to Client when using this constructor connection XCB connection properties The properties the client is interested in properties2 The properties2 the client is interested in properties_size The number of elements in the properties array screen For Clients that support multiple screen ie displays the screen number may be explicitly defined If this argument is omitted the default screen will be used doActivate true to call activate() to do an initial data read/update of the query information</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::NETRootInfo</field>
    <field name="args">(const NETRootInfo &amp;rootinfo)</field>
    <field name="url">classNETRootInfo.html#a960dc3710c9cf34347285026b93bcd6f</field>
    <field name="keywords">NETRootInfo NETRootInfo::NETRootInfo NETRootInfo</field>
    <field name="text">rootinfo the NETRootInfo object to copy</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::~NETRootInfo</field>
    <field name="args">()</field>
    <field name="url">classNETRootInfo.html#a88dd4ee9906662bf072d9e703b7df710</field>
    <field name="keywords">NETRootInfo::~NETRootInfo NETRootInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::activate</field>
    <field name="args">()</field>
    <field name="url">classNETRootInfo.html#a600ae69b2dfbbe78f2758c19af6748aa</field>
    <field name="keywords">activate NETRootInfo::activate NETRootInfo</field>
    <field name="text">This method sets initial data on the root window and does other post-construction duties Clients must also call this after creating the object to do an initial data read/update</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::activeWindow</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#a4ae7b7baf102438cb5f6484e4237abbb</field>
    <field name="keywords">activeWindow NETRootInfo::activeWindow NETRootInfo</field>
    <field name="text">the id of the active window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::clientList</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#aaf1a87a8f4f44254449151aa10895d32</field>
    <field name="keywords">clientList NETRootInfo::clientList NETRootInfo</field>
    <field name="text">the array of Window id s clientListCount()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::clientListCount</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#a035ed071e2412d6496776d5079a6cb36</field>
    <field name="keywords">clientListCount NETRootInfo::clientListCount NETRootInfo</field>
    <field name="text">the number of managed windows in the clientList array clientList()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::clientListStacking</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#a50bbdce13267e297929a8a7c47f6c1ac</field>
    <field name="keywords">clientListStacking NETRootInfo::clientListStacking NETRootInfo</field>
    <field name="text">the array of Window id s in stacking order clientListStackingCount()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::clientListStackingCount</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#a6488dbb60e1696f80ef4dbd6465203ef</field>
    <field name="keywords">clientListStackingCount NETRootInfo::clientListStackingCount NETRootInfo</field>
    <field name="text">the number of Window id s in the client list clientListStacking()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::closeWindowRequest</field>
    <field name="args">(xcb_window_t window)</field>
    <field name="url">classNETRootInfo.html#a9cdbb685d45dc467039f5d682110c176</field>
    <field name="keywords">closeWindowRequest NETRootInfo::closeWindowRequest NETRootInfo</field>
    <field name="text">This will send a request to the Window Manager which usually can usually decide how to react to such requests window the id of the window to close</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::currentDesktop</field>
    <field name="args">(bool ignore_viewport=false) const</field>
    <field name="url">classNETRootInfo.html#a447ad4051423f7c099789425ae814063</field>
    <field name="keywords">currentDesktop NETRootInfo::currentDesktop NETRootInfo</field>
    <field name="text">NOTE KDE uses virtual desktops and does not directly support viewport in any way They are however mapped to virtual desktops if needed ignore_viewport if false viewport is mapped to virtual desktops the number of the current desktop</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::desktopGeometry</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#a97843623505e056546fde77d4f02086b</field>
    <field name="keywords">desktopGeometry NETRootInfo::desktopGeometry NETRootInfo</field>
    <field name="text">NOTE KDE uses virtual desktops and does not directly support viewport in any way You should use calls for virtual desktops viewport is mapped to them if needed the size of the desktop</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::desktopLayoutColumnsRows</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#aad5abb54b952460cc7db1271a0b1f2fb</field>
    <field name="keywords">desktopLayoutColumnsRows NETRootInfo::desktopLayoutColumnsRows NETRootInfo</field>
    <field name="text">Note that either may be 0 see _NET_DESKTOP_LAYOUT</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::desktopLayoutCorner</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#a91be2518fd5648543ebb2bd1ef83e672</field>
    <field name="keywords">desktopLayoutCorner NETRootInfo::desktopLayoutCorner NETRootInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::desktopLayoutOrientation</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#a1147ee4d8a14fe363760e250b7e64c38</field>
    <field name="keywords">desktopLayoutOrientation NETRootInfo::desktopLayoutOrientation NETRootInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::desktopName</field>
    <field name="args">(int desktop) const</field>
    <field name="url">classNETRootInfo.html#a9ba60eb0b7b5a4c9b1c86c1be2bcd386</field>
    <field name="keywords">desktopName NETRootInfo::desktopName NETRootInfo</field>
    <field name="text">desktop the number of the desktop the name of the desktop</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::desktopViewport</field>
    <field name="args">(int desktop) const</field>
    <field name="url">classNETRootInfo.html#a6cd5234c11a1eaf92b25ea1e3a1cb1c5</field>
    <field name="keywords">desktopViewport NETRootInfo::desktopViewport NETRootInfo</field>
    <field name="text">NOTE KDE uses virtual desktops and does not directly support viewport in any way You should use calls for virtual desktops viewport is mapped to them if needed desktop the number of the desktop the position of the desktop s viewport</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::event</field>
    <field name="args">(xcb_generic_event_t *event, unsigned long *properties, int properties_size)</field>
    <field name="url">classNETRootInfo.html#ad9ac9343868f6a1ad4920e0b958ed7c9</field>
    <field name="keywords">event NETRootInfo::event NETRootInfo</field>
    <field name="text">The new information will be read immediately by the class The elements of the properties argument are as they would be passed to the constructor if the array is not large enough changed properties that don t fit in it won t be listed there they ll be updated in the class though event the event properties properties that changed properties_size size of the passed properties array since 5.0 use event(xcb_generic_event_t*, NET::Properties*, NET::Properties2*)</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::event</field>
    <field name="args">(xcb_generic_event_t *event, NET::Properties *properties, NET::Properties2 *properties2=Q_NULLPTR)</field>
    <field name="url">classNETRootInfo.html#aa06811a2349fa8b8e427edcfe175cb09</field>
    <field name="keywords">event NETRootInfo::event NETRootInfo</field>
    <field name="text">The new information will be read immediately by the class It is possible to pass in a null pointer in the arguments In that case the passed in argument will obviously not be updated but the class will process the information nevertheless event the event properties The NET::Properties that changed properties2 The NET::Properties2 that changed 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::event</field>
    <field name="args">(xcb_generic_event_t *event)</field>
    <field name="url">classNETRootInfo.html#a40ce5ceef60cb7130480ced856c28744</field>
    <field name="keywords">event NETRootInfo::event NETRootInfo</field>
    <field name="text">The new information will be read immediately by the class This overloaded version returns only a single mask and therefore cannot check state of all properties like the other variant event the event the properties</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::isSupported</field>
    <field name="args">(NET::Property property) const</field>
    <field name="url">classNETRootInfo.html#ae96a250ac6f683e5d2f703f8584e826a</field>
    <field name="keywords">isSupported NETRootInfo::isSupported NETRootInfo</field>
    <field name="text">Note that for Client mode NET::Supported needs to be passed in the properties argument for this to work</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::isSupported</field>
    <field name="args">(NET::Property2 property) const</field>
    <field name="url">classNETRootInfo.html#aa727d28200a86c48563b642689b2fbcf</field>
    <field name="keywords">isSupported NETRootInfo::isSupported NETRootInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::isSupported</field>
    <field name="args">(NET::WindowTypeMask type) const</field>
    <field name="url">classNETRootInfo.html#ad00b04f0f6aa6a0af70157a781b525a2</field>
    <field name="keywords">isSupported NETRootInfo::isSupported NETRootInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::isSupported</field>
    <field name="args">(NET::State state) const</field>
    <field name="url">classNETRootInfo.html#a276e2952063e546564c2ee5e6238ac29</field>
    <field name="keywords">isSupported NETRootInfo::isSupported NETRootInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::isSupported</field>
    <field name="args">(NET::Action action) const</field>
    <field name="url">classNETRootInfo.html#a10947572060a0c38dbe56533954de36a</field>
    <field name="keywords">isSupported NETRootInfo::isSupported NETRootInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::moveResizeRequest</field>
    <field name="args">(xcb_window_t window, int x_root, int y_root, Direction direction)</field>
    <field name="url">classNETRootInfo.html#a6ef49909d42b1a1a04f2292b8605b79b</field>
    <field name="keywords">moveResizeRequest NETRootInfo::moveResizeRequest NETRootInfo</field>
    <field name="text">_NET_WM_MOVERESIZE should call this function This will send a request to the Window Manager window The client window that would be resized/moved x_root X position of the cursor relative to the root window y_root Y position of the cursor relative to the root window direction One of NET::Direction see base class documentation for a description of the different directions</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::moveResizeWindowRequest</field>
    <field name="args">(xcb_window_t window, int flags, int x, int y, int width, int height)</field>
    <field name="url">classNETRootInfo.html#abedcf941d9633d7234d610511a7a50d0</field>
    <field name="keywords">moveResizeWindowRequest NETRootInfo::moveResizeWindowRequest NETRootInfo</field>
    <field name="text">This will send a request to the Window Manager See _NET_MOVERESIZE_WINDOW description for details window The client window that would be resized/moved flags Flags specifying the operation see _NET_MOVERESIZE_WINDOW description x Requested X position for the window y Requested Y position for the window width Requested width for the window height Requested height for the window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::numberOfDesktops</field>
    <field name="args">(bool ignore_viewport=false) const</field>
    <field name="url">classNETRootInfo.html#afcc5bf61b1a98087e0a8399b5ee107cd</field>
    <field name="keywords">numberOfDesktops NETRootInfo::numberOfDesktops NETRootInfo</field>
    <field name="text">NOTE KDE uses virtual desktops and does not directly support viewport in any way They are however mapped to virtual desktops if needed ignore_viewport if false viewport is mapped to virtual desktops the number of desktops</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::operator=</field>
    <field name="args">(const NETRootInfo &amp;rootinfo)</field>
    <field name="url">classNETRootInfo.html#af117a2f45605de015325765540130ecc</field>
    <field name="keywords">operator= NETRootInfo::operator= NETRootInfo</field>
    <field name="text">Ensures that the shared data reference counts are correct</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::passedActions</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#aeac657d1a5a2bc2bbff13ba2b3753ecc</field>
    <field name="keywords">passedActions NETRootInfo::passedActions NETRootInfo</field>
    <field name="text">the actions argument passed to the constructor passedProperties() passedProperties2() passedStates() passedWindowTypes() 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::passedProperties</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#a7aba0412460d5de7223850bcde26cd3c</field>
    <field name="keywords">passedProperties NETRootInfo::passedProperties NETRootInfo</field>
    <field name="text">the properties argument passed to the constructor passedProperties2() passedStates() passedWindowTypes() passedActions()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::passedProperties2</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#ab92f2c0b90a07bb51080626b888c3fff</field>
    <field name="keywords">passedProperties2 NETRootInfo::passedProperties2 NETRootInfo</field>
    <field name="text">the properties2 argument passed to the constructor passedProperties() passedStates() passedWindowTypes() passedActions() 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::passedStates</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#a0ef3d66dffc5ae60d3974e51e09efe5e</field>
    <field name="keywords">passedStates NETRootInfo::passedStates NETRootInfo</field>
    <field name="text">the states argument passed to the constructor passedProperties() passedProperties2() passedWindowTypes() passedActions() 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::passedWindowTypes</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#a8a82100d346fb5a3a0103a0c2a5cc27a</field>
    <field name="keywords">passedWindowTypes NETRootInfo::passedWindowTypes NETRootInfo</field>
    <field name="text">the windowTypes argument passed to the constructor passedProperties() passedProperties2() passedStates() passedActions() 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::restackRequest</field>
    <field name="args">(xcb_window_t window, RequestSource source, xcb_window_t above, int detail, xcb_timestamp_t timestamp)</field>
    <field name="url">classNETRootInfo.html#a57f81b08f00cf960ea63eb63e81987ca</field>
    <field name="keywords">restackRequest NETRootInfo::restackRequest NETRootInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::rootWindow</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#a231a5b46ec3cbfc15a73ae139fac5d92</field>
    <field name="keywords">rootWindow NETRootInfo::rootWindow NETRootInfo</field>
    <field name="text">the id of the root window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::sendPing</field>
    <field name="args">(xcb_window_t window, xcb_timestamp_t timestamp)</field>
    <field name="url">classNETRootInfo.html#a5e03bc4f40db8ad105e1708c22ea00eb</field>
    <field name="keywords">sendPing NETRootInfo::sendPing NETRootInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setActiveWindow</field>
    <field name="args">(xcb_window_t window, NET::RequestSource src, xcb_timestamp_t timestamp, xcb_window_t active_window)</field>
    <field name="url">classNETRootInfo.html#aefac0a31c98427a5a84dd09d812fe6f4</field>
    <field name="keywords">setActiveWindow NETRootInfo::setActiveWindow NETRootInfo</field>
    <field name="text">window the id of the new active window src whether the request comes from normal application or from a pager or similar tool timestamp X server timestamp of the user action that caused the request active_window active window of the requesting application if any</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setActiveWindow</field>
    <field name="args">(xcb_window_t window)</field>
    <field name="url">classNETRootInfo.html#ab4aa5924f1f051199940828dbce4a118</field>
    <field name="keywords">setActiveWindow NETRootInfo::setActiveWindow NETRootInfo</field>
    <field name="text">This should be used only in the window manager mode window the if of the new active window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setClientList</field>
    <field name="args">(const xcb_window_t *windows, unsigned int count)</field>
    <field name="url">classNETRootInfo.html#a02dae359439488195aceb7f0a2b479ab</field>
    <field name="keywords">setClientList NETRootInfo::setClientList NETRootInfo</field>
    <field name="text">windows The array of Window id s count The number of windows in the array</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setClientListStacking</field>
    <field name="args">(const xcb_window_t *windows, unsigned int count)</field>
    <field name="url">classNETRootInfo.html#af358dab6b0dfc8083a771dcc9f2dad73</field>
    <field name="keywords">setClientListStacking NETRootInfo::setClientListStacking NETRootInfo</field>
    <field name="text">windows The array of Window id s count The number of windows in the array</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setCurrentDesktop</field>
    <field name="args">(int desktop, bool ignore_viewport=false)</field>
    <field name="url">classNETRootInfo.html#aab9e17977eec8d2a8ee8695bca184fbb</field>
    <field name="keywords">setCurrentDesktop NETRootInfo::setCurrentDesktop NETRootInfo</field>
    <field name="text">NOTE KDE uses virtual desktops and does not directly support viewport in any way It is however mapped to virtual desktops if needed desktop the number of the desktop ignore_viewport if false viewport is mapped to virtual desktops</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setDesktopGeometry</field>
    <field name="args">(const NETSize &amp;geometry)</field>
    <field name="url">classNETRootInfo.html#aa4bbe7eec4123d1794fca9f233ebad93</field>
    <field name="keywords">setDesktopGeometry NETRootInfo::setDesktopGeometry NETRootInfo</field>
    <field name="text">NOTE KDE uses virtual desktops and does not directly support viewport in any way You should use calls for virtual desktops viewport is mapped to them if needed geometry the new size of the desktop</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setDesktopLayout</field>
    <field name="args">(NET::Orientation orientation, int columns, int rows, NET::DesktopLayoutCorner corner)</field>
    <field name="url">classNETRootInfo.html#a06f991c0b1540e779e5e324404337241</field>
    <field name="keywords">setDesktopLayout NETRootInfo::setDesktopLayout NETRootInfo</field>
    <field name="text">This is set by the pager When setting the pager must own the _NET_DESKTOP_LAYOUT_Sn manager selection See _NET_DESKTOP_LAYOUT for details</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setDesktopName</field>
    <field name="args">(int desktop, const char *desktopName)</field>
    <field name="url">classNETRootInfo.html#a5b747a5f42d1627498a43c2df6670024</field>
    <field name="keywords">setDesktopName NETRootInfo::setDesktopName NETRootInfo</field>
    <field name="text">NOTE KDE uses virtual desktops and does not directly support viewport in any way Viewport is mapped to virtual desktops if needed but not for this call desktop the number of the desktop desktopName the new name of the desktop</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setDesktopViewport</field>
    <field name="args">(int desktop, const NETPoint &amp;viewport)</field>
    <field name="url">classNETRootInfo.html#a3325efae9006a73cc16d9c259cee6f2b</field>
    <field name="keywords">setDesktopViewport NETRootInfo::setDesktopViewport NETRootInfo</field>
    <field name="text">NOTE KDE uses virtual desktops and does not directly support viewport in any way You should use calls for virtual desktops viewport is mapped to them if needed desktop the number of the desktop viewport the new position of the desktop s viewport</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setNumberOfDesktops</field>
    <field name="args">(int numberOfDesktops)</field>
    <field name="url">classNETRootInfo.html#ad2e7aca69ab4fa624eb86af70aaf70bd</field>
    <field name="keywords">setNumberOfDesktops NETRootInfo::setNumberOfDesktops NETRootInfo</field>
    <field name="text">NOTE KDE uses virtual desktops and does not directly support viewport in any way Viewport is mapped to virtual desktops if needed but not for this call numberOfDesktops the number of desktops</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setShowingDesktop</field>
    <field name="args">(bool showing)</field>
    <field name="url">classNETRootInfo.html#a9f9c9aa337a71ecc6b61b3bc29e37de2</field>
    <field name="keywords">setShowingDesktop NETRootInfo::setShowingDesktop NETRootInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setSupported</field>
    <field name="args">(NET::Property property, bool on=true)</field>
    <field name="url">classNETRootInfo.html#a8b7935546a87ee3b27c02f861fff827e</field>
    <field name="keywords">setSupported NETRootInfo::setSupported NETRootInfo</field>
    <field name="text">In WindowManager mode this function updates _NET_SUPPORTED In Client mode this function does nothing 4.4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setSupported</field>
    <field name="args">(NET::Property2 property, bool on=true)</field>
    <field name="url">classNETRootInfo.html#af99010d9744bfca2d1866ecfda2478c4</field>
    <field name="keywords">setSupported NETRootInfo::setSupported NETRootInfo</field>
    <field name="text">4.4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setSupported</field>
    <field name="args">(NET::WindowTypeMask property, bool on=true)</field>
    <field name="url">classNETRootInfo.html#aa5b995911d7de433807dc7f79d5712ce</field>
    <field name="keywords">setSupported NETRootInfo::setSupported NETRootInfo</field>
    <field name="text">4.4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setSupported</field>
    <field name="args">(NET::State property, bool on=true)</field>
    <field name="url">classNETRootInfo.html#adeb83b39ed3eeea9b5626c282a03e445</field>
    <field name="keywords">setSupported NETRootInfo::setSupported NETRootInfo</field>
    <field name="text">4.4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setSupported</field>
    <field name="args">(NET::Action property, bool on=true)</field>
    <field name="url">classNETRootInfo.html#a265528fb331b79a05bc2c33897141022</field>
    <field name="keywords">setSupported NETRootInfo::setSupported NETRootInfo</field>
    <field name="text">4.4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setVirtualRoots</field>
    <field name="args">(const xcb_window_t *windows, unsigned int count)</field>
    <field name="url">classNETRootInfo.html#ab44bc95e6ca88043dbd1bba2cd20269b</field>
    <field name="keywords">setVirtualRoots NETRootInfo::setVirtualRoots NETRootInfo</field>
    <field name="text">windows The array of Window id s count The number of windows in the array</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::setWorkArea</field>
    <field name="args">(int desktop, const NETRect &amp;workArea)</field>
    <field name="url">classNETRootInfo.html#a7cb2a8b55300c6e363efe89f6702ddb7</field>
    <field name="keywords">setWorkArea NETRootInfo::setWorkArea NETRootInfo</field>
    <field name="text">desktop the number of the desktop workArea the new work area of the desktop</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::showingDesktop</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#afecf7557cb87d1d6e38d183a3f2a7545</field>
    <field name="keywords">showingDesktop NETRootInfo::showingDesktop NETRootInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::supportedActions</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#aeced8d9474a23a19c5992e1160153dea</field>
    <field name="keywords">supportedActions NETRootInfo::supportedActions NETRootInfo</field>
    <field name="text">In the Client mode if NET::Supported was passed in the properties argument the returned value are all actions supported by the Window Manager Other supported protocols and properties are returned by the specific methods supportedProperties() supportedProperties2() supportedStates() supportedWindowTypes() 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::supportedProperties</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#a9c9b1ee1fb41bebf0837c465ac9dcdee</field>
    <field name="keywords">supportedProperties NETRootInfo::supportedProperties NETRootInfo</field>
    <field name="text">In the Client mode if NET::Supported was passed in the properties argument the returned value are all properties supported by the Window Manager Other supported protocols and properties are returned by the specific methods supportedProperties2() supportedStates() supportedWindowTypes() supportedActions()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::supportedProperties2</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#a61118ab0e50d5db4bb7e1128e0984b43</field>
    <field name="keywords">supportedProperties2 NETRootInfo::supportedProperties2 NETRootInfo</field>
    <field name="text">In the Client mode if NET::Supported was passed in the properties argument the returned value are all properties2 supported by the Window Manager Other supported protocols and properties are returned by the specific methods supportedProperties() supportedStates() supportedWindowTypes() supportedActions() 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::supportedStates</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#adc3b3209ba69cd90ee91d7a8f90801d7</field>
    <field name="keywords">supportedStates NETRootInfo::supportedStates NETRootInfo</field>
    <field name="text">In the Client mode if NET::Supported was passed in the properties argument the returned value are all states supported by the Window Manager Other supported protocols and properties are returned by the specific methods supportedProperties() supportedProperties2() supportedWindowTypes() supportedActions() 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::supportedWindowTypes</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#abf7d368ac4d319098d1291abeb92035e</field>
    <field name="keywords">supportedWindowTypes NETRootInfo::supportedWindowTypes NETRootInfo</field>
    <field name="text">In the Client mode if NET::Supported was passed in the properties argument the returned value are all window types supported by the Window Manager Other supported protocols and properties are returned by the specific methods supportedProperties() supportedProperties2() supportedStates() supportedActions() 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::supportWindow</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#a8edabc7b370c743c76bea72c3253dabc</field>
    <field name="keywords">supportWindow NETRootInfo::supportWindow NETRootInfo</field>
    <field name="text">the id of the support window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::virtualRoots</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#a5e2002c7e9e3aa608c81ca08a1a1a02a</field>
    <field name="keywords">virtualRoots NETRootInfo::virtualRoots NETRootInfo</field>
    <field name="text">the array of Window id s virtualRootsCount()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::virtualRootsCount</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#a1d97019b468992157030d773cc019fe1</field>
    <field name="keywords">virtualRootsCount NETRootInfo::virtualRootsCount NETRootInfo</field>
    <field name="text">the number of Window id s in the virtual root array virtualRoots()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::wmName</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#af51e1fbd88028b70958f5b08cabd82be</field>
    <field name="keywords">wmName NETRootInfo::wmName NETRootInfo</field>
    <field name="text">the name of the window manager</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::workArea</field>
    <field name="args">(int desktop) const</field>
    <field name="url">classNETRootInfo.html#ad6c3a3adc4684ab3eeac2b48fe40801e</field>
    <field name="keywords">workArea NETRootInfo::workArea NETRootInfo</field>
    <field name="text">desktop the number of the desktop the size of the work area</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::xcbConnection</field>
    <field name="args">() const</field>
    <field name="url">classNETRootInfo.html#a1c9613c282ce0140df8a7653a2f2adcb</field>
    <field name="keywords">xcbConnection NETRootInfo::xcbConnection NETRootInfo</field>
    <field name="text">the XCB connection</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::addClient</field>
    <field name="args">(xcb_window_t window)</field>
    <field name="url">classNETRootInfo.html#a0a4cd1ccb8097bf8aadc7dbaa5ca5ed7</field>
    <field name="keywords">addClient NETRootInfo::addClient NETRootInfo</field>
    <field name="text">window the id of the window to add</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::changeActiveWindow</field>
    <field name="args">(xcb_window_t window, NET::RequestSource src, xcb_timestamp_t timestamp, xcb_window_t active_window)</field>
    <field name="url">classNETRootInfo.html#a57ed7346a3fa56a543079678049bdae9</field>
    <field name="keywords">changeActiveWindow NETRootInfo::changeActiveWindow NETRootInfo</field>
    <field name="text">window the id of the window to activate src the source from which the request came timestamp the timestamp of the user action causing this request active_window active window of the requesting application if any</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::changeCurrentDesktop</field>
    <field name="args">(int desktop)</field>
    <field name="url">classNETRootInfo.html#ae305549c1052c9a56438dbbe4d85302f</field>
    <field name="keywords">changeCurrentDesktop NETRootInfo::changeCurrentDesktop NETRootInfo</field>
    <field name="text">desktop the number of the desktop</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::changeDesktopGeometry</field>
    <field name="args">(int desktop, const NETSize &amp;geom)</field>
    <field name="url">classNETRootInfo.html#a8dbf88d76644b4e912ee7e860c89225a</field>
    <field name="keywords">changeDesktopGeometry NETRootInfo::changeDesktopGeometry NETRootInfo</field>
    <field name="text">desktop the number of the desktop geom the new size</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::changeDesktopViewport</field>
    <field name="args">(int desktop, const NETPoint &amp;viewport)</field>
    <field name="url">classNETRootInfo.html#a0081e46b972ba2efca3e0d4b301e34da</field>
    <field name="keywords">changeDesktopViewport NETRootInfo::changeDesktopViewport NETRootInfo</field>
    <field name="text">desktop the number of the desktop viewport the new position of the viewport</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::changeNumberOfDesktops</field>
    <field name="args">(int numberOfDesktops)</field>
    <field name="url">classNETRootInfo.html#aa177bec4607fd2b38529e9fc135d51b9</field>
    <field name="keywords">changeNumberOfDesktops NETRootInfo::changeNumberOfDesktops NETRootInfo</field>
    <field name="text">numberOfDesktops the new number of desktops</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::changeShowingDesktop</field>
    <field name="args">(bool showing)</field>
    <field name="url">classNETRootInfo.html#af86664c4429e79430db0360a5a608dd6</field>
    <field name="keywords">changeShowingDesktop NETRootInfo::changeShowingDesktop NETRootInfo</field>
    <field name="text">See _NET_SHOWING_DESKTOP for details showing whether to activate the showing desktop mode</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::closeWindow</field>
    <field name="args">(xcb_window_t window)</field>
    <field name="url">classNETRootInfo.html#a0058f0368e02834b73d164c84a58adbd</field>
    <field name="keywords">closeWindow NETRootInfo::closeWindow NETRootInfo</field>
    <field name="text">window the id of the window to close</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::gotPing</field>
    <field name="args">(xcb_window_t window, xcb_timestamp_t timestamp)</field>
    <field name="url">classNETRootInfo.html#a29decfa17ae9ef6f7b866b7dae72460e</field>
    <field name="keywords">gotPing NETRootInfo::gotPing NETRootInfo</field>
    <field name="text">window the window from which the reply came timestamp timestamp of the ping</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::moveResize</field>
    <field name="args">(xcb_window_t window, int x_root, int y_root, unsigned long direction)</field>
    <field name="url">classNETRootInfo.html#a67232e7858fb5ac4bb752c32283f08bb</field>
    <field name="keywords">moveResize NETRootInfo::moveResize NETRootInfo</field>
    <field name="text">window The window that wants to move/resize x_root X position of the cursor relative to the root window y_root Y position of the cursor relative to the root window direction One of NET::Direction see base class documentation for a description of the different directions</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::moveResizeWindow</field>
    <field name="args">(xcb_window_t window, int flags, int x, int y, int width, int height)</field>
    <field name="url">classNETRootInfo.html#a17d75ad375ac020f5acc62e4316cd350</field>
    <field name="keywords">moveResizeWindow NETRootInfo::moveResizeWindow NETRootInfo</field>
    <field name="text">See _NET_MOVERESIZE_WINDOW for details window the id of the window to more/resize flags Flags specifying the operation see _NET_MOVERESIZE_WINDOW description x Requested X position for the window y Requested Y position for the window width Requested width for the window height Requested height for the window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::removeClient</field>
    <field name="args">(xcb_window_t window)</field>
    <field name="url">classNETRootInfo.html#a9ece857514d7b994cc6cc671dfc69df9</field>
    <field name="keywords">removeClient NETRootInfo::removeClient NETRootInfo</field>
    <field name="text">window the id of the window to remove</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::restackWindow</field>
    <field name="args">(xcb_window_t window, RequestSource source, xcb_window_t above, int detail, xcb_timestamp_t timestamp)</field>
    <field name="url">classNETRootInfo.html#a3a7f30db68710827abf9801f5440617d</field>
    <field name="keywords">restackWindow NETRootInfo::restackWindow NETRootInfo</field>
    <field name="text">See _NET_RESTACK_WINDOW for details window the id of the window to restack source the source of the request above other window in the restack request detail restack detail timestamp the timestamp of the request</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETRootInfo::virtual_hook</field>
    <field name="args">(int id, void *data)</field>
    <field name="url">classNETRootInfo.html#a8d97a3a5bb0726e991037eaece10279a</field>
    <field name="keywords">virtual_hook NETRootInfo::virtual_hook NETRootInfo</field>
    <field name="text">Unused in this class</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">NETSize</field>
    <field name="url">structNETSize.html</field>
    <field name="keywords">NETSize</field>
    <field name="text">This class is a convenience class defining a size width by height The existence of this class is to keep the implementation from being dependent on a separate framework/library NETSize is only used by the NET API Usually QSize is the appropriate class for representing a size Bradley T Hughes</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETSize::NETSize</field>
    <field name="args">()</field>
    <field name="url">structNETSize.html#aac718a821bc131ecc0c736a8eed0a8cd</field>
    <field name="keywords">NETSize NETSize::NETSize NETSize</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETSize::height</field>
    <field name="url">structNETSize.html#a0a6def5683983f7f3478192248ef2f8e</field>
    <field name="keywords">height NETSize::height NETSize</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETSize::width</field>
    <field name="url">structNETSize.html#af2e6a5fcac88037fa745273e85c5e219</field>
    <field name="keywords">width NETSize::width NETSize</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">NETStrut</field>
    <field name="url">structNETStrut.html</field>
    <field name="keywords">NETStrut</field>
    <field name="text">use NETExtendedStrut Simple strut class for NET classes This class is a convenience class defining a strut with left right top and bottom border values The existence of this class is to keep the implementation from being dependent on a separate framework/library See the _NET_WM_STRUT property in the NETWM spec</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETStrut::NETStrut</field>
    <field name="args">()</field>
    <field name="url">structNETStrut.html#af4263329e1d7e5aa48248fbcbc2284a9</field>
    <field name="keywords">NETStrut NETStrut::NETStrut NETStrut</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETStrut::bottom</field>
    <field name="url">structNETStrut.html#a031e023bb8f0c8cf3d00b748c7dd7ca7</field>
    <field name="keywords">bottom NETStrut::bottom NETStrut</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETStrut::left</field>
    <field name="url">structNETStrut.html#a3ffe1d55e64632f4cdc1225ae8a301df</field>
    <field name="keywords">left NETStrut::left NETStrut</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETStrut::right</field>
    <field name="url">structNETStrut.html#a46c92f5dc806d6def2390f258d00b80e</field>
    <field name="keywords">right NETStrut::right NETStrut</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETStrut::top</field>
    <field name="url">structNETStrut.html#ac359ac56290a66002010f64dc4842aa2</field>
    <field name="keywords">top NETStrut::top NETStrut</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">NETWinInfo</field>
    <field name="url">classNETWinInfo.html</field>
    <field name="keywords">NETWinInfo</field>
    <field name="text">The NETWinInfo class provides a common API for clients and window managers to set/read/change properties on an application window as defined by the NET Window Manager Specification Bradley T Hughes NET NETRootInfo</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::NETWinInfo</field>
    <field name="args">(xcb_connection_t *connection, xcb_window_t window, xcb_window_t rootWindow, NET::Properties properties, NET::Properties2 properties2, Role role=Client)</field>
    <field name="url">classNETWinInfo.html#adf91f4fb54f368506913f1e5dafe78f6</field>
    <field name="keywords">NETWinInfo NETWinInfo::NETWinInfo NETWinInfo</field>
    <field name="text">connection XCB connection window The Window id of the application window rootWindow The Window id of the root window properties The NET::Properties flags properties2 The NET::Properties2 flags role Select the application role If this argument is omitted the role will default to Client</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::NETWinInfo</field>
    <field name="args">(xcb_connection_t *connection, xcb_window_t window, xcb_window_t rootWindow, NET::Properties properties, Role role=Client)</field>
    <field name="url">classNETWinInfo.html#a66be82d80a0c75eecff47d1acc21dec6</field>
    <field name="keywords">NETWinInfo NETWinInfo::NETWinInfo NETWinInfo</field>
    <field name="text">since 5.0 use above ctor</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::NETWinInfo</field>
    <field name="args">(const NETWinInfo &amp;wininfo)</field>
    <field name="url">classNETWinInfo.html#a84db7dff7f2458fd3f66e041573bb997</field>
    <field name="keywords">NETWinInfo NETWinInfo::NETWinInfo NETWinInfo</field>
    <field name="text">wininfo the NETWinInfo to copy</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::~NETWinInfo</field>
    <field name="args">()</field>
    <field name="url">classNETWinInfo.html#ae03403bb3bd691e8a3fa2da3a1161d33</field>
    <field name="keywords">NETWinInfo::~NETWinInfo NETWinInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::activities</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a2ab7b37c25a584ea300331562498572e</field>
    <field name="keywords">activities NETWinInfo::activities NETWinInfo</field>
    <field name="text">FIXME this might be better as a NETRArray 4.6</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::allowedActions</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#aeafdfaacb707bba4ae8fa387f2460955</field>
    <field name="keywords">allowedActions NETWinInfo::allowedActions NETWinInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::clientMachine</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#aba26b0a73ba6b2664a363e498a028de0</field>
    <field name="keywords">clientMachine NETWinInfo::clientMachine NETWinInfo</field>
    <field name="text">WM_CLIENT_MACHINE property</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::desktop</field>
    <field name="args">(bool ignore_viewport=false) const</field>
    <field name="url">classNETWinInfo.html#a3c80672b9fe183f1209640c1da4db495</field>
    <field name="keywords">desktop NETWinInfo::desktop NETWinInfo</field>
    <field name="text">NOTE KDE uses virtual desktops and does not directly support viewport in any way It is however mapped to virtual desktops if needed ignore_viewport if false viewport is mapped to virtual desktops the number of the window s desktop OnAllDesktops()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::event</field>
    <field name="args">(xcb_generic_event_t *event, unsigned long *properties, int properties_size)</field>
    <field name="url">classNETWinInfo.html#a05f7f01e51f8d25455b573c64854bd84</field>
    <field name="keywords">event NETWinInfo::event NETWinInfo</field>
    <field name="text">The new information will be read immediately by the class The elements of the properties argument are as they would be passed to the constructor if the array is not large enough changed properties that don t fit in it won t be listed there they ll be updated in the class though event the event properties properties that changed properties_size size of the passed properties array since 5.0 use event(xcb_generic_event_t*, NET::Properties*, NET::Properties2*)</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::event</field>
    <field name="args">(xcb_generic_event_t *event, NET::Properties *properties, NET::Properties2 *properties2=Q_NULLPTR)</field>
    <field name="url">classNETWinInfo.html#a6aafb5925d82c803d97984a1378f56be</field>
    <field name="keywords">event NETWinInfo::event NETWinInfo</field>
    <field name="text">The new information will be read immediately by the class It is possible to pass in a null pointer in the arguments In that case the passed in argument will obviously not be updated but the class will process the information nevertheless event the event properties The NET::Properties that changed properties2 The NET::Properties2 that changed 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::event</field>
    <field name="args">(xcb_generic_event_t *event)</field>
    <field name="url">classNETWinInfo.html#a1c335476b55f3f4454411126ba9ba924</field>
    <field name="keywords">event NETWinInfo::event NETWinInfo</field>
    <field name="text">The new information will be read immediately by the class This overloaded version returns only a single mask and therefore cannot check state of all properties like the other variant event the event the properties</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::extendedStrut</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a77254cc74f15b155171eef816f4d764b</field>
    <field name="keywords">extendedStrut NETWinInfo::extendedStrut NETWinInfo</field>
    <field name="text">See _NET_WM_STRUT_PARTIAL in the spec</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::frameExtents</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a5ce42a76e6c119a26504b422c2278e8d</field>
    <field name="keywords">frameExtents NETWinInfo::frameExtents NETWinInfo</field>
    <field name="text">the width of the decoration borders 4.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::frameOverlap</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#ab8b6cdd03474c14666ccf486178c9f5b</field>
    <field name="keywords">frameOverlap NETWinInfo::frameOverlap NETWinInfo</field>
    <field name="text">how far the window frame extends behind the client area on each side 4.4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::fullscreenMonitors</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#aed9259092abb5e8437a6f72ac1039d13</field>
    <field name="keywords">fullscreenMonitors NETWinInfo::fullscreenMonitors NETWinInfo</field>
    <field name="text">See _NET_WM_FULLSCREEN_MONITORS in the spec</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::groupLeader</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#ad78515c5141e18268d1176d6ffbedc74</field>
    <field name="keywords">groupLeader NETWinInfo::groupLeader NETWinInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::handledIcons</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#ac2d331f9643b74c8dd82c9811b763698</field>
    <field name="keywords">handledIcons NETWinInfo::handledIcons NETWinInfo</field>
    <field name="text">true if this client handles icons false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::hasNETSupport</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#adaf4b1b763ebc53db481b09f3ef33431</field>
    <field name="keywords">hasNETSupport NETWinInfo::hasNETSupport NETWinInfo</field>
    <field name="text">Presence of a window type as specified by the NETWM spec is considered as the window supporting this specification true if the window has support for the NETWM spec</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::hasWindowType</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a112add6db8a64985e415f3e3e507c235</field>
    <field name="keywords">hasWindowType NETWinInfo::hasWindowType NETWinInfo</field>
    <field name="text">Used by KWindowInfo::windowType() to return either NET::Normal or NET::Dialog as appropriate as a fallback</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::icccmIconPixmap</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a9221fe1fd6702c8925593643c064eabf</field>
    <field name="keywords">icccmIconPixmap NETWinInfo::icccmIconPixmap NETWinInfo</field>
    <field name="text">See ICCCM 4.1.2.4 The default value is XCB_PIXMAP_NONE Using the ICCCM variant for the icon is deprecated and only offers a limited functionality compared to Only use this variant as a fallback icccmIconPixmapMask icon 5.7</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::icccmIconPixmapMask</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a692dd9c9b1364a1056739521f982caaa</field>
    <field name="keywords">icccmIconPixmapMask NETWinInfo::icccmIconPixmapMask NETWinInfo</field>
    <field name="text">See ICCCM 4.1.2.4 The default value is XCB_PIXMAP_NONE icccmIconPixmap 5.7</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::icon</field>
    <field name="args">(int width=-1, int height=-1) const</field>
    <field name="url">classNETWinInfo.html#a60f99155059dc18d740685bb38e282b5</field>
    <field name="keywords">icon NETWinInfo::icon NETWinInfo</field>
    <field name="text">If width and height are passed the icon returned will be the closest it can find the next biggest If width and height are omitted then the largest icon in the list is returned width the preferred width for the icon to ignore height the preferred height for the icon to ignore the icon</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::iconGeometry</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#afe6f6aea8847cc260db854ff9e2b00da</field>
    <field name="keywords">iconGeometry NETWinInfo::iconGeometry NETWinInfo</field>
    <field name="text">the geometry of the icon</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::iconName</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a8d71f7b93d3a5223efe4a017b917c05b</field>
    <field name="keywords">iconName NETWinInfo::iconName NETWinInfo</field>
    <field name="text">Note that this has nothing to do with icons but it s for representations of the window taskbars etc that should be shown when the window is in iconic state See description of _NET_WM_ICON_NAME for details the iconic name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::iconSizes</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a900706baea75d23b5f03cd351a8077d1</field>
    <field name="keywords">iconSizes NETWinInfo::iconSizes NETWinInfo</field>
    <field name="text">Each size is pair width height terminated with pair 0 0 4.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::initialMappingState</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a3e829d11b2cbb5fee2b154c749c564f2</field>
    <field name="keywords">initialMappingState NETWinInfo::initialMappingState NETWinInfo</field>
    <field name="text">See ICCCM 4.1.2.4 and 4.1.4 The default value if Withdrawn in case the Client is mapped without a WM_HINTS property or without the initial state hint set 5.5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::input</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a4b85fb45350225df5fe243923d01d456</field>
    <field name="keywords">input NETWinInfo::input NETWinInfo</field>
    <field name="text">See ICCCM 4.1.2.4 and 4.1.7 The default value is true in case the Client is mapped without a WM_HINTS property 5.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::isBlockingCompositing</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a326e6ec8a7a91cba2eb7b1902e4eff3d</field>
    <field name="keywords">isBlockingCompositing NETWinInfo::isBlockingCompositing NETWinInfo</field>
    <field name="text">4.7</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::kdeGeometry</field>
    <field name="args">(NETRect &amp;frame, NETRect &amp;window)</field>
    <field name="url">classNETWinInfo.html#a27ca3c4fb9170a15c9f7b779c0bd51dd</field>
    <field name="keywords">kdeGeometry NETWinInfo::kdeGeometry NETWinInfo</field>
    <field name="text">Both geometries are relative to the root window frame the geometry for the frame window the geometry for the window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::mappingState</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a4ed55e3ba2240e25eadba11159d4530e</field>
    <field name="keywords">mappingState NETWinInfo::mappingState NETWinInfo</field>
    <field name="text">the mapping state</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::name</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a42f4596234b1cd1517c2ac5f8fc9b879</field>
    <field name="keywords">name NETWinInfo::name NETWinInfo</field>
    <field name="text">the name of the window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::opacity</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a4dbb43fae97678665c14e91a16fa8e1b</field>
    <field name="keywords">opacity NETWinInfo::opacity NETWinInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::opaqueRegion</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a6e9c8a6ef50c66ee097c987b793cf61c</field>
    <field name="keywords">opaqueRegion NETWinInfo::opaqueRegion NETWinInfo</field>
    <field name="text">The opaque region as specified by the Client 5.7</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::operator=</field>
    <field name="args">(const NETWinInfo &amp;wintinfo)</field>
    <field name="url">classNETWinInfo.html#a79640a11e0f4ccb09ec81dd68cbb59ba</field>
    <field name="keywords">operator= NETWinInfo::operator= NETWinInfo</field>
    <field name="text">Ensures that the shared data reference counts are correct</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::passedProperties</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a5b5011a26f9517510ce612baea72f9a3</field>
    <field name="keywords">passedProperties NETWinInfo::passedProperties NETWinInfo</field>
    <field name="text">the properties argument passed to the constructor passedProperties2()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::passedProperties2</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a264884e8c627e9840b7e5d544f39e019</field>
    <field name="keywords">passedProperties2 NETWinInfo::passedProperties2 NETWinInfo</field>
    <field name="text">the properties2 argument passed to the constructor passedProperties() 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::pid</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#adbe9d87d81170a7e027b603157005314</field>
    <field name="keywords">pid NETWinInfo::pid NETWinInfo</field>
    <field name="text">the process id of the window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::protocols</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a68ec17d6fd187bd4b5ddf917017fa0ec</field>
    <field name="keywords">protocols NETWinInfo::protocols NETWinInfo</field>
    <field name="text">The window manager protocols this Client supports 5.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setActivities</field>
    <field name="args">(const char *activities)</field>
    <field name="url">classNETWinInfo.html#a90d3b14186b074aaa0309ca4c8c670db</field>
    <field name="keywords">setActivities NETWinInfo::setActivities NETWinInfo</field>
    <field name="text">5.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setAllowedActions</field>
    <field name="args">(NET::Actions actions)</field>
    <field name="url">classNETWinInfo.html#af0b92d7673ce879ec377ed47fc312ad7</field>
    <field name="keywords">setAllowedActions NETWinInfo::setAllowedActions NETWinInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setBlockingCompositing</field>
    <field name="args">(bool active)</field>
    <field name="url">classNETWinInfo.html#ac264bd0ff15058b4158ea2932ea2fda2</field>
    <field name="keywords">setBlockingCompositing NETWinInfo::setBlockingCompositing NETWinInfo</field>
    <field name="text">4.7</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setDesktop</field>
    <field name="args">(int desktop, bool ignore_viewport=false)</field>
    <field name="url">classNETWinInfo.html#ac4d23861033e10ca674b0434f246a690</field>
    <field name="keywords">setDesktop NETWinInfo::setDesktop NETWinInfo</field>
    <field name="text">NOTE KDE uses virtual desktops and does not directly support viewport in any way It is however mapped to virtual desktops if needed desktop the number of the new desktop ignore_viewport if false viewport is mapped to virtual desktops OnAllDesktops()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setExtendedStrut</field>
    <field name="args">(const NETExtendedStrut &amp;extended_strut)</field>
    <field name="url">classNETWinInfo.html#a6a6964c115a4f2f24e9fc6688b2d79dc</field>
    <field name="keywords">setExtendedStrut NETWinInfo::setExtendedStrut NETWinInfo</field>
    <field name="text">extended_strut the new strut</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setFrameExtents</field>
    <field name="args">(NETStrut strut)</field>
    <field name="url">classNETWinInfo.html#ab50f281e50e6652abfc56e36cab398f4</field>
    <field name="keywords">setFrameExtents NETWinInfo::setFrameExtents NETWinInfo</field>
    <field name="text">the width of the decoration borders strut the new strut</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setFrameOverlap</field>
    <field name="args">(NETStrut strut)</field>
    <field name="url">classNETWinInfo.html#a0d27f5e71e08990e3aa0b2cd74694216</field>
    <field name="keywords">setFrameOverlap NETWinInfo::setFrameOverlap NETWinInfo</field>
    <field name="text">how far the window frame extends behind the client area on each side Set the strut values to if you want the window frame to cover the whole client area The default values are 0 4.4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setFullscreenMonitors</field>
    <field name="args">(NETFullscreenMonitors topology)</field>
    <field name="url">classNETWinInfo.html#ae026b1b5d2aca9ae0fb0a70ce03913a9</field>
    <field name="keywords">setFullscreenMonitors NETWinInfo::setFullscreenMonitors NETWinInfo</field>
    <field name="text">The indices are from the set returned by the Xinerama extension See _NET_WM_FULLSCREEN_MONITORS for details topology A struct that models the desired monitor topology namely top is the monitor whose top edge defines the top edge of the fullscreen window bottom is the monitor whose bottom edge defines the bottom edge of the fullscreen window left is the monitor whose left edge defines the left edge of the fullscreen window and right is the monitor whose right edge defines the right edge of the fullscreen window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setHandledIcons</field>
    <field name="args">(bool handled)</field>
    <field name="url">classNETWinInfo.html#a05c22f70a2d7659b4b8e836c926b350f</field>
    <field name="keywords">setHandledIcons NETWinInfo::setHandledIcons NETWinInfo</field>
    <field name="text">handled true if the window handles icons false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setIcon</field>
    <field name="args">(NETIcon icon, bool replace=true)</field>
    <field name="url">classNETWinInfo.html#aeacf220f1698b64cefa715ca70b5e38a</field>
    <field name="keywords">setIcon NETWinInfo::setIcon NETWinInfo</field>
    <field name="text">If replace is True then the specified icon is defined to be the only icon If replace is False then the specified icon is added to a list of icons icon the new icon replace true to replace false to append to the list of icons</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setIconGeometry</field>
    <field name="args">(NETRect geometry)</field>
    <field name="url">classNETWinInfo.html#aff2aba23f23b7cd0efd120449706fda4</field>
    <field name="keywords">setIconGeometry NETWinInfo::setIconGeometry NETWinInfo</field>
    <field name="text">geometry the new icon geometry</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setIconName</field>
    <field name="args">(const char *name)</field>
    <field name="url">classNETWinInfo.html#a5f141654450eec3b153b866e0299e02c</field>
    <field name="keywords">setIconName NETWinInfo::setIconName NETWinInfo</field>
    <field name="text">name the new iconic name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setName</field>
    <field name="args">(const char *name)</field>
    <field name="url">classNETWinInfo.html#aff40999729f1304c6ce6a8fafb9e7b45</field>
    <field name="keywords">setName NETWinInfo::setName NETWinInfo</field>
    <field name="text">name the new name of the window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setOpacity</field>
    <field name="args">(unsigned long opacity)</field>
    <field name="url">classNETWinInfo.html#a1bd1f2ff92d908eece1ef675d68002ae</field>
    <field name="keywords">setOpacity NETWinInfo::setOpacity NETWinInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setPid</field>
    <field name="args">(int pid)</field>
    <field name="url">classNETWinInfo.html#a0c2dc2f4babf3efa3b0454c51504f9b1</field>
    <field name="keywords">setPid NETWinInfo::setPid NETWinInfo</field>
    <field name="text">pid the window s process id</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setStartupId</field>
    <field name="args">(const char *startup_id)</field>
    <field name="url">classNETWinInfo.html#ad92c6841ffdcc826065554bd0df89c62</field>
    <field name="keywords">setStartupId NETWinInfo::setStartupId NETWinInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setState</field>
    <field name="args">(NET::States state, NET::States mask)</field>
    <field name="url">classNETWinInfo.html#a15fd655ed64a418397b2c93dacf45a3a</field>
    <field name="keywords">setState NETWinInfo::setState NETWinInfo</field>
    <field name="text">state the name state mask the mask for the state</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setStrut</field>
    <field name="args">(NETStrut strut)</field>
    <field name="url">classNETWinInfo.html#a55d3265cab9042f4a3904a46ca02fcdd</field>
    <field name="keywords">setStrut NETWinInfo::setStrut NETWinInfo</field>
    <field name="text">use setExtendedStrut() Set the strut for the application window strut the new strut</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setUserTime</field>
    <field name="args">(xcb_timestamp_t time)</field>
    <field name="url">classNETWinInfo.html#aea17de9b0eaa052bafa25e2ec2a6af54</field>
    <field name="keywords">setUserTime NETWinInfo::setUserTime NETWinInfo</field>
    <field name="text">The timestamp is expressed as XServer time If a window is shown with user timestamp older than the time of the last user action it won t be activated after being shown with the special value 0 meaning not to activate the window after being shown</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setVisibleIconName</field>
    <field name="args">(const char *name)</field>
    <field name="url">classNETWinInfo.html#ac2d7bcff77df4a068fa56736077dca33</field>
    <field name="keywords">setVisibleIconName NETWinInfo::setVisibleIconName NETWinInfo</field>
    <field name="text">xterm xterm 2 xterm 3 name the new visible iconic name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setVisibleName</field>
    <field name="args">(const char *visibleName)</field>
    <field name="url">classNETWinInfo.html#abcf5bf06a71c4b73b67f5acd1b216cbc</field>
    <field name="keywords">setVisibleName NETWinInfo::setVisibleName NETWinInfo</field>
    <field name="text">xterm xterm 2 xterm 3 visibleName the new visible name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::setWindowType</field>
    <field name="args">(WindowType type)</field>
    <field name="url">classNETWinInfo.html#ab617fe015564e043bfa5ca8e708b6e8f</field>
    <field name="keywords">setWindowType NETWinInfo::setWindowType NETWinInfo</field>
    <field name="text">type the window type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::startupId</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#aac76a94e5d3d5017cf82c06a83d482fa</field>
    <field name="keywords">startupId NETWinInfo::startupId NETWinInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::state</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#aa26a0bc40a868cfbfb9f335e800d3fe2</field>
    <field name="keywords">state NETWinInfo::state NETWinInfo</field>
    <field name="text">the state of the window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::strut</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a6acff362532b5e3a276cae6b09f5f68a</field>
    <field name="keywords">strut NETWinInfo::strut NETWinInfo</field>
    <field name="text">use strutPartial() Returns the strut specified by this client the strut of the window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::supportsProtocol</field>
    <field name="args">(NET::Protocol protocol) const</field>
    <field name="url">classNETWinInfo.html#a0291f40413807b62431b8e2878efe04c</field>
    <field name="keywords">supportsProtocol NETWinInfo::supportsProtocol NETWinInfo</field>
    <field name="text">true if the Client supports the protocol protocol The window manager protocol to test for 5.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::transientFor</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a4690e2ddaad2aae82dd6557f5b63a2e3</field>
    <field name="keywords">transientFor NETWinInfo::transientFor NETWinInfo</field>
    <field name="text">the mainwindow for this window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::urgency</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#adfa4f51510c911068598458c39c44d39</field>
    <field name="keywords">urgency NETWinInfo::urgency NETWinInfo</field>
    <field name="text">See ICCCM 4.1.2.4 5.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::userTime</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#adba4b96c3dae8d693298db9d868b5849</field>
    <field name="keywords">userTime NETWinInfo::userTime NETWinInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::visibleIconName</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a80f7db38cc5fbc9c55d46d8bf316d1e5</field>
    <field name="keywords">visibleIconName NETWinInfo::visibleIconName NETWinInfo</field>
    <field name="text">Note that this has nothing to do with icons but it s for representations of the window taskbars etc that should be shown when the window is in iconic state See description of _NET_WM_VISIBLE_ICON_NAME for details the visible iconic name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::visibleName</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#aca3a277424174d211b8e10e11c0cc3f9</field>
    <field name="keywords">visibleName NETWinInfo::visibleName NETWinInfo</field>
    <field name="text">the visible name of the window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::windowClassClass</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#af73d7f461eeb195ce513d378ffa7e0c8</field>
    <field name="keywords">windowClassClass NETWinInfo::windowClassClass NETWinInfo</field>
    <field name="text">WM_CLASS property</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::windowClassName</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#aeebdda5d8f00b6c2a749d0fa6145a051</field>
    <field name="keywords">windowClassName NETWinInfo::windowClassName NETWinInfo</field>
    <field name="text">WM_CLASS property</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::windowRole</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a59963aaaf7c747d1f0df3f1b9230a3d3</field>
    <field name="keywords">windowRole NETWinInfo::windowRole NETWinInfo</field>
    <field name="text">WM_WINDOW_ROLE property</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::windowType</field>
    <field name="args">(WindowTypes supported_types) const</field>
    <field name="url">classNETWinInfo.html#a69b6ae89bfd46c0f4d5f4e1676c3a23b</field>
    <field name="keywords">windowType NETWinInfo::windowType NETWinInfo</field>
    <field name="text">Since clients may specify several windows types for a window in order to support backwards compatibility and extensions not available in the NETWM spec you should specify all window types you application supports see the NET::WindowTypeMask mask values for various window types This method will return the first window type that is listed in the supported types or NET::Unknown if none of the window types is supported the type of the window</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::xcbConnection</field>
    <field name="args">() const</field>
    <field name="url">classNETWinInfo.html#a11616f79e1ea83e1c6252a9c2bc85064</field>
    <field name="keywords">xcbConnection NETWinInfo::xcbConnection NETWinInfo</field>
    <field name="text">the XCB connection</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">NETWinInfo::OnAllDesktops</field>
    <field name="url">classNETWinInfo.html#ac89cabd7cbc04c77821586ecfb4590ca</field>
    <field name="keywords">OnAllDesktops NETWinInfo::OnAllDesktops NETWinInfo</field>
    <field name="text">the value to be on all desktops</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::changeDesktop</field>
    <field name="args">(int desktop)</field>
    <field name="url">classNETWinInfo.html#a291a93ca5ebde0d81346738101620b48</field>
    <field name="keywords">changeDesktop NETWinInfo::changeDesktop NETWinInfo</field>
    <field name="text">move to another desktop desktop the number of the desktop</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::changeFullscreenMonitors</field>
    <field name="args">(NETFullscreenMonitors topology)</field>
    <field name="url">classNETWinInfo.html#a633de08820d95a54bc063fcae0bef067</field>
    <field name="keywords">changeFullscreenMonitors NETWinInfo::changeFullscreenMonitors NETWinInfo</field>
    <field name="text">topology A structure top bottom left right representing the fullscreen monitor topology</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::changeState</field>
    <field name="args">(NET::States state, NET::States mask)</field>
    <field name="url">classNETWinInfo.html#a56d44cdd0cfd0b500823410db5a85c6a</field>
    <field name="keywords">changeState NETWinInfo::changeState NETWinInfo</field>
    <field name="text">to Shade Unshade state the new state mask the mask for the state</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">NETWinInfo::virtual_hook</field>
    <field name="args">(int id, void *data)</field>
    <field name="url">classNETWinInfo.html#ab6820e23e9f423892963317f0772794e</field>
    <field name="keywords">virtual_hook NETWinInfo::virtual_hook NETWinInfo</field>
    <field name="text">Unused in this class</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">KKeyServer</field>
    <field name="url">namespaceKKeyServer.html</field>
    <field name="keywords">KKeyServer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::accelModMaskX</field>
    <field name="args">()</field>
    <field name="url">namespaceKKeyServer.html#ae407cb37157ddc3ea23894f32d782812</field>
    <field name="keywords">accelModMaskX KKeyServer::accelModMaskX KKeyServer</field>
    <field name="text">modXShift() modXLock() modXCtrl() modXAlt() modXNumLock() modXWin() modXScrollLock()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::initializeMods</field>
    <field name="args">()</field>
    <field name="url">namespaceKKeyServer.html#a54671bed2d347e7ab104e5c1a89ad87d</field>
    <field name="keywords">initializeMods KKeyServer::initializeMods KKeyServer</field>
    <field name="text">Called automatically by those functions if not already initialized</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::isShiftAsModifierAllowed</field>
    <field name="args">(int keyQt)</field>
    <field name="url">namespaceKKeyServer.html#a8c69e9757d72c01d46dd59d046e41575</field>
    <field name="keywords">isShiftAsModifierAllowed KKeyServer::isShiftAsModifierAllowed KKeyServer</field>
    <field name="text">For example if shift+5 produces Qt wants ctrl+shift+5 recorded as ctrl+ and in that case this function would return false 4.7.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::keyboardHasMetaKey</field>
    <field name="args">()</field>
    <field name="url">namespaceKKeyServer.html#a99b4ad168b54f4bc462bec08e0d49fb8</field>
    <field name="keywords">keyboardHasMetaKey KKeyServer::keyboardHasMetaKey KKeyServer</field>
    <field name="text">Specifically whether the Super or Meta keys are assigned to an X modifier true if the keyboard has a Meta key modXMeta()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::keyQtToCodeMac</field>
    <field name="args">(int keyQt, QList&lt; uint &gt; &amp;keyCodes)</field>
    <field name="url">namespaceKKeyServer.html#adae970c91d26c7f6aca92420b2ffa071</field>
    <field name="keywords">keyQtToCodeMac KKeyServer::keyQtToCodeMac KKeyServer</field>
    <field name="text">The returned values can change if a different keyboard layout is selected keyQt the qt key code keyCodes if successful a list of scancodes will be written here true if successful false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::keyQtToCodeWin</field>
    <field name="args">(int keyQt, uint *sym)</field>
    <field name="url">namespaceKKeyServer.html#ae6b70be8f930c1d8ea63681d94799f78</field>
    <field name="keywords">keyQtToCodeWin KKeyServer::keyQtToCodeWin KKeyServer</field>
    <field name="text">keyQt the qt key code sym if successful the symbol will be written here true if successful false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::keyQtToCodeX</field>
    <field name="args">(int keyQt, int *keyCode)</field>
    <field name="url">namespaceKKeyServer.html#aa52937263a8d8f238b78a9c1884eeaf2</field>
    <field name="keywords">keyQtToCodeX KKeyServer::keyQtToCodeX KKeyServer</field>
    <field name="text">keyQt the qt key code keyCode if successful the symbol will be written here true if successful false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::keyQtToModMac</field>
    <field name="args">(int keyQt, uint &amp;mod)</field>
    <field name="url">namespaceKKeyServer.html#a8b33d4b55841ad2f034df72712cd2479</field>
    <field name="keywords">keyQtToModMac KKeyServer::keyQtToModMac KKeyServer</field>
    <field name="text">keyQt the qt key code mod if successful the modifiers will be written here true if successful false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::keyQtToModWin</field>
    <field name="args">(int keyQt, uint *mod)</field>
    <field name="url">namespaceKKeyServer.html#ab2fa4238363153cb6f9bccb70fa13c19</field>
    <field name="keywords">keyQtToModWin KKeyServer::keyQtToModWin KKeyServer</field>
    <field name="text">keyQt the qt key code mod if successful the modifiers will be written here true if successful false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::keyQtToModX</field>
    <field name="args">(int keyQt, uint *mod)</field>
    <field name="url">namespaceKKeyServer.html#ae8c14557db238d8da20e7f1cf4be93d7</field>
    <field name="keywords">keyQtToModX KKeyServer::keyQtToModX KKeyServer</field>
    <field name="text">keyQt the qt key code mod if successful the modifiers will be written here true if successful false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::keyQtToSymMac</field>
    <field name="args">(int keyQt, int &amp;sym)</field>
    <field name="url">namespaceKKeyServer.html#ae2da6221631e4b6928cada693f501918</field>
    <field name="keywords">keyQtToSymMac KKeyServer::keyQtToSymMac KKeyServer</field>
    <field name="text">keyQt the qt key code sym if successful the symbol will be written here true if successful false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::keyQtToSymX</field>
    <field name="args">(int keyQt, int *sym)</field>
    <field name="url">namespaceKKeyServer.html#a872a7efde5c1c83084651ffba90d1516</field>
    <field name="keywords">keyQtToSymX KKeyServer::keyQtToSymX KKeyServer</field>
    <field name="text">keyQt the qt key code sym if successful the symbol will be written here true if successful false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::modToStringUser</field>
    <field name="args">(uint mod)</field>
    <field name="url">namespaceKKeyServer.html#aeca4c09c25ba39c3c91790c7be931d1b</field>
    <field name="keywords">modToStringUser KKeyServer::modToStringUser KKeyServer</field>
    <field name="text">mod the mask of ORed KKey::ModFlag modifiers the user-readable string</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::modXAlt</field>
    <field name="args">()</field>
    <field name="url">namespaceKKeyServer.html#a2e73f99014a7ad204a9d97a23c539ace</field>
    <field name="keywords">modXAlt KKeyServer::modXAlt KKeyServer</field>
    <field name="text">the X11 Alt Mod1 modifier mask/flag accelModMaskX()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::modXCtrl</field>
    <field name="args">()</field>
    <field name="url">namespaceKKeyServer.html#aa3c0576a00ef44c42cbf9da014da10b7</field>
    <field name="keywords">modXCtrl KKeyServer::modXCtrl KKeyServer</field>
    <field name="text">the X11 Ctrl modifier mask/flag accelModMaskX()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::modXLock</field>
    <field name="args">()</field>
    <field name="url">namespaceKKeyServer.html#a2d399ef8dfe78e0c26642132fab2c69e</field>
    <field name="keywords">modXLock KKeyServer::modXLock KKeyServer</field>
    <field name="text">the X11 Lock modifier mask/flag accelModMaskX()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::modXMeta</field>
    <field name="args">()</field>
    <field name="url">namespaceKKeyServer.html#a2eadea9f61890f68a0c85331928186a7</field>
    <field name="keywords">modXMeta KKeyServer::modXMeta KKeyServer</field>
    <field name="text">the X11 Win Mod3 modifier mask/flag keyboardHasWinKey() accelModMaskX()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::modXModeSwitch</field>
    <field name="args">()</field>
    <field name="url">namespaceKKeyServer.html#ad6b0d854bdd80bb11a0001abcec3506c</field>
    <field name="keywords">modXModeSwitch KKeyServer::modXModeSwitch KKeyServer</field>
    <field name="text">the X11 Mode_switch modifier mask/flag accelModMaskX()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::modXNumLock</field>
    <field name="args">()</field>
    <field name="url">namespaceKKeyServer.html#af22ba15a4b093319ababf4a6fea1d8a3</field>
    <field name="keywords">modXNumLock KKeyServer::modXNumLock KKeyServer</field>
    <field name="text">the X11 NumLock modifier mask/flag accelModMaskX()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::modXScrollLock</field>
    <field name="args">()</field>
    <field name="url">namespaceKKeyServer.html#ab5012bf9d5ad000d9fce354826b369eb</field>
    <field name="keywords">modXScrollLock KKeyServer::modXScrollLock KKeyServer</field>
    <field name="text">the X11 ScrollLock modifier mask/flag accelModMaskX()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::modXShift</field>
    <field name="args">()</field>
    <field name="url">namespaceKKeyServer.html#abef307d03b6c77dca1a69b345fc7c7ba</field>
    <field name="keywords">modXShift KKeyServer::modXShift KKeyServer</field>
    <field name="text">the X11 Shift modifier mask/flag accelModMaskX()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::modXToQt</field>
    <field name="args">(uint modX, int *modQt)</field>
    <field name="url">namespaceKKeyServer.html#ad4e636fc3b5281cac0a8439ed4a4e5b2</field>
    <field name="keywords">modXToQt KKeyServer::modXToQt KKeyServer</field>
    <field name="text">modX the mask of X11 modifiers modQt the mask of Qt key code modifiers will be written here if successful true if successful false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::stringUserToMod</field>
    <field name="args">(const QString &amp;mod)</field>
    <field name="url">namespaceKKeyServer.html#a610a599d70821c37cda8daced3577e53</field>
    <field name="keywords">stringUserToMod KKeyServer::stringUserToMod KKeyServer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::symXToKeyQt</field>
    <field name="args">(uint sym, int *keyQt)</field>
    <field name="url">namespaceKKeyServer.html#aa5e183f739e9a6b0d718100f29609c28</field>
    <field name="keywords">symXToKeyQt KKeyServer::symXToKeyQt KKeyServer</field>
    <field name="text">sym the symbol keyQt if successful the qt key code will be written here true if successful false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::xcbKeyPressEventToQt</field>
    <field name="args">(xcb_generic_event_t *e, int *keyModQt)</field>
    <field name="url">namespaceKKeyServer.html#aecda09c5614e4386835a11b743643aec</field>
    <field name="keywords">xcbKeyPressEventToQt KKeyServer::xcbKeyPressEventToQt KKeyServer</field>
    <field name="text">e the XCB keypress event keyModQt the Qt keycode and mask of Qt key code modifiers will be written here if successful true if successful false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::xcbKeyPressEventToQt</field>
    <field name="args">(xcb_key_press_event_t *e, int *keyModQt)</field>
    <field name="url">namespaceKKeyServer.html#a794ff3fe9ff31d9b93bf04a68c3d789c</field>
    <field name="keywords">xcbKeyPressEventToQt KKeyServer::xcbKeyPressEventToQt KKeyServer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KKeyServer::xEventToQt</field>
    <field name="args">(XEvent *e, int *keyModQt)</field>
    <field name="url">namespaceKKeyServer.html#a9cf038dbe7813c08a74906b5913b63d6</field>
    <field name="keywords">xEventToQt KKeyServer::xEventToQt KKeyServer</field>
    <field name="text">e the X11 keypress event keyModQt the Qt keycode and mask of Qt key code modifiers will be written here if successful true if successful false otherwise</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">KKeyServer::g_rgModInfo</field>
    <field name="args">[4]</field>
    <field name="url">namespaceKKeyServer.html#a6cd64aa81277a920a62fa9e2ea23b4c8</field>
    <field name="keywords"></field>
    <field name="text">Qt::SHIFT Qt::CTRL Qt::ALT Qt::META</field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">KKeyServer::g_rgX11ModInfo</field>
    <field name="args">[4]</field>
    <field name="url">namespaceKKeyServer.html#ae68c751c4c41a54f2821b63ca42741d7</field>
    <field name="keywords"></field>
    <field name="text">Qt::SHIFT X11_ONLY ShiftMask Qt::CTRL X11_ONLY ControlMask Qt::ALT X11_ONLY Mod1Mask Qt::META X11_ONLY Mod4Mask</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">KWindowEffects</field>
    <field name="url">namespaceKWindowEffects.html</field>
    <field name="keywords">KWindowEffects</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowEffects::enableBackgroundContrast</field>
    <field name="args">(WId window, bool enable=true, qreal contrast=1, qreal intensity=1, qreal saturation=1, const QRegion &amp;region=QRegion())</field>
    <field name="url">namespaceKWindowEffects.html#a166a5fc7121ecf57a69fd19545c6f724</field>
    <field name="keywords">enableBackgroundContrast KWindowEffects::enableBackgroundContrast KWindowEffects</field>
    <field name="text">The given region will overwrite any previous backgroundcontrast region Passing a null region will enable the blur effect for the whole window The region is relative to the top-left corner of the client area If enable is false blur will be disabled for the whole window region is ignored Note that you will usually want to set the region to the shape of the window excluding any shadow or halo window The window for which to enable the background contrast effect enable Enable the effect if true disable it if false brightness How to modify the area brightness from 0 make it black to 2 make it white 1 leaves it unchanged region The region within the window where the background will be modified</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowEffects::enableBlurBehind</field>
    <field name="args">(WId window, bool enable=true, const QRegion &amp;region=QRegion())</field>
    <field name="url">namespaceKWindowEffects.html#adc5fc0dee7b2464c99328d5e2f601269</field>
    <field name="keywords">enableBlurBehind KWindowEffects::enableBlurBehind KWindowEffects</field>
    <field name="text">The given region will overwrite any previous blur-behind region Passing a null region will enable the blur effect for the whole window The region is relative to the top-left corner of the client area If enable is false blur will be disabled for the whole window region is ignored Note that you will usually want to set the region to the shape of the window excluding any shadow or halo window The window for which to enable the blur effect enable Enable the effect if true disable it if false region The region within the window where the background will be blurred</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowEffects::highlightWindows</field>
    <field name="args">(WId controller, const QList&lt; WId &gt; &amp;ids)</field>
    <field name="url">namespaceKWindowEffects.html#aafb9d94f52b3859067e8f7af36679ecb</field>
    <field name="keywords">highlightWindows KWindowEffects::highlightWindows KWindowEffects</field>
    <field name="text">controller The window which is the controller of this effect The property will be set on this window It will be removed by the effect ids all the windows which should be highlighted</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowEffects::isEffectAvailable</field>
    <field name="args">(Effect effect)</field>
    <field name="url">namespaceKWindowEffects.html#ae24dc2523465c246ed82a1ef9a7256fd</field>
    <field name="keywords">isEffectAvailable KWindowEffects::isEffectAvailable KWindowEffects</field>
    <field name="text">if an atom property is available effect the effect we want to check</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowEffects::markAsDashboard</field>
    <field name="args">(WId window)</field>
    <field name="url">namespaceKWindowEffects.html#a5bd4b6656ee8da93ef97d1ebf147d965</field>
    <field name="keywords">markAsDashboard KWindowEffects::markAsDashboard KWindowEffects</field>
    <field name="text">window The window for which to enable the blur effect</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowEffects::presentWindows</field>
    <field name="args">(WId controller, const QList&lt; WId &gt; &amp;ids)</field>
    <field name="url">namespaceKWindowEffects.html#a9d1e02fbaa04a4388ab306c402ff4199</field>
    <field name="keywords">presentWindows KWindowEffects::presentWindows KWindowEffects</field>
    <field name="text">controller The window which is the controller of this effect The property will be set on this window It will be removed by the effect ids all the windows which should be presented</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowEffects::presentWindows</field>
    <field name="args">(WId controller, int desktop=NET::OnAllDesktops)</field>
    <field name="url">namespaceKWindowEffects.html#a2d0298563600fbf6e4b090d9e8347756</field>
    <field name="keywords">presentWindows KWindowEffects::presentWindows KWindowEffects</field>
    <field name="text">controller The window which is the controller of this effect The property will be set on this window It will be removed by the effect desktop The desktop whose windows should be presented for all desktops</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowEffects::slideWindow</field>
    <field name="args">(WId id, SlideFromLocation location, int offset)</field>
    <field name="url">namespaceKWindowEffects.html#ab6a2f7c15b4e3f5eb7d2825668e28be5</field>
    <field name="keywords">slideWindow KWindowEffects::slideWindow KWindowEffects</field>
    <field name="text">id of the window on which we want to apply the effect location edge of the screen from which we want the sliding effect Desktop and Floating won t have effect offset distance in pixels from the screen edge defined by location</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowEffects::slideWindow</field>
    <field name="args">(QWidget *widget, SlideFromLocation location)</field>
    <field name="url">namespaceKWindowEffects.html#aa84c5ab9961a1df0e1d875fa0ca21ce2</field>
    <field name="keywords">slideWindow KWindowEffects::slideWindow KWindowEffects</field>
    <field name="text">widget QWidget corresponding to the top level window we want to animate location edge of the screen from which we want the sliding effect Desktop and Floating won t have effect</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWindowEffects::windowSizes</field>
    <field name="args">(const QList&lt; WId &gt; &amp;ids)</field>
    <field name="url">namespaceKWindowEffects.html#a79b95fe909e1d6121a458229e4fd9091</field>
    <field name="keywords">windowSizes KWindowEffects::windowSizes KWindowEffects</field>
    <field name="text">dimension of all the windows passed as parameter ids all the windows we want the size</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">index</field>
    <field name="url">index.html</field>
    <field name="keywords"></field>
    <field name="text">KWindowSystem Access to the windowing system Introduction Convenience access to certain properties and features of the windowing system KWindowSystem provides information about the windowing system and allows interaction with the windowing system It provides an high level API which is windowing system independent and has platform specific implementations This API is inspired by X11 and thus not all functionality is available on all windowing systems In addition to the high level API this framework also provides several more low level classes for interaction with the X Windowing System</field>
  </doc>
</add>
