{"name": "kpackage-5.26.0", "fancyname": "Package", "docfields": [{"type": "file", "name": "version.h", "url": "version_8h.html", "keyword": "version.h", "text": ""}, {"type": "define", "name": "PACKAGE_IS_VERSION", "url": "version_8h.html#a5ae369ade4348c24e80b79f89979459e", "keyword": "PACKAGE_IS_VERSION", "text": "Not useful for detecting the version of kpackage at runtime"}, {"type": "function", "name": "KPackage::isPluginVersionCompatible", "url": "namespaceKPackage.html#a297c944b0c50a9d1b086156d0d5108ac", "keyword": "isPluginVersionCompatible KPackage::isPluginVersionCompatible KPackage isPluginVersionCompatible KPackage::isPluginVersionCompatible KPackage", "text": ""}, {"type": "function", "name": "KPackage::version", "url": "namespaceKPackage.html#a54e3f7be495f220dd0071ca568f6cdfd", "keyword": "version KPackage::version KPackage version KPackage::version KPackage", "text": ""}, {"type": "function", "name": "KPackage::versionMajor", "url": "namespaceKPackage.html#ac2e38e5a02c8f576343ff9dd3188d8ac", "keyword": "versionMajor KPackage::versionMajor KPackage versionMajor KPackage::versionMajor KPackage", "text": ""}, {"type": "function", "name": "KPackage::versionMinor", "url": "namespaceKPackage.html#a190e36b67ff216c265e3fa3d728592b1", "keyword": "versionMinor KPackage::versionMinor KPackage versionMinor KPackage::versionMinor KPackage", "text": ""}, {"type": "function", "name": "KPackage::versionRelease", "url": "namespaceKPackage.html#a0e1aac3b5d8c62f4cc208a4f91f8f9af", "keyword": "versionRelease KPackage::versionRelease KPackage versionRelease KPackage::versionRelease KPackage", "text": ""}, {"type": "function", "name": "KPackage::versionString", "url": "namespaceKPackage.html#acf9952909ac0814eb835fb36af937f39", "keyword": "versionString KPackage::versionString KPackage versionString KPackage::versionString KPackage", "text": ""}, {"type": "page", "name": "deprecated", "url": "deprecated.html", "keyword": null, "text": "Deprecated List Member KPackage Package contentsHash const Since 5.21 use cryptographicHash"}, {"type": "namespace", "name": "KPackage", "url": "namespaceKPackage.html", "keyword": "KPackage", "text": ""}, {"type": "variable", "name": "KPackage::dest", "url": "namespaceKPackage.html#a13a3b5f9332520c3ff3d1b2436cc6957", "keyword": null, "text": "QVariantMap vm"}, {"type": "class", "name": "KPackage::Package", "url": "classKPackage_1_1Package.html", "keyword": "Package", "text": "Package defines what is in a package and provides easy access to the contents To define a package one might write the following code One may also choose to create a subclass of PackageStructure and include the setup in the constructor Either way Package creates a self-documenting contract between the packager and the application without exposing package internals such as actual on-disk structure of the package or requiring that all contents be explicitly known ahead of time Subclassing PackageStructure does have provide a number of potential const benefits the package can be notified of path changes via the virtual pathChanged() method the subclass may implement mechanisms to install and remove packages using the virtual install and uninstall methods subclasses can be compiled as plugins for easy re-use"}, {"type": "enum", "name": "KPackage::Package::JobError", "url": "classKPackage_1_1Package.html#a526ba12835121705f80664f304cff55b", "keyword": "JobError KPackage::Package::JobError KPackage::Package", "text": "5.17"}, {"type": "enumvalue", "name": "KPackage::Package::PackageFileNotFoundError", "url": "classKPackage_1_1Package.html#a526ba12835121705f80664f304cff55ba817c7fdd3bf9d5609b5a03a2706c2654", "keyword": "PackageFileNotFoundError KPackage::Package::PackageFileNotFoundError KPackage::Package", "text": "Cannot create package root directory"}, {"type": "enumvalue", "name": "KPackage::Package::UnsupportedArchiveFormatError", "url": "classKPackage_1_1Package.html#a526ba12835121705f80664f304cff55ba0d1efcfd7d61d43431332a1d50b10a04", "keyword": "UnsupportedArchiveFormatError KPackage::Package::UnsupportedArchiveFormatError KPackage::Package", "text": "The package file does not exist"}, {"type": "enumvalue", "name": "KPackage::Package::PackageOpenError", "url": "classKPackage_1_1Package.html#a526ba12835121705f80664f304cff55baf9bd56e4081091d83c71b2530a78f0a7", "keyword": "PackageOpenError KPackage::Package::PackageOpenError KPackage::Package", "text": "The archive format of the package is not supported"}, {"type": "enumvalue", "name": "KPackage::Package::MetadataFileMissingError", "url": "classKPackage_1_1Package.html#a526ba12835121705f80664f304cff55ba5ddd14bf4805accaaf176d635519f3f8", "keyword": "MetadataFileMissingError KPackage::Package::MetadataFileMissingError KPackage::Package", "text": "Can t open the package file for reading"}, {"type": "enumvalue", "name": "KPackage::Package::PluginNameMissingError", "url": "classKPackage_1_1Package.html#a526ba12835121705f80664f304cff55bafee26e3755ffd31be58957a170cd88a9", "keyword": "PluginNameMissingError KPackage::Package::PluginNameMissingError KPackage::Package", "text": "The package doesn t have a metadata.desktop file"}, {"type": "enumvalue", "name": "KPackage::Package::PluginNameInvalidError", "url": "classKPackage_1_1Package.html#a526ba12835121705f80664f304cff55ba290cad912f4265afac2b8fda7b86950e", "keyword": "PluginNameInvalidError KPackage::Package::PluginNameInvalidError KPackage::Package", "text": "The metadata.desktop file doesn t specify a plugin name"}, {"type": "enumvalue", "name": "KPackage::Package::UpdatePackageTypeMismatchError", "url": "classKPackage_1_1Package.html#a526ba12835121705f80664f304cff55ba55e85085ca8799f5c7c654d6c43db2c9", "keyword": "UpdatePackageTypeMismatchError KPackage::Package::UpdatePackageTypeMismatchError KPackage::Package", "text": "The plugin name contains charaters different from letters digits dots and underscores"}, {"type": "enumvalue", "name": "KPackage::Package::OldVersionRemovalError", "url": "classKPackage_1_1Package.html#a526ba12835121705f80664f304cff55ba2ef2f559cf41ae6190c1bac0e2f9dbf1", "keyword": "OldVersionRemovalError KPackage::Package::OldVersionRemovalError KPackage::Package", "text": "A package with this plugin name was already installed but has a different type in the metadata.desktop file"}, {"type": "enumvalue", "name": "KPackage::Package::NewerVersionAlreadyInstalledError", "url": "classKPackage_1_1Package.html#a526ba12835121705f80664f304cff55ba57f118b19d906807b6db09ccfbaecca9", "keyword": "NewerVersionAlreadyInstalledError KPackage::Package::NewerVersionAlreadyInstalledError KPackage::Package", "text": "Failed to remove the old version of the package during an upgrade"}, {"type": "enumvalue", "name": "KPackage::Package::PackageAlreadyInstalledError", "url": "classKPackage_1_1Package.html#a526ba12835121705f80664f304cff55ba1c6ea2f1398abdd197d60a26e3bdae75", "keyword": "PackageAlreadyInstalledError KPackage::Package::PackageAlreadyInstalledError KPackage::Package", "text": "We tried to update but the same version or a newer one is already installed"}, {"type": "enumvalue", "name": "KPackage::Package::PackageMoveError", "url": "classKPackage_1_1Package.html#a526ba12835121705f80664f304cff55ba0490d7178b226c1e72699858f3a715cb", "keyword": "PackageMoveError KPackage::Package::PackageMoveError KPackage::Package", "text": "The package is already installed and a normal install not update was performed"}, {"type": "enumvalue", "name": "KPackage::Package::PackageCopyError", "url": "classKPackage_1_1Package.html#a526ba12835121705f80664f304cff55baee2ff4ad94bd0a9d9e479f273425f0e2", "keyword": "PackageCopyError KPackage::Package::PackageCopyError KPackage::Package", "text": "Failure to move a package from the system temporary folder to its final destination"}, {"type": "enumvalue", "name": "KPackage::Package::PackageUninstallError", "url": "classKPackage_1_1Package.html#a526ba12835121705f80664f304cff55bafa5f150856e4e36b338e3fcb2a3b0ff0", "keyword": "PackageUninstallError KPackage::Package::PackageUninstallError KPackage::Package", "text": "Failure to copy a package folder from somewhere in the filesystem to its final destination Failure to uninstall a package"}, {"type": "function", "name": "KPackage::Package::Package", "url": "classKPackage_1_1Package.html#a92bb0aacac7ebce910ece58852eef618", "keyword": "Package KPackage::Package::Package KPackage::Package", "text": "structure if a NULL pointer is passed in this will creates an empty invalid Package otherwise the structure is allowed to set up the Package s initial layout 4.6"}, {"type": "function", "name": "KPackage::Package::Package", "url": "classKPackage_1_1Package.html#aec74842590de8145dad8c5a815d5ddee", "keyword": "Package KPackage::Package::Package KPackage::Package", "text": "4.6"}, {"type": "function", "name": "KPackage::Package::addDirectoryDefinition", "url": "classKPackage_1_1Package.html#af6b028f7ba2b8f3eed6c3d953dc02cd4", "keyword": "addDirectoryDefinition KPackage::Package::addDirectoryDefinition KPackage::Package", "text": "It is added as a not-required element with no associated mimeTypes Starting in 4.6 if an entry with the given key already exists the path is added to it as a search alternative key used as an internal label for this directory path the path within the package for this directory name the user visible translated name for the directory"}, {"type": "function", "name": "KPackage::Package::addFileDefinition", "url": "classKPackage_1_1Package.html#a9457b9721e713a026a78dca479945cfc", "keyword": "addFileDefinition KPackage::Package::addFileDefinition KPackage::Package", "text": "It is added as a not-required element with no associated mimeTypes Starting in 4.6 if an entry with the given key already exists the path is added to it as a search alternative key used as an internal label for this file path the path within the package for this file name the user visible translated name for the file"}, {"type": "function", "name": "KPackage::Package::allowExternalPaths", "url": "classKPackage_1_1Package.html#ac7c546a8f691b12b75ab3ffca4510c5a", "keyword": "allowExternalPaths KPackage::Package::allowExternalPaths KPackage::Package", "text": "true if paths/symlinks outside the package itself should be followed By default this is set to false for security reasons"}, {"type": "function", "name": "KPackage::Package::contentsHash", "url": "classKPackage_1_1Package.html#a89876aba87fea055b412b02b8cfa809a", "keyword": "contentsHash KPackage::Package::contentsHash KPackage::Package", "text": "a SHA1 hash digest of the contents of the package in hexadecimal form 4.4 Since 5.21 use cryptographicHash"}, {"type": "function", "name": "KPackage::Package::contentsPrefixPaths", "url": "classKPackage_1_1Package.html#ac28b694bd82296872bf3d955fc461dc8", "keyword": "contentsPrefixPaths KPackage::Package::contentsPrefixPaths KPackage::Package", "text": "the prefix paths inserted between the base path and content entries in order of priority When searching for a file all paths will be tried in order 4.6"}, {"type": "function", "name": "KPackage::Package::cryptographicHash", "url": "classKPackage_1_1Package.html#a0b8d44882dad95be3af9f6855fa68771", "keyword": "cryptographicHash KPackage::Package::cryptographicHash KPackage::Package", "text": "a hash digest of the contents of the package in hexadecimal form 5.21"}, {"type": "function", "name": "KPackage::Package::defaultPackageRoot", "url": "classKPackage_1_1Package.html#a42956f741658479b1043b4b6ec7d57a5", "keyword": "defaultPackageRoot KPackage::Package::defaultPackageRoot KPackage::Package", "text": "preferred package root This defaults to kpackage/generic/"}, {"type": "function", "name": "KPackage::Package::directories", "url": "classKPackage_1_1Package.html#af2436381b0268a17172d9272cf1347d8", "keyword": "directories KPackage::Package::directories KPackage::Package", "text": "all directories registered as part of this Package s structure"}, {"type": "function", "name": "KPackage::Package::entryList", "url": "classKPackage_1_1Package.html#a671fb4ea1e063a22e418912cbf48287f", "keyword": "entryList KPackage::Package::entryList KPackage::Package", "text": "fileType the type of file to look for as defined in the package structure list of files by name suitable for passing to filePath"}, {"type": "function", "name": "KPackage::Package::fallbackPackage", "url": "classKPackage_1_1Package.html#ab1c25e4943b6d73422235f90c416e528", "keyword": "fallbackPackage KPackage::Package::fallbackPackage KPackage::Package", "text": "The fallback package root path"}, {"type": "function", "name": "KPackage::Package::filePath", "url": "classKPackage_1_1Package.html#a935b5f3f1302c06dcf0fb348cea42c00", "keyword": "filePath KPackage::Package::filePath KPackage::Package", "text": "Example finding the main script in a scripting package filePath Example finding a specific image in the images directory filePath key the key of the file type to look for filename optional name of the file to locate within the package path to the file on disk QString() if not found"}, {"type": "function", "name": "KPackage::Package::files", "url": "classKPackage_1_1Package.html#ad02987e0916b09862e9689b1b6242853", "keyword": "files KPackage::Package::files KPackage::Package", "text": "all files registered as part of this Package s structure"}, {"type": "function", "name": "KPackage::Package::hasValidStructure", "url": "classKPackage_1_1Package.html#a27242b0250fb09264da2c9594b1d95b4", "keyword": "hasValidStructure KPackage::Package::hasValidStructure KPackage::Package", "text": "true if this package has a valid PackageStructure associatedw it with it A package may not be valid but have a valid structure Useful when dealing with Package objects in a semi-initialized state e.g before calling setPath() 5.1"}, {"type": "function", "name": "KPackage::Package::install", "url": "classKPackage_1_1Package.html#a5e2ba569f2655e92f6fd767c87d55338", "keyword": "install KPackage::Package::install KPackage::Package", "text": "By default installs a native KPackage::Package After the KJob will emitted finished() if the install went well the Package instance will be guaranteed to have loaded the package just installed and be valid and usable KJob to track installation progress and result"}, {"type": "function", "name": "KPackage::Package::isRequired", "url": "classKPackage_1_1Package.html#a7ca5269711e6df819855c2309e219d8d", "keyword": "isRequired KPackage::Package::isRequired KPackage::Package", "text": "true if the item at path exists and is required"}, {"type": "function", "name": "KPackage::Package::isValid", "url": "classKPackage_1_1Package.html#a42c002590166a55c26e332f065c8efd6", "keyword": "isValid KPackage::Package::isValid KPackage::Package", "text": "true if all the required components exist"}, {"type": "function", "name": "KPackage::Package::metadata", "url": "classKPackage_1_1Package.html#aa73d0c22a411bc6442a981b71f99b197", "keyword": "metadata KPackage::Package::metadata KPackage::Package", "text": "the package metadata object"}, {"type": "function", "name": "KPackage::Package::mimeTypes", "url": "classKPackage_1_1Package.html#afb541ef59717089754772f98b3a586f9", "keyword": "mimeTypes KPackage::Package::mimeTypes KPackage::Package", "text": "the mimeTypes associated with the path if any"}, {"type": "function", "name": "KPackage::Package::name", "url": "classKPackage_1_1Package.html#a2bdeae6203245afc5137ef67d10ff416", "keyword": "name KPackage::Package::name KPackage::Package", "text": "user visible name for the given entry"}, {"type": "function", "name": "KPackage::Package::operator=", "url": "classKPackage_1_1Package.html#a13621692e42b91a259c268ebd38a8967", "keyword": "operator= KPackage::Package::operator= KPackage::Package", "text": "4.6"}, {"type": "function", "name": "KPackage::Package::path", "url": "classKPackage_1_1Package.html#a817b5ee4ecbf8d3c6b28b79fb6690e6d", "keyword": "path KPackage::Package::path KPackage::Package", "text": "the path to the root of this particular package"}, {"type": "function", "name": "KPackage::Package::removeDefinition", "url": "classKPackage_1_1Package.html#abf44e0421dbaee3b23acbe2298250291", "keyword": "removeDefinition KPackage::Package::removeDefinition KPackage::Package", "text": "4.6 key the internal label of the file or directory to remove"}, {"type": "function", "name": "KPackage::Package::requiredDirectories", "url": "classKPackage_1_1Package.html#a7168fa0de8dfc4ee6dfca94b192e9a13", "keyword": "requiredDirectories KPackage::Package::requiredDirectories KPackage::Package", "text": "all directories registered as part of this Package s required structure"}, {"type": "function", "name": "KPackage::Package::requiredFiles", "url": "classKPackage_1_1Package.html#af2d0c3bae78f97744aa4dd2faad2206f", "keyword": "requiredFiles KPackage::Package::requiredFiles KPackage::Package", "text": "all files registered as part of this Package s required structure"}, {"type": "function", "name": "KPackage::Package::setAllowExternalPaths", "url": "classKPackage_1_1Package.html#a9e904f2155c95a824f26a155c317130e", "keyword": "setAllowExternalPaths KPackage::Package::setAllowExternalPaths KPackage::Package", "text": "allow true if paths/symlinks outside of the package should be followed false if they should be rejected"}, {"type": "function", "name": "KPackage::Package::setContentsPrefixPaths", "url": "classKPackage_1_1Package.html#a03abf46f30a34d0187ec0aed71455b62", "keyword": "setContentsPrefixPaths KPackage::Package::setContentsPrefixPaths KPackage::Package", "text": "This defaults to and is added automatically between the base path and the entries as defined by the package structure Multiple entries can be added In this case each file request will be searched in all prefixes in order and the first found will be returned prefix paths the directory prefix to use 4.6"}, {"type": "function", "name": "KPackage::Package::setDefaultMimeTypes", "url": "classKPackage_1_1Package.html#afe7db278e405471f4274b9d5abd82f41", "keyword": "setDefaultMimeTypes KPackage::Package::setDefaultMimeTypes KPackage::Package", "text": "Handy for packages with only one or predominantly one file type mimeTypes a list of mimeTypes"}, {"type": "function", "name": "KPackage::Package::setDefaultPackageRoot", "url": "classKPackage_1_1Package.html#a8e1fea647f3d2d7ecf9582c12bfdd72b", "keyword": "setDefaultPackageRoot KPackage::Package::setDefaultPackageRoot KPackage::Package", "text": ""}, {"type": "function", "name": "KPackage::Package::setFallbackPackage", "url": "classKPackage_1_1Package.html#af1f796d20e7316a349c5638dfb6d49d0", "keyword": "setFallbackPackage KPackage::Package::setFallbackPackage KPackage::Package", "text": "path package root path setPath"}, {"type": "function", "name": "KPackage::Package::setMimeTypes", "url": "classKPackage_1_1Package.html#a283b27d6f0f9a8eac768d22598849347", "keyword": "setMimeTypes KPackage::Package::setMimeTypes KPackage::Package", "text": "key the entry within the package mimeTypes a list of mimeTypes"}, {"type": "function", "name": "KPackage::Package::setPath", "url": "classKPackage_1_1Package.html#a33ecf5e38f16b34cf703247ac8fdf540", "keyword": "setPath KPackage::Package::setPath KPackage::Package", "text": "path an absolute path or a relative path to the default package root 4.3"}, {"type": "function", "name": "KPackage::Package::setRequired", "url": "classKPackage_1_1Package.html#a1e24e397f3d2baa0fb8de30ca47fb230", "keyword": "setRequired KPackage::Package::setRequired KPackage::Package", "text": "The path must already have been added using addDirectoryDefinition or addFileDefinition key the entry within the package required true if this entry is required false if not"}, {"type": "function", "name": "KPackage::Package::uninstall", "url": "classKPackage_1_1Package.html#ac14a4ce753193cca8de1ea0e073e0342", "keyword": "uninstall KPackage::Package::uninstall KPackage::Package", "text": "KJob to track removal progress and result"}, {"type": "function", "name": "KPackage::Package::update", "url": "classKPackage_1_1Package.html#a6862c15d981d22d34e5d88744bf88434", "keyword": "update KPackage::Package::update KPackage::Package", "text": "By default installs a native KPackage::Package If an older version is already installed it removes the old one If the installed one is newer an error will occur After the KJob will emitted finished() if the install went well the Package instance will be guaranteed to have loaded the package just updated and be valid and usable KJob to track installation progress and result 5.17"}, {"type": "class", "name": "KPackage::PackageLoader", "url": "classKPackage_1_1PackageLoader.html", "keyword": "PackageLoader", "text": "The plugin loader must be set before any plugins are loaded otherwise for safety reasons the default PackageLoader implementation will be used The reimplemented version should not do more than simply returning a loaded plugin It should not init() it and it should not hang on to it Ryan Rix"}, {"type": "function", "name": "KPackage::PackageLoader::addKnownPackageStructure", "url": "classKPackage_1_1PackageLoader.html#a737e46fd9ea0a9f9f77d64c301190032", "keyword": "addKnownPackageStructure KPackage::PackageLoader::addKnownPackageStructure KPackage::PackageLoader", "text": "packageFormat the package format such as structure the package structure we want to be able to load packages from 5.10"}, {"type": "function", "name": "KPackage::PackageLoader::findPackages", "url": "classKPackage_1_1PackageLoader.html#a08944f550228611fa0d5bb65020ee186", "keyword": "findPackages KPackage::PackageLoader::findPackages KPackage::PackageLoader", "text": "packageFormat the format of the packages to list packageRoot the root folder where the packages are installed If not specified the default from the packageformat will be taken filter a filter function that will be called on each package will return true for the matching ones metadata for all the matching packages 5.10"}, {"type": "function", "name": "KPackage::PackageLoader::listPackages", "url": "classKPackage_1_1PackageLoader.html#ad2480cf85aad0055e064487a10c3cb53", "keyword": "listPackages KPackage::PackageLoader::listPackages KPackage::PackageLoader", "text": "packageFormat the format of the packages to list packageRoot the root folder where the packages are installed If not specified the default from the packageformat will be taken metadata for all the matching packages"}, {"type": "function", "name": "KPackage::PackageLoader::loadPackage", "url": "classKPackage_1_1PackageLoader.html#a1d08c2f819966419fd2b362b87ad4ea1", "keyword": "loadPackage KPackage::PackageLoader::loadPackage KPackage::PackageLoader", "text": "packageFormat the format of the package to load packagePath the package name the path of the package relative to the packageFormat root path If not specified it will have to be set manually with Package::setPath() by the caller a Package object matching name or an invalid package on failure"}, {"type": "function", "name": "KPackage::PackageLoader::loadPackageStructure", "url": "classKPackage_1_1PackageLoader.html#a8e1b49ff73ccf6cf7a8c5afc61fa42e2", "keyword": "loadPackageStructure KPackage::PackageLoader::loadPackageStructure KPackage::PackageLoader", "text": "The structure can then be used as paramenter for a Package instance constructor packageFormat the package format such as the structure instance"}, {"type": "function", "name": "KPackage::PackageLoader::self", "url": "classKPackage_1_1PackageLoader.html#a4f90700cbe677d3e6d4c40cefe618fce", "keyword": "self KPackage::PackageLoader::self KPackage::PackageLoader", "text": ""}, {"type": "function", "name": "KPackage::PackageLoader::setPackageLoader", "url": "classKPackage_1_1PackageLoader.html#a2c36fba4b6299ee5ac085f87eda04832", "keyword": "setPackageLoader KPackage::PackageLoader::setPackageLoader KPackage::PackageLoader", "text": "loader A subclass of PackageLoader which will be supplied by the application"}, {"type": "function", "name": "KPackage::PackageLoader::internalLoadPackage", "url": "classKPackage_1_1PackageLoader.html#ad55d500c4f2d58c3f4f634422f6e4143", "keyword": "internalLoadPackage KPackage::PackageLoader::internalLoadPackage KPackage::PackageLoader", "text": "If the service requested is not recognized then the implementation should return an empty and invalid Package() This method is called by loadPackage prior to attempting to load a Package using the standard plugin mechanisms packageFormat the format of the package to load a Package instance with the proper PackageStructure"}, {"type": "page", "name": "index", "url": "index.html", "keyword": null, "text": "Package Framework Installation and loading of additional content ex scripts images as packages Introduction The Package framework lets the user install and load packages of non binary content such as scripted extensions or graphic assets as if they were traditional plugins Note for packagers After a package gets installed its index should be regenerated Index files CANNOT be shipped directly in packages However they should be regenerated as post install script for the package itself In the cmake build directory of applications with packages there will be the file regenerateindex.sh that will contain all the commands that have to be executed in post install scripts to regenerate the indexes"}]}