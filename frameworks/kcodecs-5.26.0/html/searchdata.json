{"name": "kcodecs-5.26.0", "fancyname": "KCodecs", "docfields": [{"type": "file", "name": "kcodecsbase64.cpp", "url": "kcodecsbase64_8cpp.html", "keyword": "kcodecsbase64.cpp", "text": "Defines the Base64Codec and Rfc2047BEncodingCodec classes Marc Mutz"}, {"type": "file", "name": "kcodecsbase64.h", "url": "kcodecsbase64_8h.html", "keyword": "kcodecsbase64.h", "text": "Defines the Base64Codec and Rfc2047BEncodingCodec classes Marc Mutz base64 a binary to text encoding scheme based on RFC1421 RFC 1421 RFC that defines the Privacy Enhancement for Internet Electronic Mail: Part I: Message Encryption and Authentication Procedures RFC 2045 RFC that defines the MIME Part One: Format of Internet Message Bodies RFC 2047 RFC that defines the MIME Part Three: Message Header Extensions for Non-ASCII Text RFC 2047B Section 4.1 of RFC2047"}, {"type": "file", "name": "kcodecsidentity.cpp", "url": "kcodecsidentity_8cpp.html", "keyword": "kcodecsidentity.cpp", "text": "Defines the classes IdentityCodec SevenBitCodec EightBitCodec and BinaryCodec Marc Mutz"}, {"type": "file", "name": "kcodecsidentity.h", "url": "kcodecsidentity_8h.html", "keyword": "kcodecsidentity.h", "text": "Defines the classes IdentityCodec SevenBitCodec EightBitCodec and BinaryCodec Marc Mutz"}, {"type": "file", "name": "kcodecsqp.cpp", "url": "kcodecsqp_8cpp.html", "keyword": "kcodecsqp.cpp", "text": "Defines the classes QuotedPrintableCodec Rfc2047QEncodingCodec and Rfc2231EncodingCodec Marc Mutz"}, {"type": "function", "name": "KCodecs::binToHex", "url": "namespaceKCodecs.html#aa0d45d1332341013cf01f31c0f9fc216", "keyword": "binToHex KCodecs::binToHex KCodecs binToHex KCodecs::binToHex KCodecs", "text": "So input of value 0 15 returns 0 1 F Input values greater than 15 will produce undesired results value is an unsigned character containing the 4-bit input value"}, {"type": "function", "name": "KCodecs::highNibble", "url": "namespaceKCodecs.html#a51801c5d802b171d817d9bac8cceb0c6", "keyword": "highNibble KCodecs::highNibble KCodecs highNibble KCodecs::highNibble KCodecs", "text": "ch is an unsigned character containing the 8-bit input value"}, {"type": "function", "name": "KCodecs::keep", "url": "namespaceKCodecs.html#a82ff43b4562df293eda894a1d95b668a", "keyword": "keep KCodecs::keep KCodecs keep KCodecs::keep KCodecs", "text": "ch is an unsigned character containing the 8-bit input value"}, {"type": "function", "name": "KCodecs::lowNibble", "url": "namespaceKCodecs.html#a0f1cc923fb48a2f0b9e0c7d756f71a34", "keyword": "lowNibble KCodecs::lowNibble KCodecs lowNibble KCodecs::lowNibble KCodecs", "text": "ch is an unsigned character containing the 8-bit input value"}, {"type": "file", "name": "kcodecsqp.h", "url": "kcodecsqp_8h.html", "keyword": "kcodecsqp.h", "text": "Defines the classes QuotedPrintableCodec Rfc2047QEncodingCodec and Rfc2231EncodingCodec Marc Mutz quoted-printable a binary to text encoding scheme based on Section 6.7 of RFC2045 RFC 2047Q Section 4.2 of RFC2047 RFC 2231 RFC that defines the MIME Parameter Value and Encoded Word Extensions: Character Sets Languages and Continuations"}, {"type": "file", "name": "kcodecsuuencode.cpp", "url": "kcodecsuuencode_8cpp.html", "keyword": "kcodecsuuencode.cpp", "text": "Defines the UUCodec class Marc Mutz"}, {"type": "file", "name": "kcodecsuuencode.h", "url": "kcodecsuuencode_8h.html", "keyword": "kcodecsuuencode.h", "text": "Defines the UUCodec class Marc Mutz uuencode a binary to text encoding scheme For more information see the Wikipedia Uuencode page"}, {"type": "file", "name": "kemailaddress.h", "url": "kemailaddress_8h.html", "keyword": "kemailaddress.h", "text": "Email address validation methods Matt Douhan"}, {"type": "enum", "name": "KEmailAddress::EmailParseResult", "url": "group__emailvalidation.html#gadc2d42daf24ca8b10c388aba8591fcd8", "keyword": "EmailParseResult KEmailAddress::EmailParseResult KEmailAddress EmailParseResult KEmailAddress::EmailParseResult KEmailAddress EmailParseResult KEmailAddress::EmailParseResult KEmailAddress", "text": "The only success code in this enumeration is AddressOK all the other values indicate some specific problem with the address which is being validated Result type for splitAddress() isValidAddress() and isValidSimpleAddress()"}, {"type": "enumvalue", "name": "KEmailAddress::AddressOk", "url": "group__emailvalidation.html#ggadc2d42daf24ca8b10c388aba8591fcd8a45243beb78125b14aa00d49d1cb995ea", "keyword": "AddressOk KEmailAddress::AddressOk KEmailAddress AddressOk KEmailAddress::AddressOk KEmailAddress AddressOk KEmailAddress::AddressOk KEmailAddress", "text": "Email is valid"}, {"type": "enumvalue", "name": "KEmailAddress::AddressEmpty", "url": "group__emailvalidation.html#ggadc2d42daf24ca8b10c388aba8591fcd8a6a7e808f46d0579c939dfdc75d70eff3", "keyword": "AddressEmpty KEmailAddress::AddressEmpty KEmailAddress AddressEmpty KEmailAddress::AddressEmpty KEmailAddress AddressEmpty KEmailAddress::AddressEmpty KEmailAddress", "text": "The address is empty"}, {"type": "enumvalue", "name": "KEmailAddress::UnexpectedEnd", "url": "group__emailvalidation.html#ggadc2d42daf24ca8b10c388aba8591fcd8a84f43f631b8f1ae23f2c208ff948fb8c", "keyword": "UnexpectedEnd KEmailAddress::UnexpectedEnd KEmailAddress UnexpectedEnd KEmailAddress::UnexpectedEnd KEmailAddress UnexpectedEnd KEmailAddress::UnexpectedEnd KEmailAddress", "text": "Something is unbalanced"}, {"type": "enumvalue", "name": "KEmailAddress::UnbalancedParens", "url": "group__emailvalidation.html#ggadc2d42daf24ca8b10c388aba8591fcd8a16b0b364c2347eaa3d1b74ffb2b0caf1", "keyword": "UnbalancedParens KEmailAddress::UnbalancedParens KEmailAddress UnbalancedParens KEmailAddress::UnbalancedParens KEmailAddress UnbalancedParens KEmailAddress::UnbalancedParens KEmailAddress", "text": "Unbalanced"}, {"type": "enumvalue", "name": "KEmailAddress::MissingDomainPart", "url": "group__emailvalidation.html#ggadc2d42daf24ca8b10c388aba8591fcd8a1bd296accb6a4e3c2e7bc637d81d8065", "keyword": "MissingDomainPart KEmailAddress::MissingDomainPart KEmailAddress MissingDomainPart KEmailAddress::MissingDomainPart KEmailAddress MissingDomainPart KEmailAddress::MissingDomainPart KEmailAddress", "text": "No domain in address"}, {"type": "enumvalue", "name": "KEmailAddress::UnclosedAngleAddr", "url": "group__emailvalidation.html#ggadc2d42daf24ca8b10c388aba8591fcd8aede38826223185bbf9ccff119ed4fb66", "keyword": "UnclosedAngleAddr KEmailAddress::UnclosedAngleAddr KEmailAddress UnclosedAngleAddr KEmailAddress::UnclosedAngleAddr KEmailAddress UnclosedAngleAddr KEmailAddress::UnclosedAngleAddr KEmailAddress", "text": "with no matching"}, {"type": "enumvalue", "name": "KEmailAddress::UnopenedAngleAddr", "url": "group__emailvalidation.html#ggadc2d42daf24ca8b10c388aba8591fcd8ac484f44e18a99c9601896f0e10f7514c", "keyword": "UnopenedAngleAddr KEmailAddress::UnopenedAngleAddr KEmailAddress UnopenedAngleAddr KEmailAddress::UnopenedAngleAddr KEmailAddress UnopenedAngleAddr KEmailAddress::UnopenedAngleAddr KEmailAddress", "text": "with no preceding"}, {"type": "enumvalue", "name": "KEmailAddress::TooManyAts", "url": "group__emailvalidation.html#ggadc2d42daf24ca8b10c388aba8591fcd8a3d19df0222fba79c1de04fc0f1639139", "keyword": "TooManyAts KEmailAddress::TooManyAts KEmailAddress TooManyAts KEmailAddress::TooManyAts KEmailAddress TooManyAts KEmailAddress::TooManyAts KEmailAddress", "text": "More than one in address"}, {"type": "enumvalue", "name": "KEmailAddress::UnexpectedComma", "url": "group__emailvalidation.html#ggadc2d42daf24ca8b10c388aba8591fcd8a23060c3639e86558293bfddcedf9542e", "keyword": "UnexpectedComma KEmailAddress::UnexpectedComma KEmailAddress UnexpectedComma KEmailAddress::UnexpectedComma KEmailAddress UnexpectedComma KEmailAddress::UnexpectedComma KEmailAddress", "text": "Comma not allowed here"}, {"type": "enumvalue", "name": "KEmailAddress::TooFewAts", "url": "group__emailvalidation.html#ggadc2d42daf24ca8b10c388aba8591fcd8a487f1bd7f83580afbd9283aa5b366dc4", "keyword": "TooFewAts KEmailAddress::TooFewAts KEmailAddress TooFewAts KEmailAddress::TooFewAts KEmailAddress TooFewAts KEmailAddress::TooFewAts KEmailAddress", "text": "Missing in address"}, {"type": "enumvalue", "name": "KEmailAddress::MissingLocalPart", "url": "group__emailvalidation.html#ggadc2d42daf24ca8b10c388aba8591fcd8af68db225fc1b9f7e57e819dfed17156b", "keyword": "MissingLocalPart KEmailAddress::MissingLocalPart KEmailAddress MissingLocalPart KEmailAddress::MissingLocalPart KEmailAddress MissingLocalPart KEmailAddress::MissingLocalPart KEmailAddress", "text": "No address specified only domain"}, {"type": "enumvalue", "name": "KEmailAddress::UnbalancedQuote", "url": "group__emailvalidation.html#ggadc2d42daf24ca8b10c388aba8591fcd8a0e72bc2fe61077caef9c42931eada4ae", "keyword": "UnbalancedQuote KEmailAddress::UnbalancedQuote KEmailAddress UnbalancedQuote KEmailAddress::UnbalancedQuote KEmailAddress UnbalancedQuote KEmailAddress::UnbalancedQuote KEmailAddress", "text": "Quotes single or double not matched"}, {"type": "enumvalue", "name": "KEmailAddress::DisallowedChar", "url": "group__emailvalidation.html#ggadc2d42daf24ca8b10c388aba8591fcd8aaaa0e1f433ce98621480ceed5b68762d", "keyword": "DisallowedChar KEmailAddress::DisallowedChar KEmailAddress DisallowedChar KEmailAddress::DisallowedChar KEmailAddress DisallowedChar KEmailAddress::DisallowedChar KEmailAddress", "text": "An invalid character detected in address"}, {"type": "enumvalue", "name": "KEmailAddress::InvalidDisplayName", "url": "group__emailvalidation.html#ggadc2d42daf24ca8b10c388aba8591fcd8a5e40533d5344018c1b3b9276abf6bcfa", "keyword": "InvalidDisplayName KEmailAddress::InvalidDisplayName KEmailAddress InvalidDisplayName KEmailAddress::InvalidDisplayName KEmailAddress InvalidDisplayName KEmailAddress::InvalidDisplayName KEmailAddress", "text": "An invalid displayname detected in address"}, {"type": "enumvalue", "name": "KEmailAddress::TooFewDots", "url": "group__emailvalidation.html#ggadc2d42daf24ca8b10c388aba8591fcd8a2c9ea07b1cc9cc949d4690bcc0e6310a", "keyword": "TooFewDots KEmailAddress::TooFewDots KEmailAddress TooFewDots KEmailAddress::TooFewDots KEmailAddress TooFewDots KEmailAddress::TooFewDots KEmailAddress", "text": "Missing in address"}, {"type": "function", "name": "KEmailAddress::compareEmail", "url": "group__emailextraction.html#ga9cf07bd2a58b8559334b082003fdba43", "keyword": "compareEmail KEmailAddress::compareEmail KEmailAddress compareEmail KEmailAddress::compareEmail KEmailAddress compareEmail KEmailAddress::compareEmail KEmailAddress", "text": "If matchName is false it just checks the email address and returns true if this matches If matchName is true both the name and the email must be the same email1 the first email address to use for comparison email2 the second email address to use for comparison matchName if set to true email address and displayname must match true if the comparison matches true in all other cases"}, {"type": "function", "name": "KEmailAddress::decodeMailtoUrl", "url": "namespaceKEmailAddress.html#a8d23df8a45aefe06acc0ef87ed121d6a", "keyword": "decodeMailtoUrl KEmailAddress::decodeMailtoUrl KEmailAddress decodeMailtoUrl KEmailAddress::decodeMailtoUrl KEmailAddress", "text": "mailtoUrl the URL with the mailto protocol which contains the mailbox to be extracted the mailbox which means the display name and the address specification"}, {"type": "function", "name": "KEmailAddress::emailParseResultToString", "url": "group__emailvalidation.html#gae172704df0b6b5f39245919d47670400", "keyword": "emailParseResultToString KEmailAddress::emailParseResultToString KEmailAddress emailParseResultToString KEmailAddress::emailParseResultToString KEmailAddress emailParseResultToString KEmailAddress::emailParseResultToString KEmailAddress", "text": "errorCode an error code returned from one of the email validation functions Do not pass AddressOk as a value since that will yield a misleading error message human-readable and already translated message describing the validation error"}, {"type": "function", "name": "KEmailAddress::encodeMailtoUrl", "url": "namespaceKEmailAddress.html#a8932bbff25f1acf10e43dcd80d8bbbe0", "keyword": "encodeMailtoUrl KEmailAddress::encodeMailtoUrl KEmailAddress encodeMailtoUrl KEmailAddress::encodeMailtoUrl KEmailAddress", "text": "mailbox The mailbox which means the display name and the address specification for example The display name is optional a valid mailto URL for the given mailbox"}, {"type": "function", "name": "KEmailAddress::extractEmailAddress", "url": "group__emailextraction.html#ga1da04912802dd81372f09d81d5b62182", "keyword": "extractEmailAddress KEmailAddress::extractEmailAddress KEmailAddress extractEmailAddress KEmailAddress::extractEmailAddress KEmailAddress extractEmailAddress KEmailAddress::extractEmailAddress KEmailAddress", "text": "address an email address e.g the addr-spec of address i.e in the example"}, {"type": "function", "name": "KEmailAddress::extractEmailAddress", "url": "group__emailextraction.html#ga8d3f8bfe69ddce019c2e1901ead2174d", "keyword": "extractEmailAddress KEmailAddress::extractEmailAddress KEmailAddress extractEmailAddress KEmailAddress::extractEmailAddress KEmailAddress extractEmailAddress KEmailAddress::extractEmailAddress KEmailAddress", "text": "address an email address e.g errorMessage return error message when we can t parse email the addr-spec of address i.e in the example 5.11.0"}, {"type": "function", "name": "KEmailAddress::extractEmailAddress", "url": "group__emailextraction.html#gae74d8378c98d252905e20580b2bb5614", "keyword": "extractEmailAddress KEmailAddress::extractEmailAddress KEmailAddress extractEmailAddress KEmailAddress::extractEmailAddress KEmailAddress extractEmailAddress KEmailAddress::extractEmailAddress KEmailAddress", "text": "It behaves essentially like the above function Returns the pure email address addr-spec in RFC2822 of the given address mailbox in RFC2822 address an email address e.g the addr-spec of address i.e in the example"}, {"type": "function", "name": "KEmailAddress::extractEmailAddress", "url": "group__emailextraction.html#gaa161e55130d4b9975e33968df6bb0ede", "keyword": "extractEmailAddress KEmailAddress::extractEmailAddress KEmailAddress extractEmailAddress KEmailAddress::extractEmailAddress KEmailAddress extractEmailAddress KEmailAddress::extractEmailAddress KEmailAddress", "text": "addresses an email address e.g errorMessage return error message when we can t parse email the addr-spec of addresses i.e in the example 5.11"}, {"type": "function", "name": "KEmailAddress::extractEmailAddressAndName", "url": "group__emailextraction.html#ga6c22c387968e1e515858afa50b65d7fe", "keyword": "extractEmailAddressAndName KEmailAddress::extractEmailAddressAndName KEmailAddress extractEmailAddressAndName KEmailAddress::extractEmailAddressAndName KEmailAddress extractEmailAddressAndName KEmailAddress::extractEmailAddressAndName KEmailAddress", "text": "Examples returns and returns and Note that this only returns the first address Also note that the return value is true if both the name and the mail are not empty this does NOT tell you if mail contains a valid email address or just some rubbish aStr an email address e.g name only out returns the displayname in the example mail only out returns the email address in the example true if both name and email address are not empty"}, {"type": "function", "name": "KEmailAddress::firstEmailAddress", "url": "group__emailextraction.html#gaa8fcb8ca19ea885161a89e3b6a9e680d", "keyword": "firstEmailAddress KEmailAddress::firstEmailAddress KEmailAddress firstEmailAddress KEmailAddress::firstEmailAddress KEmailAddress firstEmailAddress KEmailAddress::firstEmailAddress KEmailAddress", "text": "addresses an email address e.g the addr-spec of addresses i.e in the example"}, {"type": "function", "name": "KEmailAddress::firstEmailAddress", "url": "group__emailextraction.html#ga26e2155efb91415fef8d129dc22e5852", "keyword": "firstEmailAddress KEmailAddress::firstEmailAddress KEmailAddress firstEmailAddress KEmailAddress::firstEmailAddress KEmailAddress firstEmailAddress KEmailAddress::firstEmailAddress KEmailAddress", "text": "addresses an email address e.g errorMessage return error message when we can t parse email the addr-spec of addresses i.e in the example 5.11.0"}, {"type": "function", "name": "KEmailAddress::firstEmailAddress", "url": "group__emailextraction.html#gab37177a353e63490f70c7cb1b9f14bd5", "keyword": "firstEmailAddress KEmailAddress::firstEmailAddress KEmailAddress firstEmailAddress KEmailAddress::firstEmailAddress KEmailAddress firstEmailAddress KEmailAddress::firstEmailAddress KEmailAddress", "text": "It behaves essentially like the above function Returns the pure email address addr-spec in RFC2822 of the first email address of a list of addresses addresses an email address e.g the addr-spec of addresses i.e in the example"}, {"type": "function", "name": "KEmailAddress::firstEmailAddress", "url": "group__emailextraction.html#ga0855fc94ddbf97bf7089b6b5d7906e0f", "keyword": "firstEmailAddress KEmailAddress::firstEmailAddress KEmailAddress firstEmailAddress KEmailAddress::firstEmailAddress KEmailAddress firstEmailAddress KEmailAddress::firstEmailAddress KEmailAddress", "text": "It behaves essentially like the above function Returns the pure email address addr-spec in RFC2822 of the first email address of a list of addresses addresses an email address e.g errorMessage return error message when we can t parse email the addr-spec of addresses i.e in the example 5.11.0"}, {"type": "function", "name": "KEmailAddress::fromIdn", "url": "group__emailidn.html#ga066e392380fbc155ac9f81f73071a88e", "keyword": "fromIdn KEmailAddress::fromIdn KEmailAddress fromIdn KEmailAddress::fromIdn KEmailAddress fromIdn KEmailAddress::fromIdn KEmailAddress", "text": "addrSpec a pure 7-bit email address addr-spec in RFC2822 the email address with Unicode domain"}, {"type": "function", "name": "KEmailAddress::isValidAddress", "url": "group__emailvalidation.html#ga0718eac74f9d7e24b14dd230fc4726cb", "keyword": "isValidAddress KEmailAddress::isValidAddress KEmailAddress isValidAddress KEmailAddress::isValidAddress KEmailAddress isValidAddress KEmailAddress::isValidAddress KEmailAddress", "text": "Returns AddressOk if no error was encountered Otherwise an appropriate error code is returned aStr a single email address example Joe User comment1 AddressOk if no error was encountered Otherwise an appropriate error code is returned"}, {"type": "function", "name": "KEmailAddress::isValidAddressList", "url": "group__emailvalidation.html#ga5544625a45adea4487dc2b6c9537d92e", "keyword": "isValidAddressList KEmailAddress::isValidAddressList KEmailAddress isValidAddressList KEmailAddress::isValidAddressList KEmailAddress isValidAddressList KEmailAddress::isValidAddressList KEmailAddress", "text": "aStr a string containing a list of email addresses badAddr a string to hold the address that was faulty AddressOk if no error was encountered Otherwise an appropriate error code is returned"}, {"type": "function", "name": "KEmailAddress::isValidSimpleAddress", "url": "group__emailvalidation.html#gabf08e03f2e2bd68905e76444c7e177d5", "keyword": "isValidSimpleAddress KEmailAddress::isValidSimpleAddress KEmailAddress isValidSimpleAddress KEmailAddress::isValidSimpleAddress KEmailAddress isValidSimpleAddress KEmailAddress::isValidSimpleAddress KEmailAddress", "text": "Returns true if no error was encountered This method should be used when the input field should not allow a email address with comments and other special cases that normally are valid in an email address aStr a single email address example true if no error was encountered This method differs from calling isValidAddress() and checking that that returns AddressOk in two ways it is faster and it does not allow fancy addresses"}, {"type": "function", "name": "KEmailAddress::normalizeAddressesAndDecodeIdn", "url": "group__emailidn.html#ga2c7bcc1fcb43afe6bd1fb8f4aeaccfaa", "keyword": "normalizeAddressesAndDecodeIdn KEmailAddress::normalizeAddressesAndDecodeIdn KEmailAddress normalizeAddressesAndDecodeIdn KEmailAddress::normalizeAddressesAndDecodeIdn KEmailAddress normalizeAddressesAndDecodeIdn KEmailAddress::normalizeAddressesAndDecodeIdn KEmailAddress", "text": "addresses a list of email addresses with punycoded IDNs the email addresses in normalized form with Unicode IDNs"}, {"type": "function", "name": "KEmailAddress::normalizeAddressesAndEncodeIdn", "url": "group__emailidn.html#ga0db66b33487cb73dd1a7ec3e8bced4d4", "keyword": "normalizeAddressesAndEncodeIdn KEmailAddress::normalizeAddressesAndEncodeIdn KEmailAddress normalizeAddressesAndEncodeIdn KEmailAddress::normalizeAddressesAndEncodeIdn KEmailAddress normalizeAddressesAndEncodeIdn KEmailAddress::normalizeAddressesAndEncodeIdn KEmailAddress", "text": "str a list of email addresses the email addresses in normalized form"}, {"type": "function", "name": "KEmailAddress::normalizedAddress", "url": "group__emailextraction.html#ga0c6a693a9b2d6395e39073c61712c1ff", "keyword": "normalizedAddress KEmailAddress::normalizedAddress KEmailAddress normalizedAddress KEmailAddress::normalizedAddress KEmailAddress normalizedAddress KEmailAddress::normalizedAddress KEmailAddress", "text": "The normalized address is of one the following forms displayName comment addrSpec displayName addrSpec comment addrSpec addrSpec displayName the display name of the address addrSpec the actual email address addr-spec in RFC 2822 comment a comment a normalized address built from the given parts"}, {"type": "function", "name": "KEmailAddress::quoteNameIfNecessary", "url": "group__emailextraction.html#ga3fa01cff1e4d8ba9e3a7647723c416fe", "keyword": "quoteNameIfNecessary KEmailAddress::quoteNameIfNecessary KEmailAddress quoteNameIfNecessary KEmailAddress::quoteNameIfNecessary KEmailAddress quoteNameIfNecessary KEmailAddress::quoteNameIfNecessary KEmailAddress", "text": "str a string that may need quoting the string quoted if necessary"}, {"type": "function", "name": "KEmailAddress::simpleEmailAddressErrorMsg", "url": "group__emailvalidation.html#ga53bb072b3bb705a6b933dcb03c9f206a", "keyword": "simpleEmailAddressErrorMsg KEmailAddress::simpleEmailAddressErrorMsg KEmailAddress simpleEmailAddressErrorMsg KEmailAddress::simpleEmailAddressErrorMsg KEmailAddress simpleEmailAddressErrorMsg KEmailAddress::simpleEmailAddressErrorMsg KEmailAddress", "text": "This allows for error messages to be the same across the board An i18n ready string for use in msgboxes"}, {"type": "function", "name": "KEmailAddress::splitAddress", "url": "group__emailvalidation.html#ga866c90ba0d3dba47be1e1c8eea104468", "keyword": "splitAddress KEmailAddress::splitAddress KEmailAddress splitAddress KEmailAddress::splitAddress KEmailAddress splitAddress KEmailAddress::splitAddress KEmailAddress", "text": "Returns AddressOk if no error was encountered Otherwise an appropriate error code is returned In case of an error the values of displayName addrSpec and comment are undefined address a single email address example Joe User comment1 comment2 displayName only out the display-name of the email address i.e in the example in case of an error the return value is undefined addrSpec only out the addr-spec i.e in the example in case of an error the return value is undefined comment only out the space-separated comments i.e in the example in case of an error the return value is undefined AddressOk if no error was encountered Otherwise an appropriate error code is returned"}, {"type": "function", "name": "KEmailAddress::splitAddress", "url": "group__emailvalidation.html#ga1fbb08d0380070bc9907eb34c6664476", "keyword": "splitAddress KEmailAddress::splitAddress KEmailAddress splitAddress KEmailAddress::splitAddress KEmailAddress splitAddress KEmailAddress::splitAddress KEmailAddress", "text": "It behaves essentially like the above function Splits the given address into display name email address and comment Returns AddressOk if no error was encountered Otherwise an appropriate error code is returned In case of an error the values of displayName addrSpec and comment are undefined address a single email address example Joe User comment1 comment2 displayName only out the display-name of the email address i.e in the example in case of an error the return value is undefined addrSpec only out the addr-spec i.e in the example in case of an error the return value is undefined comment only out the space-separated comments i.e in the example in case of an error the return value is undefined AddressOk if no error was encountered Otherwise an appropriate error code is returned"}, {"type": "function", "name": "KEmailAddress::splitAddressList", "url": "group__emailvalidation.html#ga772a8e69044154ce0935250558778ddd", "keyword": "splitAddressList KEmailAddress::splitAddressList KEmailAddress splitAddressList KEmailAddress::splitAddressList KEmailAddress splitAddressList KEmailAddress::splitAddressList KEmailAddress", "text": "aStr a single string representing a list of addresses a list of strings where each string is one address from the original list"}, {"type": "function", "name": "KEmailAddress::toIdn", "url": "group__emailidn.html#ga65e6620e7b4685c45c6a516fc1a22ca3", "keyword": "toIdn KEmailAddress::toIdn KEmailAddress toIdn KEmailAddress::toIdn KEmailAddress toIdn KEmailAddress::toIdn KEmailAddress", "text": "addrSpec a pure email address with Unicode domain the email address with domain in punycode"}, {"type": "page", "name": "authors", "url": "authors.html", "keyword": null, "text": "Authors Class KCodecs Codec Marc Mutz File kcodecsbase64 cpp Marc Mutz File kcodecsbase64 h Marc Mutz File kcodecsidentity cpp Marc Mutz File kcodecsidentity h Marc Mutz File kcodecsqp cpp Marc Mutz File kcodecsqp h Marc Mutz File kcodecsuuencode cpp Marc Mutz File kcodecsuuencode h Marc Mutz"}, {"type": "page", "name": "deprecated", "url": "deprecated.html", "keyword": null, "text": "Deprecated List Member KCodecs base64Encode const QByteArray in bool insertLFs Use KCodecs::base64Encode(QByteArray) instead"}, {"type": "page", "name": "glossary", "url": "glossary.html", "keyword": null, "text": "Glossary Class KCodecs Codec File kcodecsbase64 h File kcodecsqp h File kcodecsuuencode h"}, {"type": "group", "name": "emailvalidation", "url": "group__emailvalidation.html", "keyword": "Email Validation Functions", "text": "There are also functions for splitting an RFC2822 address into its component parts"}, {"type": "group", "name": "emailextraction", "url": "group__emailextraction.html", "keyword": "Email Extraction Functions", "text": ""}, {"type": "group", "name": "emailidn", "url": "group__emailidn.html", "keyword": "Email IDN punycode handling", "text": ""}, {"type": "class", "name": "KCharsets", "url": "classKCharsets.html", "keyword": "KCharsets", "text": "This is needed because Qt s encoding name matching in QTextCodec::codecForName matches only closely-related encoded names but not alternate names e.g found in the reality of the Internet"}, {"type": "function", "name": "KCharsets::~KCharsets", "url": "classKCharsets.html#a2d9b67165ef89460ee8a300bf94d9e92", "keyword": "KCharsets::~KCharsets KCharsets", "text": ""}, {"type": "function", "name": "KCharsets::availableEncodingNames", "url": "classKCharsets.html#a75b547314133c05382bd14a86b8768d5", "keyword": "availableEncodingNames KCharsets::availableEncodingNames KCharsets", "text": "the list of all encodings"}, {"type": "function", "name": "KCharsets::codecForName", "url": "classKCharsets.html#a6cfc87ac3fc07c10d115da764cf425da", "keyword": "codecForName KCharsets::codecForName KCharsets", "text": "name the name of the codec the QTextCodec If the desired codec could not be found it returns a default ISO 8859-1 codec"}, {"type": "function", "name": "KCharsets::codecForName", "url": "classKCharsets.html#a8ad68acba4bc450da2c21e513e8c1287", "keyword": "codecForName KCharsets::codecForName KCharsets", "text": "If no codec could be found the ISO 8859-1 codec will be returned an and ok will be set to false n the name of the codec ok true if a matching codec has been found false if not the QTextCodec If the desired codec could not be found it returns a default ISO 8859-1 codec"}, {"type": "function", "name": "KCharsets::descriptionForEncoding", "url": "classKCharsets.html#aa584fcc09c13cb960e5e79c2235c73cd", "keyword": "descriptionForEncoding KCharsets::descriptionForEncoding KCharsets", "text": "encoding the encoding for the language the long description for the encoding"}, {"type": "function", "name": "KCharsets::descriptiveEncodingNames", "url": "classKCharsets.html#a0e5819ce06dad8323198eb25c908721f", "keyword": "descriptiveEncodingNames KCharsets::descriptiveEncodingNames KCharsets", "text": "the list of descriptive encoding names"}, {"type": "function", "name": "KCharsets::encodingForName", "url": "classKCharsets.html#a404047e3d928133c0e0651c0651f7946", "keyword": "encodingForName KCharsets::encodingForName KCharsets", "text": "descriptiveName the descriptive name for the encoding the name of the encoding"}, {"type": "function", "name": "KCharsets::encodingsByScript", "url": "classKCharsets.html#a1e5a8c286fde4d67988b9210222d6cfe", "keyword": "encodingsByScript KCharsets::encodingsByScript KCharsets", "text": "the list of lists consisting of description followed by encoding names i.e encodingsByScript() at(i) at(0) is a description for encodingsByScript() at(i) at(k) k 0"}, {"type": "function", "name": "KCharsets::charsets", "url": "classKCharsets.html#ad252463241cecffb75ac7b11c41e9e81", "keyword": "charsets KCharsets::charsets KCharsets", "text": "the global charset manager"}, {"type": "function", "name": "KCharsets::fromEntity", "url": "classKCharsets.html#ae54a994e9ce3ed9cbc876846aed5030f", "keyword": "fromEntity KCharsets::fromEntity KCharsets", "text": "The string must contain only the entity without the trailing str the entity QChar::Null if the entity could not be decoded"}, {"type": "function", "name": "KCharsets::fromEntity", "url": "classKCharsets.html#ac1201f11af00d25fe1da6adcdd00fea4", "keyword": "fromEntity KCharsets::fromEntity KCharsets", "text": "Tries to find an entity in the QString str str the string containing entified len is a return value that gives the length of the decoded entity a decoded entity if one could be found QChar::null otherwise"}, {"type": "function", "name": "KCharsets::resolveEntities", "url": "classKCharsets.html#ac1fc18e27570d7be00fe09eced0feb04", "keyword": "resolveEntities KCharsets::resolveEntities KCharsets", "text": "text the string containing the entities the clean string"}, {"type": "function", "name": "KCharsets::toEntity", "url": "classKCharsets.html#acfdba766bb1d2e84105024d287257929", "keyword": "toEntity KCharsets::toEntity KCharsets", "text": "The returned string does already contain the leading and the trailing ch the char to convert the entity"}, {"type": "function", "name": "KCharsets::KCharsets", "url": "classKCharsets.html#a52c5056f4e32f564228c389f84c9024c", "keyword": "KCharsets KCharsets::KCharsets KCharsets", "text": "If you need the kcharsets object use KCharsets::charsets() instead"}, {"type": "class", "name": "KEncodingProber", "url": "classKEncodingProber.html", "keyword": "KEncodingProber", "text": "Probe the encoding of raw data only In the case it can t find it return the most possible encoding it guessed Always do Unicode probe regardless the ProberType Feed data to it several times with feed() until ProberState changes to FoundIt/NotMe or confidence() returns a value you find acceptable Intended lifetime of the object one instance per ProberType Typical use At least 256 characters are needed to change the ProberState from Probing to FoundIt If you don t have so many characters to probe decide whether to accept the encoding it guessed so far according to the Confidence by yourself Guess encoding of char array"}, {"type": "enum", "name": "KEncodingProber::ProberState", "url": "classKEncodingProber.html#afdb257a93da4bd7affb3a988fb2acde2", "keyword": "ProberState KEncodingProber::ProberState KEncodingProber", "text": ""}, {"type": "enumvalue", "name": "KEncodingProber::FoundIt", "url": "classKEncodingProber.html#afdb257a93da4bd7affb3a988fb2acde2ad3fc2f12648af878674ccbcbea71b46c", "keyword": "FoundIt KEncodingProber::FoundIt KEncodingProber", "text": "Sure find the encoding"}, {"type": "enumvalue", "name": "KEncodingProber::NotMe", "url": "classKEncodingProber.html#afdb257a93da4bd7affb3a988fb2acde2a31571a93f45435786f928933950f1784", "keyword": "NotMe KEncodingProber::NotMe KEncodingProber", "text": "Sure not included in current ProberType s all supported encodings"}, {"type": "enumvalue", "name": "KEncodingProber::Probing", "url": "classKEncodingProber.html#afdb257a93da4bd7affb3a988fb2acde2a0a85f8dc83e90453189aa08e23e1a9b1", "keyword": "Probing KEncodingProber::Probing KEncodingProber", "text": "Need more data to make a decision"}, {"type": "function", "name": "KEncodingProber::KEncodingProber", "url": "classKEncodingProber.html#a232811b65f3842311c57e82fb1bfa048", "keyword": "KEncodingProber KEncodingProber::KEncodingProber KEncodingProber", "text": ""}, {"type": "function", "name": "KEncodingProber::confidence", "url": "classKEncodingProber.html#a63e1c3f0e58655e342e14e37d7da3a9c", "keyword": "confidence KEncodingProber::confidence KEncodingProber", "text": "the confidence(sureness) of encoding it guessed so far 0.0 0.99 not very reliable for single byte encodings"}, {"type": "function", "name": "KEncodingProber::encoding", "url": "classKEncodingProber.html#aef3e8c57d4a3d79f963c671e9923f0ae", "keyword": "encoding KEncodingProber::encoding KEncodingProber", "text": "a QByteArray with the name of the best encoding it has guessed so far 4.2.2"}, {"type": "function", "name": "KEncodingProber::feed", "url": "classKEncodingProber.html#a56b08e6ae8bf6a85e05150179eb9fc88", "keyword": "feed KEncodingProber::feed KEncodingProber", "text": "feed data to the prober the ProberState after probing the fed data"}, {"type": "function", "name": "KEncodingProber::reset", "url": "classKEncodingProber.html#a048a5568b38c3b08260034102acfef43", "keyword": "reset KEncodingProber::reset KEncodingProber", "text": ""}, {"type": "function", "name": "KEncodingProber::setProberType", "url": "classKEncodingProber.html#aa582212982d0fd7bc5a64b95d23296db", "keyword": "setProberType KEncodingProber::setProberType KEncodingProber", "text": ""}, {"type": "function", "name": "KEncodingProber::state", "url": "classKEncodingProber.html#a6becc22e45f4b2a33ef89e8d27d3ad7a", "keyword": "state KEncodingProber::state KEncodingProber", "text": "the prober s current ProberState"}, {"type": "function", "name": "KEncodingProber::nameForProberType", "url": "classKEncodingProber.html#a583d60e8fbcbfd17995f7db8feffda96", "keyword": "nameForProberType KEncodingProber::nameForProberType KEncodingProber", "text": ""}, {"type": "function", "name": "KEncodingProber::proberTypeForName", "url": "classKEncodingProber.html#acc8c44ac763bf9d791ba2993f4a3818d", "keyword": "proberTypeForName KEncodingProber::proberTypeForName KEncodingProber", "text": "the ProberType for lang eg proberTypeForName will return KEncodingProber::ChineseSimplified"}, {"type": "namespace", "name": "KCodecs", "url": "namespaceKCodecs.html", "keyword": "KCodecs", "text": "Currently there is support for encoding and decoding input using base64 uu and the quoted-printable specifications Usage Output should be Result QWxhZGRpbjpvcGVuIHNlc2FtZQ The above example makes use of the convenience functions ones that accept/return null-terminated strings to encode/decode a string If what you need is to encode or decode binary data then it is highly recommended that you use the functions that take an input and output QByteArray as arguments These functions are specifically tailored for encoding and decoding binary data A collection of commonly used encoding and decoding algorithms Dawit Alemayehu Rik Hemsley"}, {"type": "enum", "name": "KCodecs::CharsetOption", "url": "namespaceKCodecs.html#a7503d978abac260804bcdb4735e1be20", "keyword": "CharsetOption KCodecs::CharsetOption KCodecs", "text": "5.5"}, {"type": "enumvalue", "name": "KCodecs::ForceDefaultCharset", "url": "namespaceKCodecs.html#a7503d978abac260804bcdb4735e1be20a9d2cc48bb5c073ffbce4441e51244e63", "keyword": "ForceDefaultCharset KCodecs::ForceDefaultCharset KCodecs", "text": "No special option"}, {"type": "function", "name": "KCodecs::base64Decode", "url": "namespaceKCodecs.html#a2dc6013a601abddbfab43269689417dc", "keyword": "base64Decode KCodecs::base64Decode KCodecs", "text": "in data to be decoded decoded string"}, {"type": "function", "name": "KCodecs::base64Decode", "url": "namespaceKCodecs.html#aaf59fc45958198aaeaa31d7dc2f5db75", "keyword": "base64Decode KCodecs::base64Decode KCodecs", "text": "Use this function if you want the result of the decoding to be placed in another array which cuts down the number of copy operation that have to be performed in the process This is also the preferred method for decoding an encoded binary data NOTE the output array is first reset and then resized appropriately before use hence all data stored in the output array will be lost in data to be decoded out decoded data"}, {"type": "function", "name": "KCodecs::base64Encode", "url": "namespaceKCodecs.html#ad9cba091761bcc4e5650c71d7d5bcde7", "keyword": "base64Encode KCodecs::base64Encode KCodecs", "text": "The boolean argument determines if the encoded data is going to be restricted to 76 characters or less per line as specified by RFC 2045 If insertLFs is true then there will be 76 characters or less per line in data to be encoded insertLFs limit the number of characters per line base64 encoded string 5.5"}, {"type": "function", "name": "KCodecs::base64Encode", "url": "namespaceKCodecs.html#a0a1f133d370cab5fcfb8cafc6e4a513e", "keyword": "base64Encode KCodecs::base64Encode KCodecs", "text": "KCodecs::base64Encode(QByteArray) Use KCodecs::base64Encode(QByteArray) instead"}, {"type": "function", "name": "KCodecs::base64Encode", "url": "namespaceKCodecs.html#a1cd22cc09c5b16f77e00512d9ee63517", "keyword": "base64Encode KCodecs::base64Encode KCodecs", "text": "Use this function if you want the result of the encoding to be placed in another array which cuts down the number of copy operation that have to be performed in the process This is also the preferred method for encoding binary data The boolean argument determines if the encoded data is going to be restricted to 76 characters or less per line as specified by RFC 2045 If insertLFs is true then there will be 76 characters or less per line NOTE the output array is first reset and then resized appropriately before use hence all data stored in the output array will be lost in data to be encoded out encoded data insertLFs limit the number of characters per line"}, {"type": "function", "name": "KCodecs::decodeRFC2047String", "url": "namespaceKCodecs.html#a2ef0e4b98dad2a6fc90f4dc229f83daf", "keyword": "decodeRFC2047String KCodecs::decodeRFC2047String KCodecs", "text": "text source string the decoded string"}, {"type": "function", "name": "KCodecs::decodeRFC2047String", "url": "namespaceKCodecs.html#a78d83945114fdcb496c3213e5ec5699a", "keyword": "decodeRFC2047String KCodecs::decodeRFC2047String KCodecs", "text": "the construct charset qb encoded src source string usedCS the detected charset is returned here defaultCS the charset to use in case the detected one isn t known to us option options for the encoder the decoded string 5.5"}, {"type": "function", "name": "KCodecs::encodeRFC2047String", "url": "namespaceKCodecs.html#aef59d0cc356fa9cc655b333576343a79", "keyword": "encodeRFC2047String KCodecs::encodeRFC2047String KCodecs", "text": "This function also makes commas quotes and other characters part of the encoded name for example the string J\u00f6hn D\u00f6e i.e the opening and closing quote mark would be part of the encoded word Therefore don t use this function for input strings that contain semantically meaningful characters like the quoting marks in this example src source string charset charset to use If it can t encode the string UTF-8 will be used instead the encoded string 5.5"}, {"type": "function", "name": "KCodecs::quotedPrintableDecode", "url": "namespaceKCodecs.html#aa05f092666423624d4d225ecccd5dc94", "keyword": "quotedPrintableDecode KCodecs::quotedPrintableDecode KCodecs", "text": "Accepts data with CRLF or standard unix line breaks in data to be decoded decoded string 5.5"}, {"type": "function", "name": "KCodecs::quotedPrintableDecode", "url": "namespaceKCodecs.html#a539735d1f1687feafa4cd7a439e15e8e", "keyword": "quotedPrintableDecode KCodecs::quotedPrintableDecode KCodecs", "text": "Accepts data with CRLF or standard unix line breaks Use this function if you want the result of the decoding to be placed in another array which cuts down the number of copy operation that have to be performed in the process This is also the preferred method for decoding an encoded binary data NOTE the output array is first reset and then resized appropriately before use hence all data stored in the output array will be lost in data to be decoded out decoded data"}, {"type": "function", "name": "KCodecs::quotedPrintableEncode", "url": "namespaceKCodecs.html#ac0c8d5cf01fd51767dfef5b21e16c186", "keyword": "quotedPrintableEncode KCodecs::quotedPrintableEncode KCodecs", "text": "in data to be encoded useCRLF if true the input data is expected to have CRLF line breaks and the output will have CRLF line breaks too quoted-printable encoded string"}, {"type": "function", "name": "KCodecs::quotedPrintableEncode", "url": "namespaceKCodecs.html#aa8aa0e8e20d544682649a38e3e942096", "keyword": "quotedPrintableEncode KCodecs::quotedPrintableEncode KCodecs", "text": "Use this function if you want the result of the encoding to be placed in another array which cuts down the number of copy operation that have to be performed in the process This is also the preferred method for encoding binary data NOTE the output array is first reset and then resized appropriately before use hence all data stored in the output array will be lost in data to be encoded out encoded data useCRLF if true the input data is expected to have CRLF line breaks and the output will have CRLF line breaks too"}, {"type": "function", "name": "KCodecs::uudecode", "url": "namespaceKCodecs.html#ad1bffee4377cc4b53e6cac6f342848ac", "keyword": "uudecode KCodecs::uudecode KCodecs", "text": "Any begin and end lines like those generated by the utilities in unix and unix-like OS will be automatically ignored in data to be decoded decoded string"}, {"type": "function", "name": "KCodecs::uudecode", "url": "namespaceKCodecs.html#a902c4f51c04b33925d22a0036a50b9a9", "keyword": "uudecode KCodecs::uudecode KCodecs", "text": "Use this function if you want the result of the decoding to be placed in another array which cuts down the number of copy operation that have to be performed in the process This is the preferred method for decoding binary data Any begin and end lines like those generated by the utilities in unix and unix-like OS will be automatically ignored NOTE the output array is first reset and then resized appropriately before use hence all data stored in the output array will be lost in data to be decoded out uudecoded data"}, {"type": "function", "name": "KCodecs::uuencode", "url": "namespaceKCodecs.html#a7caef48fedd497b4c057ee90dd866027", "keyword": "uuencode KCodecs::uuencode KCodecs", "text": "The output is split into lines starting with the number of encoded octets in the line and ending with a newline No line is longer than 45 octets 60 characters excluding the line terminator in data to be uuencoded uuencoded string"}, {"type": "function", "name": "KCodecs::uuencode", "url": "namespaceKCodecs.html#ad72327ae99c2ed60aa5033eb892f6a8b", "keyword": "uuencode KCodecs::uuencode KCodecs", "text": "Use this function if you want the result of the encoding to be placed in another array and cut down the number of copy operation that have to be performed in the process This is the preffered method for encoding binary data NOTE the output array is first reset and then resized appropriately before use hence all data stored in the output array will be lost in data to be uuencoded out uudecoded data"}, {"type": "variable", "name": "KCodecs::eTextMap", "url": "namespaceKCodecs.html#a2db1e777b8f670c5853c9bfd9d1a8268", "keyword": null, "text": ""}, {"type": "variable", "name": "KCodecs::hexChars", "url": "namespaceKCodecs.html#aff395f9aa9f909c0a24636a22e0efb9e", "keyword": null, "text": ""}, {"type": "class", "name": "KCodecs::Base64Codec", "url": "classKCodecs_1_1Base64Codec.html", "keyword": "Base64Codec", "text": ""}, {"type": "function", "name": "KCodecs::Base64Codec::Base64Codec", "url": "classKCodecs_1_1Base64Codec.html#abe296c1f4c53333d5d8b7b423a78f97e", "keyword": "Base64Codec KCodecs::Base64Codec::Base64Codec KCodecs::Base64Codec Base64Codec KCodecs::Base64Codec::Base64Codec KCodecs::Base64Codec", "text": ""}, {"type": "function", "name": "KCodecs::Base64Codec::~Base64Codec", "url": "classKCodecs_1_1Base64Codec.html#a07a504e68f4580eb01c6798d6b95233b", "keyword": "KCodecs::Base64Codec::~Base64Codec KCodecs::Base64Codec KCodecs::Base64Codec::~Base64Codec KCodecs::Base64Codec", "text": ""}, {"type": "function", "name": "KCodecs::Base64Codec::makeDecoder", "url": "classKCodecs_1_1Base64Codec.html#a4e3a7995c469043fb2a0a1440b59b438", "keyword": "makeDecoder KCodecs::Base64Codec::makeDecoder KCodecs::Base64Codec makeDecoder KCodecs::Base64Codec::makeDecoder KCodecs::Base64Codec", "text": "Codec::makeDecoder()"}, {"type": "function", "name": "KCodecs::Base64Codec::makeEncoder", "url": "classKCodecs_1_1Base64Codec.html#aace6c34eed4f68f52a6310e27a65fdea", "keyword": "makeEncoder KCodecs::Base64Codec::makeEncoder KCodecs::Base64Codec", "text": "Codec::makeEncoder()"}, {"type": "function", "name": "KCodecs::Base64Codec::maxDecodedSizeFor", "url": "classKCodecs_1_1Base64Codec.html#ac0549616441ea5e4b195da52a0ace267", "keyword": "maxDecodedSizeFor KCodecs::Base64Codec::maxDecodedSizeFor KCodecs::Base64Codec", "text": "Codec::maxDecodedSizeFor()"}, {"type": "function", "name": "KCodecs::Base64Codec::maxEncodedSizeFor", "url": "classKCodecs_1_1Base64Codec.html#a993767a4224fe269b5f88240922e9ec2", "keyword": "maxEncodedSizeFor KCodecs::Base64Codec::maxEncodedSizeFor KCodecs::Base64Codec", "text": "Codec::maxEncodedSizeFor()"}, {"type": "function", "name": "KCodecs::Base64Codec::name", "url": "classKCodecs_1_1Base64Codec.html#a7f9e5054f0ac6c03e52944f593c27feb", "keyword": "name KCodecs::Base64Codec::name KCodecs::Base64Codec", "text": "Codec::name()"}, {"type": "function", "name": "KCodecs::Codec::~Codec", "url": "classKCodecs_1_1Codec.html#adab2df57076f0ce7bac711def34561ab", "keyword": "KCodecs::Codec::~Codec KCodecs::Codec KCodecs::Codec::~Codec KCodecs::Codec KCodecs::Codec::~Codec KCodecs::Codec KCodecs::Codec::~Codec KCodecs::Codec KCodecs::Codec::~Codec KCodecs::Codec KCodecs::Codec::~Codec KCodecs::Codec KCodecs::Codec::~Codec KCodecs::Codec KCodecs::Codec::~Codec KCodecs::Codec KCodecs::Codec::~Codec KCodecs::Codec KCodecs::Codec::~Codec KCodecs::Codec KCodecs::Codec::~Codec KCodecs::Codec", "text": ""}, {"type": "function", "name": "KCodecs::Codec::decode", "url": "classKCodecs_1_1Codec.html#a8f8f32d7a2e410321904ea37d36e84ef", "keyword": "decode KCodecs::Codec::decode KCodecs::Codec decode KCodecs::Codec::decode KCodecs::Codec decode KCodecs::Codec::decode KCodecs::Codec decode KCodecs::Codec::decode KCodecs::Codec decode KCodecs::Codec::decode KCodecs::Codec decode KCodecs::Codec::decode KCodecs::Codec decode KCodecs::Codec::decode KCodecs::Codec decode KCodecs::Codec::decode KCodecs::Codec decode KCodecs::Codec::decode KCodecs::Codec decode KCodecs::Codec::decode KCodecs::Codec decode KCodecs::Codec::decode KCodecs::Codec", "text": "The default implementation creates a Decoder and uses it Decodes a chunk of bytes starting at scursor and extending to send into the buffer described by dcursor and dend This function doesn t support chaining of blocks The returned block cannot be added to but you don t need to finalize it too Example usage in contains the input data KCodecs::Codec KCodecs::Codec::codecForName if qFatal() QByteArray out in.size() good guess for any encoding QByteArray::Iterator iit in.begin() QByteArray::Iterator oit out.begin() if decode iit in.end() oit out.end() qDebug() return qDebug() oit out.begin() scursor is a pointer to the start of the input buffer send is a pointer to the end of the input buffer dcursor is a pointer to the start of the output buffer dend is a pointer to the end of the output buffer newline whether make new lines using CRLF or LF default is LF false if the decoded data didn t fit into the output buffer true otherwise"}, {"type": "function", "name": "KCodecs::Codec::decode", "url": "classKCodecs_1_1Codec.html#ae891e6d6b7d32bae86c68780190cc988", "keyword": "decode KCodecs::Codec::decode KCodecs::Codec decode KCodecs::Codec::decode KCodecs::Codec decode KCodecs::Codec::decode KCodecs::Codec decode KCodecs::Codec::decode KCodecs::Codec decode KCodecs::Codec::decode KCodecs::Codec decode KCodecs::Codec::decode KCodecs::Codec decode KCodecs::Codec::decode KCodecs::Codec", "text": "For use with small src src is a QByteArray containing the data to decode newline whether make new lines using CRLF or LF default is LF"}, {"type": "function", "name": "KCodecs::Codec::encode", "url": "classKCodecs_1_1Codec.html#ad13fe74d1d08d6e324ade23d5bd41bcb", "keyword": "encode KCodecs::Codec::encode KCodecs::Codec encode KCodecs::Codec::encode KCodecs::Codec encode KCodecs::Codec::encode KCodecs::Codec encode KCodecs::Codec::encode KCodecs::Codec encode KCodecs::Codec::encode KCodecs::Codec encode KCodecs::Codec::encode KCodecs::Codec encode KCodecs::Codec::encode KCodecs::Codec encode KCodecs::Codec::encode KCodecs::Codec encode KCodecs::Codec::encode KCodecs::Codec encode KCodecs::Codec::encode KCodecs::Codec encode KCodecs::Codec::encode KCodecs::Codec", "text": "The default implementation creates an Encoder and uses it Encodes a chunk of bytes starting at scursor and extending to send into the buffer described by dcursor and dend This function doesn t support chaining of blocks The returned block cannot be added to but you don t need to finalize it too Example usage in contains the input data KCodecs::Codec KCodecs::Codec::codecForName if qFatal() QByteArray out in.size() 1.4 crude maximal size of b64 encoding QByteArray::Iterator iit in.begin() QByteArray::Iterator oit out.begin() if encode iit in.end() oit out.end() qDebug() return qDebug() oit out.begin() scursor is a pointer to the start of the input buffer send is a pointer to the end of the input buffer dcursor is a pointer to the start of the output buffer dend is a pointer to the end of the output buffer newline whether make new lines using CRLF or LF default is LF false if the encoded data didn t fit into the output buffer true otherwise"}, {"type": "function", "name": "KCodecs::Codec::encode", "url": "classKCodecs_1_1Codec.html#ae5c0cd24af61359ef7745e62821aa7eb", "keyword": "encode KCodecs::Codec::encode KCodecs::Codec encode KCodecs::Codec::encode KCodecs::Codec encode KCodecs::Codec::encode KCodecs::Codec encode KCodecs::Codec::encode KCodecs::Codec encode KCodecs::Codec::encode KCodecs::Codec encode KCodecs::Codec::encode KCodecs::Codec encode KCodecs::Codec::encode KCodecs::Codec", "text": "For use with small src src is a QByteArray containing the data to encode newline whether make new lines using CRLF or LF default is LF"}, {"type": "function", "name": "KCodecs::Codec::codecForName", "url": "classKCodecs_1_1Codec.html#a1488e646b7638e62d4790168270bb9ab", "keyword": "codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec", "text": "name points to a character string containing a valid codec name"}, {"type": "function", "name": "KCodecs::Codec::codecForName", "url": "classKCodecs_1_1Codec.html#aaecff98f07d6be4853352b57b68d67a9", "keyword": "codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec codecForName KCodecs::Codec::codecForName KCodecs::Codec", "text": "name is a QByteArray containing a valid codec name"}, {"type": "function", "name": "KCodecs::Codec::Codec", "url": "classKCodecs_1_1Codec.html#a6f3d722512cf092a123b9f9efba99a70", "keyword": "Codec KCodecs::Codec::Codec KCodecs::Codec Codec KCodecs::Codec::Codec KCodecs::Codec Codec KCodecs::Codec::Codec KCodecs::Codec Codec KCodecs::Codec::Codec KCodecs::Codec Codec KCodecs::Codec::Codec KCodecs::Codec Codec KCodecs::Codec::Codec KCodecs::Codec Codec KCodecs::Codec::Codec KCodecs::Codec Codec KCodecs::Codec::Codec KCodecs::Codec Codec KCodecs::Codec::Codec KCodecs::Codec Codec KCodecs::Codec::Codec KCodecs::Codec Codec KCodecs::Codec::Codec KCodecs::Codec", "text": ""}, {"type": "class", "name": "KCodecs::BinaryCodec", "url": "classKCodecs_1_1BinaryCodec.html", "keyword": "BinaryCodec", "text": ""}, {"type": "function", "name": "KCodecs::BinaryCodec::BinaryCodec", "url": "classKCodecs_1_1BinaryCodec.html#a492cca27e2d725242df9825585a26320", "keyword": "BinaryCodec KCodecs::BinaryCodec::BinaryCodec KCodecs::BinaryCodec", "text": ""}, {"type": "function", "name": "KCodecs::BinaryCodec::~BinaryCodec", "url": "classKCodecs_1_1BinaryCodec.html#a910cc47b16f03abe1902be1a2753d5b0", "keyword": "KCodecs::BinaryCodec::~BinaryCodec KCodecs::BinaryCodec", "text": ""}, {"type": "function", "name": "KCodecs::BinaryCodec::maxDecodedSizeFor", "url": "classKCodecs_1_1BinaryCodec.html#ac71e62817ab86f6169408db657d9c62f", "keyword": "maxDecodedSizeFor KCodecs::BinaryCodec::maxDecodedSizeFor KCodecs::BinaryCodec", "text": "Codec::maxDecodedSizeFor()"}, {"type": "function", "name": "KCodecs::BinaryCodec::maxEncodedSizeFor", "url": "classKCodecs_1_1BinaryCodec.html#a3e0de14486bbee3b89cc5684fba78d77", "keyword": "maxEncodedSizeFor KCodecs::BinaryCodec::maxEncodedSizeFor KCodecs::BinaryCodec", "text": "Codec::maxEncodedSizeFor()"}, {"type": "function", "name": "KCodecs::BinaryCodec::name", "url": "classKCodecs_1_1BinaryCodec.html#a4bf5066fb6da92ce1a842eb01319b154", "keyword": "name KCodecs::BinaryCodec::name KCodecs::BinaryCodec", "text": "Codec::name()"}, {"type": "function", "name": "KCodecs::IdentityCodec::IdentityCodec", "url": "classKCodecs_1_1IdentityCodec.html#aed08317a96637fd4317fb6597c4f1a82", "keyword": "IdentityCodec KCodecs::IdentityCodec::IdentityCodec KCodecs::IdentityCodec IdentityCodec KCodecs::IdentityCodec::IdentityCodec KCodecs::IdentityCodec IdentityCodec KCodecs::IdentityCodec::IdentityCodec KCodecs::IdentityCodec IdentityCodec KCodecs::IdentityCodec::IdentityCodec KCodecs::IdentityCodec", "text": ""}, {"type": "function", "name": "KCodecs::IdentityCodec::~IdentityCodec", "url": "classKCodecs_1_1IdentityCodec.html#accfdf1b581e6b2b6abc171107d4146cc", "keyword": "KCodecs::IdentityCodec::~IdentityCodec KCodecs::IdentityCodec KCodecs::IdentityCodec::~IdentityCodec KCodecs::IdentityCodec KCodecs::IdentityCodec::~IdentityCodec KCodecs::IdentityCodec KCodecs::IdentityCodec::~IdentityCodec KCodecs::IdentityCodec", "text": ""}, {"type": "function", "name": "KCodecs::IdentityCodec::decode", "url": "classKCodecs_1_1IdentityCodec.html#af30fbb58d86c3b5c0b0a95a101b5d4d3", "keyword": "decode KCodecs::IdentityCodec::decode KCodecs::IdentityCodec decode KCodecs::IdentityCodec::decode KCodecs::IdentityCodec decode KCodecs::IdentityCodec::decode KCodecs::IdentityCodec decode KCodecs::IdentityCodec::decode KCodecs::IdentityCodec", "text": "QByteArray Codec::decode()"}, {"type": "function", "name": "KCodecs::IdentityCodec::encode", "url": "classKCodecs_1_1IdentityCodec.html#a5c9ae69f4a353fb478dbc121ba9b8f0d", "keyword": "encode KCodecs::IdentityCodec::encode KCodecs::IdentityCodec encode KCodecs::IdentityCodec::encode KCodecs::IdentityCodec encode KCodecs::IdentityCodec::encode KCodecs::IdentityCodec encode KCodecs::IdentityCodec::encode KCodecs::IdentityCodec", "text": "QByteArray Codec::encode()"}, {"type": "function", "name": "KCodecs::IdentityCodec::makeDecoder", "url": "classKCodecs_1_1IdentityCodec.html#a1a18459ae061fac2549cf997eff53d88", "keyword": "makeDecoder KCodecs::IdentityCodec::makeDecoder KCodecs::IdentityCodec makeDecoder KCodecs::IdentityCodec::makeDecoder KCodecs::IdentityCodec makeDecoder KCodecs::IdentityCodec::makeDecoder KCodecs::IdentityCodec makeDecoder KCodecs::IdentityCodec::makeDecoder KCodecs::IdentityCodec", "text": "Codec::makeDecoder()"}, {"type": "function", "name": "KCodecs::IdentityCodec::makeEncoder", "url": "classKCodecs_1_1IdentityCodec.html#a72af40d18e1be78dfd41845eac4d6e7e", "keyword": "makeEncoder KCodecs::IdentityCodec::makeEncoder KCodecs::IdentityCodec makeEncoder KCodecs::IdentityCodec::makeEncoder KCodecs::IdentityCodec makeEncoder KCodecs::IdentityCodec::makeEncoder KCodecs::IdentityCodec makeEncoder KCodecs::IdentityCodec::makeEncoder KCodecs::IdentityCodec", "text": "Codec::makeEncoder()"}, {"type": "class", "name": "KCodecs::Codec", "url": "classKCodecs_1_1Codec.html", "keyword": "Codec", "text": "MIME Multipurpose Internet Mail Extensions or MIME is an Internet Standard that extends the format of e-mail to support text in character sets other than US-ASCII non-text attachments multi-part message bodies and header information in non-ASCII character sets Virtually all human-written Internet e-mail and a fairly large proportion of automated e-mail is transmitted via SMTP in MIME format Internet e-mail is so closely associated with the SMTP and MIME standards that it is sometimes called SMTP/MIME e-mail The content types defined by MIME standards are also of growing importance outside of e-mail such as in communication protocols like HTTP for the World Wide Web MIME is also a fundamental component of communication protocols such as HTTP which requires that data be transmitted in the context of e-mail-like messages even though the data may not actually be e-mail codec a program capable of performing encoding and decoding on a digital data stream Codecs encode data for storage or encryption and decode it for viewing or editing CRLF a followed by a two ASCII control characters used to represent a newline on some operating systems notably DOS and Microsoft Windows LF a ASCII control character used to represent a newline on some operating systems notably Unix Unix-like and Linux Provides an abstract base class of codecs like base64 and quoted-printable Implemented as a singleton Marc Mutz 5.5"}, {"type": "function", "name": "KCodecs::Codec::makeDecoder", "url": "classKCodecs_1_1Codec.html#a0bad125ce87f7297fc092f4bf3ffa518", "keyword": "makeDecoder KCodecs::Codec::makeDecoder KCodecs::Codec", "text": "newline whether make new lines using CRLF or LF default is LF a pointer to an instance of the codec s decoder"}, {"type": "function", "name": "KCodecs::Codec::makeEncoder", "url": "classKCodecs_1_1Codec.html#af682d5c7a1ccf5f8efe69c5acd0c3f8a", "keyword": "makeEncoder KCodecs::Codec::makeEncoder KCodecs::Codec", "text": "newline whether make new lines using CRLF or LF default is LF a pointer to an instance of the codec s encoder"}, {"type": "function", "name": "KCodecs::Codec::maxDecodedSizeFor", "url": "classKCodecs_1_1Codec.html#a58bb65a6556c1d7b6b5abb2084ec1d65", "keyword": "maxDecodedSizeFor KCodecs::Codec::maxDecodedSizeFor KCodecs::Codec", "text": "insize is the number of input characters to be decoded newline whether make new lines using CRLF or LF default is LF the maximum number of characters in the decoding"}, {"type": "function", "name": "KCodecs::Codec::maxEncodedSizeFor", "url": "classKCodecs_1_1Codec.html#abbca5be2e16728ee4d2c827345d85f67", "keyword": "maxEncodedSizeFor KCodecs::Codec::maxEncodedSizeFor KCodecs::Codec", "text": "insize is the number of input characters to be encoded newline whether make new lines using CRLF or LF default is LF the maximum number of characters in the encoding"}, {"type": "function", "name": "KCodecs::Codec::name", "url": "classKCodecs_1_1Codec.html#a8b3be21a8cfe9cb77c421a9f6c978524", "keyword": "name KCodecs::Codec::name KCodecs::Codec name KCodecs::Codec::name KCodecs::Codec", "text": "Guaranteed to be lowercase"}, {"type": "class", "name": "KCodecs::Decoder", "url": "classKCodecs_1_1Decoder.html", "keyword": "Decoder", "text": "Stateful decoder class modelled after QTextDecoder KCodecs decoders are designed to be able to process encoded data in chunks of arbitrary size and to work with output buffers of also arbitrary size They maintain any state necessary to go on where the previous call left off The class consists of only two methods of interest see decode which decodes an input block and finalize which flushes any remaining data to the output stream Typically you will create a decoder instance call decode as often as necessary then call finalize most often a single call suffices but it might be that during that call the output buffer is filled so you should be prepared to call finalize as often as necessary ie until it returns true Both methods return true to indicate that they ve finished their job For decode a return value of true means that the current input block has been finished false most often means that the output buffer is full but that isn t required behavior The decode call is free to return at arbitrary times during processing For finalize a return value of true means that all data implicitly or explicitly stored in the decoder instance has been flushed to the output buffer A false return value should be interpreted as just as with decode Since the decoder maintains state you can only use it once After a sequence of input blocks has been processed you finalize the output and then delete the decoder instance If you want to process another input block sequence you create a new instance Typical usage in contains the base64-encoded input data taking into account all the conventions detailed above KCodecs::Codec KCodecs::Codec::codecForName if qFatal() KCodecs::Decoder codec- makeDecoder() Q_ASSERT(dec) should not happen QByteArray out(256) small buffer is enough QByteArray::Iterator iit in.begin() QByteArray::Iterator oit out.begin() decode the chunk while decode iit in.end() oit out.end() if oit out.end() output buffer full process contents do_something_with(out) oit out.begin() repeat while loop for each input block finish flush remaining data from decoder while finish oit out.end() if oit out.end() output buffer full process contents do_something_with(out) oit out.begin() now process last chunk out.resize oit out.begin() do_something_with(out) _delete_ the decoder but not the codec delete dec 5.5"}, {"type": "function", "name": "KCodecs::Decoder::~Decoder", "url": "classKCodecs_1_1Decoder.html#a3f145181a5c6157bd0f2aec9e90fb42c", "keyword": "KCodecs::Decoder::~Decoder KCodecs::Decoder", "text": ""}, {"type": "function", "name": "KCodecs::Decoder::decode", "url": "classKCodecs_1_1Decoder.html#afd751ebf6571a91e21b1790f703bea76", "keyword": "decode KCodecs::Decoder::decode KCodecs::Decoder", "text": "See class decumentation for calling conventions scursor is a pointer to the start of the input buffer send is a pointer to the end of the input buffer dcursor is a pointer to the start of the output buffer dend is a pointer to the end of the output buffer"}, {"type": "function", "name": "KCodecs::Decoder::finish", "url": "classKCodecs_1_1Decoder.html#aea94ec514d5726c9baed50022f445ab7", "keyword": "finish KCodecs::Decoder::finish KCodecs::Decoder", "text": "Writes all remaining data and resets the decoder See KCodecs::Codec for calling conventions dcursor is a pointer to the start of the output buffer dend is a pointer to the end of the output buffer"}, {"type": "function", "name": "KCodecs::Decoder::Decoder", "url": "classKCodecs_1_1Decoder.html#a6115edd39ad52ab89721d45c4aa20159", "keyword": "Decoder KCodecs::Decoder::Decoder KCodecs::Decoder", "text": "Use KCodecs::Codec::makeDecoder to create an instance newline whether make new lines using CRLF or LF default is LF"}, {"type": "class", "name": "KCodecs::EightBitCodec", "url": "classKCodecs_1_1EightBitCodec.html", "keyword": "EightBitCodec", "text": ""}, {"type": "function", "name": "KCodecs::EightBitCodec::EightBitCodec", "url": "classKCodecs_1_1EightBitCodec.html#aad14dcd6cffbdef97621aa8bdc7d3570", "keyword": "EightBitCodec KCodecs::EightBitCodec::EightBitCodec KCodecs::EightBitCodec", "text": ""}, {"type": "function", "name": "KCodecs::EightBitCodec::~EightBitCodec", "url": "classKCodecs_1_1EightBitCodec.html#a74ee976d89b56909a20f2f346f9a2741", "keyword": "KCodecs::EightBitCodec::~EightBitCodec KCodecs::EightBitCodec", "text": ""}, {"type": "function", "name": "KCodecs::EightBitCodec::name", "url": "classKCodecs_1_1EightBitCodec.html#a3094bea928d3780fbdf3d781ff1633ac", "keyword": "name KCodecs::EightBitCodec::name KCodecs::EightBitCodec", "text": "Codec::name()"}, {"type": "function", "name": "KCodecs::IdentityCodec::maxDecodedSizeFor", "url": "classKCodecs_1_1IdentityCodec.html#ad771bb30ee7175b8ad1f59b1c7faae07", "keyword": "maxDecodedSizeFor KCodecs::IdentityCodec::maxDecodedSizeFor KCodecs::IdentityCodec maxDecodedSizeFor KCodecs::IdentityCodec::maxDecodedSizeFor KCodecs::IdentityCodec maxDecodedSizeFor KCodecs::IdentityCodec::maxDecodedSizeFor KCodecs::IdentityCodec", "text": "Codec::maxDecodedSizeFor()"}, {"type": "function", "name": "KCodecs::IdentityCodec::maxEncodedSizeFor", "url": "classKCodecs_1_1IdentityCodec.html#a6875de2d5e94a36c6e3cfc91326fce34", "keyword": "maxEncodedSizeFor KCodecs::IdentityCodec::maxEncodedSizeFor KCodecs::IdentityCodec maxEncodedSizeFor KCodecs::IdentityCodec::maxEncodedSizeFor KCodecs::IdentityCodec maxEncodedSizeFor KCodecs::IdentityCodec::maxEncodedSizeFor KCodecs::IdentityCodec", "text": "Codec::maxEncodedSizeFor()"}, {"type": "class", "name": "KCodecs::Encoder", "url": "classKCodecs_1_1Encoder.html", "keyword": "Encoder", "text": "Stateful encoder class modeled after QTextEncoder 5.5"}, {"type": "function", "name": "KCodecs::Encoder::~Encoder", "url": "classKCodecs_1_1Encoder.html#aac59b9d6b63fdadbf755ae3c964effba", "keyword": "KCodecs::Encoder::~Encoder KCodecs::Encoder", "text": ""}, {"type": "function", "name": "KCodecs::Encoder::encode", "url": "classKCodecs_1_1Encoder.html#acf5e6a6e82031987ef7f574aa2801ab6", "keyword": "encode KCodecs::Encoder::encode KCodecs::Encoder", "text": "See KCodecs::Codec for calling conventions scursor is a pointer to the start of the input buffer send is a pointer to the end of the input buffer dcursor is a pointer to the start of the output buffer dend is a pointer to the end of the output buffer"}, {"type": "function", "name": "KCodecs::Encoder::finish", "url": "classKCodecs_1_1Encoder.html#adc465c35d0cff9b3a00fc696af474f01", "keyword": "finish KCodecs::Encoder::finish KCodecs::Encoder", "text": "Writes all remaining data and resets the encoder See KCodecs::Codec for calling conventions dcursor is a pointer to the start of the output buffer dend is a pointer to the end of the output buffer"}, {"type": "enumvalue", "name": "KCodecs::Encoder::maxBufferedChars", "url": "classKCodecs_1_1Encoder.html#ae1334f4a9d82bbbda2b61dad3568ba3ea487440ab9162d3f4c3a22a0ebf879cf2", "keyword": "maxBufferedChars KCodecs::Encoder::maxBufferedChars KCodecs::Encoder", "text": "Eight"}, {"type": "function", "name": "KCodecs::Encoder::Encoder", "url": "classKCodecs_1_1Encoder.html#ac78e44d7d606ea9656511f03781f65e2", "keyword": "Encoder KCodecs::Encoder::Encoder KCodecs::Encoder", "text": "Use KCodecs::Codec::makeEncoder if you want one newline whether make new lines using CRLF or LF default is LF"}, {"type": "function", "name": "KCodecs::Encoder::flushOutputBuffer", "url": "classKCodecs_1_1Encoder.html#a94bd0a857159baa25598c482facda894", "keyword": "flushOutputBuffer KCodecs::Encoder::flushOutputBuffer KCodecs::Encoder", "text": "Implementations of encode and finish should call this at the very beginning and for each iteration of the while loop dcursor is a pointer to the start of the output buffer dend is a pointer to the end of the output buffer true if all chars could be written false otherwise"}, {"type": "function", "name": "KCodecs::Encoder::write", "url": "classKCodecs_1_1Encoder.html#a71dd62f269a0dc50ce09428d5a553f4f", "keyword": "write KCodecs::Encoder::write KCodecs::Encoder", "text": "ch is the character to write dcursor is a pointer to the start of the output buffer dend is a pointer to the end of the output buffer true if written to the output stream else false if buffered"}, {"type": "function", "name": "KCodecs::Encoder::writeCRLF", "url": "classKCodecs_1_1Encoder.html#ad18e7d17af536326b5656d6911b59e91", "keyword": "writeCRLF KCodecs::Encoder::writeCRLF KCodecs::Encoder", "text": "Outputs LF or CRLF based on the state of mWithCRLF dcursor is a pointer to the start of the output buffer dend is a pointer to the end of the output buffer"}, {"type": "class", "name": "KCodecs::IdentityCodec", "url": "classKCodecs_1_1IdentityCodec.html", "keyword": "IdentityCodec", "text": ""}, {"type": "class", "name": "KCodecs::QuotedPrintableCodec", "url": "classKCodecs_1_1QuotedPrintableCodec.html", "keyword": "QuotedPrintableCodec", "text": ""}, {"type": "function", "name": "KCodecs::QuotedPrintableCodec::QuotedPrintableCodec", "url": "classKCodecs_1_1QuotedPrintableCodec.html#a64078b888ee4d17b721a76ecfc967371", "keyword": "QuotedPrintableCodec KCodecs::QuotedPrintableCodec::QuotedPrintableCodec KCodecs::QuotedPrintableCodec", "text": ""}, {"type": "function", "name": "KCodecs::QuotedPrintableCodec::~QuotedPrintableCodec", "url": "classKCodecs_1_1QuotedPrintableCodec.html#a2255577e6c939d0f5c04e2570b71f45c", "keyword": "KCodecs::QuotedPrintableCodec::~QuotedPrintableCodec KCodecs::QuotedPrintableCodec", "text": ""}, {"type": "function", "name": "KCodecs::QuotedPrintableCodec::makeDecoder", "url": "classKCodecs_1_1QuotedPrintableCodec.html#aea2b2d5a805b5b79deba4085efb4a158", "keyword": "makeDecoder KCodecs::QuotedPrintableCodec::makeDecoder KCodecs::QuotedPrintableCodec", "text": "Codec::makeDecoder()"}, {"type": "function", "name": "KCodecs::QuotedPrintableCodec::makeEncoder", "url": "classKCodecs_1_1QuotedPrintableCodec.html#a57112fd8475c33a45927e642e8a77e14", "keyword": "makeEncoder KCodecs::QuotedPrintableCodec::makeEncoder KCodecs::QuotedPrintableCodec", "text": "Codec::makeEncoder()"}, {"type": "function", "name": "KCodecs::QuotedPrintableCodec::maxDecodedSizeFor", "url": "classKCodecs_1_1QuotedPrintableCodec.html#a58974a1a6c754f0b5a9f2cc5b922d0a4", "keyword": "maxDecodedSizeFor KCodecs::QuotedPrintableCodec::maxDecodedSizeFor KCodecs::QuotedPrintableCodec", "text": "Codec::maxDecodedSizeFor()"}, {"type": "function", "name": "KCodecs::QuotedPrintableCodec::maxEncodedSizeFor", "url": "classKCodecs_1_1QuotedPrintableCodec.html#ab8943948402009f9fd370701eee3925c", "keyword": "maxEncodedSizeFor KCodecs::QuotedPrintableCodec::maxEncodedSizeFor KCodecs::QuotedPrintableCodec", "text": "Codec::maxEncodedSizeFor()"}, {"type": "function", "name": "KCodecs::QuotedPrintableCodec::name", "url": "classKCodecs_1_1QuotedPrintableCodec.html#aa4a768ea5190fa3c8c367c042df5c335", "keyword": "name KCodecs::QuotedPrintableCodec::name KCodecs::QuotedPrintableCodec", "text": "Codec::name()"}, {"type": "class", "name": "KCodecs::Rfc2047BEncodingCodec", "url": "classKCodecs_1_1Rfc2047BEncodingCodec.html", "keyword": "Rfc2047BEncodingCodec", "text": ""}, {"type": "function", "name": "KCodecs::Rfc2047BEncodingCodec::Rfc2047BEncodingCodec", "url": "classKCodecs_1_1Rfc2047BEncodingCodec.html#a99685ff71e3e9b1f322f85939bb9e8a5", "keyword": "Rfc2047BEncodingCodec KCodecs::Rfc2047BEncodingCodec::Rfc2047BEncodingCodec KCodecs::Rfc2047BEncodingCodec", "text": ""}, {"type": "function", "name": "KCodecs::Rfc2047BEncodingCodec::~Rfc2047BEncodingCodec", "url": "classKCodecs_1_1Rfc2047BEncodingCodec.html#ad6eff8509b51ed187f81c1a93cdabe69", "keyword": "KCodecs::Rfc2047BEncodingCodec::~Rfc2047BEncodingCodec KCodecs::Rfc2047BEncodingCodec", "text": ""}, {"type": "function", "name": "KCodecs::Rfc2047BEncodingCodec::makeEncoder", "url": "classKCodecs_1_1Rfc2047BEncodingCodec.html#a84707a29516b725c123f7cffd643485b", "keyword": "makeEncoder KCodecs::Rfc2047BEncodingCodec::makeEncoder KCodecs::Rfc2047BEncodingCodec", "text": "Codec::makeEncoder()"}, {"type": "function", "name": "KCodecs::Rfc2047BEncodingCodec::maxDecodedSizeFor", "url": "classKCodecs_1_1Rfc2047BEncodingCodec.html#a3e16d86b5fc69dbde12c593d5b66c2c4", "keyword": "maxDecodedSizeFor KCodecs::Rfc2047BEncodingCodec::maxDecodedSizeFor KCodecs::Rfc2047BEncodingCodec", "text": "Codec::maxDecodedSizeFor()"}, {"type": "function", "name": "KCodecs::Rfc2047BEncodingCodec::maxEncodedSizeFor", "url": "classKCodecs_1_1Rfc2047BEncodingCodec.html#a090c09b570f4d14033153757f7b98a4d", "keyword": "maxEncodedSizeFor KCodecs::Rfc2047BEncodingCodec::maxEncodedSizeFor KCodecs::Rfc2047BEncodingCodec", "text": "Codec::maxEncodedSizeFor()"}, {"type": "function", "name": "KCodecs::Rfc2047BEncodingCodec::name", "url": "classKCodecs_1_1Rfc2047BEncodingCodec.html#abff7a5ac2b523714e04a7b413e1bdb94", "keyword": "name KCodecs::Rfc2047BEncodingCodec::name KCodecs::Rfc2047BEncodingCodec", "text": "Codec::name()"}, {"type": "class", "name": "KCodecs::Rfc2047QEncodingCodec", "url": "classKCodecs_1_1Rfc2047QEncodingCodec.html", "keyword": "Rfc2047QEncodingCodec", "text": ""}, {"type": "function", "name": "KCodecs::Rfc2047QEncodingCodec::Rfc2047QEncodingCodec", "url": "classKCodecs_1_1Rfc2047QEncodingCodec.html#a419cff97cd776f77f983cbaaba43628b", "keyword": "Rfc2047QEncodingCodec KCodecs::Rfc2047QEncodingCodec::Rfc2047QEncodingCodec KCodecs::Rfc2047QEncodingCodec", "text": ""}, {"type": "function", "name": "KCodecs::Rfc2047QEncodingCodec::~Rfc2047QEncodingCodec", "url": "classKCodecs_1_1Rfc2047QEncodingCodec.html#a57e0612795933e490188f4aa3ef7ef9f", "keyword": "KCodecs::Rfc2047QEncodingCodec::~Rfc2047QEncodingCodec KCodecs::Rfc2047QEncodingCodec", "text": ""}, {"type": "function", "name": "KCodecs::Rfc2047QEncodingCodec::makeDecoder", "url": "classKCodecs_1_1Rfc2047QEncodingCodec.html#a79ea4c22e7bd7748c5e43eb1d016616b", "keyword": "makeDecoder KCodecs::Rfc2047QEncodingCodec::makeDecoder KCodecs::Rfc2047QEncodingCodec", "text": "Codec::makeDecoder()"}, {"type": "function", "name": "KCodecs::Rfc2047QEncodingCodec::makeEncoder", "url": "classKCodecs_1_1Rfc2047QEncodingCodec.html#a3164bbc530c0f166a06c649411da616e", "keyword": "makeEncoder KCodecs::Rfc2047QEncodingCodec::makeEncoder KCodecs::Rfc2047QEncodingCodec", "text": "Codec::makeEncoder()"}, {"type": "function", "name": "KCodecs::Rfc2047QEncodingCodec::maxDecodedSizeFor", "url": "classKCodecs_1_1Rfc2047QEncodingCodec.html#ab1e6d7363aa6204d70e3e5e79e792108", "keyword": "maxDecodedSizeFor KCodecs::Rfc2047QEncodingCodec::maxDecodedSizeFor KCodecs::Rfc2047QEncodingCodec", "text": "Codec::maxDecodedSizeFor()"}, {"type": "function", "name": "KCodecs::Rfc2047QEncodingCodec::maxEncodedSizeFor", "url": "classKCodecs_1_1Rfc2047QEncodingCodec.html#adbf1e37b827c4bb8dd909bac960421c5", "keyword": "maxEncodedSizeFor KCodecs::Rfc2047QEncodingCodec::maxEncodedSizeFor KCodecs::Rfc2047QEncodingCodec", "text": "Codec::maxEncodedSizeFor()"}, {"type": "function", "name": "KCodecs::Rfc2047QEncodingCodec::name", "url": "classKCodecs_1_1Rfc2047QEncodingCodec.html#a52b5437e66c504dce36352eb2b7a12e5", "keyword": "name KCodecs::Rfc2047QEncodingCodec::name KCodecs::Rfc2047QEncodingCodec", "text": "Codec::name()"}, {"type": "class", "name": "KCodecs::Rfc2231EncodingCodec", "url": "classKCodecs_1_1Rfc2231EncodingCodec.html", "keyword": "Rfc2231EncodingCodec", "text": ""}, {"type": "function", "name": "KCodecs::Rfc2231EncodingCodec::Rfc2231EncodingCodec", "url": "classKCodecs_1_1Rfc2231EncodingCodec.html#a7e0308d114aee019112a26321e825e2c", "keyword": "Rfc2231EncodingCodec KCodecs::Rfc2231EncodingCodec::Rfc2231EncodingCodec KCodecs::Rfc2231EncodingCodec", "text": ""}, {"type": "function", "name": "KCodecs::Rfc2231EncodingCodec::~Rfc2231EncodingCodec", "url": "classKCodecs_1_1Rfc2231EncodingCodec.html#a041b47381b78f74d0193d9b765e8cfb9", "keyword": "KCodecs::Rfc2231EncodingCodec::~Rfc2231EncodingCodec KCodecs::Rfc2231EncodingCodec", "text": ""}, {"type": "function", "name": "KCodecs::Rfc2231EncodingCodec::makeDecoder", "url": "classKCodecs_1_1Rfc2231EncodingCodec.html#a6691bd1d2349cfeb637d3346c6cb8ec2", "keyword": "makeDecoder KCodecs::Rfc2231EncodingCodec::makeDecoder KCodecs::Rfc2231EncodingCodec", "text": "Codec::makeDecoder()"}, {"type": "function", "name": "KCodecs::Rfc2231EncodingCodec::makeEncoder", "url": "classKCodecs_1_1Rfc2231EncodingCodec.html#a95e8c2379bebc275ed0f4d4d9946e1a5", "keyword": "makeEncoder KCodecs::Rfc2231EncodingCodec::makeEncoder KCodecs::Rfc2231EncodingCodec", "text": "Codec::makeEncoder()"}, {"type": "function", "name": "KCodecs::Rfc2231EncodingCodec::maxDecodedSizeFor", "url": "classKCodecs_1_1Rfc2231EncodingCodec.html#a2195f8f5f1254e30557234f38f0a7e8b", "keyword": "maxDecodedSizeFor KCodecs::Rfc2231EncodingCodec::maxDecodedSizeFor KCodecs::Rfc2231EncodingCodec", "text": "Codec::maxDecodedSizeFor()"}, {"type": "function", "name": "KCodecs::Rfc2231EncodingCodec::maxEncodedSizeFor", "url": "classKCodecs_1_1Rfc2231EncodingCodec.html#a5bca9535e485032529550656680a5be5", "keyword": "maxEncodedSizeFor KCodecs::Rfc2231EncodingCodec::maxEncodedSizeFor KCodecs::Rfc2231EncodingCodec", "text": "Codec::maxEncodedSizeFor()"}, {"type": "function", "name": "KCodecs::Rfc2231EncodingCodec::name", "url": "classKCodecs_1_1Rfc2231EncodingCodec.html#a901d183e1496bb1ff0cb9079b616bd6e", "keyword": "name KCodecs::Rfc2231EncodingCodec::name KCodecs::Rfc2231EncodingCodec", "text": "Codec::name()"}, {"type": "class", "name": "KCodecs::SevenBitCodec", "url": "classKCodecs_1_1SevenBitCodec.html", "keyword": "SevenBitCodec", "text": ""}, {"type": "function", "name": "KCodecs::SevenBitCodec::SevenBitCodec", "url": "classKCodecs_1_1SevenBitCodec.html#ae1e1db762c74bb53a412d1f0acf87725", "keyword": "SevenBitCodec KCodecs::SevenBitCodec::SevenBitCodec KCodecs::SevenBitCodec", "text": ""}, {"type": "function", "name": "KCodecs::SevenBitCodec::~SevenBitCodec", "url": "classKCodecs_1_1SevenBitCodec.html#a5ab19b1d2e1bcd8af23cdce4339934ec", "keyword": "KCodecs::SevenBitCodec::~SevenBitCodec KCodecs::SevenBitCodec", "text": ""}, {"type": "function", "name": "KCodecs::SevenBitCodec::name", "url": "classKCodecs_1_1SevenBitCodec.html#aeb9f54324b039bfac8b2c28ea777c3ee", "keyword": "name KCodecs::SevenBitCodec::name KCodecs::SevenBitCodec", "text": "Codec::name()"}, {"type": "class", "name": "KCodecs::UUCodec", "url": "classKCodecs_1_1UUCodec.html", "keyword": "UUCodec", "text": ""}, {"type": "function", "name": "KCodecs::UUCodec::UUCodec", "url": "classKCodecs_1_1UUCodec.html#a50bab76b2277b6fb216e26d53192602f", "keyword": "UUCodec KCodecs::UUCodec::UUCodec KCodecs::UUCodec", "text": ""}, {"type": "function", "name": "KCodecs::UUCodec::~UUCodec", "url": "classKCodecs_1_1UUCodec.html#ac0fc152f458e8e234c48e00e85a0de33", "keyword": "KCodecs::UUCodec::~UUCodec KCodecs::UUCodec", "text": ""}, {"type": "function", "name": "KCodecs::UUCodec::makeDecoder", "url": "classKCodecs_1_1UUCodec.html#acc20035fe9b955be9271e2a80477e875", "keyword": "makeDecoder KCodecs::UUCodec::makeDecoder KCodecs::UUCodec", "text": "Codec::makeEncoder()"}, {"type": "function", "name": "KCodecs::UUCodec::makeEncoder", "url": "classKCodecs_1_1UUCodec.html#abc314117f590f9e573a5406042706d4b", "keyword": "makeEncoder KCodecs::UUCodec::makeEncoder KCodecs::UUCodec", "text": "Codec::makeEncoder()"}, {"type": "function", "name": "KCodecs::UUCodec::maxDecodedSizeFor", "url": "classKCodecs_1_1UUCodec.html#a4b656680c5fd76641e2b62c997e6bc7e", "keyword": "maxDecodedSizeFor KCodecs::UUCodec::maxDecodedSizeFor KCodecs::UUCodec", "text": "Codec::maxDecodedSizeFor()"}, {"type": "function", "name": "KCodecs::UUCodec::maxEncodedSizeFor", "url": "classKCodecs_1_1UUCodec.html#ab39f77558088f06ede37a953cbc55c2f", "keyword": "maxEncodedSizeFor KCodecs::UUCodec::maxEncodedSizeFor KCodecs::UUCodec", "text": "Codec::maxEncodedSizeFor()"}, {"type": "function", "name": "KCodecs::UUCodec::name", "url": "classKCodecs_1_1UUCodec.html#ace96b5111097f828677216350d935b0d", "keyword": "name KCodecs::UUCodec::name KCodecs::UUCodec", "text": "Codec::name()"}, {"type": "namespace", "name": "KEmailAddress", "url": "namespaceKEmailAddress.html", "keyword": "KEmailAddress", "text": "5.5.0"}, {"type": "page", "name": "index", "url": "index.html", "keyword": null, "text": "KCodecs String encoding library Introduction KCodecs provide a collection of methods to manipulate strings using various encodings It can automatically determine the charset of a string translate XML entities validate email addresses and find encodings by name in a more tolerant way than QTextCodec useful e.g for data coming from the Internet"}]}