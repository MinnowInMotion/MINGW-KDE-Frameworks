<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemBool</name>
    <filename>classKCoreConfigSkeleton_1_1ItemBool.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemBool</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemBool.html</anchorfile>
      <anchor>a60d80a1c514f6a46703183c0ef847504</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, bool &amp;reference, bool defaultValue=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemBool.html</anchorfile>
      <anchor>a5cc3ef9ab8c8dbe2b60b48245444d03c</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemBool.html</anchorfile>
      <anchor>a53c252a20db46d556e104c722774de24</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemBool.html</anchorfile>
      <anchor>a863d5d240a22236eb0b5391d18d2270a</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemBool.html</anchorfile>
      <anchor>a80a55b90549a3d66b2967d0c5bc020a8</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfigSkeleton::ItemColor</name>
    <filename>classKConfigSkeleton_1_1ItemColor.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemColor</name>
      <anchorfile>classKConfigSkeleton_1_1ItemColor.html</anchorfile>
      <anchor>a98a93b4c7350f58c692ed1bc532134ef</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QColor &amp;reference, const QColor &amp;defaultValue=QColor(128, 128, 128))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKConfigSkeleton_1_1ItemColor.html</anchorfile>
      <anchor>a310892947ff699babfbaaa049e90fb9b</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKConfigSkeleton_1_1ItemColor.html</anchorfile>
      <anchor>abdf2f1946e666d9600acd771dfcf27c6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKConfigSkeleton_1_1ItemColor.html</anchorfile>
      <anchor>a06fc0a4997337d4490dc09e039815223</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKConfigSkeleton_1_1ItemColor.html</anchorfile>
      <anchor>a680aa92b6980985fb8cf5b3ff73a5857</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemDateTime</name>
    <filename>classKCoreConfigSkeleton_1_1ItemDateTime.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemDateTime</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDateTime.html</anchorfile>
      <anchor>a128fad0065842458b17c58c8ca5d70d3</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QDateTime &amp;reference, const QDateTime &amp;defaultValue=QDateTime())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDateTime.html</anchorfile>
      <anchor>a5d4eaffb1c135472cc9636cafc7d3b30</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDateTime.html</anchorfile>
      <anchor>a4f1e8829054c46a972115d3132e08ead</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDateTime.html</anchorfile>
      <anchor>a3ca8ac09cc53fa5e0f32e4e31939eae9</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDateTime.html</anchorfile>
      <anchor>a0effc943586cf71f24cb09e444c3f494</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemDouble</name>
    <filename>classKCoreConfigSkeleton_1_1ItemDouble.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemDouble</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>a27c32aed2c78358c051c4ec1d459dbf7</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, double &amp;reference, double defaultValue=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>a4305f7a18a17e1acfd77e0ea7c473f40</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>maxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>af2ca539cb3b48c618eca173a53cf4c39</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>minValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>a90bbfb51f589895dc1b45de6c635d520</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>a1fc32f776c1dc3268a690eceac842099</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>a4099897a75ecc7ec53e0edb80bded5ad</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>ae39a245d8688472d246ca3e1c7b13e78</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>aa4958acba4a6adf8ce718b599705abc2</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemDouble.html</anchorfile>
      <anchor>ade51c190c08e11ddb9aa2e93e33dba40</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemEnum</name>
    <filename>classKCoreConfigSkeleton_1_1ItemEnum.html</filename>
    <base>KCoreConfigSkeleton::ItemInt</base>
    <member kind="function">
      <type></type>
      <name>ItemEnum</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemEnum.html</anchorfile>
      <anchor>ab839804af0531604cbfb0b39cf7e6131</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, qint32 &amp;reference, const QList&lt; Choice &gt; &amp;choices, qint32 defaultValue=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemEnum.html</anchorfile>
      <anchor>aa1706e3ad927e912ea294cea23c3a546</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemEnum.html</anchorfile>
      <anchor>a6581b417f89564fafa7a97be6d18384b</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfigSkeleton::ItemFont</name>
    <filename>classKConfigSkeleton_1_1ItemFont.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemFont</name>
      <anchorfile>classKConfigSkeleton_1_1ItemFont.html</anchorfile>
      <anchor>a6c823b260b3979b3f2b45de6affbfcb1</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QFont &amp;reference, const QFont &amp;defaultValue=QFont())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKConfigSkeleton_1_1ItemFont.html</anchorfile>
      <anchor>a84fe19461695d01afea81c19ccf97627</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKConfigSkeleton_1_1ItemFont.html</anchorfile>
      <anchor>a53da553492bce3327d01f766db9ed8ee</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKConfigSkeleton_1_1ItemFont.html</anchorfile>
      <anchor>ab3abcc5979e835552f2a50c9d748f98b</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKConfigSkeleton_1_1ItemFont.html</anchorfile>
      <anchor>a276b32a26940d60ba42711854d04fa9c</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemInt</name>
    <filename>classKCoreConfigSkeleton_1_1ItemInt.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemInt</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>ac2100120ba014e9eab1c7bd7027e33f6</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, qint32 &amp;reference, qint32 defaultValue=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>a210efa00e5b9c7d2382d43283ad34862</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>maxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>a16dd87a029e146ad177c5dfb5063d236</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>minValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>a1afb7ccc9713d7093aa17f1811253b40</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>ae8f8b49d4ba7078cedd66b22a2f812d0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>aa5b8b861f3d97215953d9dfb5da45164</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>a130dbd1fcb57759fd33a0f3a7bd741fe</anchor>
      <arglist>(qint32)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>a8dd9f4423a381707c30374a47d60b903</anchor>
      <arglist>(qint32)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemInt.html</anchorfile>
      <anchor>aa0819fb12245e980f369df8de5c6bad2</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemIntList</name>
    <filename>classKCoreConfigSkeleton_1_1ItemIntList.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemIntList</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemIntList.html</anchorfile>
      <anchor>a7d3e7fc7bdf22990a370d697bf276dea</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QList&lt; int &gt; &amp;reference, const QList&lt; int &gt; &amp;defaultValue=QList&lt; int &gt;())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemIntList.html</anchorfile>
      <anchor>a498bdbf10455517f8d5a375faa1ad915</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemIntList.html</anchorfile>
      <anchor>a116751090eb45c75d63aa7c4f09ad9bd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemIntList.html</anchorfile>
      <anchor>a8a6d8bca3d327c67334056269c5047e2</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemIntList.html</anchorfile>
      <anchor>ab044368bbb3ac6d83ab6fc5af4f195f7</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemLongLong</name>
    <filename>classKCoreConfigSkeleton_1_1ItemLongLong.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemLongLong</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>a5c078b33971d5c45b55e0987d2409af6</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, qint64 &amp;reference, qint64 defaultValue=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>aa580883a37b84035d16859e117ca23c9</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>maxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>a02e908c7690330011973f1d5d1cd9b61</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>minValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>ae07f0d192387b9df9a783c5ea121e35a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>a39096b8ceae2d9f01dd9df41fa075aee</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>ae2b70ecfdbbf269912457078fec88eda</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>a4666a3a05343ae992d469f8a20759058</anchor>
      <arglist>(qint64)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>ab0c1d523602c1a79643de83430befd8d</anchor>
      <arglist>(qint64)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemLongLong.html</anchorfile>
      <anchor>a468eab145703d6e4d7f204c8b977d980</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemPassword</name>
    <filename>classKCoreConfigSkeleton_1_1ItemPassword.html</filename>
    <base>KCoreConfigSkeleton::ItemString</base>
    <member kind="function">
      <type></type>
      <name>ItemPassword</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPassword.html</anchorfile>
      <anchor>acc1c3969036a033a0c26a219dc6a347f</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QString &amp;reference, const QString &amp;defaultValue=QLatin1String(&quot;&quot;))</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemPath</name>
    <filename>classKCoreConfigSkeleton_1_1ItemPath.html</filename>
    <base>KCoreConfigSkeleton::ItemString</base>
    <member kind="function">
      <type></type>
      <name>ItemPath</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPath.html</anchorfile>
      <anchor>a97467e2d9178faacb83627231e3570d9</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QString &amp;reference, const QString &amp;defaultValue=QString())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemPathList</name>
    <filename>classKCoreConfigSkeleton_1_1ItemPathList.html</filename>
    <base>KCoreConfigSkeleton::ItemStringList</base>
    <member kind="function">
      <type></type>
      <name>ItemPathList</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPathList.html</anchorfile>
      <anchor>acdc78b5d9148cb918bf48acf4b75f9c6</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QStringList &amp;reference, const QStringList &amp;defaultValue=QStringList())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPathList.html</anchorfile>
      <anchor>a3f2b6fb9ff271ff2c28085103f9fd6a9</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPathList.html</anchorfile>
      <anchor>ac63eea84eb5e628b40f15bff1512124c</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemPoint</name>
    <filename>classKCoreConfigSkeleton_1_1ItemPoint.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemPoint</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPoint.html</anchorfile>
      <anchor>a9de642bdbe3de248f8a6a74477029b5b</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QPoint &amp;reference, const QPoint &amp;defaultValue=QPoint())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPoint.html</anchorfile>
      <anchor>a46ba63784126ef01c5f5a06198528fd1</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPoint.html</anchorfile>
      <anchor>aaf8dddc6c03202b27e726f91bff45bdf</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPoint.html</anchorfile>
      <anchor>ae29fb2abbeb6f36d6c31cf9a2d021459</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemPoint.html</anchorfile>
      <anchor>ae08f6af8dcd4660f256a458a3784ba1b</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemProperty</name>
    <filename>classKCoreConfigSkeleton_1_1ItemProperty.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemProperty.html</anchorfile>
      <anchor>aa1bf39d84eccd0305b52813a35f192c4</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QVariant &amp;reference, const QVariant &amp;defaultValue=QVariant())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemProperty.html</anchorfile>
      <anchor>a92b00417152bf5646aebd37cada40334</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemProperty.html</anchorfile>
      <anchor>a0c5b645ac9a2cc3c6e1e3dd3a4e0c066</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemProperty.html</anchorfile>
      <anchor>a828d9a46dfb83bea9d65fd85f6b8be6b</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemProperty.html</anchorfile>
      <anchor>a14af38b0908902f3254d4da9317a8c13</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemRect</name>
    <filename>classKCoreConfigSkeleton_1_1ItemRect.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemRect</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemRect.html</anchorfile>
      <anchor>a0f876d6b89210ec9ef5cdf0f0bff2efd</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QRect &amp;reference, const QRect &amp;defaultValue=QRect())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemRect.html</anchorfile>
      <anchor>a9455098a17315b1a55768833b47a1d25</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemRect.html</anchorfile>
      <anchor>a29fe7a0d52cbf16f55ad24a835bdacac</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemRect.html</anchorfile>
      <anchor>ab526fb9e1f155bd8aee228d49d5d7dcb</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemRect.html</anchorfile>
      <anchor>a0d18d3ade0f0c557cf0f544fb98a9ce4</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemSize</name>
    <filename>classKCoreConfigSkeleton_1_1ItemSize.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemSize</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemSize.html</anchorfile>
      <anchor>af35fbab4669009dacd28d266915d07bc</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QSize &amp;reference, const QSize &amp;defaultValue=QSize())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemSize.html</anchorfile>
      <anchor>af598b9bcae34f2c1aa12ba8ff29998ae</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemSize.html</anchorfile>
      <anchor>ad4700508ece6bd9bb3688e7d06b1fe0b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemSize.html</anchorfile>
      <anchor>a38c82645ce0c69f45b4208a9323057b8</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemSize.html</anchorfile>
      <anchor>ae629165fb8d0dc2b0c8257cea9f883f3</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemString</name>
    <filename>classKCoreConfigSkeleton_1_1ItemString.html</filename>
    <member kind="enumvalue">
      <name>Normal</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a1b8a1faf9574b41b48bb873968acda1fadaa891d7d422b0c59ccbece86b9fd2e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Password</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a1b8a1faf9574b41b48bb873968acda1fa73ae4c15ffb4b93ec6b4704ab9fde8f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Path</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a1b8a1faf9574b41b48bb873968acda1fa65ba06fd046bb0119ff76aa0c5724c37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a1b8a1faf9574b41b48bb873968acda1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Normal</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a1b8a1faf9574b41b48bb873968acda1fadaa891d7d422b0c59ccbece86b9fd2e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Password</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a1b8a1faf9574b41b48bb873968acda1fa73ae4c15ffb4b93ec6b4704ab9fde8f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Path</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a1b8a1faf9574b41b48bb873968acda1fa65ba06fd046bb0119ff76aa0c5724c37</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ItemString</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a44f1dc6e9f4ac5c9d3a2ddee5b52e38e</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QString &amp;reference, const QString &amp;defaultValue=QLatin1String(&quot;&quot;), Type type=Normal)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a014cce21c060e9ffdb82c873487dc9a5</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a1d7a42aefca86e33fccdc50c72e6c6d2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>ab240717fbf3a19627166870075cdfd3d</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>a51fcb8e275f3aa0f6c9458e3c4e7193f</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemString.html</anchorfile>
      <anchor>ad2b5da3e46fb276a28fdddc477340183</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemStringList</name>
    <filename>classKCoreConfigSkeleton_1_1ItemStringList.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemStringList</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemStringList.html</anchorfile>
      <anchor>a5c47578d72974a5f4baa402bf1173fbf</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QStringList &amp;reference, const QStringList &amp;defaultValue=QStringList())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemStringList.html</anchorfile>
      <anchor>a801b73b71ca5ab66badee69a505c0425</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemStringList.html</anchorfile>
      <anchor>ac57b943b25432eb5bef7fdc902d41133</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemStringList.html</anchorfile>
      <anchor>a5dcf3be24cb45140deab31625e74e007</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemStringList.html</anchorfile>
      <anchor>ad12fcdaba0488d71e7b05b75f2c73c0e</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemUInt</name>
    <filename>classKCoreConfigSkeleton_1_1ItemUInt.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemUInt</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>a191d29f6c27c29f3bb0963356571e8cf</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, quint32 &amp;reference, quint32 defaultValue=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>a6ce1e81966a1333d1a5bff44b4abc5ad</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>maxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>af29ba634dbb3ceea13fef447a0674a05</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>minValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>a6686b9e37ffc31ea74dd3993b6eb401d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>a22208e95e35fced3152ca556ae4ac14f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>aeba71e5a8c94c602ac72ad8030d27392</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>a9adcc51b3598e0c8f5ddb967b79cea0f</anchor>
      <arglist>(quint32)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>a56c80fe19841a8004daa1126ddc070b6</anchor>
      <arglist>(quint32)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUInt.html</anchorfile>
      <anchor>ad1b25a016ec99a195c0cef7a3b5a3740</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemULongLong</name>
    <filename>classKCoreConfigSkeleton_1_1ItemULongLong.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemULongLong</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>a04fb8520c070f76bada6098f67eb38a3</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, quint64 &amp;reference, quint64 defaultValue=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>a1a304e47c040b0d72f929cf982356217</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>maxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>a01116970c3aa52ca418431b1ee05a0e9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>minValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>afeecb27fe3e98ff596dd807492f98bde</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>af45d947d656037832542a6801970a4d0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>ab569555f6a158bb47cdfd6c13448c43f</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>a0f36f7c01730209514f63652689a82ee</anchor>
      <arglist>(quint64)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinValue</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>ac2c01f39ef1360ede5873131748ee423</anchor>
      <arglist>(quint64)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemULongLong.html</anchorfile>
      <anchor>a8739e696d8d6831bcc3341895974148b</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemUrl</name>
    <filename>classKCoreConfigSkeleton_1_1ItemUrl.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemUrl</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrl.html</anchorfile>
      <anchor>ab928189731e1577062db729827549220</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QUrl &amp;reference, const QUrl &amp;defaultValue=QUrl())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrl.html</anchorfile>
      <anchor>af19bd1a50d1b73254479b3f24972a0e0</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrl.html</anchorfile>
      <anchor>a51ec4db249620cd8c19451937ab1b7cb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrl.html</anchorfile>
      <anchor>a4a43bef81afd014d047d62c5478e0b50</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrl.html</anchorfile>
      <anchor>a20e61afd0d74e617afc7b898ec1848aa</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrl.html</anchorfile>
      <anchor>aa322e98486ab68795f7903dac65c44c7</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton::ItemUrlList</name>
    <filename>classKCoreConfigSkeleton_1_1ItemUrlList.html</filename>
    <member kind="function">
      <type></type>
      <name>ItemUrlList</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrlList.html</anchorfile>
      <anchor>ace050105270efb2d9bbee6393609e3f9</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key, QList&lt; QUrl &gt; &amp;reference, const QList&lt; QUrl &gt; &amp;defaultValue=QList&lt; QUrl &gt;())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrlList.html</anchorfile>
      <anchor>af6b8d50b481e7760ff4b9f35f06c4142</anchor>
      <arglist>(const QVariant &amp;p) const override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrlList.html</anchorfile>
      <anchor>a3c8d0ca0616c27c02903e75e863e57d3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrlList.html</anchorfile>
      <anchor>aa711d5fdcfb416a09a5f31aed813d2e7</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrlList.html</anchorfile>
      <anchor>a3049f259186f46a9e2bd1f54b748579c</anchor>
      <arglist>(const QVariant &amp;p) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeConfig</name>
      <anchorfile>classKCoreConfigSkeleton_1_1ItemUrlList.html</anchorfile>
      <anchor>a333a1f460fae8db3e899987920735e27</anchor>
      <arglist>(KConfig *config) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfig</name>
    <filename>classKConfig.html</filename>
    <base>KConfigBase</base>
    <member kind="enumvalue">
      <name>CascadeConfig</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7ea6e5641f90ac5c6baf06a79472f73c13d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FullConfig</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7eaa0baff442592099376d261e026b8a140</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IncludeGlobals</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7eaca3f834b897f852abeed3c8c4ea4e6ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoCascade</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7ea2a259935afb022644735ea2a06a9df05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoGlobals</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7eab5b9ba5faf1474af0225b0a3900cb062</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>OpenFlag</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IncludeGlobals</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7eaca3f834b897f852abeed3c8c4ea4e6ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CascadeConfig</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7ea6e5641f90ac5c6baf06a79472f73c13d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SimpleConfig</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7ea53b71a3aab71b05e8c4a6906ae647052</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoCascade</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7ea2a259935afb022644735ea2a06a9df05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoGlobals</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7eab5b9ba5faf1474af0225b0a3900cb062</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FullConfig</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7eaa0baff442592099376d261e026b8a140</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SimpleConfig</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad1f23964bbf8c11449e92a2596d15f7ea53b71a3aab71b05e8c4a6906ae647052</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfig</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a091ffa858c9c0cd2d474ad7b93266dad</anchor>
      <arglist>(const QString &amp;file=QString(), OpenFlags mode=FullConfig, QStandardPaths::StandardLocation type=QStandardPaths::GenericConfigLocation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfig</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ae1812a9184a6630dca1b365fa4e2070e</anchor>
      <arglist>(const QString &amp;file, const QString &amp;backend, QStandardPaths::StandardLocation type=QStandardPaths::GenericConfigLocation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkUpdate</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a7146ac7f1390e5040e280858649b4054</anchor>
      <arglist>(const QString &amp;id, const QString &amp;updateFile)</arglist>
    </member>
    <member kind="function">
      <type>KConfig *</type>
      <name>copyTo</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a557e059c7c1be4b00b19ef9943b2f1ae</anchor>
      <arglist>(const QString &amp;file, KConfig *config=Q_NULLPTR) const</arglist>
    </member>
    <member kind="function">
      <type>QMap&lt; QString, QString &gt;</type>
      <name>entryMap</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a4788d22c4c3719a2a3d853ba907bc867</anchor>
      <arglist>(const QString &amp;aGroup=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>groupList</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a819f390d0f4db6835801239b23a43775</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad7e59d598bed2e18e230963fec121f76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStandardPaths::StandardLocation</type>
      <name>locationType</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ab472b7495fdfd737613217ae8d21394e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markAsClean</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a2ad8cc41e9d976124d1a9e8a16b6990d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a542fd0e22b133a5982c06e55fcdd574e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>OpenFlags</type>
      <name>openFlags</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ab5f93423ec3b71d109518c158fa63af3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reparseConfiguration</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a46f2e340c44261c2b58496bc64b31106</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sync</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a4cd4e642d6d2120d0a3db05aa87d1c97</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>AccessMode</type>
      <name>accessMode</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a1a2c529979c9f7700e1d194c77cd183e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConfigWritable</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ac3b7638c220d43607dc701781f482ad9</anchor>
      <arglist>(bool warnUser)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConfigSources</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>abe8618e08321df7218354795c7c50d64</anchor>
      <arglist>(const QStringList &amp;sources)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>locale</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a45ea9edca6c08d313cedd970f0db0a94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setLocale</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ae364df3c07e00111821d132d034fb75b</anchor>
      <arglist>(const QString &amp;aLocale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadDefaults</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a4c6bc213d77306a6f83b4c45ea344991</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readDefaults</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a6be7f2fac9dd3ae7aef98107b4f36588</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isImmutable</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a6d3489338799a217a36a84981c86dfc7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGCORE_DEPRECATED void</type>
      <name>setForceGlobal</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad23a0ea745b472eef64581d6df5bb25d</anchor>
      <arglist>(bool force)</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGCORE_DEPRECATED bool</type>
      <name>forceGlobal</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a50102fa699937efa6fa237ba2569cc92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMainConfigName</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a99e61e61cbeaeeaf23d63f946e788823</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>virtual_hook</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a64f3a7098b95aff1b0a864ed031b051a</anchor>
      <arglist>(int id, void *data) override</arglist>
    </member>
    <member kind="function">
      <type>AccessMode</type>
      <name>accessMode</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a1a2c529979c9f7700e1d194c77cd183e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConfigWritable</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ac3b7638c220d43607dc701781f482ad9</anchor>
      <arglist>(bool warnUser)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConfigSources</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>abe8618e08321df7218354795c7c50d64</anchor>
      <arglist>(const QStringList &amp;sources)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>locale</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a45ea9edca6c08d313cedd970f0db0a94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setLocale</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ae364df3c07e00111821d132d034fb75b</anchor>
      <arglist>(const QString &amp;aLocale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadDefaults</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a4c6bc213d77306a6f83b4c45ea344991</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readDefaults</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a6be7f2fac9dd3ae7aef98107b4f36588</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isImmutable</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a6d3489338799a217a36a84981c86dfc7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGCORE_DEPRECATED void</type>
      <name>setForceGlobal</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>ad23a0ea745b472eef64581d6df5bb25d</anchor>
      <arglist>(bool force)</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGCORE_DEPRECATED bool</type>
      <name>forceGlobal</name>
      <anchorfile>classKConfig.html</anchorfile>
      <anchor>a50102fa699937efa6fa237ba2569cc92</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfigBackend</name>
    <filename>classKConfigBackend.html</filename>
    <member kind="enumvalue">
      <name>ParseDefaults</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>aaff7755a40a2c34f735105c42ae4fb53adf3b6233ae11d404d1ad7465b0bf81a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ParseExpansions</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>aaff7755a40a2c34f735105c42ae4fb53a0beb651513e1c35a8025bb1f1bfdb058</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ParseImmutable</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>ab774372a3461074028e659be4815217eab3022372d7e1b15a13a29de415d38ead</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ParseInfo</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>ab774372a3461074028e659be4815217e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ParseImmutable</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>ab774372a3461074028e659be4815217eab3022372d7e1b15a13a29de415d38ead</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ParseOpenError</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>ab774372a3461074028e659be4815217ea35f44ac42c249066c934d3b1285eb0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ParseOpenError</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>ab774372a3461074028e659be4815217ea35f44ac42c249066c934d3b1285eb0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ParseOption</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>aaff7755a40a2c34f735105c42ae4fb53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ParseDefaults</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>aaff7755a40a2c34f735105c42ae4fb53adf3b6233ae11d404d1ad7465b0bf81a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ParseExpansions</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>aaff7755a40a2c34f735105c42ae4fb53a0beb651513e1c35a8025bb1f1bfdb058</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WriteOption</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>a87174635931d44906580227a9416494f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KConfigBackend</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>a4182de9547e9e0eb65c0dd29fa4ff770</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual KConfigBase::AccessMode</type>
      <name>accessMode</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>ac378680ce0bcaed31cd6977d163e08f9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>createEnclosing</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>ada2fd42a230f5dc2f659505ef011dc7a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>filePath</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>a8ca66283ea6caeadacd04780ff8b8eb5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLocked</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>afeb2e750309c98512a6a5ebfced555ac</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isWritable</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>a16e8558c49dc0caaac0701abb12d0a7b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>QDateTime</type>
      <name>lastModified</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>aed08b45e67186e11ae2dd8df150ef9c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>lock</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>af3519f25eac75818fd4666d33c1c8d87</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>nonWritableErrorMessage</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>ad8a5ec10db3a03315297456d6880306e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ParseInfo</type>
      <name>parseConfig</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>ace9b73d582d8a706d5ae5138ca92cca4</anchor>
      <arglist>(const QByteArray &amp;locale, KEntryMap &amp;pWriteBackMap, ParseOptions options=ParseOptions())=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setFilePath</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>ae62bc4ba7984d0c483e677bf919f14f9</anchor>
      <arglist>(const QString &amp;path)=0</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>size</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>ac4821f5ba8a84120ca657e06fe4a14f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unlock</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>a541d88d04599f1540d5df488d7e56b89</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>writeConfig</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>af166a0a65306eaa0104be0f1bb9ba730</anchor>
      <arglist>(const QByteArray &amp;locale, KEntryMap &amp;entryMap, WriteOptions options)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QExplicitlySharedDataPointer&lt; KConfigBackend &gt;</type>
      <name>create</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>a2158974298b3beab44e6a94ae4d44e0b</anchor>
      <arglist>(const QString &amp;fileName=QString(), const QString &amp;system=QString())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerMappings</name>
      <anchorfile>classKConfigBackend.html</anchorfile>
      <anchor>a3a03c6a01750c6af1d2b73db49face05</anchor>
      <arglist>(const KEntryMap &amp;entryMap)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfigBase</name>
    <filename>classKConfigBase.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>AccessMode</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a86802f1591f5e30e012f99abb56c7edd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Global</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaa5fc9519c18ccdbfcd106d32fd461365d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Localized</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaaa118a385b8191369484b54047d0a8d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Normal</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaab94aac9e996e8ddf7c42c74e323632fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Persistent</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaa3e28cc02cc1ac896cd9b12f4797adef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WriteConfigFlag</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Persistent</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaa3e28cc02cc1ac896cd9b12f4797adef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Global</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaa5fc9519c18ccdbfcd106d32fd461365d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Localized</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaaa118a385b8191369484b54047d0a8d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Normal</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a748289f31b54c48d2ef03d66546718aaab94aac9e996e8ddf7c42c74e323632fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KConfigBase</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a9d5f14f757f09817f3aa1abcd3b5400d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AccessMode</type>
      <name>accessMode</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>aabeafa7717ddf6044b10ce77f0e6eecd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteGroup</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a6251665543e7b49c9592aafb59c920f5</anchor>
      <arglist>(const QByteArray &amp;group, WriteConfigFlags flags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>KConfigGroup</type>
      <name>group</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>afbb86fb82d1aba5b76e3b2fe76dbfb02</anchor>
      <arglist>(const QByteArray &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>const KConfigGroup</type>
      <name>group</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>acf64282fc205398c3c8e6c9705938c7a</anchor>
      <arglist>(const QByteArray &amp;group) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QStringList</type>
      <name>groupList</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a20c2e6795c7bee2843c6e1c130da6496</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasGroup</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>ac8581bb5f5d885235eb27261c7be70f4</anchor>
      <arglist>(const QString &amp;group) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGroupImmutable</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>ae0361106060ef97c8b592cf5a72b8670</anchor>
      <arglist>(const QByteArray &amp;aGroup) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isImmutable</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a72fc1c0ff46d7ab9cdcc0e4ed9e8a9ab</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>markAsClean</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a69c37b44524887c5941a4f5489372147</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>sync</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>af93541d8fab97ac1371daf64c83d8847</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>virtual_hook</name>
      <anchorfile>classKConfigBase.html</anchorfile>
      <anchor>a7069e1638523be70f8435dd0a5e7dd28</anchor>
      <arglist>(int id, void *data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfigGroup</name>
    <filename>classKConfigGroup.html</filename>
    <base>KConfigBase</base>
    <member kind="function">
      <type></type>
      <name>KConfigGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aa6cf4ce93bb212d17ee05c58d387a70b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>adb6cc4e1b091dac8443c436684fbf4c5</anchor>
      <arglist>(KConfigBase *master, const QString &amp;group)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a1dd35f276d852b7d20c6cac52c2e4f42</anchor>
      <arglist>(KConfigBase *master, const char *group)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a508a3b78dab1da62dce6366428c645b2</anchor>
      <arglist>(const KConfigBase *master, const QString &amp;group)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a4d3a8aa00771b30006e0a1f9c4439ba1</anchor>
      <arglist>(const KConfigBase *master, const char *group)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aa5ab43e257014ad42d470656718173a4</anchor>
      <arglist>(const QExplicitlySharedDataPointer&lt; KSharedConfig &gt; &amp;master, const QString &amp;group)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aa9d1cf8ee2b07facfdb8f3f57fdeb5f3</anchor>
      <arglist>(const QExplicitlySharedDataPointer&lt; KSharedConfig &gt; &amp;master, const char *group)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a0ed6418188c6fe39cbcffefb6bb7038a</anchor>
      <arglist>(const KConfigGroup &amp;)</arglist>
    </member>
    <member kind="function">
      <type>AccessMode</type>
      <name>accessMode</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a6867f0b748c55b7cf66049a1edb8792c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGCORE_DEPRECATED void</type>
      <name>changeGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ad2dc1ccc586c076536ea81fed5504612</anchor>
      <arglist>(const QString &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGCORE_DEPRECATED void</type>
      <name>changeGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a6e5a4b506f37e7841726c7248ee82c01</anchor>
      <arglist>(const char *group)</arglist>
    </member>
    <member kind="function">
      <type>KConfig *</type>
      <name>config</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>abbc627fe4c08541008570f55cfbfac7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const KConfig *</type>
      <name>config</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ae27e584dd3f2b87b6265a30f25b587d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyTo</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>affa3af4f1c3a03a296758edf308ea836</anchor>
      <arglist>(KConfigBase *other, WriteConfigFlags pFlags=Normal) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aca71f9228c741eb46e346bb1f2c847aa</anchor>
      <arglist>(const QString &amp;pKey, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a1c37d02c1945686037ace2a11e194fa2</anchor>
      <arglist>(const char *pKey, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteGroup</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a6a5f868f8eb3409422b9cc4b6dffbeb2</anchor>
      <arglist>(WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>QMap&lt; QString, QString &gt;</type>
      <name>entryMap</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>adaf18365e1cd97a7fb2e8c90d3750112</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ac42b1e7095936a557cbddec177de3d7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>groupList</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ae4b78d590caa1d9847dad9e295b68ea9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasDefault</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a24931c0b4eda8864a68ce0a23b3019df</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasDefault</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a3d5d17d7000d1a659ff02eb8cffb29c7</anchor>
      <arglist>(const char *key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasKey</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a2516fa21b2747bd213bdbff79e591fab</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasKey</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a3eb88155285dfda54ab6523c4dd5888f</anchor>
      <arglist>(const char *key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEntryImmutable</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a506e50afd8ccb9d1bcc5f74165f9b13e</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEntryImmutable</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a58c8999b4447e667fd7b59984f779c48</anchor>
      <arglist>(const char *key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isImmutable</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aad08829154220cd99a333f241c648542</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a754c98908f1fa22924b8a8a987cd25ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>keyList</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>af7cdf67008751f50038d6641129bc61c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markAsClean</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aa3b0aea7907b3ab8b13588003073a75e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a19560ac6fd3755872e9c715ef94c6d3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>KConfigGroup</type>
      <name>parent</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ad9b6a4f9c71ab73696854241cdf7f17c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a12ce78aa3ac7229ecdf5db9ce882a314</anchor>
      <arglist>(const QString &amp;key, const T &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a738106077c450aab8d692c8eb49ae99d</anchor>
      <arglist>(const char *key, const T &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a6c3996918b882232adb7d848459ee31e</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a0313fbcf3327fab0ee1a87ffabfddad3</anchor>
      <arglist>(const char *key, const QVariant &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a5e7d1b835e413ea49b7e57eeac6dd4fa</anchor>
      <arglist>(const QString &amp;key, const QString &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a0835b34c334a2365677c62b4216b7561</anchor>
      <arglist>(const char *key, const QString &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a524e533328faec01f5745d4034a8cac0</anchor>
      <arglist>(const QString &amp;key, const char *aDefault=Q_NULLPTR) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>acb9e67511ec20bc2dbdb8ad34000b58a</anchor>
      <arglist>(const char *key, const char *aDefault=Q_NULLPTR) const</arglist>
    </member>
    <member kind="function">
      <type>QVariantList</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a81038f73edc839007b6ff491faf1af67</anchor>
      <arglist>(const QString &amp;key, const QVariantList &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QVariantList</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a17ae62969de878cce73fd0d354cd2022</anchor>
      <arglist>(const char *key, const QVariantList &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ab3bfe39c0217bfe0d5f991d24ffdd7c5</anchor>
      <arglist>(const QString &amp;key, const QStringList &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a77271a35ad9e7482cad1fb3e455e6ae0</anchor>
      <arglist>(const char *key, const QStringList &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; T &gt;</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aa27d512edf4bd66f6803afbe02f0b2f1</anchor>
      <arglist>(const QString &amp;key, const QList&lt; T &gt; &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; T &gt;</type>
      <name>readEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aed2d5fe01528b5c6f8a05c41e7e512c4</anchor>
      <arglist>(const char *key, const QList&lt; T &gt; &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readEntryUntranslated</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>af10f5f64448189136d6e06c949a73d6e</anchor>
      <arglist>(const QString &amp;pKey, const QString &amp;aDefault=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readEntryUntranslated</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a07461a03ee5a4d184ce0ac52f94f1fd3</anchor>
      <arglist>(const char *key, const QString &amp;aDefault=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readPathEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a34bc0fd083412d23bb7d3759167558db</anchor>
      <arglist>(const QString &amp;pKey, const QString &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readPathEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a627e39f83eddf6cd6001408b644272dc</anchor>
      <arglist>(const char *key, const QString &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>readPathEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a97574e3575df09bfdd00aa3d680ba7c7</anchor>
      <arglist>(const QString &amp;pKey, const QStringList &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>readPathEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aff5c20f59cb4f95a559b7b9d3f4cae54</anchor>
      <arglist>(const char *key, const QStringList &amp;aDefault) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>readXdgListEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ae2efcfb6c772efbf3105135e2f11b111</anchor>
      <arglist>(const QString &amp;pKey, const QStringList &amp;aDefault=QStringList()) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>readXdgListEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a7f52482231779a9f677186ec5686676f</anchor>
      <arglist>(const char *pKey, const QStringList &amp;aDefault=QStringList()) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reparent</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a02d55ee4293463e6f68b2e3a47fabb11</anchor>
      <arglist>(KConfigBase *parent, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>revertToDefault</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a989bce78837c87761cff85f5199e20b4</anchor>
      <arglist>(const QString &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>revertToDefault</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>afe0a8eff3a3d72108b98835b3851cdeb</anchor>
      <arglist>(const char *key)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sync</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ad2383ff8d0bc35fd486103f09a4559aa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a676bc549b9a24252bc2f0b11d9f7a3cc</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a3f19ef2841865e119fd1af983df58ee0</anchor>
      <arglist>(const char *key, const QVariant &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a1f812dfbd10f251ff24e5e1559b7270b</anchor>
      <arglist>(const QString &amp;key, const QString &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a830eae87db2b01e1bfbeaa325977fefc</anchor>
      <arglist>(const char *key, const QString &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a342c4306bf75c494a1bb68bd91f1815b</anchor>
      <arglist>(const QString &amp;key, const QByteArray &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a65b6b05592d420b9dfd7e028456e577c</anchor>
      <arglist>(const char *key, const QByteArray &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a1ab08cd1933d3a1f229ec37b7070e159</anchor>
      <arglist>(const QString &amp;key, const char *value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a43693593a1b08e4c84d2957e0e0d79d0</anchor>
      <arglist>(const char *key, const char *value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a69dc13948c1a345587c49a5e4a75aab4</anchor>
      <arglist>(const char *key, const T &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>adff2eb141a698eea23c00e1a13fb34e6</anchor>
      <arglist>(const QString &amp;key, const T &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a2b935a52d80b2e1af6aa3f26ee0833ef</anchor>
      <arglist>(const QString &amp;key, const QStringList &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a50bd173bc2bddfe4e608a9ae23c9c165</anchor>
      <arglist>(const char *key, const QStringList &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a8aff6ac427c59deed7c9ded932f6ce72</anchor>
      <arglist>(const QString &amp;key, const QVariantList &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>adc94622525de83098e29de67949a22b7</anchor>
      <arglist>(const char *key, const QVariantList &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a886389574ed97254bea945ff4f01b7d1</anchor>
      <arglist>(const QString &amp;key, const QList&lt; T &gt; &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>abaa64585b55344eef5a9e7d99d99ce6d</anchor>
      <arglist>(const char *key, const QList&lt; T &gt; &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePathEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a490dda9ae3bee4b3424a54b292b8f784</anchor>
      <arglist>(const QString &amp;pKey, const QString &amp;path, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePathEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>ae9f84184a61aac87ba89264b259c2245</anchor>
      <arglist>(const char *pKey, const QString &amp;path, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePathEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a2710901ca8835f0461445180e895f8aa</anchor>
      <arglist>(const QString &amp;pKey, const QStringList &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePathEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>aac5282eaf0eccb9e1316e761ce2fe22a</anchor>
      <arglist>(const char *pKey, const QStringList &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeXdgListEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a18f6d63b9aa2628dc80c1f3979a2713b</anchor>
      <arglist>(const QString &amp;pKey, const QStringList &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeXdgListEntry</name>
      <anchorfile>classKConfigGroup.html</anchorfile>
      <anchor>a9fa310b42a924e3afe94e1fe95bb134e</anchor>
      <arglist>(const char *pKey, const QStringList &amp;value, WriteConfigFlags pFlags=Normal)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfigLoader</name>
    <filename>classKConfigLoader.html</filename>
    <base>KConfigSkeleton</base>
    <member kind="function">
      <type></type>
      <name>KConfigLoader</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>a449b897eb8dd3ad5653fdd952ae8d6a2</anchor>
      <arglist>(const QString &amp;configFile, QIODevice *xml, QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigLoader</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>a2d34a1d409df8bdc7f24b61ab16ff4fa</anchor>
      <arglist>(KSharedConfigPtr config, QIODevice *xml, QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigLoader</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>a5404b2a0550c5334524a5dc0d9bff719</anchor>
      <arglist>(const KConfigGroup &amp;config, QIODevice *xml, QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type>KConfigSkeletonItem *</type>
      <name>findItem</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>a5dc14f4320d86cd80924aadd835fc4b7</anchor>
      <arglist>(const QString &amp;group, const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>KConfigSkeletonItem *</type>
      <name>findItemByName</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>a272d736b36d9644d776ca814d6d93e48</anchor>
      <arglist>(const QString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>groupList</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>a73e10c054853b303c3045725c1b57957</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasGroup</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>a77a0ed13d8a9abe6fcb0c84c345a2ea6</anchor>
      <arglist>(const QString &amp;group) const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>addacb65a7489f27e0bf03265d76b3e75</anchor>
      <arglist>(const QString &amp;name) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>usrWriteConfig</name>
      <anchorfile>classKConfigLoader.html</anchorfile>
      <anchor>af383b00e58a7d084c98208b96eb2b42d</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfigSkeleton</name>
    <filename>classKConfigSkeleton.html</filename>
    <base>KCoreConfigSkeleton</base>
    <class kind="class">KConfigSkeleton::ItemColor</class>
    <class kind="class">KConfigSkeleton::ItemFont</class>
    <member kind="function">
      <type></type>
      <name>KConfigSkeleton</name>
      <anchorfile>classKConfigSkeleton.html</anchorfile>
      <anchor>ab65c7147b9804fe0a2f0d8d955a10ee0</anchor>
      <arglist>(const QString &amp;configname=QString(), QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KConfigSkeleton</name>
      <anchorfile>classKConfigSkeleton.html</anchorfile>
      <anchor>a8c177969e36fba19b34f6c90a57e30d1</anchor>
      <arglist>(KSharedConfig::Ptr config, QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type>ItemColor *</type>
      <name>addItemColor</name>
      <anchorfile>classKConfigSkeleton.html</anchorfile>
      <anchor>a208b2d17fdff91aad3367e3e939eba6e</anchor>
      <arglist>(const QString &amp;name, QColor &amp;reference, const QColor &amp;defaultValue=QColor(128, 128, 128), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemFont *</type>
      <name>addItemFont</name>
      <anchorfile>classKConfigSkeleton.html</anchorfile>
      <anchor>afddb809939f6827950ba1c39e992afcb</anchor>
      <arglist>(const QString &amp;name, QFont &amp;reference, const QFont &amp;defaultValue=QFont(), const QString &amp;key=QString())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KConfigSkeletonChangeNotifyingItem</name>
    <filename>classKConfigSkeletonChangeNotifyingItem.html</filename>
  </compound>
  <compound kind="class">
    <name>KConfigSkeletonItem</name>
    <filename>classKConfigSkeletonItem.html</filename>
    <member kind="function">
      <type></type>
      <name>KConfigSkeletonItem</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a0f314bf8fa0ffd16e5af81767485a5ab</anchor>
      <arglist>(const QString &amp;_group, const QString &amp;_key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KConfigSkeletonItem</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a5882c8c1dbe47e7b4629cfc0978523d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>group</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ab63925c645dccb6c2fc0cfe65c9b3808</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isEqual</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a170380c40bb88f3ddcbecb66782c87fa</anchor>
      <arglist>(const QVariant &amp;p) const =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isImmutable</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a178a0b97045176571f6ea4b05119af01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>key</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a78250254d62330596fd2ee5715beb769</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>label</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ac4df657d81061b7399002e14d2e471c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QVariant</type>
      <name>maxValue</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>aca4d21c9de1de61243a037fceb858b69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QVariant</type>
      <name>minValue</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a1ae44c471594090c2622a33e17cdb62b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a3150515876a423c0093b69ad872dffbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QVariant</type>
      <name>property</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ad6d6b6b5f7c9e5d80f2487c5baf41d1d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>readConfig</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ac14daaad22fd956d76b5f5babb7eafc2</anchor>
      <arglist>(KConfig *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>readDefault</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a70701764611bfd8be214940d992f9c71</anchor>
      <arglist>(KConfig *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setDefault</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a80dc5cf41a9f8ec959809ba24edf15b0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGroup</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a785d46f0016478f97e136538aa752c4e</anchor>
      <arglist>(const QString &amp;_group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setKey</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ab851716f7cd4746a2ccc9c6500096731</anchor>
      <arglist>(const QString &amp;_key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLabel</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a88978a68f6346876f51e010794915c78</anchor>
      <arglist>(const QString &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a831906de7dff37e70b8fad1970f8b763</anchor>
      <arglist>(const QString &amp;_name)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setProperty</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ab67a0cc4c3784c7bed0941baab6919ac</anchor>
      <arglist>(const QVariant &amp;p)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToolTip</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a5e477b55316e0c7be090cd2163e23dcf</anchor>
      <arglist>(const QString &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWhatsThis</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ad37174350d64aede5af460fe7eea9916</anchor>
      <arglist>(const QString &amp;w)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>swapDefault</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a6d0b4411a4570aa8dd2fd924b0282267</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>toolTip</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ab0957a5eb9ffa6db7c62217f7896a6dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>whatsThis</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a99d86c3d1359ca0a891722a083bd7d0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writeConfig</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a201f7a629431e5db6aba390277f77f96</anchor>
      <arglist>(KConfig *)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>readImmutability</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a4f909c782b32c77a1d77b1a6f2006a74</anchor>
      <arglist>(const KConfigGroup &amp;group)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>mGroup</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>aa63707a25d261d8403f2e9380c27a3b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>mKey</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>a6ef8aa3edde08d7c1589fb474f777bed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>mName</name>
      <anchorfile>classKConfigSkeletonItem.html</anchorfile>
      <anchor>ad826e6cd034a1f3b6c9137daac0dfa4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KCoreConfigSkeleton</name>
    <filename>classKCoreConfigSkeleton.html</filename>
    <class kind="class">KCoreConfigSkeleton::ItemBool</class>
    <class kind="class">KCoreConfigSkeleton::ItemDateTime</class>
    <class kind="class">KCoreConfigSkeleton::ItemDouble</class>
    <class kind="class">KCoreConfigSkeleton::ItemEnum</class>
    <class kind="class">KCoreConfigSkeleton::ItemInt</class>
    <class kind="class">KCoreConfigSkeleton::ItemIntList</class>
    <class kind="class">KCoreConfigSkeleton::ItemLongLong</class>
    <class kind="class">KCoreConfigSkeleton::ItemPassword</class>
    <class kind="class">KCoreConfigSkeleton::ItemPath</class>
    <class kind="class">KCoreConfigSkeleton::ItemPathList</class>
    <class kind="class">KCoreConfigSkeleton::ItemPoint</class>
    <class kind="class">KCoreConfigSkeleton::ItemProperty</class>
    <class kind="class">KCoreConfigSkeleton::ItemRect</class>
    <class kind="class">KCoreConfigSkeleton::ItemSize</class>
    <class kind="class">KCoreConfigSkeleton::ItemString</class>
    <class kind="class">KCoreConfigSkeleton::ItemStringList</class>
    <class kind="class">KCoreConfigSkeleton::ItemUInt</class>
    <class kind="class">KCoreConfigSkeleton::ItemULongLong</class>
    <class kind="class">KCoreConfigSkeleton::ItemUrl</class>
    <class kind="class">KCoreConfigSkeleton::ItemUrlList</class>
    <member kind="signal">
      <type>void</type>
      <name>configChanged</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a52ee5dd5f7ce864d2c39765c4b0e3380</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>save</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>aad9cf9023be2d670cd0e680684e9cca1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>KCONFIGCORE_DEPRECATED void</type>
      <name>writeConfig</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>aaadbfe6595ac75d554034385d090f91c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KCoreConfigSkeleton</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ac7a99c4982c0548cc15fb4f5cf51cb1b</anchor>
      <arglist>(const QString &amp;configname=QString(), QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KCoreConfigSkeleton</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a4c1d9f45f240de883a4d26944f665c91</anchor>
      <arglist>(KSharedConfig::Ptr config, QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KCoreConfigSkeleton</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a7dd27700e60221128f612dbbd964aff5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a2e110a657b1b30e4fa3aa1fc87877381</anchor>
      <arglist>(KConfigSkeletonItem *, const QString &amp;name=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemBool *</type>
      <name>addItemBool</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ae9fe1fe173052656f531dc32027d21a1</anchor>
      <arglist>(const QString &amp;name, bool &amp;reference, bool defaultValue=false, const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemDateTime *</type>
      <name>addItemDateTime</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a24d8e7fb84cd24465fb15f92d6f49183</anchor>
      <arglist>(const QString &amp;name, QDateTime &amp;reference, const QDateTime &amp;defaultValue=QDateTime(), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemDouble *</type>
      <name>addItemDouble</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a1777091369955d697a936fcb8d297e24</anchor>
      <arglist>(const QString &amp;name, double &amp;reference, double defaultValue=0.0, const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemInt *</type>
      <name>addItemInt</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ae9bcbd60dcd159036b444f44d48cd7a3</anchor>
      <arglist>(const QString &amp;name, qint32 &amp;reference, qint32 defaultValue=0, const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGCORE_DEPRECATED ItemLongLong *</type>
      <name>addItemInt64</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ada0f72551a9d81ac510e9a3ad1e3c4dd</anchor>
      <arglist>(const QString &amp;name, qint64 &amp;reference, qint64 defaultValue=0, const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemIntList *</type>
      <name>addItemIntList</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a33de64d20d64c678204b56e1b19c9949</anchor>
      <arglist>(const QString &amp;name, QList&lt; int &gt; &amp;reference, const QList&lt; int &gt; &amp;defaultValue=QList&lt; int &gt;(), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemLongLong *</type>
      <name>addItemLongLong</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a1aa401ad36662f764ab97eb6644f0407</anchor>
      <arglist>(const QString &amp;name, qint64 &amp;reference, qint64 defaultValue=0, const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemPassword *</type>
      <name>addItemPassword</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a937eeb834d6effa7945e07f4ede192da</anchor>
      <arglist>(const QString &amp;name, QString &amp;reference, const QString &amp;defaultValue=QLatin1String(&quot;&quot;), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemPath *</type>
      <name>addItemPath</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a7e9906441c2d165d1a546a8a8e4db555</anchor>
      <arglist>(const QString &amp;name, QString &amp;reference, const QString &amp;defaultValue=QLatin1String(&quot;&quot;), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemPoint *</type>
      <name>addItemPoint</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ad3bc535b2520b90e3b69c97ada29963e</anchor>
      <arglist>(const QString &amp;name, QPoint &amp;reference, const QPoint &amp;defaultValue=QPoint(), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemProperty *</type>
      <name>addItemProperty</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ab6580aee5511a0f5afebfc8039122c5a</anchor>
      <arglist>(const QString &amp;name, QVariant &amp;reference, const QVariant &amp;defaultValue=QVariant(), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemRect *</type>
      <name>addItemRect</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>af8e71b71cdab5b04e1edb36ebae89e9d</anchor>
      <arglist>(const QString &amp;name, QRect &amp;reference, const QRect &amp;defaultValue=QRect(), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemSize *</type>
      <name>addItemSize</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a121aa6ffb228398b2e9c125dfe2259d3</anchor>
      <arglist>(const QString &amp;name, QSize &amp;reference, const QSize &amp;defaultValue=QSize(), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemString *</type>
      <name>addItemString</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a484927ca5dece70e6bb4e3d7ba73f5ac</anchor>
      <arglist>(const QString &amp;name, QString &amp;reference, const QString &amp;defaultValue=QLatin1String(&quot;&quot;), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemStringList *</type>
      <name>addItemStringList</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a56cb6b140e6f09d4e8fcd2cf6a4ed966</anchor>
      <arglist>(const QString &amp;name, QStringList &amp;reference, const QStringList &amp;defaultValue=QStringList(), const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemUInt *</type>
      <name>addItemUInt</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ae240fb12a96c4dc9bb09b8cb1c84c1ea</anchor>
      <arglist>(const QString &amp;name, quint32 &amp;reference, quint32 defaultValue=0, const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGCORE_DEPRECATED ItemULongLong *</type>
      <name>addItemUInt64</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>abb142fb47953459eedcc3b5041047471</anchor>
      <arglist>(const QString &amp;name, quint64 &amp;reference, quint64 defaultValue=0, const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>ItemULongLong *</type>
      <name>addItemULongLong</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a3235b736a50021e0f5ed235f29cf3a43</anchor>
      <arglist>(const QString &amp;name, quint64 &amp;reference, quint64 defaultValue=0, const QString &amp;key=QString())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearItems</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a91867c87c474049b4ff2b73357c55375</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KConfig *</type>
      <name>config</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a7bc2655c974eec0d32f2dde3895beeb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const KConfig *</type>
      <name>config</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ab9dda951fca382deb46e4d1cba372758</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>currentGroup</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a3c2b4132e9a6eb94685253bef2bb2ac1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>KConfigSkeletonItem *</type>
      <name>findItem</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a63e6d8b4c086b00016cd1bdde8b53d6b</anchor>
      <arglist>(const QString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isImmutable</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a952f53133075c966204cd33a43e99713</anchor>
      <arglist>(const QString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>KConfigSkeletonItem::List</type>
      <name>items</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a8de288bfe43c1d8e510bedd2f8b3e40a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a26867b6cb852187bce178f50f91d5d3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>read</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ada026dc97dc0ad74170b04ec2b0a49a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGCORE_DEPRECATED void</type>
      <name>readConfig</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a94bc582d4eac7748aba47ba40c08bc5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a76e5d4c9f8c8fa791d69463cb3c9b96c</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentGroup</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>af829115639af53e10813193229f77a11</anchor>
      <arglist>(const QString &amp;group)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDefaults</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ae917f12468babb6bf202160a866b6dc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSharedConfig</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a3d0b13aec08f7a44cb49d675bb09917e</anchor>
      <arglist>(KSharedConfig::Ptr pConfig)</arglist>
    </member>
    <member kind="function">
      <type>KSharedConfig::Ptr</type>
      <name>sharedConfig</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a4e9d94f64fedd4f1efd67485dc19aa18</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>useDefaults</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>af5bacb5caefaee5b3cd14a60fc3fe033</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>usrRead</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a6570979330a585622404982a9388a391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual KCONFIGCORE_DEPRECATED void</type>
      <name>usrReadConfig</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>ae159276732b152c91856ab5e4355d338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>usrSave</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a59caaded7618fab92ca1e78430b5f39a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>usrSetDefaults</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a30f35a964000753ecd0e29d602ab4a20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>usrUseDefaults</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a4b433f2ef260af720f7b0408888e98f0</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual KCONFIGCORE_DEPRECATED bool</type>
      <name>usrWriteConfig</name>
      <anchorfile>classKCoreConfigSkeleton.html</anchorfile>
      <anchor>a473dd78d25660808bbb7056deb78a1ed</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KDesktopFile</name>
    <filename>classKDesktopFile.html</filename>
    <base>KConfig</base>
    <member kind="function">
      <type></type>
      <name>KDesktopFile</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a61ad276b710390565354baa2891d820c</anchor>
      <arglist>(QStandardPaths::StandardLocation resourceType, const QString &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KDesktopFile</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>afde4ded96109931c5b3a6512b6912331</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KDesktopFile</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a7725762f352a8a2f34cf5148c6913e24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KConfigGroup</type>
      <name>actionGroup</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a0a4b444afe66b4b42b4591312968f1ec</anchor>
      <arglist>(const QString &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>KDesktopFile *</type>
      <name>copyTo</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a431a46ce974274427ce97867ae61ba2f</anchor>
      <arglist>(const QString &amp;file) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasActionGroup</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>abb5537565f26fe40924e15f8b08932d0</anchor>
      <arglist>(const QString &amp;group) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasApplicationType</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a070da8bce5f333357c21942acdb7bbb3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasDeviceType</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a3938cd1014b15777e12b7e6ce05c7d35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasLinkType</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a9a86253052cb081995e5673db885f9e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>noDisplay</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a56bf03afb28b491af949c8aecc3a11ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>readActions</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>ad5227f360527be865a9a5fce5d06e82a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readComment</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a57e4d5a7a7f03ac2ba3c828638e64326</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readDevice</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>ac95f883091c8195607b572c81aac2a59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readDocPath</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>ab27ff64afee31cf39a8267b8f55dabda</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readGenericName</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a12a2d0fda1e5e5438f2abfdaa8eaa381</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readIcon</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>ab70c254d7a9f662cde2958586d49d357</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>readMimeTypes</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a1ead9392d02c90c0ed60cd5bca84efd2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readName</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a3ce7e0db9f40a08a3ecf8965b956e413</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readPath</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a0830116f99ed083e62075ab9a332bcc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readType</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>ac17fb495bc3c2c14d01ae91a6b271a22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>readUrl</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>ab2cac75fc55171d12f2722512b425fa1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>sortOrder</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a08e5512d3b112c5a8861bcbebbc38912</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tryExec</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>aa06d7040107559f2565e5b4b724bcdf9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isAuthorizedDesktopFile</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>ab9222da1ca239fc3847d31833bc45552</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isDesktopFile</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>a67faa4b905daaef5ad4e76a863cc2652</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>locateLocal</name>
      <anchorfile>classKDesktopFile.html</anchorfile>
      <anchor>aab2e125209675bf946248645f57c4ff8</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KEMailSettings</name>
    <filename>classKEMailSettings.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Extension</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>a293d6b856ecd4d6bcd13cf0e97a1e344</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InServerMBXType</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9ea6b0fbb4a55e425cc79ad23105fed06cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InServerTLS</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9ea3557ae020df67a1d180298bc35818982</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InServerType</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9ea4821bdf09bafdda2728de8984f6c6058</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OutServerCommand</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9ea52cfaee88974b0347886e1340c8b9ee6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OutServerTLS</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9eaf8c879419c6054ef15ec1233a17b5288</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OutServerType</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9eac69f79475289bbd683451ba1dd8e0fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Setting</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OutServerType</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9eac69f79475289bbd683451ba1dd8e0fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OutServerCommand</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9ea52cfaee88974b0347886e1340c8b9ee6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OutServerTLS</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9eaf8c879419c6054ef15ec1233a17b5288</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InServerType</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9ea4821bdf09bafdda2728de8984f6c6058</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InServerMBXType</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9ea6b0fbb4a55e425cc79ad23105fed06cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InServerTLS</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ae12254329b6bedfeb8de5f439f8bcb9ea3557ae020df67a1d180298bc35818982</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KEMailSettings</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>aaec0deff9964f388cccdb1c6194031a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KEMailSettings</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ac14ce7bf4378d7e191e2237f4bdd6dc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGCORE_DEPRECATED QString</type>
      <name>currentProfileName</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>a3362a5a5429275ed26b2b17ec4a28d3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>defaultProfileName</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>a8577e058d405a3a2d9fdd0710c3bd3a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getSetting</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>a4871481fa711fdf339c68dcefe2921db</anchor>
      <arglist>(KEMailSettings::Setting s) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>profiles</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>ab2c941efb85abe7500094332a8d5bb5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefault</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>af30b061c764e3085a473e4950b16431d</anchor>
      <arglist>(const QString &amp;def)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProfile</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>a58b8a0bafc83a6aaf6935fe777a76df4</anchor>
      <arglist>(const QString &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSetting</name>
      <anchorfile>classKEMailSettings.html</anchorfile>
      <anchor>a827d4e15aed11ef52592a8f5397bee7d</anchor>
      <arglist>(KEMailSettings::Setting s, const QString &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>KEntry</name>
    <filename>structKEntry.html</filename>
    <member kind="function">
      <type></type>
      <name>KEntry</name>
      <anchorfile>structKEntry.html</anchorfile>
      <anchor>a4b79ffb8cda65c7567b5826e0e0b0528</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bDeleted</name>
      <anchorfile>structKEntry.html</anchorfile>
      <anchor>accd73af842318df06b1ce2e10229683d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bDirty</name>
      <anchorfile>structKEntry.html</anchorfile>
      <anchor>a8d1936142d224febe2ab1810a9beb4b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bExpand</name>
      <anchorfile>structKEntry.html</anchorfile>
      <anchor>a74ff0d2fe59eb0bd8f8550d2d1b0130e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bGlobal</name>
      <anchorfile>structKEntry.html</anchorfile>
      <anchor>a6cd73aa253368b94a1cc88923f9a6c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bImmutable</name>
      <anchorfile>structKEntry.html</anchorfile>
      <anchor>a1b391d253964a47eb0944bf149658883</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bLocalizedCountry</name>
      <anchorfile>structKEntry.html</anchorfile>
      <anchor>af36d00adf757d6d1efb2f99fcf4752f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bReverted</name>
      <anchorfile>structKEntry.html</anchorfile>
      <anchor>aac8977c00242849dbdec695466dee5ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QByteArray</type>
      <name>mValue</name>
      <anchorfile>structKEntry.html</anchorfile>
      <anchor>acd62263eac6f8f0c51e5397a0c3fe9c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QMap&lt; KEntryKey, KEntry &gt;::ConstIterator</type>
      <name>KEntryMapConstIterator</name>
      <anchorfile>structKEntry.html</anchorfile>
      <anchor>ab7fb5ad53460c90249a7db81f28b24f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QMap&lt; KEntryKey, KEntry &gt;::Iterator</type>
      <name>KEntryMapIterator</name>
      <anchorfile>structKEntry.html</anchorfile>
      <anchor>a5185dae734c5a7597d9e1fb38b8ef3b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>KEntryKey</name>
    <filename>structKEntryKey.html</filename>
    <member kind="function">
      <type></type>
      <name>KEntryKey</name>
      <anchorfile>structKEntryKey.html</anchorfile>
      <anchor>a5f54d6bd4cf0e96a1f69aa3ead83a4e7</anchor>
      <arglist>(const QByteArray &amp;_group=QByteArray(), const QByteArray &amp;_key=QByteArray(), bool isLocalized=false, bool isDefault=false)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bDefault</name>
      <anchorfile>structKEntryKey.html</anchorfile>
      <anchor>a1aa02e66ff1a3c5a9b1f48984f25220b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bLocal</name>
      <anchorfile>structKEntryKey.html</anchorfile>
      <anchor>a457839125794297576e713c160f083ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bRaw</name>
      <anchorfile>structKEntryKey.html</anchorfile>
      <anchor>a2c6ba455b9f5732b939fb4dc1152ff47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QByteArray</type>
      <name>mGroup</name>
      <anchorfile>structKEntryKey.html</anchorfile>
      <anchor>a35b4c91ad97c52306f8b786ca3e049f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QByteArray</type>
      <name>mKey</name>
      <anchorfile>structKEntryKey.html</anchorfile>
      <anchor>a04bd261317889136881da8975861f14d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KEntryMap</name>
    <filename>classKEntryMap.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>setEntry</name>
      <anchorfile>classKEntryMap.html</anchorfile>
      <anchor>abf59c4947de3956a9abf32fc7836025d</anchor>
      <arglist>(const QByteArray &amp;group, const QByteArray &amp;key, const QByteArray &amp;value, EntryOptions options)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KSharedConfig</name>
    <filename>classKSharedConfig.html</filename>
    <base>KConfig</base>
    <member kind="function" static="yes">
      <type>static KSharedConfig::Ptr</type>
      <name>openConfig</name>
      <anchorfile>classKSharedConfig.html</anchorfile>
      <anchor>a328208649f2e3f0ee895c9b11aa82205</anchor>
      <arglist>(const QString &amp;fileName=QString(), OpenFlags mode=FullConfig, QStandardPaths::StandardLocation type=QStandardPaths::GenericConfigLocation)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>KAuthorized</name>
    <filename>namespaceKAuthorized.html</filename>
    <member kind="function">
      <type>KCONFIGCORE_EXPORT bool</type>
      <name>authorize</name>
      <anchorfile>namespaceKAuthorized.html</anchorfile>
      <anchor>a5e242f5ecea86fbdc3151669b1db6db6</anchor>
      <arglist>(const QString &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGCORE_EXPORT bool</type>
      <name>authorizeAction</name>
      <anchorfile>namespaceKAuthorized.html</anchorfile>
      <anchor>af6f59884deb7660aacc9eaead74e89ea</anchor>
      <arglist>(const QString &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGCORE_EXPORT bool</type>
      <name>authorizeControlModule</name>
      <anchorfile>namespaceKAuthorized.html</anchorfile>
      <anchor>a04fa2e938a8af09d733c6b6325db3793</anchor>
      <arglist>(const QString &amp;menuId)</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGCORE_EXPORT QStringList</type>
      <name>authorizeControlModules</name>
      <anchorfile>namespaceKAuthorized.html</anchorfile>
      <anchor>a0d2ea48fee3810f36a941093a3db0ab9</anchor>
      <arglist>(const QStringList &amp;menuIds)</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGCORE_DEPRECATED_EXPORT bool</type>
      <name>authorizeKAction</name>
      <anchorfile>namespaceKAuthorized.html</anchorfile>
      <anchor>a8e2b27b5690d1f132bde791352a18fa9</anchor>
      <arglist>(const QString &amp;action)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>KConfigGui</name>
    <filename>namespaceKConfigGui.html</filename>
    <member kind="function">
      <type>KCONFIGGUI_EXPORT bool</type>
      <name>hasSessionConfig</name>
      <anchorfile>namespaceKConfigGui.html</anchorfile>
      <anchor>a9ff8fa1870409e421d5b10b9da777e3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGGUI_EXPORT KConfig *</type>
      <name>sessionConfig</name>
      <anchorfile>namespaceKConfigGui.html</anchorfile>
      <anchor>a36d66204429764d84f4f7728dfb0805e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGGUI_DEPRECATED_EXPORT QString</type>
      <name>sessionConfigName</name>
      <anchorfile>namespaceKConfigGui.html</anchorfile>
      <anchor>ac89bd9cff47317d2060f8154b7608098</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGGUI_EXPORT void</type>
      <name>setSessionConfig</name>
      <anchorfile>namespaceKConfigGui.html</anchorfile>
      <anchor>a1ff09fc10ecb0e0b8f09aec6ccf8d137</anchor>
      <arglist>(const QString &amp;id, const QString &amp;key)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>KStandardShortcut</name>
    <filename>namespaceKStandardShortcut.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>StandardShortcut</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afc4fa78a9029f199d4a2d2ff198eebe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>addBookmark</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a4abd3c1b86438efcba0de5c0b2d88411</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>back</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ae213b897621bb35a7b768f6c858c5204</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>backwardWord</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a7b47c5dd285dca895af100e7376e6278</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>begin</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a177f361b905d43cabad8e9a163fa9a38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>beginningOfLine</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a0313d75d3be149d5ca73b7ac2633904b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>close</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a1decacdf93c345273761be4042a01efb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>completion</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a8a9f11ff9e1fd4ba233ac3ce68b3bfc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>copy</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a73174761151b61bd14dc97dd0eb66804</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>cut</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a25cff9d943fcd41704f9a1b6df0f5318</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>deleteFile</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a9e682ccab1f730d9eb199102cf2f8f24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>deleteWordBack</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a50c19afbd9d064514f3f0d2613ce083f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>deleteWordForward</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ad4c89d4d38df181e142311d1968e0956</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>end</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a65aa5d5620adc7966005fedfdd5c0f37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>endOfLine</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a7e73605406aa708ac66cd005c77757d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StandardShortcut</type>
      <name>find</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a592495890dd134f3b662ed498a8520a8</anchor>
      <arglist>(const QKeySequence &amp;keySeq)</arglist>
    </member>
    <member kind="function">
      <type>StandardShortcut</type>
      <name>find</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>afa21e76358c853130e45c444bc743b3f</anchor>
      <arglist>(const char *keyName)</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>find</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a569d532b69b15e269421383f8a5c22cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>findNext</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>adbe0d3e77cc61107bc4c268e907cf748</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>findPrev</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a8db6426edbaae98866d01a73d11e6acc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>forward</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a5a4322b32e230c23a3b426f5f3466794</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>forwardWord</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a825e51fb8bb084e9cf8118eb03b51f26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>fullScreen</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a64fb2d2f26a3c807d3cfd864c2683db9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>gotoLine</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>af01cfa3f3bae5f77111c46210e4b5b79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KStandardShortcutInfo *</type>
      <name>guardedStandardShortcutInfo</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a8428d7e49024a33ced05a47699f53336</anchor>
      <arglist>(StandardShortcut id)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QKeySequence &gt;</type>
      <name>hardcodedDefaultShortcut</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>aaffdb4e07a11237546ec6a334350b379</anchor>
      <arglist>(StandardShortcut id)</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>help</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>af8a395206b33392ebc8420a7813e731a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>home</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a6d695ed1b80a77760c6ffd765997623a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialize</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a0aa77fb99899ea190f208d288e47f4e8</anchor>
      <arglist>(StandardShortcut id)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>label</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a63445efadde63d1ca114d0dd74c12a71</anchor>
      <arglist>(StandardShortcut id)</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>moveToTrash</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a95995c90b4bec9d2a20e47ed1b04aaa0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a690a745dc43a235fb7960c486b9dff1c</anchor>
      <arglist>(StandardShortcut id)</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>next</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a4e4bbc9e165bcb3f8f227270c3b535b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>nextCompletion</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a0958546689ddea409a34c2a35ecab428</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>open</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>aacaa096bf5f591dcf542ae925ffd100e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>openNew</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ad988cc98664bd4baa109104563f938b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>paste</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a604e3ba8b1f5b83726c0e797aa6220a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>pasteSelection</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>af125c818da75896f24ea907f006064a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>prevCompletion</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ac1f782ff555cc67a2e94bc3b8b0d3d17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>print</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a3e2d9452b76b785fdac5b96619267b58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>prior</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>addefa7a6b21409ab40aef55503e88250</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>quit</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>aa96f590eb19fb3cf4dda62cf61708757</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>redo</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>af8579f36b8347265a1991d911c19efe7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>reload</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a244301b4e1d4a4b5edca28d3b5d567b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>renameFile</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a7dfa067f878dc8dee95f39cb2d9a346c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>replace</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ae97554c9fc46418ea61e0127e15369e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>rotateDown</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a1997a843fe851f7205b6e162e893f0fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>rotateUp</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>af9ade7102723d380e7deb313addd1b7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>save</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a6bc512d6be9dd9a1d81c781cd4c6430e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveShortcut</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>acd4056ca53c464ece9b63b4332240a95</anchor>
      <arglist>(StandardShortcut id, const QList&lt; QKeySequence &gt; &amp;newShortcut)</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>selectAll</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ae7fd3417aa26ed0ce39b07c7d3672757</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>shortcut</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ac267c82dcd08d8f98c582f4f87c62b53</anchor>
      <arglist>(StandardShortcut id)</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>showMenubar</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ab855eead64cf665c321eec06d8312ec9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>substringCompletion</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a1e02d32a34caa8a95bab577da9e4b734</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>tabNext</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a9262eb609e9ad994d7b913eb715e004e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>tabPrev</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a74a978efe91c66dd7585aca8e925ca42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>undo</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a38bc08f3697ee70dcf981eee6d788305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>up</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a772051af4489a188be79fdc519e050b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>whatsThis</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a0df74edb68a79939607c3952f72f505f</anchor>
      <arglist>(StandardShortcut id)</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>whatsThis</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a54f106c39e96abf0b0d78bf72fe54841</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>zoomIn</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a3bd865ff652af7f66e8e0d4e57292c8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const QList&lt; QKeySequence &gt; &amp;</type>
      <name>zoomOut</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>a4089275f2d0b531c39b071441be48f37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static KStandardShortcutInfo</type>
      <name>g_infoStandardShortcut</name>
      <anchorfile>namespaceKStandardShortcut.html</anchorfile>
      <anchor>ae2216f9e2bd0970df48e2dcda42c5463</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>KWindowConfig</name>
    <filename>namespaceKWindowConfig.html</filename>
    <member kind="function">
      <type>KCONFIGGUI_EXPORT void</type>
      <name>restoreWindowSize</name>
      <anchorfile>namespaceKWindowConfig.html</anchorfile>
      <anchor>ae2f91744d732d35e0575f3faf1812b53</anchor>
      <arglist>(QWindow *window, const KConfigGroup &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>KCONFIGGUI_EXPORT void</type>
      <name>saveWindowSize</name>
      <anchorfile>namespaceKWindowConfig.html</anchorfile>
      <anchor>a25b744b4289045bf7efacfb37cd45573</anchor>
      <arglist>(const QWindow *window, KConfigGroup &amp;config, KConfigGroup::WriteConfigFlags options=KConfigGroup::Normal)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>kconfig_compiler</name>
    <title>The KDE Configuration Compiler</title>
    <filename>kconfig_compiler</filename>
  </compound>
  <compound kind="page">
    <name>options</name>
    <title>KConfig Entry Options</title>
    <filename>options</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>KConfig</title>
    <filename>index</filename>
  </compound>
</tagfile>
