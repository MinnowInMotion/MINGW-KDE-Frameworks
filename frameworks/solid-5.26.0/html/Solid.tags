<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="class">
    <name>Solid::AbstractInhibition</name>
    <filename>classSolid_1_1AbstractInhibition.html</filename>
  </compound>
  <compound kind="class">
    <name>Solid::Battery</name>
    <filename>classSolid_1_1Battery.html</filename>
    <base>Solid::DeviceInterface</base>
    <member kind="enumeration">
      <type></type>
      <name>BatteryType</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a1fcf11b5b40bb857e6233c3ef6fe849a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ChargeState</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>ad734c47beb8dd3f789d7b6249f514bf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Technology</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a51dd2479193b09f2d828761c70e32129</anchor>
      <arglist></arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>capacityChanged</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a2f574bd58688c750b8a1c0a383845107</anchor>
      <arglist>(int value, const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>chargePercentChanged</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>acf7bf64c35c14a4154399bbb7477e034</anchor>
      <arglist>(int value, const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>chargeStateChanged</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>ad30df1b8ad48607f0949946e66ce875e</anchor>
      <arglist>(int newState, const QString &amp;udi=QString())</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>energyChanged</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a03936cace0d62878ecd48929f2db19c0</anchor>
      <arglist>(double energy, const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>energyFullChanged</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a5ba442f6d490c618609c186933dde215</anchor>
      <arglist>(double energy, const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>energyFullDesignChanged</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a3e44bb6c0c829ef4657e5c89c93bfbd7</anchor>
      <arglist>(double energy, const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>energyRateChanged</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a1b31eb7a04eb230ac80e0359a620f0d9</anchor>
      <arglist>(double energyRate, const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>powerSupplyStateChanged</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a970f82f69e08de6d3ef845c50e5f8633</anchor>
      <arglist>(bool newState, const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>presentStateChanged</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a9a469f3d1201992c01d44ac08c0b425b</anchor>
      <arglist>(bool newState, const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>remainingTimeChanged</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>aba8da55a5edc3dd877b3459515139ab6</anchor>
      <arglist>(qlonglong time, const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>temperatureChanged</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a0088cc7b4ae2df31175b666f0841253c</anchor>
      <arglist>(double temperature, const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>timeToEmptyChanged</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a592be8e76df3090502af64e991e5c7da</anchor>
      <arglist>(qlonglong time, const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>timeToFullChanged</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>aa7a02bd344f6c1c44742d4ef7cd3a6f4</anchor>
      <arglist>(qlonglong time, const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>voltageChanged</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>aeb16ec76e0384402ecb353efb8eb47f4</anchor>
      <arglist>(double voltage, const QString &amp;udi)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Battery</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a7fe27e34c8bb4f2c3966ca981fa8f291</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>capacity</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a8e8b317e1226434ae4f7d763b3a07787</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>chargePercent</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a1fe7af3e27d66cbde9aa9309bc9d5c06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Solid::Battery::ChargeState</type>
      <name>chargeState</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a2f80091eade85380ed87c58b47b78898</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>energy</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>af10b6ed11f02f5a010f759159e16a02a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>energyFull</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a818ff51a1d54ef8aa43150c4bc7b5e04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>energyFullDesign</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a8b8966beae74cefc647b0f42b509a1c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>energyRate</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a0e2fdfacc3af083dae24ad0ce78a754a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SOLID_DEPRECATED bool</type>
      <name>isPlugged</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a003ac183478fe9085bbf260ffb7ebd3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPowerSupply</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>acbc64ef56b531e5f04451c24d587e22a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPresent</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a375570ba9bbf8eee77628462d3fc1b7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRecalled</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>ac5ba5c6041e3c456c1e9457851203ccc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRechargeable</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>aa509bb9cf8e7e0a9dab3e678af614703</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>recallUrl</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a144ce643300923e6030830a16ff1e069</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>recallVendor</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a9ed46d8a7b18ee39f570a02befbfda5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qlonglong</type>
      <name>remainingTime</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a7919c0fa0afa35e9c5062670cf653d1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>serial</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a1fcd8f0adfdf43f2217dc10d7d1f07da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Solid::Battery::Technology</type>
      <name>technology</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>aaa9c0d7f84cf8f00b34603d9dff34f8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>temperature</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a4ea09456085eac8feb47f59b29b8a201</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qlonglong</type>
      <name>timeToEmpty</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a4e2438032ef7848f004236dbe31d907e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qlonglong</type>
      <name>timeToFull</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>abc216af6a9254ea2bbd31020eaa96485</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Solid::Battery::BatteryType</type>
      <name>type</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>a1465fe97e027e24038676b21b552aaae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>voltage</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>ae37240153f3eed39c5ef1c0d8869a7ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>deviceInterfaceType</name>
      <anchorfile>classSolid_1_1Battery.html</anchorfile>
      <anchor>adda33848ddc83d988aaab34d7e43f075</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Ifaces::Battery</name>
    <filename>classSolid_1_1Ifaces_1_1Battery.html</filename>
    <base virtualness="virtual">Solid::Ifaces::DeviceInterface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Battery</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>ac32ffd4493e1f9726ac3cc96c1f8af14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>capacity</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a5c7b0b3d25fe316b8453043de1a5d7a4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>chargePercent</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a66e2fb3b8fe12e44859764abece897fd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Solid::Battery::ChargeState</type>
      <name>chargeState</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>af9dd256e3d78ed33e7411736cb51e07e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>energy</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a959af8a04ffe57e5455d507c035e80b2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>energyFull</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a38972f7bcd6eff0ce30133f48c41c2d0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>energyFullDesign</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a3dc2a15098b491e0cdc4be83fa3124e9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>energyRate</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>ab713bde2019f2655142373d2173086d1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isPowerSupply</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>aa6b52a6a811b0b64e2ddcad3782313fe</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isPresent</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>acb72a3c5f152f28605ec4328117e1ed5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isRecalled</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>af0d6aa7575c77cda21ab31cd23a1306c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isRechargeable</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a783d1763c29da6a328a33ef72059bb7a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>recallUrl</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>ab5fa824f8213b755132de7c1133dee99</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>recallVendor</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a30344d826d0b5e78b8eea12e5030b144</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual qlonglong</type>
      <name>remainingTime</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>ad011ce3597426456072dad2c53faec1c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>serial</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a18e0f733184ceb5e62375b0b47e11fca</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Solid::Battery::Technology</type>
      <name>technology</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a17708c7e865d066800e22529aa119625</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>temperature</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>aa82831b99a31b22373104269b455d9dc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual qlonglong</type>
      <name>timeToEmpty</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a9fd3323debdab6be0b9646680a234455</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual qlonglong</type>
      <name>timeToFull</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a6b5f66e222412357b77e0f6fbf7a3562</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Solid::Battery::BatteryType</type>
      <name>type</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a711f8f2f41db9204fc6ffff4419eb6ea</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>voltage</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>aa6056ab7c3a0c5e06329821e062b86a1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>capacityChanged</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a06d98f1f72326cb130d69bde4bf9763e</anchor>
      <arglist>(int value, const QString &amp;udi)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>chargePercentChanged</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a6373596d3e7e15194782d5eec9ab5572</anchor>
      <arglist>(int value, const QString &amp;udi)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>chargeStateChanged</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a52555a5191e3fb6e26c93967671da557</anchor>
      <arglist>(int newState, const QString &amp;udi=QString())=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>energyChanged</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a6ea10adfb3f54296d1c0c594e9f358c5</anchor>
      <arglist>(double energy, const QString &amp;udi)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>energyFullChanged</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a39b342977910e6c8b30a4e85aa8762b6</anchor>
      <arglist>(double energy, const QString &amp;udi)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>energyFullDesignChanged</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a27543e3e757b80fea68f03990c666ad3</anchor>
      <arglist>(double energy, const QString &amp;udi)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>energyRateChanged</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>ad53e4efd61bba64b9b6516d430cb14c1</anchor>
      <arglist>(double energyRate, const QString &amp;udi)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>powerSupplyStateChanged</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a5524f81e69127fe8e8bf3e43b88a881c</anchor>
      <arglist>(bool newState, const QString &amp;udi)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>presentStateChanged</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>af08f3508065faed61df46fe1e52b7ade</anchor>
      <arglist>(bool newState, const QString &amp;udi)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>remainingTimeChanged</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a61ce355ae3d9c52a25b22cdb149cf586</anchor>
      <arglist>(qlonglong time, const QString &amp;udi)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>temperatureChanged</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a55ed977c9be195fde73df297149e9f64</anchor>
      <arglist>(double temperature, const QString &amp;udi)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>timeToEmptyChanged</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>ad55dbdcacbc78061b7c50f13773ee857</anchor>
      <arglist>(qlonglong time, const QString &amp;udi)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>timeToFullChanged</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a20581834856cf3611316f152e220d095</anchor>
      <arglist>(qlonglong time, const QString &amp;udi)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>voltageChanged</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Battery.html</anchorfile>
      <anchor>a2ab85e79f8455c5ef0366e6b6bab6768</anchor>
      <arglist>(double voltage, const QString &amp;udi)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Block</name>
    <filename>classSolid_1_1Block.html</filename>
    <base>Solid::DeviceInterface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Block</name>
      <anchorfile>classSolid_1_1Block.html</anchorfile>
      <anchor>a8f4785d965c1c82ca5885f3f5bad9b19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>device</name>
      <anchorfile>classSolid_1_1Block.html</anchorfile>
      <anchor>a543c2cea3cac1b7d98d10ced2ee688a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>deviceMajor</name>
      <anchorfile>classSolid_1_1Block.html</anchorfile>
      <anchor>ae8142ea433a33a2d09cc2bc87ac699ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>deviceMinor</name>
      <anchorfile>classSolid_1_1Block.html</anchorfile>
      <anchor>a365f3afa7060d27384e97694896a8b08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>deviceInterfaceType</name>
      <anchorfile>classSolid_1_1Block.html</anchorfile>
      <anchor>aa7f9a5ef1f45f19c10143bd3229683e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Ifaces::Block</name>
    <filename>classSolid_1_1Ifaces_1_1Block.html</filename>
    <base virtualness="virtual">Solid::Ifaces::DeviceInterface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Block</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Block.html</anchorfile>
      <anchor>a0cdcf6b84b85643edcfce1fd261aa76a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>device</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Block.html</anchorfile>
      <anchor>a5718d36fc8a166c9fa63df4102e27184</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>deviceMajor</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Block.html</anchorfile>
      <anchor>aea39706399af2f3f00a6068e68d32eff</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>deviceMinor</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Block.html</anchorfile>
      <anchor>a7e9ffebebe1ea9b51726dae0ca7bf6ab</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Camera</name>
    <filename>classSolid_1_1Camera.html</filename>
    <base>Solid::DeviceInterface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Camera</name>
      <anchorfile>classSolid_1_1Camera.html</anchorfile>
      <anchor>a5310b5117f9ed7c73b107ab98d9d01a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>driverHandle</name>
      <anchorfile>classSolid_1_1Camera.html</anchorfile>
      <anchor>a6c2cd264d26ebe614237b9668f316f77</anchor>
      <arglist>(const QString &amp;driver) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>supportedDrivers</name>
      <anchorfile>classSolid_1_1Camera.html</anchorfile>
      <anchor>aa074c69bc7aa02412de68ceec3fc537f</anchor>
      <arglist>(QString protocol=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>supportedProtocols</name>
      <anchorfile>classSolid_1_1Camera.html</anchorfile>
      <anchor>a0ce6e977c09dd970419923f19e2fcc28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>deviceInterfaceType</name>
      <anchorfile>classSolid_1_1Camera.html</anchorfile>
      <anchor>a7d5a8bbb73d5f344adcc0b286f8125d5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Ifaces::Camera</name>
    <filename>classSolid_1_1Ifaces_1_1Camera.html</filename>
    <base virtualness="virtual">Solid::Ifaces::DeviceInterface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Camera</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Camera.html</anchorfile>
      <anchor>a3f9e3d338f1533f9c5bc8c89ca0ccd42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QVariant</type>
      <name>driverHandle</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Camera.html</anchorfile>
      <anchor>a4d8524275f24da1c3fa86817d44b05fe</anchor>
      <arglist>(const QString &amp;driver) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QStringList</type>
      <name>supportedDrivers</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Camera.html</anchorfile>
      <anchor>ac3c8a21356b316afa7e909516767dc32</anchor>
      <arglist>(QString protocol=QString()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QStringList</type>
      <name>supportedProtocols</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Camera.html</anchorfile>
      <anchor>a43e235b61118c026c5144a9b1d9c3b4a</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Device</name>
    <filename>classSolid_1_1Device.html</filename>
    <member kind="function">
      <type></type>
      <name>Device</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>aba97769c79708b5b23c60359b0743c2b</anchor>
      <arglist>(const QString &amp;udi=QString())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Device</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>a82575ea01f3be683fd21d625a941cef0</anchor>
      <arglist>(const Device &amp;device)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Device</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>a782a03b2b1ad1bc3f25b17ea69ea0a1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DevIface *</type>
      <name>as</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>aa81649e145f309cb574017f39c477f51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const DevIface *</type>
      <name>as</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>a6483179fb70645760031d28d198909f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DeviceInterface *</type>
      <name>asDeviceInterface</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>a95c931fd0f2809a770cfa3a5e8061961</anchor>
      <arglist>(const DeviceInterface::Type &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>const DeviceInterface *</type>
      <name>asDeviceInterface</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>ace2d7df826bf73eb620b1033c678fc2e</anchor>
      <arglist>(const DeviceInterface::Type &amp;type) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>description</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>a071ae8f46627eb30b3c78b2f1f4a5f6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>emblems</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>a237456bd26c7c0b19f6881d19fffb792</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>icon</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>a6525c195cdabf01e19a18701622d1318</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>add62a98e2dbd895c209c2fd01f332365</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDeviceInterface</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>a8aad00d76d58251b445facc0967d5281</anchor>
      <arglist>(const DeviceInterface::Type &amp;type) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>aea96740201bc479f938fc761774bc60a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Device &amp;</type>
      <name>operator=</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>a35cc596f4de03351395cb22b1f06d86d</anchor>
      <arglist>(const Device &amp;device)</arglist>
    </member>
    <member kind="function">
      <type>Device</type>
      <name>parent</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>a925def27ebd1491339f2123842a20a2b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>parentUdi</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>a5d0c73b02837f04b61ed938594b36921</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>product</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>aecd2109c660cc012fc47369583bb6e54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>udi</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>a341db42a3ec1e02148e9dd76281a23ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>vendor</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>ac3900500ac15e5df40b7692ede0931a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QList&lt; Device &gt;</type>
      <name>allDevices</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>a73bdcc239e42a68df922423cbc28897d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QList&lt; Device &gt;</type>
      <name>listFromQuery</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>add8a34e47abc9c79aa77c1bc9f54c562</anchor>
      <arglist>(const Predicate &amp;predicate, const QString &amp;parentUdi=QString())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QList&lt; Device &gt;</type>
      <name>listFromQuery</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>aba5277f8de300bbd08fa0f0b1b52d6a6</anchor>
      <arglist>(const QString &amp;predicate, const QString &amp;parentUdi=QString())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QList&lt; Device &gt;</type>
      <name>listFromType</name>
      <anchorfile>classSolid_1_1Device.html</anchorfile>
      <anchor>a04d6081cd0e72aa0f7f6f4ede623cddb</anchor>
      <arglist>(const DeviceInterface::Type &amp;type, const QString &amp;parentUdi=QString())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Ifaces::Device</name>
    <filename>classSolid_1_1Ifaces_1_1Device.html</filename>
    <member kind="function">
      <type></type>
      <name>Device</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Device.html</anchorfile>
      <anchor>a4bf114657a5c26369f0fb1f34e025215</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Device</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Device.html</anchorfile>
      <anchor>a3c7b88bde52493e8ca308870436fb2c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>broadcastActionDone</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Device.html</anchorfile>
      <anchor>a5fcafd2cee883f23919b34ef7dc4fa75</anchor>
      <arglist>(const QString &amp;actionName, int error=Solid::NoError, const QString &amp;errorString=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>broadcastActionRequested</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Device.html</anchorfile>
      <anchor>a3644245ca0b87335cc5b7680755f2bce</anchor>
      <arglist>(const QString &amp;actionName) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QObject *</type>
      <name>createDeviceInterface</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Device.html</anchorfile>
      <anchor>ad471412f986ff6ef81cb1d2d4a02ef3a</anchor>
      <arglist>(const Solid::DeviceInterface::Type &amp;type)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>description</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Device.html</anchorfile>
      <anchor>a40fe0d3272ace347b89b3a8a961c36a4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QStringList</type>
      <name>emblems</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Device.html</anchorfile>
      <anchor>a6bef4d4f56d499fa56a6c7cec93f4cfb</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>icon</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Device.html</anchorfile>
      <anchor>ad76d5750dd8a8e0721bf4bb845c662ff</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QString</type>
      <name>parentUdi</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Device.html</anchorfile>
      <anchor>a7815343f4b35606a88a91f2012f3ec46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>product</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Device.html</anchorfile>
      <anchor>a6cb9034c4b70501f93c9cac29d12385a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>queryDeviceInterface</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Device.html</anchorfile>
      <anchor>a130d6a2f73a633d3dffd098b10d6da13</anchor>
      <arglist>(const Solid::DeviceInterface::Type &amp;type) const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerAction</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Device.html</anchorfile>
      <anchor>a9de5a5e50495d0ddab1924957a942723</anchor>
      <arglist>(const QString &amp;actionName, QObject *dest, const char *requestSlot, const char *doneSlot) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>udi</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Device.html</anchorfile>
      <anchor>ad7dfff557f24a7fd8a09fae946fe9c54</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>vendor</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Device.html</anchorfile>
      <anchor>a7cb7664051ccbced46076f3289c5a77a</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::DeviceInterface</name>
    <filename>classSolid_1_1DeviceInterface.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classSolid_1_1DeviceInterface.html</anchorfile>
      <anchor>a2cdcf915c8dd5f635e7348d541412239</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DeviceInterface</name>
      <anchorfile>classSolid_1_1DeviceInterface.html</anchorfile>
      <anchor>a183eccdda251569716edc2ad8a405e57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSolid_1_1DeviceInterface.html</anchorfile>
      <anchor>a360b56c1802259ff2fb7bb977cdda40b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>stringToType</name>
      <anchorfile>classSolid_1_1DeviceInterface.html</anchorfile>
      <anchor>aaabf2f7173600f93617b038b00a4447a</anchor>
      <arglist>(const QString &amp;type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>typeDescription</name>
      <anchorfile>classSolid_1_1DeviceInterface.html</anchorfile>
      <anchor>af98329b4bbde7728a27841c8707f63a0</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>typeToString</name>
      <anchorfile>classSolid_1_1DeviceInterface.html</anchorfile>
      <anchor>a0df89dcf52405b84f103d52c36d755a5</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DeviceInterface</name>
      <anchorfile>classSolid_1_1DeviceInterface.html</anchorfile>
      <anchor>abf615a9b2c6eb2988b6e3c055bbcc8e9</anchor>
      <arglist>(DeviceInterfacePrivate &amp;dd, QObject *backendObject)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Ifaces::DeviceInterface</name>
    <filename>classSolid_1_1Ifaces_1_1DeviceInterface.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DeviceInterface</name>
      <anchorfile>classSolid_1_1Ifaces_1_1DeviceInterface.html</anchorfile>
      <anchor>a0f5049ddaf4abd13dcd7f34bb5dd092d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Ifaces::DeviceManager</name>
    <filename>classSolid_1_1Ifaces_1_1DeviceManager.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>deviceAdded</name>
      <anchorfile>classSolid_1_1Ifaces_1_1DeviceManager.html</anchorfile>
      <anchor>a45f413228e11cef0559a18ebcc656d31</anchor>
      <arglist>(const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>deviceRemoved</name>
      <anchorfile>classSolid_1_1Ifaces_1_1DeviceManager.html</anchorfile>
      <anchor>a56ad631be34c77855d0e7c1d5af40628</anchor>
      <arglist>(const QString &amp;udi)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DeviceManager</name>
      <anchorfile>classSolid_1_1Ifaces_1_1DeviceManager.html</anchorfile>
      <anchor>a7fac5d0bfa6bc7eabd1fdc24c6a4eb6d</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DeviceManager</name>
      <anchorfile>classSolid_1_1Ifaces_1_1DeviceManager.html</anchorfile>
      <anchor>af348d81ef42391cc640db264ba19ca67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QStringList</type>
      <name>allDevices</name>
      <anchorfile>classSolid_1_1Ifaces_1_1DeviceManager.html</anchorfile>
      <anchor>a12161bd16c91b15a8c7666b1187fa104</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QObject *</type>
      <name>createDevice</name>
      <anchorfile>classSolid_1_1Ifaces_1_1DeviceManager.html</anchorfile>
      <anchor>a58403e5d7c3a6f253c9c001cffd73590</anchor>
      <arglist>(const QString &amp;udi)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QStringList</type>
      <name>devicesFromQuery</name>
      <anchorfile>classSolid_1_1Ifaces_1_1DeviceManager.html</anchorfile>
      <anchor>acc4b84abc82c8acf3348aade1c1d23de</anchor>
      <arglist>(const QString &amp;parentUdi, Solid::DeviceInterface::Type type=Solid::DeviceInterface::Unknown)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QSet&lt; Solid::DeviceInterface::Type &gt;</type>
      <name>supportedInterfaces</name>
      <anchorfile>classSolid_1_1Ifaces_1_1DeviceManager.html</anchorfile>
      <anchor>afc9cf9e8078da1cbeff7745c94864c8e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>udiPrefix</name>
      <anchorfile>classSolid_1_1Ifaces_1_1DeviceManager.html</anchorfile>
      <anchor>a0036dd8c051023f5ace5512993efbf11</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::DeviceNotifier</name>
    <filename>classSolid_1_1DeviceNotifier.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>deviceAdded</name>
      <anchorfile>classSolid_1_1DeviceNotifier.html</anchorfile>
      <anchor>a6eb8e3736acd84a1a46cb43b0eaba5d6</anchor>
      <arglist>(const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>deviceRemoved</name>
      <anchorfile>classSolid_1_1DeviceNotifier.html</anchorfile>
      <anchor>a2c3241940003980f6695879f833c5905</anchor>
      <arglist>(const QString &amp;udi)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Devices</name>
    <filename>classSolid_1_1Devices.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>countChanged</name>
      <anchorfile>classSolid_1_1Devices.html</anchorfile>
      <anchor>a49316c868361d66b6a299684f108e308</anchor>
      <arglist>(int count) const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>deviceAdded</name>
      <anchorfile>classSolid_1_1Devices.html</anchorfile>
      <anchor>a76a34a0462b5e806be999b8650828d29</anchor>
      <arglist>(const QString &amp;udi) const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>deviceRemoved</name>
      <anchorfile>classSolid_1_1Devices.html</anchorfile>
      <anchor>aa98a0f745433c9ebdb4af93f7f22629d</anchor>
      <arglist>(const QString &amp;udi) const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>devicesChanged</name>
      <anchorfile>classSolid_1_1Devices.html</anchorfile>
      <anchor>a9700c0889d484258187d0d65a4a839a7</anchor>
      <arglist>(const QStringList &amp;devices) const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>emptyChanged</name>
      <anchorfile>classSolid_1_1Devices.html</anchorfile>
      <anchor>a46057634207b0dd53f3904d3db2763d0</anchor>
      <arglist>(bool empty) const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>queryChanged</name>
      <anchorfile>classSolid_1_1Devices.html</anchorfile>
      <anchor>af32de68fa0787808a272e3577e05ff8e</anchor>
      <arglist>(const QString &amp;query) const</arglist>
    </member>
    <member kind="slot">
      <type>QObject *</type>
      <name>device</name>
      <anchorfile>classSolid_1_1Devices.html</anchorfile>
      <anchor>ac5025a4c85eb3ccf2d3e60c1c46b531f</anchor>
      <arglist>(const QString &amp;udi, const QString &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classSolid_1_1Devices.html</anchorfile>
      <anchor>aac701a0b60e2fc07e52d873a70b8d7bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>devices</name>
      <anchorfile>classSolid_1_1Devices.html</anchorfile>
      <anchor>a6ed5509ba2c0e1f207191add888d6961</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classSolid_1_1Devices.html</anchorfile>
      <anchor>a4e4f89e16ccbeb050f06ac413e2377b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>query</name>
      <anchorfile>classSolid_1_1Devices.html</anchorfile>
      <anchor>ad64bcb2d2d9b5ca57fcc094232e78769</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuery</name>
      <anchorfile>classSolid_1_1Devices.html</anchorfile>
      <anchor>ae598bd6ffca39ae9c850bb10e732b890</anchor>
      <arglist>(const QString &amp;query)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Backends::Fake::FakeManager</name>
    <filename>classSolid_1_1Backends_1_1Fake_1_1FakeManager.html</filename>
    <base>Solid::Ifaces::DeviceManager</base>
    <member kind="function">
      <type>QStringList</type>
      <name>allDevices</name>
      <anchorfile>classSolid_1_1Backends_1_1Fake_1_1FakeManager.html</anchorfile>
      <anchor>a7e21d04962dbd98c2830df971c6e1a65</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>QObject *</type>
      <name>createDevice</name>
      <anchorfile>classSolid_1_1Backends_1_1Fake_1_1FakeManager.html</anchorfile>
      <anchor>a449152043fac42feaa8af9cf59689c73</anchor>
      <arglist>(const QString &amp;udi) override</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>devicesFromQuery</name>
      <anchorfile>classSolid_1_1Backends_1_1Fake_1_1FakeManager.html</anchorfile>
      <anchor>a0a5bd3c50edc605196182288c54b3432</anchor>
      <arglist>(const QString &amp;parentUdi, Solid::DeviceInterface::Type type) override</arglist>
    </member>
    <member kind="function">
      <type>QSet&lt; Solid::DeviceInterface::Type &gt;</type>
      <name>supportedInterfaces</name>
      <anchorfile>classSolid_1_1Backends_1_1Fake_1_1FakeManager.html</anchorfile>
      <anchor>abad61aac2a4e08a10c9a7c6c299f2da0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>udiPrefix</name>
      <anchorfile>classSolid_1_1Backends_1_1Fake_1_1FakeManager.html</anchorfile>
      <anchor>ab81af91ba31f3b9fcff4a08ccf7bda75</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::GenericInterface</name>
    <filename>classSolid_1_1GenericInterface.html</filename>
    <base>Solid::DeviceInterface</base>
    <member kind="enumeration">
      <type></type>
      <name>PropertyChange</name>
      <anchorfile>classSolid_1_1GenericInterface.html</anchorfile>
      <anchor>ae132db41bc661dfff3455f9e800bbc54</anchor>
      <arglist></arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>conditionRaised</name>
      <anchorfile>classSolid_1_1GenericInterface.html</anchorfile>
      <anchor>a13151c07c61b8339309c0e1bffc98414</anchor>
      <arglist>(const QString &amp;condition, const QString &amp;reason)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>propertyChanged</name>
      <anchorfile>classSolid_1_1GenericInterface.html</anchorfile>
      <anchor>ad8276ad16ed7a378dd9c799fd4dbd518</anchor>
      <arglist>(const QMap&lt; QString, int &gt; &amp;changes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GenericInterface</name>
      <anchorfile>classSolid_1_1GenericInterface.html</anchorfile>
      <anchor>ac9de633a2e343dfed4fec718f3c9e769</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QMap&lt; QString, QVariant &gt;</type>
      <name>allProperties</name>
      <anchorfile>classSolid_1_1GenericInterface.html</anchorfile>
      <anchor>ad4f5caa99d1239d03b9a67da973f9f66</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>property</name>
      <anchorfile>classSolid_1_1GenericInterface.html</anchorfile>
      <anchor>a821399a07434edfed0fa1c59872adf46</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>propertyExists</name>
      <anchorfile>classSolid_1_1GenericInterface.html</anchorfile>
      <anchor>a8ed48a4d7de4daf011a93ab1a3499420</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>deviceInterfaceType</name>
      <anchorfile>classSolid_1_1GenericInterface.html</anchorfile>
      <anchor>a4dde0eabea50febaafcf043b63267337</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Ifaces::GenericInterface</name>
    <filename>classSolid_1_1Ifaces_1_1GenericInterface.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GenericInterface</name>
      <anchorfile>classSolid_1_1Ifaces_1_1GenericInterface.html</anchorfile>
      <anchor>af2ecc2b864bf95dc5ae65121f0efe0e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QMap&lt; QString, QVariant &gt;</type>
      <name>allProperties</name>
      <anchorfile>classSolid_1_1Ifaces_1_1GenericInterface.html</anchorfile>
      <anchor>a960c00385baf9c0a70eff2738c8b11b3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QVariant</type>
      <name>property</name>
      <anchorfile>classSolid_1_1Ifaces_1_1GenericInterface.html</anchorfile>
      <anchor>a0ae20721eb6c154f5099faa7dcdfd5da</anchor>
      <arglist>(const QString &amp;key) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>propertyExists</name>
      <anchorfile>classSolid_1_1Ifaces_1_1GenericInterface.html</anchorfile>
      <anchor>aca257532268916251733fe8930005c0d</anchor>
      <arglist>(const QString &amp;key) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>conditionRaised</name>
      <anchorfile>classSolid_1_1Ifaces_1_1GenericInterface.html</anchorfile>
      <anchor>a2b396fd5db14f8845122d5553c9440c1</anchor>
      <arglist>(const QString &amp;condition, const QString &amp;reason)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>propertyChanged</name>
      <anchorfile>classSolid_1_1Ifaces_1_1GenericInterface.html</anchorfile>
      <anchor>a17e94fd5957a39e5a7d0d50adca42cfb</anchor>
      <arglist>(const QMap&lt; QString, int &gt; &amp;changes)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Inhibition</name>
    <filename>classSolid_1_1Inhibition.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>start</name>
      <anchorfile>classSolid_1_1Inhibition.html</anchorfile>
      <anchor>aa261594d32df50b6f2ade9f0e1d3a679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classSolid_1_1Inhibition.html</anchorfile>
      <anchor>a848ba540e4aaf6b0fb43b32fda3791f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Inhibition</name>
      <anchorfile>classSolid_1_1Inhibition.html</anchorfile>
      <anchor>a212d6ca45c0ebcd5abc5b43f904c7a42</anchor>
      <arglist>(AbstractInhibition *backend, QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>state</name>
      <anchorfile>classSolid_1_1Inhibition.html</anchorfile>
      <anchor>a90728e4c8d5dd0a23ffeda292e87b7c0</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Job</name>
    <filename>classSolid_1_1Job.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Error</name>
      <anchorfile>classSolid_1_1Job.html</anchorfile>
      <anchor>a8ce86f86a6fe0b359f423d8e365e2232</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoError</name>
      <anchorfile>classSolid_1_1Job.html</anchorfile>
      <anchor>a8ce86f86a6fe0b359f423d8e365e2232a443445fc1bedb6e986734e8eff16b816</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UserDefinedError</name>
      <anchorfile>classSolid_1_1Job.html</anchorfile>
      <anchor>a8ce86f86a6fe0b359f423d8e365e2232a38fe1f2bb514ebbbef4ba7c8dc3721f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoError</name>
      <anchorfile>classSolid_1_1Job.html</anchorfile>
      <anchor>a8ce86f86a6fe0b359f423d8e365e2232a443445fc1bedb6e986734e8eff16b816</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UserDefinedError</name>
      <anchorfile>classSolid_1_1Job.html</anchorfile>
      <anchor>a8ce86f86a6fe0b359f423d8e365e2232a38fe1f2bb514ebbbef4ba7c8dc3721f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>start</name>
      <anchorfile>classSolid_1_1Job.html</anchorfile>
      <anchor>a1e1752f8e61d0c6ae3eb2ee82f58a3d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>error</name>
      <anchorfile>classSolid_1_1Job.html</anchorfile>
      <anchor>a1d1c8f4eb319420ed24c499bbecbc67b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>errorText</name>
      <anchorfile>classSolid_1_1Job.html</anchorfile>
      <anchor>ace05fb8efb4946520499b0de4008c857</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exec</name>
      <anchorfile>classSolid_1_1Job.html</anchorfile>
      <anchor>ac28348897ed4f4ece3d2fd60ac620f26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>emitResult</name>
      <anchorfile>classSolid_1_1Job.html</anchorfile>
      <anchor>a2e0d3c5a52308ac85d197194b0c901b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setError</name>
      <anchorfile>classSolid_1_1Job.html</anchorfile>
      <anchor>ab726717935e9e09c36142f083e6140f7</anchor>
      <arglist>(int errorCode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setErrorText</name>
      <anchorfile>classSolid_1_1Job.html</anchorfile>
      <anchor>aa2fbdf7aaaac34d40100b5b10fdb49fd</anchor>
      <arglist>(const QString &amp;errorText)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Ifaces::NetworkShare</name>
    <filename>classSolid_1_1Ifaces_1_1NetworkShare.html</filename>
    <base virtualness="virtual">Solid::Ifaces::DeviceInterface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NetworkShare</name>
      <anchorfile>classSolid_1_1Ifaces_1_1NetworkShare.html</anchorfile>
      <anchor>a89f0e35bf93df88f0d4ad0ec8404a5e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Solid::NetworkShare::ShareType</type>
      <name>type</name>
      <anchorfile>classSolid_1_1Ifaces_1_1NetworkShare.html</anchorfile>
      <anchor>af4f0173aa7ecae137405c6faa102a082</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QUrl</type>
      <name>url</name>
      <anchorfile>classSolid_1_1Ifaces_1_1NetworkShare.html</anchorfile>
      <anchor>ab4f81f46611bf5fd373fc68e43981c23</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::NetworkShare</name>
    <filename>classSolid_1_1NetworkShare.html</filename>
    <base>Solid::DeviceInterface</base>
    <member kind="enumeration">
      <type></type>
      <name>ShareType</name>
      <anchorfile>classSolid_1_1NetworkShare.html</anchorfile>
      <anchor>a664e0ec3c787be3ea6760c187d2ed65a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NetworkShare</name>
      <anchorfile>classSolid_1_1NetworkShare.html</anchorfile>
      <anchor>a8bc8da88ac5a260d5950c2dd3afb627c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ShareType</type>
      <name>type</name>
      <anchorfile>classSolid_1_1NetworkShare.html</anchorfile>
      <anchor>a6f0faf1b3097f8df96b569bfa8c5ad79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QUrl</type>
      <name>url</name>
      <anchorfile>classSolid_1_1NetworkShare.html</anchorfile>
      <anchor>a23cb48bb04cad0e7fd2d9e8d371e9b77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>deviceInterfaceType</name>
      <anchorfile>classSolid_1_1NetworkShare.html</anchorfile>
      <anchor>a5dfec660d98f86aabeea2347345221aa</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::OpticalDisc</name>
    <filename>classSolid_1_1OpticalDisc.html</filename>
    <base>Solid::StorageVolume</base>
    <member kind="enumeration">
      <type></type>
      <name>ContentType</name>
      <anchorfile>classSolid_1_1OpticalDisc.html</anchorfile>
      <anchor>ae00eadba9efec8b80b6ed11d4a2da0ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DiscType</name>
      <anchorfile>classSolid_1_1OpticalDisc.html</anchorfile>
      <anchor>a2801fe1a2fa7c99a02f49240bc8d5bac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OpticalDisc</name>
      <anchorfile>classSolid_1_1OpticalDisc.html</anchorfile>
      <anchor>a3c78d36fbf0146522eabb8075ec9a585</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ContentTypes</type>
      <name>availableContent</name>
      <anchorfile>classSolid_1_1OpticalDisc.html</anchorfile>
      <anchor>a27cbe93b1b924187925727d458b16c96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qulonglong</type>
      <name>capacity</name>
      <anchorfile>classSolid_1_1OpticalDisc.html</anchorfile>
      <anchor>a4035f8c6245dd587afa0343c43223afd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DiscType</type>
      <name>discType</name>
      <anchorfile>classSolid_1_1OpticalDisc.html</anchorfile>
      <anchor>aa2a9e18080f5d4c86efaf7c00e31c6dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAppendable</name>
      <anchorfile>classSolid_1_1OpticalDisc.html</anchorfile>
      <anchor>a0d040d9b677363dd2237a4c00dd1726e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBlank</name>
      <anchorfile>classSolid_1_1OpticalDisc.html</anchorfile>
      <anchor>a7da2a601c43ca98ee9bf4d41634f1bbc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRewritable</name>
      <anchorfile>classSolid_1_1OpticalDisc.html</anchorfile>
      <anchor>a7ec7faac1769373737517bcc2623e0d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>deviceInterfaceType</name>
      <anchorfile>classSolid_1_1OpticalDisc.html</anchorfile>
      <anchor>a94119ccc302c04e2a098ee6b38bf9a51</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Ifaces::OpticalDisc</name>
    <filename>classSolid_1_1Ifaces_1_1OpticalDisc.html</filename>
    <base virtualness="virtual">Solid::Ifaces::StorageVolume</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OpticalDisc</name>
      <anchorfile>classSolid_1_1Ifaces_1_1OpticalDisc.html</anchorfile>
      <anchor>ab5cbcc54ef95e04105a035807db0b00f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Solid::OpticalDisc::ContentTypes</type>
      <name>availableContent</name>
      <anchorfile>classSolid_1_1Ifaces_1_1OpticalDisc.html</anchorfile>
      <anchor>a51b28a172b8f4745ecb14a8b6b26207f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual qulonglong</type>
      <name>capacity</name>
      <anchorfile>classSolid_1_1Ifaces_1_1OpticalDisc.html</anchorfile>
      <anchor>aaf2e714aec1a9f716dfe5e6f1b85cf81</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Solid::OpticalDisc::DiscType</type>
      <name>discType</name>
      <anchorfile>classSolid_1_1Ifaces_1_1OpticalDisc.html</anchorfile>
      <anchor>aa4bad9b0a82310c1feb037db8e28e71b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isAppendable</name>
      <anchorfile>classSolid_1_1Ifaces_1_1OpticalDisc.html</anchorfile>
      <anchor>ab7424e5143d3be83bd967677cbc5ba16</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isBlank</name>
      <anchorfile>classSolid_1_1Ifaces_1_1OpticalDisc.html</anchorfile>
      <anchor>a1380ba07738bda1a02c589103255f428</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isRewritable</name>
      <anchorfile>classSolid_1_1Ifaces_1_1OpticalDisc.html</anchorfile>
      <anchor>a3c3f5a8524150011be92150d2423ea17</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Ifaces::OpticalDrive</name>
    <filename>classSolid_1_1Ifaces_1_1OpticalDrive.html</filename>
    <base virtualness="virtual">Solid::Ifaces::StorageDrive</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OpticalDrive</name>
      <anchorfile>classSolid_1_1Ifaces_1_1OpticalDrive.html</anchorfile>
      <anchor>a87d88b414c8e0ffbb8ddbeb631a7e38c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>eject</name>
      <anchorfile>classSolid_1_1Ifaces_1_1OpticalDrive.html</anchorfile>
      <anchor>acc138d21480f9f11fd1849c566d7ca9b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>readSpeed</name>
      <anchorfile>classSolid_1_1Ifaces_1_1OpticalDrive.html</anchorfile>
      <anchor>a7f4df8d2cca8d5be03e709bc9cbb191c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Solid::OpticalDrive::MediumTypes</type>
      <name>supportedMedia</name>
      <anchorfile>classSolid_1_1Ifaces_1_1OpticalDrive.html</anchorfile>
      <anchor>a291fd165a77275fb238b23930ff56bf0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>writeSpeed</name>
      <anchorfile>classSolid_1_1Ifaces_1_1OpticalDrive.html</anchorfile>
      <anchor>a64350faab2fe2245dc27fc4f9c0ae30a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QList&lt; int &gt;</type>
      <name>writeSpeeds</name>
      <anchorfile>classSolid_1_1Ifaces_1_1OpticalDrive.html</anchorfile>
      <anchor>a9571b5d8dfb62ec7a290bbbae0024f13</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>ejectPressed</name>
      <anchorfile>classSolid_1_1Ifaces_1_1OpticalDrive.html</anchorfile>
      <anchor>a94d4fa7d0f85a4b999fca385bdd12915</anchor>
      <arglist>(const QString &amp;udi)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::OpticalDrive</name>
    <filename>classSolid_1_1OpticalDrive.html</filename>
    <base>Solid::StorageDrive</base>
    <member kind="enumeration">
      <type></type>
      <name>MediumType</name>
      <anchorfile>classSolid_1_1OpticalDrive.html</anchorfile>
      <anchor>a7ea3e1c2ad7c0ca44ed36208c742defa</anchor>
      <arglist></arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ejectDone</name>
      <anchorfile>classSolid_1_1OpticalDrive.html</anchorfile>
      <anchor>a70e4412161cab5570234e3b7af6b2e1a</anchor>
      <arglist>(Solid::ErrorType error, QVariant errorData, const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ejectPressed</name>
      <anchorfile>classSolid_1_1OpticalDrive.html</anchorfile>
      <anchor>ad976b76f19fe3dd86c7903beb899bce8</anchor>
      <arglist>(const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ejectRequested</name>
      <anchorfile>classSolid_1_1OpticalDrive.html</anchorfile>
      <anchor>ab27c1d24c85b3a226742640227ce8fab</anchor>
      <arglist>(const QString &amp;udi)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OpticalDrive</name>
      <anchorfile>classSolid_1_1OpticalDrive.html</anchorfile>
      <anchor>a263915c60efc92ebe8a46a9fc8c0e2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eject</name>
      <anchorfile>classSolid_1_1OpticalDrive.html</anchorfile>
      <anchor>a3309563f914c143754f048323b425c29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>readSpeed</name>
      <anchorfile>classSolid_1_1OpticalDrive.html</anchorfile>
      <anchor>a79fc72bffe11399db6492015c7dda74b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MediumTypes</type>
      <name>supportedMedia</name>
      <anchorfile>classSolid_1_1OpticalDrive.html</anchorfile>
      <anchor>aef3cc855397fe61905695afcdc5a374f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>writeSpeed</name>
      <anchorfile>classSolid_1_1OpticalDrive.html</anchorfile>
      <anchor>aa4d1ed7c3428658b68799023839463ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; int &gt;</type>
      <name>writeSpeeds</name>
      <anchorfile>classSolid_1_1OpticalDrive.html</anchorfile>
      <anchor>a3175ce5f31c053da69ddc4ae14fbdeb4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>deviceInterfaceType</name>
      <anchorfile>classSolid_1_1OpticalDrive.html</anchorfile>
      <anchor>a5c3c973adff1f69b373e6cf44b3ad863</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Ifaces::PortableMediaPlayer</name>
    <filename>classSolid_1_1Ifaces_1_1PortableMediaPlayer.html</filename>
    <base virtualness="virtual">Solid::Ifaces::DeviceInterface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PortableMediaPlayer</name>
      <anchorfile>classSolid_1_1Ifaces_1_1PortableMediaPlayer.html</anchorfile>
      <anchor>a13baf125e63d24685f7c166f135d2a85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QVariant</type>
      <name>driverHandle</name>
      <anchorfile>classSolid_1_1Ifaces_1_1PortableMediaPlayer.html</anchorfile>
      <anchor>ac7833bc860f815adfd5cb7ab744f21da</anchor>
      <arglist>(const QString &amp;driver) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QStringList</type>
      <name>supportedDrivers</name>
      <anchorfile>classSolid_1_1Ifaces_1_1PortableMediaPlayer.html</anchorfile>
      <anchor>a60ca4dbced3de52021c82be0c63b65d3</anchor>
      <arglist>(QString protocol=QString()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QStringList</type>
      <name>supportedProtocols</name>
      <anchorfile>classSolid_1_1Ifaces_1_1PortableMediaPlayer.html</anchorfile>
      <anchor>afa4b5df2f7710259202dfb5ceeeb40e8</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::PortableMediaPlayer</name>
    <filename>classSolid_1_1PortableMediaPlayer.html</filename>
    <base>Solid::DeviceInterface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PortableMediaPlayer</name>
      <anchorfile>classSolid_1_1PortableMediaPlayer.html</anchorfile>
      <anchor>a501f702d7c3a29f3bafb563f3c4e3508</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>driverHandle</name>
      <anchorfile>classSolid_1_1PortableMediaPlayer.html</anchorfile>
      <anchor>a6e9bd1d4d0409c1279b6562cf79c5977</anchor>
      <arglist>(const QString &amp;driver) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>supportedDrivers</name>
      <anchorfile>classSolid_1_1PortableMediaPlayer.html</anchorfile>
      <anchor>a52699919a3202edc37dad9c3ae02165b</anchor>
      <arglist>(QString protocol=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>supportedProtocols</name>
      <anchorfile>classSolid_1_1PortableMediaPlayer.html</anchorfile>
      <anchor>a44b48aa6ffc65bc100cdaf30e02a46a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>deviceInterfaceType</name>
      <anchorfile>classSolid_1_1PortableMediaPlayer.html</anchorfile>
      <anchor>a265e91c24a8857d7e7ee2d98c7deca9b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Predicate</name>
    <filename>classSolid_1_1Predicate.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ComparisonOperator</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>a88e5bbd97d7528a897b6a60683c36c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>aad2fd2f39c890338aa2dc1388197cef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Predicate</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>a3386a480760c9224c969120828a637ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Predicate</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>a8f3c2eae645d0f049429e9992b2842a2</anchor>
      <arglist>(const Predicate &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Predicate</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>aef75762f51dda658bd419381a960cf10</anchor>
      <arglist>(const DeviceInterface::Type &amp;ifaceType, const QString &amp;property, const QVariant &amp;value, ComparisonOperator compOperator=Equals)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Predicate</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>abaa292596786f2e5c97d31a03f195110</anchor>
      <arglist>(const QString &amp;ifaceName, const QString &amp;property, const QVariant &amp;value, ComparisonOperator compOperator=Equals)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Predicate</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>ac7c4f2a5a2a354e8173d14138ea691dd</anchor>
      <arglist>(const DeviceInterface::Type &amp;ifaceType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Predicate</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>af430631cb156bb2d7a5868efa1f06286</anchor>
      <arglist>(const QString &amp;ifaceName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Predicate</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>adbd08003638121a50abad6c42b8010c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ComparisonOperator</type>
      <name>comparisonOperator</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>a17f3055ffd6f13b932b3da60d53b9d33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Predicate</type>
      <name>firstOperand</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>aa8140022607420fe2d077478f60b5f22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DeviceInterface::Type</type>
      <name>interfaceType</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>aa9a910a322c252a63ed5c748b9e22560</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>a667fab3a97dd7bd5cc979b552d639ad1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matches</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>a057768fa96300f04ae5290fe0133da7a</anchor>
      <arglist>(const Device &amp;device) const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>matchingValue</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>a94e7259c5216621cdcae9a19dd4d5f20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Predicate</type>
      <name>operator&amp;</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>ae867d0ff2074bd2f930a53db78b6088d</anchor>
      <arglist>(const Predicate &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Predicate &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>a3261213a9cf9e3fc50bf9752601bc842</anchor>
      <arglist>(const Predicate &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Predicate &amp;</type>
      <name>operator=</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>ab583522bf29ac3cb941bdaa526002add</anchor>
      <arglist>(const Predicate &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Predicate</type>
      <name>operator|</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>a3f9c9dbdbccb7f950f9eae41f7561e10</anchor>
      <arglist>(const Predicate &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Predicate &amp;</type>
      <name>operator|=</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>adba2f7f07a086de23be75d9ef83de6a0</anchor>
      <arglist>(const Predicate &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>propertyName</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>a7152967ffcb44a1171d320d8bf2aee24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Predicate</type>
      <name>secondOperand</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>a6d302ab6223876863a1aba3a5cbb3ed7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>toString</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>a45c0446531064ad19b7d4a6d0ca7043f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>af68cc8c81f7dd57698367e4ab338786d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSet&lt; DeviceInterface::Type &gt;</type>
      <name>usedTypes</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>ae9cce9a04129893d4433f3adc4eac1fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Predicate</type>
      <name>fromString</name>
      <anchorfile>classSolid_1_1Predicate.html</anchorfile>
      <anchor>aea54fd739b594a077314cf2b8eb25cb6</anchor>
      <arglist>(const QString &amp;predicate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Ifaces::Processor</name>
    <filename>classSolid_1_1Ifaces_1_1Processor.html</filename>
    <base virtualness="virtual">Solid::Ifaces::DeviceInterface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Processor</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Processor.html</anchorfile>
      <anchor>a61c8cdbdcb0784e15ae2068c112c0f96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>canChangeFrequency</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Processor.html</anchorfile>
      <anchor>ace1b6d51f07004fd87e37e66c5bf66ef</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Solid::Processor::InstructionSets</type>
      <name>instructionSets</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Processor.html</anchorfile>
      <anchor>af4c21a1fec0ff69e23283f45cd3d3fd6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>maxSpeed</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Processor.html</anchorfile>
      <anchor>a6be89ffd9dcb56b586799ecaa1c64e75</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>number</name>
      <anchorfile>classSolid_1_1Ifaces_1_1Processor.html</anchorfile>
      <anchor>afdbcbc45e2ade2283eff14bbab07a8bf</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Processor</name>
    <filename>classSolid_1_1Processor.html</filename>
    <base>Solid::DeviceInterface</base>
    <member kind="enumeration">
      <type></type>
      <name>InstructionSet</name>
      <anchorfile>classSolid_1_1Processor.html</anchorfile>
      <anchor>a4fb6ace7db56d9ec92f8ff69af957235</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Processor</name>
      <anchorfile>classSolid_1_1Processor.html</anchorfile>
      <anchor>a2f22889c57cd2590ea4537f06b152135</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canChangeFrequency</name>
      <anchorfile>classSolid_1_1Processor.html</anchorfile>
      <anchor>aee2d5d4cc8d76733beea70112ab3bb10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>InstructionSets</type>
      <name>instructionSets</name>
      <anchorfile>classSolid_1_1Processor.html</anchorfile>
      <anchor>a792cc9d26b72580cbcd5f4f6dc82695e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxSpeed</name>
      <anchorfile>classSolid_1_1Processor.html</anchorfile>
      <anchor>a44f7ee36d699ad1a9529eccfffbbf4d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>number</name>
      <anchorfile>classSolid_1_1Processor.html</anchorfile>
      <anchor>a085d23925ed86532ca0e9231fd7de551</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>deviceInterfaceType</name>
      <anchorfile>classSolid_1_1Processor.html</anchorfile>
      <anchor>af7374d8369c37469a64966ed315a3f1f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::RequestStateJob</name>
    <filename>classSolid_1_1RequestStateJob.html</filename>
    <base>Solid::Job</base>
    <member kind="signal">
      <type>void</type>
      <name>result</name>
      <anchorfile>classSolid_1_1RequestStateJob.html</anchorfile>
      <anchor>a8668c7621f4e1e4bff2ca8f5a0a1c25d</anchor>
      <arglist>(Solid::Job *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::StatesJob</name>
    <filename>classSolid_1_1StatesJob.html</filename>
    <base>Solid::Job</base>
    <member kind="signal">
      <type>void</type>
      <name>result</name>
      <anchorfile>classSolid_1_1StatesJob.html</anchorfile>
      <anchor>a807c779f9e6c70a407a7543824a3f597</anchor>
      <arglist>(Solid::Job *job)</arglist>
    </member>
    <member kind="function">
      <type>Power::InhibitionTypes</type>
      <name>states</name>
      <anchorfile>classSolid_1_1StatesJob.html</anchorfile>
      <anchor>a568d40bb4e27bfd5f2366cc348a4f749</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::StorageAccess</name>
    <filename>classSolid_1_1StorageAccess.html</filename>
    <base>Solid::DeviceInterface</base>
    <member kind="signal">
      <type>void</type>
      <name>accessibilityChanged</name>
      <anchorfile>classSolid_1_1StorageAccess.html</anchorfile>
      <anchor>a7273d60eff31620620eea1ffe9dfc08b</anchor>
      <arglist>(bool accessible, const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>setupDone</name>
      <anchorfile>classSolid_1_1StorageAccess.html</anchorfile>
      <anchor>ae58d855de4fe07aaf4639ebdc2c95989</anchor>
      <arglist>(Solid::ErrorType error, QVariant errorData, const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>setupRequested</name>
      <anchorfile>classSolid_1_1StorageAccess.html</anchorfile>
      <anchor>a4fb362f8f49f712f9920606be3d4ebf3</anchor>
      <arglist>(const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>teardownDone</name>
      <anchorfile>classSolid_1_1StorageAccess.html</anchorfile>
      <anchor>a9f34f50cfbaa06eb27d92633b866b31b</anchor>
      <arglist>(Solid::ErrorType error, QVariant errorData, const QString &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>teardownRequested</name>
      <anchorfile>classSolid_1_1StorageAccess.html</anchorfile>
      <anchor>a7d7d7324ab4793be41dbe43adefc910e</anchor>
      <arglist>(const QString &amp;udi)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StorageAccess</name>
      <anchorfile>classSolid_1_1StorageAccess.html</anchorfile>
      <anchor>af7b8e207a7433cb667cd6e7f3693747a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>filePath</name>
      <anchorfile>classSolid_1_1StorageAccess.html</anchorfile>
      <anchor>a67216193dc57f89c7d47b8826d98428a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAccessible</name>
      <anchorfile>classSolid_1_1StorageAccess.html</anchorfile>
      <anchor>a7f791e3992045625511f833c291445ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIgnored</name>
      <anchorfile>classSolid_1_1StorageAccess.html</anchorfile>
      <anchor>ab9310cbb95b5f930e3736af5bf2a03e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setup</name>
      <anchorfile>classSolid_1_1StorageAccess.html</anchorfile>
      <anchor>aa46fb8a7a104927168ffc3b29817fde9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>teardown</name>
      <anchorfile>classSolid_1_1StorageAccess.html</anchorfile>
      <anchor>a9530651a7d29c0c8d4baffbccb970f41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>deviceInterfaceType</name>
      <anchorfile>classSolid_1_1StorageAccess.html</anchorfile>
      <anchor>a5ba4f15b824ac4c4bf372075c2eb9b69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StorageAccess</name>
      <anchorfile>classSolid_1_1StorageAccess.html</anchorfile>
      <anchor>a2af0dc87eebabd0e281962b9b0e3c5fb</anchor>
      <arglist>(StorageAccessPrivate &amp;dd, QObject *backendObject)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Ifaces::StorageAccess</name>
    <filename>classSolid_1_1Ifaces_1_1StorageAccess.html</filename>
    <base virtualness="virtual">Solid::Ifaces::DeviceInterface</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StorageAccess</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageAccess.html</anchorfile>
      <anchor>a1279ea30bb2491e9b2b3a94866779643</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>filePath</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageAccess.html</anchorfile>
      <anchor>ae3d68c3fe674a865d42842a538632856</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isAccessible</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageAccess.html</anchorfile>
      <anchor>aceeb1f907d51849241e1e9d4ce9e9d1a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isIgnored</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageAccess.html</anchorfile>
      <anchor>a0a9bcfda5c69ed25f05d749ced3a648a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setup</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageAccess.html</anchorfile>
      <anchor>afce0fc2aaa76df0ea57b8492445b8588</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>teardown</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageAccess.html</anchorfile>
      <anchor>ad7201f86246296b65a4bf7d8d2bdc66e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>accessibilityChanged</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageAccess.html</anchorfile>
      <anchor>a3a37f7e29d4d0344059601c64bc282e1</anchor>
      <arglist>(bool accessible, const QString &amp;udi)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setupDone</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageAccess.html</anchorfile>
      <anchor>acdff3a9c24196ffaa08f39bf5f315919</anchor>
      <arglist>(Solid::ErrorType error, QVariant resultData, const QString &amp;udi)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setupRequested</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageAccess.html</anchorfile>
      <anchor>a9042b3de25da017e9c30a3dca52f7dba</anchor>
      <arglist>(const QString &amp;udi)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>teardownDone</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageAccess.html</anchorfile>
      <anchor>ac46afff60cd04dd82fb9341a029f8e5b</anchor>
      <arglist>(Solid::ErrorType error, QVariant resultData, const QString &amp;udi)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>teardownRequested</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageAccess.html</anchorfile>
      <anchor>a234e6fc7265255bca670782604cec8a0</anchor>
      <arglist>(const QString &amp;udi)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Ifaces::StorageDrive</name>
    <filename>classSolid_1_1Ifaces_1_1StorageDrive.html</filename>
    <base virtualness="virtual">Solid::Ifaces::Block</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StorageDrive</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageDrive.html</anchorfile>
      <anchor>a7d7eed1009aac4ff99650d45ca3f233d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Solid::StorageDrive::Bus</type>
      <name>bus</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageDrive.html</anchorfile>
      <anchor>ab161dcd6d22da1987c68b2e0842e8ee7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Solid::StorageDrive::DriveType</type>
      <name>driveType</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageDrive.html</anchorfile>
      <anchor>a9758b6241fc7595bea5b02d56d4e3125</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isHotpluggable</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageDrive.html</anchorfile>
      <anchor>ac3ed5fe8e5f4458f6740248d37960781</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isRemovable</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageDrive.html</anchorfile>
      <anchor>a6df90ffe662aae79ed4c3ec3ba87c4ea</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual qulonglong</type>
      <name>size</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageDrive.html</anchorfile>
      <anchor>acf08fb19708206168c8402a4382d56cb</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::StorageDrive</name>
    <filename>classSolid_1_1StorageDrive.html</filename>
    <base>Solid::DeviceInterface</base>
    <member kind="enumeration">
      <type></type>
      <name>Bus</name>
      <anchorfile>classSolid_1_1StorageDrive.html</anchorfile>
      <anchor>acc84968d1114d892ba86de0348ca5a43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DriveType</name>
      <anchorfile>classSolid_1_1StorageDrive.html</anchorfile>
      <anchor>a58e59752bb61b9214e72f1de8a685920</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StorageDrive</name>
      <anchorfile>classSolid_1_1StorageDrive.html</anchorfile>
      <anchor>ae935fb2f1b3d98e6a085c1325a3e5cce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Bus</type>
      <name>bus</name>
      <anchorfile>classSolid_1_1StorageDrive.html</anchorfile>
      <anchor>a0a454a55fa86214d050279e8aa5273fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DriveType</type>
      <name>driveType</name>
      <anchorfile>classSolid_1_1StorageDrive.html</anchorfile>
      <anchor>ac1531d5911d5461ee5f2cfa8fb9b8149</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHotpluggable</name>
      <anchorfile>classSolid_1_1StorageDrive.html</anchorfile>
      <anchor>a4d255807ca7fda2a1e6e9446940a15f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInUse</name>
      <anchorfile>classSolid_1_1StorageDrive.html</anchorfile>
      <anchor>a05dc0b480f662833f2cf7d565701f816</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRemovable</name>
      <anchorfile>classSolid_1_1StorageDrive.html</anchorfile>
      <anchor>a9dd9973747645d3fdb6973a03e7c1e6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qulonglong</type>
      <name>size</name>
      <anchorfile>classSolid_1_1StorageDrive.html</anchorfile>
      <anchor>a99cdfb70049655b5f84b11e90f419aff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>deviceInterfaceType</name>
      <anchorfile>classSolid_1_1StorageDrive.html</anchorfile>
      <anchor>aa9c98474a098e91ed7aba680384c2c33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StorageDrive</name>
      <anchorfile>classSolid_1_1StorageDrive.html</anchorfile>
      <anchor>ac83745edf39337b6a1729ba547acbd74</anchor>
      <arglist>(StorageDrivePrivate &amp;dd, QObject *backendObject)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::StorageVolume</name>
    <filename>classSolid_1_1StorageVolume.html</filename>
    <base>Solid::DeviceInterface</base>
    <member kind="enumeration">
      <type></type>
      <name>UsageType</name>
      <anchorfile>classSolid_1_1StorageVolume.html</anchorfile>
      <anchor>aeed11994e9e3b81a3e60261364deeeb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StorageVolume</name>
      <anchorfile>classSolid_1_1StorageVolume.html</anchorfile>
      <anchor>aabdc52692c58780548ab17ba662818d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Device</type>
      <name>encryptedContainer</name>
      <anchorfile>classSolid_1_1StorageVolume.html</anchorfile>
      <anchor>aa8d2f8b16859bf2c59aa20d1c10ecc7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>fsType</name>
      <anchorfile>classSolid_1_1StorageVolume.html</anchorfile>
      <anchor>aa76c394f3640b9a4bfd50fefa5a51ddf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIgnored</name>
      <anchorfile>classSolid_1_1StorageVolume.html</anchorfile>
      <anchor>ad78770b2369ac1cb0fb2a1826d041572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>label</name>
      <anchorfile>classSolid_1_1StorageVolume.html</anchorfile>
      <anchor>a094a95d69bbc85972e60f7fabd7251db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qulonglong</type>
      <name>size</name>
      <anchorfile>classSolid_1_1StorageVolume.html</anchorfile>
      <anchor>a3dbc5da5e727269b99f86851473c9ff3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UsageType</type>
      <name>usage</name>
      <anchorfile>classSolid_1_1StorageVolume.html</anchorfile>
      <anchor>a9765a23187209d0bfaec62314cfcdfa0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>uuid</name>
      <anchorfile>classSolid_1_1StorageVolume.html</anchorfile>
      <anchor>ab4499608d8f3bcfeb178b0d2affd1b16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>deviceInterfaceType</name>
      <anchorfile>classSolid_1_1StorageVolume.html</anchorfile>
      <anchor>ac253c4758e0fe55dbc9d6cb713c6c928</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StorageVolume</name>
      <anchorfile>classSolid_1_1StorageVolume.html</anchorfile>
      <anchor>acb79d1eb335563084caf54e713c2b76f</anchor>
      <arglist>(StorageVolumePrivate &amp;dd, QObject *backendObject)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Solid::Ifaces::StorageVolume</name>
    <filename>classSolid_1_1Ifaces_1_1StorageVolume.html</filename>
    <base virtualness="virtual">Solid::Ifaces::Block</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StorageVolume</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageVolume.html</anchorfile>
      <anchor>aa9bf00d9be8053840ce003e9c495fea4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>encryptedContainerUdi</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageVolume.html</anchorfile>
      <anchor>a3e20bc8eb6596760f24a4393f4f73844</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>fsType</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageVolume.html</anchorfile>
      <anchor>a239789d14e61e3705f413450b072aae0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isIgnored</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageVolume.html</anchorfile>
      <anchor>abf9dd7e3759ed0f144f5ff76ae7a5bc4</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>label</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageVolume.html</anchorfile>
      <anchor>a11040636405ea5d0de77dbb061cced8c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual qulonglong</type>
      <name>size</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageVolume.html</anchorfile>
      <anchor>afb960c0dd0fdf436380bb93f4578d348</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Solid::StorageVolume::UsageType</type>
      <name>usage</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageVolume.html</anchorfile>
      <anchor>a809aa18b8d3b5f9ec6cdc296662793a2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>uuid</name>
      <anchorfile>classSolid_1_1Ifaces_1_1StorageVolume.html</anchorfile>
      <anchor>a3a9989da25c65e907de33ae683b34bb1</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Solid</name>
    <filename>namespaceSolid.html</filename>
    <class kind="class">Solid::AbstractInhibition</class>
    <class kind="class">Solid::Battery</class>
    <class kind="class">Solid::Block</class>
    <class kind="class">Solid::Camera</class>
    <class kind="class">Solid::Device</class>
    <class kind="class">Solid::DeviceInterface</class>
    <class kind="class">Solid::DeviceNotifier</class>
    <class kind="class">Solid::Devices</class>
    <class kind="class">Solid::GenericInterface</class>
    <class kind="class">Solid::Inhibition</class>
    <class kind="class">Solid::Job</class>
    <class kind="class">Solid::NetworkShare</class>
    <class kind="class">Solid::OpticalDisc</class>
    <class kind="class">Solid::OpticalDrive</class>
    <class kind="class">Solid::PortableMediaPlayer</class>
    <class kind="class">Solid::Predicate</class>
    <class kind="class">Solid::Processor</class>
    <class kind="class">Solid::RequestStateJob</class>
    <class kind="class">Solid::StatesJob</class>
    <class kind="class">Solid::StorageAccess</class>
    <class kind="class">Solid::StorageDrive</class>
    <class kind="class">Solid::StorageVolume</class>
  </compound>
  <compound kind="page">
    <name>song</name>
    <title>A Solid Song</title>
    <filename>song</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Solid</title>
    <filename>index</filename>
  </compound>
</tagfile>
