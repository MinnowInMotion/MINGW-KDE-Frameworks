<?xml version="1.0" encoding="UTF-8"?>
<add>
  <doc>
    <field name="type">source</field>
    <field name="name">abstractacpluggedjob.h</field>
    <field name="url">abstractacpluggedjob_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid AbstractAcPluggedJob Job Q_OBJECT AbstractAcPluggedJob QObject parent Job parent AbstractAcPluggedJob isPlugged</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">abstractinhibition.h</field>
    <field name="url">abstractinhibition_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">abstractinhibition.h</field>
    <field name="url">abstractinhibition_8h_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">AbstractInhibition QObject Q_OBJECT AbstractInhibition QObject parent QObject parent AbstractInhibition start stop Inhibition::State state Q_SIGNALS stateChanged Inhibition::State state</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">abstractinhibitionjob.h</field>
    <field name="url">abstractinhibitionjob_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Inhibition AbstractInhibitionJob Job Q_OBJECT AbstractInhibitionJob QObject parent Job parent AbstractInhibitionJob Inhibition inhibition</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">abstractrequeststatejob.h</field>
    <field name="url">abstractrequeststatejob_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid AbstractRequestStateJob Job Q_OBJECT AbstractRequestStateJob QObject parent Job parent AbstractRequestStateJob Power::InhibitionType state</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">abstractstatesjob.h</field>
    <field name="url">abstractstatesjob_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid AbstractStatesJob Job Q_OBJECT AbstractStatesJob QObject parent Job parent AbstractStatesJob Power::InhibitionTypes states</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">acpluggedjob.cpp</field>
    <field name="url">acpluggedjob_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid AcPluggedJobPrivate::AcPluggedJobPrivate backendJob Q_NULLPTR plugged backendJobFinished AcPluggedJob::AcPluggedJob QObject parent Job new AcPluggedJobPrivate parent AcPluggedJob::doStart Q_D AcPluggedJob d backendJob PowerBackendLoader::AcPluggedJob connect d backendJob AbstractAcPluggedJob::result d d backendJob start AcPluggedJob::isPlugged d_func backendJobFinished d_func plugged qWarning</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">acpluggedjob.h</field>
    <field name="url">acpluggedjob_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid AcPluggedJobPrivate SOLID_EXPORT AcPluggedJob Job Q_OBJECT Q_PROPERTY plugged READ isPlugged NOTIFY result AcPluggedJob QObject parent isPlugged Q_SLOTS doStart Q_DECL_OVERRIDE Q_SIGNALS result Solid Job private Q_DECLARE_PRIVATE AcPluggedJob</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.cpp</field>
    <field name="url">frontend_2battery_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Battery::Battery QObject backendObject DeviceInterface new BatteryPrivate backendObject connect backendObject SIGNAL presentStateChanged QString SIGNAL presentStateChanged QString connect backendObject SIGNAL chargePercentChanged QString SIGNAL chargePercentChanged QString connect backendObject SIGNAL capacityChanged QString SIGNAL capacityChanged QString connect backendObject SIGNAL powerSupplyStateChanged QString SIGNAL powerSupplyStateChanged QString connect backendObject SIGNAL chargeStateChanged QString SIGNAL chargeStateChanged QString connect backendObject SIGNAL timeToEmptyChanged qlonglong QString SIGNAL timeToEmptyChanged qlonglong QString connect backendObject SIGNAL timeToFullChanged qlonglong QString SIGNAL timeToFullChanged qlonglong QString connect backendObject SIGNAL energyChanged QString SIGNAL energyChanged QString connect backendObject SIGNAL energyFullChanged QString SIGNAL energyFullChanged QString connect backendObject SIGNAL energyFullDesignChanged QString SIGNAL energyFullDesignChanged QString connect backendObject SIGNAL energyRateChanged QString SIGNAL energyRateChanged QString connect backendObject SIGNAL voltageChanged QString SIGNAL voltageChanged QString connect backendObject SIGNAL temperatureChanged QString SIGNAL temperatureChanged QString connect backendObject SIGNAL remainingTimeChanged qlonglong QString SIGNAL remainingTimeChanged qlonglong QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.cpp</field>
    <field name="url">frontend_2battery_8cpp_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text">Solid::Battery::~Battery</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.cpp</field>
    <field name="url">frontend_2battery_8cpp_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">Solid::Battery::isPresent Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject isPresent Solid::Battery::BatteryType Solid::Battery::type Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject UnknownBattery type Solid::Battery::chargePercent Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject chargePercent Solid::Battery::capacity Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject capacity</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.cpp</field>
    <field name="url">frontend_2battery_8cpp_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text">Solid::Battery::isRechargeable Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject isRechargeable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.cpp</field>
    <field name="url">frontend_2battery_8cpp_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text">Solid::Battery::isPowerSupply Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject isPowerSupply Solid::Battery::ChargeState Solid::Battery::chargeState Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject NoCharge chargeState qlonglong Solid::Battery::timeToEmpty Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject timeToEmpty qlonglong Solid::Battery::timeToFull Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject timeToFull</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.cpp</field>
    <field name="url">frontend_2battery_8cpp_source.html#l00134</field>
    <field name="keywords"></field>
    <field name="text">Solid::Battery::Technology Solid::Battery::technology Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject UnknownTechnology technology Solid::Battery::energy Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject energy Solid::Battery::energyFull Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject energyFull Solid::Battery::energyFullDesign Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject energyFullDesign Solid::Battery::energyRate Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject energyRate Solid::Battery::voltage Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject voltage Solid::Battery::temperature Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject temperature</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.cpp</field>
    <field name="url">frontend_2battery_8cpp_source.html#l00176</field>
    <field name="keywords"></field>
    <field name="text">Solid::Battery::isRecalled Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject isRecalled QString Solid::Battery::recallVendor Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject QString recallVendor QString Solid::Battery::recallUrl Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject QString recallUrl QString Solid::Battery::serial Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject QString serial qlonglong Solid::Battery::remainingTime Q_D Battery return_SOLID_CALL Ifaces::Battery d backendObject remainingTime</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.cpp</field>
    <field name="url">ifaces_2battery_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.cpp</field>
    <field name="url">ifaces_2battery_8cpp_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::Battery::~Battery</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.h</field>
    <field name="url">frontend_2battery_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid BatteryPrivate Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.h</field>
    <field name="url">frontend_2battery_8h_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT Battery DeviceInterface Q_OBJECT Q_ENUMS BatteryType ChargeState Q_PROPERTY present READ isPresent NOTIFY presentStateChanged Q_PROPERTY BatteryType type READ type CONSTANT Q_PROPERTY chargePercent READ chargePercent NOTIFY chargePercentChanged Q_PROPERTY capacity READ capacity NOTIFY capacityChanged Q_PROPERTY rechargeable READ isRechargeable CONSTANT Q_PROPERTY powerSupply READ isPowerSupply NOTIFY powerSupplyStateChanged Q_PROPERTY ChargeState chargeState READ chargeState NOTIFY chargeStateChanged Q_PROPERTY qlonglong timeToEmpty READ timeToEmpty NOTIFY timeToEmptyChanged Q_PROPERTY qlonglong timeToFull READ timeToFull NOTIFY timeToFullChanged Q_PROPERTY energy READ energy NOTIFY energyChanged Q_PROPERTY energyFull READ energyFull NOTIFY energyFullChanged Q_PROPERTY energyFullDesign READ energyFullDesign NOTIFY energyFullDesignChanged Q_PROPERTY energyRate READ energyRate NOTIFY energyRateChanged Q_PROPERTY voltage READ voltage NOTIFY voltageChanged Q_PROPERTY temperature READ temperature NOTIFY temperatureChanged Q_PROPERTY recalled READ isRecalled Q_PROPERTY QString recallVendor READ recallVendor Q_PROPERTY QString recallUrl READ recallUrl Q_PROPERTY QString serial READ serial Q_PROPERTY qlonglong remainingTime READ remainingTime NOTIFY remainingTimeChanged Q_DECLARE_PRIVATE Battery Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.h</field>
    <field name="url">frontend_2battery_8h_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">BatteryType UnknownBattery PdaBattery UpsBattery PrimaryBattery MouseBattery KeyboardBattery KeyboardMouseBattery CameraBattery PhoneBattery MonitorBattery</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.h</field>
    <field name="url">frontend_2battery_8h_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text">ChargeState NoCharge Charging Discharging FullyCharged</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.h</field>
    <field name="url">frontend_2battery_8h_source.html#l00109</field>
    <field name="keywords"></field>
    <field name="text">Technology UnknownTechnology LithiumIon LithiumPolymer LithiumIronPhosphate LeadAcid NickelCadmium NickelMetalHydride Battery QObject backendObject Battery</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.h</field>
    <field name="url">frontend_2battery_8h_source.html#l00136</field>
    <field name="keywords"></field>
    <field name="text">Type deviceInterfaceType DeviceInterface::Battery isPresent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.h</field>
    <field name="url">frontend_2battery_8h_source.html#l00153</field>
    <field name="keywords"></field>
    <field name="text">SOLID_DEPRECATED isPlugged isPresent Solid::Battery::BatteryType type chargePercent capacity isRechargeable isPowerSupply Solid::Battery::ChargeState chargeState qlonglong timeToEmpty qlonglong timeToFull Solid::Battery::Technology technology energy energyFull energyFullDesign energyRate voltage temperature isRecalled QString recallVendor QString recallUrl QString serial qlonglong remainingTime Q_SIGNALS presentStateChanged newState QString udi chargePercentChanged value QString udi capacityChanged value QString udi powerSupplyStateChanged newState QString udi chargeStateChanged newState QString udi QString timeToEmptyChanged qlonglong time QString udi timeToFullChanged qlonglong time QString udi energyChanged energy QString udi energyFullChanged energy QString udi energyFullDesignChanged energy QString udi energyRateChanged energyRate QString udi voltageChanged voltage QString udi temperatureChanged temperature QString udi remainingTimeChanged qlonglong time QString udi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.h</field>
    <field name="url">ifaces_2battery_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Ifaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">battery.h</field>
    <field name="url">ifaces_2battery_8h_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">Battery DeviceInterface isPresent Solid::Battery::BatteryType type chargePercent capacity isRechargeable isPowerSupply Solid::Battery::ChargeState chargeState qlonglong timeToEmpty qlonglong timeToFull Solid::Battery::Technology technology energy energyFull energyFullDesign energyRate voltage temperature isRecalled QString recallVendor QString recallUrl QString serial qlonglong remainingTime presentStateChanged newState QString udi chargePercentChanged value QString udi capacityChanged value QString udi powerSupplyStateChanged newState QString udi chargeStateChanged newState QString udi QString timeToEmptyChanged qlonglong time QString udi timeToFullChanged qlonglong time QString udi energyChanged energy QString udi energyFullChanged energy QString udi energyFullDesignChanged energy QString udi energyRateChanged energyRate QString udi voltageChanged voltage QString udi temperatureChanged temperature QString udi remainingTimeChanged qlonglong time QString udi Q_DECLARE_INTERFACE Solid::Ifaces::Battery</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">block.cpp</field>
    <field name="url">frontend_2block_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Block::Block QObject backendObject DeviceInterface new BlockPrivate backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">block.cpp</field>
    <field name="url">frontend_2block_8cpp_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">Solid::Block::~Block</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">block.cpp</field>
    <field name="url">frontend_2block_8cpp_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">Solid::Block::deviceMajor Q_D Block return_SOLID_CALL Ifaces::Block d backendObject deviceMajor</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">block.cpp</field>
    <field name="url">frontend_2block_8cpp_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">Solid::Block::deviceMinor Q_D Block return_SOLID_CALL Ifaces::Block d backendObject deviceMinor QString Solid::Block::device Q_D Block return_SOLID_CALL Ifaces::Block d backendObject QString device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">block.cpp</field>
    <field name="url">ifaces_2block_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">block.cpp</field>
    <field name="url">ifaces_2block_8cpp_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::Block::~Block</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">block.h</field>
    <field name="url">frontend_2block_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid BlockPrivate Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">block.h</field>
    <field name="url">frontend_2block_8h_source.html#l00040</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT Block DeviceInterface Q_OBJECT Q_PROPERTY major READ deviceMajor Q_PROPERTY minor READ deviceMinor Q_PROPERTY QString device READ device Q_DECLARE_PRIVATE Block Device Block QObject backendObject Block</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">block.h</field>
    <field name="url">frontend_2block_8h_source.html#l00072</field>
    <field name="keywords"></field>
    <field name="text">Type deviceInterfaceType DeviceInterface::Block deviceMajor deviceMinor QString device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">block.h</field>
    <field name="url">ifaces_2block_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Ifaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">block.h</field>
    <field name="url">ifaces_2block_8h_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">Block DeviceInterface deviceMajor deviceMinor QString device Q_DECLARE_INTERFACE Solid::Ifaces::Block</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">camera.cpp</field>
    <field name="url">frontend_2camera_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Camera::Camera QObject backendObject DeviceInterface new CameraPrivate backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">camera.cpp</field>
    <field name="url">frontend_2camera_8cpp_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">Solid::Camera::~Camera QStringList Solid::Camera::supportedProtocols Q_D Camera return_SOLID_CALL Ifaces::Camera d backendObject QStringList supportedProtocols</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">camera.cpp</field>
    <field name="url">frontend_2camera_8cpp_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">QStringList Solid::Camera::supportedDrivers QString protocol Q_D Camera return_SOLID_CALL Ifaces::Camera d backendObject QStringList supportedDrivers protocol</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">camera.cpp</field>
    <field name="url">frontend_2camera_8cpp_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">QVariant Solid::Camera::driverHandle QString driver Q_D Camera return_SOLID_CALL Ifaces::Camera d backendObject QVariant driverHandle driver</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">camera.cpp</field>
    <field name="url">ifaces_2camera_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">camera.cpp</field>
    <field name="url">ifaces_2camera_8cpp_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::Camera::~Camera</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">camera.h</field>
    <field name="url">frontend_2camera_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid CameraPrivate Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">camera.h</field>
    <field name="url">frontend_2camera_8h_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT Camera DeviceInterface Q_OBJECT Q_PROPERTY QStringList supportedProtocols READ supportedProtocols Q_PROPERTY QStringList supportedDrivers READ supportedDrivers Q_DECLARE_PRIVATE Camera Device Camera QObject backendObject Camera</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">camera.h</field>
    <field name="url">frontend_2camera_8h_source.html#l00077</field>
    <field name="keywords"></field>
    <field name="text">Type deviceInterfaceType DeviceInterface::Camera QStringList supportedProtocols QStringList supportedDrivers QString protocol QString QVariant driverHandle QString driver</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">camera.h</field>
    <field name="url">ifaces_2camera_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Ifaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">camera.h</field>
    <field name="url">ifaces_2camera_8h_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">Camera DeviceInterface QStringList supportedProtocols QStringList supportedDrivers QString protocol QString QVariant driverHandle QString driver Q_DECLARE_INTERFACE Solid::Ifaces::Camera</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cfhelper.cpp</field>
    <field name="url">cfhelper_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QString q_toString CFStringRef str CFIndex length CFStringGetLength str QVarLengthArray&lt;UniChar&gt; buffer length CFRange range length CFStringGetCharacters str range buffer data QString reinterpret_cast&lt;const QChar *&gt; buffer data length T convertCFNumber CFNumberRef num CFNumberType type T n CFNumberGetValue num type n n QVariant q_toVariant CFTypeRef obj CFTypeID typeId CFGetTypeID obj typeId CFStringGetTypeID QVariant q_toString static_cast&lt;const CFStringRef&gt; obj typeId CFNumberGetTypeID CFNumberRef num CFNumberRef obj CFNumberType type CFNumberGetType num type kCFNumberSInt8Type qVariantFromValue convertCFNumber&lt;char&gt; num type kCFNumberSInt16Type qVariantFromValue convertCFNumber&lt;qint16&gt; num type kCFNumberSInt32Type qVariantFromValue convertCFNumber&lt;qint32&gt; num type kCFNumberSInt64Type qVariantFromValue convertCFNumber&lt;qint64&gt; num type kCFNumberCharType qVariantFromValue convertCFNumber&lt;uchar&gt; num type kCFNumberShortType qVariantFromValue convertCFNumber&lt;short&gt; num type kCFNumberIntType qVariantFromValue convertCFNumber&lt;int&gt; num type kCFNumberLongType qVariantFromValue convertCFNumber&lt;long&gt; num type kCFNumberLongLongType qVariantFromValue convertCFNumber&lt;long long&gt; num type kCFNumberFloatType qVariantFromValue convertCFNumber&lt;float&gt; num type kCFNumberDoubleType qVariantFromValue convertCFNumber&lt;double&gt; num type CFNumberIsFloatType num qVariantFromValue convertCFNumber&lt;double&gt; num kCFNumberDoubleType qVariantFromValue convertCFNumber&lt;quint64&gt; num kCFNumberLongLongType typeId CFDateGetTypeID QDateTime dt dt setTime_t uint kCFAbsoluteTimeIntervalSince1970 dt addSecs CFDateGetAbsoluteTime static_cast&lt;const CFDateRef&gt; obj typeId CFDataGetTypeID CFDataRef cfdata CFDataRef obj QByteArray reinterpret_cast&lt;const char *&gt; CFDataGetBytePtr cfdata CFDataGetLength cfdata typeId CFBooleanGetTypeID QVariant CFBooleanGetValue static_cast&lt;const CFBooleanRef&gt; obj typeId CFArrayGetTypeID CFArrayRef cfarray CFArrayRef obj QList&lt;QVariant&gt; list CFIndex size CFArrayGetCount cfarray metNonString CFIndex i i size i QVariant value q_toVariant CFArrayGetValueAtIndex cfarray i value type QVariant::String metNonString list value metNonString list QVariant list toStringList typeId CFDictionaryGetTypeID CFDictionaryRef cfdict CFDictionaryRef obj CFTypeID arrayTypeId CFArrayGetTypeID size int CFDictionaryGetCount cfdict QVarLengthArray&lt;CFPropertyListRef&gt; keys size QVarLengthArray&lt;CFPropertyListRef&gt; values size CFDictionaryGetKeysAndValues cfdict keys data values data QMultiMap&lt;QString, QVariant&gt; map i i size i QString key q_toString static_cast&lt;const CFStringRef&gt; keys i CFGetTypeID values i arrayTypeId CFArrayRef cfarray CFArrayRef values i CFIndex arraySize CFArrayGetCount cfarray CFIndex j arraySize j j map insert key q_toVariant CFArrayGetValueAtIndex cfarray j map insert key q_toVariant values i map QVariant QMap&lt;QString, QVariant&gt; q_toVariantMap CFMutableDictionaryRef dict Q_ASSERT dict QMap&lt;QString, QVariant&gt; result count CFDictionaryGetCount dict QVarLengthArray&lt;void *&gt; keys count QVarLengthArray&lt;void *&gt; values count CFDictionaryGetKeysAndValues dict const_cast&lt;const void **&gt; keys data const_cast&lt;const void **&gt; values data i i count i QString key q_toString CFStringRef keys i QVariant value q_toVariant CFTypeRef values i result key value result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpufeatures.cpp</field>
    <field name="url">cpufeatures_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Shared void kde_sighandler_t int jmp_buf env sighandler std::longjmp env sigjmp_buf jmpbuf sig_atomic_t canjump sigill_handler sig canjump signal sig SIG_DFL sig canjump siglongjmp jmpbuf Solid::Processor::InstructionSets cpuFeatures features haveCPUID result result2 __asm__ __volatile__ ASM_POP ASM_MOV_REG ASM_XOR_VAR ASM_PUSH ASM_POP ASM_XOR_REG ASM_CMP_REG ASM_MOV_VAR haveCPUID ASM_REG ASM_REG haveCPUID __asm__ __volatile__ ASM_PUSH ASM_MOV_VAR ASM_POP result result2 ASM_REG features result features result2 __asm__ __volatile__ ASM_PUSH ASM_PUSH ASM_MOV_VAR ASM_MOV_VAR ASM_CMP_REG ASM_MOV_VAR ASM_POP ASM_POP result ASM_REG ASM_REG result x80000000 features features x02000000 kde_sighandler_t oldhandler std::signal SIGILL sighandler setjmp env features __asm__ __volatile__ std::signal SIGILL oldhandler signal SIGILL sigill_handler sigsetjmp jmpbuf signal SIGILL SIG_DFL canjump __asm__ __volatile__ signal SIGILL SIG_DFL features array ft __cpuid array ft features array features array array x80000000 features Solid::Processor::InstructionSets featureflags features x80000000 featureflags Solid::Processor::Amd3DNow features x00800000 featureflags Solid::Processor::IntelMmx features x02000000 featureflags Solid::Processor::IntelSse features x04000000 featureflags Solid::Processor::IntelSse2 features x00000001 featureflags Solid::Processor::IntelSse3 features x00000100 featureflags Solid::Processor::IntelSsse3 features x00080000 featureflags Solid::Processor::IntelSse41 features x00100000 featureflags Solid::Processor::IntelSse42 features x2 featureflags Solid::Processor::AltiVec featureflags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpufeatures.h</field>
    <field name="url">cpufeatures_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Shared Solid::Processor::InstructionSets cpuFeatures</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpuinfo.cpp</field>
    <field name="url">cpuinfo_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDev CpuInfo CpuInfo QString extractCpuInfoLine processorNumber QString regExpStr QString extractInfoLine QString regExpStr QStringList cpuInfo QString extractCpuVendor processorNumber CpuInfo info QString vendor info extractCpuInfoLine processorNumber vendor isEmpty vendor info extractInfoLine vendor QString extractCpuModel processorNumber CpuInfo info QString model info extractCpuInfoLine processorNumber model isEmpty model info extractInfoLine model extractCurrentCpuSpeed processorNumber CpuInfo info speed info extractCpuInfoLine processorNumber toInt speed CpuInfo::CpuInfo QFile cpuInfoFile cpuInfoFile open QIODevice::ReadOnly cpuInfo QString cpuInfoFile readAll split QString::SkipEmptyParts QString CpuInfo::extractCpuInfoLine processorNumber QString regExpStr QRegExp processorRegExp QRegExp regExp regExpStr line line cpuInfo size processorRegExp exactMatch cpuInfo at line recordProcNum processorRegExp capturedTexts toInt recordProcNum processorNumber line line cpuInfo size regExp exactMatch cpuInfo at line regExp capturedTexts line line QString QString CpuInfo::extractInfoLine QString regExpStr QRegExp regExp regExpStr QString line cpuInfo regExp exactMatch line regExp capturedTexts QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">cpuinfo.h</field>
    <field name="url">cpuinfo_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDev QString extractCpuVendor processorNumber QString extractCpuModel processorNumber extractCurrentCpuSpeed processorNumber</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">frontend_2device_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">frontend_2device_8cpp_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">Solid::Device::Device QString udi DeviceManagerPrivate manager DeviceManagerPrivate Solid::DeviceNotifier::instance d manager findRegisteredDevice udi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">frontend_2device_8cpp_source.html#l00063</field>
    <field name="keywords"></field>
    <field name="text">Solid::Device::Device Device device d device d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">frontend_2device_8cpp_source.html#l00068</field>
    <field name="keywords"></field>
    <field name="text">Solid::Device::~Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">frontend_2device_8cpp_source.html#l00072</field>
    <field name="keywords"></field>
    <field name="text">Solid::Device Solid::Device::operator= Solid::Device device d device d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">frontend_2device_8cpp_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text">Solid::Device::isValid d backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">frontend_2device_8cpp_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text">QString Solid::Device::udi d udi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">frontend_2device_8cpp_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text">QString Solid::Device::parentUdi return_SOLID_CALL Ifaces::Device d backendObject QString parentUdi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">frontend_2device_8cpp_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text">Solid::Device Solid::Device::parent QString udi parentUdi udi isEmpty Device Device udi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">frontend_2device_8cpp_source.html#l00104</field>
    <field name="keywords"></field>
    <field name="text">QString Solid::Device::vendor return_SOLID_CALL Ifaces::Device d backendObject QString vendor</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">frontend_2device_8cpp_source.html#l00109</field>
    <field name="keywords"></field>
    <field name="text">QString Solid::Device::product return_SOLID_CALL Ifaces::Device d backendObject QString product</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">frontend_2device_8cpp_source.html#l00114</field>
    <field name="keywords"></field>
    <field name="text">QString Solid::Device::icon return_SOLID_CALL Ifaces::Device d backendObject QString icon</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">frontend_2device_8cpp_source.html#l00119</field>
    <field name="keywords"></field>
    <field name="text">QStringList Solid::Device::emblems return_SOLID_CALL Ifaces::Device d backendObject QStringList emblems</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">frontend_2device_8cpp_source.html#l00124</field>
    <field name="keywords"></field>
    <field name="text">QString Solid::Device::description return_SOLID_CALL Ifaces::Device d backendObject QString description</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">frontend_2device_8cpp_source.html#l00129</field>
    <field name="keywords"></field>
    <field name="text">Solid::Device::isDeviceInterface DeviceInterface::Type type return_SOLID_CALL Ifaces::Device d backendObject queryDeviceInterface type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">frontend_2device_8cpp_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text">Solid::DeviceInterface Solid::Device::asDeviceInterface DeviceInterface::Type type Solid::DeviceInterface const_cast const Device asDeviceInterface type Solid::DeviceInterface interface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">frontend_2device_8cpp_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text">Solid::DeviceInterface Solid::Device::asDeviceInterface DeviceInterface::Type type Ifaces::Device device qobject_cast Ifaces::Device d backendObject device DeviceInterface iface d interface type iface iface QObject dev_iface device createDeviceInterface type dev_iface type DeviceInterface::GenericInterface iface deviceinterface_cast Ifaces::GenericInterface GenericInterface dev_iface DeviceInterface::Processor iface deviceinterface_cast Ifaces::Processor Processor dev_iface DeviceInterface::Block iface deviceinterface_cast Ifaces::Block Block dev_iface DeviceInterface::StorageAccess iface deviceinterface_cast Ifaces::StorageAccess StorageAccess dev_iface DeviceInterface::StorageDrive iface deviceinterface_cast Ifaces::StorageDrive StorageDrive dev_iface DeviceInterface::OpticalDrive iface deviceinterface_cast Ifaces::OpticalDrive OpticalDrive dev_iface DeviceInterface::StorageVolume iface deviceinterface_cast Ifaces::StorageVolume StorageVolume dev_iface DeviceInterface::OpticalDisc iface deviceinterface_cast Ifaces::OpticalDisc OpticalDisc dev_iface DeviceInterface::Camera iface deviceinterface_cast Ifaces::Camera Camera dev_iface DeviceInterface::PortableMediaPlayer iface deviceinterface_cast Ifaces::PortableMediaPlayer PortableMediaPlayer dev_iface DeviceInterface::Battery iface deviceinterface_cast Ifaces::Battery Battery dev_iface DeviceInterface::NetworkShare iface deviceinterface_cast Ifaces::NetworkShare NetworkShare dev_iface DeviceInterface::Unknown DeviceInterface::Last iface Device d setInterface type iface iface d_ptr setDevicePrivate d data iface Solid::DevicePrivate::DevicePrivate QString udi QObject QSharedData m_udi udi Solid::DevicePrivate::~DevicePrivate Q_FOREACH DeviceInterface iface m_ifaces iface d_ptr backendObject setBackendObject Solid::DevicePrivate::_k_destroyed QObject Q_UNUSED setBackendObject Solid::DevicePrivate::setBackendObject Ifaces::Device m_backendObject m_backendObject data disconnect m_backendObject data m_backendObject object connect SIGNAL destroyed QObject SLOT _k_destroyed QObject m_ifaces isEmpty Q_FOREACH DeviceInterface iface m_ifaces iface m_ifaces clear ref deref deleteLater Solid::DeviceInterface Solid::DevicePrivate::interface DeviceInterface::Type type m_ifaces type Solid::DevicePrivate::setInterface DeviceInterface::Type type DeviceInterface interface m_ifaces isEmpty ref ref m_ifaces type interface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">ifaces_2device_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">ifaces_2device_8cpp_source.html#l00026</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::Device::Device QObject parent QObject parent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">ifaces_2device_8cpp_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::Device::~Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">ifaces_2device_8cpp_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">QString Solid::Ifaces::Device::parentUdi QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">ifaces_2device_8cpp_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::Device::registerAction QString actionName QObject dest requestSlot doneSlot QDBusConnection::sessionBus connect QString deviceDBusPath actionName dest requestSlot QDBusConnection::sessionBus connect QString deviceDBusPath actionName dest doneSlot</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">ifaces_2device_8cpp_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::Device::broadcastActionDone QString actionName error QString errorString QDBusMessage signal QDBusMessage::createSignal deviceDBusPath actionName signal error errorString QDBusConnection::sessionBus send signal</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.cpp</field>
    <field name="url">ifaces_2device_8cpp_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::Device::broadcastActionRequested QString actionName QDBusMessage signal QDBusMessage::createSignal deviceDBusPath actionName QDBusConnection::sessionBus send signal QString Solid::Ifaces::Device::deviceDBusPath QByteArray encodedUdi udi toUtf8 toPercentEncoding QByteArray QString QString::fromLatin1 encodedUdi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.h</field>
    <field name="url">frontend_2device_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid DevicePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.h</field>
    <field name="url">frontend_2device_8h_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT Device QList&lt;Device&gt; allDevices QList&lt;Device&gt; listFromType DeviceInterface::Type type QString parentUdi QString QList&lt;Device&gt; listFromQuery Predicate predicate QString parentUdi QString QList&lt;Device&gt; listFromQuery QString predicate QString parentUdi QString Device QString udi QString Device Device device Device Device operator= Device device isValid QString udi QString parentUdi Device parent QString vendor QString product QString icon QStringList emblems QString description isDeviceInterface DeviceInterface::Type type DeviceInterface asDeviceInterface DeviceInterface::Type type DeviceInterface asDeviceInterface DeviceInterface::Type type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.h</field>
    <field name="url">frontend_2device_8h_source.html#l00231</field>
    <field name="keywords"></field>
    <field name="text">DevIface as DeviceInterface::Type type DevIface::deviceInterfaceType DeviceInterface iface asDeviceInterface type qobject_cast DevIface iface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.h</field>
    <field name="url">frontend_2device_8h_source.html#l00244</field>
    <field name="keywords"></field>
    <field name="text">DevIface as DeviceInterface::Type type DevIface::deviceInterfaceType DeviceInterface iface asDeviceInterface type qobject_cast DevIface iface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.h</field>
    <field name="url">frontend_2device_8h_source.html#l00256</field>
    <field name="keywords"></field>
    <field name="text">is isDeviceInterface DevIface::deviceInterfaceType QExplicitlySharedDataPointer&lt;DevicePrivate&gt; d DeviceManagerPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.h</field>
    <field name="url">ifaces_2device_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Ifaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">device.h</field>
    <field name="url">ifaces_2device_8h_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">Device QObject Q_OBJECT Device QObject parent QString udi QString parentUdi QString vendor QString product QString icon QStringList emblems QString description queryDeviceInterface Solid::DeviceInterface::Type type QObject createDeviceInterface Solid::DeviceInterface::Type type registerAction QString actionName QObject dest requestSlot doneSlot broadcastActionRequested QString actionName broadcastActionDone QString actionName error Solid::NoError QString errorString QString QString deviceDBusPath</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">deviceinterface.cpp</field>
    <field name="url">frontend_2deviceinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">deviceinterface.cpp</field>
    <field name="url">frontend_2deviceinterface_8cpp_source.html#l00028</field>
    <field name="keywords"></field>
    <field name="text">Solid::DeviceInterface::DeviceInterface DeviceInterfacePrivate dd QObject backendObject d_ptr dd Q_D DeviceInterface d setBackendObject backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">deviceinterface.cpp</field>
    <field name="url">frontend_2deviceinterface_8cpp_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">Solid::DeviceInterface::~DeviceInterface d_ptr d_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">deviceinterface.cpp</field>
    <field name="url">frontend_2deviceinterface_8cpp_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">Solid::DeviceInterface::isValid Q_D DeviceInterface d backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">deviceinterface.cpp</field>
    <field name="url">frontend_2deviceinterface_8cpp_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">QString Solid::DeviceInterface::typeToString Type type index staticMetaObject indexOfEnumerator QMetaEnum metaEnum staticMetaObject enumerator index QString metaEnum valueToKey type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">deviceinterface.cpp</field>
    <field name="url">frontend_2deviceinterface_8cpp_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">Solid::DeviceInterface::Type Solid::DeviceInterface::stringToType QString type index staticMetaObject indexOfEnumerator QMetaEnum metaEnum staticMetaObject enumerator index Type metaEnum keyToValue type toUtf8</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">deviceinterface.cpp</field>
    <field name="url">frontend_2deviceinterface_8cpp_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">QString Solid::DeviceInterface::typeDescription Type type type Unknown tr GenericInterface tr Processor tr Block tr StorageAccess tr StorageDrive tr OpticalDrive tr StorageVolume tr OpticalDisc tr Camera tr PortableMediaPlayer tr Battery tr NetworkShare tr Last QString QString Solid::DeviceInterfacePrivate::DeviceInterfacePrivate m_devicePrivate Solid::DeviceInterfacePrivate::~DeviceInterfacePrivate QObject Solid::DeviceInterfacePrivate::backendObject m_backendObject data Solid::DeviceInterfacePrivate::setBackendObject QObject m_backendObject object Solid::DevicePrivate Solid::DeviceInterfacePrivate::devicePrivate m_devicePrivate Solid::DeviceInterfacePrivate::setDevicePrivate DevicePrivate devicePrivate m_devicePrivate devicePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">deviceinterface.cpp</field>
    <field name="url">ifaces_2deviceinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">deviceinterface.cpp</field>
    <field name="url">ifaces_2deviceinterface_8cpp_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::DeviceInterface::~DeviceInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">deviceinterface.h</field>
    <field name="url">frontend_2deviceinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Device DevicePrivate Predicate DeviceInterfacePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">deviceinterface.h</field>
    <field name="url">frontend_2deviceinterface_8h_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT DeviceInterface QObject Q_OBJECT Q_ENUMS Type Q_DECLARE_PRIVATE DeviceInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">deviceinterface.h</field>
    <field name="url">frontend_2deviceinterface_8h_source.html#l00063</field>
    <field name="keywords"></field>
    <field name="text">Type Unknown GenericInterface Processor Block StorageAccess StorageDrive OpticalDrive StorageVolume OpticalDisc Camera PortableMediaPlayer Battery NetworkShare Last DeviceInterface isValid QString typeToString Type type Type stringToType QString type QString typeDescription Type type DeviceInterface DeviceInterfacePrivate dd QObject backendObject DeviceInterfacePrivate d_ptr Device DevicePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">deviceinterface.h</field>
    <field name="url">ifaces_2deviceinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Ifaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">deviceinterface.h</field>
    <field name="url">ifaces_2deviceinterface_8h_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">DeviceInterface Q_DECLARE_INTERFACE Solid::Ifaces::DeviceInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devicemanager.cpp</field>
    <field name="url">frontend_2devicemanager_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_GLOBAL_STATIC Solid::DeviceManagerStorage globalDeviceStorage Solid::DeviceManagerPrivate::DeviceManagerPrivate m_nullDevice new DevicePrivate QString loadBackends QList&lt;QObject *&gt; backends managerBackends Q_FOREACH QObject backend backends connect backend SIGNAL deviceAdded QString SLOT _k_deviceAdded QString connect backend SIGNAL deviceRemoved QString SLOT _k_deviceRemoved QString Solid::DeviceManagerPrivate::~DeviceManagerPrivate QList&lt;QObject *&gt; backends managerBackends Q_FOREACH QObject backend backends disconnect backend Q_FOREACH QPointer&lt;DevicePrivate&gt; dev m_devicesMap dev data ref deref dev data m_devicesMap clear</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devicemanager.cpp</field>
    <field name="url">frontend_2devicemanager_8cpp_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;Solid::Device&gt; Solid::Device::allDevices QList&lt;Device&gt; list QList&lt;QObject *&gt; backends globalDeviceStorage managerBackends Q_FOREACH QObject backendObj backends Ifaces::DeviceManager backend qobject_cast Ifaces::DeviceManager backendObj backend QStringList udis backend allDevices Q_FOREACH QString udi udis list append Device udi list</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devicemanager.cpp</field>
    <field name="url">frontend_2devicemanager_8cpp_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;Solid::Device&gt; Solid::Device::listFromQuery QString predicate QString parentUdi Predicate p Predicate::fromString predicate p isValid listFromQuery p parentUdi QList&lt;Device&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devicemanager.cpp</field>
    <field name="url">frontend_2devicemanager_8cpp_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;Solid::Device&gt; Solid::Device::listFromType DeviceInterface::Type type QString parentUdi QList&lt;Device&gt; list QList&lt;QObject *&gt; backends globalDeviceStorage managerBackends Q_FOREACH QObject backendObj backends Ifaces::DeviceManager backend qobject_cast Ifaces::DeviceManager backendObj backend backend supportedInterfaces contains type QStringList udis backend devicesFromQuery parentUdi type Q_FOREACH QString udi udis list append Device udi list</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devicemanager.cpp</field>
    <field name="url">frontend_2devicemanager_8cpp_source.html#l00125</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;Solid::Device&gt; Solid::Device::listFromQuery Predicate predicate QString parentUdi QList&lt;Device&gt; list QList&lt;QObject *&gt; backends globalDeviceStorage managerBackends QSet&lt;DeviceInterface::Type&gt; usedTypes predicate usedTypes Q_FOREACH QObject backendObj backends Ifaces::DeviceManager backend qobject_cast Ifaces::DeviceManager backendObj backend QStringList udis predicate isValid QSet&lt;DeviceInterface::Type&gt; supportedTypes backend supportedInterfaces supportedTypes intersect usedTypes isEmpty Q_FOREACH DeviceInterface::Type type supportedTypes udis backend devicesFromQuery parentUdi type udis backend allDevices QSet&lt;QString&gt; seen Q_FOREACH QString udi udis seen contains udi seen insert udi Device dev udi matches predicate isValid matches matches predicate matches dev matches list append dev list Solid::DeviceNotifier Solid::DeviceNotifier::instance globalDeviceStorage notifier Solid::DeviceManagerPrivate::_k_deviceAdded QString udi m_devicesMap contains udi DevicePrivate dev m_devicesMap udi data dev dev backendObject dev setBackendObject createBackendObject udi Q_ASSERT dev backendObject emit deviceAdded udi Solid::DeviceManagerPrivate::_k_deviceRemoved QString udi m_devicesMap contains udi DevicePrivate dev m_devicesMap udi data dev Q_ASSERT dev backendObject dev setBackendObject Q_ASSERT dev backendObject emit deviceRemoved udi Solid::DeviceManagerPrivate::_k_destroyed QObject QString udi m_reverseMap take udi isEmpty m_devicesMap remove udi Solid::DevicePrivate Solid::DeviceManagerPrivate::findRegisteredDevice QString udi udi isEmpty m_nullDevice data m_devicesMap contains udi m_devicesMap udi data Ifaces::Device iface createBackendObject udi DevicePrivate devData DevicePrivate udi devData setBackendObject iface QPointer&lt;DevicePrivate&gt; ptr devData m_devicesMap udi ptr m_reverseMap devData udi connect devData SIGNAL destroyed QObject SLOT _k_destroyed QObject devData Solid::Ifaces::Device Solid::DeviceManagerPrivate::createBackendObject QString udi QList&lt;QObject *&gt; backends globalDeviceStorage managerBackends Q_FOREACH QObject backendObj backends Ifaces::DeviceManager backend qobject_cast Ifaces::DeviceManager backendObj backend udi startsWith backend udiPrefix Ifaces::Device iface QObject backend createDevice udi iface qobject_cast Ifaces::Device object iface object iface Solid::DeviceManagerStorage::DeviceManagerStorage QList&lt;QObject *&gt; Solid::DeviceManagerStorage::managerBackends ensureManagerCreated m_storage localData managerBackends Solid::DeviceNotifier Solid::DeviceManagerStorage::notifier ensureManagerCreated m_storage localData Solid::DeviceManagerStorage::ensureManagerCreated m_storage hasLocalData m_storage setLocalData DeviceManagerPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devicemanager.cpp</field>
    <field name="url">ifaces_2devicemanager_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devicemanager.cpp</field>
    <field name="url">ifaces_2devicemanager_8cpp_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::DeviceManager::DeviceManager QObject parent QObject parent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devicemanager.cpp</field>
    <field name="url">ifaces_2devicemanager_8cpp_source.html#l00029</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::DeviceManager::~DeviceManager</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devicemanager.h</field>
    <field name="url">devicemanager_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Ifaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devicemanager.h</field>
    <field name="url">devicemanager_8h_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">DeviceManager QObject Q_OBJECT DeviceManager QObject parent QString udiPrefix QSet&lt;Solid::DeviceInterface::Type&gt; supportedInterfaces QStringList allDevices QStringList devicesFromQuery QString parentUdi Solid::DeviceInterface::Type type Solid::DeviceInterface::Unknown QObject createDevice QString udi Q_SIGNALS deviceAdded QString udi deviceRemoved QString udi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devicenotifier.h</field>
    <field name="url">devicenotifier_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devicenotifier.h</field>
    <field name="url">devicenotifier_8h_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT DeviceNotifier QObject Q_OBJECT DeviceNotifier instance Q_SIGNALS deviceAdded QString udi deviceRemoved QString udi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devices.cpp</field>
    <field name="url">devices_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devices.cpp</field>
    <field name="url">devices_8cpp_source.html#l00028</field>
    <field name="keywords"></field>
    <field name="text">Solid QHash&lt;QString, QWeakPointer&lt;DevicesQueryPrivate&gt; DevicesQueryPrivate::handlers QSharedPointer&lt;DevicesQueryPrivate&gt; DevicesQueryPrivate::forQuery QString query handlers contains query handlers query toStrongRef QSharedPointer&lt;DevicesQueryPrivate&gt; backend DevicesQueryPrivate query handlers query backend backend DevicesQueryPrivate::DevicesQueryPrivate QString query query query predicate Solid::Predicate::fromString query notifier Solid::DeviceNotifier::instance connect notifier Solid::DeviceNotifier::deviceAdded DevicesQueryPrivate::addDevice connect notifier Solid::DeviceNotifier::deviceRemoved DevicesQueryPrivate::removeDevice query isEmpty predicate isValid Q_FOREACH Solid::Device device Solid::Device::listFromQuery predicate matchingDevices device udi DevicesQueryPrivate::~DevicesQueryPrivate handlers remove query DevicesQueryPrivate::addDevice QString udi predicate isValid predicate matches Solid::Device udi matchingDevices udi emit deviceAdded udi DevicesQueryPrivate::removeDevice QString udi predicate isValid matchingDevices contains udi matchingDevices removeAll udi emit deviceRemoved udi QStringList DevicesQueryPrivate::devices matchingDevices Devices::initialize m_backend m_backend DevicesQueryPrivate::forQuery m_query connect m_backend data DevicesQueryPrivate::deviceAdded Devices::addDevice connect m_backend data DevicesQueryPrivate::deviceAdded Devices::addDevice connect m_backend data DevicesQueryPrivate::deviceRemoved Devices::removeDevice matchesCount m_backend devices count matchesCount emit emptyChanged emit countChanged matchesCount emit devicesChanged m_backend devices Devices::reset m_backend m_backend disconnect m_backend reset emit emptyChanged emit countChanged emit devicesChanged QStringList Devices::addDevice QString udi m_backend count m_backend devices count count emit emptyChanged emit countChanged count emit devicesChanged m_backend devices emit deviceAdded udi Devices::removeDevice QString udi m_backend count m_backend devices count count emit emptyChanged emit countChanged count emit devicesChanged m_backend devices emit deviceRemoved udi Devices::Devices QObject parent QObject parent Devices::~Devices</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devices.cpp</field>
    <field name="url">devices_8cpp_source.html#l00178</field>
    <field name="keywords"></field>
    <field name="text">Devices::isEmpty initialize count Devices::count initialize devices count QStringList Devices::devices initialize m_backend devices QString Devices::query m_backend query</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devices.cpp</field>
    <field name="url">devices_8cpp_source.html#l00201</field>
    <field name="keywords"></field>
    <field name="text">Devices::setQuery QString query m_query query m_query query reset initialize emit queryChanged query</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devices.cpp</field>
    <field name="url">devices_8cpp_source.html#l00215</field>
    <field name="keywords"></field>
    <field name="text">QObject Devices::device QString udi QString _type Solid::DeviceInterface::Type type Solid::DeviceInterface::stringToType _type Solid::Device udi asDeviceInterface type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devices.h</field>
    <field name="url">devices_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid DeviceNotifier DevicesQueryPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">devices.h</field>
    <field name="url">devices_8h_source.html#l00069</field>
    <field name="keywords"></field>
    <field name="text">Devices QObject Q_OBJECT Q_PROPERTY QString query READ query WRITE setQuery NOTIFY queryChanged Q_PROPERTY count READ count NOTIFY countChanged Q_PROPERTY empty READ isEmpty NOTIFY emptyChanged Q_PROPERTY QStringList devices READ devices NOTIFY devicesChanged Devices QObject parent Q_NULLPTR Devices Q_SIGNALS deviceAdded QString udi deviceRemoved QString udi countChanged count devicesChanged QStringList devices queryChanged QString query emptyChanged empty count isEmpty QStringList devices QString query setQuery QString query Q_SLOTS QObject device QString udi QString type Q_SLOTS addDevice QString udi removeDevice QString udi initialize reset QString m_query QSharedPointer&lt;DevicesQueryPrivate&gt; m_backend</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dummyacpluggedjob.cpp</field>
    <field name="url">dummyacpluggedjob_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid DummyAcPluggedJob::doStart emitResult DummyAcPluggedJob::isPlugged</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dummyacpluggedjob.h</field>
    <field name="url">dummyacpluggedjob_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid DummyAcPluggedJob AbstractAcPluggedJob Q_OBJECT isPlugged const Q_DECL_OVERRIDE private Q_SLOTS doStart Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dummyinhibition.cpp</field>
    <field name="url">dummyinhibition_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid DummyInhibition::DummyInhibition QObject parent AbstractInhibition parent m_state Inhibition::Started DummyInhibition::~DummyInhibition stop DummyInhibition::start m_state Inhibition::Started m_state Inhibition::Started Q_EMIT stateChanged m_state DummyInhibition::stop m_state Inhibition::Stopped m_state Inhibition::Stopped Q_EMIT stateChanged m_state Inhibition::State DummyInhibition::state m_state</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dummyinhibition.h</field>
    <field name="url">dummyinhibition_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid DummyInhibitionJob DummyInhibition AbstractInhibition Q_OBJECT DummyInhibition QObject parent DummyInhibition start Q_DECL_OVERRIDE stop Q_DECL_OVERRIDE Inhibition State state const Q_DECL_OVERRIDE Power InhibitionTypes inhibitions QString description Inhibition State m_state</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dummyinhibitionjob.cpp</field>
    <field name="url">dummyinhibitionjob_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid DummyInhibitionJob::DummyInhibitionJob Power::InhibitionTypes inhibitions QString description QObject parent AbstractInhibitionJob parent m_inhibitions inhibitions m_description description DummyInhibitionJob::doStart emitResult Inhibition DummyInhibitionJob::inhibition dummyInhibition DummyInhibition dummyInhibition inhibitions m_inhibitions dummyInhibition description m_description Inhibition dummyInhibition</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dummyinhibitionjob.h</field>
    <field name="url">dummyinhibitionjob_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Inhibition DummyInhibitionJob AbstractInhibitionJob Q_OBJECT DummyInhibitionJob Power::InhibitionTypes inhibitions QString description QObject parent Inhibition inhibition Q_DECL_OVERRIDE private Q_SLOTS doStart Q_DECL_OVERRIDE private Power InhibitionTypes m_inhibitions QString m_description</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dummypowernotifier.cpp</field>
    <field name="url">dummypowernotifier_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid DummyPowerNotifier::DummyPowerNotifier QObject parent PowerNotifier parent QMetaObject::invokeMethod Qt::QueuedConnection DummyPowerNotifier::emitEverythingChanged Q_EMIT acPluggedChanged</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dummypowernotifier.h</field>
    <field name="url">dummypowernotifier_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid DummyPowerNotifier PowerNotifier Q_OBJECT DummyPowerNotifier QObject parent Q_SLOTS emitEverythingChanged</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dummyrequeststatejob.cpp</field>
    <field name="url">dummyrequeststatejob_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid DummyRequestStateJob::doStart state Power::Shutdown setError RequestStateJob::Unsupported setErrorText QLatin1Literal emitResult</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dummyrequeststatejob.h</field>
    <field name="url">dummyrequeststatejob_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid DummyRequestStateJob AbstractRequestStateJob Q_OBJECT Q_SLOTS doStart Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dummystatesjob.cpp</field>
    <field name="url">dummystatesjob_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid DummyStatesJob::doStart emitResult Power::InhibitionTypes DummyStatesJob::states Power::Shutdown Power::Sleep</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dummystatesjob.h</field>
    <field name="url">dummystatesjob_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid DummyStatesJob AbstractStatesJob Q_OBJECT Power::InhibitionTypes states const Q_DECL_OVERRIDE private Q_SLOTS doStart Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakebattery.cpp</field>
    <field name="url">fakebattery_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fake FakeBattery::FakeBattery FakeDevice device FakeDeviceInterface device FakeBattery::~FakeBattery FakeBattery::isPresent fakeDevice property toBool Solid::Battery::BatteryType FakeBattery::type QString name fakeDevice property toString name Solid::Battery::PdaBattery name Solid::Battery::UpsBattery name Solid::Battery::PrimaryBattery name Solid::Battery::MouseBattery name Solid::Battery::KeyboardBattery name Solid::Battery::KeyboardMouseBattery name Solid::Battery::CameraBattery Solid::Battery::UnknownBattery FakeBattery::chargePercent last_full fakeDevice property toInt current fakeDevice property toInt percent current last_full percent FakeBattery::capacity fakeDevice property toInt FakeBattery::isRechargeable fakeDevice property toBool FakeBattery::isPowerSupply fakeDevice property toBool Solid::Battery::ChargeState FakeBattery::chargeState QString state fakeDevice property toString state Solid::Battery::Charging state Solid::Battery::Discharging state Solid::Battery::FullyCharged Solid::Battery::NoCharge qlonglong FakeBattery::timeToEmpty fakeDevice property toLongLong qlonglong FakeBattery::timeToFull fakeDevice property toLongLong FakeBattery::setChargeState Solid::Battery::ChargeState newState QString name newState Solid::Battery::Charging name Solid::Battery::Discharging name Solid::Battery::NoCharge name Solid::Battery::FullyCharged name fakeDevice setProperty name emit chargeStateChanged newState fakeDevice udi FakeBattery::setChargeLevel newLevel fakeDevice setProperty newLevel emit chargePercentChanged chargePercent fakeDevice udi Solid::Battery::Technology FakeBattery::technology Solid::Battery::Technology fakeDevice property toInt FakeBattery::energy fakeDevice property toDouble FakeBattery::energyFull fakeDevice property toDouble FakeBattery::energyFullDesign fakeDevice property toDouble FakeBattery::energyRate fakeDevice property toDouble FakeBattery::voltage fakeDevice property toDouble FakeBattery::temperature fakeDevice property toDouble FakeBattery::isRecalled fakeDevice property toBool QString FakeBattery::recallVendor fakeDevice property toString QString FakeBattery::recallUrl fakeDevice property toString QString FakeBattery::serial fakeDevice property toString qlonglong FakeBattery::remainingTime fakeDevice property toLongLong</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakebattery.h</field>
    <field name="url">fakebattery_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fake FakeBattery FakeDeviceInterface Solid::Ifaces::Battery Q_OBJECT Q_INTERFACES Solid::Ifaces::Battery FakeBattery FakeDevice device FakeBattery Q_SLOTS isPresent const Q_DECL_OVERRIDE Solid Battery BatteryType type const Q_DECL_OVERRIDE chargePercent const Q_DECL_OVERRIDE capacity const Q_DECL_OVERRIDE isRechargeable const Q_DECL_OVERRIDE isPowerSupply const Q_DECL_OVERRIDE Solid Battery ChargeState chargeState const Q_DECL_OVERRIDE qlonglong timeToEmpty const Q_DECL_OVERRIDE qlonglong timeToFull const Q_DECL_OVERRIDE setChargeState Solid Battery ChargeState newState setChargeLevel newLevel Solid Battery Technology technology const Q_DECL_OVERRIDE energy const Q_DECL_OVERRIDE energyFull const Q_DECL_OVERRIDE energyFullDesign const Q_DECL_OVERRIDE energyRate const Q_DECL_OVERRIDE voltage const Q_DECL_OVERRIDE temperature const Q_DECL_OVERRIDE isRecalled const Q_DECL_OVERRIDE QString recallVendor const Q_DECL_OVERRIDE QString recallUrl const Q_DECL_OVERRIDE QString serial const Q_DECL_OVERRIDE qlonglong remainingTime const Q_DECL_OVERRIDE Q_SIGNALS presentStateChanged newState const QString udi Q_DECL_OVERRIDE chargePercentChanged value const QString udi Q_DECL_OVERRIDE capacityChanged value const QString udi Q_DECL_OVERRIDE powerSupplyStateChanged newState const QString udi Q_DECL_OVERRIDE chargeStateChanged newState const QString udi Q_DECL_OVERRIDE timeToEmptyChanged qlonglong time const QString udi Q_DECL_OVERRIDE timeToFullChanged qlonglong time const QString udi Q_DECL_OVERRIDE energyChanged energy const QString udi Q_DECL_OVERRIDE energyFullChanged energyFull const QString udi Q_DECL_OVERRIDE energyFullDesignChanged energyFullDesign const QString udi Q_DECL_OVERRIDE energyRateChanged energyRate const QString udi Q_DECL_OVERRIDE voltageChanged voltage const QString udi Q_DECL_OVERRIDE temperatureChanged temperature const QString udi Q_DECL_OVERRIDE remainingTimeChanged qlonglong time const QString udi Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakeblock.cpp</field>
    <field name="url">fakeblock_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fake FakeBlock::FakeBlock FakeDevice device FakeDeviceInterface device FakeBlock::~FakeBlock FakeBlock::deviceMajor fakeDevice property toInt FakeBlock::deviceMinor fakeDevice property toInt QString FakeBlock::device fakeDevice property toString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakeblock.h</field>
    <field name="url">fakeblock_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fake FakeBlock FakeDeviceInterface Solid::Ifaces::Block Q_OBJECT Q_INTERFACES Solid::Ifaces::Block FakeBlock FakeDevice device FakeBlock Q_SLOTS deviceMajor const Q_DECL_OVERRIDE deviceMinor const Q_DECL_OVERRIDE QString device const Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakecamera.cpp</field>
    <field name="url">fakecamera_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fake FakeCamera::FakeCamera FakeDevice device FakeDeviceInterface device FakeCamera::~FakeCamera QStringList FakeCamera::supportedProtocols QStringList res QString method fakeDevice property toString res method res QStringList FakeCamera::supportedDrivers QString QStringList res fakeDevice property toBool res res QVariant Solid::Backends::Fake::FakeCamera::driverHandle QString driver Q_UNUSED driver QVariant</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakecamera.h</field>
    <field name="url">fakecamera_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fake FakeCamera FakeDeviceInterface Solid::Ifaces::Camera Q_OBJECT Q_INTERFACES Solid::Ifaces::Camera FakeCamera FakeDevice device FakeCamera Q_SLOTS QStringList supportedProtocols const Q_DECL_OVERRIDE QStringList supportedDrivers QString protocol const Q_DECL_OVERRIDE QVariant driverHandle const QString driver const Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakecdrom.cpp</field>
    <field name="url">fakecdrom_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fake FakeCdrom::FakeCdrom FakeDevice device FakeStorage device FakeCdrom::~FakeCdrom Solid::OpticalDrive::MediumTypes FakeCdrom::supportedMedia Solid::OpticalDrive::MediumTypes supported QMap&lt;Solid::OpticalDrive::MediumType, QString&gt; map map Solid::OpticalDrive::Cdr map Solid::OpticalDrive::Cdrw map Solid::OpticalDrive::Dvd map Solid::OpticalDrive::Dvdr map Solid::OpticalDrive::Dvdrw map Solid::OpticalDrive::Dvdram map Solid::OpticalDrive::Dvdplusr map Solid::OpticalDrive::Dvdplusrw map Solid::OpticalDrive::Dvdplusdl map Solid::OpticalDrive::Dvdplusdlrw map Solid::OpticalDrive::Bd map Solid::OpticalDrive::Bdr map Solid::OpticalDrive::Bdre map Solid::OpticalDrive::HdDvd map Solid::OpticalDrive::HdDvdr map Solid::OpticalDrive::HdDvdrw QStringList supported_medialist fakeDevice property toString simplified split Q_FOREACH Solid::OpticalDrive::MediumType type map keys supported_medialist indexOf map type supported type supported FakeCdrom::readSpeed fakeDevice property toInt FakeCdrom::writeSpeed fakeDevice property toInt QList&lt;int&gt; FakeCdrom::writeSpeeds QList&lt;int&gt; speeds QStringList speed_strlist fakeDevice property toString simplified split Q_FOREACH QString speed_str speed_strlist speeds speed_str toInt speeds FakeCdrom::eject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakecdrom.h</field>
    <field name="url">fakecdrom_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fake FakeCdrom FakeStorage Solid::Ifaces::OpticalDrive Q_OBJECT Q_INTERFACES Solid::Ifaces::OpticalDrive FakeCdrom FakeDevice device FakeCdrom Q_SLOTS Solid::OpticalDrive::MediumTypes supportedMedia const Q_DECL_OVERRIDE readSpeed const Q_DECL_OVERRIDE writeSpeed const Q_DECL_OVERRIDE QList writeSpeeds const Q_DECL_OVERRIDE eject Q_DECL_OVERRIDE Q_SIGNALS ejectPressed const QString udi Q_DECL_OVERRIDE ejectDone Solid ErrorType error QVariant errorData const QString udi Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakedevice.cpp</field>
    <field name="url">fakedevice_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fake FakeDevice::FakeDevice QString udi QMap&lt;QString, QVariant&gt; propertyMap Solid Ifaces Device d new Private d udi udi d propertyMap propertyMap d interfaceList d propertyMap toString simplified split d interfaceList d locked d broken QDBusConnection::sessionBus registerObject udi QDBusConnection::ExportNonScriptableSlots Q_FOREACH QString interface d interfaceList Solid::DeviceInterface::Type type Solid::DeviceInterface::stringToType interface createDeviceInterface type connect d data SIGNAL propertyChanged QMap&lt;QString,int&gt; SIGNAL propertyChanged QMap&lt;QString,int&gt; connect d data SIGNAL conditionRaised QString QString SIGNAL conditionRaised QString QString FakeDevice::FakeDevice FakeDevice dev Solid Ifaces Device d dev d connect d data SIGNAL propertyChanged QMap&lt;QString,int&gt; SIGNAL propertyChanged QMap&lt;QString,int&gt; connect d data SIGNAL conditionRaised QString QString SIGNAL conditionRaised QString QString FakeDevice::~FakeDevice QDBusConnection::sessionBus unregisterObject d udi QDBusConnection::UnregisterTree QString FakeDevice::udi d udi QString FakeDevice::parentUdi d propertyMap toString QString FakeDevice::vendor d propertyMap toString QString FakeDevice::product d propertyMap toString QString FakeDevice::icon parentUdi isEmpty queryDeviceInterface Solid::DeviceInterface::OpticalDrive queryDeviceInterface Solid::DeviceInterface::PortableMediaPlayer queryDeviceInterface Solid::DeviceInterface::Camera queryDeviceInterface Solid::DeviceInterface::Processor queryDeviceInterface Solid::DeviceInterface::StorageDrive queryDeviceInterface Solid::DeviceInterface::Block QStringList FakeDevice::emblems QStringList res queryDeviceInterface Solid::DeviceInterface::StorageAccess property toBool res res res QString FakeDevice::description product QVariant FakeDevice::property QString key d propertyMap key QMap&lt;QString, QVariant&gt; FakeDevice::allProperties d propertyMap FakeDevice::propertyExists QString key d propertyMap contains key FakeDevice::setProperty QString key QVariant value d broken Solid::GenericInterface::PropertyChange change_type Solid::GenericInterface::PropertyModified d propertyMap contains key change_type Solid::GenericInterface::PropertyAdded d propertyMap key value QMap&lt;QString, int&gt; change change key change_type emit d propertyChanged change FakeDevice::removeProperty QString key d broken d propertyMap contains key d propertyMap remove key QMap&lt;QString, int&gt; change change key Solid::GenericInterface::PropertyRemoved emit d propertyChanged change FakeDevice::setBroken broken d broken broken FakeDevice::isBroken d broken FakeDevice::lock QString reason d broken d locked d locked d lockReason reason FakeDevice::unlock d broken d locked d locked d lockReason clear FakeDevice::isLocked d locked QString FakeDevice::lockReason d lockReason FakeDevice::raiseCondition QString condition QString reason emit d conditionRaised condition reason FakeDevice::queryDeviceInterface Solid::DeviceInterface::Type type d interfaceList contains Solid::DeviceInterface::typeToString type QObject FakeDevice::createDeviceInterface Solid::DeviceInterface::Type type queryDeviceInterface type FakeDeviceInterface iface type Solid::DeviceInterface::GenericInterface iface FakeGenericInterface Solid::DeviceInterface::Processor iface FakeProcessor Solid::DeviceInterface::Block iface FakeBlock Solid::DeviceInterface::StorageDrive iface FakeStorage Solid::DeviceInterface::OpticalDrive iface FakeCdrom Solid::DeviceInterface::StorageVolume iface FakeVolume Solid::DeviceInterface::OpticalDisc iface FakeOpticalDisc Solid::DeviceInterface::StorageAccess iface FakeStorageAccess Solid::DeviceInterface::Camera iface FakeCamera Solid::DeviceInterface::PortableMediaPlayer iface FakePortableMediaPlayer Solid::DeviceInterface::Battery iface FakeBattery Solid::DeviceInterface::NetworkShare iface FakeNetworkShare Solid::DeviceInterface::Unknown Solid::DeviceInterface::Last iface QDBusConnection::sessionBus registerObject d udi Solid::DeviceInterface::typeToString type iface QDBusConnection::ExportNonScriptableSlots iface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakedevice.h</field>
    <field name="url">fakedevice_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fake FakeDevice Solid::Ifaces::Device Q_OBJECT FakeDevice QString udi QMap&lt;QString, QVariant&gt; propertyMap FakeDevice FakeDevice dev FakeDevice Q_SLOTS QString udi const Q_DECL_OVERRIDE QString parentUdi const Q_DECL_OVERRIDE QString vendor const Q_DECL_OVERRIDE QString product const Q_DECL_OVERRIDE QString icon const Q_DECL_OVERRIDE QStringList emblems const Q_DECL_OVERRIDE QString description const Q_DECL_OVERRIDE virtual QVariant property const QString key const virtual QMap QString QVariant allProperties const virtual propertyExists const QString key const virtual setProperty const QString key const QVariant value virtual removeProperty const QString key virtual lock const QString reason virtual unlock virtual isLocked const virtual QString lockReason const setBroken broken isBroken raiseCondition const QString condition const QString reason public queryDeviceInterface const Solid DeviceInterface Type type const Q_DECL_OVERRIDE QObject createDeviceInterface const Solid DeviceInterface Type type Q_DECL_OVERRIDE Q_SIGNALS propertyChanged const QMap QString changes conditionRaised const QString condition const QString reason private class Private QSharedPointer Private d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakedeviceinterface.cpp</field>
    <field name="url">fakedeviceinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fake FakeDeviceInterface::FakeDeviceInterface FakeDevice device QObject device m_device device FakeDeviceInterface::~FakeDeviceInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakedeviceinterface.h</field>
    <field name="url">fakedeviceinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fake FakeDeviceInterface QObject Solid::Ifaces::DeviceInterface Q_OBJECT Q_INTERFACES Solid::Ifaces::DeviceInterface FakeDeviceInterface FakeDevice device FakeDeviceInterface FakeDevice fakeDevice m_device FakeDevice fakeDevice m_device FakeDevice m_device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakegenericinterface.cpp</field>
    <field name="url">fakegenericinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fake FakeGenericInterface::FakeGenericInterface FakeDevice device FakeDeviceInterface device connect device SIGNAL propertyChanged QMap&lt;QString,int&gt; SIGNAL propertyChanged QMap&lt;QString,int&gt; connect device SIGNAL conditionRaised QString QString SIGNAL conditionRaised QString QString FakeGenericInterface::~FakeGenericInterface QVariant FakeGenericInterface::property QString key fakeDevice property key QMap&lt;QString, QVariant&gt; FakeGenericInterface::allProperties fakeDevice allProperties FakeGenericInterface::propertyExists QString key fakeDevice propertyExists key</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakegenericinterface.h</field>
    <field name="url">fakegenericinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fake FakeGenericInterface FakeDeviceInterface Solid::Ifaces::GenericInterface Q_OBJECT Q_INTERFACES Solid::Ifaces::GenericInterface FakeGenericInterface FakeDevice device FakeGenericInterface QVariant property QString key Q_DECL_OVERRIDE QMap&lt;QString, QVariant&gt; allProperties const Q_DECL_OVERRIDE propertyExists const QString key const Q_DECL_OVERRIDE Q_SIGNALS propertyChanged const QMap QString changes Q_DECL_OVERRIDE conditionRaised const QString condition const QString reason Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakemanager.cpp</field>
    <field name="url">fakemanager_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fake FakeManager::Private QMap&lt;QString, FakeDevice *&gt; loadedDevices QMap&lt;QString, QMap&lt;QString, QVariant&gt; hiddenDevices QString xmlFile QSet&lt;Solid::DeviceInterface::Type&gt; supportedInterfaces FakeManager::FakeManager QObject parent QString xmlFile Solid Ifaces DeviceManager parent d new Private QString machineXmlFile xmlFile d xmlFile machineXmlFile QDBusConnection::sessionBus registerObject QDBusConnection::ExportNonScriptableSlots parseMachineFile d supportedInterfaces Solid::DeviceInterface::GenericInterface Solid::DeviceInterface::Processor Solid::DeviceInterface::Block Solid::DeviceInterface::StorageAccess Solid::DeviceInterface::StorageDrive Solid::DeviceInterface::OpticalDrive Solid::DeviceInterface::StorageVolume Solid::DeviceInterface::OpticalDisc Solid::DeviceInterface::Camera Solid::DeviceInterface::PortableMediaPlayer Solid::DeviceInterface::Battery Solid::DeviceInterface::NetworkShare FakeManager::~FakeManager QDBusConnection::sessionBus unregisterObject QDBusConnection::UnregisterTree qDeleteAll d loadedDevices d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakemanager.cpp</field>
    <field name="url">fakemanager_8cpp_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text">QString FakeManager::udiPrefix</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakemanager.cpp</field>
    <field name="url">fakemanager_8cpp_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">QSet&lt;Solid::DeviceInterface::Type&gt; FakeManager::supportedInterfaces d supportedInterfaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakemanager.cpp</field>
    <field name="url">fakemanager_8cpp_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text">QStringList FakeManager::allDevices QStringList deviceUdiList Q_FOREACH FakeDevice device d loadedDevices deviceUdiList append device udi deviceUdiList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakemanager.cpp</field>
    <field name="url">fakemanager_8cpp_source.html#l00097</field>
    <field name="keywords"></field>
    <field name="text">QStringList FakeManager::devicesFromQuery QString parentUdi Solid::DeviceInterface::Type type parentUdi isEmpty QStringList found findDeviceStringMatch QLatin1String parentUdi type Solid::DeviceInterface::Unknown found QStringList result QStringList::ConstIterator it found constBegin QStringList::ConstIterator end found constEnd it end it FakeDevice device d loadedDevices it device queryDeviceInterface type result it result type Solid::DeviceInterface::Unknown findDeviceByDeviceInterface type allDevices</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakemanager.cpp</field>
    <field name="url">fakemanager_8cpp_source.html#l00127</field>
    <field name="keywords"></field>
    <field name="text">QObject FakeManager::createDevice QString udi d loadedDevices contains udi FakeDevice d loadedDevices udi FakeDevice FakeManager::findDevice QString udi d loadedDevices contains udi d loadedDevices udi QStringList FakeManager::findDeviceStringMatch QString key QString value QStringList result FakeDevice device Q_FOREACH device d loadedDevices device property key toString value result append device udi result QStringList FakeManager::findDeviceByDeviceInterface Solid::DeviceInterface::Type type QStringList result FakeDevice device Q_FOREACH device d loadedDevices device queryDeviceInterface type result append device udi result FakeManager::plug QString udi d hiddenDevices contains udi QMap&lt;QString, QVariant&gt; properties d hiddenDevices take udi d loadedDevices udi FakeDevice udi properties emit deviceAdded udi FakeManager::unplug QString udi d loadedDevices contains udi FakeDevice dev d loadedDevices take udi d hiddenDevices udi dev allProperties emit deviceRemoved udi dev FakeManager::parseMachineFile QFile machineFile d xmlFile machineFile open QIODevice::ReadOnly qWarning Q_FUNC_INFO d xmlFile endl QDomDocument fakeDocument fakeDocument setContent machineFile qWarning Q_FUNC_INFO endl machineFile close machineFile close qDebug Q_FUNC_INFO d xmlFile endl QDomElement mainElement fakeDocument documentElement QDomNode node mainElement firstChild node isNull QDomElement tempElement node toElement tempElement isNull tempElement tagName QLatin1String FakeDevice tempDevice parseDeviceElement tempElement tempDevice Q_ASSERT d loadedDevices contains tempDevice udi d loadedDevices insert tempDevice udi tempDevice emit deviceAdded tempDevice udi node node nextSibling FakeDevice FakeManager::parseDeviceElement QDomElement deviceElement FakeDevice device QMap&lt;QString, QVariant&gt; propertyMap QString udi deviceElement attribute QDomNode propertyNode deviceElement firstChild propertyNode isNull QDomElement propertyElement propertyNode toElement propertyElement isNull propertyElement tagName QLatin1String QString propertyKey QVariant propertyValue propertyKey propertyElement attribute propertyValue QVariant propertyElement text propertyMap insert propertyKey propertyValue propertyNode propertyNode nextSibling propertyMap isEmpty device FakeDevice udi propertyMap device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakemanager.h</field>
    <field name="url">fakemanager_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QDomElement Solid::Ifaces Solid Backends Fake FakeDevice</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakemanager.h</field>
    <field name="url">fakemanager_8h_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">FakeManager Solid::Ifaces::DeviceManager Q_OBJECT FakeManager QObject parent QString xmlFile FakeManager QString udiPrefix Q_DECL_OVERRIDE QSet&lt;Solid::DeviceInterface::Type&gt; supportedInterfaces Q_DECL_OVERRIDE QStringList allDevices Q_DECL_OVERRIDE QStringList devicesFromQuery QString parentUdi Solid::DeviceInterface::Type type Q_DECL_OVERRIDE QObject createDevice QString udi Q_DECL_OVERRIDE FakeDevice findDevice QString udi Q_SLOTS plug QString udi unplug QString udi Q_SLOTS parseMachineFile FakeDevice parseDeviceElement QDomElement element QStringList findDeviceStringMatch QString key QString value QStringList findDeviceByDeviceInterface Solid::DeviceInterface::Type type Private Private d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakenetworkshare.cpp</field>
    <field name="url">fakenetworkshare_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fake FakeNetworkShare::FakeNetworkShare FakeDevice device FakeDeviceInterface device FakeNetworkShare::~FakeNetworkShare Solid::NetworkShare::ShareType FakeNetworkShare::type QString type fakeDevice property toString type Solid::NetworkShare::Nfs type Solid::NetworkShare::Cifs Solid::NetworkShare::Unknown QUrl FakeNetworkShare::url QString url fakeDevice property toString QUrl url</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakenetworkshare.h</field>
    <field name="url">fakenetworkshare_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fake FakeNetworkShare FakeDeviceInterface Solid::Ifaces::NetworkShare Q_OBJECT Q_INTERFACES Solid::Ifaces::NetworkShare FakeNetworkShare FakeDevice device FakeNetworkShare Solid::NetworkShare::ShareType type const Q_DECL_OVERRIDE QUrl url const Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakeopticaldisc.cpp</field>
    <field name="url">fakeopticaldisc_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fake FakeOpticalDisc::FakeOpticalDisc FakeDevice device FakeVolume device FakeOpticalDisc::~FakeOpticalDisc Solid::OpticalDisc::ContentTypes FakeOpticalDisc::availableContent Solid::OpticalDisc::ContentTypes content QMap&lt;Solid::OpticalDisc::ContentType, QString&gt; map map Solid::OpticalDisc::Audio map Solid::OpticalDisc::Data map Solid::OpticalDisc::VideoCd map Solid::OpticalDisc::SuperVideoCd map Solid::OpticalDisc::VideoDvd QStringList content_typelist fakeDevice property toString split Q_FOREACH Solid::OpticalDisc::ContentType type map keys content_typelist indexOf map type content type content Solid::OpticalDisc::DiscType FakeOpticalDisc::discType QString type fakeDevice property toString type Solid::OpticalDisc::CdRom type Solid::OpticalDisc::CdRecordable type Solid::OpticalDisc::CdRewritable type Solid::OpticalDisc::DvdRom type Solid::OpticalDisc::DvdRam type Solid::OpticalDisc::DvdRecordable type Solid::OpticalDisc::DvdRewritable type Solid::OpticalDisc::DvdPlusRecordable type Solid::OpticalDisc::DvdPlusRewritable type Solid::OpticalDisc::DvdPlusRecordableDuallayer type Solid::OpticalDisc::DvdPlusRewritableDuallayer type Solid::OpticalDisc::BluRayRom type Solid::OpticalDisc::BluRayRecordable type Solid::OpticalDisc::BluRayRewritable type Solid::OpticalDisc::HdDvdRom type Solid::OpticalDisc::HdDvdRecordable type Solid::OpticalDisc::HdDvdRewritable Solid::OpticalDisc::UnknownDiscType FakeOpticalDisc::isAppendable fakeDevice property toBool FakeOpticalDisc::isBlank fakeDevice property toBool FakeOpticalDisc::isRewritable fakeDevice property toBool qulonglong FakeOpticalDisc::capacity fakeDevice property toULongLong</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakeopticaldisc.h</field>
    <field name="url">fakeopticaldisc_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fake FakeOpticalDisc FakeVolume Solid::Ifaces::OpticalDisc Q_OBJECT Q_INTERFACES Solid::Ifaces::OpticalDisc FakeOpticalDisc FakeDevice device FakeOpticalDisc Q_SLOTS Solid::OpticalDisc::ContentTypes availableContent const Q_DECL_OVERRIDE Solid OpticalDisc DiscType discType const Q_DECL_OVERRIDE isAppendable const Q_DECL_OVERRIDE isBlank const Q_DECL_OVERRIDE isRewritable const Q_DECL_OVERRIDE qulonglong capacity const Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakeportablemediaplayer.cpp</field>
    <field name="url">fakeportablemediaplayer_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fake FakePortableMediaPlayer::FakePortableMediaPlayer FakeDevice device FakeDeviceInterface device FakePortableMediaPlayer::~FakePortableMediaPlayer QStringList FakePortableMediaPlayer::supportedProtocols fakeDevice property toString simplified split QStringList FakePortableMediaPlayer::supportedDrivers QString protocol Q_UNUSED protocol fakeDevice property toString simplified split QVariant Solid::Backends::Fake::FakePortableMediaPlayer::driverHandle QString driver Q_UNUSED driver QVariant</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakeportablemediaplayer.h</field>
    <field name="url">fakeportablemediaplayer_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fake FakePortableMediaPlayer FakeDeviceInterface Solid::Ifaces::PortableMediaPlayer Q_OBJECT Q_INTERFACES Solid::Ifaces::PortableMediaPlayer FakePortableMediaPlayer FakeDevice device FakePortableMediaPlayer Q_SLOTS QStringList supportedProtocols const Q_DECL_OVERRIDE QStringList supportedDrivers QString protocol const Q_DECL_OVERRIDE QVariant driverHandle const QString driver const Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakeprocessor.cpp</field>
    <field name="url">fakeprocessor_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fake FakeProcessor::FakeProcessor FakeDevice device FakeDeviceInterface device FakeProcessor::~FakeProcessor FakeProcessor::number fakeDevice property toInt FakeProcessor::maxSpeed fakeDevice property toInt FakeProcessor::canChangeFrequency fakeDevice property toBool Solid::Processor::InstructionSets FakeProcessor::instructionSets Solid::Processor::InstructionSets result QString str fakeDevice property toString QStringList extension_list str split Q_FOREACH QString extension_str extension_list extension_str result Solid::Processor::IntelMmx extension_str result Solid::Processor::IntelSse extension_str result Solid::Processor::IntelSse2 extension_str result Solid::Processor::IntelSse3 extension_str result Solid::Processor::IntelSse4 extension_str result Solid::Processor::Amd3DNow extension_str result Solid::Processor::AltiVec result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakeprocessor.h</field>
    <field name="url">fakeprocessor_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fake FakeProcessor FakeDeviceInterface Solid::Ifaces::Processor Q_OBJECT Q_INTERFACES Solid::Ifaces::Processor FakeProcessor FakeDevice device FakeProcessor Q_SLOTS number const Q_DECL_OVERRIDE maxSpeed const Q_DECL_OVERRIDE canChangeFrequency const Q_DECL_OVERRIDE Solid Processor InstructionSets instructionSets const Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakestorage.cpp</field>
    <field name="url">fakestorage_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fake FakeStorage::FakeStorage FakeDevice device FakeBlock device FakeStorage::~FakeStorage Solid::StorageDrive::Bus FakeStorage::bus QString bus fakeDevice property toString bus Solid::StorageDrive::Ide bus Solid::StorageDrive::Usb bus Solid::StorageDrive::Ieee1394 bus Solid::StorageDrive::Scsi bus Solid::StorageDrive::Sata Solid::StorageDrive::Platform Solid::StorageDrive::DriveType FakeStorage::driveType QString type fakeDevice property toString type Solid::StorageDrive::HardDisk type Solid::StorageDrive::CdromDrive type Solid::StorageDrive::Floppy type Solid::StorageDrive::Tape type Solid::StorageDrive::CompactFlash type Solid::StorageDrive::MemoryStick type Solid::StorageDrive::SmartMedia type Solid::StorageDrive::SdMmc Solid::StorageDrive::HardDisk FakeStorage::isRemovable fakeDevice property toBool FakeStorage::isHotpluggable fakeDevice property toBool qulonglong FakeStorage::size fakeDevice property toULongLong</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakestorage.h</field>
    <field name="url">fakestorage_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fake FakeStorage FakeBlock Solid::Ifaces::StorageDrive Q_OBJECT Q_INTERFACES Solid::Ifaces::StorageDrive FakeStorage FakeDevice device FakeStorage Q_SLOTS Solid::StorageDrive::Bus bus const Q_DECL_OVERRIDE Solid StorageDrive DriveType driveType const Q_DECL_OVERRIDE isRemovable const Q_DECL_OVERRIDE isHotpluggable const Q_DECL_OVERRIDE qulonglong size const Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakestorageaccess.cpp</field>
    <field name="url">fakestorageaccess_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fake FakeStorageAccess::FakeStorageAccess FakeDevice device FakeDeviceInterface device connect device SIGNAL propertyChanged QMap&lt;QString,int&gt; SLOT onPropertyChanged QMap&lt;QString,int&gt; FakeStorageAccess::~FakeStorageAccess FakeStorageAccess::isAccessible fakeDevice property toBool QString FakeStorageAccess::filePath fakeDevice property toString FakeStorageAccess::isIgnored fakeDevice property toBool FakeStorageAccess::setup fakeDevice isBroken isAccessible fakeDevice setProperty FakeStorageAccess::teardown fakeDevice isBroken isAccessible fakeDevice setProperty Solid::Backends::Fake::FakeStorageAccess::onPropertyChanged QMap&lt;QString, int&gt; changes Q_FOREACH QString property changes keys property emit accessibilityChanged fakeDevice property toBool fakeDevice udi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakestorageaccess.h</field>
    <field name="url">fakestorageaccess_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fake FakeStorageAccess FakeDeviceInterface Solid::Ifaces::StorageAccess Q_OBJECT Q_INTERFACES Solid::Ifaces::StorageAccess FakeStorageAccess FakeDevice device FakeStorageAccess isAccessible const Q_DECL_OVERRIDE QString filePath const Q_DECL_OVERRIDE isIgnored const Q_DECL_OVERRIDE public Q_SLOTS setup Q_DECL_OVERRIDE teardown Q_DECL_OVERRIDE Q_SIGNALS accessibilityChanged accessible const QString udi Q_DECL_OVERRIDE setupDone Solid ErrorType error QVariant errorData const QString udi Q_DECL_OVERRIDE teardownDone Solid ErrorType error QVariant errorData const QString udi Q_DECL_OVERRIDE setupRequested const QString udi Q_DECL_OVERRIDE teardownRequested const QString udi Q_DECL_OVERRIDE private Q_SLOTS onPropertyChanged const QMap QString changes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakevolume.cpp</field>
    <field name="url">fakevolume_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fake FakeVolume::FakeVolume FakeDevice device FakeBlock device FakeVolume::~FakeVolume FakeVolume::isIgnored fakeDevice property toBool Solid::StorageVolume::UsageType FakeVolume::usage QString usage fakeDevice property toString usage Solid::StorageVolume::FileSystem usage Solid::StorageVolume::PartitionTable usage Solid::StorageVolume::Raid usage Solid::StorageVolume::Unused Solid::StorageVolume::Other QString FakeVolume::fsType fakeDevice property toString QString FakeVolume::label fakeDevice property toString QString FakeVolume::uuid fakeDevice property toString qulonglong FakeVolume::size fakeDevice property toULongLong QString Solid::Backends::Fake::FakeVolume::encryptedContainerUdi QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fakevolume.h</field>
    <field name="url">fakevolume_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fake FakeVolume FakeBlock Solid::Ifaces::StorageVolume Q_OBJECT Q_INTERFACES Solid::Ifaces::StorageVolume FakeVolume FakeDevice device FakeVolume Q_SLOTS isIgnored const Q_DECL_OVERRIDE Solid StorageVolume UsageType usage const Q_DECL_OVERRIDE QString fsType const Q_DECL_OVERRIDE QString label const Q_DECL_OVERRIDE QString uuid const Q_DECL_OVERRIDE qulonglong size const Q_DECL_OVERRIDE QString encryptedContainerUdi const Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fdacpluggedjob.cpp</field>
    <field name="url">fdacpluggedjob_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid FDAcPluggedJob::FDAcPluggedJob QObject parent AbstractAcPluggedJob parent m_isPlugged false FDAcPluggedJob::doStart QDBusMessage msg QDBusMessage::createMethodCall QStringLiteral QStringLiteral QStringLiteral QStringLiteral msg QStringLiteral msg QStringLiteral QDBusConnection::systemBus callWithCallback msg SLOT slotDBusReply QDBusMessage SLOT slotDBusError QDBusError FDAcPluggedJob::slotDBusReply QDBusMessage msg Q_ASSERT msg arguments isEmpty m_isPlugged msg arguments first value QDBusVariant variant toBool emitResult FDAcPluggedJob::slotDBusError QDBusError error setError error type setErrorText error message emitResult FDAcPluggedJob::isPlugged m_isPlugged</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fdacpluggedjob.h</field>
    <field name="url">fdacpluggedjob_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QDBusError QDBusMessage QDBusPendingCallWatcher Solid FDAcPluggedJob AbstractAcPluggedJob Q_OBJECT FDAcPluggedJob QObject parent isPlugged const Q_DECL_OVERRIDE private Q_SLOTS doStart Q_DECL_OVERRIDE slotDBusReply const QDBusMessage msg slotDBusError const QDBusError error private m_isPlugged</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fdinhibition.cpp</field>
    <field name="url">fdinhibition_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid FdInhibition::FdInhibition Power::InhibitionTypes inhibitions QString description QObject parent AbstractInhibition parent m_state Inhibition Stopped m_description description m_inhibitions inhibitions FdInhibition::~FdInhibition close m_fd FdInhibition::start QDBusMessage msg QDBusMessage::createMethodCall QStringLiteral QStringLiteral QStringLiteral QStringLiteral QList&lt;QVariant&gt; args args LogindInhibitionArgument::fromPowerState m_inhibitions qApp applicationName m_description QStringLiteral msg setArguments args QDBusConnection::systemBus callWithCallback msg SLOT slotDBusReply QDBusMessage SLOT slotDBusError QDBusError FdInhibition::stop close m_fd setState Inhibition::Stopped FdInhibition::setDescription QString description m_description description FdInhibition::slotDBusReply QDBusMessage msg m_fd msg arguments first value QDBusUnixFileDescriptor fileDescriptor setState Inhibition::Started FdInhibition::slotDBusError QDBusError error qDebug error message FdInhibition::setState Inhibition::State state m_state state m_state state Q_EMIT stateChanged m_state Inhibition::State FdInhibition::state m_state</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fdinhibition.h</field>
    <field name="url">fdinhibition_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid FdInhibition AbstractInhibition Q_OBJECT FdInhibition Power::InhibitionTypes inhibitions QString description QObject parent FdInhibition start Q_DECL_OVERRIDE stop Q_DECL_OVERRIDE Inhibition State state const Q_DECL_OVERRIDE setDescription const QString description private Q_SLOTS slotDBusReply const QDBusMessage msg slotDBusError const QDBusError error private setState const Inhibition State state m_fd Inhibition State m_state QString m_description Power InhibitionTypes m_inhibitions</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fdinhibitionjob.cpp</field>
    <field name="url">fdinhibitionjob_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid FdInhibitionJob::FdInhibitionJob Power::InhibitionTypes inhibitions QString description QObject parent AbstractInhibitionJob parent m_inhibition new FdInhibition inhibitions description FdInhibitionJob::~FdInhibitionJob FdInhibitionJob::doStart connect m_inhibition FdInhibition::stateChanged FdInhibitionJob::stateChanged m_inhibition start FdInhibitionJob::stateChanged Inhibition::State state Q_UNUSED state disconnect m_inhibition emitResult Inhibition FdInhibitionJob::inhibition Inhibition m_inhibition</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fdinhibitionjob.h</field>
    <field name="url">fdinhibitionjob_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Inhibition FdInhibition FdInhibitionJob AbstractInhibitionJob Q_OBJECT FdInhibitionJob Power::InhibitionTypes inhibitions QString description QObject parent FdInhibitionJob Inhibition inhibition Q_DECL_OVERRIDE private Q_SLOTS doStart Q_DECL_OVERRIDE stateChanged Inhibition State state private FdInhibition m_inhibition</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fdpowernotifier.cpp</field>
    <field name="url">fdpowernotifier_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::FDPowerNotifier::FDPowerNotifier QObject parent PowerNotifier parent conn QDBusConnection::systemBus conn connect QStringLiteral QStringLiteral QStringLiteral QStringLiteral SLOT upowerPropertiesChanged QString QVariantMap QStringList conn connect QStringLiteral QStringLiteral QStringLiteral QStringLiteral SLOT login1Resuming Solid::FDPowerNotifier::upowerPropertiesChanged QString interface QVariantMap changedProperties QStringList invalidated interface QStringLiteral changedProperties contains QStringLiteral Q_EMIT acPluggedChanged changedProperties value QStringLiteral toBool invalidated isEmpty qDebug invalidated Solid::FDPowerNotifier::login1Resuming active active Q_EMIT aboutToSuspend Q_EMIT resumeFromSuspend</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fdpowernotifier.h</field>
    <field name="url">fdpowernotifier_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid FDPowerNotifier PowerNotifier Q_OBJECT FDPowerNotifier QObject parent Q_SLOTS upowerPropertiesChanged QString interface QVariantMap changedProperties QStringList invalidated login1Resuming active</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fstabdevice.cpp</field>
    <field name="url">fstabdevice_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fstab FstabDevice::FstabDevice QString uid Solid Ifaces Device m_uid uid m_device m_uid m_device remove parentUdi m_device startsWith m_product m_device mid m_device indexOf m_vendor m_device mid m_device indexOf m_product m_device left m_device indexOf m_vendor m_device mid m_device indexOf m_description m_vendor m_product FstabDevice::~FstabDevice QString FstabDevice::udi m_uid QString FstabDevice::parentUdi QString::fromLatin1 FSTAB_UDI_PREFIX QString FstabDevice::vendor m_vendor QString FstabDevice::product m_product QString FstabDevice::icon QString::fromLatin1 QStringList FstabDevice::emblems QStringList res m_storageAccess FstabDevice d FstabDevice d m_storageAccess FstabStorageAccess d m_storageAccess isAccessible res res res QString FstabDevice::description m_description FstabDevice::queryDeviceInterface Solid::DeviceInterface::Type type type Solid::DeviceInterface::StorageAccess type Solid::DeviceInterface::NetworkShare QObject FstabDevice::createDeviceInterface Solid::DeviceInterface::Type type type Solid::DeviceInterface::StorageAccess m_storageAccess m_storageAccess FstabStorageAccess m_storageAccess type Solid::DeviceInterface::NetworkShare FstabNetworkShare QString FstabDevice::device m_device FstabDevice::onMtabChanged QString device m_device device emit mtabChanged device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fstabdevice.h</field>
    <field name="url">fstabdevice_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fstab FstabDevice Solid::Ifaces::Device Q_OBJECT FstabDevice QString uid FstabDevice QString udi const Q_DECL_OVERRIDE QString parentUdi const Q_DECL_OVERRIDE QString vendor const Q_DECL_OVERRIDE QString product const Q_DECL_OVERRIDE QString icon const Q_DECL_OVERRIDE QStringList emblems const Q_DECL_OVERRIDE QString description const Q_DECL_OVERRIDE queryDeviceInterface const Solid DeviceInterface Type type const Q_DECL_OVERRIDE QObject createDeviceInterface const Solid DeviceInterface Type type Q_DECL_OVERRIDE QString device const Q_SIGNALS mtabChanged const QString device private Q_SLOTS onMtabChanged const QString device private QString m_uid QString m_device QString m_product QString m_vendor QString m_description QPointer FstabStorageAccess m_storageAccess</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fstabhandling.cpp</field>
    <field name="url">fstabhandling_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_GLOBAL_STATIC Solid::Backends::Fstab::FstabHandling globalFstabCache Solid::Backends::Fstab::FstabHandling::FstabHandling m_fstabCacheValid false m_mtabCacheValid false _k_isFstabNetworkFileSystem QString fstype QString devName fstype fstype fstype fstype devName startsWith QLatin1String Solid::Backends::Fstab::FstabHandling::_k_updateFstabMountPointsCache globalFstabCache m_fstabCacheValid globalFstabCache m_fstabCache clear FILE fstab fstab setmntent FSTAB mntent fe fe getmntent fstab _k_isFstabNetworkFileSystem fe mnt_type fe mnt_fsname QString device QFile::decodeName fe mnt_fsname QString mountpoint QFile::decodeName fe mnt_dir globalFstabCache m_fstabCache insert device mountpoint endmntent fstab QFile fstab FSTAB fstab open QIODevice::ReadOnly QTextStream stream fstab QString line stream atEnd line stream readLine simplified line isEmpty line startsWith QStringList items line split items count items count _k_isFstabNetworkFileSystem items at items at QString device items at QString mountpoint items at globalFstabCache m_fstabCache insert device mountpoint fstab close globalFstabCache m_fstabCacheValid QStringList Solid::Backends::Fstab::FstabHandling::deviceList _k_updateFstabMountPointsCache _k_updateMtabMountPointsCache QStringList devices globalFstabCache m_fstabCache keys devices globalFstabCache m_mtabCache keys devices removeDuplicates devices QStringList Solid::Backends::Fstab::FstabHandling::mountPoints QString device _k_updateFstabMountPointsCache _k_updateMtabMountPointsCache QStringList mountpoints globalFstabCache m_fstabCache values device mountpoints globalFstabCache m_mtabCache values device mountpoints removeDuplicates mountpoints QProcess Solid::Backends::Fstab::FstabHandling::callSystemCommand QString commandName QStringList args QObject obj slot QStringList env QProcess::systemEnvironment env replaceInStrings QRegExp Qt::CaseInsensitive QProcess process QProcess obj QObject::connect process SIGNAL finished QProcess::ExitStatus obj slot process setEnvironment env process start commandName args process waitForStarted process process QProcess Solid::Backends::Fstab::FstabHandling::callSystemCommand QString commandName QString device QObject obj slot callSystemCommand commandName QStringList device obj slot Solid::Backends::Fstab::FstabHandling::_k_updateMtabMountPointsCache globalFstabCache m_mtabCacheValid globalFstabCache m_mtabCache clear statvfs mounted statfs mounted num_fs getmntinfo mounted MNT_NOWAIT i i num_fs i QString type QFile::decodeName mnt_names mounted i f_type QString type QFile::decodeName mounted i f_fstypename _k_isFstabNetworkFileSystem type QString QString device QFile::decodeName mounted i f_mntfromname QString mountpoint QFile::decodeName mounted i f_mntonname globalFstabCache m_mtabCache insert device mountpoint vmount mntctl_buffer vmount vm mountedfrom mountedto fsname_len num buf_sz mntctl_buffer vmount malloc buf_sz num mntctl MCTL_QUERY buf_sz mntctl_buffer num buf_sz mntctl_buffer free mntctl_buffer mntctl_buffer vmount malloc buf_sz num mntctl MCTL_QUERY buf_sz mntctl_buffer num vm vmount mntctl_buffer num num fsname_len vmt2datasize vm VMT_STUB mountedto malloc fsname_len mountedto fsname_len strncpy mountedto vmt2dataptr vm VMT_STUB fsname_len fsname_len vmt2datasize vm VMT_OBJECT mountedfrom malloc fsname_len mountedfrom fsname_len strncpy mountedfrom vmt2dataptr vm VMT_OBJECT fsname_len vfs_ent ent getvfsbytype vm vmt_gfstype QString type QFile::decodeName ent vfsent_name _k_isFstabNetworkFileSystem type QString QString device QFile::decodeName mountedfrom QString mountpoint QFile::decodeName mountedto globalFstabCache m_mtabCache insert device mountpoint free mountedfrom free mountedto vm vmount vm vm vmt_length endvfsent free mntctl_buffer STRUCT_SETMNTENT mnttab mnttab SETMNTENT MNTTAB STRUCT_MNTENT fe GETMNTENT mnttab fe QString type QFile::decodeName MOUNTTYPE fe _k_isFstabNetworkFileSystem type QString QString device QFile::decodeName FSNAME fe QString mountpoint QFile::decodeName MOUNTPOINT fe globalFstabCache m_mtabCache insert device mountpoint ENDMNTENT mnttab globalFstabCache m_mtabCacheValid QStringList Solid::Backends::Fstab::FstabHandling::currentMountPoints QString device _k_updateMtabMountPointsCache globalFstabCache m_mtabCache values device Solid::Backends::Fstab::FstabHandling::flushMtabCache globalFstabCache m_mtabCacheValid Solid::Backends::Fstab::FstabHandling::flushFstabCache globalFstabCache m_fstabCacheValid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fstabhandling.h</field>
    <field name="url">fstabhandling_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QProcess QObject Solid Backends Fstab FstabHandling FstabHandling QStringList deviceList QStringList currentMountPoints QString device QStringList mountPoints QString device QProcess callSystemCommand QString commandName QStringList args QObject obj slot QProcess callSystemCommand QString commandName QString device QObject obj slot flushMtabCache flushFstabCache _k_updateMtabMountPointsCache _k_updateFstabMountPointsCache QMultiHash&lt;QString, QString&gt; QStringMultiHash QStringMultiHash m_mtabCache QStringMultiHash m_fstabCache m_fstabCacheValid m_mtabCacheValid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fstabmanager.cpp</field>
    <field name="url">fstabmanager_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fstab Solid::Backends::Shared FstabManager::FstabManager QObject parent Solid Ifaces DeviceManager parent m_supportedInterfaces Solid::DeviceInterface::StorageAccess m_supportedInterfaces Solid::DeviceInterface::NetworkShare m_deviceList FstabHandling::deviceList connect FstabWatcher::instance SIGNAL fstabChanged SLOT onFstabChanged connect FstabWatcher::instance SIGNAL mtabChanged SLOT onMtabChanged QString FstabManager::udiPrefix QString::fromLatin1 FSTAB_UDI_PREFIX QSet&lt;Solid::DeviceInterface::Type&gt; FstabManager::supportedInterfaces m_supportedInterfaces QStringList FstabManager::allDevices QStringList result result udiPrefix Q_FOREACH QString device m_deviceList result udiPrefix device result QStringList FstabManager::devicesFromQuery QString parentUdi Solid::DeviceInterface::Type type type Solid::DeviceInterface::StorageAccess type Solid::DeviceInterface::NetworkShare parentUdi isEmpty parentUdi udiPrefix QStringList list allDevices list removeFirst list QStringList list list parentUdi list QStringList QObject FstabManager::createDevice QString udi udi udiPrefix RootDevice root RootDevice FSTAB_UDI_PREFIX root setProduct tr root setDescription tr root setIcon root QString internalName udi mid udiPrefix length m_deviceList contains internalName QObject device FstabDevice udi connect SIGNAL mtabChanged QString device SLOT onMtabChanged QString device FstabManager::onFstabChanged FstabHandling::flushFstabCache _k_updateDeviceList FstabManager::_k_updateDeviceList QStringList deviceList FstabHandling::deviceList QSet&lt;QString&gt; newlist deviceList toSet QSet&lt;QString&gt; oldlist m_deviceList toSet Q_FOREACH QString device newlist oldlist contains device emit deviceAdded udiPrefix device Q_FOREACH QString device oldlist newlist contains device emit deviceRemoved udiPrefix device m_deviceList deviceList Q_FOREACH QString device newlist oldlist contains device emit deviceAdded udiPrefix device FstabManager::onMtabChanged FstabHandling::flushMtabCache _k_updateDeviceList Q_FOREACH QString device m_deviceList emit mtabChanged device FstabManager::~FstabManager</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fstabmanager.h</field>
    <field name="url">fstabmanager_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fstab AbstractDeviceFactory FstabManager Solid::Ifaces::DeviceManager Q_OBJECT FstabManager QObject parent FstabManager QString udiPrefix const Q_DECL_OVERRIDE QSet Solid DeviceInterface Type supportedInterfaces const Q_DECL_OVERRIDE QStringList allDevices Q_DECL_OVERRIDE QStringList devicesFromQuery const QString parentUdi Solid DeviceInterface Type type Q_DECL_OVERRIDE QObject createDevice const QString udi Q_DECL_OVERRIDE Q_SIGNALS mtabChanged const QString device private Q_SLOTS onFstabChanged onMtabChanged private QSet Solid DeviceInterface Type m_supportedInterfaces QStringList m_deviceList _k_updateDeviceList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fstabnetworkshare.cpp</field>
    <field name="url">fstabnetworkshare_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fstab FstabNetworkShare::FstabNetworkShare Solid::Backends::Fstab::FstabDevice device QObject device m_fstabDevice device QString url m_fstabDevice device startsWith m_type Solid::NetworkShare::Cifs url url m_fstabDevice device m_fstabDevice device contains m_type Solid::NetworkShare::Nfs url url m_fstabDevice product url m_fstabDevice vendor m_type Solid::NetworkShare::Unknown m_url QUrl url FstabNetworkShare::~FstabNetworkShare Solid::NetworkShare::ShareType FstabNetworkShare::type m_type QUrl FstabNetworkShare::url m_url Solid::Backends::Fstab::FstabDevice FstabNetworkShare::fstabDevice m_fstabDevice</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fstabnetworkshare.h</field>
    <field name="url">fstabnetworkshare_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fstab FstabDevice FstabNetworkShare QObject Solid::Ifaces::NetworkShare Q_OBJECT Q_INTERFACES Solid::Ifaces::NetworkShare FstabNetworkShare Solid::Backends::Fstab::FstabDevice device FstabNetworkShare Solid::NetworkShare::ShareType type const Q_DECL_OVERRIDE QUrl url const Q_DECL_OVERRIDE public const Solid Backends Fstab FstabDevice fstabDevice const private Solid Backends Fstab FstabDevice m_fstabDevice Solid NetworkShare ShareType m_type QUrl m_url</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fstabservice.h</field>
    <field name="url">fstabservice_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fstabstorageaccess.cpp</field>
    <field name="url">fstabstorageaccess_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fstab FstabStorageAccess::FstabStorageAccess Solid::Backends::Fstab::FstabDevice device QObject device m_fstabDevice device QStringList currentMountPoints FstabHandling::currentMountPoints device device currentMountPoints isEmpty QStringList mountPoints FstabHandling::mountPoints device device m_filePath mountPoints isEmpty QString mountPoints first m_isAccessible m_filePath currentMountPoints first m_isAccessible connect device SIGNAL mtabChanged QString SLOT onMtabChanged QString QTimer::singleShot SLOT connectDBusSignals FstabStorageAccess::~FstabStorageAccess FstabStorageAccess::connectDBusSignals m_fstabDevice registerAction SLOT slotSetupRequested SLOT slotSetupDone QString m_fstabDevice registerAction SLOT slotTeardownRequested SLOT slotTeardownDone QString Solid::Backends::Fstab::FstabDevice FstabStorageAccess::fstabDevice m_fstabDevice FstabStorageAccess::isAccessible m_isAccessible QString FstabStorageAccess::filePath m_filePath FstabStorageAccess::isIgnored FstabStorageAccess::setup filePath isEmpty m_fstabDevice broadcastActionRequested m_process FstabHandling::callSystemCommand filePath SLOT slotSetupFinished QProcess::ExitStatus m_process FstabStorageAccess::slotSetupRequested emit setupRequested m_fstabDevice udi FstabStorageAccess::teardown filePath isEmpty m_fstabDevice broadcastActionRequested m_process FstabHandling::callSystemCommand filePath SLOT slotTeardownFinished QProcess::ExitStatus m_process FstabStorageAccess::slotTeardownRequested emit teardownRequested m_fstabDevice udi FstabStorageAccess::slotSetupFinished exitCode QProcess::ExitStatus exitCode m_fstabDevice broadcastActionDone Solid::NoError QString m_fstabDevice broadcastActionDone Solid::UnauthorizedOperation m_process readAllStandardError m_process FstabStorageAccess::slotSetupDone error QString errorString emit setupDone static_cast&lt;Solid::ErrorType&gt; error errorString m_fstabDevice udi FstabStorageAccess::slotTeardownFinished exitCode QProcess::ExitStatus exitCode m_fstabDevice broadcastActionDone Solid::NoError QString m_fstabDevice broadcastActionDone Solid::UnauthorizedOperation m_process readAllStandardError m_process FstabStorageAccess::slotTeardownDone error QString errorString emit teardownDone static_cast&lt;Solid::ErrorType&gt; error errorString m_fstabDevice udi FstabStorageAccess::onMtabChanged QString device QStringList currentMountPoints FstabHandling::currentMountPoints device currentMountPoints isEmpty m_filePath FstabHandling::mountPoints device first m_isAccessible emit accessibilityChanged QString FSTAB_UDI_PREFIX device m_filePath currentMountPoints first m_isAccessible emit accessibilityChanged QString FSTAB_UDI_PREFIX device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fstabstorageaccess.h</field>
    <field name="url">fstabstorageaccess_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Fstab FstabDevice FstabStorageAccess QObject Solid::Ifaces::StorageAccess Q_OBJECT Q_INTERFACES Solid::Ifaces::StorageAccess FstabStorageAccess Solid::Backends::Fstab::FstabDevice device FstabStorageAccess isAccessible const Q_DECL_OVERRIDE QString filePath const Q_DECL_OVERRIDE isIgnored const Q_DECL_OVERRIDE setup Q_DECL_OVERRIDE teardown Q_DECL_OVERRIDE public const Solid Backends Fstab FstabDevice fstabDevice const Q_SIGNALS accessibilityChanged accessible const QString udi Q_DECL_OVERRIDE setupDone Solid ErrorType error QVariant data const QString udi Q_DECL_OVERRIDE teardownDone Solid ErrorType error QVariant data const QString udi Q_DECL_OVERRIDE setupRequested const QString udi Q_DECL_OVERRIDE teardownRequested const QString udi Q_DECL_OVERRIDE private Q_SLOTS slotSetupFinished exitCode QProcess ExitStatus exitStatus slotTeardownFinished exitCode QProcess ExitStatus exitStatus onMtabChanged const QString device connectDBusSignals slotSetupRequested slotSetupDone error const QString errorString slotTeardownRequested slotTeardownDone error const QString errorString private Solid Backends Fstab FstabDevice m_fstabDevice QProcess m_process QString m_filePath m_isAccessible</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fstabwatcher.cpp</field>
    <field name="url">fstabwatcher_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Fstab Q_GLOBAL_STATIC FstabWatcher globalFstabWatcher FstabWatcher::FstabWatcher m_isRoutineInstalled false m_fileSystemWatcher new QFileSystemWatcher this qApp connect qApp SIGNAL aboutToQuit SLOT orphanFileSystemWatcher m_mtabFile QFile MTAB m_mtabFile m_mtabFile symLinkTarget startsWith m_mtabFile open QIODevice::ReadOnly m_mtabSocketNotifier QSocketNotifier m_mtabFile handle QSocketNotifier::Exception connect m_mtabSocketNotifier SIGNAL activated SIGNAL mtabChanged m_fileSystemWatcher addPath MTAB m_fileSystemWatcher addPath FSTAB connect m_fileSystemWatcher SIGNAL fileChanged QString SLOT onFileChanged QString FstabWatcher::~FstabWatcher m_fileSystemWatcher setParent FstabWatcher::orphanFileSystemWatcher m_fileSystemWatcher setParent FstabWatcher FstabWatcher::instance FstabWatcher fstabWatcher globalFstabWatcher fstabWatcher fstabWatcher m_isRoutineInstalled qAddPostRoutine globalFstabWatcher destroy fstabWatcher m_isRoutineInstalled fstabWatcher globalFstabWatcher FstabWatcher::onFileChanged QString path path MTAB emit mtabChanged m_fileSystemWatcher files contains MTAB m_fileSystemWatcher addPath MTAB path FSTAB emit fstabChanged m_fileSystemWatcher files contains FSTAB m_fileSystemWatcher addPath FSTAB</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fstabwatcher.h</field>
    <field name="url">fstabwatcher_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QFileSystemWatcher QFile QSocketNotifier Solid Backends Fstab FstabWatcher QObject Q_OBJECT FstabWatcher FstabWatcher FstabWatcher instance Q_SIGNALS mtabChanged fstabChanged Q_SLOTS onFileChanged QString path orphanFileSystemWatcher m_isRoutineInstalled QFileSystemWatcher m_fileSystemWatcher QSocketNotifier m_mtabSocketNotifier QFile m_mtabFile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">genericinterface.cpp</field>
    <field name="url">frontend_2genericinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::GenericInterface::GenericInterface QObject backendObject DeviceInterface new GenericInterfacePrivate backendObject backendObject connect backendObject SIGNAL propertyChanged QMap&lt;QString,int&gt; SIGNAL propertyChanged QMap&lt;QString,int&gt; connect backendObject SIGNAL conditionRaised QString QString SIGNAL conditionRaised QString QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">genericinterface.cpp</field>
    <field name="url">frontend_2genericinterface_8cpp_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">Solid::GenericInterface::~GenericInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">genericinterface.cpp</field>
    <field name="url">frontend_2genericinterface_8cpp_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">QVariant Solid::GenericInterface::property QString key Q_D GenericInterface return_SOLID_CALL Ifaces::GenericInterface d backendObject QVariant property key</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">genericinterface.cpp</field>
    <field name="url">frontend_2genericinterface_8cpp_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">QMap&lt;QString, QVariant&gt; Solid::GenericInterface::allProperties Q_D GenericInterface return_SOLID_CALL Ifaces::GenericInterface d backendObject QVariantMap allProperties</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">genericinterface.cpp</field>
    <field name="url">frontend_2genericinterface_8cpp_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">Solid::GenericInterface::propertyExists QString key Q_D GenericInterface return_SOLID_CALL Ifaces::GenericInterface d backendObject propertyExists key</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">genericinterface.cpp</field>
    <field name="url">ifaces_2genericinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">genericinterface.cpp</field>
    <field name="url">ifaces_2genericinterface_8cpp_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::GenericInterface::~GenericInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">genericinterface.h</field>
    <field name="url">frontend_2genericinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid GenericInterfacePrivate Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">genericinterface.h</field>
    <field name="url">frontend_2genericinterface_8h_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT GenericInterface DeviceInterface Q_OBJECT Q_ENUMS PropertyChange Q_DECLARE_PRIVATE GenericInterface Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">genericinterface.h</field>
    <field name="url">frontend_2genericinterface_8h_source.html#l00060</field>
    <field name="keywords"></field>
    <field name="text">PropertyChange PropertyModified PropertyAdded PropertyRemoved GenericInterface QObject backendObject GenericInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">genericinterface.h</field>
    <field name="url">frontend_2genericinterface_8h_source.html#l00085</field>
    <field name="keywords"></field>
    <field name="text">Type deviceInterfaceType DeviceInterface::GenericInterface QVariant property QString key QMap&lt;QString, QVariant&gt; allProperties propertyExists QString key Q_SIGNALS propertyChanged QMap&lt;QString, int&gt; changes conditionRaised QString condition QString reason</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">genericinterface.h</field>
    <field name="url">ifaces_2genericinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Ifaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">genericinterface.h</field>
    <field name="url">ifaces_2genericinterface_8h_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">GenericInterface QVariant property QString key QMap&lt;QString, QVariant&gt; allProperties propertyExists QString key propertyChanged QMap&lt;QString, int&gt; changes conditionRaised QString condition QString reason Q_DECLARE_INTERFACE Solid::Ifaces::GenericInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halbattery.cpp</field>
    <field name="url">halbattery_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Hal Battery::Battery HalDevice device DeviceInterface device connect device SIGNAL propertyChanged QMap&lt;QString,int&gt; SLOT slotPropertyChanged QMap&lt;QString,int&gt; Battery::~Battery Battery::isPresent HalDevice m_device prop toBool Solid::Battery::BatteryType Battery::type QString name HalDevice m_device prop toString name Solid::Battery::PdaBattery name Solid::Battery::UpsBattery name Solid::Battery::PrimaryBattery name Solid::Battery::MouseBattery name Solid::Battery::KeyboardBattery name Solid::Battery::KeyboardMouseBattery name Solid::Battery::CameraBattery Solid::Battery::UnknownBattery Battery::chargePercent HalDevice m_device prop toInt Battery::capacity qreal lastFull HalDevice m_device prop toDouble qreal designFull HalDevice m_device prop toDouble lastFull designFull Battery::isRechargeable HalDevice m_device prop toBool Battery::isPowerSupply type Solid::Battery::PrimaryBattery type Solid::Battery::UpsBattery Solid::Battery::ChargeState Battery::chargeState charging HalDevice m_device prop toBool discharging HalDevice m_device prop toBool charging discharging Solid::Battery::NoCharge charging Solid::Battery::Charging Solid::Battery::Discharging qlonglong Battery::timeToEmpty remainingTime qlonglong Battery::timeToFull remainingTime Solid::Battery::Technology Battery::technology QString tech HalDevice m_device prop toString tech Solid::Battery::LithiumIon tech Solid::Battery::LeadAcid tech Solid::Battery::LithiumPolymer tech Solid::Battery::NickelMetalHydride tech Solid::Battery::LithiumIronPhosphate Solid::Battery::UnknownTechnology Battery::energy HalDevice m_device prop toInt Battery::energyFull HalDevice m_device prop toInt Battery::energyFullDesign HalDevice m_device prop toInt Battery::energyRate HalDevice m_device prop toInt Battery::voltage HalDevice m_device prop toInt Battery::temperature Battery::isRecalled HalDevice m_device prop toBool QString Battery::recallVendor HalDevice m_device prop toString QString Battery::recallUrl HalDevice m_device prop toString QString Battery::serial HalDevice m_device prop toString qlonglong Battery::remainingTime HalDevice m_device prop toLongLong Battery::slotPropertyChanged QMap&lt;QString, int&gt; changes changes contains emit presentStateChanged isPresent m_device udi changes contains emit chargePercentChanged chargePercent m_device udi changes contains changes contains emit capacityChanged capacity m_device udi changes contains changes contains emit chargeStateChanged chargeState m_device udi changes contains emit timeToEmptyChanged timeToEmpty m_device udi emit timeToFullChanged timeToFull m_device udi emit remainingTimeChanged remainingTime m_device udi changes contains emit energyChanged energy m_device udi changes contains emit energyFullChanged energyFull m_device udi changes contains emit energyFullDesignChanged energyFullDesign m_device udi changes contains emit energyRateChanged energyRate m_device udi changes contains emit voltageChanged voltage m_device udi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halbattery.h</field>
    <field name="url">halbattery_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Hal Battery DeviceInterface Solid::Ifaces::Battery Q_OBJECT Q_INTERFACES Solid::Ifaces::Battery Battery HalDevice device Battery isPresent Solid::Battery::BatteryType type chargePercent capacity isRechargeable isPowerSupply Solid::Battery::ChargeState chargeState qlonglong timeToEmpty qlonglong timeToFull Solid::Battery::Technology technology energy energyFull energyFullDesign energyRate voltage temperature isRecalled QString recallVendor QString recallUrl QString serial qlonglong remainingTime Q_SIGNALS presentStateChanged newState QString udi chargePercentChanged value QString udi capacityChanged value QString udi powerSupplyStateChanged newState QString udi chargeStateChanged newState QString udi timeToEmptyChanged qlonglong time QString udi timeToFullChanged qlonglong time QString udi energyChanged energy QString udi energyFullChanged energyFull QString udi energyFullDesignChanged energyFullDesign QString udi energyRateChanged energyRate QString udi voltageChanged voltage QString udi temperatureChanged temperature QString udi remainingTimeChanged qlonglong time QString udi Q_DECL_OVERRIDE Q_SLOTS slotPropertyChanged QMap&lt;QString, int&gt; changes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halblock.cpp</field>
    <field name="url">halblock_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Hal Block::Block HalDevice device DeviceInterface device Block::~Block Block::deviceMajor m_device prop toInt Block::deviceMinor m_device prop toInt QString Block::device m_device prop toString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halblock.h</field>
    <field name="url">halblock_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Hal Block DeviceInterface Solid::Ifaces::Block Q_OBJECT Q_INTERFACES Solid::Ifaces::Block Block HalDevice device Block deviceMajor deviceMinor QString device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halcamera.cpp</field>
    <field name="url">halcamera_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Hal Camera::Camera HalDevice device DeviceInterface device Camera::~Camera QStringList Camera::supportedProtocols QStringList protocols QString method m_device prop toString protocols method protocols QStringList Camera::supportedDrivers QString QStringList res m_device prop toBool res res QVariant Solid::Backends::Hal::Camera::driverHandle QString driver driver m_device prop toString QVariantList list list m_device prop m_device prop list QVariant</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halcamera.h</field>
    <field name="url">halcamera_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Hal Camera DeviceInterface Solid::Ifaces::Camera Q_OBJECT Q_INTERFACES Solid::Ifaces::Camera Camera HalDevice device Camera QStringList supportedProtocols QStringList supportedDrivers QString protocol QString QVariant driverHandle QString driver</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halcdrom.cpp</field>
    <field name="url">halcdrom_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Hal Cdrom::Cdrom HalDevice device Storage device m_ejectInProgress false connect device SIGNAL conditionRaised QString QString SLOT slotCondition QString QString m_device registerAction SLOT slotEjectRequested SLOT slotEjectDone QString Cdrom::~Cdrom Solid::OpticalDrive::MediumTypes Cdrom::supportedMedia Solid::OpticalDrive::MediumTypes supported QMap&lt;Solid::OpticalDrive::MediumType, QString&gt; map map Solid::OpticalDrive::Cdr map Solid::OpticalDrive::Cdrw map Solid::OpticalDrive::Dvd map Solid::OpticalDrive::Dvdr map Solid::OpticalDrive::Dvdrw map Solid::OpticalDrive::Dvdram map Solid::OpticalDrive::Dvdplusr map Solid::OpticalDrive::Dvdplusrw map Solid::OpticalDrive::Dvdplusdl map Solid::OpticalDrive::Dvdplusdlrw map Solid::OpticalDrive::Bd map Solid::OpticalDrive::Bdr map Solid::OpticalDrive::Bdre map Solid::OpticalDrive::HdDvd map Solid::OpticalDrive::HdDvdr map Solid::OpticalDrive::HdDvdrw Q_FOREACH Solid::OpticalDrive::MediumType type map keys m_device prop map type toBool supported type supported Cdrom::readSpeed m_device prop toInt Cdrom::writeSpeed m_device prop toInt QList&lt;int&gt; Cdrom::writeSpeeds QList&lt;int&gt; speeds QStringList speed_strlist m_device prop toStringList Q_FOREACH QString speed_str speed_strlist speeds speed_str toInt speeds Cdrom::slotCondition QString name QString name emit ejectPressed m_device udi Cdrom::eject m_ejectInProgress m_ejectInProgress m_device broadcastActionRequested FstabHandling::isInFstab m_device prop toString callSystemEject callHalDriveEject Cdrom::slotEjectRequested m_ejectInProgress emit ejectRequested m_device udi Cdrom::callHalDriveEject QString udi m_device udi QString org freedesktop Hal Device Storage m_device prop toBool QDBusInterface manager QDBusConnection::systemBus QDBusReply&lt;QStringList&gt; reply manager call udi reply isValid QStringList udis reply udis isEmpty udi udis org freedesktop Hal Device Volume QDBusConnection c QDBusConnection::systemBus QDBusMessage msg QDBusMessage::createMethodCall udi interface msg QStringList c callWithCallback msg SLOT slotDBusReply QDBusMessage SLOT slotDBusError QDBusError Solid::Backends::Hal::Cdrom::callSystemEject QString device m_device prop toString m_process FstabHandling::callSystemCommand device SLOT slotProcessFinished QProcess::ExitStatus m_process Cdrom::slotDBusReply QDBusMessage m_ejectInProgress m_device broadcastActionDone Cdrom::slotDBusError QDBusError error m_ejectInProgress m_device broadcastActionDone Solid::UnauthorizedOperation QString error name error message Solid::Backends::Hal::Cdrom::slotProcessFinished exitCode QProcess::ExitStatus exitStatus Q_UNUSED exitStatus m_ejectInProgress m_ejectInProgress exitCode m_device broadcastActionDone m_device broadcastActionDone Solid::UnauthorizedOperation m_process readAllStandardError m_process Cdrom::slotEjectDone error QString errorString m_ejectInProgress emit ejectDone static_cast&lt;Solid::ErrorType&gt; error errorString m_device udi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halcdrom.h</field>
    <field name="url">halcdrom_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Hal Cdrom Storage Solid::Ifaces::OpticalDrive Q_OBJECT Q_INTERFACES Solid::Ifaces::OpticalDrive Cdrom HalDevice device Cdrom Solid::OpticalDrive::MediumTypes supportedMedia readSpeed writeSpeed QList&lt;int&gt; writeSpeeds eject Q_SIGNALS ejectPressed QString udi ejectDone Solid::ErrorType error QVariant errorData QString udi ejectRequested QString udi Q_SLOTS slotCondition QString name QString reason slotDBusReply QDBusMessage reply slotDBusError QDBusError error slotProcessFinished exitCode QProcess::ExitStatus exitStatus slotEjectRequested slotEjectDone error QString errorString callHalDriveEject callSystemEject m_ejectInProgress QProcess m_process</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">haldevice.cpp</field>
    <field name="url">haldevice_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Hal QString formatByteSize size QString s size size size s HalDevice::tr arg QLocale toString size s HalDevice::tr arg QLocale toString size size size s HalDevice::tr arg QLocale toString size size size s HalDevice::tr arg QLocale toString size size s HalDevice::tr arg QLocale toString size s HalDevice::tr s Solid::Backends::Hal::HalDevicePrivate HalDevicePrivate QString udi device udi QDBusConnection systemBus cacheSynced false parent checkCache QString key QString QDBusInterface device QMap&lt;QString, QVariant&gt; cache QMap&lt;Solid::DeviceInterface::Type, bool&gt; capListCache QSet&lt;QString&gt; invalidKeys cacheSynced HalDevice parent Q_DECLARE_METATYPE ChangeDescription QDBusArgument operator&lt;&lt; QDBusArgument arg ChangeDescription change arg beginStructure arg change key change added change removed arg endStructure arg QDBusArgument operator&gt;&gt; QDBusArgument arg ChangeDescription change arg beginStructure arg change key change added change removed arg endStructure arg HalDevice::HalDevice QString udi Device d new HalDevicePrivate udi qDBusRegisterMetaType&lt;ChangeDescription&gt; qDBusRegisterMetaType&lt; QList&lt;ChangeDescription&gt; d device connection connect udi SLOT slotPropertyModified QList&lt;ChangeDescription&gt; d device connection connect udi SLOT slotCondition QString QString HalDevice::~HalDevice d parent d QString HalDevice::udi prop toString QString HalDevice::parentUdi prop toString QString HalDevice::vendor QString category prop toString category QLatin1String prop toString prop toString QString HalDevice::product prop toString QString HalDevice::icon QString category prop toString parentUdi isEmpty QString formfactor prop toString formfactor category category prop toString prop toString prop toString prop toBool prop toString prop toBool prop toLongLong LL category category QStringList capabilities prop toStringList capabilities contains has_video prop toBool prop toBool prop toBool has_audio prop toBool recordable prop toBool prop toBool prop toBool has_video has_audio recordable d parent d parent HalDevice parentUdi QString iconName d parent icon iconName isEmpty iconName category category QStringList capabilities prop toStringList capabilities contains capabilities contains capabilities contains capabilities contains category QStringList protocols prop toStringList protocols contains category category category QLatin1String QString QStringList HalDevice::emblems QStringList res queryDeviceInterface Solid::DeviceInterface::StorageAccess isEncrypted prop toString Hal::StorageAccess accessIface const_cast&lt;HalDevice *&gt; accessIface isAccessible isEncrypted res res isEncrypted res res res QString HalDevice::description QString category prop toString category category storageDescription category category volumeDescription category tr category tr product QVariant HalDevice::prop QString key d checkCache key d cache value key HalDevicePrivate::checkCache QString key cacheSynced key isEmpty invalidKeys isEmpty invalidKeys contains key QDBusReply&lt;QVariantMap&gt; reply device call reply isValid cache reply qWarning Q_FUNC_INFO reply error name reply error message endl cache QVariantMap invalidKeys clear cacheSynced QMap&lt;QString, QVariant&gt; HalDevice::allProperties d checkCache d cache HalDevice::propertyExists QString key d checkCache key d cache value key isValid HalDevice::queryDeviceInterface Solid::DeviceInterface::Type type type Solid::DeviceInterface::GenericInterface type Solid::DeviceInterface::StorageAccess prop toStringList contains prop toStringList contains d capListCache contains type d capListCache value type QStringList cap_list DeviceInterface::toStringList type Q_FOREACH QString cap cap_list QDBusReply&lt;bool&gt; reply d device call cap reply isValid qWarning Q_FUNC_INFO reply error name endl reply d capListCache insert type d capListCache insert type QObject HalDevice::createDeviceInterface Solid::DeviceInterface::Type type queryDeviceInterface type DeviceInterface iface type Solid::DeviceInterface::GenericInterface iface GenericInterface Solid::DeviceInterface::Processor iface Processor Solid::DeviceInterface::Block iface Block Solid::DeviceInterface::StorageAccess iface StorageAccess Solid::DeviceInterface::StorageDrive iface Storage Solid::DeviceInterface::OpticalDrive iface Cdrom Solid::DeviceInterface::StorageVolume iface Volume Solid::DeviceInterface::OpticalDisc iface OpticalDisc Solid::DeviceInterface::Camera iface Camera Solid::DeviceInterface::PortableMediaPlayer iface PortableMediaPlayer Solid::DeviceInterface::Battery iface Battery Solid::DeviceInterface::NetworkShare Solid::DeviceInterface::Unknown Solid::DeviceInterface::Last iface HalDevice::slotPropertyModified QList&lt;ChangeDescription&gt; changes QMap&lt;QString, int&gt; result Q_FOREACH ChangeDescription change changes QString key change key added change added removed change removed Solid::GenericInterface::PropertyChange type Solid::GenericInterface::PropertyModified added type Solid::GenericInterface::PropertyAdded removed type Solid::GenericInterface::PropertyRemoved result key type d cache remove key d cache isEmpty d cacheSynced d invalidKeys clear d invalidKeys insert key emit propertyChanged result HalDevice::slotCondition QString condition QString reason emit conditionRaised condition reason QString HalDevice::storageDescription QString description Storage storageDrive const_cast&lt;HalDevice *&gt; Solid::StorageDrive::DriveType drive_type storageDrive driveType drive_is_hotpluggable storageDrive isHotpluggable drive_type Solid::StorageDrive::CdromDrive Cdrom opticalDrive const_cast&lt;HalDevice *&gt; Solid::OpticalDrive::MediumTypes mediumTypes opticalDrive supportedMedia QString first QString second first tr mediumTypes Solid::OpticalDrive::Cdr first tr mediumTypes Solid::OpticalDrive::Cdrw first tr mediumTypes Solid::OpticalDrive::Dvd second tr mediumTypes Solid::OpticalDrive::Dvdplusr second tr mediumTypes Solid::OpticalDrive::Dvdplusrw second tr mediumTypes Solid::OpticalDrive::Dvdr second tr mediumTypes Solid::OpticalDrive::Dvdrw second tr mediumTypes Solid::OpticalDrive::Dvdram second tr mediumTypes Solid::OpticalDrive::Dvdr mediumTypes Solid::OpticalDrive::Dvdplusr mediumTypes Solid::OpticalDrive::Dvdplusdl second trUtf8 second trUtf8 mediumTypes Solid::OpticalDrive::Dvdrw mediumTypes Solid::OpticalDrive::Dvdplusrw mediumTypes Solid::OpticalDrive::Dvdplusdl mediumTypes Solid::OpticalDrive::Dvdplusdlrw second trUtf8 second trUtf8 mediumTypes Solid::OpticalDrive::Bd second tr mediumTypes Solid::OpticalDrive::Bdr second tr mediumTypes Solid::OpticalDrive::Bdre second tr mediumTypes Solid::OpticalDrive::HdDvd second tr mediumTypes Solid::OpticalDrive::HdDvdr second tr mediumTypes Solid::OpticalDrive::HdDvdrw second tr drive_is_hotpluggable description tr arg first arg second description tr arg first arg second description drive_type Solid::StorageDrive::Floppy drive_is_hotpluggable description tr description tr description drive_is_removable storageDrive isRemovable drive_type Solid::StorageDrive::HardDisk drive_is_removable QString size_str formatByteSize prop toInt size_str isEmpty drive_is_hotpluggable description tr arg size_str description tr arg size_str drive_is_hotpluggable description tr description tr description QString vendormodel_str QString model prop toString QString vendor prop toString vendor isEmpty model isEmpty vendormodel_str model model isEmpty vendormodel_str vendor vendormodel_str tr arg vendor arg model vendormodel_str isEmpty description tr description vendormodel_str description QString HalDevice::volumeDescription QString description QString volume_label prop toString volume_label isEmpty volume_label d parent d parent HalDevice parentUdi Storage storageDrive const_cast&lt;HalDevice *&gt; d parent Solid::StorageDrive::DriveType drive_type storageDrive driveType drive_type Solid::StorageDrive::CdromDrive OpticalDisc disc const_cast&lt;HalDevice *&gt; disc discType Solid::OpticalDisc::UnknownDiscType Solid::OpticalDisc::CdRom description tr Solid::OpticalDisc::CdRecordable disc isBlank description tr description tr Solid::OpticalDisc::CdRewritable disc isBlank description tr description tr Solid::OpticalDisc::DvdRom description tr Solid::OpticalDisc::DvdRam disc isBlank description tr description tr Solid::OpticalDisc::DvdRecordable disc isBlank description tr description tr Solid::OpticalDisc::DvdPlusRecordableDuallayer disc isBlank description tr description tr Solid::OpticalDisc::DvdRewritable disc isBlank description tr description tr Solid::OpticalDisc::DvdPlusRecordable disc isBlank description tr description tr Solid::OpticalDisc::DvdPlusRewritable disc isBlank description tr description tr Solid::OpticalDisc::DvdPlusRewritableDuallayer disc isBlank description tr description tr Solid::OpticalDisc::BluRayRom description tr Solid::OpticalDisc::BluRayRecordable disc isBlank description tr description tr Solid::OpticalDisc::BluRayRewritable disc isBlank description tr description tr Solid::OpticalDisc::HdDvdRom description tr Solid::OpticalDisc::HdDvdRecordable disc isBlank description tr description tr Solid::OpticalDisc::HdDvdRewritable disc isBlank description tr description tr disc availableContent Solid::OpticalDisc::Audio description tr description drive_is_removable storageDrive isRemovable drive_is_hotpluggable storageDrive isHotpluggable drive_is_encrypted_container prop toString QString size_str formatByteSize prop toULongLong drive_is_encrypted_container size_str isEmpty description tr arg size_str description tr drive_type Solid::StorageDrive::HardDisk drive_is_removable size_str isEmpty drive_is_hotpluggable description tr arg size_str description tr arg size_str drive_is_hotpluggable description tr description tr drive_is_removable description tr arg size_str description tr arg size_str description</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">haldevice.h</field>
    <field name="url">haldevice_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QDBusVariant Solid Backends Hal HalManager HalDevicePrivate ChangeDescription QString key added removed HalDevice Solid::Ifaces::Device Q_OBJECT HalDevice QString udi HalDevice QString udi QString parentUdi QString vendor QString product QString icon QStringList emblems QString description queryDeviceInterface Solid::DeviceInterface::Type type QObject createDeviceInterface Solid::DeviceInterface::Type type QVariant prop QString key QMap&lt;QString, QVariant&gt; allProperties propertyExists QString key Q_SIGNALS propertyChanged QMap&lt;QString, int&gt; changes conditionRaised QString condition QString reason Q_SLOTS slotPropertyModified count QList&lt;ChangeDescription&gt; changes slotCondition QString condition QString reason QString storageDescription QString volumeDescription HalDevicePrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">haldeviceinterface.cpp</field>
    <field name="url">haldeviceinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Hal DeviceInterface::DeviceInterface HalDevice device QObject device m_device device DeviceInterface::~DeviceInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">haldeviceinterface.h</field>
    <field name="url">haldeviceinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Hal DeviceInterface QObject Solid::Ifaces::DeviceInterface Q_OBJECT Q_INTERFACES Solid::Ifaces::DeviceInterface DeviceInterface HalDevice device DeviceInterface HalDevice m_device QStringList toStringList Solid::DeviceInterface::Type type QStringList list type Solid::DeviceInterface::GenericInterface Solid::DeviceInterface::Processor list Solid::DeviceInterface::Block list Solid::DeviceInterface::StorageAccess list Solid::DeviceInterface::StorageDrive list Solid::DeviceInterface::OpticalDrive list Solid::DeviceInterface::StorageVolume list Solid::DeviceInterface::OpticalDisc list Solid::DeviceInterface::Camera list Solid::DeviceInterface::PortableMediaPlayer list Solid::DeviceInterface::Battery list Solid::DeviceInterface::NetworkShare list Solid::DeviceInterface::Unknown Solid::DeviceInterface::Last list Solid::DeviceInterface::Type fromString QString capability capability Solid::DeviceInterface::Processor capability Solid::DeviceInterface::Block capability Solid::DeviceInterface::StorageDrive capability Solid::DeviceInterface::OpticalDrive capability Solid::DeviceInterface::StorageVolume capability Solid::DeviceInterface::OpticalDisc capability Solid::DeviceInterface::Camera capability Solid::DeviceInterface::PortableMediaPlayer capability Solid::DeviceInterface::Battery capability Solid::DeviceInterface::NetworkShare Solid::DeviceInterface::Unknown</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halfstabhandling.cpp</field>
    <field name="url">halfstabhandling_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QMultiHash&lt;QString, QString&gt; QStringMultiHash Q_GLOBAL_STATIC QStringMultiHash globalMountPointsCache QString _k_resolveSymLink QString filename QString resolved filename QString tmp QFile::symLinkTarget filename tmp isEmpty resolved tmp tmp QFile::symLinkTarget resolved resolved _k_isNetworkFileSystem QString fstype QString devName fstype fstype fstype fstype devName startsWith QLatin1String _k_updateMountPointsCache firstCall QTime elapsedTime firstCall firstCall elapsedTime start elapsedTime elapsed elapsedTime restart globalMountPointsCache clear FILE fstab fstab setmntent FSTAB mntent fe fe getmntent fstab _k_isNetworkFileSystem fe mnt_type fe mnt_fsname QString device _k_resolveSymLink QFile::decodeName fe mnt_fsname QString mountpoint _k_resolveSymLink QFile::decodeName fe mnt_dir globalMountPointsCache insert device mountpoint endmntent fstab QFile fstab FSTAB fstab open QIODevice::ReadOnly QTextStream stream fstab QString line stream atEnd line stream readLine simplified line isEmpty line startsWith QStringList items line split items count items count _k_isNetworkFileSystem items at items at QString device _k_resolveSymLink items at QString mountpoint _k_resolveSymLink items at globalMountPointsCache insert device mountpoint fstab close Solid::Backends::Hal::FstabHandling::isInFstab QString device _k_updateMountPointsCache QString deviceToFind _k_resolveSymLink device globalMountPointsCache contains deviceToFind QStringList Solid::Backends::Hal::FstabHandling::possibleMountPoints QString device _k_updateMountPointsCache QString deviceToFind _k_resolveSymLink device globalMountPointsCache values deviceToFind QProcess Solid::Backends::Hal::FstabHandling::callSystemCommand QString commandName QStringList args QObject obj slot QStringList env QProcess::systemEnvironment env replaceInStrings QRegExp Qt::CaseInsensitive QProcess process QProcess obj QObject::connect process SIGNAL finished QProcess::ExitStatus obj slot process setEnvironment env process start commandName args process waitForStarted process process QProcess Solid::Backends::Hal::FstabHandling::callSystemCommand QString commandName QString device QObject obj slot callSystemCommand commandName QStringList device obj slot</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halfstabhandling.h</field>
    <field name="url">halfstabhandling_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QProcess QObject Solid Backends Hal FstabHandling isInFstab QString device QStringList possibleMountPoints QString device QProcess callSystemCommand QString commandName QStringList args QObject obj slot QProcess callSystemCommand QString commandName QString device QObject obj slot</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halgenericinterface.cpp</field>
    <field name="url">halgenericinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Hal GenericInterface::GenericInterface HalDevice device DeviceInterface device connect device SIGNAL propertyChanged QMap&lt;QString,int&gt; SIGNAL propertyChanged QMap&lt;QString,int&gt; connect device SIGNAL conditionRaised QString QString SIGNAL conditionRaised QString QString GenericInterface::~GenericInterface QVariant GenericInterface::property QString key m_device prop key QMap&lt;QString, QVariant&gt; GenericInterface::allProperties m_device allProperties GenericInterface::propertyExists QString key m_device propertyExists key</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halgenericinterface.h</field>
    <field name="url">halgenericinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Hal HalDevice GenericInterface DeviceInterface Solid::Ifaces::GenericInterface Q_OBJECT Q_INTERFACES Solid::Ifaces::GenericInterface GenericInterface HalDevice device GenericInterface QVariant property QString key QMap&lt;QString, QVariant&gt; allProperties propertyExists QString key Q_SIGNALS propertyChanged QMap&lt;QString, int&gt; changes conditionRaised QString condition QString reason</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halmanager.cpp</field>
    <field name="url">halmanager_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Hal Solid::Backends::Hal::HalManagerPrivate HalManagerPrivate manager QDBusConnection systemBus cacheSynced false QDBusInterface manager QList&lt;QString&gt; devicesCache cacheSynced QSet&lt;Solid::DeviceInterface::Type&gt; supportedInterfaces HalManager::HalManager QObject parent DeviceManager parent d new HalManagerPrivate d manager connection connect SLOT slotDeviceAdded QString d manager connection connect SLOT slotDeviceRemoved QString d supportedInterfaces Solid::DeviceInterface::GenericInterface Solid::DeviceInterface::Processor Solid::DeviceInterface::Block Solid::DeviceInterface::StorageAccess Solid::DeviceInterface::StorageDrive Solid::DeviceInterface::OpticalDrive Solid::DeviceInterface::StorageVolume Solid::DeviceInterface::OpticalDisc Solid::DeviceInterface::Camera Solid::DeviceInterface::PortableMediaPlayer Solid::DeviceInterface::Battery HalManager::~HalManager d QString HalManager::udiPrefix QSet&lt;Solid::DeviceInterface::Type&gt; HalManager::supportedInterfaces d supportedInterfaces QStringList HalManager::allDevices d cacheSynced d devicesCache QDBusReply&lt;QStringList&gt; reply d manager call reply isValid qWarning Q_FUNC_INFO reply error name endl QStringList d devicesCache reply d cacheSynced reply HalManager::deviceExists QString udi d devicesCache contains udi d cacheSynced QDBusReply&lt;bool&gt; reply d manager call udi reply isValid qWarning Q_FUNC_INFO reply error name endl reply d devicesCache append udi reply QStringList HalManager::devicesFromQuery QString parentUdi Solid::DeviceInterface::Type type parentUdi isEmpty type Solid::DeviceInterface::Unknown allDevices QStringList result Q_FOREACH QString udi allDevices HalDevice device udi parentUdi isEmpty parentUdi device parentUdi type Solid::DeviceInterface::Unknown device queryDeviceInterface type result udi result QObject HalManager::createDevice QString udi deviceExists udi HalDevice udi HalManager::slotDeviceAdded QString udi d devicesCache append udi emit deviceAdded udi HalManager::slotDeviceRemoved QString udi d devicesCache removeAll udi emit deviceRemoved udi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halmanager.h</field>
    <field name="url">halmanager_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Hal HalManagerPrivate HalManager Solid::Ifaces::DeviceManager Q_OBJECT HalManager QObject parent HalManager QString udiPrefix const Q_DECL_OVERRIDE QSet Solid DeviceInterface Type supportedInterfaces const Q_DECL_OVERRIDE deviceExists const QString udi QStringList allDevices Q_DECL_OVERRIDE virtual QStringList devicesFromQuery const QString parentUdi Solid DeviceInterface Type type Q_DECL_OVERRIDE QObject createDevice const QString udi Q_DECL_OVERRIDE private Q_SLOTS slotDeviceAdded const QString udi slotDeviceRemoved const QString udi private HalManagerPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halopticaldisc.cpp</field>
    <field name="url">halopticaldisc_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Hal OpticalDisc::OpticalDisc HalDevice device Volume device OpticalDisc::~OpticalDisc Solid::OpticalDisc::ContentTypes OpticalDisc::availableContent Solid::OpticalDisc::ContentTypes content QMap&lt;Solid::OpticalDisc::ContentType, QString&gt; map map Solid::OpticalDisc::Audio map Solid::OpticalDisc::Data map Solid::OpticalDisc::VideoCd map Solid::OpticalDisc::SuperVideoCd map Solid::OpticalDisc::VideoDvd map Solid::OpticalDisc::VideoBluRay Q_FOREACH Solid::OpticalDisc::ContentType type map keys m_device prop map type toBool content type content Solid::OpticalDisc::DiscType OpticalDisc::discType QString type m_device prop toString type Solid::OpticalDisc::CdRom type Solid::OpticalDisc::CdRecordable type Solid::OpticalDisc::CdRewritable type Solid::OpticalDisc::DvdRom type Solid::OpticalDisc::DvdRam type Solid::OpticalDisc::DvdRecordable type Solid::OpticalDisc::DvdRewritable type Solid::OpticalDisc::DvdPlusRecordable type Solid::OpticalDisc::DvdPlusRewritable type Solid::OpticalDisc::DvdPlusRecordableDuallayer type Solid::OpticalDisc::DvdPlusRewritableDuallayer type Solid::OpticalDisc::BluRayRom type Solid::OpticalDisc::BluRayRecordable type Solid::OpticalDisc::BluRayRewritable type Solid::OpticalDisc::HdDvdRom type Solid::OpticalDisc::HdDvdRecordable type Solid::OpticalDisc::HdDvdRewritable Solid::OpticalDisc::UnknownDiscType OpticalDisc::isAppendable m_device prop toBool OpticalDisc::isBlank m_device prop toBool OpticalDisc::isRewritable m_device prop toBool qulonglong OpticalDisc::capacity m_device prop toULongLong</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halopticaldisc.h</field>
    <field name="url">halopticaldisc_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Hal OpticalDisc Volume Solid::Ifaces::OpticalDisc Q_OBJECT Q_INTERFACES Solid::Ifaces::OpticalDisc OpticalDisc HalDevice device OpticalDisc Solid::OpticalDisc::ContentTypes availableContent Solid::OpticalDisc::DiscType discType isAppendable isBlank isRewritable qulonglong capacity</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halportablemediaplayer.cpp</field>
    <field name="url">halportablemediaplayer_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Hal PortableMediaPlayer::PortableMediaPlayer HalDevice device DeviceInterface device PortableMediaPlayer::~PortableMediaPlayer QStringList PortableMediaPlayer::supportedProtocols m_device prop toStringList QStringList PortableMediaPlayer::supportedDrivers QString protocol QStringList drivers m_device prop toStringList protocol isNull drivers QStringList returnedDrivers QString temp i i drivers size i temp drivers at i m_device prop temp protocol returnedDrivers temp returnedDrivers QVariant PortableMediaPlayer::driverHandle QString driver driver m_device prop QVariant</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halportablemediaplayer.h</field>
    <field name="url">halportablemediaplayer_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Hal HalDevice PortableMediaPlayer DeviceInterface Solid::Ifaces::PortableMediaPlayer Q_OBJECT Q_INTERFACES Solid::Ifaces::PortableMediaPlayer PortableMediaPlayer HalDevice device PortableMediaPlayer QStringList supportedProtocols QStringList supportedDrivers QString protocol QString QVariant driverHandle QString driver</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halprocessor.cpp</field>
    <field name="url">halprocessor_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Hal Processor::Processor HalDevice device DeviceInterface device Processor::~Processor Processor::number m_device prop toInt Processor::maxSpeed m_device prop toInt Processor::canChangeFrequency m_device prop toBool Solid::Processor::InstructionSets Processor::instructionSets Solid::Processor::InstructionSets cpuextensions Solid::Backends::Shared::cpuFeatures cpuextensions</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halprocessor.h</field>
    <field name="url">halprocessor_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Hal HalDevice Processor DeviceInterface Solid::Ifaces::Processor Q_OBJECT Q_INTERFACES Solid::Ifaces::Processor Processor HalDevice device Processor number maxSpeed canChangeFrequency Solid::Processor::InstructionSets instructionSets</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halstorage.cpp</field>
    <field name="url">halstorage_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Hal Storage::Storage HalDevice device Block device Storage::~Storage Solid::StorageDrive::Bus Storage::bus QString bus m_device prop toString bus Solid::StorageDrive::Ide bus Solid::StorageDrive::Usb bus Solid::StorageDrive::Ieee1394 bus Solid::StorageDrive::Scsi bus Solid::StorageDrive::Sata Solid::StorageDrive::Platform Solid::StorageDrive::DriveType Storage::driveType QString type m_device prop toString type Solid::StorageDrive::HardDisk type Solid::StorageDrive::CdromDrive type Solid::StorageDrive::Floppy type Solid::StorageDrive::Tape type Solid::StorageDrive::CompactFlash type Solid::StorageDrive::MemoryStick type Solid::StorageDrive::SmartMedia type Solid::StorageDrive::SdMmc Solid::StorageDrive::HardDisk Storage::isRemovable m_device prop toBool Storage::isHotpluggable m_device prop toBool qulonglong Storage::size m_device prop toULongLong</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halstorage.h</field>
    <field name="url">halstorage_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Hal Storage Block Solid::Ifaces::StorageDrive Q_OBJECT Q_INTERFACES Solid::Ifaces::StorageDrive Storage HalDevice device Storage Solid::StorageDrive::Bus bus Solid::StorageDrive::DriveType driveType isRemovable isHotpluggable qulonglong size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halstorageaccess.cpp</field>
    <field name="url">halstorageaccess_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Hal StorageAccess::StorageAccess HalDevice device DeviceInterface device m_setupInProgress false m_teardownInProgress false m_ejectInProgress false m_passphraseRequested false connect device SIGNAL propertyChanged QMap&lt;QString,int&gt; SLOT slotPropertyChanged QMap&lt;QString,int&gt; QTimer::singleShot SLOT connectDBusSignals StorageAccess::~StorageAccess StorageAccess::connectDBusSignals m_device registerAction SLOT slotSetupRequested SLOT slotSetupDone QString m_device registerAction SLOT slotTeardownRequested SLOT slotTeardownDone QString m_device registerAction SLOT slotEjectRequested SLOT slotEjectDone QString StorageAccess::slotSetupDone error QString errorString m_setupInProgress emit setupDone static_cast&lt;Solid::ErrorType&gt; error errorString m_device udi StorageAccess::slotTeardownDone error QString errorString m_teardownInProgress emit teardownDone static_cast&lt;Solid::ErrorType&gt; error errorString m_device udi StorageAccess::slotEjectDone error QString errorString m_ejectInProgress emit ejectDone static_cast&lt;Solid::ErrorType&gt; error errorString m_device udi StorageAccess::isAccessible m_device prop toStringList contains QDBusInterface manager QDBusConnection::systemBus QDBusReply&lt;QStringList&gt; reply manager call m_device udi QStringList list reply reply isValid list isEmpty m_device prop toBool QString StorageAccess::filePath QString result m_device prop toString result isEmpty QStringList mountpoints FstabHandling::possibleMountPoints m_device prop toString mountpoints size result mountpoints first result StorageAccess::isIgnored HalDevice lock isLocked lock prop toBool m_device prop toBool isLocked QString mount_point StorageAccess m_device filePath mounted m_device prop toBool mounted mount_point startsWith QLatin1String mount_point startsWith QLatin1String HalDevice drive m_device prop toString Hal::GenericInterface gif drive removable gif property toBool hotpluggable gif property toBool removable hotpluggable StorageAccess::setup m_teardownInProgress m_setupInProgress isAccessible m_setupInProgress m_device broadcastActionRequested m_device prop toStringList contains requestPassphrase FstabHandling::isInFstab m_device prop toString callSystemMount callHalVolumeMount StorageAccess::teardown m_teardownInProgress m_setupInProgress isAccessible m_teardownInProgress m_device broadcastActionRequested m_device prop toStringList contains callCryptoTeardown FstabHandling::isInFstab m_device prop toString callSystemUnmount callHalVolumeUnmount StorageAccess::slotPropertyChanged QMap&lt;QString, int&gt; changes changes contains emit accessibilityChanged isAccessible m_device udi StorageAccess::slotDBusReply QDBusMessage m_setupInProgress m_setupInProgress m_device broadcastActionDone m_teardownInProgress m_teardownInProgress m_device broadcastActionDone HalDevice drive m_device prop toString drive prop toString drive prop toBool QString devnode m_device prop toString QString program QStringList args args devnode devnode remove replace QString program QStringList args args devnode QString program QStringList args args devnode m_ejectInProgress m_device broadcastActionRequested m_process FstabHandling::callSystemCommand args SLOT slotProcessFinished QProcess::ExitStatus m_ejectInProgress m_ejectInProgress m_device broadcastActionDone StorageAccess::slotDBusError QDBusError error m_setupInProgress m_setupInProgress m_device broadcastActionDone Solid::UnauthorizedOperation QString error name error message m_teardownInProgress m_teardownInProgress m_device broadcastActionDone Solid::UnauthorizedOperation QString error name error message m_ejectInProgress m_ejectInProgress m_device broadcastActionDone Solid::UnauthorizedOperation QString error name error message Solid::Backends::Hal::StorageAccess::slotProcessFinished exitCode QProcess::ExitStatus exitStatus Q_UNUSED exitStatus m_setupInProgress m_setupInProgress exitCode m_device broadcastActionDone m_device broadcastActionDone Solid::UnauthorizedOperation m_process readAllStandardError m_teardownInProgress m_teardownInProgress exitCode m_device broadcastActionDone m_device broadcastActionDone Solid::UnauthorizedOperation m_process readAllStandardError m_ejectInProgress exitCode m_ejectInProgress m_device broadcastActionDone callHalVolumeEject m_process StorageAccess::slotSetupRequested m_setupInProgress emit setupRequested m_device udi StorageAccess::slotTeardownRequested m_teardownInProgress emit teardownRequested m_device udi StorageAccess::slotEjectRequested m_ejectInProgress QString generateReturnObjectPath number QString::number number StorageAccess::requestPassphrase QString udi m_device udi QString returnService QDBusConnection::sessionBus baseService m_lastReturnObject generateReturnObjectPath QDBusConnection::sessionBus registerObject m_lastReturnObject QDBusConnection::ExportScriptableSlots QWidget activeWindow QApplication::activeWindow uint wId activeWindow wId uint activeWindow winId QString appId QCoreApplication::applicationName QDBusInterface soliduiserver QDBusReply&lt;void&gt; reply soliduiserver call udi returnService m_lastReturnObject wId appId m_passphraseRequested reply isValid m_passphraseRequested qWarning reply error m_passphraseRequested StorageAccess::passphraseReply QString passphrase m_passphraseRequested QDBusConnection::sessionBus unregisterObject m_lastReturnObject m_passphraseRequested passphrase isEmpty callCryptoSetup passphrase m_setupInProgress m_device broadcastActionDone StorageAccess::callHalVolumeMount QDBusConnection c QDBusConnection::systemBus QString udi m_device udi QDBusMessage msg QDBusMessage::createMethodCall udi QString fstype m_device prop toString QStringList halOptions m_device prop toStringList QString alternativePreferred m_device prop toString alternativePreferred isEmpty QStringList alternativeFstypes m_device prop toStringList alternativeFstypes contains alternativePreferred fstype alternativePreferred halOptions m_device prop fstype toStringList QStringList options QString uid QString uid halOptions contains uid options uid QString::number getuid cType fstype halOptions contains cType getenv cType getenv cType getenv options QString cType fstype startsWith QLatin1String fstype fstype halOptions contains cType getenv cType getenv cType getenv options QString nl_langinfo CODESET fstype fstype fstype fstype halOptions contains options halOptions contains options halOptions contains options halOptions contains options halOptions contains cType cType getenv cType getenv cType getenv options QString cType msg fstype options c callWithCallback msg SLOT slotDBusReply QDBusMessage SLOT slotDBusError QDBusError StorageAccess::callHalVolumeUnmount QDBusConnection c QDBusConnection::systemBus QString udi m_device udi QDBusMessage msg QDBusMessage::createMethodCall udi msg QStringList c callWithCallback msg SLOT slotDBusReply QDBusMessage SLOT slotDBusError QDBusError StorageAccess::callHalVolumeEject QString udi m_device udi QString org freedesktop Hal Device Volume QDBusConnection c QDBusConnection::systemBus QDBusMessage msg QDBusMessage::createMethodCall udi interface msg QStringList c callWithCallback msg SLOT slotDBusReply QDBusMessage SLOT slotDBusError QDBusError Solid::Backends::Hal::StorageAccess::callSystemMount QString device m_device prop toString m_process FstabHandling::callSystemCommand device SLOT slotProcessFinished QProcess::ExitStatus m_process Solid::Backends::Hal::StorageAccess::callSystemUnmount QString device m_device prop toString m_process FstabHandling::callSystemCommand device SLOT slotProcessFinished QProcess::ExitStatus m_process StorageAccess::callCryptoSetup QString passphrase QDBusConnection c QDBusConnection::systemBus QString udi m_device udi QDBusMessage msg QDBusMessage::createMethodCall udi msg passphrase c callWithCallback msg SLOT slotDBusReply QDBusMessage SLOT slotDBusError QDBusError StorageAccess::callCryptoTeardown QDBusConnection c QDBusConnection::systemBus QString udi m_device udi QDBusMessage msg QDBusMessage::createMethodCall udi c callWithCallback msg SLOT slotDBusReply QDBusMessage SLOT slotDBusError QDBusError</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halstorageaccess.h</field>
    <field name="url">halstorageaccess_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Hal StorageAccess DeviceInterface Solid::Ifaces::StorageAccess Q_OBJECT Q_INTERFACES Solid::Ifaces::StorageAccess StorageAccess HalDevice device StorageAccess isAccessible QString filePath isIgnored setup teardown Q_SIGNALS accessibilityChanged accessible QString udi setupDone Solid::ErrorType error QVariant errorData QString udi teardownDone Solid::ErrorType error QVariant errorData QString udi ejectDone Solid::ErrorType error QVariant errorData QString udi setupRequested QString udi teardownRequested QString udi Q_SLOTS connectDBusSignals slotPropertyChanged QMap&lt;QString, int&gt; changes slotDBusReply QDBusMessage reply slotDBusError QDBusError error slotProcessFinished exitCode QProcess::ExitStatus exitStatus slotSetupRequested slotTeardownRequested slotEjectRequested slotSetupDone error QString errorString slotTeardownDone error QString errorString slotEjectDone error QString errorString Q_SLOTS Q_SCRIPTABLE Q_NOREPLY passphraseReply QString passphrase callHalVolumeMount callHalVolumeUnmount callHalVolumeEject callSystemMount callSystemUnmount requestPassphrase callCryptoSetup QString passphrase callCryptoTeardown m_setupInProgress m_teardownInProgress m_ejectInProgress m_passphraseRequested QString m_lastReturnObject QProcess m_process</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halvolume.cpp</field>
    <field name="url">halvolume_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Hal Volume::Volume HalDevice device Block device Volume::~Volume Volume::isIgnored HalDevice lock isLocked lock prop toBool m_device prop toBool isLocked QString mount_point StorageAccess m_device filePath mounted m_device prop toBool mounted mount_point startsWith QLatin1String mount_point startsWith QLatin1String HalDevice drive m_device prop toString Hal::GenericInterface gif drive removable gif property toBool hotpluggable gif property toBool removable hotpluggable Solid::StorageVolume::UsageType Volume::usage QString usage m_device prop toString usage Solid::StorageVolume::FileSystem usage Solid::StorageVolume::PartitionTable usage Solid::StorageVolume::Raid usage Solid::StorageVolume::Encrypted usage Solid::StorageVolume::Unused Solid::StorageVolume::Other QString Volume::fsType m_device prop toString QString Volume::label m_device prop toString QString Volume::uuid m_device prop toString qulonglong Volume::size m_device prop toULongLong QString Solid::Backends::Hal::Volume::encryptedContainerUdi m_device prop toString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">halvolume.h</field>
    <field name="url">halvolume_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Hal Volume Block Solid::Ifaces::StorageVolume Q_OBJECT Q_INTERFACES Solid::Ifaces::StorageVolume Volume HalDevice device Volume isIgnored Solid::StorageVolume::UsageType usage QString fsType QString label QString uuid qulonglong size QString encryptedContainerUdi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">inhibition.cpp</field>
    <field name="url">inhibition_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Solid::InhibitionPrivate AbstractInhibition backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">inhibition.cpp</field>
    <field name="url">inhibition_8cpp_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">Inhibition::Inhibition AbstractInhibition backend QObject parent QObject parent d_ptr new InhibitionPrivate d_ptr backendObject backend connect d_ptr backendObject AbstractInhibition::stateChanged Inhibition::stateChanged Inhibition::~Inhibition d_ptr backendObject d_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">inhibition.cpp</field>
    <field name="url">inhibition_8cpp_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">Inhibition::start d_ptr backendObject start</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">inhibition.cpp</field>
    <field name="url">inhibition_8cpp_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">Inhibition::stop d_ptr backendObject stop Inhibition::State Inhibition::state d_ptr backendObject state</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">inhibition.h</field>
    <field name="url">inhibition_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid InhibitionPrivate AbstractInhibition</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">inhibition.h</field>
    <field name="url">inhibition_8h_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT Inhibition QObject Q_OBJECT Q_ENUMS State Q_PROPERTY State state READ state NOTIFY stateChanged State Stopped Started Inhibition AbstractInhibition backend QObject parent Inhibition State state Q_SLOTS stop start InhibitionPrivate d_ptr Q_SIGNALS stateChanged Inhibition::State newState Q_DECLARE_METATYPE Solid::Inhibition::State</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">inhibitionjob.cpp</field>
    <field name="url">inhibitionjob_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid InhibitionJobPrivate::InhibitionJobPrivate inhibitions Power None inhibition Q_NULLPTR backendJob Q_NULLPTR InhibitionJob::InhibitionJob QObject parent Job new InhibitionJobPrivate parent Inhibition InhibitionJob::inhibition Q_ASSERT_X d_func inhibition d_func inhibition d_func inhibition qWarning Q_NULLPTR InhibitionJob::doStart Q_D InhibitionJob d inhibitions setError InvalidInhibitions emitResult d description isEmpty setError EmptyDescription emitResult d backendJob PowerBackendLoader::addInhibitionJob d inhibitions d description connect d backendJob AbstractInhibitionJob::result d d backendJob start InhibitionJob::setInhibitions Power::InhibitionTypes inhibitions Q_D InhibitionJob d inhibitions inhibitions Power::InhibitionTypes InhibitionJob::inhibitions d_func inhibitions InhibitionJob::setDescription QString description Q_D InhibitionJob d description description QString InhibitionJob::description d_func description</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">inhibitionjob.h</field>
    <field name="url">inhibitionjob_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Inhibition InhibitionJobPrivate SOLID_EXPORT InhibitionJob Job Q_OBJECT Q_ENUMS Error Error InvalidInhibitions Job::UserDefinedError EmptyDescription InhibitionJob QObject parent setInhibitions Power::InhibitionTypes inhibitions Power::InhibitionTypes inhibitions setDescription QString description QString description Inhibition inhibition Q_SLOTS doStart Q_DECL_OVERRIDE Q_SIGNALS result Solid Job private Q_DECLARE_PRIVATE InhibitionJob</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">iokitbattery.cpp</field>
    <field name="url">iokitbattery_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::IOKit Battery::Battery IOKitDevice device DeviceInterface device Battery::~Battery Battery::isPresent m_device property QLatin1String toBool Solid::Battery::BatteryType Battery::type Solid::Battery::UnknownBattery Battery::chargePercent m_device property QLatin1String toBool maxCapacity m_device property QLatin1String toInt maxCapacity m_device property QLatin1String toInt maxCapacity Battery::capacity Battery::isRechargeable m_device property QLatin1String toInt Battery::isPowerSupply Solid::Battery::ChargeState Battery::chargeState m_device property QLatin1String toBool Solid::Battery::Charging m_device property QLatin1String toBool Solid::Battery::NoCharge Solid::Battery::Discharging</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">iokitbattery.h</field>
    <field name="url">iokitbattery_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends IOKit IOKitDevice Battery DeviceInterface Solid::Ifaces::Battery Q_OBJECT Q_INTERFACES Solid::Ifaces::Battery Battery IOKitDevice device Battery isPresent Solid::Battery::BatteryType type chargePercent capacity isRechargeable isPowerSupply Solid::Battery::ChargeState chargeState qlonglong timeToEmpty qlonglong timeToFull Solid::Battery::Technology technology Solid::Battery::UnknownTechnology energy energyFull energyFullDesign energyRate voltage temperature isRecalled QString recallVendor QString QString recallUrl QString QString serial QString qlonglong remainingTime Q_SIGNALS energyChanged energy QString udi energyFullChanged energyFull QString udi energyFullDesignChanged energyFullDesign QString udi energyRateChanged energyRate QString udi chargePercentChanged value QString udi capacityChanged value QString udi chargeStateChanged newState QString udi presentStateChanged newState QString udi powerSupplyStateChanged newState QString udi timeToEmptyChanged qlonglong time QString udi timeToFullChanged qlonglong time QString udi temperatureChanged temperature QString udi voltageChanged voltage QString udi remainingTimeChanged qlonglong time QString udi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">iokitdevice.cpp</field>
    <field name="url">iokitdevice_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QMap&lt;QString, QVariant&gt; q_toVariantMap CFMutableDictionaryRef dict Solid Backends IOKit Solid::DeviceInterface::Type typeFromEntry io_registry_entry_t entry QMap&lt;QString, QVariant&gt; properties IOObjectConformsTo entry Solid::DeviceInterface::Processor IOObjectConformsTo entry Solid::DeviceInterface::Battery Solid::DeviceInterface::Unknown QMap&lt;QString, QVariant&gt; getProperties io_registry_entry_t entry CFMutableDictionaryRef propertyDict IORegistryEntryCreateCFProperties entry propertyDict kCFAllocatorDefault kNilOptions KERN_SUCCESS QMap&lt;QString, QVariant&gt; QMap&lt;QString, QVariant&gt; result q_toVariantMap propertyDict CFRelease propertyDict result QString getParentDeviceUdi io_registry_entry_t entry io_registry_entry_t parent kern_return_t ret IORegistryEntryGetParentEntry entry kIOServicePlane parent ret KERN_SUCCESS QString QString result io_string_t pathName ret IORegistryEntryGetPath parent kIOServicePlane pathName ret KERN_SUCCESS result QString::fromUtf8 pathName IOObjectRelease parent result IOKitDevicePrivate IOKitDevicePrivate type Solid DeviceInterface Unknown init QString udiString io_registry_entry_t entry QString udi QString parentUdi QMap&lt;QString, QVariant&gt; properties Solid::DeviceInterface::Type type IOKitDevicePrivate::init QString udiString io_registry_entry_t entry Q_ASSERT entry MACH_PORT_NULL udi udiString properties getProperties entry io_name_t className IOObjectGetClass entry className properties QString::fromUtf8 className parentUdi getParentDeviceUdi entry type typeFromEntry entry properties IOObjectRelease entry IOKitDevice::IOKitDevice QString udi io_registry_entry_t entry d new IOKitDevicePrivate d init udi entry IOKitDevice::IOKitDevice QString udi d new IOKitDevicePrivate io_registry_entry_t entry IORegistryEntryFromPath kIOMasterPortDefault udi toLocal8Bit constData entry MACH_PORT_NULL qDebug Q_FUNC_INFO udi d init udi entry IOKitDevice::~IOKitDevice d QString IOKitDevice::udi d udi QString IOKitDevice::parentUdi d parentUdi QString IOKitDevice::vendor QString QString IOKitDevice::product QString QString IOKitDevice::icon QString QStringList IOKitDevice::emblems QStringList QString IOKitDevice::description product QVariant IOKitDevice::property QString key d properties value key QMap&lt;QString, QVariant&gt; IOKitDevice::allProperties d properties IOKitDevice::propertyExists QString key d properties contains key IOKitDevice::queryDeviceInterface Solid::DeviceInterface::Type type type Solid::DeviceInterface::GenericInterface type d type QObject IOKitDevice::createDeviceInterface Solid::DeviceInterface::Type type QObject iface type Solid::DeviceInterface::GenericInterface iface GenericInterface Solid::DeviceInterface::Processor d type Solid::DeviceInterface::Processor iface Processor Solid::DeviceInterface::Battery d type Solid::DeviceInterface::Battery iface Battery iface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">iokitdevice.h</field>
    <field name="url">iokitdevice_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends IOKit IOKitDevicePrivate IOKitManager IOKitDevice Solid::Ifaces::Device Q_OBJECT IOKitDevice QString udi IOKitDevice QString udi QString parentUdi QString vendor QString product QString icon QStringList emblems QString description QVariant property QString key QMap&lt;QString, QVariant&gt; allProperties propertyExists QString key queryDeviceInterface Solid::DeviceInterface::Type type QObject createDeviceInterface Solid::DeviceInterface::Type type Q_SIGNALS propertyChanged QMap&lt;QString, int&gt; changes conditionRaised QString condition QString reason IOKitManager IOKitDevice QString udi io_registry_entry_t entry IOKitDevicePrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">iokitdeviceinterface.cpp</field>
    <field name="url">iokitdeviceinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::IOKit DeviceInterface::DeviceInterface IOKitDevice device QObject device m_device device DeviceInterface::~DeviceInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">iokitdeviceinterface.h</field>
    <field name="url">iokitdeviceinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends IOKit DeviceInterface QObject Solid::Ifaces::DeviceInterface Q_OBJECT Q_INTERFACES Solid::Ifaces::DeviceInterface DeviceInterface IOKitDevice device DeviceInterface IOKitDevice m_device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">iokitgenericinterface.cpp</field>
    <field name="url">iokitgenericinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::IOKit GenericInterface::GenericInterface IOKitDevice device DeviceInterface device GenericInterface::~GenericInterface QVariant GenericInterface::property QString key m_device property key QMap&lt;QString, QVariant&gt; GenericInterface::allProperties m_device allProperties GenericInterface::propertyExists QString key m_device propertyExists key</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">iokitgenericinterface.h</field>
    <field name="url">iokitgenericinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends IOKit IOKitDevice GenericInterface DeviceInterface Solid::Ifaces::GenericInterface Q_OBJECT Q_INTERFACES Solid::Ifaces::GenericInterface GenericInterface IOKitDevice device GenericInterface QVariant property QString key QMap&lt;QString, QVariant&gt; allProperties propertyExists QString key Q_SIGNALS propertyChanged QMap&lt;QString, int&gt; changes conditionRaised QString condition QString reason</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">iokitmanager.cpp</field>
    <field name="url">iokitmanager_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends IOKit IOKitManagerPrivate IOKitManagerPrivate port source IONotificationPortRef port CFRunLoopSourceRef source typeToName Solid::DeviceInterface::Type type QStringList devicesFromRegistry io_iterator_t it QSet&lt;Solid::DeviceInterface::Type&gt; supportedInterfaces QStringList IOKitManagerPrivate::devicesFromRegistry io_iterator_t it QStringList result io_object_t obj io_string_t pathName obj IOIteratorNext it kern_return_t ret IORegistryEntryGetPath obj kIOServicePlane pathName ret KERN_SUCCESS qWarning Q_FUNC_INFO result QString::fromUtf8 pathName ret IOObjectRelease obj ret KERN_SUCCESS qDebug Q_FUNC_INFO IOObjectRelease it result IOKitManagerPrivate::typeToName Solid::DeviceInterface::Type type type Solid::DeviceInterface::Unknown Solid::DeviceInterface::Processor Solid::DeviceInterface::Battery IOKitManager::IOKitManager QObject parent Solid Ifaces DeviceManager parent d new IOKitManagerPrivate d port IONotificationPortCreate kIOMasterPortDefault d port qWarning Q_FUNC_INFO d source IONotificationPortGetRunLoopSource d port d source qWarning Q_FUNC_INFO CFRunLoopAddSource CFRunLoopGetCurrent d source kCFRunLoopDefaultMode d supportedInterfaces Solid::DeviceInterface::GenericInterface Solid::DeviceInterface::Processor Solid::DeviceInterface::Block Solid::DeviceInterface::StorageAccess Solid::DeviceInterface::StorageDrive Solid::DeviceInterface::OpticalDrive Solid::DeviceInterface::StorageVolume Solid::DeviceInterface::OpticalDisc Solid::DeviceInterface::Camera Solid::DeviceInterface::PortableMediaPlayer Solid::DeviceInterface::Battery IOKitManager::~IOKitManager d source CFRunLoopRemoveSource CFRunLoopGetCurrent d source kCFRunLoopDefaultMode d port IONotificationPortDestroy d port d QString IOKitManager::udiPrefix QString QSet&lt;Solid::DeviceInterface::Type&gt; IOKitManager::supportedInterfaces d supportedInterfaces QStringList IOKitManager::allDevices io_iterator_t it kern_return_t ret IORegistryCreateIterator kIOMasterPortDefault kIOServicePlane kIORegistryIterateRecursively it ret KERN_SUCCESS qWarning Q_FUNC_INFO QStringList IOKitManagerPrivate::devicesFromRegistry it QStringList IOKitManager::devicesFromQuery QString parentUdi Solid::DeviceInterface::Type type QStringList result type Solid::DeviceInterface::Unknown result allDevices deviceClassName IOKitManagerPrivate::typeToName type deviceClassName QStringList CFMutableDictionaryRef matchingDict IOServiceMatching deviceClassName matchingDict QStringList io_iterator_t it kern_return_t ret IOServiceGetMatchingServices kIOMasterPortDefault matchingDict it result IOKitManagerPrivate::devicesFromRegistry it parentUdi isEmpty result QStringList filtered Q_FOREACH QString udi result udi startsWith parentUdi filtered udi filtered QObject IOKitManager::createDevice QString udi io_registry_entry_t entry IORegistryEntryFromPath kIOMasterPortDefault udi toLocal8Bit constData entry MACH_PORT_NULL IOKitDevice udi entry</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">iokitmanager.h</field>
    <field name="url">iokitmanager_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends IOKit IOKitManagerPrivate IOKitManager Solid::Ifaces::DeviceManager Q_OBJECT IOKitManager QObject parent IOKitManager QString udiPrefix QSet&lt;Solid::DeviceInterface::Type&gt; supportedInterfaces QStringList allDevices QStringList devicesFromQuery QString parentUdi Solid::DeviceInterface::Type type QObject createDevice QString udi IOKitManagerPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">iokitprocessor.cpp</field>
    <field name="url">iokitprocessor_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::IOKit Processor::Processor IOKitDevice device DeviceInterface device Processor::~Processor Processor::number m_device property QLatin1String toInt Processor::maxSpeed Processor::canChangeFrequency Solid::Processor::InstructionSets Processor::instructionSets</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">iokitprocessor.h</field>
    <field name="url">iokitprocessor_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends IOKit IOKitDevice Processor DeviceInterface Solid::Ifaces::Processor Q_OBJECT Q_INTERFACES Solid::Ifaces::Processor Processor IOKitDevice device Processor number maxSpeed canChangeFrequency Solid::Processor::InstructionSets instructionSets</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">job.cpp</field>
    <field name="url">job_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid JobPrivate::JobPrivate eventLoop error Job::NoError Job::Job QObject parent QObject parent d_ptr new JobPrivate d_ptr q_ptr Job::~Job d_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">job.cpp</field>
    <field name="url">job_8cpp_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">Job::start QMetaObject::invokeMethod Qt::QueuedConnection</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">job.cpp</field>
    <field name="url">job_8cpp_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">Job::emitResult Q_D Job d eventLoop d eventLoop quit Q_EMIT result deleteLater Job::error d_func error QString Job::errorText d_func errorText</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">job.cpp</field>
    <field name="url">job_8cpp_source.html#l00069</field>
    <field name="keywords"></field>
    <field name="text">Job::setError errorCode d_func error errorCode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">job.cpp</field>
    <field name="url">job_8cpp_source.html#l00074</field>
    <field name="keywords"></field>
    <field name="text">Job::setErrorText QString errorText d_func errorText errorText</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">job.cpp</field>
    <field name="url">job_8cpp_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text">Job::exec Q_D Job Q_ASSERT d eventLoop QEventLoop loop d eventLoop loop start d eventLoop exec QEventLoop::ExcludeUserInputEvents d error NoError Job::Job JobPrivate dd QObject parent QObject parent d_ptr dd</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">job.h</field>
    <field name="url">job_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid JobPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">job.h</field>
    <field name="url">job_8h_source.html#l00050</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT Job QObject Q_OBJECT Q_ENUMS Error Q_PROPERTY error READ error NOTIFY result Q_PROPERTY QString errorText READ errorText NOTIFY result Job QObject parent Job</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">job.h</field>
    <field name="url">job_8h_source.html#l00061</field>
    <field name="keywords"></field>
    <field name="text">Error</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">job.h</field>
    <field name="url">job_8h_source.html#l00063</field>
    <field name="keywords"></field>
    <field name="text">NoError</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">job.h</field>
    <field name="url">job_8h_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">UserDefinedError exec error QString errorText Q_SLOTS start Q_SLOTS doStart setError errorCode setErrorText QString errorText emitResult JobPrivate d_ptr Job JobPrivate dd QObject parent Q_DECLARE_PRIVATE Job Q_SIGNALS result Solid::Job job Q_DECLARE_METATYPE Solid::Job::Error</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">logindinhibitionargument.cpp</field>
    <field name="url">logindinhibitionargument_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid QString LogindInhibitionArgument::fromPowerState Power::InhibitionTypes states QStringList args states Power::Sleep args QStringLiteral states Power::Shutdown args QStringLiteral args join QChar</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">logindinhibitionargument.h</field>
    <field name="url">logindinhibitionargument_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid LogindInhibitionArgument QString fromPowerState Power::InhibitionTypes states</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">main.cpp</field>
    <field name="url">main_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QTextStream sOut stdout main argc argv qputenv QCoreApplication app argc argv app setApplicationName QLatin1Literal QCommandLineParser parser parser setApplicationDescription QCoreApplication::translate parser addHelpOption parser addPositionalArgument QCoreApplication::translate QCommandLineOption commands QCoreApplication::translate parser addOption commands parser process app parser isSet commands sOut endl QCoreApplication::translate endl endl sOut endl sOut QCoreApplication::translate endl SolidPower power QStringList args parser positionalArguments args count parser showHelp parser clearPositionalArguments QString command args at command QLatin1String power show command QLatin1String sOut endl power listen app exec sOut endl</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">manager.cpp</field>
    <field name="url">manager_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">OrgFreedesktopDBusObjectManagerInterface::OrgFreedesktopDBusObjectManagerInterface QString service QString path QDBusConnection connection QObject parent QDBusAbstractInterface service path staticInterfaceName connection parent OrgFreedesktopDBusObjectManagerInterface::~OrgFreedesktopDBusObjectManagerInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">manager.h</field>
    <field name="url">manager_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">OrgFreedesktopDBusObjectManagerInterface QDBusAbstractInterface Q_OBJECT staticInterfaceName OrgFreedesktopDBusObjectManagerInterface QString service QString path QDBusConnection connection QObject parent OrgFreedesktopDBusObjectManagerInterface Q_SLOTS QDBusPendingReply&lt;DBUSManagerStruct&gt; GetManagedObjects QList&lt;QVariant&gt; argumentList asyncCallWithArgumentList QLatin1String argumentList Q_SIGNALS InterfacesAdded QDBusObjectPath object_path VariantMapMap interfaces_and_properties InterfacesRemoved QDBusObjectPath object_path QStringList interfaces org freedesktop DBus typedef ::OrgFreedesktopDBusObjectManagerInterface ObjectManager</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">managerbase.cpp</field>
    <field name="url">managerbase_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::ManagerBasePrivate::ManagerBasePrivate Solid::ManagerBasePrivate::~ManagerBasePrivate qDeleteAll m_backends Solid::ManagerBasePrivate::loadBackends QString solidFakeXml QString::fromLocal8Bit qgetenv solidFakeXml isEmpty m_backends Solid::Backends::Fake::FakeManager solidFakeXml m_backends Solid::Backends::IOKit::IOKitManager m_backends Solid::Backends::UPower::UPowerManager Solid::Backends::Hal::HalManager Solid::Backends::Fstab::FstabManager m_backends Solid::Backends::Win::WinDeviceManager m_backends Solid::Backends::Hal::HalManager m_backends Solid::Backends::UDev::UDevManager m_backends Solid::Backends::UDisks2::Manager m_backends Solid::Backends::UPower::UPowerManager Solid::Backends::Fstab::FstabManager QList&lt;QObject *&gt; Solid::ManagerBasePrivate::managerBackends m_backends</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">networkshare.cpp</field>
    <field name="url">frontend_2networkshare_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::NetworkShare::NetworkShare QObject backendObject DeviceInterface new NetworkSharePrivate backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">networkshare.cpp</field>
    <field name="url">frontend_2networkshare_8cpp_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">Solid::NetworkShare::~NetworkShare Solid::NetworkShare::ShareType Solid::NetworkShare::type Q_D NetworkShare return_SOLID_CALL Ifaces::NetworkShare d backendObject Solid::NetworkShare::Unknown type QUrl Solid::NetworkShare::url Q_D NetworkShare return_SOLID_CALL Ifaces::NetworkShare d backendObject QUrl url</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">networkshare.cpp</field>
    <field name="url">ifaces_2networkshare_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">networkshare.cpp</field>
    <field name="url">ifaces_2networkshare_8cpp_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::NetworkShare::~NetworkShare</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">networkshare.h</field>
    <field name="url">frontend_2networkshare_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Device NetworkSharePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">networkshare.h</field>
    <field name="url">frontend_2networkshare_8h_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT NetworkShare DeviceInterface Q_OBJECT Q_ENUMS ShareType Q_PROPERTY ShareType type READ type Q_PROPERTY QUrl url READ url Q_DECLARE_PRIVATE NetworkShare Device NetworkShare QObject backendObject NetworkShare</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">networkshare.h</field>
    <field name="url">frontend_2networkshare_8h_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text">ShareType Unknown Nfs Cifs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">networkshare.h</field>
    <field name="url">frontend_2networkshare_8h_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text">Type deviceInterfaceType DeviceInterface::NetworkShare ShareType type QUrl url</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">networkshare.h</field>
    <field name="url">ifaces_2networkshare_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Ifaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">networkshare.h</field>
    <field name="url">ifaces_2networkshare_8h_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">NetworkShare DeviceInterface Solid::NetworkShare::ShareType type QUrl url Q_DECLARE_INTERFACE Solid::Ifaces::NetworkShare</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldisc.cpp</field>
    <field name="url">frontend_2opticaldisc_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::OpticalDisc::OpticalDisc QObject backendObject StorageVolume new OpticalDiscPrivate backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldisc.cpp</field>
    <field name="url">frontend_2opticaldisc_8cpp_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">Solid::OpticalDisc::~OpticalDisc Solid::OpticalDisc::ContentTypes Solid::OpticalDisc::availableContent Q_D OpticalDisc return_SOLID_CALL Ifaces::OpticalDisc d backendObject ContentTypes availableContent Solid::OpticalDisc::DiscType Solid::OpticalDisc::discType Q_D OpticalDisc return_SOLID_CALL Ifaces::OpticalDisc d backendObject UnknownDiscType discType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldisc.cpp</field>
    <field name="url">frontend_2opticaldisc_8cpp_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">Solid::OpticalDisc::isAppendable Q_D OpticalDisc return_SOLID_CALL Ifaces::OpticalDisc d backendObject isAppendable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldisc.cpp</field>
    <field name="url">frontend_2opticaldisc_8cpp_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">Solid::OpticalDisc::isBlank Q_D OpticalDisc return_SOLID_CALL Ifaces::OpticalDisc d backendObject isBlank</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldisc.cpp</field>
    <field name="url">frontend_2opticaldisc_8cpp_source.html#l00061</field>
    <field name="keywords"></field>
    <field name="text">Solid::OpticalDisc::isRewritable Q_D OpticalDisc return_SOLID_CALL Ifaces::OpticalDisc d backendObject isRewritable qulonglong Solid::OpticalDisc::capacity Q_D OpticalDisc return_SOLID_CALL Ifaces::OpticalDisc d backendObject capacity</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldisc.cpp</field>
    <field name="url">ifaces_2opticaldisc_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldisc.cpp</field>
    <field name="url">ifaces_2opticaldisc_8cpp_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::OpticalDisc::~OpticalDisc</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldisc.h</field>
    <field name="url">frontend_2opticaldisc_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid OpticalDiscPrivate Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldisc.h</field>
    <field name="url">frontend_2opticaldisc_8h_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT OpticalDisc StorageVolume Q_OBJECT Q_ENUMS ContentType DiscType Q_FLAGS ContentTypes Q_PROPERTY ContentTypes availableContent READ availableContent Q_PROPERTY DiscType discType READ discType Q_PROPERTY appendable READ isAppendable Q_PROPERTY blank READ isBlank Q_PROPERTY rewritable READ isRewritable Q_PROPERTY qulonglong capacity READ capacity Q_DECLARE_PRIVATE OpticalDisc Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldisc.h</field>
    <field name="url">frontend_2opticaldisc_8h_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">ContentType NoContent Audio Data VideoCd SuperVideoCd VideoDvd VideoBluRay Q_DECLARE_FLAGS ContentTypes ContentType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldisc.h</field>
    <field name="url">frontend_2opticaldisc_8h_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text">enum DiscType UnknownDiscType CdRom CdRecordable CdRewritable DvdRom DvdRam DvdRecordable DvdRewritable DvdPlusRecordable DvdPlusRewritable DvdPlusRecordableDuallayer DvdPlusRewritableDuallayer BluRayRom BluRayRecordable BluRayRewritable HdDvdRom HdDvdRecordable HdDvdRewritable OpticalDisc QObject backendObject OpticalDisc</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldisc.h</field>
    <field name="url">frontend_2opticaldisc_8h_source.html#l00131</field>
    <field name="keywords"></field>
    <field name="text">Type deviceInterfaceType DeviceInterface::OpticalDisc ContentTypes availableContent DiscType discType isAppendable isBlank isRewritable qulonglong capacity Q_DECLARE_OPERATORS_FOR_FLAGS Solid::OpticalDisc::ContentTypes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldisc.h</field>
    <field name="url">ifaces_2opticaldisc_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Ifaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldisc.h</field>
    <field name="url">ifaces_2opticaldisc_8h_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">OpticalDisc StorageVolume Solid::OpticalDisc::ContentTypes availableContent Solid::OpticalDisc::DiscType discType isAppendable isBlank isRewritable qulonglong capacity Q_DECLARE_INTERFACE Solid::Ifaces::OpticalDisc</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldrive.cpp</field>
    <field name="url">frontend_2opticaldrive_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::OpticalDrive::OpticalDrive QObject backendObject StorageDrive new OpticalDrivePrivate backendObject connect backendObject SIGNAL ejectPressed QString SIGNAL ejectPressed QString connect backendObject SIGNAL ejectDone Solid::ErrorType QVariant QString SIGNAL ejectDone Solid::ErrorType QVariant QString connect backendObject SIGNAL ejectRequested QString SIGNAL ejectRequested QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldrive.cpp</field>
    <field name="url">frontend_2opticaldrive_8cpp_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">Solid::OpticalDrive::~OpticalDrive Solid::OpticalDrive::MediumTypes Solid::OpticalDrive::supportedMedia Q_D OpticalDrive return_SOLID_CALL Ifaces::OpticalDrive d backendObject MediumTypes supportedMedia Solid::OpticalDrive::readSpeed Q_D OpticalDrive return_SOLID_CALL Ifaces::OpticalDrive d backendObject readSpeed Solid::OpticalDrive::writeSpeed Q_D OpticalDrive return_SOLID_CALL Ifaces::OpticalDrive d backendObject writeSpeed QList&lt;int&gt; Solid::OpticalDrive::writeSpeeds Q_D OpticalDrive return_SOLID_CALL Ifaces::OpticalDrive d backendObject QList&lt;int&gt; writeSpeeds</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldrive.cpp</field>
    <field name="url">frontend_2opticaldrive_8cpp_source.html#l00067</field>
    <field name="keywords"></field>
    <field name="text">Solid::OpticalDrive::eject Q_D OpticalDrive return_SOLID_CALL Ifaces::OpticalDrive d backendObject eject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldrive.cpp</field>
    <field name="url">ifaces_2opticaldrive_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldrive.cpp</field>
    <field name="url">ifaces_2opticaldrive_8cpp_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::OpticalDrive::~OpticalDrive</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldrive.h</field>
    <field name="url">frontend_2opticaldrive_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid OpticalDrivePrivate Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldrive.h</field>
    <field name="url">frontend_2opticaldrive_8h_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT OpticalDrive StorageDrive Q_OBJECT Q_ENUMS MediumType Q_FLAGS MediumTypes Q_PROPERTY MediumTypes supportedMedia READ supportedMedia Q_PROPERTY readSpeed READ readSpeed Q_PROPERTY writeSpeed READ writeSpeed Q_PROPERTY QList&lt;int&gt; writeSpeeds READ writeSpeeds Q_DECLARE_PRIVATE OpticalDrive Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldrive.h</field>
    <field name="url">frontend_2opticaldrive_8h_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text">MediumType Cdr Cdrw Dvd Dvdr Dvdrw Dvdram Dvdplusr Dvdplusrw Dvdplusdl Dvdplusdlrw Bd Bdr Bdre HdDvd HdDvdr HdDvdrw Q_DECLARE_FLAGS MediumTypes MediumType OpticalDrive QObject backendObject OpticalDrive</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldrive.h</field>
    <field name="url">frontend_2opticaldrive_8h_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text">Type deviceInterfaceType DeviceInterface::OpticalDrive MediumTypes supportedMedia readSpeed writeSpeed QList&lt;int&gt; writeSpeeds eject Q_SIGNALS ejectPressed QString udi ejectDone Solid::ErrorType error QVariant errorData QString udi ejectRequested QString udi Q_DECLARE_OPERATORS_FOR_FLAGS Solid::OpticalDrive::MediumTypes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldrive.h</field>
    <field name="url">ifaces_2opticaldrive_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Ifaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">opticaldrive.h</field>
    <field name="url">ifaces_2opticaldrive_8h_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">OpticalDrive StorageDrive Solid::OpticalDrive::MediumTypes supportedMedia readSpeed writeSpeed QList&lt;int&gt; writeSpeeds eject ejectPressed QString udi ejectDone Solid::ErrorType error QVariant errorData QString udi Q_DECLARE_INTERFACE Solid::Ifaces::OpticalDrive</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">portablemediaplayer.cpp</field>
    <field name="url">frontend_2portablemediaplayer_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::PortableMediaPlayer::PortableMediaPlayer QObject backendObject DeviceInterface new PortableMediaPlayerPrivate backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">portablemediaplayer.cpp</field>
    <field name="url">frontend_2portablemediaplayer_8cpp_source.html#l00034</field>
    <field name="keywords"></field>
    <field name="text">Solid::PortableMediaPlayer::~PortableMediaPlayer QStringList Solid::PortableMediaPlayer::supportedProtocols Q_D PortableMediaPlayer return_SOLID_CALL Ifaces::PortableMediaPlayer d backendObject QStringList supportedProtocols</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">portablemediaplayer.cpp</field>
    <field name="url">frontend_2portablemediaplayer_8cpp_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">QStringList Solid::PortableMediaPlayer::supportedDrivers QString protocol Q_D PortableMediaPlayer return_SOLID_CALL Ifaces::PortableMediaPlayer d backendObject QStringList supportedDrivers protocol</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">portablemediaplayer.cpp</field>
    <field name="url">frontend_2portablemediaplayer_8cpp_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">QVariant Solid::PortableMediaPlayer::driverHandle QString driver Q_D PortableMediaPlayer return_SOLID_CALL Ifaces::PortableMediaPlayer d backendObject QVariant driverHandle driver</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">portablemediaplayer.cpp</field>
    <field name="url">ifaces_2portablemediaplayer_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">portablemediaplayer.cpp</field>
    <field name="url">ifaces_2portablemediaplayer_8cpp_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::PortableMediaPlayer::~PortableMediaPlayer</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">portablemediaplayer.h</field>
    <field name="url">frontend_2portablemediaplayer_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid PortableMediaPlayerPrivate Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">portablemediaplayer.h</field>
    <field name="url">frontend_2portablemediaplayer_8h_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT PortableMediaPlayer DeviceInterface Q_OBJECT Q_PROPERTY QStringList supportedProtocols READ supportedProtocols Q_PROPERTY QStringList supportedDrivers READ supportedDrivers Q_DECLARE_PRIVATE PortableMediaPlayer Device PortableMediaPlayer QObject backendObject PortableMediaPlayer</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">portablemediaplayer.h</field>
    <field name="url">frontend_2portablemediaplayer_8h_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text">Type deviceInterfaceType DeviceInterface::PortableMediaPlayer QStringList supportedProtocols QStringList supportedDrivers QString protocol QString QVariant driverHandle QString driver</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">portablemediaplayer.h</field>
    <field name="url">ifaces_2portablemediaplayer_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Ifaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">portablemediaplayer.h</field>
    <field name="url">ifaces_2portablemediaplayer_8h_source.html#l00039</field>
    <field name="keywords"></field>
    <field name="text">PortableMediaPlayer DeviceInterface QStringList supportedProtocols QStringList supportedDrivers QString protocol QString QVariant driverHandle QString driver Q_DECLARE_INTERFACE Solid::Ifaces::PortableMediaPlayer</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">power.cpp</field>
    <field name="url">power_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_GLOBAL_STATIC Solid::Power globalPowerObject Solid Power::Private PowerNotifier notifier Power Power::self globalPowerObject Power::Power QObject parent QObject parent d new Private qRegisterMetaType&lt;Solid::Inhibition::State&gt; d notifier PowerBackendLoader::notifier connect d notifier PowerNotifier::acPluggedChanged Power::acPluggedChanged connect d notifier PowerNotifier::aboutToSuspend Power::aboutToSuspend connect d notifier PowerNotifier::resumeFromSuspend Power::resumeFromSuspend AcPluggedJob Power::isAcPlugged QObject parent AcPluggedJob parent InhibitionJob Power::inhibit Power::InhibitionTypes states QString description QObject parent InhibitionJob job InhibitionJob parent job setInhibitions states job setDescription description job StatesJob Power::supportedStates QObject parent StatesJob parent RequestStateJob Power::requestState Power::InhibitionType state QObject parent job RequestStateJob parent job setState state job</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">power.h</field>
    <field name="url">power_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid StatesJob AcPluggedJob InhibitionJob RequestStateJob SOLID_EXPORT Power QObject Q_OBJECT Q_FLAGS States InhibitionType None Sleep Screen Shutdown Q_DECLARE_FLAGS InhibitionTypes InhibitionType Power AcPluggedJob isAcPlugged QObject parent InhibitionJob inhibit Power::InhibitionTypes states QString description QObject parent StatesJob supportedStates QObject parent RequestStateJob requestState Power::InhibitionType state QObject parent Power QObject parent Q_SIGNALS acPluggedChanged plugged aboutToSuspend resumeFromSuspend Private Private d Q_DECLARE_METATYPE Solid::Power::InhibitionType Q_DECLARE_OPERATORS_FOR_FLAGS Solid::Power::InhibitionTypes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">powerbackendloader.cpp</field>
    <field name="url">powerbackendloader_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid AbstractAcPluggedJob PowerBackendLoader::AcPluggedJob qgetenv DummyAcPluggedJob FDAcPluggedJob AbstractInhibitionJob PowerBackendLoader::addInhibitionJob Power::InhibitionTypes inhibitions QString description qgetenv DummyInhibitionJob inhibitions description FdInhibitionJob inhibitions description AbstractStatesJob PowerBackendLoader::statesJob DummyStatesJob AbstractRequestStateJob PowerBackendLoader::requestState DummyRequestStateJob PowerNotifier PowerBackendLoader::notifier qgetenv DummyPowerNotifier FDPowerNotifier</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">powerbackendloader.h</field>
    <field name="url">powerbackendloader_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid AbstractAcPluggedJob AbstractInhibitionJob AbstractStatesJob AbstractRequestStateJob PowerNotifier PowerBackendLoader AbstractAcPluggedJob AcPluggedJob AbstractInhibitionJob addInhibitionJob Power::InhibitionTypes inhibitions QString description AbstractStatesJob statesJob AbstractRequestStateJob requestState PowerNotifier notifier</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">powernotifier.h</field>
    <field name="url">powernotifier_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid PowerNotifier QObject Q_OBJECT PowerNotifier QObject parent QObject parent Q_SIGNALS acPluggedChanged plugged aboutToSuspend resumeFromSuspend</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Predicate::Private Private isValid false type PropertyCheck compOperator Predicate Equals operand1 operand2 isValid Type type DeviceInterface::Type ifaceType QString property QVariant value Predicate::ComparisonOperator compOperator Predicate operand1 Predicate operand2</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">Solid::Predicate::Predicate d new Private</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">Solid::Predicate::Predicate Predicate other d new Private other</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">Solid::Predicate::Predicate DeviceInterface::Type ifaceType QString property QVariant value ComparisonOperator compOperator d new Private d isValid d ifaceType ifaceType d property property d value value d compOperator compOperator</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00074</field>
    <field name="keywords"></field>
    <field name="text">Solid::Predicate::Predicate QString ifaceName QString property QVariant value ComparisonOperator compOperator d new Private DeviceInterface::Type ifaceType DeviceInterface::stringToType ifaceName ifaceType d isValid d ifaceType ifaceType d property property d value value d compOperator compOperator</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00090</field>
    <field name="keywords"></field>
    <field name="text">Solid::Predicate::Predicate DeviceInterface::Type ifaceType d new Private d isValid d type InterfaceCheck d ifaceType ifaceType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00098</field>
    <field name="keywords"></field>
    <field name="text">Solid::Predicate::Predicate QString ifaceName d new Private DeviceInterface::Type ifaceType DeviceInterface::stringToType ifaceName ifaceType d isValid d type InterfaceCheck d ifaceType ifaceType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text">Solid::Predicate::~Predicate d type PropertyCheck d type InterfaceCheck d operand1 d operand2 d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text">Solid::Predicate Solid::Predicate::operator= Predicate other d isValid other d isValid d type other d type d type PropertyCheck d type InterfaceCheck Predicate operand1 Predicate other d operand1 d operand1 d operand1 operand1 Predicate operand2 Predicate other d operand2 d operand2 d operand2 operand2 d ifaceType other d ifaceType d property other d property d value other d value d compOperator other d compOperator Solid::Predicate Solid::Predicate::operator &amp; Predicate other Predicate result result d isValid result d type Conjunction result d operand1 Predicate result d operand2 Predicate other result Solid::Predicate Solid::Predicate::operator &amp;= Predicate other other</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00160</field>
    <field name="keywords"></field>
    <field name="text">Solid::Predicate Solid::Predicate::operator| Predicate other Predicate result result d isValid result d type Disjunction result d operand1 Predicate result d operand2 Predicate other result</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00172</field>
    <field name="keywords"></field>
    <field name="text">Solid::Predicate Solid::Predicate::operator |= Predicate other other</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00178</field>
    <field name="keywords"></field>
    <field name="text">Solid::Predicate::isValid d isValid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00183</field>
    <field name="keywords"></field>
    <field name="text">Solid::Predicate::matches Device device d isValid d type Disjunction d operand1 matches device d operand2 matches device Conjunction d operand1 matches device d operand2 matches device PropertyCheck DeviceInterface iface device asDeviceInterface d ifaceType iface index iface metaObject indexOfProperty d property toLatin1 QMetaProperty metaProp iface metaObject property index QVariant value metaProp isReadable metaProp read iface QVariant QVariant expected d value metaProp isEnumType expected type QVariant::String QMetaEnum metaEnum metaProp enumerator value metaEnum keysToValue d value toString toLatin1 value expected value expected QVariant d compOperator Mask v_ok v value toInt v_ok e_ok e expected toInt e_ok e_ok v_ok v e value expected InterfaceCheck device isDeviceInterface d ifaceType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00235</field>
    <field name="keywords"></field>
    <field name="text">QSet&lt;Solid::DeviceInterface::Type&gt; Solid::Predicate::usedTypes QSet&lt;DeviceInterface::Type&gt; res d isValid d type Disjunction Conjunction res d operand1 usedTypes res d operand2 usedTypes PropertyCheck InterfaceCheck res d ifaceType res</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00258</field>
    <field name="keywords"></field>
    <field name="text">QString Solid::Predicate::toString d isValid d type PropertyCheck d type InterfaceCheck QString op d type Disjunction op d operand1 toString op d operand2 toString QString ifaceName DeviceInterface::typeToString d ifaceType ifaceName isEmpty ifaceName d type InterfaceCheck ifaceName QString value d value type QVariant::StringList value QStringList list d value toStringList QStringList::ConstIterator it list begin QStringList::ConstIterator end list end it end it value it it end value value QVariant::Bool value d value toBool QVariant::Int QVariant::UInt QVariant::LongLong QVariant::ULongLong value d value toString value d value toString QString str_operator d compOperator Equals str_operator ifaceName d property str_operator value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00327</field>
    <field name="keywords"></field>
    <field name="text">Solid::Predicate::Type Solid::Predicate::type d type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00332</field>
    <field name="keywords"></field>
    <field name="text">Solid::DeviceInterface::Type Solid::Predicate::interfaceType d ifaceType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00337</field>
    <field name="keywords"></field>
    <field name="text">QString Solid::Predicate::propertyName d property</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00342</field>
    <field name="keywords"></field>
    <field name="text">QVariant Solid::Predicate::matchingValue d value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00347</field>
    <field name="keywords"></field>
    <field name="text">Solid::Predicate::ComparisonOperator Solid::Predicate::comparisonOperator d compOperator</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00352</field>
    <field name="keywords"></field>
    <field name="text">Solid::Predicate Solid::Predicate::firstOperand d operand1 d operand1 Predicate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.cpp</field>
    <field name="url">predicate_8cpp_source.html#l00360</field>
    <field name="keywords"></field>
    <field name="text">Solid::Predicate Solid::Predicate::secondOperand d operand2 d operand2 Predicate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.h</field>
    <field name="url">predicate_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.h</field>
    <field name="url">predicate_8h_source.html#l00045</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT Predicate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.h</field>
    <field name="url">predicate_8h_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">ComparisonOperator Equals Mask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicate.h</field>
    <field name="url">predicate_8h_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">Type PropertyCheck Conjunction Disjunction InterfaceCheck Predicate Predicate Predicate other Predicate DeviceInterface::Type ifaceType QString property QVariant value ComparisonOperator compOperator Equals Predicate QString ifaceName QString property QVariant value ComparisonOperator compOperator Equals Predicate DeviceInterface::Type ifaceType Predicate QString ifaceName Predicate Predicate operator= Predicate other Predicate operator &amp; Predicate other Predicate operator &amp;= Predicate other Predicate operator| Predicate other Predicate operator|= Predicate other isValid matches Device device QSet&lt;DeviceInterface::Type&gt; usedTypes QString toString Predicate fromString QString predicate Type type DeviceInterface::Type interfaceType QString propertyName QVariant matchingValue ComparisonOperator comparisonOperator Predicate firstOperand Predicate secondOperand Private Private d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicateparse.cpp</field>
    <field name="url">predicateparse_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">PredicateParse_mainParse _code Solid PredicateParse ParsingData ParsingData result Solid::Predicate result QByteArray buffer Q_GLOBAL_STATIC QThreadStorage&lt;Solid::PredicateParse::ParsingData *&gt; s_parsingData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicateparse.cpp</field>
    <field name="url">predicateparse_8cpp_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">Solid Predicate Solid Predicate fromString const QString predicate Solid::PredicateParse::ParsingData data Solid::PredicateParse::ParsingData s_parsingData setLocalData data data buffer predicate toLatin1 PredicateParse_mainParse data buffer constData Predicate result data result result Predicate data result data result s_parsingData setLocalData result PredicateParse_setResult result Solid::PredicateParse::ParsingData data s_parsingData localData data result Solid::Predicate result PredicateParse_errorDetected s qWarning s s_parsingData localData result PredicateParse_destroy pred Solid::PredicateParse::ParsingData data s_parsingData localData Solid::Predicate p Solid::Predicate pred p data result p PredicateParse_newAtom interface property value QString iface interface QString prop property QVariant val QVariant value Solid::Predicate result Solid::Predicate iface prop val val free interface free property result PredicateParse_newMaskAtom interface property value QString iface interface QString prop property QVariant val QVariant value Solid::Predicate result Solid::Predicate iface prop val Solid::Predicate::Mask val free interface free property result PredicateParse_newIsAtom interface QString iface interface Solid::Predicate result Solid::Predicate iface free interface result PredicateParse_newAnd pred1 pred2 Solid::Predicate result Solid::Predicate Solid::PredicateParse::ParsingData data s_parsingData localData Solid::Predicate p1 Solid::Predicate pred1 Solid::Predicate p2 Solid::Predicate pred2 p1 data result p2 data result data result result p1 p2 p1 p2 result PredicateParse_newOr pred1 pred2 Solid::Predicate result Solid::Predicate Solid::PredicateParse::ParsingData data s_parsingData localData Solid::Predicate p1 Solid::Predicate pred1 Solid::Predicate p2 Solid::Predicate pred2 p1 data result p2 data result data result result p1 p2 p1 p2 result PredicateParse_newStringValue val QString s val free val QVariant s PredicateParse_newBoolValue val b val QVariant b PredicateParse_newNumValue val QVariant val PredicateParse_newDoubleValue val QVariant val PredicateParse_newEmptyStringListValue QVariant QStringList PredicateParse_newStringListValue name QStringList list list QString name free name QVariant list PredicateParse_appendStringListValue name list QVariant variant QVariant list QStringList new_list variant toStringList new_list QString name variant free name QVariant new_list PredicateLexer_unknownToken text qWarning text s_parsingData localData buffer constData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">predicateparse.h</field>
    <field name="url">predicateparse_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">PredicateLexer_unknownToken text PredicateParse_setResult result PredicateParse_errorDetected error PredicateParse_destroy pred PredicateParse_newAtom interface property value PredicateParse_newMaskAtom interface property value PredicateParse_newIsAtom interface PredicateParse_newAnd pred1 pred2 PredicateParse_newOr pred1 pred2 PredicateParse_newStringValue val PredicateParse_newBoolValue val PredicateParse_newNumValue val PredicateParse_newDoubleValue val PredicateParse_newEmptyStringListValue PredicateParse_newStringListValue name PredicateParse_appendStringListValue name list</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">processor.cpp</field>
    <field name="url">frontend_2processor_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Processor::Processor QObject backendObject DeviceInterface new ProcessorPrivate backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">processor.cpp</field>
    <field name="url">frontend_2processor_8cpp_source.html#l00032</field>
    <field name="keywords"></field>
    <field name="text">Solid::Processor::~Processor Solid::Processor::number Q_D Processor return_SOLID_CALL Ifaces::Processor d backendObject number Solid::Processor::maxSpeed Q_D Processor return_SOLID_CALL Ifaces::Processor d backendObject maxSpeed Solid::Processor::canChangeFrequency Q_D Processor return_SOLID_CALL Ifaces::Processor d backendObject canChangeFrequency Solid::Processor::InstructionSets Solid::Processor::instructionSets Q_D Processor return_SOLID_CALL Ifaces::Processor d backendObject InstructionSets instructionSets</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">processor.cpp</field>
    <field name="url">ifaces_2processor_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">processor.cpp</field>
    <field name="url">ifaces_2processor_8cpp_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::Processor::~Processor</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">processor.h</field>
    <field name="url">frontend_2processor_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid ProcessorPrivate Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">processor.h</field>
    <field name="url">frontend_2processor_8h_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT Processor DeviceInterface Q_OBJECT Q_ENUMS InstructionSet Q_FLAGS InstructionSets Q_PROPERTY number READ number Q_PROPERTY qulonglong maxSpeed READ maxSpeed Q_PROPERTY canChangeFrequency READ canChangeFrequency Q_PROPERTY InstructionSets instructionSets READ instructionSets Q_DECLARE_PRIVATE Processor Device Processor QObject backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">processor.h</field>
    <field name="url">frontend_2processor_8h_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">InstructionSet NoExtensions IntelMmx IntelSse IntelSse2 IntelSse3 IntelSsse3 IntelSse4 IntelSse41 IntelSse42 Amd3DNow AltiVec Q_DECLARE_FLAGS InstructionSets InstructionSet Processor</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">processor.h</field>
    <field name="url">frontend_2processor_8h_source.html#l00094</field>
    <field name="keywords"></field>
    <field name="text">Type deviceInterfaceType DeviceInterface::Processor number maxSpeed canChangeFrequency InstructionSets instructionSets Q_DECLARE_OPERATORS_FOR_FLAGS Solid::Processor::InstructionSets</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">processor.h</field>
    <field name="url">ifaces_2processor_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Ifaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">processor.h</field>
    <field name="url">ifaces_2processor_8h_source.html#l00034</field>
    <field name="keywords"></field>
    <field name="text">Processor DeviceInterface number maxSpeed canChangeFrequency Solid::Processor::InstructionSets instructionSets Q_DECLARE_INTERFACE Solid::Ifaces::Processor</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">requeststatejob.cpp</field>
    <field name="url">requeststatejob_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid RequestStateJobPrivate::RequestStateJobPrivate backendJob Q_NULLPTR state Power::None RequestStateJob::RequestStateJob QObject parent Job new RequestStateJobPrivate parent RequestStateJob::setState Power::InhibitionType state Q_D RequestStateJob d state state RequestStateJob::doStart Q_D RequestStateJob d backendJob PowerBackendLoader::requestState d backendJob state d state connect d backendJob AbstractRequestStateJob::result Job job emitResult d backendJob start</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">requeststatejob.h</field>
    <field name="url">requeststatejob_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid RequestStateJobPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">requeststatejob.h</field>
    <field name="url">requeststatejob_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT RequestStateJob Job Q_OBJECT Error Unsupported Job::UserDefinedError RequestStateJob QObject parent setState Power::InhibitionType state Q_SLOTS doStart Q_DECL_OVERRIDE Q_SIGNALS result Solid::Job Q_DECLARE_PRIVATE RequestStateJob</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">rootdevice.cpp</field>
    <field name="url">rootdevice_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Shared RootDevice::RootDevice QString udi QString parentUdi Solid Ifaces Device m_udi udi m_parentUdi parentUdi m_vendor RootDevice::~RootDevice QString RootDevice::udi m_udi QString RootDevice::parentUdi m_parentUdi QString RootDevice::vendor m_vendor RootDevice::setVendor QString vendor m_vendor vendor QString RootDevice::product m_product RootDevice::setProduct QString product m_product product QString RootDevice::icon m_icon RootDevice::setIcon QString icon m_icon icon QStringList RootDevice::emblems m_emblems RootDevice::setEmblems QStringList emblems m_emblems emblems QString RootDevice::description m_description RootDevice::setDescription QString description m_description description RootDevice::queryDeviceInterface Solid::DeviceInterface::Type QObject RootDevice::createDeviceInterface Solid::DeviceInterface::Type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">rootdevice.h</field>
    <field name="url">rootdevice_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Shared RootDevice Solid::Ifaces::Device Q_OBJECT RootDevice QString udi QString parentUdi QString RootDevice QString udi const Q_DECL_OVERRIDE QString parentUdi const Q_DECL_OVERRIDE QString vendor const Q_DECL_OVERRIDE setVendor const QString vendor QString product const Q_DECL_OVERRIDE setProduct const QString product QString icon const Q_DECL_OVERRIDE setIcon const QString icon QStringList emblems const Q_DECL_OVERRIDE setEmblems const QStringList emblems QString description const Q_DECL_OVERRIDE setDescription const QString description queryDeviceInterface const Solid DeviceInterface Type type const Q_DECL_OVERRIDE QObject createDeviceInterface const Solid DeviceInterface Type type Q_DECL_OVERRIDE private QString m_udi QString m_parentUdi QString m_vendor QString m_product QString m_icon QStringList m_emblems QString m_description</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">solid-hardware.cpp</field>
    <field name="url">solid-hardware_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">std appName version std::ostream operator&lt;&lt; std::ostream out QString msg out msg toLocal8Bit constData std::ostream operator&lt;&lt; std::ostream out QVariant value value type QVariant::StringList out QStringList list value toStringList QStringList::ConstIterator it list constBegin QStringList::ConstIterator end list constEnd it end it out it it end out out QVariant::Bool out value toBool QVariant::Int QVariant::LongLong out value toString QString::number value toLongLong QVariant::typeToName value type QVariant::UInt QVariant::ULongLong out value toString QString::number value toULongLong QVariant::typeToName value type QVariant::Double out value toString QVariant::UserType value canConvert QList&lt;int&gt; QList&lt;int&gt; intlist value value QList&lt;int&gt; QStringList tmp val intlist tmp append QString::number val out tmp join out value toString out std::ostream operator&lt;&lt; std::ostream out Solid::Device device out QVariant device parentUdi endl out QVariant device vendor endl out QVariant device product endl out QVariant device description endl index Solid::DeviceInterface::staticMetaObject indexOfEnumerator QMetaEnum typeEnum Solid::DeviceInterface::staticMetaObject enumerator index i i typeEnum keyCount i Solid::DeviceInterface::Type type Solid::DeviceInterface::Type typeEnum value i Solid::DeviceInterface device asDeviceInterface type interface QMetaObject meta interface metaObject i meta propertyOffset i meta propertyCount i QMetaProperty meta property i out QString meta className mid name QVariant value read interface property isEnumType QMetaEnum metaEnum enumerator metaEnum isFlag out metaEnum valueToKeys value toInt constData QString::number value toInt out metaEnum valueToKey value toInt QString::number value toInt out endl out value endl out std::ostream operator&lt;&lt;(std::ostream &amp;out, const QMap&lt;QString,QVariant&gt; properties Q_FOREACH QString key properties keys out key properties key endl out QString getUdiFromArguments QCoreApplication app QCommandLineParser parser parser addPositionalArgument QCoreApplication::translate parser process app parser positionalArguments count parser showHelp parser positionalArguments at main argc argv SolidHardware app argc argv app setApplicationName appName app setApplicationVersion version QCommandLineParser parser parser setApplicationDescription QCoreApplication::translate parser addHelpOption parser addVersionOption parser addPositionalArgument QCoreApplication::translate QCommandLineOption commands QCoreApplication::translate parser addOption commands parser process app parser isSet commands cout endl QCoreApplication::translate endl endl cout endl cout QCoreApplication::translate endl cout endl cout QCoreApplication::translate endl cout endl cout QCoreApplication::translate endl cout endl cout QCoreApplication::translate endl cout endl cout QCoreApplication::translate endl cout endl cout QCoreApplication::translate endl cout endl cout QCoreApplication::translate endl cout endl cout QCoreApplication::translate endl QStringList args parser positionalArguments args count parser showHelp parser clearPositionalArguments QString command args at command parser addPositionalArgument QCoreApplication::translate parser addPositionalArgument QCoreApplication::translate parser process app args parser positionalArguments QByteArray extra args count args at toLocal8Bit app hwList extra extra command QString udi getUdiFromArguments app parser app hwCapabilities udi command QString udi getUdiFromArguments app parser app hwProperties udi command parser addPositionalArgument QCoreApplication::translate parser addPositionalArgument QCoreApplication::translate parser process app parser positionalArguments count parser positionalArguments count parser showHelp QString query args at QString parent args count parent args at app hwQuery parent query command QString udi getUdiFromArguments app parser app hwVolumeCall SolidHardware::Mount udi command QString udi getUdiFromArguments app parser app hwVolumeCall SolidHardware::Unmount udi command QString udi getUdiFromArguments app parser app hwVolumeCall SolidHardware::Eject udi command app listen cerr QCoreApplication::translate arg command endl SolidHardware::hwList interfaces system QList&lt;Solid::Device&gt; all Solid::Device::allDevices Q_FOREACH Solid::Device device all cout device udi endl interfaces cout device endl system device is Solid::GenericInterface QMap&lt;QString,QVariant&gt; properties device as Solid::GenericInterface allProperties cout properties endl SolidHardware::hwCapabilities QString udi Solid::Device device udi cout device udi endl cout device endl SolidHardware::hwProperties QString udi Solid::Device device udi cout device udi endl device is Solid::GenericInterface QMap&lt;QString,QVariant&gt; properties device as Solid::GenericInterface allProperties cout properties endl SolidHardware::hwQuery QString parentUdi QString query QList&lt;Solid::Device&gt; devices Solid::Device::listFromQuery query parentUdi Q_FOREACH Solid::Device device devices cout device udi endl SolidHardware::hwVolumeCall SolidHardware::VolumeCallType type QString udi Solid::Device device udi device is Solid::StorageAccess type Eject cerr tr arg udi endl device is Solid::OpticalDrive type Eject cerr tr arg udi endl type Mount connect device as Solid::StorageAccess SIGNAL setupDone Solid::ErrorType QVariant QString SLOT slotStorageResult Solid::ErrorType QVariant device as Solid::StorageAccess setup Unmount connect device as Solid::StorageAccess SIGNAL teardownDone Solid::ErrorType QVariant QString SLOT slotStorageResult Solid::ErrorType QVariant device as Solid::StorageAccess teardown Eject connect device as Solid::OpticalDrive SIGNAL ejectDone Solid::ErrorType QVariant QString SLOT slotStorageResult Solid::ErrorType QVariant device as Solid::OpticalDrive eject m_loop exec m_error cerr tr arg m_errorString endl SolidHardware::listen Solid::DeviceNotifier notifier Solid::DeviceNotifier::instance a connect notifier SIGNAL deviceAdded QString SLOT deviceAdded QString d connect notifier SIGNAL deviceRemoved QString SLOT deviceRemoved QString a d cout endl m_loop exec SolidHardware::deviceAdded QString udi cout endl cout udi endl SolidHardware::deviceRemoved QString udi cout endl cout udi endl SolidHardware::slotStorageResult Solid::ErrorType error QVariant errorData error m_error m_errorString errorData toString m_loop exit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">solid-hardware.h</field>
    <field name="url">solid-hardware_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QCommandLineParser SolidHardware QCoreApplication Q_OBJECT SolidHardware argc argv QCoreApplication argc argv m_error hwList interfaces system hwCapabilities QString udi hwProperties QString udi hwQuery QString parentUdi QString query listen VolumeCallType Mount Unmount Eject hwVolumeCall VolumeCallType type QString udi QEventLoop m_loop m_error QString m_errorString Q_SLOTS slotStorageResult Solid::ErrorType error QVariant errorData deviceAdded QString udi deviceRemoved QString udi Q_DECLARE_METATYPE QList&lt;int&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">solid-power.cpp</field>
    <field name="url">solid-power_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid std QTextStream sCout stdout SolidPower::SolidPower QObject parent QObject parent SolidPower::show job Solid::Power::isAcPlugged job exec QString status job isPlugged sCout status endl SolidPower::listen power Power::self connect power Power::acPluggedChanged plugged QTextStream lOut stdout QString status plugged lOut status endl connect power Power::aboutToSuspend QTextStream lOut stdout lOut endl connect power Power::resumeFromSuspend QTextStream lOut stdout lOut endl</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">solid-power.h</field>
    <field name="url">solid-power_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">SolidPower QObject Q_OBJECT SolidPower QObject parent show listen</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">solidextensionplugin.cpp</field>
    <field name="url">solidextensionplugin_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">SolidExtensionPlugin::SolidExtensionPlugin QObject parent QQmlExtensionPlugin parent SolidExtensionPlugin::registerTypes uri Solid Q_ASSERT QLatin1String uri QLatin1String qmlRegisterType&lt;Devices&gt; uri</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">solidextensionplugin.h</field>
    <field name="url">solidextensionplugin_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">SolidExtensionPlugin QQmlExtensionPlugin Q_OBJECT Q_PLUGIN_METADATA IID SolidExtensionPlugin QObject parent Q_NULLPTR registerTypes uri Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">solidnamespace.cpp</field>
    <field name="url">solidnamespace_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">registerSolidMetaTypes qRegisterMetaType&lt;Solid::ErrorType&gt; Q_CONSTRUCTOR_FUNCTION registerSolidMetaTypes _Solid_registerMetaTypes registerSolidMetaTypes</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">solidnamespace.h</field>
    <field name="url">solidnamespace_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid ErrorType NoError UnauthorizedOperation DeviceBusy OperationFailed UserCanceled InvalidOption MissingDriver Q_DECLARE_METATYPE Solid::ErrorType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">statesjob.cpp</field>
    <field name="url">statesjob_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid StatesJobPrivate::StatesJobPrivate backendJob Q_NULLPTR StatesJob::StatesJob QObject parent Job new StatesJobPrivate parent StatesJob::doStart Q_D StatesJob d backendJob PowerBackendLoader::statesJob connect d backendJob AbstractStatesJob::result d backendJob start</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">statesjob.cpp</field>
    <field name="url">statesjob_8cpp_source.html#l00050</field>
    <field name="keywords"></field>
    <field name="text">Power::InhibitionTypes StatesJob::states d_func backendJob d_func backendJob states qWarning Power::None</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">statesjob.h</field>
    <field name="url">statesjob_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid StatesJobPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">statesjob.h</field>
    <field name="url">statesjob_8h_source.html#l00039</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT StatesJob Job Q_OBJECT StatesJob QObject parent Power::InhibitionTypes states Q_SLOTS doStart Q_DECL_OVERRIDE Q_SIGNALS result Solid::Job job Q_DECLARE_PRIVATE StatesJob</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storageaccess.cpp</field>
    <field name="url">frontend_2storageaccess_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::StorageAccess::StorageAccess QObject backendObject DeviceInterface new StorageAccessPrivate backendObject connect backendObject SIGNAL setupDone Solid::ErrorType QVariant QString SIGNAL setupDone Solid::ErrorType QVariant QString connect backendObject SIGNAL teardownDone Solid::ErrorType QVariant QString SIGNAL teardownDone Solid::ErrorType QVariant QString connect backendObject SIGNAL setupRequested QString SIGNAL setupRequested QString connect backendObject SIGNAL teardownRequested QString SIGNAL teardownRequested QString connect backendObject SIGNAL accessibilityChanged QString SIGNAL accessibilityChanged QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storageaccess.cpp</field>
    <field name="url">frontend_2storageaccess_8cpp_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">Solid::StorageAccess::StorageAccess StorageAccessPrivate dd QObject backendObject DeviceInterface dd backendObject connect backendObject SIGNAL setupDone Solid::StorageAccess::SetupResult QVariant QString SIGNAL setupDone Solid::StorageAccess::SetupResult QVariant QString connect backendObject SIGNAL teardownDone Solid::StorageAccess::TeardownResult QVariant QString SIGNAL teardownDone Solid::StorageAccess::TeardownResult QVariant QString connect backendObject SIGNAL setupRequested QString SIGNAL setupRequested QString connect backendObject SIGNAL teardownRequested QString SIGNAL teardownRequested QString connect backendObject SIGNAL accessibilityChanged QString SIGNAL accessibilityChanged QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storageaccess.cpp</field>
    <field name="url">frontend_2storageaccess_8cpp_source.html#l00059</field>
    <field name="keywords"></field>
    <field name="text">Solid::StorageAccess::~StorageAccess</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storageaccess.cpp</field>
    <field name="url">frontend_2storageaccess_8cpp_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">Solid::StorageAccess::isAccessible Q_D StorageAccess return_SOLID_CALL Ifaces::StorageAccess d backendObject isAccessible QString Solid::StorageAccess::filePath Q_D StorageAccess return_SOLID_CALL Ifaces::StorageAccess d backendObject QString filePath</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storageaccess.cpp</field>
    <field name="url">frontend_2storageaccess_8cpp_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text">Solid::StorageAccess::setup Q_D StorageAccess return_SOLID_CALL Ifaces::StorageAccess d backendObject setup</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storageaccess.cpp</field>
    <field name="url">frontend_2storageaccess_8cpp_source.html#l00082</field>
    <field name="keywords"></field>
    <field name="text">Solid::StorageAccess::teardown Q_D StorageAccess return_SOLID_CALL Ifaces::StorageAccess d backendObject teardown</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storageaccess.cpp</field>
    <field name="url">frontend_2storageaccess_8cpp_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text">Solid::StorageAccess::isIgnored Q_D StorageAccess return_SOLID_CALL Ifaces::StorageAccess d backendObject isIgnored</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storageaccess.cpp</field>
    <field name="url">ifaces_2storageaccess_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storageaccess.cpp</field>
    <field name="url">ifaces_2storageaccess_8cpp_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::StorageAccess::~StorageAccess</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storageaccess.h</field>
    <field name="url">frontend_2storageaccess_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid StorageAccessPrivate Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storageaccess.h</field>
    <field name="url">frontend_2storageaccess_8h_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT StorageAccess DeviceInterface Q_OBJECT Q_PROPERTY accessible READ isAccessible Q_PROPERTY QString filePath READ filePath Q_PROPERTY ignored READ isIgnored Q_DECLARE_PRIVATE StorageAccess Device StorageAccess QObject backendObject StorageAccess</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storageaccess.h</field>
    <field name="url">frontend_2storageaccess_8h_source.html#l00074</field>
    <field name="keywords"></field>
    <field name="text">Type deviceInterfaceType DeviceInterface::StorageAccess isAccessible QString filePath isIgnored setup teardown Q_SIGNALS accessibilityChanged accessible QString udi setupDone Solid::ErrorType error QVariant errorData QString udi teardownDone Solid::ErrorType error QVariant errorData QString udi setupRequested QString udi teardownRequested QString udi StorageAccess StorageAccessPrivate dd QObject backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storageaccess.h</field>
    <field name="url">ifaces_2storageaccess_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Ifaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storageaccess.h</field>
    <field name="url">ifaces_2storageaccess_8h_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">StorageAccess DeviceInterface isAccessible QString filePath isIgnored setup teardown accessibilityChanged accessible QString udi setupDone Solid::ErrorType error QVariant resultData QString udi teardownDone Solid::ErrorType error QVariant resultData QString udi setupRequested QString udi teardownRequested QString udi Q_DECLARE_INTERFACE Solid::Ifaces::StorageAccess</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagedrive.cpp</field>
    <field name="url">frontend_2storagedrive_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::StorageDrive::StorageDrive QObject backendObject DeviceInterface new StorageDrivePrivate backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagedrive.cpp</field>
    <field name="url">frontend_2storagedrive_8cpp_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">Solid::StorageDrive::StorageDrive StorageDrivePrivate dd QObject backendObject DeviceInterface dd backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagedrive.cpp</field>
    <field name="url">frontend_2storagedrive_8cpp_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">Solid::StorageDrive::~StorageDrive Solid::StorageDrive::Bus Solid::StorageDrive::bus Q_D StorageDrive return_SOLID_CALL Ifaces::StorageDrive d backendObject Platform bus Solid::StorageDrive::DriveType Solid::StorageDrive::driveType Q_D StorageDrive return_SOLID_CALL Ifaces::StorageDrive d backendObject HardDisk driveType</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagedrive.cpp</field>
    <field name="url">frontend_2storagedrive_8cpp_source.html#l00059</field>
    <field name="keywords"></field>
    <field name="text">Solid::StorageDrive::isRemovable Q_D StorageDrive return_SOLID_CALL Ifaces::StorageDrive d backendObject isRemovable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagedrive.cpp</field>
    <field name="url">frontend_2storagedrive_8cpp_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">Solid::StorageDrive::isHotpluggable Q_D StorageDrive return_SOLID_CALL Ifaces::StorageDrive d backendObject isHotpluggable qulonglong Solid::StorageDrive::size Q_D StorageDrive return_SOLID_CALL Ifaces::StorageDrive d backendObject size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagedrive.cpp</field>
    <field name="url">frontend_2storagedrive_8cpp_source.html#l00077</field>
    <field name="keywords"></field>
    <field name="text">Solid::StorageDrive::isInUse Q_D StorageDrive Predicate p DeviceInterface::StorageAccess QList&lt;Device&gt; devices Device::listFromQuery p d devicePrivate udi inUse Q_FOREACH Device dev devices dev is Solid::StorageAccess Solid::StorageAccess access dev as Solid::StorageAccess inUse access isAccessible inUse</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagedrive.cpp</field>
    <field name="url">ifaces_2storagedrive_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagedrive.cpp</field>
    <field name="url">ifaces_2storagedrive_8cpp_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::StorageDrive::~StorageDrive</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagedrive.h</field>
    <field name="url">frontend_2storagedrive_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid StorageDrivePrivate Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagedrive.h</field>
    <field name="url">frontend_2storagedrive_8h_source.html#l00039</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT StorageDrive DeviceInterface Q_OBJECT Q_ENUMS Bus DriveType Q_PROPERTY Bus bus READ bus Q_PROPERTY DriveType driveType READ driveType Q_PROPERTY removable READ isRemovable Q_PROPERTY hotpluggable READ isHotpluggable Q_PROPERTY inUse READ isInUse Q_PROPERTY qulonglong size READ size Q_DECLARE_PRIVATE StorageDrive Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagedrive.h</field>
    <field name="url">frontend_2storagedrive_8h_source.html#l00063</field>
    <field name="keywords"></field>
    <field name="text">Bus Ide Usb Ieee1394 Scsi Sata Platform</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagedrive.h</field>
    <field name="url">frontend_2storagedrive_8h_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text">DriveType HardDisk CdromDrive Floppy Tape CompactFlash MemoryStick SmartMedia SdMmc Xd StorageDrive QObject backendObject StorageDrive</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagedrive.h</field>
    <field name="url">frontend_2storagedrive_8h_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text">Type deviceInterfaceType DeviceInterface::StorageDrive Bus bus DriveType driveType isRemovable isHotpluggable qulonglong size isInUse StorageDrive StorageDrivePrivate dd QObject backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagedrive.h</field>
    <field name="url">ifaces_2storagedrive_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Ifaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagedrive.h</field>
    <field name="url">ifaces_2storagedrive_8h_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">StorageDrive Block Solid::StorageDrive::Bus bus Solid::StorageDrive::DriveType driveType isRemovable isHotpluggable qulonglong size Q_DECLARE_INTERFACE Solid::Ifaces::StorageDrive</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagevolume.cpp</field>
    <field name="url">frontend_2storagevolume_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::StorageVolume::StorageVolume QObject backendObject DeviceInterface new StorageVolumePrivate backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagevolume.cpp</field>
    <field name="url">frontend_2storagevolume_8cpp_source.html#l00033</field>
    <field name="keywords"></field>
    <field name="text">Solid::StorageVolume::StorageVolume StorageVolumePrivate dd QObject backendObject DeviceInterface dd backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagevolume.cpp</field>
    <field name="url">frontend_2storagevolume_8cpp_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">Solid::StorageVolume::~StorageVolume</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagevolume.cpp</field>
    <field name="url">frontend_2storagevolume_8cpp_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">Solid::StorageVolume::isIgnored Q_D StorageVolume return_SOLID_CALL Ifaces::StorageVolume d backendObject isIgnored Solid::StorageVolume::UsageType Solid::StorageVolume::usage Q_D StorageVolume return_SOLID_CALL Ifaces::StorageVolume d backendObject Unused usage QString Solid::StorageVolume::fsType Q_D StorageVolume return_SOLID_CALL Ifaces::StorageVolume d backendObject QString fsType QString Solid::StorageVolume::label Q_D StorageVolume return_SOLID_CALL Ifaces::StorageVolume d backendObject QString label QString Solid::StorageVolume::uuid Q_D StorageVolume return_SOLID_CALL Ifaces::StorageVolume d backendObject QString uuid toLower qulonglong Solid::StorageVolume::size Q_D StorageVolume return_SOLID_CALL Ifaces::StorageVolume d backendObject size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagevolume.cpp</field>
    <field name="url">frontend_2storagevolume_8cpp_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text">Solid::Device Solid::StorageVolume::encryptedContainer Q_D StorageVolume Ifaces::StorageVolume iface qobject_cast Ifaces::StorageVolume d backendObject iface Device iface encryptedContainerUdi Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagevolume.cpp</field>
    <field name="url">ifaces_2storagevolume_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagevolume.cpp</field>
    <field name="url">ifaces_2storagevolume_8cpp_source.html#l00023</field>
    <field name="keywords"></field>
    <field name="text">Solid::Ifaces::StorageVolume::~StorageVolume</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagevolume.h</field>
    <field name="url">frontend_2storagevolume_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid StorageVolumePrivate Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagevolume.h</field>
    <field name="url">frontend_2storagevolume_8h_source.html#l00039</field>
    <field name="keywords"></field>
    <field name="text">SOLID_EXPORT StorageVolume DeviceInterface Q_OBJECT Q_ENUMS UsageType Q_PROPERTY ignored READ isIgnored Q_PROPERTY UsageType usage READ usage Q_PROPERTY QString fsType READ fsType Q_PROPERTY QString label READ label Q_PROPERTY QString uuid READ uuid Q_PROPERTY qulonglong size READ size Q_DECLARE_PRIVATE StorageVolume Device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagevolume.h</field>
    <field name="url">frontend_2storagevolume_8h_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">UsageType Other Unused FileSystem PartitionTable Raid Encrypted StorageVolume QObject backendObject StorageVolume</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagevolume.h</field>
    <field name="url">frontend_2storagevolume_8h_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">Type deviceInterfaceType DeviceInterface::StorageVolume isIgnored UsageType usage QString fsType QString label QString uuid qulonglong size Device encryptedContainer StorageVolume StorageVolumePrivate dd QObject backendObject</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagevolume.h</field>
    <field name="url">ifaces_2storagevolume_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Ifaces</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">storagevolume.h</field>
    <field name="url">ifaces_2storagevolume_8h_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">StorageVolume Block isIgnored Solid::StorageVolume::UsageType usage QString fsType QString label QString uuid qulonglong size QString encryptedContainerUdi Q_DECLARE_INTERFACE Solid::Ifaces::StorageVolume</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udev.h</field>
    <field name="url">udev_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevblock.cpp</field>
    <field name="url">udevblock_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDev Block::Block UDevDevice device DeviceInterface device Block::~Block Block::deviceMajor m_device property toInt Block::deviceMinor m_device property toInt QString Block::device m_device property toString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevblock.h</field>
    <field name="url">udevblock_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDev Block DeviceInterface Solid::Ifaces::Block Q_OBJECT Q_INTERFACES Solid::Ifaces::Block Block UDevDevice device Block deviceMajor const Q_DECL_OVERRIDE deviceMinor const Q_DECL_OVERRIDE QString device const Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevcamera.cpp</field>
    <field name="url">udevcamera_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDev Camera::Camera UDevDevice device DeviceInterface device Camera::~Camera QStringList Camera::supportedProtocols QStringList protocols QString method m_device property toString method isEmpty protocols method toLower protocols QStringList Camera::supportedDrivers QString QStringList res supportedProtocols isEmpty res res QVariant Camera::driverHandle QString driver driver m_device property toString QVariantList list list m_device property m_device property list QVariant</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevcamera.h</field>
    <field name="url">udevcamera_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDev Camera DeviceInterface Solid::Ifaces::Camera Q_OBJECT Q_INTERFACES Solid::Ifaces::Camera Camera UDevDevice device Camera QStringList supportedProtocols const Q_DECL_OVERRIDE QStringList supportedDrivers QString protocol QString const Q_DECL_OVERRIDE QVariant driverHandle const QString driver const Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevdevice.cpp</field>
    <field name="url">udevdevice_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDev UDevDevice::UDevDevice UdevQt::Device device Solid Ifaces Device m_device device UDevDevice::~UDevDevice QString UDevDevice::udi devicePath QString UDevDevice::parentUdi UDEV_UDI_PREFIX QString UDevDevice::vendor QString vendor m_device sysfsProperty toString vendor isEmpty queryDeviceInterface Solid::DeviceInterface::Processor vendor extractCpuVendor deviceNumber vendor isEmpty vendor m_device deviceProperty toString replace vendor QString UDevDevice::product QString product m_device sysfsProperty toString product isEmpty queryDeviceInterface Solid::DeviceInterface::Processor product extractCpuModel deviceNumber product isEmpty product m_device deviceProperty toString replace product QString UDevDevice::icon parentUdi isEmpty QLatin1String queryDeviceInterface Solid::DeviceInterface::Processor QLatin1String queryDeviceInterface Solid::DeviceInterface::PortableMediaPlayer QLatin1String queryDeviceInterface Solid::DeviceInterface::Camera QLatin1String QString QStringList UDevDevice::emblems QStringList QString UDevDevice::description parentUdi isEmpty tr queryDeviceInterface Solid::DeviceInterface::Processor tr queryDeviceInterface Solid::DeviceInterface::PortableMediaPlayer PortableMediaPlayer player PortableMediaPlayer const_cast&lt;UDevDevice *&gt; player supportedProtocols contains product tr queryDeviceInterface Solid::DeviceInterface::Camera tr QString UDevDevice::queryDeviceInterface Solid::DeviceInterface::Type type type Solid::DeviceInterface::GenericInterface Solid::DeviceInterface::Processor m_device subsystem QLatin1String Solid::DeviceInterface::Camera property toInt Solid::DeviceInterface::PortableMediaPlayer property toString isEmpty Solid::DeviceInterface::Block property toString isEmpty QObject UDevDevice::createDeviceInterface Solid::DeviceInterface::Type type queryDeviceInterface type type Solid::DeviceInterface::GenericInterface GenericInterface Solid::DeviceInterface::Processor Processor Solid::DeviceInterface::Camera Camera Solid::DeviceInterface::PortableMediaPlayer PortableMediaPlayer Solid::DeviceInterface::Block Block qFatal QString UDevDevice::device devicePath QVariant UDevDevice::property QString key QVariant res m_device deviceProperty key res isValid res m_device sysfsProperty key QMap&lt;QString, QVariant&gt; UDevDevice::allProperties QMap&lt;QString, QVariant&gt; res Q_FOREACH QString prop m_device deviceProperties res prop property prop res UDevDevice::propertyExists QString key m_device deviceProperties contains key QString UDevDevice::systemAttribute attribute m_device sysfsProperty attribute toString QString UDevDevice::deviceName m_device sysfsPath UDevDevice::deviceNumber m_device sysfsNumber QString UDevDevice::devicePath QString UDEV_UDI_PREFIX deviceName UdevQt::Device UDevDevice::udevDevice m_device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevdevice.h</field>
    <field name="url">udevdevice_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDev UDevDevice Solid::Ifaces::Device Q_OBJECT UDevDevice UdevQt::Device device UDevDevice QString udi const Q_DECL_OVERRIDE QString parentUdi const Q_DECL_OVERRIDE QString vendor const Q_DECL_OVERRIDE QString product const Q_DECL_OVERRIDE QString icon const Q_DECL_OVERRIDE QStringList emblems const Q_DECL_OVERRIDE QString description const Q_DECL_OVERRIDE queryDeviceInterface const Solid DeviceInterface Type type const Q_DECL_OVERRIDE QObject createDeviceInterface const Solid DeviceInterface Type type Q_DECL_OVERRIDE QString device const QVariant property const QString key const QMap QString QVariant allProperties const propertyExists const QString key const QString systemAttribute const attribute const QString deviceName const QString devicePath const deviceNumber const UdevQt Device udevDevice private UdevQt Device m_device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevdeviceinterface.cpp</field>
    <field name="url">udevdeviceinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDev DeviceInterface::DeviceInterface UDevDevice device QObject device m_device device DeviceInterface::~DeviceInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevdeviceinterface.h</field>
    <field name="url">udevdeviceinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDev DeviceInterface QObject Solid::Ifaces::DeviceInterface Q_OBJECT Q_INTERFACES Solid::Ifaces::DeviceInterface DeviceInterface UDevDevice device DeviceInterface UDevDevice m_device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevgenericinterface.cpp</field>
    <field name="url">udevgenericinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDev GenericInterface::GenericInterface UDevDevice device DeviceInterface device connect device SIGNAL propertyChanged QMap&lt;QString,int&gt; SIGNAL propertyChanged QMap&lt;QString,int&gt; connect device SIGNAL conditionRaised QString QString SIGNAL conditionRaised QString QString GenericInterface::~GenericInterface QVariant GenericInterface::property QString key m_device property key QMap&lt;QString, QVariant&gt; GenericInterface::allProperties m_device allProperties GenericInterface::propertyExists QString key m_device propertyExists key</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevgenericinterface.h</field>
    <field name="url">udevgenericinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDev UDevDevice GenericInterface DeviceInterface Solid::Ifaces::GenericInterface Q_OBJECT Q_INTERFACES Solid::Ifaces::GenericInterface GenericInterface UDevDevice device GenericInterface QVariant property QString key Q_DECL_OVERRIDE QMap&lt;QString, QVariant&gt; allProperties const Q_DECL_OVERRIDE propertyExists const QString key const Q_DECL_OVERRIDE Q_SIGNALS propertyChanged const QMap QString changes Q_DECL_OVERRIDE conditionRaised const QString condition const QString reason Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevmanager.cpp</field>
    <field name="url">udevmanager_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDev Solid::Backends::Shared UDevManager::Private Private Private isOfInterest QString udi UdevQt::Device device checkOfInterest UdevQt::Device device UdevQt::Client m_client QStringList m_devicesOfInterest QSet&lt;Solid::DeviceInterface::Type&gt; m_supportedInterfaces UDevManager::Private::Private QStringList subsystems subsystems subsystems subsystems subsystems subsystems subsystems subsystems subsystems m_client UdevQt::Client subsystems UDevManager::Private::~Private m_client UDevManager::Private::isOfInterest QString udi UdevQt::Device device m_devicesOfInterest contains udi isOfInterest checkOfInterest device isOfInterest m_devicesOfInterest append udi isOfInterest UDevManager::Private::checkOfInterest UdevQt::Device device qDebug qDebug device sysfsPath qDebug device deviceProperties Q_FOREACH QString key device deviceProperties qDebug key device deviceProperty key toString qDebug device driver qDebug device subsystem qDebug device subsystem QLatin1String QFile::exists device sysfsPath QFile::exists device sysfsPath QFile::exists device sysfsPath device subsystem QLatin1String device deviceProperty toString device subsystem QLatin1String QString path device deviceProperty toString lastSlash path length path lastIndexOf QLatin1String QByteArray lastElement path right lastSlash toLatin1 lastElement startsWith path startsWith device subsystem QLatin1String device deviceProperty toInt device deviceProperty toInt device deviceProperty toInt device deviceProperty toInt device subsystem QLatin1String device subsystem QLatin1String device deviceProperty toString isEmpty device parent deviceProperty toString isEmpty device deviceProperty toInt device parent deviceProperty toInt UDevManager::UDevManager QObject parent Solid Ifaces DeviceManager parent d new Private connect d m_client SIGNAL deviceAdded UdevQt::Device SLOT slotDeviceAdded UdevQt::Device connect d m_client SIGNAL deviceRemoved UdevQt::Device SLOT slotDeviceRemoved UdevQt::Device d m_supportedInterfaces Solid::DeviceInterface::GenericInterface Solid::DeviceInterface::Processor Solid::DeviceInterface::Camera Solid::DeviceInterface::PortableMediaPlayer Solid::DeviceInterface::Block UDevManager::~UDevManager d QString UDevManager::udiPrefix QString::fromLatin1 UDEV_UDI_PREFIX QSet&lt;Solid::DeviceInterface::Type&gt; UDevManager::supportedInterfaces d m_supportedInterfaces QStringList UDevManager::allDevices QStringList res UdevQt::DeviceList deviceList d m_client allDevices Q_FOREACH UdevQt::Device device deviceList d isOfInterest udiPrefix device sysfsPath device res udiPrefix device sysfsPath res QStringList UDevManager::devicesFromQuery QString parentUdi Solid::DeviceInterface::Type type QStringList allDev allDevices QStringList result parentUdi isEmpty Q_FOREACH QString udi allDev UDevDevice device d m_client deviceBySysfsPath udi right udi size udiPrefix size device queryDeviceInterface type device parentUdi parentUdi result udi result type Solid::DeviceInterface::Unknown Q_FOREACH QString udi allDev UDevDevice device d m_client deviceBySysfsPath udi right udi size udiPrefix size device queryDeviceInterface type result udi result allDev QObject UDevManager::createDevice QString udi_ udi_ udiPrefix RootDevice device RootDevice UDEV_UDI_PREFIX device setProduct tr device setDescription tr device setIcon device QString udi udi_ right udi_ size udiPrefix size UdevQt::Device device d m_client deviceBySysfsPath udi d isOfInterest udi_ device QFile::exists udi UDevDevice device UDevManager::slotDeviceAdded UdevQt::Device device d isOfInterest udiPrefix device sysfsPath device emit deviceAdded udiPrefix device sysfsPath UDevManager::slotDeviceRemoved UdevQt::Device device d isOfInterest udiPrefix device sysfsPath device emit deviceRemoved udiPrefix device sysfsPath d m_devicesOfInterest removeAll udiPrefix device sysfsPath</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevmanager.h</field>
    <field name="url">udevmanager_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDev UDevManager Solid::Ifaces::DeviceManager Q_OBJECT UDevManager QObject parent UDevManager QString udiPrefix const Q_DECL_OVERRIDE QSet Solid DeviceInterface Type supportedInterfaces const Q_DECL_OVERRIDE QStringList allDevices Q_DECL_OVERRIDE virtual QStringList devicesFromQuery const QString parentUdi Solid DeviceInterface Type type Q_DECL_OVERRIDE QObject createDevice const QString udi Q_DECL_OVERRIDE private Q_SLOTS slotDeviceAdded const UdevQt Device device slotDeviceRemoved const UdevQt Device device private class Private Private const d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevportablemediaplayer.cpp</field>
    <field name="url">udevportablemediaplayer_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDev QString readMpiValue QIODevice file QString group QString key QTextStream mpiStream file QString line QString currGroup mpiStream atEnd line mpiStream readLine trimmed line isEmpty line startsWith QChar line startsWith QChar line endsWith QChar currGroup line mid line length line indexOf QChar index line indexOf QChar currGroup group line left index key line line right line length index line startsWith QChar line endsWith QChar line line mid line length line qWarning line QString PortableMediaPlayer::PortableMediaPlayer UDevDevice device DeviceInterface device PortableMediaPlayer::~PortableMediaPlayer QStringList PortableMediaPlayer::supportedProtocols m_device property toInt QStringList QString mpiFileName mediaPlayerInfoFilePath mpiFileName isEmpty QStringList QFile mpiFile mpiFileName mpiFile open QIODevice::ReadOnly QIODevice::Text qWarning mpiFileName QStringList QString value readMpiValue mpiFile QString QString value split QChar QString::SkipEmptyParts QStringList PortableMediaPlayer::supportedDrivers QString protocol Q_UNUSED protocol QStringList res supportedProtocols isEmpty res m_device property toBool res res QVariant PortableMediaPlayer::driverHandle QString driver driver driver m_device property QVariant QString PortableMediaPlayer::mediaPlayerInfoFilePath QString relativeFilename m_device property toString relativeFilename isEmpty qWarning m_device udi QString relativeFilename prepend relativeFilename append QString filename QStandardPaths::locate QStandardPaths::GenericDataLocation relativeFilename filename isEmpty qWarning relativeFilename filename</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevportablemediaplayer.h</field>
    <field name="url">udevportablemediaplayer_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDev UDevDevice PortableMediaPlayer DeviceInterface Solid::Ifaces::PortableMediaPlayer Q_OBJECT Q_INTERFACES Solid::Ifaces::PortableMediaPlayer PortableMediaPlayer UDevDevice device PortableMediaPlayer QStringList supportedProtocols const Q_DECL_OVERRIDE QStringList supportedDrivers QString protocol QString const Q_DECL_OVERRIDE QVariant driverHandle const QString driver const Q_DECL_OVERRIDE private QString mediaPlayerInfoFilePath const</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevprocessor.cpp</field>
    <field name="url">udevprocessor_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDev Processor::Processor UDevDevice device DeviceInterface device m_canChangeFrequency NotChecked m_maxSpeed Processor::~Processor Processor::number m_device deviceNumber Processor::maxSpeed m_maxSpeed QFile cpuMaxFreqFile m_device deviceName prefix cpuMaxFreqFile open QIODevice::ReadOnly QString value cpuMaxFreqFile readAll trimmed m_maxSpeed value toLongLong m_maxSpeed m_maxSpeed extractCurrentCpuSpeed number m_maxSpeed Processor::canChangeFrequency m_canChangeFrequency NotChecked m_canChangeFrequency CannotChangeFreq QFile cpuMinFreqFile m_device deviceName prefix QFile cpuMaxFreqFile m_device deviceName prefix cpuMinFreqFile open QIODevice::ReadOnly cpuMaxFreqFile open QIODevice::ReadOnly qlonglong minFreq cpuMinFreqFile readAll trimmed toLongLong qlonglong maxFreq cpuMaxFreqFile readAll trimmed toLongLong minFreq maxFreq minFreq m_canChangeFrequency CanChangeFreq m_canChangeFrequency CanChangeFreq Solid::Processor::InstructionSets Processor::instructionSets Solid::Processor::InstructionSets cpuextensions Solid::Backends::Shared::cpuFeatures cpuextensions QString Processor::prefix QLatin1String sysPrefix QFile::exists m_device deviceName sysPrefix sysPrefix QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevprocessor.h</field>
    <field name="url">udevprocessor_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDev UDevDevice Processor DeviceInterface Solid::Ifaces::Processor Q_OBJECT Q_INTERFACES Solid::Ifaces::Processor Processor UDevDevice device Processor number const Q_DECL_OVERRIDE maxSpeed const Q_DECL_OVERRIDE canChangeFrequency const Q_DECL_OVERRIDE Solid Processor InstructionSets instructionSets const Q_DECL_OVERRIDE private enum CanChangeFrequencyEnum NotChecked CanChangeFreq CannotChangeFreq CanChangeFrequencyEnum m_canChangeFrequency m_maxSpeed QString prefix</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevqt.h</field>
    <field name="url">udevqt_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevqtclient.cpp</field>
    <field name="url">udevqtclient_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">UdevQt ClientPrivate::ClientPrivate Client q_ udev monitor q q_ monitorNotifier ClientPrivate::~ClientPrivate udev_unref udev monitorNotifier monitor udev_monitor_unref monitor ClientPrivate::init QStringList subsystemList ListenToWhat what udev udev_new what ListenToNone setWatchedSubsystems subsystemList ClientPrivate::setWatchedSubsystems QStringList subsystemList udev_monitor newM udev_monitor_new_from_netlink udev newM qWarning Q_FOREACH QString subsysDevtype subsystemList ix subsysDevtype indexOf ix QByteArray subsystem subsysDevtype left ix toLatin1 QByteArray devType subsysDevtype mid ix toLatin1 udev_monitor_filter_add_match_subsystem_devtype newM subsystem constData devType constData udev_monitor_filter_add_match_subsystem_devtype newM subsysDevtype toLatin1 constData NULL udev_monitor_enable_receiving newM QSocketNotifier sn QSocketNotifier udev_monitor_get_fd newM QSocketNotifier::Read QObject::connect sn SIGNAL activated q SLOT _uq_monitorReadyRead monitorNotifier monitor udev_monitor_unref monitor monitor newM monitorNotifier sn watchedSubsystems subsystemList ClientPrivate::_uq_monitorReadyRead fd Q_UNUSED fd monitorNotifier setEnabled udev_device dev udev_monitor_receive_device monitor monitorNotifier setEnabled dev Device device DevicePrivate dev QByteArray action udev_device_get_action dev action emit q deviceAdded device action emit q deviceRemoved device action emit q deviceChanged device action emit q deviceOnlined device action emit q deviceOfflined device qWarning action constData DeviceList ClientPrivate::deviceListFromEnumerate udev_enumerate en DeviceList ret udev_list_entry list entry udev_enumerate_scan_devices en list udev_enumerate_get_list_entry en udev_list_entry_foreach entry list udev_device ud udev_device_new_from_syspath udev_enumerate_get_udev en udev_list_entry_get_name entry ud ret Device DevicePrivate ud udev_enumerate_unref en ret Client::Client QObject parent QObject parent d new ClientPrivate this d init QStringList ClientPrivate::ListenToNone Client::Client QStringList subsystemList QObject parent QObject parent d new ClientPrivate this d init subsystemList ClientPrivate::ListenToList Client::~Client d QStringList Client::watchedSubsystems d watchedSubsystems isEmpty d watchedSubsystems d monitor QStringList udev_enumerate en udev_enumerate_new d udev udev_enumerate_scan_subsystems en QStringList s listFromListEntry udev_enumerate_get_list_entry en udev_enumerate_unref en s Client::setWatchedSubsystems QStringList subsystemList d setWatchedSubsystems subsystemList DeviceList Client::devicesByProperty QString property QVariant value udev_enumerate en udev_enumerate_new d udev value isValid udev_enumerate_add_match_property en property toLatin1 constData value toString toLatin1 constData udev_enumerate_add_match_property en property toLatin1 constData NULL d deviceListFromEnumerate en DeviceList Client::allDevices udev_enumerate en udev_enumerate_new d udev d deviceListFromEnumerate en DeviceList Client::devicesBySubsystem QString subsystem udev_enumerate en udev_enumerate_new d udev udev_enumerate_add_match_subsystem en subsystem toLatin1 constData d deviceListFromEnumerate en Device Client::deviceByDeviceFile QString deviceFile QT_STATBUF sb QT_STAT deviceFile toLatin1 constData sb Device udev_device ud S_ISBLK sb st_mode ud udev_device_new_from_devnum d udev sb st_rdev S_ISCHR sb st_mode ud udev_device_new_from_devnum d udev sb st_rdev ud Device Device DevicePrivate ud Device Client::deviceBySysfsPath QString sysfsPath udev_device ud udev_device_new_from_syspath d udev sysfsPath toLatin1 constData ud Device Device DevicePrivate ud Device Client::deviceBySubsystemAndName QString subsystem QString name udev_device ud udev_device_new_from_subsystem_sysname d udev subsystem toLatin1 constData name toLatin1 constData ud Device Device DevicePrivate ud</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevqtclient.h</field>
    <field name="url">udevqtclient_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">UdevQt ClientPrivate Client QObject Q_OBJECT Q_PROPERTY QStringList watchedSubsystems READ watchedSubsystems WRITE setWatchedSubsystems Client QObject parent Client QStringList subsystemList QObject parent Client QStringList watchedSubsystems setWatchedSubsystems QStringList subsystemList DeviceList allDevices DeviceList devicesByProperty QString property QVariant value DeviceList devicesBySubsystem QString subsystem Device deviceByDeviceFile QString deviceFile Device deviceBySysfsPath QString sysfsPath Device deviceBySubsystemAndName QString subsystem QString name Q_SIGNALS deviceAdded UdevQt::Device dev deviceRemoved UdevQt::Device dev deviceChanged UdevQt::Device dev deviceOnlined UdevQt::Device dev deviceOfflined UdevQt::Device dev ClientPrivate Q_PRIVATE_SLOT d _uq_monitorReadyRead fd ClientPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevqtdevice.cpp</field>
    <field name="url">udevqtdevice_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">UdevQt DevicePrivate::DevicePrivate udev_device udev_ ref udev udev_ ref udev_device_ref udev DevicePrivate::~DevicePrivate udev_device_unref udev DevicePrivate DevicePrivate::operator= DevicePrivate other udev_device_unref udev udev udev_device_ref other udev QString DevicePrivate::decodePropertyValue QByteArray encoded QByteArray decoded len encoded length i i len i quint8 ch encoded at i ch i len encoded at i decoded append i i len encoded at i QByteArray hex encoded mid i ok code hex toInt ok ok decoded append code i decoded append ch QString::fromUtf8 decoded Device::Device d Device::Device Device other other d d DevicePrivate other d udev d Device::Device DevicePrivate devPrivate d devPrivate Device::~Device d Device Device::operator= Device other other other d d d d d DevicePrivate other d udev d other d Device::isValid d QString Device::subsystem d QString QString::fromLatin1 udev_device_get_subsystem d udev QString Device::devType d QString QString::fromLatin1 udev_device_get_devtype d udev QString Device::name d QString QString::fromLatin1 udev_device_get_sysname d udev QString Device::sysfsPath d QString QString::fromLatin1 udev_device_get_syspath d udev Device::sysfsNumber d QString value QString::fromLatin1 udev_device_get_sysnum d udev success number value toInt success success number QString Device::driver d QString QString::fromLatin1 udev_device_get_driver d udev QString Device::primaryDeviceFile d QString QString::fromLatin1 udev_device_get_devnode d udev QStringList Device::alternateDeviceSymlinks d QStringList listFromListEntry udev_device_get_devlinks_list_entry d udev QStringList Device::deviceProperties d QStringList listFromListEntry udev_device_get_properties_list_entry d udev QStringList Device::sysfsProperties d QStringList listFromListEntry udev_device_get_sysattr_list_entry d udev Device Device::parent d Device udev_device p udev_device_get_parent d udev p Device Device DevicePrivate p QVariant Device::deviceProperty QString name d QVariant QByteArray propName name toLatin1 QString propValue QString::fromLatin1 udev_device_get_property_value d udev propName constData propValue isEmpty QVariant::fromValue propValue QVariant QString Device::decodedDeviceProperty QString name d QString QByteArray propName name toLatin1 d decodePropertyValue udev_device_get_property_value d udev propName constData QVariant Device::sysfsProperty QString name d QVariant QByteArray propName name toLatin1 QString propValue QString::fromLatin1 udev_device_get_sysattr_value d udev propName constData propValue isEmpty QVariant::fromValue propValue QVariant Device Device::ancestorOfType QString subsys QString devtype d Device udev_device p udev_device_get_parent_with_subsystem_devtype d udev subsys toLatin1 constData devtype toLatin1 constData p Device Device DevicePrivate p</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udevqtdevice.h</field>
    <field name="url">udevqtdevice_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">UdevQt DevicePrivate Device Device Device Device other Device Device operator=  Device other isValid QString subsystem QString devType QString name QString sysfsPath sysfsNumber QString driver QString primaryDeviceFile QStringList alternateDeviceSymlinks QStringList deviceProperties QStringList sysfsProperties Device parent QVariant deviceProperty QString name QString decodedDeviceProperty QString name QVariant sysfsProperty QString name Device ancestorOfType QString subsys QString devtype Device DevicePrivate devPrivate Client ClientPrivate DevicePrivate d QList&lt;Device&gt; DeviceList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisks2.h</field>
    <field name="url">udisks2_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;QByteArray&gt; ByteArrayList Q_DECLARE_METATYPE ByteArrayList QMap&lt;QString, QVariantMap&gt; VariantMapMap Q_DECLARE_METATYPE VariantMapMap QMap&lt;QDBusObjectPath, VariantMapMap&gt; DBUSManagerStruct Q_DECLARE_METATYPE DBUSManagerStruct</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksblock.cpp</field>
    <field name="url">udisksblock_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDisks2 Block::Block Device dev DeviceInterface dev m_devNum m_device prop toULongLong m_devFile QFile::decodeName m_device prop toByteArray m_devNum m_devFile isEmpty QString path QDBusMessage call QDBusMessage::createMethodCall UD2_DBUS_SERVICE path DBUS_INTERFACE_INTROSPECT QDBusPendingReply&lt;QString&gt; reply QDBusConnection::systemBus asyncCall call reply waitForFinished reply isValid QDomDocument dom dom setContent reply value QDomNodeList nodeList dom documentElement elementsByTagName i i nodeList count i QDomElement nodeElem nodeList item i toElement nodeElem isNull nodeElem hasAttribute QString udi path nodeElem attribute Device device udi device drivePath dev udi m_devNum device prop toULongLong m_devFile QFile::decodeName device prop toByteArray qWarning reply error name reply error message Block::~Block QString Block::device m_devFile Block::deviceMinor MINOR m_devNum Block::deviceMajor MAJOR m_devNum</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksblock.h</field>
    <field name="url">udisksblock_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDisks2 Block DeviceInterface Solid::Ifaces::Block Q_OBJECT Q_INTERFACES Solid::Ifaces::Block Block Device dev Block QString device const Q_DECL_OVERRIDE deviceMinor const Q_DECL_OVERRIDE deviceMajor const Q_DECL_OVERRIDE private dev_t m_devNum QString m_devFile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksdevice.cpp</field>
    <field name="url">udisksdevice_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDisks2 QString formatByteSize size QString s size size size s QCoreApplication::translate arg QLocale toString size s QCoreApplication::translate arg QLocale toString size size size s QCoreApplication::translate arg QLocale toString size size size s QCoreApplication::translate arg QLocale toString size size s QCoreApplication::translate arg QLocale toString size s QCoreApplication::translate s Device::Device QString udi Solid Ifaces Device m_backend DeviceBackend backendForUDI udi m_backend connect m_backend SIGNAL changed SIGNAL changed connect m_backend SIGNAL propertyChanged QMap&lt;QString,int&gt; SIGNAL propertyChanged QMap&lt;QString,int&gt; qDebug udi Device::~Device QString Device::udi m_backend m_backend udi QString QVariant Device::prop QString key m_backend m_backend prop key QVariant Device::propertyExists QString key m_backend m_backend propertyExists key QVariantMap Device::allProperties m_backend m_backend allProperties QVariantMap Device::hasInterface QString name m_backend m_backend interfaces contains name QStringList Device::interfaces m_backend m_backend interfaces QStringList QObject Device::createDeviceInterface Solid::DeviceInterface::Type type queryDeviceInterface type DeviceInterface iface type Solid::DeviceInterface::GenericInterface iface GenericInterface Solid::DeviceInterface::Block iface Block Solid::DeviceInterface::StorageAccess iface StorageAccess Solid::DeviceInterface::StorageDrive iface StorageDrive Solid::DeviceInterface::OpticalDrive iface OpticalDrive Solid::DeviceInterface::StorageVolume iface StorageVolume Solid::DeviceInterface::OpticalDisc iface OpticalDisc iface Device::queryDeviceInterface Solid::DeviceInterface::Type type type Solid::DeviceInterface::GenericInterface Solid::DeviceInterface::Block isBlock isDrive Solid::DeviceInterface::StorageVolume isStorageVolume Solid::DeviceInterface::StorageAccess isStorageAccess Solid::DeviceInterface::StorageDrive isDrive Solid::DeviceInterface::OpticalDrive isOpticalDrive Solid::DeviceInterface::OpticalDisc isOpticalDisc QStringList Device::emblems QStringList res queryDeviceInterface Solid::DeviceInterface::StorageAccess UDisks2::StorageAccess accessIface const_cast&lt;Device *&gt; accessIface isAccessible isEncryptedContainer res res isEncryptedContainer res res res QString Device::description QString hintName property toString hintName isEmpty hintName isLoop tr isSwap tr queryDeviceInterface Solid::DeviceInterface::StorageDrive storageDescription queryDeviceInterface Solid::DeviceInterface::StorageVolume volumeDescription product QString Device::storageDescription QString description UDisks2::StorageDrive storageDrive const_cast&lt;Device *&gt; Solid::StorageDrive::DriveType drive_type storageDrive driveType drive_is_hotpluggable storageDrive isHotpluggable drive_type Solid::StorageDrive::CdromDrive UDisks2::OpticalDrive opticalDrive const_cast&lt;Device *&gt; Solid::OpticalDrive::MediumTypes mediumTypes opticalDrive supportedMedia QString first QString second first tr mediumTypes Solid::OpticalDrive::Cdr first tr mediumTypes Solid::OpticalDrive::Cdrw first tr mediumTypes Solid::OpticalDrive::Dvd second tr mediumTypes Solid::OpticalDrive::Dvdplusr second tr mediumTypes Solid::OpticalDrive::Dvdplusrw second tr mediumTypes Solid::OpticalDrive::Dvdr second tr mediumTypes Solid::OpticalDrive::Dvdrw second tr mediumTypes Solid::OpticalDrive::Dvdram second tr mediumTypes Solid::OpticalDrive::Dvdr mediumTypes Solid::OpticalDrive::Dvdplusr mediumTypes Solid::OpticalDrive::Dvdplusdl second trUtf8 second trUtf8 mediumTypes Solid::OpticalDrive::Dvdrw mediumTypes Solid::OpticalDrive::Dvdplusrw mediumTypes Solid::OpticalDrive::Dvdplusdl mediumTypes Solid::OpticalDrive::Dvdplusdlrw second trUtf8 second trUtf8 mediumTypes Solid::OpticalDrive::Bd second tr mediumTypes Solid::OpticalDrive::Bdr second tr mediumTypes Solid::OpticalDrive::Bdre second tr mediumTypes Solid::OpticalDrive::HdDvd second tr mediumTypes Solid::OpticalDrive::HdDvdr second tr mediumTypes Solid::OpticalDrive::HdDvdrw second tr drive_is_hotpluggable description tr arg first arg second description tr arg first arg second description drive_type Solid::StorageDrive::Floppy drive_is_hotpluggable description tr description tr description drive_is_removable storageDrive isRemovable drive_type Solid::StorageDrive::HardDisk drive_is_removable QString size_str formatByteSize storageDrive size size_str isEmpty drive_is_hotpluggable description tr arg size_str description tr arg size_str drive_is_hotpluggable description tr description tr description QString vendormodel_str QString model product QString vendor_str vendor vendor_str isEmpty model isEmpty vendormodel_str model model isEmpty vendormodel_str vendor_str model startsWith vendor_str vendormodel_str model vendormodel_str tr arg vendor_str arg model vendormodel_str isEmpty description tr description vendormodel_str description QString Device::volumeDescription QString description UDisks2::StorageVolume storageVolume const_cast&lt;Device *&gt; QString volume_label prop toString volume_label isEmpty volume_label prop toString volume_label isEmpty volume_label UDisks2::Device storageDevice drivePath UDisks2::StorageDrive storageDrive storageDevice Solid::StorageDrive::DriveType drive_type storageDrive driveType drive_type Solid::StorageDrive::CdromDrive UDisks2::OpticalDisc disc const_cast&lt;Device *&gt; disc discType Solid::OpticalDisc::UnknownDiscType Solid::OpticalDisc::CdRom description tr Solid::OpticalDisc::CdRecordable disc isBlank description tr description tr Solid::OpticalDisc::CdRewritable disc isBlank description tr description tr Solid::OpticalDisc::DvdRom description tr Solid::OpticalDisc::DvdRam disc isBlank description tr description tr Solid::OpticalDisc::DvdRecordable disc isBlank description tr description tr Solid::OpticalDisc::DvdPlusRecordableDuallayer disc isBlank description tr description tr Solid::OpticalDisc::DvdRewritable disc isBlank description tr description tr Solid::OpticalDisc::DvdPlusRecordable disc isBlank description tr description tr Solid::OpticalDisc::DvdPlusRewritable disc isBlank description tr description tr Solid::OpticalDisc::DvdPlusRewritableDuallayer disc isBlank description tr description tr Solid::OpticalDisc::BluRayRom description tr Solid::OpticalDisc::BluRayRecordable disc isBlank description tr description tr Solid::OpticalDisc::BluRayRewritable disc isBlank description tr description tr Solid::OpticalDisc::HdDvdRom description tr Solid::OpticalDisc::HdDvdRecordable disc isBlank description tr description tr Solid::OpticalDisc::HdDvdRewritable disc isBlank description tr description tr disc availableContent Solid::OpticalDisc::Audio description tr description drive_is_removable storageDrive isRemovable drive_is_hotpluggable storageDrive isHotpluggable QString size_str formatByteSize storageVolume size isEncryptedContainer size_str isEmpty description tr arg size_str description tr drive_type Solid::StorageDrive::HardDisk drive_is_removable size_str isEmpty drive_is_hotpluggable description tr arg size_str description tr arg size_str drive_is_hotpluggable description tr description tr drive_is_removable description tr arg size_str description tr arg size_str description QString Device::icon QString iconName property toString iconName isEmpty iconName isLoop isSwap isDrive isRemovable prop toBool QString conn prop toString isOpticalDrive isRemovable prop toBool conn isBlock QString drv drivePath drv isEmpty drv Device drive drv QString media drive prop toString media isEmpty drive prop toBool isWritable drive prop toBool UDisks2::OpticalDisc disc const_cast&lt;Device *&gt; Solid::OpticalDisc::ContentTypes availContent disc availableContent availContent Solid::OpticalDisc::VideoDvd availContent Solid::OpticalDisc::VideoCd availContent Solid::OpticalDisc::SuperVideoCd availContent Solid::OpticalDisc::Data availContent Solid::OpticalDisc::Audio availContent Solid::OpticalDisc::Audio availContent Solid::OpticalDisc::Data isWritable media startsWith media startsWith media startsWith media media media media media media media media startsWith media drive prop toString drive icon QString Device::product isDrive Device drive drivePath drive prop toString prop toString QString Device::vendor isDrive Device drive drivePath drive prop toString prop toString QString Device::parentUdi QString parent propertyExists parent drivePath propertyExists parent prop value QDBusObjectPath path parent isEmpty parent parent UD2_UDI_DISKS_PREFIX parent QString Device::errorToString QString error error UD2_ERROR_UNAUTHORIZED error UD2_ERROR_NOT_AUTHORIZED tr error UD2_ERROR_BUSY tr error UD2_ERROR_FAILED tr error UD2_ERROR_CANCELED tr error UD2_ERROR_INVALID_OPTION tr error UD2_ERROR_MISSING_DRIVER tr error UD2_ERROR_ALREADY_MOUNTED tr error UD2_ERROR_NOT_MOUNTED tr error UD2_ERROR_MOUNTED_BY_OTHER_USER tr error UD2_ERROR_ALREADY_UNMOUNTING tr error UD2_ERROR_TIMED_OUT tr error UD2_ERROR_WOULD_WAKEUP tr error UD2_ERROR_ALREADY_CANCELLED tr tr Solid::ErrorType Device::errorToSolidError QString error error UD2_ERROR_BUSY Solid::DeviceBusy error UD2_ERROR_FAILED Solid::OperationFailed error UD2_ERROR_CANCELED Solid::UserCanceled error UD2_ERROR_INVALID_OPTION Solid::InvalidOption error UD2_ERROR_MISSING_DRIVER Solid::MissingDriver Solid::UnauthorizedOperation Device::isBlock hasInterface UD2_DBUS_INTERFACE_BLOCK Device::isPartition hasInterface UD2_DBUS_INTERFACE_PARTITION Device::isPartitionTable hasInterface UD2_DBUS_INTERFACE_PARTITIONTABLE Device::isStorageVolume isPartition isPartitionTable isStorageAccess isOpticalDisc Device::isStorageAccess hasInterface UD2_DBUS_INTERFACE_FILESYSTEM isEncryptedContainer Device::isDrive hasInterface UD2_DBUS_INTERFACE_DRIVE Device::isOpticalDrive isDrive prop toStringList filter isEmpty Device::isOpticalDisc QString drv drivePath drv isEmpty drv Device drive drv drive prop toBool Device::mightBeOpticalDisc QString drv drivePath drv isEmpty drv Device drive drv drive isOpticalDrive Device::isMounted propertyExists qdbus_cast ByteArrayList prop isEmpty Device::isEncryptedContainer hasInterface UD2_DBUS_INTERFACE_ENCRYPTED Device::isEncryptedCleartext QString holderDevice prop toString holderDevice isEmpty holderDevice Device::isSwap hasInterface UD2_DBUS_INTERFACE_SWAP Device::isLoop hasInterface UD2_DBUS_INTERFACE_LOOP QString Device::drivePath prop value QDBusObjectPath path</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksdevice.h</field>
    <field name="url">udisksdevice_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDisks2 DeviceBackend Device Solid::Ifaces::Device Q_OBJECT Device QString udi Device QObject createDeviceInterface Solid::DeviceInterface::Type type Q_DECL_OVERRIDE queryDeviceInterface Solid::DeviceInterface::Type type Q_DECL_OVERRIDE QString description const Q_DECL_OVERRIDE QStringList emblems const Q_DECL_OVERRIDE QString icon const Q_DECL_OVERRIDE QString product const Q_DECL_OVERRIDE QString vendor const Q_DECL_OVERRIDE QString udi const Q_DECL_OVERRIDE QString parentUdi const Q_DECL_OVERRIDE QVariant prop const QString key const propertyExists const QString key const QVariantMap allProperties const hasInterface const QString name const QStringList interfaces const QString errorToString const QString error const Solid ErrorType errorToSolidError const QString error const isBlock const isPartition const isPartitionTable const isStorageVolume const isStorageAccess const isDrive const isOpticalDrive const isOpticalDisc const mightBeOpticalDisc const isMounted const isEncryptedContainer const isEncryptedCleartext const isSwap const isLoop const QString drivePath const Q_SIGNALS changed propertyChanged const QMap QString changes protected QPointer DeviceBackend m_backend private QString storageDescription const QString volumeDescription const</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksdevicebackend.cpp</field>
    <field name="url">udisksdevicebackend_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDisks2 QMap QString DeviceBackend DeviceBackend::s_backends DeviceBackend DeviceBackend::backendForUDI QString udi create DeviceBackend backend udi isEmpty backend s_backends contains udi backend s_backends value udi create backend DeviceBackend udi s_backends insert udi backend backend DeviceBackend::destroyBackend QString udi s_backends contains udi DeviceBackend backend s_backends value udi s_backends remove udi backend DeviceBackend::DeviceBackend QString udi m_udi udi m_device QDBusInterface UD2_DBUS_SERVICE m_udi QString QDBusConnection::systemBus m_device isValid QDBusConnection::systemBus connect UD2_DBUS_SERVICE m_udi DBUS_INTERFACE_PROPS SLOT slotPropertiesChanged QString QVariantMap QStringList QDBusConnection::systemBus connect UD2_DBUS_SERVICE UD2_DBUS_PATH DBUS_INTERFACE_MANAGER SLOT slotInterfacesAdded QDBusObjectPath VariantMapMap QDBusConnection::systemBus connect UD2_DBUS_SERVICE UD2_DBUS_PATH DBUS_INTERFACE_MANAGER SLOT slotInterfacesRemoved QDBusObjectPath QStringList initInterfaces DeviceBackend::~DeviceBackend DeviceBackend::initInterfaces m_interfaces clear QString xmlData introspect xmlData isEmpty qDebug m_udi QDomDocument dom dom setContent xmlData QDomNodeList ifaceNodeList dom elementsByTagName i i ifaceNodeList count i QDomElement ifaceElem ifaceNodeList item i toElement ifaceElem isNull ifaceElem attribute startsWith UD2_DBUS_SERVICE m_interfaces append ifaceElem attribute QStringList DeviceBackend::interfaces m_interfaces QString DeviceBackend::udi m_udi QVariant DeviceBackend::prop QString key checkCache key m_propertyCache value key DeviceBackend::propertyExists QString key checkCache key m_propertyCache value key isValid QVariantMap DeviceBackend::allProperties QDBusMessage call QDBusMessage::createMethodCall UD2_DBUS_SERVICE m_udi DBUS_INTERFACE_PROPS Q_FOREACH QString iface m_interfaces call setArguments QVariantList iface QDBusPendingReply&lt;QVariantMap&gt; reply QDBusConnection::systemBus call call reply isValid m_propertyCache unite reply value qWarning reply error name reply error message m_propertyCache DeviceBackend::invalidateProperties m_propertyCache clear QString DeviceBackend::introspect QDBusMessage call QDBusMessage::createMethodCall UD2_DBUS_SERVICE m_udi DBUS_INTERFACE_INTROSPECT QDBusPendingReply&lt;QString&gt; reply QDBusConnection::systemBus call call reply isValid reply value QString DeviceBackend::checkCache QString key m_propertyCache isEmpty allProperties m_propertyCache contains key QVariant reply m_device property key toUtf8 m_propertyCache insert key reply reply isValid DeviceBackend::slotPropertiesChanged QString ifaceName QVariantMap changedProps QStringList invalidatedProps ifaceName startsWith UD2_DBUS_SERVICE QMap&lt;QString, int&gt; changeMap Q_FOREACH QString key invalidatedProps m_propertyCache remove key changeMap insert key Solid::GenericInterface::PropertyModified QMapIterator&lt;QString, QVariant&gt; i changedProps i hasNext i next QString key i key m_propertyCache insert key i value changeMap insert key Solid::GenericInterface::PropertyModified emit propertyChanged changeMap emit changed DeviceBackend::slotInterfacesAdded QDBusObjectPath object_path VariantMapMap interfaces_and_properties object_path path m_udi Q_FOREACH QString iface interfaces_and_properties keys iface startsWith UD2_DBUS_SERVICE m_interfaces append iface DeviceBackend::slotInterfacesRemoved QDBusObjectPath object_path QStringList interfaces object_path path m_udi Q_FOREACH QString iface interfaces m_interfaces removeAll iface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksdevicebackend.h</field>
    <field name="url">udisksdevicebackend_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDisks2 DeviceBackend QObject Q_OBJECT DeviceBackend backendForUDI QString udi create destroyBackend QString udi DeviceBackend QString udi DeviceBackend QVariant prop QString key propertyExists QString key QVariantMap allProperties QStringList interfaces QString udi invalidateProperties Q_SIGNALS propertyChanged QMap&lt;QString, int&gt; changeMap changed Q_SLOTS slotInterfacesAdded QDBusObjectPath object_path VariantMapMap interfaces_and_properties slotInterfacesRemoved QDBusObjectPath object_path QStringList interfaces slotPropertiesChanged QString ifaceName QVariantMap changedProps QStringList invalidatedProps initInterfaces QString introspect checkCache QString key QDBusInterface m_device QVariantMap m_propertyCache QStringList m_interfaces QString m_udi QMap&lt;QString, DeviceBackend *&gt; s_backends</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksdeviceinterface.cpp</field>
    <field name="url">udisksdeviceinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDisks2 DeviceInterface::DeviceInterface Device device QObject device m_device device DeviceInterface::~DeviceInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksdeviceinterface.h</field>
    <field name="url">udisksdeviceinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDisks2 DeviceInterface QObject Solid::Ifaces::DeviceInterface Q_OBJECT Q_INTERFACES Solid::Ifaces::DeviceInterface DeviceInterface Device device DeviceInterface Device m_device QStringList toStringList Solid::DeviceInterface::Type type QStringList list type Solid::DeviceInterface::GenericInterface list Solid::DeviceInterface::Block list Solid::DeviceInterface::StorageAccess list Solid::DeviceInterface::StorageDrive list Solid::DeviceInterface::OpticalDrive list Solid::DeviceInterface::StorageVolume list Solid::DeviceInterface::OpticalDisc list Solid::DeviceInterface::Processor Solid::DeviceInterface::Camera Solid::DeviceInterface::PortableMediaPlayer Solid::DeviceInterface::Battery Solid::DeviceInterface::NetworkShare Solid::DeviceInterface::Unknown Solid::DeviceInterface::Last list Solid::DeviceInterface::Type fromString QString capability capability Solid::DeviceInterface::GenericInterface capability Solid::DeviceInterface::Block capability Solid::DeviceInterface::StorageDrive capability Solid::DeviceInterface::OpticalDrive capability Solid::DeviceInterface::StorageVolume capability Solid::DeviceInterface::OpticalDisc Solid::DeviceInterface::Unknown</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksgenericinterface.cpp</field>
    <field name="url">udisksgenericinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDisks2 GenericInterface::GenericInterface Device device DeviceInterface device connect device SIGNAL propertyChanged QMap&lt;QString,int&gt; SIGNAL propertyChanged QMap&lt;QString,int&gt; GenericInterface::~GenericInterface QVariant GenericInterface::property QString key m_device prop key QVariantMap GenericInterface::allProperties m_device allProperties GenericInterface::propertyExists QString key m_device propertyExists key</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksgenericinterface.h</field>
    <field name="url">udisksgenericinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDisks2 Device GenericInterface DeviceInterface Solid::Ifaces::GenericInterface Q_OBJECT Q_INTERFACES Solid::Ifaces::GenericInterface GenericInterface Device device GenericInterface QVariant property QString key Q_DECL_OVERRIDE QVariantMap allProperties const Q_DECL_OVERRIDE propertyExists const QString key const Q_DECL_OVERRIDE Q_SIGNALS propertyChanged const QMap QString changes Q_DECL_OVERRIDE conditionRaised const QString condition const QString reason Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksmanager.cpp</field>
    <field name="url">udisksmanager_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDisks2 Solid::Backends::Shared Manager::Manager QObject parent Solid Ifaces DeviceManager parent m_manager UD2_DBUS_SERVICE UD2_DBUS_PATH QDBusConnection systemBus m_supportedInterfaces Solid::DeviceInterface::GenericInterface Solid::DeviceInterface::Block Solid::DeviceInterface::StorageAccess Solid::DeviceInterface::StorageDrive Solid::DeviceInterface::OpticalDrive Solid::DeviceInterface::OpticalDisc Solid::DeviceInterface::StorageVolume qDBusRegisterMetaType&lt;QList&lt;QDBusObjectPath&gt; qDBusRegisterMetaType&lt;QVariantMap&gt; qDBusRegisterMetaType&lt;VariantMapMap&gt; qDBusRegisterMetaType&lt;ByteArrayList&gt; qDBusRegisterMetaType&lt;DBUSManagerStruct&gt; serviceFound m_manager isValid serviceFound QDBusMessage message QDBusMessage::createMethodCall QDBusReply&lt;QStringList&gt; reply QDBusConnection::systemBus call message reply isValid reply value contains UD2_DBUS_SERVICE QDBusConnection::systemBus interface startService UD2_DBUS_SERVICE serviceFound serviceFound connect m_manager SIGNAL InterfacesAdded QDBusObjectPath VariantMapMap SLOT slotInterfacesAdded QDBusObjectPath VariantMapMap connect m_manager SIGNAL InterfacesRemoved QDBusObjectPath QStringList SLOT slotInterfacesRemoved QDBusObjectPath QStringList Manager::~Manager m_deviceCache isEmpty QString udi m_deviceCache takeFirst DeviceBackend::destroyBackend udi QObject Manager::createDevice QString udi udi udiPrefix RootDevice root RootDevice udi root setProduct tr root setDescription tr root setIcon root deviceCache contains udi Device udi QStringList Manager::devicesFromQuery QString parentUdi Solid::DeviceInterface::Type type QStringList result parentUdi isEmpty Q_FOREACH QString udi deviceCache Device device udi device queryDeviceInterface type device parentUdi parentUdi result udi result type Solid::DeviceInterface::Unknown Q_FOREACH QString udi deviceCache Device device udi device queryDeviceInterface type result udi result deviceCache QStringList Manager::allDevices introspect introspect m_deviceCache Manager::introspect QString path checkOptical QDBusMessage call QDBusMessage::createMethodCall UD2_DBUS_SERVICE path DBUS_INTERFACE_INTROSPECT QDBusPendingReply&lt;QString&gt; reply QDBusConnection::systemBus call call reply isValid QDomDocument dom dom setContent reply value QDomNodeList nodeList dom documentElement elementsByTagName i i nodeList count i QDomElement nodeElem nodeList item i toElement nodeElem isNull nodeElem hasAttribute QString udi path nodeElem attribute checkOptical Device device udi device mightBeOpticalDisc QDBusConnection::systemBus connect UD2_DBUS_SERVICE udi DBUS_INTERFACE_PROPS SLOT slotMediaChanged QDBusMessage device isOpticalDisc m_deviceCache append udi qWarning reply error name reply error message QSet&lt; Solid::DeviceInterface::Type &gt; Manager::supportedInterfaces m_supportedInterfaces QString Manager::udiPrefix UD2_UDI_DISKS_PREFIX Manager::slotInterfacesAdded QDBusObjectPath object_path VariantMapMap interfaces_and_properties QString udi object_path path udi startsWith UD2_DBUS_PATH_JOBS qDebug udi interfaces_and_properties keys updateBackend udi m_deviceCache contains udi m_deviceCache append udi emit deviceAdded udi m_deviceCache contains udi interfaces_and_properties keys contains UD2_DBUS_INTERFACE_FILESYSTEM emit deviceAdded udi Manager::slotInterfacesRemoved QDBusObjectPath object_path QStringList interfaces QString udi object_path path udi startsWith UD2_DBUS_PATH_JOBS qDebug udi interfaces updateBackend udi Device device udi udi isEmpty interfaces isEmpty device interfaces isEmpty emit deviceRemoved udi m_deviceCache removeAll udi DeviceBackend::destroyBackend udi Manager::slotMediaChanged QDBusMessage msg QVariantMap properties qdbus_cast QVariantMap msg arguments at properties contains QString udi msg path updateBackend udi qulonglong size properties value toULongLong qDebug udi size m_deviceCache contains udi size m_deviceCache append udi emit deviceAdded udi m_deviceCache contains udi size emit deviceRemoved udi m_deviceCache removeAll udi DeviceBackend::destroyBackend udi QStringList Manager::deviceCache m_deviceCache isEmpty allDevices m_deviceCache Manager::updateBackend QString udi DeviceBackend backend DeviceBackend::backendForUDI udi backend backend allProperties QVariant driveProp backend prop driveProp isValid QDBusObjectPath drivePath qdbus_cast QDBusObjectPath driveProp DeviceBackend driveBackend DeviceBackend::backendForUDI drivePath path driveBackend driveBackend invalidateProperties</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksmanager.h</field>
    <field name="url">udisksmanager_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDisks2 Manager Solid::Ifaces::DeviceManager Q_OBJECT Manager QObject parent QObject createDevice QString udi Q_DECL_OVERRIDE QStringList devicesFromQuery QString parentUdi Solid::DeviceInterface::Type type Q_DECL_OVERRIDE QStringList allDevices Q_DECL_OVERRIDE QSet Solid DeviceInterface Type supportedInterfaces const Q_DECL_OVERRIDE QString udiPrefix const Q_DECL_OVERRIDE virtual Manager private Q_SLOTS slotInterfacesAdded const QDBusObjectPath object_path const VariantMapMap interfaces_and_properties slotInterfacesRemoved const QDBusObjectPath object_path const QStringList interfaces slotMediaChanged const QDBusMessage msg private const QStringList deviceCache introspect const QString path checkOptical false updateBackend const QString udi QSet Solid DeviceInterface Type m_supportedInterfaces org freedesktop DBus ObjectManager m_manager QStringList m_deviceCache</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksopticaldisc.cpp</field>
    <field name="url">udisksopticaldisc_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::OpticalDisc::ContentType advancedDiscDetect QByteArray device_file bs ts tl len_di parent dirname pos curr_record Solid::OpticalDisc::ContentType result Solid::OpticalDisc::NoContent fd open device_file constData O_RDONLY lseek fd x8080 SEEK_CUR read fd bs qDebug qPrintable device_file out lseek fd SEEK_CUR read fd ts qDebug qPrintable device_file out lseek fd SEEK_CUR read fd tl qDebug qPrintable device_file out lseek fd bs tl SEEK_SET pos ts read fd len_di qDebug qPrintable device_file lseek fd SEEK_CUR read fd parent qDebug qPrintable device_file read fd dirname len_di len_di qDebug qPrintable device_file dirname len_di parent strcasecmp dirname qDebug qPrintable device_file result Solid::OpticalDisc::VideoDvd strcasecmp dirname qDebug qPrintable device_file result Solid::OpticalDisc::VideoBluRay strcasecmp dirname qDebug qPrintable device_file result Solid::OpticalDisc::VideoCd strcasecmp dirname qDebug qPrintable device_file result Solid::OpticalDisc::SuperVideoCd len_di lseek fd SEEK_CUR pos pos len_di curr_record close fd result out lseek fd SEEK_SET close fd result Solid::Backends::UDisks2 ContentTypesCache ContentTypesCache m_n add OpticalDisc::Identity key Solid::OpticalDisc::ContentTypes content find key m_n qMin m_n m_info m_info moveToFront m_n front first key front second content find OpticalDisc::Identity key i i m_n i m_info i first key moveToFront i QPair&lt;OpticalDisc::Identity, Solid::OpticalDisc::ContentTypes&gt; front m_info moveToFront i i qSwap m_info i m_info i i m_n QPair&lt;OpticalDisc::Identity, Solid::OpticalDisc::ContentTypes&gt; m_info SharedContentTypesCache ContentTypesCache m_pointer QSystemSemaphore m_semaphore QSharedMemory m_shmem Unlocker Unlocker QSharedMemory mem m_mem mem Unlocker m_mem unlock QSharedMemory m_mem Releaser Releaser QSystemSemaphore sem m_sem sem Releaser m_sem release QSystemSemaphore m_sem QString getKey QString keyTemplate QString tableSize QString::number ContentTypesCache keyTemplate arg tableSize QString::number geteuid SharedContentTypesCache m_pointer m_semaphore getKey m_shmem getKey m_semaphore acquire Releaser releaser m_semaphore m_shmem attach m_pointer ContentTypesCache m_shmem data m_shmem create ContentTypesCache m_shmem lock m_shmem detach Unlocker unlocker m_shmem m_pointer m_shmem data ContentTypesCache Solid::OpticalDisc::ContentTypes getContent OpticalDisc::Identity info QByteArray file m_pointer advancedDiscDetect file m_semaphore acquire advancedDiscDetect file Releaser releaser m_semaphore m_shmem lock advancedDiscDetect file Unlocker unlocker m_shmem m_pointer find info m_pointer add info advancedDiscDetect file Solid::OpticalDisc::ContentTypes content m_pointer front second content SharedContentTypesCache m_semaphore acquire Releaser releaser m_semaphore m_shmem detach Q_GLOBAL_STATIC SharedContentTypesCache sharedContentTypesCache OpticalDisc::Identity::Identity m_detectTime m_size m_labelHash OpticalDisc::Identity::Identity Device device Device drive m_detectTime drive prop toLongLong m_size device prop toLongLong m_labelHash qHash device prop toString OpticalDisc::Identity::operator == OpticalDisc::Identity b m_detectTime b m_detectTime m_size b m_size m_labelHash b m_labelHash OpticalDisc::OpticalDisc Device dev StorageVolume dev UdevQt::Client client m_udevDevice client deviceByDeviceFile device m_udevDevice deviceProperties m_drive Device m_device drivePath OpticalDisc::~OpticalDisc m_drive qulonglong OpticalDisc::capacity m_device prop toULongLong OpticalDisc::isRewritable QString mediaType media mediaType mediaType mediaType mediaType mediaType mediaType mediaType OpticalDisc::isBlank m_drive prop toBool OpticalDisc::isAppendable m_udevDevice deviceProperty toString QLatin1String Solid::OpticalDisc::DiscType OpticalDisc::discType QMap&lt;Solid::OpticalDisc::DiscType, QString&gt; map map Solid::OpticalDisc::CdRom map Solid::OpticalDisc::CdRecordable map Solid::OpticalDisc::CdRewritable map Solid::OpticalDisc::DvdRom map Solid::OpticalDisc::DvdRecordable map Solid::OpticalDisc::DvdRewritable map Solid::OpticalDisc::DvdRam map Solid::OpticalDisc::DvdPlusRecordable map Solid::OpticalDisc::DvdPlusRewritable map Solid::OpticalDisc::DvdPlusRecordableDuallayer map Solid::OpticalDisc::DvdPlusRewritableDuallayer map Solid::OpticalDisc::BluRayRom map Solid::OpticalDisc::BluRayRecordable map Solid::OpticalDisc::BluRayRewritable map Solid::OpticalDisc::HdDvdRom map Solid::OpticalDisc::HdDvdRecordable map Solid::OpticalDisc::HdDvdRewritable map key media Solid::OpticalDisc::UnknownDiscType Solid::OpticalDisc::ContentTypes OpticalDisc::availableContent isBlank Solid::OpticalDisc::NoContent Solid::OpticalDisc::ContentTypes content Solid::OpticalDisc::NoContent hasData m_drive prop toUInt hasAudio m_drive prop toUInt hasData content Solid::OpticalDisc::Data Identity newIdentity m_device m_drive m_identity newIdentity QByteArray deviceFile m_device prop toByteArray m_cachedContent sharedContentTypesCache getContent newIdentity deviceFile m_identity newIdentity content m_cachedContent hasAudio content Solid::OpticalDisc::Audio content QString OpticalDisc::media m_drive prop toString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksopticaldisc.h</field>
    <field name="url">udisksopticaldisc_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDisks2 OpticalDisc StorageVolume Solid::Ifaces::OpticalDisc Q_OBJECT Q_INTERFACES Solid::Ifaces::OpticalDisc OpticalDisc Device dev OpticalDisc qulonglong capacity const Q_DECL_OVERRIDE isRewritable const Q_DECL_OVERRIDE isBlank const Q_DECL_OVERRIDE isAppendable const Q_DECL_OVERRIDE Solid OpticalDisc DiscType discType const Q_DECL_OVERRIDE Solid OpticalDisc ContentTypes availableContent const Q_DECL_OVERRIDE class Identity Identity Identity Device device Device drive operator == Identity m_detectTime m_size uint m_labelHash Identity m_identity QString media Solid::OpticalDisc::ContentTypes m_cachedContent Device m_drive UdevQt::Device m_udevDevice</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksopticaldrive.cpp</field>
    <field name="url">udisksopticaldrive_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDisks2 OpticalDrive::OpticalDrive Device device StorageDrive device m_ejectInProgress false m_readSpeed m_writeSpeed m_speedsInit false m_device registerAction SLOT slotEjectRequested SLOT slotEjectDone QString connect m_device SIGNAL changed SLOT slotChanged OpticalDrive::~OpticalDrive OpticalDrive::eject m_ejectInProgress m_ejectInProgress m_device broadcastActionRequested QString path m_device udi QDBusConnection c QDBusConnection::connectToBus QDBusConnection::SystemBus path QString blockPath org::freedesktop::DBus::ObjectManager manager UD2_DBUS_SERVICE UD2_DBUS_PATH c QDBusPendingReply&lt;DBUSManagerStruct&gt; reply manager GetManagedObjects reply waitForFinished reply isError Q_FOREACH QDBusObjectPath objPath reply value keys QString udi objPath path udi UD2_DBUS_PATH_MANAGER udi UD2_UDI_DISKS_PREFIX udi startsWith UD2_DBUS_PATH_JOBS Device device udi device drivePath path device isMounted blockPath udi qWarning reply error name reply error message blockPath isEmpty QDBusMessage msg QDBusMessage::createMethodCall UD2_DBUS_SERVICE blockPath UD2_DBUS_INTERFACE_FILESYSTEM msg QVariantMap c call msg QDBus::BlockWithGui QDBusMessage msg QDBusMessage::createMethodCall UD2_DBUS_SERVICE path UD2_DBUS_INTERFACE_DRIVE msg QVariantMap c callWithCallback msg SLOT slotDBusReply QDBusMessage SLOT slotDBusError QDBusError OpticalDrive::slotDBusReply QDBusMessage m_ejectInProgress m_device broadcastActionDone OpticalDrive::slotDBusError QDBusError error m_ejectInProgress m_device broadcastActionDone m_device errorToSolidError error name m_device errorToString error name error message OpticalDrive::slotEjectRequested m_ejectInProgress emit ejectRequested m_device udi OpticalDrive::slotEjectDone error QString errorString m_ejectInProgress emit ejectDone static_cast&lt;Solid::ErrorType&gt; error errorString m_device udi OpticalDrive::initReadWriteSpeeds read_speed write_speed write_speeds QByteArray device_file QFile::encodeName m_device property toString fd open device_file O_RDONLY O_NONBLOCK fd qWarning device_file constData strerror errno get_read_write_speed fd read_speed write_speed write_speeds m_readSpeed read_speed m_writeSpeed write_speed QStringList list QString::fromLatin1 write_speeds split QString::SkipEmptyParts Q_FOREACH QString speed list m_writeSpeeds append speed toInt free write_speeds m_speedsInit close fd QList&lt;int&gt; OpticalDrive::writeSpeeds m_speedsInit initReadWriteSpeeds m_writeSpeeds OpticalDrive::writeSpeed m_speedsInit initReadWriteSpeeds m_writeSpeed OpticalDrive::readSpeed m_speedsInit initReadWriteSpeeds m_readSpeed Solid::OpticalDrive::MediumTypes OpticalDrive::supportedMedia QStringList mediaTypes m_device prop toStringList Solid::OpticalDrive::MediumTypes supported QMap&lt;Solid::OpticalDrive::MediumType, QString&gt; map map Solid::OpticalDrive::Cdr map Solid::OpticalDrive::Cdrw map Solid::OpticalDrive::Dvd map Solid::OpticalDrive::Dvdr map Solid::OpticalDrive::Dvdrw map Solid::OpticalDrive::Dvdram map Solid::OpticalDrive::Dvdplusr map Solid::OpticalDrive::Dvdplusrw map Solid::OpticalDrive::Dvdplusdl map Solid::OpticalDrive::Dvdplusdlrw map Solid::OpticalDrive::Bd map Solid::OpticalDrive::Bdr map Solid::OpticalDrive::Bdre map Solid::OpticalDrive::HdDvd map Solid::OpticalDrive::HdDvdr map Solid::OpticalDrive::HdDvdrw Q_FOREACH Solid::OpticalDrive::MediumType type map keys mediaTypes contains map type supported type supported OpticalDrive::slotChanged m_speedsInit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksopticaldrive.h</field>
    <field name="url">udisksopticaldrive_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDisks2 OpticalDrive StorageDrive Solid::Ifaces::OpticalDrive Q_OBJECT Q_INTERFACES Solid::Ifaces::OpticalDrive OpticalDrive Device device OpticalDrive Q_SIGNALS ejectPressed QString udi Q_DECL_OVERRIDE ejectDone Solid::ErrorType error QVariant errorData QString udi Q_DECL_OVERRIDE ejectRequested QString udi eject Q_DECL_OVERRIDE QList writeSpeeds const Q_DECL_OVERRIDE writeSpeed const Q_DECL_OVERRIDE readSpeed const Q_DECL_OVERRIDE Solid OpticalDrive MediumTypes supportedMedia const Q_DECL_OVERRIDE private Q_SLOTS slotDBusReply const QDBusMessage reply slotDBusError const QDBusError error slotEjectRequested slotEjectDone error const QString errorString slotChanged private initReadWriteSpeeds const m_ejectInProgress mutable m_readSpeed mutable m_writeSpeed mutable QList m_writeSpeeds mutable m_speedsInit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksstorageaccess.cpp</field>
    <field name="url">udisksstorageaccess_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDisks2 StorageAccess::StorageAccess Device device DeviceInterface device m_setupInProgress false m_teardownInProgress false m_passphraseRequested false connect device SIGNAL changed SLOT checkAccessibility updateCache QTimer::singleShot SLOT connectDBusSignals StorageAccess::~StorageAccess StorageAccess::connectDBusSignals m_device registerAction SLOT slotSetupRequested SLOT slotSetupDone QString m_device registerAction SLOT slotTeardownRequested SLOT slotTeardownDone QString StorageAccess::isLuksDevice m_device isEncryptedContainer StorageAccess::isAccessible isLuksDevice QString path clearTextPath path isEmpty path Device holderDevice path holderDevice isMounted m_device isMounted QString StorageAccess::filePath ByteArrayList mntPoints isLuksDevice QString path clearTextPath path isEmpty path QString Device holderDevice path mntPoints qdbus_cast ByteArrayList holderDevice prop mntPoints isEmpty QFile::decodeName mntPoints first QString mntPoints qdbus_cast ByteArrayList m_device prop mntPoints isEmpty QFile::decodeName mntPoints first QString StorageAccess::isIgnored m_device prop toBool StorageAccess::setup m_teardownInProgress m_setupInProgress m_setupInProgress m_device broadcastActionRequested m_device isEncryptedContainer clearTextPath isEmpty requestPassphrase mount StorageAccess::teardown m_teardownInProgress m_setupInProgress m_teardownInProgress m_device broadcastActionRequested unmount StorageAccess::updateCache m_isAccessible isAccessible StorageAccess::checkAccessibility old_isAccessible m_isAccessible updateCache old_isAccessible m_isAccessible emit accessibilityChanged m_isAccessible m_device udi StorageAccess::slotDBusReply QDBusMessage QString ctPath clearTextPath m_setupInProgress isLuksDevice isAccessible mount m_setupInProgress m_device broadcastActionDone checkAccessibility m_teardownInProgress isLuksDevice ctPath isEmpty ctPath callCryptoTeardown ctPath isEmpty ctPath callCryptoTeardown QString drivePath m_device drivePath drivePath isEmpty drivePath Device drive drivePath drive prop toBool drive prop toBool m_device isOpticalDisc QDBusConnection c QDBusConnection::systemBus QDBusMessage msg QDBusMessage::createMethodCall UD2_DBUS_SERVICE drivePath UD2_DBUS_INTERFACE_DRIVE msg QVariantMap c call msg QDBus::NoBlock m_teardownInProgress m_device broadcastActionDone checkAccessibility StorageAccess::slotDBusError QDBusError error m_setupInProgress m_setupInProgress m_device broadcastActionDone m_device errorToSolidError error name m_device errorToString error name error message checkAccessibility m_teardownInProgress m_teardownInProgress m_device broadcastActionDone m_device errorToSolidError error name m_device errorToString error name error message checkAccessibility StorageAccess::slotSetupRequested m_setupInProgress emit setupRequested m_device udi StorageAccess::slotSetupDone error QString errorString m_setupInProgress emit setupDone static_cast&lt;Solid::ErrorType&gt; error errorString m_device udi checkAccessibility StorageAccess::slotTeardownRequested m_teardownInProgress emit teardownRequested m_device udi StorageAccess::slotTeardownDone error QString errorString m_teardownInProgress emit teardownDone static_cast&lt;Solid::ErrorType&gt; error errorString m_device udi checkAccessibility StorageAccess::mount QString path m_device udi QString ctPath clearTextPath isLuksDevice ctPath isEmpty path ctPath QDBusConnection c QDBusConnection::systemBus QDBusMessage msg QDBusMessage::createMethodCall UD2_DBUS_SERVICE path UD2_DBUS_INTERFACE_FILESYSTEM QVariantMap options m_device prop toString options insert msg options c callWithCallback msg SLOT slotDBusReply QDBusMessage SLOT slotDBusError QDBusError StorageAccess::unmount QString path m_device udi QString ctPath clearTextPath isLuksDevice ctPath isEmpty path ctPath QDBusConnection c QDBusConnection::systemBus QDBusMessage msg QDBusMessage::createMethodCall UD2_DBUS_SERVICE path UD2_DBUS_INTERFACE_FILESYSTEM msg QVariantMap c callWithCallback msg SLOT slotDBusReply QDBusMessage SLOT slotDBusError QDBusError s_unmountTimeout QString StorageAccess::generateReturnObjectPath number QString::number number QString StorageAccess::clearTextPath QString prefix QDBusMessage call QDBusMessage::createMethodCall UD2_DBUS_SERVICE prefix DBUS_INTERFACE_INTROSPECT QDBusPendingReply&lt;QString&gt; reply QDBusConnection::systemBus asyncCall call reply waitForFinished reply isValid QDomDocument dom dom setContent reply value QDomNodeList nodeList dom documentElement elementsByTagName i i nodeList count i QDomElement nodeElem nodeList item i toElement nodeElem isNull nodeElem hasAttribute QString udi prefix nodeElem attribute Device holderDevice udi m_device udi holderDevice prop value QDBusObjectPath path udi QString StorageAccess::requestPassphrase QString udi m_device udi QString returnService QDBusConnection::sessionBus baseService m_lastReturnObject generateReturnObjectPath QDBusConnection::sessionBus registerObject m_lastReturnObject QDBusConnection::ExportScriptableSlots QWidget activeWindow QApplication::activeWindow uint wId activeWindow wId uint activeWindow winId QString appId QCoreApplication::applicationName QDBusInterface soliduiserver QDBusReply&lt;void&gt; reply soliduiserver call udi returnService m_lastReturnObject wId appId m_passphraseRequested reply isValid m_passphraseRequested qWarning reply error m_passphraseRequested StorageAccess::passphraseReply QString passphrase m_passphraseRequested QDBusConnection::sessionBus unregisterObject m_lastReturnObject m_passphraseRequested passphrase isEmpty callCryptoSetup passphrase m_setupInProgress m_device broadcastActionDone StorageAccess::callCryptoSetup QString passphrase QDBusConnection c QDBusConnection::systemBus QDBusMessage msg QDBusMessage::createMethodCall UD2_DBUS_SERVICE m_device udi UD2_DBUS_INTERFACE_ENCRYPTED msg passphrase msg QVariantMap c callWithCallback msg SLOT slotDBusReply QDBusMessage SLOT slotDBusError QDBusError StorageAccess::callCryptoTeardown actOnParent QDBusConnection c QDBusConnection::systemBus QDBusMessage msg QDBusMessage::createMethodCall UD2_DBUS_SERVICE actOnParent m_device prop value QDBusObjectPath path m_device udi UD2_DBUS_INTERFACE_ENCRYPTED msg QVariantMap c callWithCallback msg SLOT slotDBusReply QDBusMessage SLOT slotDBusError QDBusError</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksstorageaccess.h</field>
    <field name="url">udisksstorageaccess_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDisks2 StorageAccess DeviceInterface Solid::Ifaces::StorageAccess Q_OBJECT Q_INTERFACES Solid::Ifaces::StorageAccess StorageAccess Device device StorageAccess isAccessible const Q_DECL_OVERRIDE QString filePath const Q_DECL_OVERRIDE isIgnored const Q_DECL_OVERRIDE setup Q_DECL_OVERRIDE teardown Q_DECL_OVERRIDE Q_SIGNALS accessibilityChanged accessible const QString udi Q_DECL_OVERRIDE setupDone Solid ErrorType error QVariant errorData const QString udi Q_DECL_OVERRIDE teardownDone Solid ErrorType error QVariant errorData const QString udi Q_DECL_OVERRIDE setupRequested const QString udi Q_DECL_OVERRIDE teardownRequested const QString udi Q_DECL_OVERRIDE public Q_SLOTS Q_SCRIPTABLE Q_NOREPLY passphraseReply const QString passphrase private Q_SLOTS slotDBusReply const QDBusMessage reply slotDBusError const QDBusError error connectDBusSignals slotSetupRequested slotSetupDone error const QString errorString slotTeardownRequested slotTeardownDone error const QString errorString checkAccessibility private isLuksDevice const updateCache mount unmount requestPassphrase callCryptoSetup const QString passphrase callCryptoTeardown actOnParent false QString generateReturnObjectPath QString clearTextPath const private m_isAccessible m_setupInProgress m_teardownInProgress m_passphraseRequested QString m_lastReturnObject static const s_unmountTimeout x7fffffff</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksstoragedrive.cpp</field>
    <field name="url">udisksstoragedrive_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDisks2 StorageDrive::StorageDrive Device dev Block dev UdevQt::Client client m_udevDevice client deviceByDeviceFile device m_udevDevice deviceProperties StorageDrive::~StorageDrive qulonglong StorageDrive::size m_device prop toULongLong StorageDrive::isHotpluggable Solid::StorageDrive::Bus _bus bus _bus Solid::StorageDrive::Usb _bus Solid::StorageDrive::Ieee1394 m_udevDevice deviceProperty isValid m_udevDevice deviceProperty toBool StorageDrive::isRemovable m_device prop toBool m_device prop toBool Solid::StorageDrive::DriveType StorageDrive::driveType QStringList mediaTypes m_device prop toStringList m_device isOpticalDrive Solid::StorageDrive::CdromDrive mediaTypes contains Solid::StorageDrive::Floppy mediaTypes contains Solid::StorageDrive::Jaz mediaTypes contains Solid::StorageDrive::Zip mediaTypes contains Solid::StorageDrive::Flash mediaTypes contains Solid::StorageDrive::CompactFlash mediaTypes contains Solid::StorageDrive::MemoryStick mediaTypes contains Solid::StorageDrive::SmartMedia mediaTypes contains mediaTypes contains mediaTypes contains mediaTypes contains Solid::StorageDrive::SdMmc Solid::StorageDrive::HardDisk Solid::StorageDrive::Bus StorageDrive::bus QString bus m_device prop toString QString udevBus m_udevDevice deviceProperty toString udevBus m_udevDevice deviceProperty toInt Solid::StorageDrive::Sata Solid::StorageDrive::Ide bus Solid::StorageDrive::Usb bus Solid::StorageDrive::Ieee1394 udevBus Solid::StorageDrive::Scsi bus Solid::StorageDrive::SDIO bus Solid::StorageDrive::Virtual Solid::StorageDrive::Platform</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksstoragedrive.h</field>
    <field name="url">udisksstoragedrive_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDisks2 StorageDrive Block Solid::Ifaces::StorageDrive Q_OBJECT Q_INTERFACES Solid::Ifaces::StorageDrive StorageDrive Device dev StorageDrive qulonglong size const Q_DECL_OVERRIDE isHotpluggable const Q_DECL_OVERRIDE isRemovable const Q_DECL_OVERRIDE Solid StorageDrive DriveType driveType const Q_DECL_OVERRIDE Solid StorageDrive Bus bus const Q_DECL_OVERRIDE private UdevQt Device m_udevDevice</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksstoragevolume.cpp</field>
    <field name="url">udisksstoragevolume_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UDisks2 StorageVolume::StorageVolume Device device Block device StorageVolume::~StorageVolume QString StorageVolume::encryptedContainerUdi QString path m_device prop value QDBusObjectPath path path isEmpty path QString path qulonglong StorageVolume::size m_device prop toULongLong QString StorageVolume::uuid m_device prop toString QString StorageVolume::label QString label m_device prop toString label isEmpty label m_device prop toString label isEmpty label m_device prop toString label QString StorageVolume::fsType m_device prop toString Solid::StorageVolume::UsageType StorageVolume::usage QString usage m_device prop toString m_device hasInterface UD2_DBUS_INTERFACE_FILESYSTEM Solid::StorageVolume::FileSystem m_device isPartitionTable Solid::StorageVolume::PartitionTable usage Solid::StorageVolume::Raid m_device isEncryptedContainer Solid::StorageVolume::Encrypted usage usage isEmpty Solid::StorageVolume::Unused Solid::StorageVolume::Other StorageVolume::isIgnored Solid::StorageVolume::UsageType usg usage m_device prop toBool m_device isSwap usg Solid::StorageVolume::Unused usg Solid::StorageVolume::Other usg Solid::StorageVolume::PartitionTable m_device isOpticalDisc</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">udisksstoragevolume.h</field>
    <field name="url">udisksstoragevolume_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UDisks2 StorageVolume Block Solid::Ifaces::StorageVolume Q_OBJECT Q_INTERFACES Solid::Ifaces::StorageVolume StorageVolume Device device StorageVolume QString encryptedContainerUdi const Q_DECL_OVERRIDE qulonglong size const Q_DECL_OVERRIDE QString uuid const Q_DECL_OVERRIDE QString label const Q_DECL_OVERRIDE QString fsType const Q_DECL_OVERRIDE Solid StorageVolume UsageType usage const Q_DECL_OVERRIDE isIgnored const Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">upower.h</field>
    <field name="url">upower_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">upowerbattery.cpp</field>
    <field name="url">upowerbattery_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UPower Battery::Battery UPowerDevice device DeviceInterface device connect device SIGNAL changed SLOT slotChanged updateCache Battery::~Battery Battery::isPresent m_device data prop toBool Solid::Battery::BatteryType Battery::type Solid::Battery::BatteryType result Solid::Battery::UnknownBattery uint t m_device data prop toUInt t result Solid::Battery::PrimaryBattery result Solid::Battery::UpsBattery result Solid::Battery::MonitorBattery result Solid::Battery::MouseBattery result Solid::Battery::KeyboardBattery result Solid::Battery::PdaBattery result Solid::Battery::PhoneBattery result Battery::chargePercent qRound m_device data prop toDouble Battery::capacity m_device data prop toDouble Battery::isRechargeable m_device data prop toBool Battery::isPowerSupply m_device data prop toBool Solid::Battery::ChargeState Battery::chargeState Solid::Battery::ChargeState result Solid::Battery::NoCharge uint state m_device data prop toUInt state result Solid::Battery::NoCharge result Solid::Battery::Charging result Solid::Battery::Discharging result Solid::Battery::FullyCharged result qlonglong Battery::timeToEmpty m_device data prop toLongLong qlonglong Battery::timeToFull m_device data prop toLongLong Solid::Battery::Technology Battery::technology uint tech m_device data prop toUInt tech Solid::Battery::LithiumIon Solid::Battery::LithiumPolymer Solid::Battery::LithiumIronPhosphate Solid::Battery::LeadAcid Solid::Battery::NickelCadmium Solid::Battery::NickelMetalHydride Solid::Battery::UnknownTechnology Battery::energy m_device data prop toDouble Battery::energyFull m_device data prop toDouble Battery::energyFullDesign m_device data prop toDouble Battery::energyRate m_device data prop toDouble Battery::voltage m_device data prop toDouble Battery::temperature m_device data prop toDouble Battery::isRecalled m_device data prop toBool QString Battery::recallVendor m_device data prop toString QString Battery::recallUrl m_device data prop toString QString Battery::serial m_device data prop toString qlonglong Battery::remainingTime chargeState Solid::Battery::Charging timeToFull chargeState Solid::Battery::Discharging timeToEmpty Battery::slotChanged m_device old_isPresent m_isPresent old_chargePercent m_chargePercent old_capacity m_capacity old_isPowerSupply m_isPowerSupply Solid::Battery::ChargeState old_chargeState m_chargeState qlonglong old_timeToEmpty m_timeToEmpty qlonglong old_timeToFull m_timeToFull old_energy m_energy old_energyFull m_energyFull old_energyFullDesign m_energyFullDesign old_energyRate m_energyRate old_voltage m_voltage old_temperature m_temperature updateCache old_isPresent m_isPresent emit presentStateChanged m_isPresent m_device data udi old_chargePercent m_chargePercent emit chargePercentChanged m_chargePercent m_device data udi old_capacity m_capacity emit capacityChanged m_capacity m_device data udi old_isPowerSupply m_isPowerSupply emit powerSupplyStateChanged m_isPowerSupply m_device data udi old_chargeState m_chargeState emit chargeStateChanged m_chargeState m_device data udi old_timeToEmpty m_timeToEmpty emit timeToEmptyChanged m_timeToEmpty m_device data udi old_timeToFull m_timeToFull emit timeToFullChanged m_timeToFull m_device data udi old_energy m_energy emit energyChanged m_energy m_device data udi old_energyFull m_energyFull emit energyFullChanged m_energyFull m_device data udi old_energyFullDesign m_energyFullDesign emit energyFullChanged m_energyFullDesign m_device data udi old_energyRate m_energyRate emit energyRateChanged m_energyRate m_device data udi old_voltage m_voltage emit voltageChanged m_voltage m_device data udi old_temperature m_temperature emit temperatureChanged m_temperature m_device data udi old_timeToFull m_timeToFull old_timeToEmpty m_timeToEmpty emit remainingTimeChanged remainingTime m_device data udi Battery::updateCache m_isPresent isPresent m_chargePercent chargePercent m_capacity capacity m_isPowerSupply isPowerSupply m_chargeState chargeState m_timeToEmpty timeToEmpty m_timeToFull timeToFull m_energy energy m_energyFull energyFull m_energyFullDesign energyFullDesign m_energyRate energyRate m_voltage voltage m_temperature temperature</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">upowerbattery.h</field>
    <field name="url">upowerbattery_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UPower Battery DeviceInterface Solid::Ifaces::Battery Q_OBJECT Q_INTERFACES Solid::Ifaces::Battery Battery UPowerDevice device Battery isPresent const Q_DECL_OVERRIDE Solid Battery BatteryType type const Q_DECL_OVERRIDE chargePercent const Q_DECL_OVERRIDE capacity const Q_DECL_OVERRIDE isRechargeable const Q_DECL_OVERRIDE isPowerSupply const Q_DECL_OVERRIDE Solid Battery ChargeState chargeState const Q_DECL_OVERRIDE qlonglong timeToEmpty const Q_DECL_OVERRIDE qlonglong timeToFull const Q_DECL_OVERRIDE Solid Battery Technology technology const Q_DECL_OVERRIDE energy const Q_DECL_OVERRIDE energyFull const Q_DECL_OVERRIDE energyFullDesign const Q_DECL_OVERRIDE energyRate const Q_DECL_OVERRIDE voltage const Q_DECL_OVERRIDE temperature const Q_DECL_OVERRIDE isRecalled const Q_DECL_OVERRIDE QString recallVendor const Q_DECL_OVERRIDE QString recallUrl const Q_DECL_OVERRIDE QString serial const Q_DECL_OVERRIDE qlonglong remainingTime const Q_DECL_OVERRIDE Q_SIGNALS presentStateChanged newState const QString udi Q_DECL_OVERRIDE chargePercentChanged value const QString udi QString Q_DECL_OVERRIDE capacityChanged value const QString udi Q_DECL_OVERRIDE powerSupplyStateChanged newState const QString udi Q_DECL_OVERRIDE chargeStateChanged newState const QString udi QString Q_DECL_OVERRIDE timeToEmptyChanged qlonglong time const QString udi Q_DECL_OVERRIDE timeToFullChanged qlonglong time const QString udi Q_DECL_OVERRIDE energyChanged energy const QString udi Q_DECL_OVERRIDE energyFullChanged energyFull const QString udi Q_DECL_OVERRIDE energyFullDesignChanged energyFullDesign const QString udi Q_DECL_OVERRIDE energyRateChanged energyRate const QString udi Q_DECL_OVERRIDE voltageChanged voltage const QString udi Q_DECL_OVERRIDE temperatureChanged temperature const QString udi Q_DECL_OVERRIDE remainingTimeChanged qlonglong time const QString udi Q_DECL_OVERRIDE private Q_SLOTS slotChanged private updateCache m_isPresent m_chargePercent m_capacity m_isPowerSupply Solid Battery ChargeState m_chargeState qlonglong m_timeToEmpty qlonglong m_timeToFull m_energy m_energyFull m_energyFullDesign m_energyRate m_voltage m_temperature</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">upowerdevice.cpp</field>
    <field name="url">upowerdevice_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UPower UPowerDevice::UPowerDevice QString udi Solid Ifaces Device m_device UP_DBUS_SERVICE udi UP_DBUS_INTERFACE_DEVICE QDBusConnection systemBus m_udi udi m_device isValid m_device metaObject indexOfSignal connect m_device SIGNAL Changed SLOT slotChanged QDBusConnection::systemBus connect UP_DBUS_SERVICE m_udi SLOT onPropertiesChanged QString QVariantMap QStringList QDBusConnection::systemBus connect SLOT login1Resuming UPowerDevice::~UPowerDevice QObject UPowerDevice::createDeviceInterface Solid::DeviceInterface::Type type queryDeviceInterface type DeviceInterface iface type Solid::DeviceInterface::GenericInterface iface GenericInterface Solid::DeviceInterface::Battery iface Battery iface UPowerDevice::queryDeviceInterface Solid::DeviceInterface::Type type uint uptype prop toUInt type Solid::DeviceInterface::GenericInterface Solid::DeviceInterface::Battery uptype uptype uptype uptype uptype uptype QStringList UPowerDevice::emblems QStringList QString UPowerDevice::description queryDeviceInterface Solid::DeviceInterface::Battery tr arg batteryTechnology QString result prop toString result isEmpty vendor result QString UPowerDevice::batteryTechnology uint tech prop toUInt tech tr tr tr tr tr tr tr QString UPowerDevice::icon queryDeviceInterface Solid::DeviceInterface::Battery QString QString UPowerDevice::product QString result prop toString result isEmpty result description result QString UPowerDevice::vendor prop toString QString UPowerDevice::udi m_udi QString UPowerDevice::parentUdi UP_UDI_PREFIX UPowerDevice::checkCache QString key m_cache isEmpty allProperties m_cache contains key QVariant reply m_device property key toUtf8 reply isValid m_cache key reply m_cache key QVariant QVariant UPowerDevice::prop QString key checkCache key m_cache value key UPowerDevice::propertyExists QString key checkCache key m_cache contains key QMap&lt;QString, QVariant&gt; UPowerDevice::allProperties QDBusMessage call QDBusMessage::createMethodCall m_device service m_device path call m_device interface QDBusPendingReply&lt; QVariantMap &gt; reply QDBusConnection::systemBus asyncCall call reply waitForFinished reply isValid m_cache reply value m_cache clear m_cache UPowerDevice::onPropertiesChanged QString ifaceName QVariantMap changedProps QStringList invalidatedProps Q_UNUSED changedProps Q_UNUSED invalidatedProps ifaceName UP_DBUS_INTERFACE_DEVICE slotChanged UPowerDevice::slotChanged m_cache clear emit changed UPowerDevice::login1Resuming active active QDBusReply&lt;void&gt; refreshCall m_device asyncCall refreshCall isValid slotChanged</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">upowerdevice.h</field>
    <field name="url">upowerdevice_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UPower UPowerDevice Solid::Ifaces::Device Q_OBJECT UPowerDevice QString udi UPowerDevice QObject createDeviceInterface Solid::DeviceInterface::Type type Q_DECL_OVERRIDE queryDeviceInterface Solid::DeviceInterface::Type type Q_DECL_OVERRIDE QString description const Q_DECL_OVERRIDE QStringList emblems const Q_DECL_OVERRIDE QString icon const Q_DECL_OVERRIDE QString product const Q_DECL_OVERRIDE QString vendor const Q_DECL_OVERRIDE QString udi const Q_DECL_OVERRIDE QString parentUdi const Q_DECL_OVERRIDE QVariant prop const QString key const propertyExists const QString key const QMap QString QVariant allProperties const Q_SIGNALS changed private Q_SLOTS onPropertiesChanged const QString ifaceName const QVariantMap changedProps const QStringList invalidatedProps slotChanged login1Resuming active private QString batteryTechnology const mutable QDBusInterface m_device QString m_udi mutable QVariantMap m_cache checkCache const QString key const</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">upowerdeviceinterface.cpp</field>
    <field name="url">upowerdeviceinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UPower DeviceInterface::DeviceInterface UPowerDevice device QObject device m_device device DeviceInterface::~DeviceInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">upowerdeviceinterface.h</field>
    <field name="url">upowerdeviceinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UPower DeviceInterface QObject Solid::Ifaces::DeviceInterface Q_OBJECT Q_INTERFACES Solid::Ifaces::DeviceInterface DeviceInterface UPowerDevice device DeviceInterface QPointer&lt;UPowerDevice&gt; m_device QStringList toStringList Solid::DeviceInterface::Type type QStringList list type Solid::DeviceInterface::GenericInterface list Solid::DeviceInterface::Processor Solid::DeviceInterface::Block list Solid::DeviceInterface::StorageAccess list Solid::DeviceInterface::StorageDrive list Solid::DeviceInterface::OpticalDrive list Solid::DeviceInterface::StorageVolume list Solid::DeviceInterface::OpticalDisc list Solid::DeviceInterface::Camera Solid::DeviceInterface::PortableMediaPlayer Solid::DeviceInterface::Battery list Solid::DeviceInterface::NetworkShare Solid::DeviceInterface::Unknown Solid::DeviceInterface::Last list Solid::DeviceInterface::Type fromString QString capability capability Solid::DeviceInterface::GenericInterface capability Solid::DeviceInterface::Processor capability Solid::DeviceInterface::Block capability Solid::DeviceInterface::StorageDrive capability Solid::DeviceInterface::OpticalDrive capability Solid::DeviceInterface::StorageVolume capability Solid::DeviceInterface::OpticalDisc capability Solid::DeviceInterface::Camera capability Solid::DeviceInterface::PortableMediaPlayer capability Solid::DeviceInterface::Battery capability Solid::DeviceInterface::NetworkShare Solid::DeviceInterface::Unknown</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">upowergenericinterface.cpp</field>
    <field name="url">upowergenericinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UPower GenericInterface::GenericInterface UPowerDevice device DeviceInterface device GenericInterface::~GenericInterface QVariant GenericInterface::property QString key m_device data prop key QMap&lt;QString, QVariant&gt; GenericInterface::allProperties m_device data allProperties GenericInterface::propertyExists QString key m_device data propertyExists key</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">upowergenericinterface.h</field>
    <field name="url">upowergenericinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UPower UPowerDevice GenericInterface DeviceInterface Solid::Ifaces::GenericInterface Q_OBJECT Q_INTERFACES Solid::Ifaces::GenericInterface GenericInterface UPowerDevice device GenericInterface QVariant property QString key Q_DECL_OVERRIDE QMap&lt;QString, QVariant&gt; allProperties const Q_DECL_OVERRIDE propertyExists const QString key const Q_DECL_OVERRIDE Q_SIGNALS propertyChanged const QMap QString changes Q_DECL_OVERRIDE conditionRaised const QString condition const QString reason Q_DECL_OVERRIDE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">upowermanager.cpp</field>
    <field name="url">upowermanager_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::UPower Solid::Backends::Shared UPowerManager::UPowerManager QObject parent Solid Ifaces DeviceManager parent m_manager UP_DBUS_SERVICE UP_DBUS_PATH UP_DBUS_INTERFACE QDBusConnection systemBus m_supportedInterfaces Solid::DeviceInterface::GenericInterface Solid::DeviceInterface::Battery qDBusRegisterMetaType&lt;QList&lt;QDBusObjectPath&gt; qDBusRegisterMetaType&lt;QVariantMap&gt; serviceFound m_manager isValid serviceFound QDBusMessage message QDBusMessage::createMethodCall QDBusReply&lt;QStringList&gt; reply QDBusConnection::systemBus call message reply isValid reply value contains UP_DBUS_SERVICE QDBusConnection::systemBus interface startService UP_DBUS_SERVICE serviceFound serviceFound m_manager metaObject indexOfSignal connect m_manager SIGNAL DeviceAdded QDBusObjectPath SLOT onDeviceAdded QDBusObjectPath connect m_manager SIGNAL DeviceRemoved QDBusObjectPath SLOT onDeviceRemoved QDBusObjectPath connect m_manager SIGNAL DeviceAdded QString SIGNAL deviceAdded QString connect m_manager SIGNAL DeviceRemoved QString SIGNAL deviceRemoved QString UPowerManager::~UPowerManager QObject UPowerManager::createDevice QString udi udi udiPrefix RootDevice root RootDevice udiPrefix root setProduct tr root setDescription tr root setIcon root allDevices contains udi UPowerDevice udi QStringList UPowerManager::devicesFromQuery QString parentUdi Solid::DeviceInterface::Type type QStringList allDev allDevices QStringList result parentUdi isEmpty Q_FOREACH QString udi allDev udi udiPrefix UPowerDevice device udi device queryDeviceInterface type device parentUdi parentUdi result udi result type Solid::DeviceInterface::Unknown Q_FOREACH QString udi allDev udi udiPrefix UPowerDevice device udi device queryDeviceInterface type result udi result allDev QStringList UPowerManager::allDevices QDBusReply&lt;QList&lt;QDBusObjectPath&gt; reply m_manager call reply isValid qWarning Q_FUNC_INFO reply error name QStringList QStringList retList retList udiPrefix Q_FOREACH QDBusObjectPath path reply value retList path path retList QSet&lt; Solid::DeviceInterface::Type &gt; UPowerManager::supportedInterfaces m_supportedInterfaces QString UPowerManager::udiPrefix UP_UDI_PREFIX UPowerManager::onDeviceAdded QDBusObjectPath path emit deviceAdded path path UPowerManager::onDeviceRemoved QDBusObjectPath path emit deviceRemoved path path</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">upowermanager.h</field>
    <field name="url">upowermanager_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends UPower UPowerManager Solid::Ifaces::DeviceManager Q_OBJECT UPowerManager QObject parent UPowerManager QObject createDevice QString udi Q_DECL_OVERRIDE QStringList devicesFromQuery QString parentUdi Solid::DeviceInterface::Type type Q_DECL_OVERRIDE QStringList allDevices Q_DECL_OVERRIDE QSet Solid DeviceInterface Type supportedInterfaces const Q_DECL_OVERRIDE QString udiPrefix const Q_DECL_OVERRIDE private Q_SLOTS onDeviceAdded const QDBusObjectPath path onDeviceRemoved const QDBusObjectPath path private QSet Solid DeviceInterface Type m_supportedInterfaces QDBusInterface m_manager</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">winbattery.cpp</field>
    <field name="url">winbattery_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Win QMap&lt;QString, WinBattery::Battery&gt; WinBattery::m_udiToGDI QMap&lt;QString, WinBattery::Battery&gt; WinBattery::WinBattery WinDevice device WinInterface device m_state Solid Battery NoCharge powerChanged connect SolidWinEventFilter::instance SIGNAL powerChanged SLOT powerChanged Solid::Battery::BatteryType WinBattery::type m_type WinBattery::chargePercent m_charge WinBattery::capacity m_capacity WinBattery::isRechargeable m_rechargeable WinBattery::isPowerSupply m_isPowerSupply Solid::Battery::ChargeState WinBattery::chargeState m_state QSet&lt;QString&gt; WinBattery::getUdis QSet&lt;QString&gt; udis HDEVINFO hdev SetupDiGetClassDevs GUID_DEVCLASS_BATTERY DIGCF_PRESENT DIGCF_DEVICEINTERFACE INVALID_HANDLE_VALUE hdev idev idev idev SP_DEVICE_INTERFACE_DATA did ZeroMemory did did did cbSize did SetupDiEnumDeviceInterfaces hdev GUID_DEVCLASS_BATTERY idev did DWORD cbRequired SetupDiGetDeviceInterfaceDetailW hdev did cbRequired ERROR_INSUFFICIENT_BUFFER GetLastError buffer cbRequired SP_DEVICE_INTERFACE_DETAIL_DATA pdidd SP_DEVICE_INTERFACE_DETAIL_DATA buffer ZeroMemory pdidd cbRequired pdidd cbSize SetupDiGetDeviceInterfaceDetail hdev did pdidd cbRequired cbRequired QString path QString::fromWCharArray pdidd DevicePath ulong tag WinDeviceManager::getDeviceInfo&lt;ulong&gt; path IOCTL_BATTERY_QUERY_TAG QString udi QLatin1String QString::number tag udis udi m_udiToGDI udi Battery path tag buffer SetupDiDestroyDeviceInfoList hdev udis WinBattery::Battery WinBattery::batteryInfoFromUdi QString udi m_udiToGDI udi WinBattery::powerChanged old_charge m_charge old_capacity m_capacity Solid::Battery::ChargeState old_state m_state old_isPowerSupply m_isPowerSupply old_energy m_energy old_energyFull m_energyFull old_energyFullDesign m_energyFullDesign old_energyRate m_energyRate old_voltage m_voltage BATTERY_WAIT_STATUS batteryStatusQuery ZeroMemory batteryStatusQuery batteryStatusQuery Battery b m_udiToGDI m_device udi batteryStatusQuery BatteryTag b second BATTERY_STATUS status WinDeviceManager::getDeviceInfo&lt;BATTERY_STATUS, BATTERY_WAIT_STATUS&gt; b first IOCTL_BATTERY_QUERY_STATUS batteryStatusQuery BATTERY_QUERY_INFORMATION batteryInformationQuery ZeroMemory batteryInformationQuery batteryInformationQuery batteryInformationQuery BatteryTag b second batteryInformationQuery InformationLevel BatteryInformation BATTERY_INFORMATION info WinDeviceManager::getDeviceInfo&lt;BATTERY_INFORMATION, BATTERY_QUERY_INFORMATION&gt; b first IOCTL_BATTERY_QUERY_INFORMATION batteryInformationQuery initSerial b updateBatteryTemp b updateTimeToEmpty b m_isPowerSupply status PowerState BATTERY_POWER_ON_LINE QString tech QString::fromUtf8 info Chemistry tech tech m_technology Solid::Battery::LithiumIon tech m_technology Solid::Battery::LeadAcid tech m_technology Solid::Battery::NickelCadmium tech m_technology Solid::Battery::NickelMetalHydride m_technology Solid::Battery::UnknownTechnology m_energy status Capacity m_energyFull info FullChargedCapacity m_energyFullDesign info DesignedCapacity m_energyRate status Rate m_voltage status Voltage info FullChargedCapacity m_charge float status Capacity info FullChargedCapacity info DesignedCapacity m_capacity float info FullChargedCapacity info DesignedCapacity status PowerState m_state Solid::Battery::NoCharge status PowerState BATTERY_CHARGING m_state Solid::Battery::Charging status PowerState BATTERY_DISCHARGING m_state Solid::Battery::Discharging info Capabilities BATTERY_SYSTEM_BATTERY m_type Solid::Battery::PrimaryBattery m_type Solid::Battery::UnknownBattery m_rechargeable info Technology m_charge old_charge emit chargePercentChanged m_charge m_device udi m_capacity old_capacity emit capacityChanged m_capacity m_device udi old_state m_state emit chargeStateChanged m_state m_device udi old_isPowerSupply m_isPowerSupply emit powerSupplyStateChanged m_isPowerSupply m_device udi old_energy m_energy emit energyChanged m_energy m_device udi old_energyFull m_energyFull emit energyFullChanged m_energyFull m_device udi old_energyFullDesign m_energyFullDesign emit energyFullDesignChanged m_energyFullDesign m_device udi old_energyRate m_energyRate emit energyRateChanged m_energyRate m_device udi old_voltage m_voltage emit voltageChanged m_voltage m_device udi WinBattery::initSerial Battery b buffer BATTERY_QUERY_INFORMATION batteryInformationQuery ZeroMemory batteryInformationQuery batteryInformationQuery batteryInformationQuery BatteryTag b second batteryInformationQuery InformationLevel BatterySerialNumber WinDeviceManager::getDeviceInfo&lt;wchar_t, BATTERY_QUERY_INFORMATION&gt; b first IOCTL_BATTERY_QUERY_INFORMATION buffer batteryInformationQuery m_serial QString::fromWCharArray buffer WinBattery::updateTimeToEmpty WinBattery::Battery b BATTERY_QUERY_INFORMATION batteryInformationQuery ZeroMemory batteryInformationQuery batteryInformationQuery batteryInformationQuery BatteryTag b second batteryInformationQuery InformationLevel BatteryEstimatedTime ulong time WinDeviceManager::getDeviceInfo&lt;ulong, BATTERY_QUERY_INFORMATION&gt; b first IOCTL_BATTERY_QUERY_INFORMATION batteryInformationQuery time BATTERY_UNKNOWN_TIME time time m_timeUntilEmpty m_timeUntilEmpty time emit timeToEmptyChanged time m_device udi WinBattery::updateBatteryTemp WinBattery::Battery b BATTERY_QUERY_INFORMATION batteryInformationQuery ZeroMemory batteryInformationQuery batteryInformationQuery batteryInformationQuery BatteryTag b second batteryInformationQuery InformationLevel BatteryTemperature ulong batteryTemp WinDeviceManager::getDeviceInfo&lt;ulong, BATTERY_QUERY_INFORMATION&gt; b first IOCTL_BATTERY_QUERY_INFORMATION batteryInformationQuery batteryTemp m_temperature m_temperature batteryTemp emit temperatureChanged batteryTemp m_device udi Solid::Battery::Technology WinBattery::technology m_technology WinBattery::energy m_energy WinBattery::energyFull m_energyFull WinBattery::energyFullDesign m_energyFullDesign WinBattery::energyRate m_energyRate WinBattery::voltage m_voltage WinBattery::isPresent qlonglong WinBattery::timeToEmpty m_timeUntilEmpty qlonglong WinBattery::timeToFull WinBattery::temperature m_temperature WinBattery::isRecalled QString WinBattery::recallVendor QString QString WinBattery::recallUrl QString qlonglong WinBattery::remainingTime m_timeUntilEmpty QString WinBattery::serial m_serial</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">winbattery.h</field>
    <field name="url">winbattery_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Win WinBattery WinInterface Solid::Ifaces::Battery Q_OBJECT Q_INTERFACES Solid::Ifaces::Battery QPair&lt;QString, ulong&gt; Battery WinBattery WinDevice device Solid::Battery::BatteryType type chargePercent capacity isRechargeable isPowerSupply Solid::Battery::ChargeState chargeState Solid::Battery::Technology technology energy energyFull energyFullDesign energyRate voltage qlonglong timeToEmpty qlonglong timeToFull temperature QString serial isPresent isRecalled QString recallVendor QString recallUrl qlonglong remainingTime QSet&lt;QString&gt; getUdis Battery batteryInfoFromUdi QString udi Q_SIGNALS chargePercentChanged value QString udi capacityChanged value QString udi chargeStateChanged newState QString udi powerSupplyStateChanged newState QString udi energyChanged energy QString udi energyFullChanged energyFull QString udi energyFullDesignChanged energyFullDesign QString udi energyRateChanged energyRate QString udi timeToEmptyChanged qlonglong time QString udi temperatureChanged temperature QString udi voltageChanged voltage QString udi presentStateChanged newState QString udi timeToFullChanged qlonglong time QString udi remainingTimeChanged qlonglong time QString udi Q_SLOTS powerChanged initSerial Battery b updateTimeToEmpty Battery b updateBatteryTemp Battery b QMap&lt;QString, Battery&gt; m_udiToGDI Solid::Battery::BatteryType m_type m_charge m_capacity m_rechargeable m_isPowerSupply Solid::Battery::ChargeState m_state Solid::Battery::Technology m_technology m_energy m_energyFull m_energyFullDesign m_energyRate m_voltage QString m_serial ulong m_temperature ulong m_timeUntilEmpty</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">winblock.cpp</field>
    <field name="url">winblock_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Win QMap&lt;QString, QString&gt; WinBlock::m_driveLetters QMap&lt;QString, QString&gt; QMap&lt;QString, QSet&lt;QString&gt; WinBlock::m_driveUDIS QMap&lt;QString, QSet&lt;QString&gt; QMap&lt;QString, QString&gt; WinBlock::m_virtualDrives QMap&lt;QString, QString&gt; WinBlock::WinBlock WinDevice device WinInterface device m_major m_minor m_device type Solid::DeviceInterface::StorageVolume STORAGE_DEVICE_NUMBER info WinDeviceManager::getDeviceInfo&lt;STORAGE_DEVICE_NUMBER&gt; driveLetterFromUdi m_device udi IOCTL_STORAGE_GET_DEVICE_NUMBER m_major info DeviceNumber m_minor info PartitionNumber m_device type Solid::DeviceInterface::StorageDrive m_device type Solid::DeviceInterface::OpticalDrive m_device type Solid::DeviceInterface::OpticalDisc m_major m_device udi mid m_device udi length toInt qFatal m_device type WinBlock::~WinBlock WinBlock::deviceMajor Q_ASSERT m_major m_major WinBlock::deviceMinor m_minor QString WinBlock::device driveLetterFromUdi m_device udi QStringList WinBlock::drivesFromMask DWORD unitmask QStringList result DWORD localUnitmask unitmask i i i x01 localUnitmask x1 result QString arg i localUnitmask result QSet&lt;QString&gt; WinBlock::getUdis updateUdiFromBitMask GetLogicalDrives QString WinBlock::driveLetterFromUdi QString udi m_driveLetters contains udi qWarning udi m_driveLetters udi QString WinBlock::udiFromDriveLetter QString drive QString out QMap&lt;QString, QString&gt;::const_iterator it m_driveLetters cbegin it m_driveLetters cend it it value drive out it key out QString WinBlock::resolveVirtualDrive QString drive m_virtualDrives drive QSet&lt;QString&gt; WinBlock::updateUdiFromBitMask DWORD unitmask QStringList drives drivesFromMask unitmask QSet&lt;QString&gt; list driveWCHAR MAX_PATH bufferOut MAX_PATH QString dosPath QString drive drives QSet&lt;QString&gt; udis driveWCHAR drive toWCharArray driveWCHAR GetDriveType driveWCHAR DRIVE_REMOTE QSettings settings QLatin1String drive at QSettings::NativeFormat QString path settings value toString path isEmpty QString key QLatin1String drive at m_virtualDrives key path udis key QueryDosDeviceW driveWCHAR bufferOut MAX_PATH dosPath QString::fromWCharArray bufferOut dosPath startsWith dosPath dosPath mid QString key QLatin1String drive at m_virtualDrives key dosPath udis key STORAGE_DEVICE_NUMBER info WinDeviceManager::getDeviceInfo&lt;STORAGE_DEVICE_NUMBER&gt; drive IOCTL_STORAGE_GET_DEVICE_NUMBER info DeviceType FILE_DEVICE_DISK udis QString arg info DeviceNumber arg info PartitionNumber udis QString arg info DeviceNumber FILE_DEVICE_CD_ROM FILE_DEVICE_DVD udis QString arg info DeviceNumber DISK_GEOMETRY_EX out WinDeviceManager::getDeviceInfo&lt;DISK_GEOMETRY_EX&gt; drive IOCTL_DISK_GET_DRIVE_GEOMETRY_EX out DiskSize QuadPart udis QString arg info DeviceNumber qDebug drive info DeviceType info DeviceNumber info PartitionNumber m_driveUDIS drive udis QString s udis m_driveLetters s drive list udis list QSet&lt;QString&gt; WinBlock::getFromBitMask DWORD unitmask QSet&lt;QString&gt; list QStringList drives drivesFromMask unitmask QString drive drives m_driveUDIS contains drive list m_driveUDIS drive updateUdiFromBitMask unitmask list</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">winblock.h</field>
    <field name="url">winblock_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Win WinBlock WinInterface Solid::Ifaces::Block Q_OBJECT Q_INTERFACES Solid::Ifaces::Block WinBlock WinDevice device WinBlock deviceMajor deviceMinor QString device QSet&lt;QString&gt; getUdis QString driveLetterFromUdi QString udi QString udiFromDriveLetter QString drive QString resolveVirtualDrive QString drive QSet&lt;QString&gt; updateUdiFromBitMask DWORD unitmask QSet&lt;QString&gt; getFromBitMask DWORD unitmask QMap&lt;QString, QString&gt; m_driveLetters QMap&lt;QString, QSet&lt;QString&gt; m_driveUDIS QMap&lt;QString, QString&gt; m_virtualDrives m_major m_minor QStringList drivesFromMask DWORD unitmask</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">windevice.cpp</field>
    <field name="url">windevice_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Win WinDevice::WinDevice QString udi Device m_udi udi m_type Solid DeviceInterface Unknown QStringList data udi split QString parentName data split trimmed QString type data type m_type Solid::DeviceInterface::StorageDrive type m_type Solid::DeviceInterface::StorageVolume type m_type Solid::DeviceInterface::OpticalDrive type m_type Solid::DeviceInterface::OpticalDisc type m_type Solid::DeviceInterface::Processor type m_type Solid::DeviceInterface::Battery type m_type Solid::DeviceInterface::StorageAccess m_type Solid::DeviceInterface::StorageVolume m_parentUdi QLatin1String parentName Solid::DeviceInterface::OpticalDisc m_parentUdi QLatin1String parentName Solid::DeviceInterface::StorageAccess m_parentUdi WinBlock::udiFromDriveLetter WinBlock::resolveVirtualDrive udi mid m_parentUdi isEmpty m_parentUdi QLatin1String type m_parentUdi QLatin1String type m_type Solid::DeviceInterface::Processor initCpuDevice Solid::DeviceInterface::Battery initBatteryDevice queryDeviceInterface Solid::DeviceInterface::StorageAccess queryDeviceInterface Solid::DeviceInterface::StorageDrive initStorageDevice qWarning udi WinDevice::initStorageDevice QString dev m_type Solid::DeviceInterface::StorageAccess dev WinBlock::driveLetterFromUdi udi m_product QString arg dev m_description QString arg dev WinBlock::resolveVirtualDrive udi Solid::DeviceInterface::OpticalDrive dev WinBlock::driveLetterFromUdi udi Solid::DeviceInterface::StorageDrive dev QString arg WinBlock deviceMajor dev WinBlock::driveLetterFromUdi udi m_description QString arg dev WinStorageVolume label STORAGE_PROPERTY_QUERY query ZeroMemory query STORAGE_PROPERTY_QUERY query PropertyId StorageDeviceProperty query QueryType PropertyStandardQuery buff WinDeviceManager::getDeviceInfo&lt;char, STORAGE_PROPERTY_QUERY&gt; dev IOCTL_STORAGE_QUERY_PROPERTY buff query STORAGE_DEVICE_DESCRIPTOR info STORAGE_DEVICE_DESCRIPTOR buff info VendorIdOffset m_vendor QString buff info VendorIdOffset trimmed info ProductIdOffset m_product QString buff info ProductIdOffset trimmed info ProductIdOffset QStringList tmp QString buff info ProductIdOffset trimmed split m_vendor tmp takeFirst m_product tmp join WinDevice::initBatteryDevice WinBattery::Battery battery WinBattery::batteryInfoFromUdi m_udi BATTERY_QUERY_INFORMATION query ZeroMemory query query query BatteryTag battery second size buff query InformationLevel BatteryDeviceName WinDeviceManager::getDeviceInfo&lt;wchar_t, BATTERY_QUERY_INFORMATION&gt; battery first IOCTL_BATTERY_QUERY_INFORMATION buff size query m_product QString::fromWCharArray buff query InformationLevel BatteryManufactureName WinDeviceManager::getDeviceInfo&lt;wchar_t, BATTERY_QUERY_INFORMATION&gt; battery first IOCTL_BATTERY_QUERY_INFORMATION buff size query m_vendor QString::fromWCharArray buff WinBattery technology Solid::Battery::LithiumIon m_description tr Solid::Battery::LeadAcid m_description tr Solid::Battery::NickelCadmium m_description tr Solid::Battery::NickelMetalHydride m_description tr m_description tr WinDevice::initCpuDevice WinProcessor cpu WinProcessor::ProcessorInfo info WinProcessor::updateCache cpu number m_vendor info vendor m_product info produuct m_description info name QString WinDevice::udi m_udi QString WinDevice::parentUdi m_parentUdi QString WinDevice::vendor m_vendor QString WinDevice::product m_product QString WinDevice::description m_description isEmpty m_product m_description QString WinDevice::icon parentUdi isEmpty QLatin1String QString icon type Solid::DeviceInterface::OpticalDrive icon QLatin1String Solid::DeviceInterface::OpticalDisc WinOpticalDisc disk const_cast&lt;WinDevice *&gt; disk availableContent Solid::OpticalDisc::Audio icon QLatin1String icon QLatin1String Solid::DeviceInterface::StorageDrive Solid::DeviceInterface::StorageVolume WinStorageDrive storage const_cast&lt;WinDevice *&gt; storage bus Solid::StorageDrive::Usb icon QLatin1String icon QLatin1String Solid::DeviceInterface::Processor icon QLatin1String Solid::DeviceInterface::Battery icon QLatin1String Solid::DeviceInterface::StorageAccess icon QLatin1String icon QStringList WinDevice::emblems QStringList icons type Solid::DeviceInterface::StorageAccess icons QLatin1String icons WinDevice::queryDeviceInterface Solid::DeviceInterface::Type queryType queryType Solid::DeviceInterface::GenericInterface QList&lt;Solid::DeviceInterface::Type&gt; interfaceList interfaceList type type Solid::DeviceInterface::GenericInterface Solid::DeviceInterface::Block Solid::DeviceInterface::StorageAccess Solid::DeviceInterface::StorageDrive Solid::DeviceInterface::OpticalDrive interfaceList Solid::DeviceInterface::Block Solid::DeviceInterface::StorageDrive Solid::DeviceInterface::StorageVolume interfaceList Solid::DeviceInterface::Block Solid::DeviceInterface::StorageAccess Solid::DeviceInterface::OpticalDisc interfaceList Solid::DeviceInterface::Block Solid::DeviceInterface::StorageVolume Solid::DeviceInterface::StorageAccess Solid::DeviceInterface::PortableMediaPlayer Solid::DeviceInterface::Unknown Solid::DeviceInterface::Last interfaceList size qWarning type interfaceList contains queryType QObject WinDevice::createDeviceInterface Solid::DeviceInterface::Type type queryDeviceInterface type WinInterface iface type Solid::DeviceInterface::GenericInterface iface WinGenericInterface Solid::DeviceInterface::Block iface WinBlock Solid::DeviceInterface::Processor iface WinProcessor Solid::DeviceInterface::StorageAccess iface WinStorageAccess Solid::DeviceInterface::StorageDrive iface WinStorageDrive Solid::DeviceInterface::OpticalDrive iface WinOpticalDrive Solid::DeviceInterface::StorageVolume iface WinStorageVolume Solid::DeviceInterface::OpticalDisc iface WinOpticalDisc Solid::DeviceInterface::Battery iface WinBattery Solid::DeviceInterface::Unknown Solid::DeviceInterface::Last iface Solid::DeviceInterface::Type WinDevice::type m_type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">windevice.h</field>
    <field name="url">windevice_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Win WinDevice Solid::Ifaces::Device Q_OBJECT WinDevice QString udi QString udi QString parentUdi QString vendor QString product QString icon QStringList emblems QString description queryDeviceInterface Solid::DeviceInterface::Type type QObject createDeviceInterface Solid::DeviceInterface::Type type Solid::DeviceInterface::Type type QString m_udi QString m_parentUdi QString m_vendor QString m_product QString m_description Solid::DeviceInterface::Type m_type initStorageDevice initBatteryDevice initCpuDevice</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">windevicemanager.cpp</field>
    <field name="url">windevicemanager_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Win Q_GLOBAL_STATIC SolidWinEventFilter solidWineventFilter SolidWinEventFilter SolidWinEventFilter::instance solidWineventFilter SolidWinEventFilter::SolidWinEventFilter QObject title L WNDCLASSEX wcex ZeroMemory wcex wcex wcex cbSize WNDCLASSEX wcex lpfnWndProc SolidWinEventFilter::WndProc wcex hInstance HINSTANCE GetModuleHandle NULL wcex hbrBackground HBRUSH COLOR_WINDOW wcex lpszClassName title RegisterClassEx wcex qWarning m_windowID CreateWindow title title WS_ICONIC CW_USEDEFAULT NULL NULL wcex hInstance NULL m_windowID NULL qWarning ShowWindow m_windowID SW_HIDE SolidWinEventFilter::~SolidWinEventFilter PostMessage m_windowID WM_CLOSE SolidWinEventFilter::promoteAddedDevice QSet&lt;QString&gt; udi emit deviceAdded udi SolidWinEventFilter::promoteRemovedDevice QSet&lt;QString&gt; udi emit deviceRemoved udi SolidWinEventFilter::promotePowerChange emit powerChanged LRESULT CALLBACK SolidWinEventFilter::WndProc HWND hWnd UINT message WPARAM wParam LPARAM lParam message WM_DEVICECHANGE wParam DBT_DEVICEARRIVAL wParam DBT_DEVICEREMOVECOMPLETE DEV_BROADCAST_HDR header DEV_BROADCAST_HDR lParam header dbch_devicetype DBT_DEVTYP_VOLUME DEV_BROADCAST_VOLUME devNot DEV_BROADCAST_VOLUME lParam wParam DBT_DEVICEREMOVECOMPLETE QSet&lt;QString&gt; udis WinBlock::getFromBitMask devNot dbcv_unitmask solidWineventFilter promoteRemovedDevice udis DBT_DEVICEARRIVAL QSet&lt;QString&gt; udis WinBlock::updateUdiFromBitMask devNot dbcv_unitmask solidWineventFilter promoteAddedDevice udis WM_POWERBROADCAST solidWineventFilter promotePowerChange WM_DESTROY PostQuitMessage DefWindowProc hWnd message wParam lParam WinDeviceManager::WinDeviceManager QObject parent DeviceManager parent connect solidWineventFilter SIGNAL deviceAdded QSet&lt;QString&gt; SLOT slotDeviceAdded QSet&lt;QString&gt; connect solidWineventFilter SIGNAL deviceRemoved QSet&lt;QString&gt; SLOT slotDeviceRemoved QSet&lt;QString&gt; m_supportedInterfaces Solid::DeviceInterface::GenericInterface Solid::DeviceInterface::StorageAccess Solid::DeviceInterface::StorageDrive Solid::DeviceInterface::OpticalDrive Solid::DeviceInterface::StorageVolume Solid::DeviceInterface::OpticalDisc Solid::DeviceInterface::Processor Solid::DeviceInterface::Battery updateDeviceList WinDeviceManager::~WinDeviceManager QString WinDeviceManager::udiPrefix QString QSet&lt;Solid::DeviceInterface::Type&gt; Solid::Backends::Win::WinDeviceManager::supportedInterfaces m_supportedInterfaces QStringList WinDeviceManager::allDevices m_devicesList QStringList WinDeviceManager::devicesFromQuery QString parentUdi Solid::DeviceInterface::Type type QStringList list parentUdi isEmpty QString udi allDevices WinDevice device udi device type type device parentUdi parentUdi list udi type Solid::DeviceInterface::Unknown QString udi allDevices WinDevice device udi device queryDeviceInterface type list udi list allDevices list QObject Solid::Backends::Win::WinDeviceManager::createDevice QString udi allDevices contains udi WinDevice udi WinDeviceManager::slotDeviceAdded QSet&lt;QString&gt; udi QSet&lt;QString&gt; tmp udi m_devices m_devices tmp m_devicesList m_devices toList qSort m_devicesList QString s tmp emit deviceAdded s WinDeviceManager::slotDeviceRemoved QSet&lt;QString&gt; udi m_devices udi m_devicesList m_devices toList qSort m_devicesList QString s udi emit deviceRemoved s WinDeviceManager::updateDeviceList QSet&lt;QString&gt; devices WinProcessor::getUdis devices WinBlock::getUdis devices WinBattery::getUdis m_devices devices m_devicesList m_devices toList qSort m_devicesList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">windevicemanager.h</field>
    <field name="url">windevicemanager_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QString qGetLastError ulong errorNummber GetLastError LPVOID error NULL len FormatMessage FORMAT_MESSAGE_ALLOCATE_BUFFER FORMAT_MESSAGE_FROM_SYSTEM FORMAT_MESSAGE_IGNORE_INSERTS NULL errorNummber MAKELANGID LANG_NEUTRAL SUBLANG_DEFAULT LPWSTR error NULL QString out QString::fromWCharArray error len trimmed append arg errorNummber LocalFree error out Solid Backends Win WinDeviceManager Solid::Ifaces::DeviceManager Q_OBJECT WinDeviceManager QObject parent WinDeviceManager QString udiPrefix QSet&lt;Solid::DeviceInterface::Type&gt; supportedInterfaces QStringList allDevices QStringList devicesFromQuery QString parentUdi Solid::DeviceInterface::Type type Solid::DeviceInterface::Unknown QObject createDevice QString udi WinDeviceManager instance INFO getDeviceInfo QString devName code getDeviceInfo&lt;INFO, void *&gt; devName code INFO getDeviceInfo QString devName code QUERY query NULL INFO info ZeroMemory info INFO getDeviceInfoPrivate devName code info INFO query info getDeviceInfo QString devName code BUFFER_TYPE out outSize QUERY query NULL ZeroMemory out BUFFER_TYPE outSize getDeviceInfoPrivate devName code out outSize query deviceAction QString devName code getDeviceInfoPrivate&lt;void, void *&gt; devName code NULL NULL Q_SIGNALS powerChanged Q_SLOTS updateDeviceList slotDeviceAdded QSet&lt;QString&gt; udi slotDeviceRemoved QSet&lt;QString&gt; udi SolidWinEventFilter QSet&lt;QString&gt; m_devices QStringList m_devicesList QSet&lt;Solid::DeviceInterface::Type&gt; m_supportedInterfaces getDeviceInfoPrivate QString devName code INFO info size QUERY query NULL Q_ASSERT devName isNull deviceNameBuffer MAX_PATH QString dev devName dev startsWith dev QLatin1String dev deviceNameBuffer dev toWCharArray deviceNameBuffer DWORD bytesReturned ulong err NO_ERROR HANDLE handle deviceNameBuffer GENERIC_READ FILE_SHARE_READ FILE_SHARE_WRITE NULL OPEN_EXISTING NULL handle INVALID_HANDLE_VALUE err GetLastError err ERROR_ACCESS_DENIED handle deviceNameBuffer FILE_SHARE_READ FILE_SHARE_WRITE NULL OPEN_EXISTING NULL err GetLastError handle INVALID_HANDLE_VALUE qWarning dev qGetLastError err DeviceIoControl handle code query QUERY info size bytesReturned NULL handle handle INVALID_HANDLE_VALUE qWarning devName qGetLastError err GetLastError err ERROR_NOT_READY ERROR_INVALID_FUNCTION qWarning dev qGetLastError err handle</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">wingenericinterface.cpp</field>
    <field name="url">wingenericinterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Win WinGenericInterface::WinGenericInterface WinDevice device WinInterface device QVariant WinGenericInterface::property QString key Q_UNUSED key qFatal QVariant QMap&lt;QString, QVariant&gt; Solid::Backends::Win::WinGenericInterface::allProperties qFatal QMap&lt;QString, QVariant&gt; WinGenericInterface::propertyExists QString key Q_UNUSED key qFatal</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">wingenericinterface.h</field>
    <field name="url">wingenericinterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Win WinGenericInterface WinInterface Solid::Ifaces::GenericInterface Q_OBJECT Q_INTERFACES Solid::Ifaces::GenericInterface WinGenericInterface WinDevice device QVariant property QString key QMap&lt;QString, QVariant&gt; allProperties propertyExists QString key Q_SIGNALS propertyChanged QMap&lt;QString, int&gt; changes conditionRaised QString condition QString reason</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">wininterface.cpp</field>
    <field name="url">wininterface_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Win WinInterface::WinInterface WinDevice device QObject device m_device device WinInterface::~WinInterface</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">wininterface.h</field>
    <field name="url">wininterface_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Win WinInterface QObject Solid::Ifaces::DeviceInterface Q_OBJECT Q_INTERFACES Solid::Ifaces::DeviceInterface WinInterface WinDevice device WinInterface WinDevice m_device</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">winopticaldisc.cpp</field>
    <field name="url">winopticaldisc_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Win WinOpticalDisc::WinOpticalDisc WinDevice device WinStorageVolume device m_discType Solid OpticalDisc UnknownDiscType m_isRewritable false QMap&lt;ulong, MediaProfiles&gt; profiles MediaProfiles::profiles WinBlock::driveLetterFromUdi m_device udi profiles ProfileCdRecordable active m_discType Solid::OpticalDisc::CdRecordable profiles ProfileCdRewritable active m_discType Solid::OpticalDisc::CdRewritable m_isRewritable profiles ProfileCdrom active m_discType Solid::OpticalDisc::CdRom profiles ProfileDvdRecordable active m_discType Solid::OpticalDisc::DvdRecordable profiles ProfileDvdRewritable active m_discType Solid::OpticalDisc::DvdRewritable m_isRewritable profiles ProfileDvdRom active m_discType Solid::OpticalDisc::DvdRom m_discType Solid::OpticalDisc::UnknownDiscType WinOpticalDisc::~WinOpticalDisc Solid::OpticalDisc::ContentTypes WinOpticalDisc::availableContent Solid::OpticalDisc::NoContent Solid::OpticalDisc::DiscType WinOpticalDisc::discType m_discType WinOpticalDisc::isAppendable WinOpticalDisc::isBlank dLetter MAX_PATH dLetterSize WinBlock::driveLetterFromUdi m_device udi toWCharArray dLetter dLetter dLetterSize wchar_t dLetter dLetterSize ULARGE_INTEGER sizeTotal ULARGE_INTEGER sizeFree GetDiskFreeSpaceEx dLetter sizeFree sizeTotal NULL sizeFree QuadPart sizeTotal QuadPart m_discType Solid::OpticalDisc::UnknownDiscType WinOpticalDisc::isRewritable m_isRewritable qulonglong WinOpticalDisc::capacity size</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">winopticaldisc.h</field>
    <field name="url">winopticaldisc_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Win WinOpticalDisc WinStorageVolume Solid::Ifaces::OpticalDisc Q_OBJECT Q_INTERFACES Solid::Ifaces::OpticalDisc WinOpticalDisc WinDevice device WinOpticalDisc Solid::OpticalDisc::ContentTypes availableContent Solid::OpticalDisc::DiscType discType isAppendable isBlank isRewritable qulonglong capacity Solid::OpticalDisc::DiscType m_discType m_isRewritable m_isBlank m_isAppendable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">winopticaldrive.cpp</field>
    <field name="url">winopticaldrive_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Win WinOpticalDrive::WinOpticalDrive WinDevice device WinStorageDrive device QMap&lt;ulong, MediaProfiles&gt; profiles MediaProfiles::profiles WinBlock::driveLetterFromUdi m_device udi MediaProfiles p profiles values m_supportedTypes p type WinOpticalDrive::~WinOpticalDrive Solid::OpticalDrive::MediumTypes WinOpticalDrive::supportedMedia m_supportedTypes WinOpticalDrive::eject WinDeviceManager::deviceAction WinBlock::driveLetterFromUdi m_device udi IOCTL_STORAGE_EJECT_MEDIA QList&lt;int&gt; WinOpticalDrive::writeSpeeds QList&lt;int&gt; WinOpticalDrive::writeSpeed WinOpticalDrive::readSpeed MediaProfiles::MediaProfiles profile type active false MediaProfiles::MediaProfiles ulong profile Solid::OpticalDrive::MediumTypes type QString name profile profile type type name name active false MediaProfiles::MediaProfiles FEATURE_DATA_PROFILE_LIST_EX feature profile type active false ulong val feature ProfileNumber feature ProfileNumber MediaProfiles p MediaProfiles::getProfile val p isNull profile p profile type p type name p name active feature Current MediaProfiles::isNull name isNull QMap&lt;ulong, MediaProfiles&gt; MediaProfiles::profiles QString drive QMap&lt;ulong, MediaProfiles&gt; out buffSize buffer GET_CONFIGURATION_IOCTL_INPUT input ZeroMemory input GET_CONFIGURATION_IOCTL_INPUT input Feature FeatureProfileList input RequestType SCSI_GET_CONFIGURATION_REQUEST_TYPE_ALL WinDeviceManager::getDeviceInfo&lt;char, GET_CONFIGURATION_IOCTL_INPUT&gt; drive IOCTL_CDROM_GET_CONFIGURATION buffer buffSize input GET_CONFIGURATION_HEADER info GET_CONFIGURATION_HEADER buffer FEATURE_DATA_PROFILE_LIST profile FEATURE_DATA_PROFILE_LIST info Data FEATURE_DATA_PROFILE_LIST_EX feature profile Profiles for i i profile Header AdditionalLength feature i MediaProfiles p MediaProfiles feature p isNull out insert p profile p out MediaProfiles MediaProfiles::getProfile ulong val QMap&lt;ulong, MediaProfiles&gt; profiles profiles isEmpty AddProfile ProfileCdrom AddProfile ProfileCdRecordable Solid::OpticalDrive::Cdr AddProfile ProfileCdRewritable Solid::OpticalDrive::Cdrw AddProfile ProfileDvdRom Solid::OpticalDrive::Dvd AddProfile ProfileDvdRecordable Solid::OpticalDrive::Dvdr AddProfile ProfileDvdRewritable Solid::OpticalDrive::Dvdrw AddProfile ProfileDvdRam Solid::OpticalDrive::Dvdram AddProfile ProfileDvdPlusR Solid::OpticalDrive::Dvdplusr AddProfile ProfileDvdPlusRW Solid::OpticalDrive::Dvdplusrw AddProfile ProfileDvdPlusRDualLayer Solid::OpticalDrive::Dvdplusdl AddProfile ProfileDvdPlusRWDualLayer Solid::OpticalDrive::Dvdplusdlrw AddProfile ProfileBDRom Solid::OpticalDrive::Bd AddProfile ProfileBDRRandomWritable Solid::OpticalDrive::Bdr AddProfile ProfileBDRSequentialWritable Solid::OpticalDrive::Bdr AddProfile ProfileBDRewritable Solid::OpticalDrive::Bdre AddProfile ProfileHDDVDRom Solid::OpticalDrive::HdDvd AddProfile ProfileHDDVDRecordable Solid::OpticalDrive::HdDvdr AddProfile ProfileHDDVDRewritable Solid::OpticalDrive::HdDvdrw profiles val</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">winopticaldrive.h</field>
    <field name="url">winopticaldrive_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">_FEATURE_DATA_PROFILE_LIST_EX _FEATURE_DATA_PROFILE_LIST_EX FEATURE_DATA_PROFILE_LIST_EX Solid Backends Win WinOpticalDrive WinStorageDrive Solid::Ifaces::OpticalDrive Q_OBJECT Q_INTERFACES Solid::Ifaces::OpticalDrive WinOpticalDrive WinDevice device WinOpticalDrive Solid::OpticalDrive::MediumTypes supportedMedia readSpeed writeSpeed QList&lt;int&gt; writeSpeeds eject Q_SIGNALS ejectPressed QString udi ejectDone Solid::ErrorType error QVariant errorData QString udi Solid::OpticalDrive::MediumTypes m_supportedTypes MediaProfiles MediaProfiles ulong profile Solid::OpticalDrive::MediumTypes type QString name active QMap&lt;ulong, MediaProfiles&gt; profiles QString drive MediaProfiles ulong profile Solid::OpticalDrive::MediumTypes type QString name MediaProfiles FEATURE_DATA_PROFILE_LIST_EX feature isNull MediaProfiles getProfile ulong</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">winprocessor.cpp</field>
    <field name="url">winprocessor_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Win BOOL WINAPI GLPI_fn SYSTEM_LOGICAL_PROCESSOR_INFORMATION Buffer DWORD ReturnLength GLPI_fn pGetLogicalProcessorInformation GLPI_fn GetProcAddress LoadLibraryA WinProcessor::WinProcessor WinDevice device WinInterface device m_number m_device udi mid m_device udi length toInt WinProcessor::~WinProcessor WinProcessor::number m_number WinProcessor::maxSpeed updateCache m_number speed WinProcessor::canChangeFrequency Solid::Processor::InstructionSets WinProcessor::instructionSets Solid::Processor::InstructionSets Solid::Backends::Shared::cpuFeatures QSet&lt;QString&gt; WinProcessor::getUdis QSet&lt;QString&gt; out out isEmpty ProcessorInfo info updateCache out QString arg info id arg info lgicalId out DWORD WinProcessor::countSetBits ULONG_PTR bitMask DWORD LSHIFT ULONG_PTR DWORD bitSetCount ULONG_PTR bitTest ULONG_PTR LSHIFT DWORD i i i LSHIFT i bitSetCount bitMask bitTest bitTest bitSetCount QMap&lt;int, WinProcessor::ProcessorInfo&gt; WinProcessor::updateCache QMap&lt;int, ProcessorInfo&gt; p p isEmpty DWORD size pGetLogicalProcessorInformation NULL size buff size SYSTEM_LOGICAL_PROCESSOR_INFORMATION info SYSTEM_LOGICAL_PROCESSOR_INFORMATION buff pGetLogicalProcessorInformation info size size SYSTEM_LOGICAL_PROCESSOR_INFORMATION uint processorCoreCount uint logicalProcessorCount uint i i size i info i Relationship RelationProcessorCore uint old logicalProcessorCount logicalProcessorCount countSetBits info i ProcessorMask old logicalProcessorCount old QSettings settings QLatin1String QString::number old QSettings::NativeFormat ProcessorInfo proc proc id processorCoreCount proc lgicalId old proc speed settings value toInt proc vendor settings value toString trimmed proc name settings value toString trimmed proc produuct settings value toString trimmed p old proc processorCoreCount buff p</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">winprocessor.h</field>
    <field name="url">winprocessor_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Win WinProcessor WinInterface Solid::Ifaces::Processor WinDevice Q_OBJECT Q_INTERFACES Solid::Ifaces::Processor WinProcessor WinDevice device WinProcessor number maxSpeed canChangeFrequency Solid::Processor::InstructionSets instructionSets QSet&lt;QString&gt; getUdis m_number ProcessorInfo lgicalId id speed QString vendor QString name QString produuct DWORD countSetBits ULONG_PTR bitMask QMap&lt;int, WinProcessor::ProcessorInfo&gt; updateCache</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">winstorageaccess.cpp</field>
    <field name="url">winstorageaccess_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Win WinStorageAccess::WinStorageAccess WinDevice device WinInterface device WinStorageAccess::~WinStorageAccess WinStorageAccess::isAccessible QString WinStorageAccess::filePath WinBlock::driveLetterFromUdi m_device udi append WinStorageAccess::isIgnored WinStorageAccess::setup WinStorageAccess::teardown m_device queryDeviceInterface Solid::DeviceInterface::StorageVolume WinStorageDrive m_device driveType Solid::StorageDrive::MemoryStick WinDeviceManager::deviceAction WinBlock::driveLetterFromUdi m_device udi IOCTL_STORAGE_EJECT_MEDIA</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">winstorageaccess.h</field>
    <field name="url">winstorageaccess_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Win WinStorageAccess WinInterface Solid::Ifaces::StorageAccess Q_OBJECT Q_INTERFACES Solid::Ifaces::StorageAccess WinStorageAccess WinDevice device WinStorageAccess isAccessible QString filePath isIgnored setup teardown Q_SIGNALS accessibilityChanged accessible QString udi setupDone Solid::ErrorType error QVariant resultData QString udi teardownDone Solid::ErrorType error QVariant resultData QString udi setupRequested QString udi teardownRequested QString udi</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">winstoragedrive.cpp</field>
    <field name="url">winstoragedrive_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Win WinStorageDrive::WinStorageDrive WinDevice device WinBlock device updateCache WinStorageDrive::~WinStorageDrive Solid::StorageDrive::Bus WinStorageDrive::bus m_bus Solid::StorageDrive::DriveType WinStorageDrive::driveType m_device type Solid::DeviceInterface::OpticalDrive Solid::StorageDrive::CdromDrive bus Solid::StorageDrive::Usb Solid::StorageDrive::MemoryStick Solid::StorageDrive::HardDisk WinStorageDrive::isRemovable m_isRemovable WinStorageDrive::isHotpluggable m_isHotplugges qulonglong WinStorageDrive::size m_size WinStorageDrive::updateCache STORAGE_PROPERTY_QUERY storageProperty storageProperty PropertyId StorageAdapterProperty storageProperty QueryType PropertyStandardQuery QString dev m_device type Solid::DeviceInterface::OpticalDrive dev WinBlock::driveLetterFromUdi m_device udi dev QLatin1String QString::number deviceMajor STORAGE_ADAPTER_DESCRIPTOR busInfo WinDeviceManager::getDeviceInfo&lt;STORAGE_ADAPTER_DESCRIPTOR&gt; dev IOCTL_STORAGE_QUERY_PROPERTY storageProperty busInfo BusType BusTypeUsb m_bus Solid::StorageDrive::Usb BusType1394 m_bus Solid::StorageDrive::Ieee1394 BusTypeScsi m_bus Solid::StorageDrive::Scsi BusTypeAta m_bus Solid::StorageDrive::Ide DISK_GEOMETRY sizeInfo WinDeviceManager::getDeviceInfo&lt;DISK_GEOMETRY&gt; dev IOCTL_DISK_GET_DRIVE_GEOMETRY m_size sizeInfo Cylinders QuadPart sizeInfo TracksPerCylinder sizeInfo SectorsPerTrack sizeInfo BytesPerSector STORAGE_HOTPLUG_INFO plugInfo WinDeviceManager::getDeviceInfo&lt;STORAGE_HOTPLUG_INFO&gt; dev IOCTL_STORAGE_GET_HOTPLUG_INFO m_isHotplugges plugInfo DeviceHotplug m_isRemovable plugInfo MediaRemovable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">winstoragedrive.h</field>
    <field name="url">winstoragedrive_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Win WinStorageDrive WinBlock Solid::Ifaces::StorageDrive Q_OBJECT Q_INTERFACES Solid::Ifaces::StorageDrive WinStorageDrive WinDevice device WinStorageDrive Solid::StorageDrive::Bus bus Solid::StorageDrive::DriveType driveType isRemovable isHotpluggable qulonglong size updateCache Solid::StorageDrive::Bus m_bus qulonglong m_size m_isHotplugges m_isRemovable</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">winstoragevolume.cpp</field>
    <field name="url">winstoragevolume_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid::Backends::Win WinStorageVolume::WinStorageVolume WinDevice device WinBlock device m_size updateCache WinStorageVolume::~WinStorageVolume WinStorageVolume::isIgnored WinBlock::driveLetterFromUdi m_device udi isNull Solid::StorageVolume::UsageType WinStorageVolume::usage Solid::StorageVolume::FileSystem WinStorageVolume::updateCache label MAX_PATH fs MAX_PATH DWORD serial DWORD flags dLetter MAX_PATH dLetterSize WinBlock::driveLetterFromUdi m_device udi toWCharArray dLetter dLetter dLetterSize wchar_t dLetter dLetterSize GetVolumeInformation dLetter label MAX_PATH serial NULL flags fs MAX_PATH m_label QString::fromWCharArray label m_fs QString::fromWCharArray fs m_uuid QString::number serial ULARGE_INTEGER size GetDiskFreeSpaceEx dLetter NULL size NULL m_size size QuadPart QString WinStorageVolume::fsType m_fs QString WinStorageVolume::label m_label QString WinStorageVolume::uuid m_uuid qulonglong WinStorageVolume::size m_size QString WinStorageVolume::encryptedContainerUdi QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">winstoragevolume.h</field>
    <field name="url">winstoragevolume_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Solid Backends Win WinStorageVolume WinBlock Solid::Ifaces::StorageVolume Q_OBJECT Q_INTERFACES Solid::Ifaces::StorageVolume WinStorageVolume WinDevice device WinStorageVolume isIgnored Solid::StorageVolume::UsageType usage QString fsType QString label QString uuid qulonglong size QString encryptedContainerUdi QString m_fs QString m_label QString m_uuid qulonglong m_size updateCache</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">song</field>
    <field name="url">song.html</field>
    <field name="keywords"></field>
    <field name="text">A Solid Song And for HAL s sake each mistake ah you forgave And soon both of us learned to trust Not run away it was no time to play We built it up and built it up and committed it And now it s solid Solid as a rock That s what this code is That s what we ve got oh mmm Solid Oh Solid as a rock And nothing s changed it Ooh The code is still hot hot hot hot hot hot hot hot</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">deprecated</field>
    <field name="url">deprecated.html</field>
    <field name="keywords"></field>
    <field name="text">Deprecated List Member Solid Battery isPlugged const since Solid 5.0 Use isPresent instead</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">Solid</field>
    <field name="url">namespaceSolid.html</field>
    <field name="keywords">Solid</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::AbstractInhibition</field>
    <field name="url">classSolid_1_1AbstractInhibition.html</field>
    <field name="keywords">AbstractInhibition</field>
    <field name="text">When implementing this class take into account that the inhibition should be stopped upon object deletion so stateChanged should be emitted on it</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Battery</field>
    <field name="url">classSolid_1_1Battery.html</field>
    <field name="keywords">Battery</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Solid::Battery::BatteryType</field>
    <field name="url">classSolid_1_1Battery.html#a1fcf11b5b40bb857e6233c3ef6fe849a</field>
    <field name="keywords">BatteryType Solid::Battery::BatteryType Solid::Battery</field>
    <field name="text">PdaBattery A battery in a Personal Digital Assistant UpsBattery A battery in an Uninterruptible Power Supply PrimaryBattery A primary battery for the system for example laptop battery MouseBattery A battery in a mouse KeyboardBattery A battery in a keyboard KeyboardMouseBattery A battery in a combined keyboard and mouse CameraBattery A battery in a camera PhoneBattery A battery in a phone MonitorBattery A battery in a monitor UnknownBattery A battery in an unknown device</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Solid::Battery::ChargeState</field>
    <field name="url">classSolid_1_1Battery.html#ad734c47beb8dd3f789d7b6249f514bf6</field>
    <field name="keywords">ChargeState Solid::Battery::ChargeState Solid::Battery</field>
    <field name="text">NoCharge Battery charge is stable not charging or discharging or the state is Unknown Charging Battery is charging Discharging Battery is discharging FullyCharged The battery is fully charged a battery not neccessarily charges up to 100</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Solid::Battery::Technology</field>
    <field name="url">classSolid_1_1Battery.html#a51dd2479193b09f2d828761c70e32129</field>
    <field name="keywords">Technology Solid::Battery::Technology Solid::Battery</field>
    <field name="text">0 Unknown 1 Lithium ion 2 Lithium polymer 3 Lithium iron phosphate 4 Lead acid 5 Nickel cadmium 6 Nickel metal hydride</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Solid::DeviceInterface::Type</field>
    <field name="url">classSolid_1_1DeviceInterface.html#a2cdcf915c8dd5f635e7348d541412239</field>
    <field name="keywords">Type Solid::DeviceInterface::Type Solid::DeviceInterface Type Solid::DeviceInterface::Type Solid::DeviceInterface Type Solid::DeviceInterface::Type Solid::DeviceInterface Type Solid::DeviceInterface::Type Solid::DeviceInterface Type Solid::DeviceInterface::Type Solid::DeviceInterface Type Solid::DeviceInterface::Type Solid::DeviceInterface Type Solid::DeviceInterface::Type Solid::DeviceInterface Type Solid::DeviceInterface::Type Solid::DeviceInterface Type Solid::DeviceInterface::Type Solid::DeviceInterface Type Solid::DeviceInterface::Type Solid::DeviceInterface Type Solid::DeviceInterface::Type Solid::DeviceInterface Type Solid::DeviceInterface::Type Solid::DeviceInterface Type Solid::DeviceInterface::Type Solid::DeviceInterface</field>
    <field name="text">Unknown An undetermined device interface Processor A processor Block A block device StorageAccess A mechanism to access data on a storage device StorageDrive A storage drive OpticalDrive An optical drive CD-ROM DVD StorageVolume A volume OpticalDisc An optical disc Camera A digital camera PortableMediaPlayer A portable media player NetworkShare A network share interface</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Battery::capacityChanged</field>
    <field name="args">(int value, const QString &amp;udi)</field>
    <field name="url">classSolid_1_1Battery.html#a2f574bd58688c750b8a1c0a383845107</field>
    <field name="keywords">capacityChanged Solid::Battery::capacityChanged Solid::Battery</field>
    <field name="text">value the new capacity of the battery udi the UDI of the battery with the new capacity 4.11</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Battery::chargePercentChanged</field>
    <field name="args">(int value, const QString &amp;udi)</field>
    <field name="url">classSolid_1_1Battery.html#acf7bf64c35c14a4154399bbb7477e034</field>
    <field name="keywords">chargePercentChanged Solid::Battery::chargePercentChanged Solid::Battery</field>
    <field name="text">value the new charge percent value of the battery udi the UDI of the battery with the new charge percent</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Battery::chargeStateChanged</field>
    <field name="args">(int newState, const QString &amp;udi=QString())</field>
    <field name="url">classSolid_1_1Battery.html#ad30df1b8ad48607f0949946e66ce875e</field>
    <field name="keywords">chargeStateChanged Solid::Battery::chargeStateChanged Solid::Battery</field>
    <field name="text">newState the new charge state of the battery it s one of the type Solid::Battery::ChargeState Solid::Battery::ChargeState udi the UDI of the battery with the new charge state</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Battery::energyChanged</field>
    <field name="args">(double energy, const QString &amp;udi)</field>
    <field name="url">classSolid_1_1Battery.html#a03936cace0d62878ecd48929f2db19c0</field>
    <field name="keywords">energyChanged Solid::Battery::energyChanged Solid::Battery</field>
    <field name="text">energy the new energy value of the battery udi the UDI of the battery with the new energy value</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Battery::energyFullChanged</field>
    <field name="args">(double energy, const QString &amp;udi)</field>
    <field name="url">classSolid_1_1Battery.html#a5ba442f6d490c618609c186933dde215</field>
    <field name="keywords">energyFullChanged Solid::Battery::energyFullChanged Solid::Battery</field>
    <field name="text">energy the new energy full value of the battery udi the UDI of the battery with the new energy full value</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Battery::energyFullDesignChanged</field>
    <field name="args">(double energy, const QString &amp;udi)</field>
    <field name="url">classSolid_1_1Battery.html#a3e44bb6c0c829ef4657e5c89c93bfbd7</field>
    <field name="keywords">energyFullDesignChanged Solid::Battery::energyFullDesignChanged Solid::Battery</field>
    <field name="text">energy the new energy full design value of the battery udi the UDI of the battery with the new energy full design value</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Battery::energyRateChanged</field>
    <field name="args">(double energyRate, const QString &amp;udi)</field>
    <field name="url">classSolid_1_1Battery.html#a1b31eb7a04eb230ac80e0359a620f0d9</field>
    <field name="keywords">energyRateChanged Solid::Battery::energyRateChanged Solid::Battery</field>
    <field name="text">If positive the source is being discharged if negative it s being charged energyRate the new energy rate value of the battery udi the UDI of the battery with the new charge percent</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Battery::powerSupplyStateChanged</field>
    <field name="args">(bool newState, const QString &amp;udi)</field>
    <field name="url">classSolid_1_1Battery.html#a970f82f69e08de6d3ef845c50e5f8633</field>
    <field name="keywords">powerSupplyStateChanged Solid::Battery::powerSupplyStateChanged Solid::Battery</field>
    <field name="text">newState the new power supply state type is boolean udi the UDI of the battery with the new power supply state 4.11</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Battery::presentStateChanged</field>
    <field name="args">(bool newState, const QString &amp;udi)</field>
    <field name="url">classSolid_1_1Battery.html#a9a469f3d1201992c01d44ac08c0b425b</field>
    <field name="keywords">presentStateChanged Solid::Battery::presentStateChanged Solid::Battery</field>
    <field name="text">newState the new plugging state of the battery type is boolean udi the UDI of the battery with thew new plugging state</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Battery::remainingTimeChanged</field>
    <field name="args">(qlonglong time, const QString &amp;udi)</field>
    <field name="url">classSolid_1_1Battery.html#aba8da55a5edc3dd877b3459515139ab6</field>
    <field name="keywords">remainingTimeChanged Solid::Battery::remainingTimeChanged Solid::Battery</field>
    <field name="text">time the new remaining time udi the UDI of the battery with the new remaining time 5.8</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Battery::temperatureChanged</field>
    <field name="args">(double temperature, const QString &amp;udi)</field>
    <field name="url">classSolid_1_1Battery.html#a0088cc7b4ae2df31175b666f0841253c</field>
    <field name="keywords">temperatureChanged Solid::Battery::temperatureChanged Solid::Battery</field>
    <field name="text">temperature the new temperature of the battery in degrees Celsius udi the UDI of the battery with the new temperature 5.0</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Battery::timeToEmptyChanged</field>
    <field name="args">(qlonglong time, const QString &amp;udi)</field>
    <field name="url">classSolid_1_1Battery.html#a592be8e76df3090502af64e991e5c7da</field>
    <field name="keywords">timeToEmptyChanged Solid::Battery::timeToEmptyChanged Solid::Battery</field>
    <field name="text">time the new remaining time udi the UDI of the battery with the new remaining time 5.0</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Battery::timeToFullChanged</field>
    <field name="args">(qlonglong time, const QString &amp;udi)</field>
    <field name="url">classSolid_1_1Battery.html#aa7a02bd344f6c1c44742d4ef7cd3a6f4</field>
    <field name="keywords">timeToFullChanged Solid::Battery::timeToFullChanged Solid::Battery</field>
    <field name="text">time the new remaining time udi the UDI of the battery with the new remaining time 5.0</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Battery::voltageChanged</field>
    <field name="args">(double voltage, const QString &amp;udi)</field>
    <field name="url">classSolid_1_1Battery.html#aeb16ec76e0384402ecb353efb8eb47f4</field>
    <field name="keywords">voltageChanged Solid::Battery::voltageChanged Solid::Battery</field>
    <field name="text">voltage the new voltage of the cell udi the UDI of the battery with the new voltage 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::~Battery</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Battery.html#a7fe27e34c8bb4f2c3966ca981fa8f291</field>
    <field name="keywords">Solid::Battery::~Battery Solid::Battery</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::capacity</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#a8e8b317e1226434ae4f7d763b3a07787</field>
    <field name="keywords">capacity Solid::Battery::capacity Solid::Battery</field>
    <field name="text">The capacity of the battery will reduce with age A capacity value less than 75 is usually a sign that you should renew your battery 4.11 the battery capacity normalised to percent</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::chargePercent</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#a1fe7af3e27d66cbde9aa9309bc9d5c06</field>
    <field name="keywords">chargePercent Solid::Battery::chargePercent Solid::Battery</field>
    <field name="text">the current charge level normalised to percent</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::chargeState</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#a2f80091eade85380ed87c58b47b78898</field>
    <field name="keywords">chargeState Solid::Battery::chargeState Solid::Battery</field>
    <field name="text">It can be in a stable state no charge charging or discharging the current battery charge state Solid::Battery::ChargeState</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::energy</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#af10b6ed11f02f5a010f759159e16a02a</field>
    <field name="keywords">energy Solid::Battery::energy Solid::Battery</field>
    <field name="text">amount of battery energy in Wh</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::energyFull</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#a818ff51a1d54ef8aa43150c4bc7b5e04</field>
    <field name="keywords">energyFull Solid::Battery::energyFull Solid::Battery</field>
    <field name="text">amount of battery energy when full in Wh 5.7</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::energyFullDesign</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#a8b8966beae74cefc647b0f42b509a1c0</field>
    <field name="keywords">energyFullDesign Solid::Battery::energyFullDesign Solid::Battery</field>
    <field name="text">amount of battery energy when full by design in Wh 5.7</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::energyRate</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#a0e2fdfacc3af083dae24ad0ce78a754a</field>
    <field name="keywords">energyRate Solid::Battery::energyRate Solid::Battery</field>
    <field name="text">If positive the source is being discharged if negative it s being charged battery rate in Watts</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::isPlugged</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#a003ac183478fe9085bbf260ffb7ebd3d</field>
    <field name="keywords">isPlugged Solid::Battery::isPlugged Solid::Battery</field>
    <field name="text">since Solid 5.0 Use isPresent instead</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::isPowerSupply</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#acbc64ef56b531e5f04451c24d587e22a</field>
    <field name="keywords">isPowerSupply Solid::Battery::isPowerSupply Solid::Battery</field>
    <field name="text">true if the battery is powersupply false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::isPresent</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#a375570ba9bbf8eee77628462d3fc1b7f</field>
    <field name="keywords">isPresent Solid::Battery::isPresent Solid::Battery</field>
    <field name="text">true if the battery is present false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::isRecalled</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#ac5ba5c6041e3c456c1e9457851203ccc</field>
    <field name="keywords">isRecalled Solid::Battery::isRecalled Solid::Battery</field>
    <field name="text">true if the battery has been recalled false otherwise 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::isRechargeable</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#aa509bb9cf8e7e0a9dab3e678af614703</field>
    <field name="keywords">isRechargeable Solid::Battery::isRechargeable Solid::Battery</field>
    <field name="text">true if the battery is rechargeable false otherwise one time usage</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::recallUrl</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#a144ce643300923e6030830a16ff1e069</field>
    <field name="keywords">recallUrl Solid::Battery::recallUrl Solid::Battery</field>
    <field name="text">the website URL of the vendor that has recalled the battery 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::recallVendor</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#a9ed46d8a7b18ee39f570a02befbfda5f</field>
    <field name="keywords">recallVendor Solid::Battery::recallVendor Solid::Battery</field>
    <field name="text">the vendor name that has recalled the battery 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::remainingTime</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#a7919c0fa0afa35e9c5062670cf653d1e</field>
    <field name="keywords">remainingTime Solid::Battery::remainingTime Solid::Battery</field>
    <field name="text">the current global estimated remaining time in seconds 5.8</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::serial</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#a1fcd8f0adfdf43f2217dc10d7d1f07da</field>
    <field name="keywords">serial Solid::Battery::serial Solid::Battery</field>
    <field name="text">the serial number of the battery 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::technology</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#aaa9c0d7f84cf8f00b34603d9dff34f8e</field>
    <field name="keywords">technology Solid::Battery::technology Solid::Battery</field>
    <field name="text">the battery technology Solid::Battery::Technology</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::temperature</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#a4ea09456085eac8feb47f59b29b8a201</field>
    <field name="keywords">temperature Solid::Battery::temperature Solid::Battery</field>
    <field name="text">the battery temperature in degrees Celsius 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::timeToEmpty</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#a4e2438032ef7848f004236dbe31d907e</field>
    <field name="keywords">timeToEmpty Solid::Battery::timeToEmpty Solid::Battery</field>
    <field name="text">time until the battery is empty 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::timeToFull</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#abc216af6a9254ea2bbd31020eaa96485</field>
    <field name="keywords">timeToFull Solid::Battery::timeToFull Solid::Battery</field>
    <field name="text">time until the battery is full 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::type</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#a1465fe97e027e24038676b21b552aaae</field>
    <field name="keywords">type Solid::Battery::type Solid::Battery</field>
    <field name="text">the type of device holding this battery Solid::Battery::BatteryType</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::voltage</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Battery.html#ae37240153f3eed39c5ef1c0d8869a7ca</field>
    <field name="keywords">voltage Solid::Battery::voltage Solid::Battery</field>
    <field name="text">voltage in Volts</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::DeviceInterface::~DeviceInterface</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1DeviceInterface.html#a183eccdda251569716edc2ad8a405e57</field>
    <field name="keywords">Solid::DeviceInterface::~DeviceInterface Solid::DeviceInterface Solid::DeviceInterface::~DeviceInterface Solid::DeviceInterface Solid::DeviceInterface::~DeviceInterface Solid::DeviceInterface Solid::DeviceInterface::~DeviceInterface Solid::DeviceInterface Solid::DeviceInterface::~DeviceInterface Solid::DeviceInterface Solid::DeviceInterface::~DeviceInterface Solid::DeviceInterface Solid::DeviceInterface::~DeviceInterface Solid::DeviceInterface Solid::DeviceInterface::~DeviceInterface Solid::DeviceInterface Solid::DeviceInterface::~DeviceInterface Solid::DeviceInterface Solid::DeviceInterface::~DeviceInterface Solid::DeviceInterface Solid::DeviceInterface::~DeviceInterface Solid::DeviceInterface Solid::DeviceInterface::~DeviceInterface Solid::DeviceInterface Solid::DeviceInterface::~DeviceInterface Solid::DeviceInterface</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::DeviceInterface::isValid</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1DeviceInterface.html#a360b56c1802259ff2fb7bb977cdda40b</field>
    <field name="keywords">isValid Solid::DeviceInterface::isValid Solid::DeviceInterface isValid Solid::DeviceInterface::isValid Solid::DeviceInterface isValid Solid::DeviceInterface::isValid Solid::DeviceInterface isValid Solid::DeviceInterface::isValid Solid::DeviceInterface isValid Solid::DeviceInterface::isValid Solid::DeviceInterface isValid Solid::DeviceInterface::isValid Solid::DeviceInterface isValid Solid::DeviceInterface::isValid Solid::DeviceInterface isValid Solid::DeviceInterface::isValid Solid::DeviceInterface isValid Solid::DeviceInterface::isValid Solid::DeviceInterface isValid Solid::DeviceInterface::isValid Solid::DeviceInterface isValid Solid::DeviceInterface::isValid Solid::DeviceInterface isValid Solid::DeviceInterface::isValid Solid::DeviceInterface isValid Solid::DeviceInterface::isValid Solid::DeviceInterface</field>
    <field name="text">A device interface is considered valid if the device it is referring is available in the system true if this device interface s device is available false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Battery::deviceInterfaceType</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Battery.html#adda33848ddc83d988aaab34d7e43f075</field>
    <field name="keywords">deviceInterfaceType Solid::Battery::deviceInterfaceType Solid::Battery</field>
    <field name="text">the Battery device interface type Solid::DeviceInterface::Type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::DeviceInterface::stringToType</field>
    <field name="args">(const QString &amp;type)</field>
    <field name="url">classSolid_1_1DeviceInterface.html#aaabf2f7173600f93617b038b00a4447a</field>
    <field name="keywords">stringToType Solid::DeviceInterface::stringToType Solid::DeviceInterface stringToType Solid::DeviceInterface::stringToType Solid::DeviceInterface stringToType Solid::DeviceInterface::stringToType Solid::DeviceInterface stringToType Solid::DeviceInterface::stringToType Solid::DeviceInterface stringToType Solid::DeviceInterface::stringToType Solid::DeviceInterface stringToType Solid::DeviceInterface::stringToType Solid::DeviceInterface stringToType Solid::DeviceInterface::stringToType Solid::DeviceInterface stringToType Solid::DeviceInterface::stringToType Solid::DeviceInterface stringToType Solid::DeviceInterface::stringToType Solid::DeviceInterface stringToType Solid::DeviceInterface::stringToType Solid::DeviceInterface stringToType Solid::DeviceInterface::stringToType Solid::DeviceInterface stringToType Solid::DeviceInterface::stringToType Solid::DeviceInterface stringToType Solid::DeviceInterface::stringToType Solid::DeviceInterface</field>
    <field name="text">the device interface type for the given class name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::DeviceInterface::typeDescription</field>
    <field name="args">(Type type)</field>
    <field name="url">classSolid_1_1DeviceInterface.html#af98329b4bbde7728a27841c8707f63a0</field>
    <field name="keywords">typeDescription Solid::DeviceInterface::typeDescription Solid::DeviceInterface typeDescription Solid::DeviceInterface::typeDescription Solid::DeviceInterface typeDescription Solid::DeviceInterface::typeDescription Solid::DeviceInterface typeDescription Solid::DeviceInterface::typeDescription Solid::DeviceInterface typeDescription Solid::DeviceInterface::typeDescription Solid::DeviceInterface typeDescription Solid::DeviceInterface::typeDescription Solid::DeviceInterface typeDescription Solid::DeviceInterface::typeDescription Solid::DeviceInterface typeDescription Solid::DeviceInterface::typeDescription Solid::DeviceInterface typeDescription Solid::DeviceInterface::typeDescription Solid::DeviceInterface typeDescription Solid::DeviceInterface::typeDescription Solid::DeviceInterface typeDescription Solid::DeviceInterface::typeDescription Solid::DeviceInterface typeDescription Solid::DeviceInterface::typeDescription Solid::DeviceInterface typeDescription Solid::DeviceInterface::typeDescription Solid::DeviceInterface</field>
    <field name="text">a description suitable to display in the UI of the device interface type 4.4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::DeviceInterface::typeToString</field>
    <field name="args">(Type type)</field>
    <field name="url">classSolid_1_1DeviceInterface.html#a0df89dcf52405b84f103d52c36d755a5</field>
    <field name="keywords">typeToString Solid::DeviceInterface::typeToString Solid::DeviceInterface typeToString Solid::DeviceInterface::typeToString Solid::DeviceInterface typeToString Solid::DeviceInterface::typeToString Solid::DeviceInterface typeToString Solid::DeviceInterface::typeToString Solid::DeviceInterface typeToString Solid::DeviceInterface::typeToString Solid::DeviceInterface typeToString Solid::DeviceInterface::typeToString Solid::DeviceInterface typeToString Solid::DeviceInterface::typeToString Solid::DeviceInterface typeToString Solid::DeviceInterface::typeToString Solid::DeviceInterface typeToString Solid::DeviceInterface::typeToString Solid::DeviceInterface typeToString Solid::DeviceInterface::typeToString Solid::DeviceInterface typeToString Solid::DeviceInterface::typeToString Solid::DeviceInterface typeToString Solid::DeviceInterface::typeToString Solid::DeviceInterface typeToString Solid::DeviceInterface::typeToString Solid::DeviceInterface</field>
    <field name="text">the class name of the device interface type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::DeviceInterface::DeviceInterface</field>
    <field name="args">(DeviceInterfacePrivate &amp;dd, QObject *backendObject)</field>
    <field name="url">classSolid_1_1DeviceInterface.html#abf615a9b2c6eb2988b6e3c055bbcc8e9</field>
    <field name="keywords">DeviceInterface Solid::DeviceInterface::DeviceInterface Solid::DeviceInterface DeviceInterface Solid::DeviceInterface::DeviceInterface Solid::DeviceInterface DeviceInterface Solid::DeviceInterface::DeviceInterface Solid::DeviceInterface DeviceInterface Solid::DeviceInterface::DeviceInterface Solid::DeviceInterface DeviceInterface Solid::DeviceInterface::DeviceInterface Solid::DeviceInterface DeviceInterface Solid::DeviceInterface::DeviceInterface Solid::DeviceInterface DeviceInterface Solid::DeviceInterface::DeviceInterface Solid::DeviceInterface DeviceInterface Solid::DeviceInterface::DeviceInterface Solid::DeviceInterface DeviceInterface Solid::DeviceInterface::DeviceInterface Solid::DeviceInterface DeviceInterface Solid::DeviceInterface::DeviceInterface Solid::DeviceInterface DeviceInterface Solid::DeviceInterface::DeviceInterface Solid::DeviceInterface DeviceInterface Solid::DeviceInterface::DeviceInterface Solid::DeviceInterface DeviceInterface Solid::DeviceInterface::DeviceInterface Solid::DeviceInterface</field>
    <field name="text">Creates a new DeviceInterface object dd the private d member It will take care of deleting it upon destruction backendObject the device interface object provided by the backend</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Block</field>
    <field name="url">classSolid_1_1Block.html</field>
    <field name="keywords">Block</field>
    <field name="text">A block device is an adressable device such as drive or partition It is possible to interact with such a device using a special file in the system</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Block::~Block</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Block.html#a8f4785d965c1c82ca5885f3f5bad9b19</field>
    <field name="keywords">Solid::Block::~Block Solid::Block</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Block::device</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Block.html#a543c2cea3cac1b7d98d10ced2ee688a2</field>
    <field name="keywords">device Solid::Block::device Solid::Block</field>
    <field name="text">the absolute path of the special file to interact with the device</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Block::deviceMajor</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Block.html#ae8142ea433a33a2d09cc2bc87ac699ad</field>
    <field name="keywords">deviceMajor Solid::Block::deviceMajor Solid::Block</field>
    <field name="text">the device major number</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Block::deviceMinor</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Block.html#a365f3afa7060d27384e97694896a8b08</field>
    <field name="keywords">deviceMinor Solid::Block::deviceMinor Solid::Block</field>
    <field name="text">the device minor number</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Block::deviceInterfaceType</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Block.html#aa7f9a5ef1f45f19c10143bd3229683e5</field>
    <field name="keywords">deviceInterfaceType Solid::Block::deviceInterfaceType Solid::Block</field>
    <field name="text">the Block device interface type Solid::Ifaces::Enums::DeviceInterface::Type</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Camera</field>
    <field name="url">classSolid_1_1Camera.html</field>
    <field name="keywords">Camera</field>
    <field name="text">A digital camera is a device used to transform images into data Nowaday most digital cameras are multifunctional and able to take photographs video or sound On the system side they are a particular type of device holding data the access method can be different from the typical storage device hence why it s a separate device interface</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Camera::~Camera</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Camera.html#a5310b5117f9ed7c73b107ab98d9d01a4</field>
    <field name="keywords">Solid::Camera::~Camera Solid::Camera</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Camera::driverHandle</field>
    <field name="args">(const QString &amp;driver) const</field>
    <field name="url">classSolid_1_1Camera.html#a6c2cd264d26ebe614237b9668f316f77</field>
    <field name="keywords">driverHandle Solid::Camera::driverHandle Solid::Camera</field>
    <field name="text">For example for the driver it will return a list of the form vendor_id product_id the driver specific data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Camera::supportedDrivers</field>
    <field name="args">(QString protocol=QString()) const</field>
    <field name="url">classSolid_1_1Camera.html#aa074c69bc7aa02412de68ceec3fc537f</field>
    <field name="keywords">supportedDrivers Solid::Camera::supportedDrivers Solid::Camera</field>
    <field name="text">If protocol is blank returns a list of all drivers supporting the device protocol The protocol to get drivers for a list of installed drivers meeting the criteria</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Camera::supportedProtocols</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Camera.html#a0ce6e977c09dd970419923f19e2fcc28</field>
    <field name="keywords">supportedProtocols Solid::Camera::supportedProtocols Solid::Camera</field>
    <field name="text">This list may be dependent on installed device driver libraries a list of known protocols this device can speak</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Camera::deviceInterfaceType</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Camera.html#a7d5a8bbb73d5f344adcc0b286f8125d5</field>
    <field name="keywords">deviceInterfaceType Solid::Camera::deviceInterfaceType Solid::Camera</field>
    <field name="text">the Camera device interface type Solid::DeviceInterface::Type</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Device</field>
    <field name="url">classSolid_1_1Device.html</field>
    <field name="keywords">Device</field>
    <field name="text">Device stores a reference to device data provided by the backend Device objects are designed to be used by value Copying these objects is quite cheap so using pointers to the me is generally not needed Kevin Ottens</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::Device</field>
    <field name="args">(const QString &amp;udi=QString())</field>
    <field name="url">classSolid_1_1Device.html#aba97769c79708b5b23c60359b0743c2b</field>
    <field name="keywords">Device Solid::Device::Device Solid::Device</field>
    <field name="text">udi the udi of the device to create</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::Device</field>
    <field name="args">(const Device &amp;device)</field>
    <field name="url">classSolid_1_1Device.html#a82575ea01f3be683fd21d625a941cef0</field>
    <field name="keywords">Device Solid::Device::Device Solid::Device</field>
    <field name="text">device the device to copy</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::~Device</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Device.html#a782a03b2b1ad1bc3f25b17ea69ea0a1e</field>
    <field name="keywords">Solid::Device::~Device Solid::Device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::as</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Device.html#aa81649e145f309cb574017f39c477f51</field>
    <field name="keywords">as Solid::Device::as Solid::Device</field>
    <field name="text">a pointer to the device interface if it exists 0 otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::as</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Device.html#a6483179fb70645760031d28d198909f0</field>
    <field name="keywords">as Solid::Device::as Solid::Device</field>
    <field name="text">a pointer to the device interface if it exists 0 otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::asDeviceInterface</field>
    <field name="args">(const DeviceInterface::Type &amp;type)</field>
    <field name="url">classSolid_1_1Device.html#a95c931fd0f2809a770cfa3a5e8061961</field>
    <field name="keywords">asDeviceInterface Solid::Device::asDeviceInterface Solid::Device</field>
    <field name="text">type the device interface type a pointer to the device interface interface if it exists 0 otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::asDeviceInterface</field>
    <field name="args">(const DeviceInterface::Type &amp;type) const</field>
    <field name="url">classSolid_1_1Device.html#ace2d7df826bf73eb620b1033c678fc2e</field>
    <field name="keywords">asDeviceInterface Solid::Device::asDeviceInterface Solid::Device</field>
    <field name="text">type the device interface type a pointer to the device interface interface if it exists 0 otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::description</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Device.html#a071ae8f46627eb30b3c78b2f1f4a5f6e</field>
    <field name="keywords">description Solid::Device::description Solid::Device</field>
    <field name="text">the description 4.4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::emblems</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Device.html#a237456bd26c7c0b19f6881d19fffb792</field>
    <field name="keywords">emblems Solid::Device::emblems Solid::Device</field>
    <field name="text">The naming follows the freedesktop.org specification the emblem names 4.4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::icon</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Device.html#a6525c195cdabf01e19a18701622d1318</field>
    <field name="keywords">icon Solid::Device::icon Solid::Device</field>
    <field name="text">The naming follows the freedesktop.org specification the icon name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::is</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Device.html#add62a98e2dbd895c209c2fd01f332365</field>
    <field name="keywords">is Solid::Device::is Solid::Device</field>
    <field name="text">true if the interface is available false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::isDeviceInterface</field>
    <field name="args">(const DeviceInterface::Type &amp;type) const</field>
    <field name="url">classSolid_1_1Device.html#a8aad00d76d58251b445facc0967d5281</field>
    <field name="keywords">isDeviceInterface Solid::Device::isDeviceInterface Solid::Device</field>
    <field name="text">type the device interface type to query true if the device interface is available false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::isValid</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Device.html#aea96740201bc479f938fc761774bc60a</field>
    <field name="keywords">isValid Solid::Device::isValid Solid::Device</field>
    <field name="text">A device is considered valid if it s available in the system true if this device is available false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::operator=</field>
    <field name="args">(const Device &amp;device)</field>
    <field name="url">classSolid_1_1Device.html#a35cc596f4de03351395cb22b1f06d86d</field>
    <field name="keywords">operator= Solid::Device::operator= Solid::Device</field>
    <field name="text">device the device to assign a reference to the device</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::parent</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Device.html#a925def27ebd1491339f2123842a20a2b</field>
    <field name="keywords">parent Solid::Device::parent Solid::Device</field>
    <field name="text">the device s parent parentUdi()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::parentUdi</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Device.html#a5d0c73b02837f04b61ed938594b36921</field>
    <field name="keywords">parentUdi Solid::Device::parentUdi Solid::Device</field>
    <field name="text">the udi of the device s parent</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::product</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Device.html#aecd2109c660cc012fc47369583bb6e54</field>
    <field name="keywords">product Solid::Device::product Solid::Device</field>
    <field name="text">the product name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::udi</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Device.html#a341db42a3ec1e02148e9dd76281a23ab</field>
    <field name="keywords">udi Solid::Device::udi Solid::Device</field>
    <field name="text">Don t use the UDI for anything except communication with Solid Also don t store UDIs as there s no guarantee that the UDI stays the same when the hardware setup changed The UDI is a unique identifier that is local to the computer in question and for the current boot session The UDIs may change after a reboot Similar hardware in other computers may have different values different hardware could have the same UDI the udi of the device</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::vendor</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Device.html#ac3900500ac15e5df40b7692ede0931a1</field>
    <field name="keywords">vendor Solid::Device::vendor Solid::Device</field>
    <field name="text">the vendor name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::allDevices</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Device.html#a73bdcc239e42a68df922423cbc28897d</field>
    <field name="keywords">allDevices Solid::Device::allDevices Solid::Device</field>
    <field name="text">the list of the devices available</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::listFromQuery</field>
    <field name="args">(const Predicate &amp;predicate, const QString &amp;parentUdi=QString())</field>
    <field name="url">classSolid_1_1Device.html#add8a34e47abc9c79aa77c1bc9f54c562</field>
    <field name="keywords">listFromQuery Solid::Device::listFromQuery Solid::Device</field>
    <field name="text">predicate Predicate that the devices we re searching for must verify parentUdi UDI of the parent of the devices we re searching for or QString() if there s no constraint on the parent the list of devices corresponding to the given constraints Solid::Predicate</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::listFromQuery</field>
    <field name="args">(const QString &amp;predicate, const QString &amp;parentUdi=QString())</field>
    <field name="url">classSolid_1_1Device.html#aba5277f8de300bbd08fa0f0b1b52d6a6</field>
    <field name="keywords">listFromQuery Solid::Device::listFromQuery Solid::Device</field>
    <field name="text">predicate parentUdi the list of devices</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Device::listFromType</field>
    <field name="args">(const DeviceInterface::Type &amp;type, const QString &amp;parentUdi=QString())</field>
    <field name="url">classSolid_1_1Device.html#a04d6081cd0e72aa0f7f6f4ede623cddb</field>
    <field name="keywords">listFromType Solid::Device::listFromType Solid::Device</field>
    <field name="text">type device interface type available on the devices we re looking for or DeviceInterface::Unknown if there s no constraint on the device interfaces parentUdi UDI of the parent of the devices we re searching for or QString() if there s no constraint on the parent the list of devices corresponding to the given constraints Solid::Predicate</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::DeviceInterface</field>
    <field name="url">classSolid_1_1DeviceInterface.html</field>
    <field name="keywords">DeviceInterface</field>
    <field name="text">A device interface describes what a device can do A device generally has a set of device interfaces</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::DeviceNotifier</field>
    <field name="url">classSolid_1_1DeviceNotifier.html</field>
    <field name="keywords">DeviceNotifier</field>
    <field name="text">It s the unique entry point for hardware discovery Applications should use it to find devices or to be notified about hardware changes Note that it s implemented as a singleton and encapsulates the backend logic Kevin Ottens</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::DeviceNotifier::deviceAdded</field>
    <field name="args">(const QString &amp;udi)</field>
    <field name="url">classSolid_1_1DeviceNotifier.html#a6eb8e3736acd84a1a46cb43b0eaba5d6</field>
    <field name="keywords">deviceAdded Solid::DeviceNotifier::deviceAdded Solid::DeviceNotifier</field>
    <field name="text">udi the new device UDI</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::DeviceNotifier::deviceRemoved</field>
    <field name="args">(const QString &amp;udi)</field>
    <field name="url">classSolid_1_1DeviceNotifier.html#a2c3241940003980f6695879f833c5905</field>
    <field name="keywords">deviceRemoved Solid::DeviceNotifier::deviceRemoved Solid::DeviceNotifier</field>
    <field name="text">udi the old device UDI</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Devices</field>
    <field name="url">classSolid_1_1Devices.html</field>
    <field name="keywords">Devices</field>
    <field name="text">It behaves similarly to Solid::DeviceNotifier but adds some convenience methods which allow it to watch only the devices matching a specified query formatted for Solid::Predicate It is intended to be used from QML like this Solid.Devices id allDevices Solid.Devices id networkShares query Solid.Devices id mice query Text text allDevices.count Text text networkShares.device networkShares.devices 0 url</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Devices::countChanged</field>
    <field name="args">(int count) const</field>
    <field name="url">classSolid_1_1Devices.html#a49316c868361d66b6a299684f108e308</field>
    <field name="keywords">countChanged Solid::Devices::countChanged Solid::Devices</field>
    <field name="text">count new device count</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Devices::deviceAdded</field>
    <field name="args">(const QString &amp;udi) const</field>
    <field name="url">classSolid_1_1Devices.html#a76a34a0462b5e806be999b8650828d29</field>
    <field name="keywords">deviceAdded Solid::Devices::deviceAdded Solid::Devices</field>
    <field name="text">udi UDI of the new device</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Devices::deviceRemoved</field>
    <field name="args">(const QString &amp;udi) const</field>
    <field name="url">classSolid_1_1Devices.html#aa98a0f745433c9ebdb4af93f7f22629d</field>
    <field name="keywords">deviceRemoved Solid::Devices::deviceRemoved Solid::Devices</field>
    <field name="text">udi UDI of the device</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Devices::devicesChanged</field>
    <field name="args">(const QStringList &amp;devices) const</field>
    <field name="url">classSolid_1_1Devices.html#a9700c0889d484258187d0d65a4a839a7</field>
    <field name="keywords">devicesChanged Solid::Devices::devicesChanged Solid::Devices</field>
    <field name="text">devices list of UDIs</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Devices::emptyChanged</field>
    <field name="args">(bool empty) const</field>
    <field name="url">classSolid_1_1Devices.html#a46057634207b0dd53f3904d3db2763d0</field>
    <field name="keywords">emptyChanged Solid::Devices::emptyChanged Solid::Devices</field>
    <field name="text">empty is the device list empty</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Devices::queryChanged</field>
    <field name="args">(const QString &amp;query) const</field>
    <field name="url">classSolid_1_1Devices.html#af32de68fa0787808a272e3577e05ff8e</field>
    <field name="keywords">queryChanged Solid::Devices::queryChanged Solid::Devices</field>
    <field name="text">query new query</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">Solid::Devices::device</field>
    <field name="args">(const QString &amp;udi, const QString &amp;type)</field>
    <field name="url">classSolid_1_1Devices.html#ac5025a4c85eb3ccf2d3e60c1c46b531f</field>
    <field name="keywords">device Solid::Devices::device Solid::Devices</field>
    <field name="text">udi udi of the desired device type how to interpret the device Solid::Device::asDeviceInterface</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Devices::count</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Devices.html#aac701a0b60e2fc07e52d873a70b8d7bf</field>
    <field name="keywords">count Solid::Devices::count Solid::Devices</field>
    <field name="text">device count</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Devices::devices</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Devices.html#a6ed5509ba2c0e1f207191add888d6961</field>
    <field name="keywords">devices Solid::Devices::devices Solid::Devices</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Devices::isEmpty</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Devices.html#a4e4f89e16ccbeb050f06ac413e2377b3</field>
    <field name="keywords">isEmpty Solid::Devices::isEmpty Solid::Devices</field>
    <field name="text">true if there are no matching devices</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Devices::query</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Devices.html#ad64bcb2d2d9b5ca57fcc094232e78769</field>
    <field name="keywords">query Solid::Devices::query Solid::Devices</field>
    <field name="text">It needs to be formatted for Solid::Predicate Solid::Predicate</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Devices::setQuery</field>
    <field name="args">(const QString &amp;query)</field>
    <field name="url">classSolid_1_1Devices.html#ae598bd6ffca39ae9c850bb10e732b890</field>
    <field name="keywords">setQuery Solid::Devices::setQuery Solid::Devices</field>
    <field name="text">query new query</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::GenericInterface</field>
    <field name="url">classSolid_1_1GenericInterface.html</field>
    <field name="keywords">GenericInterface</field>
    <field name="text">It exposes a set of properties and is organized as a key/value set Warning Using this class could expose some backend specific details and lead to non portable code Use it at your own risk or during transitional phases when the provided device interfaces don t provide the necessary methods</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Solid::GenericInterface::PropertyChange</field>
    <field name="url">classSolid_1_1GenericInterface.html#ae132db41bc661dfff3455f9e800bbc54</field>
    <field name="keywords">PropertyChange Solid::GenericInterface::PropertyChange Solid::GenericInterface</field>
    <field name="text">PropertyModified A property value has changed in the device PropertyAdded A new property has been added to the device PropertyRemoved A property has been removed from the device</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::GenericInterface::conditionRaised</field>
    <field name="args">(const QString &amp;condition, const QString &amp;reason)</field>
    <field name="url">classSolid_1_1GenericInterface.html#a13151c07c61b8339309c0e1bffc98414</field>
    <field name="keywords">conditionRaised Solid::GenericInterface::conditionRaised Solid::GenericInterface</field>
    <field name="text">For example when a button is pressed condition the condition name reason a message explaining why the condition has been raised</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::GenericInterface::propertyChanged</field>
    <field name="args">(const QMap&lt; QString, int &gt; &amp;changes)</field>
    <field name="url">classSolid_1_1GenericInterface.html#ad8276ad16ed7a378dd9c799fd4dbd518</field>
    <field name="keywords">propertyChanged Solid::GenericInterface::propertyChanged Solid::GenericInterface</field>
    <field name="text">changes the map describing the property changes that occurred in the device keys are property name and values describe the kind of change done on the device property added/removed/modified it s one of the type Solid::Device::PropertyChange</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::GenericInterface::~GenericInterface</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1GenericInterface.html#ac9de633a2e343dfed4fec718f3c9e769</field>
    <field name="keywords">Solid::GenericInterface::~GenericInterface Solid::GenericInterface</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::GenericInterface::allProperties</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1GenericInterface.html#ad4f5caa99d1239d03b9a67da973f9f66</field>
    <field name="keywords">allProperties Solid::GenericInterface::allProperties Solid::GenericInterface</field>
    <field name="text">Warning Using this method could expose some backend specific details and lead to non portable code Use it at your own risk or during transitional phases when the provided device interfaces don t provide the necessary methods all the properties of the device</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::GenericInterface::property</field>
    <field name="args">(const QString &amp;key) const</field>
    <field name="url">classSolid_1_1GenericInterface.html#a821399a07434edfed0fa1c59872adf46</field>
    <field name="keywords">property Solid::GenericInterface::property Solid::GenericInterface</field>
    <field name="text">Warning Using this method could expose some backend specific details and lead to non portable code Use it at your own risk or during transitional phases when the provided device interfaces don t provide the necessary methods key the property key the actual value of the property or QVariant() if the property is unknown</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::GenericInterface::propertyExists</field>
    <field name="args">(const QString &amp;key) const</field>
    <field name="url">classSolid_1_1GenericInterface.html#a8ed48a4d7de4daf011a93ab1a3499420</field>
    <field name="keywords">propertyExists Solid::GenericInterface::propertyExists Solid::GenericInterface</field>
    <field name="text">Warning Using this method could expose some backend specific details and lead to non portable code Use it at your own risk or during transitional phases when the provided device interfaces don t provide the necessary methods key the property key true if the property is available in the device false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::GenericInterface::deviceInterfaceType</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1GenericInterface.html#a4dde0eabea50febaafcf043b63267337</field>
    <field name="keywords">deviceInterfaceType Solid::GenericInterface::deviceInterfaceType Solid::GenericInterface</field>
    <field name="text">the Processor device interface type Solid::Ifaces::Enums::DeviceInterface::Type</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Inhibition</field>
    <field name="url">classSolid_1_1Inhibition.html</field>
    <field name="keywords">Inhibition</field>
    <field name="text">This object is returned by Power::InhibitionJob::inhibition and it holds a reference to the inhibition that has been performed When this object is deleted the inhibition will be released</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">Solid::Inhibition::start</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Inhibition.html#aa261594d32df50b6f2ade9f0e1d3a679</field>
    <field name="keywords">start Solid::Inhibition::start Solid::Inhibition</field>
    <field name="text">In case state() is Stopped it will resume the inhibition This happens asynchronously so connect to stateChanged() signal to know when start() has changed the state</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">Solid::Inhibition::stop</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Inhibition.html#a848ba540e4aaf6b0fb43b32fda3791f2</field>
    <field name="keywords">stop Solid::Inhibition::stop Solid::Inhibition</field>
    <field name="text">In case the state() is Started it will stop the inhibition This happens asynchronously so connect to stateChanged() signal to know when stop() has changed the state</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Inhibition::Inhibition</field>
    <field name="args">(AbstractInhibition *backend, QObject *parent=0)</field>
    <field name="url">classSolid_1_1Inhibition.html#a212d6ca45c0ebcd5abc5b43f904c7a42</field>
    <field name="keywords">Inhibition Solid::Inhibition::Inhibition Solid::Inhibition</field>
    <field name="text">AbstractInhibition is not part of Solid public API so this constructor is meant to be used only by backends</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Inhibition::state</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Inhibition.html#a90728e4c8d5dd0a23ffeda292e87b7c0</field>
    <field name="keywords">state Solid::Inhibition::state Solid::Inhibition</field>
    <field name="text">The initial value is Started since that is how InhibitionJob will return it The state can be modified by calling stop() and start() Also stateChanged() signal is available</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Job</field>
    <field name="url">classSolid_1_1Job.html</field>
    <field name="keywords">Job</field>
    <field name="text">There are two ways of using this class one is via exec() which will block the thread until a result is fetched the other is via connecting to the signal result() Please think twice before using exec() it should be used only in either unittest or cli apps Job and its subclasses are meant to be used in a fire-and-forget way Jobs will delete themselves when they finish using deleteLater() Even given their asynchronous nature Jobs are still executed in the main thread so any blocking code executed in it will block the app calling it</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Solid::Job::Error</field>
    <field name="url">classSolid_1_1Job.html#a8ce86f86a6fe0b359f423d8e365e2232</field>
    <field name="keywords">Error Solid::Job::Error Solid::Job Error Solid::Job::Error Solid::Job Error Solid::Job::Error Solid::Job</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">Solid::Job::NoError</field>
    <field name="url">classSolid_1_1Job.html#a8ce86f86a6fe0b359f423d8e365e2232a443445fc1bedb6e986734e8eff16b816</field>
    <field name="keywords">NoError Solid::Job::NoError Solid::Job NoError Solid::Job::NoError Solid::Job NoError Solid::Job::NoError Solid::Job</field>
    <field name="text">Indicates there is no error</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">Solid::Job::UserDefinedError</field>
    <field name="url">classSolid_1_1Job.html#a8ce86f86a6fe0b359f423d8e365e2232a38fe1f2bb514ebbbef4ba7c8dc3721f6</field>
    <field name="keywords">UserDefinedError Solid::Job::UserDefinedError Solid::Job UserDefinedError Solid::Job::UserDefinedError Solid::Job UserDefinedError Solid::Job::UserDefinedError Solid::Job</field>
    <field name="text">Subclasses should define error codes starting at this value</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">Solid::Job::start</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Job.html#a1e1752f8e61d0c6ae3eb2ee82f58a3d9</field>
    <field name="keywords">start Solid::Job::start Solid::Job start Solid::Job::start Solid::Job start Solid::Job::start Solid::Job</field>
    <field name="text">This method will schedule doStart() to be executed in the next loop This is done so this method returns as soon as possible When the job is finished result() is emitted</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Job::error</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Job.html#a1d1c8f4eb319420ed24c499bbecbc67b</field>
    <field name="keywords">error Solid::Job::error Solid::Job error Solid::Job::error Solid::Job error Solid::Job::error Solid::Job</field>
    <field name="text">Make sure to call this once result() has been emitted the error code for this job 0 if no error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Job::errorText</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Job.html#ace05fb8efb4946520499b0de4008c857</field>
    <field name="keywords">errorText Solid::Job::errorText Solid::Job errorText Solid::Job::errorText Solid::Job errorText Solid::Job::errorText Solid::Job</field>
    <field name="text">Only call if error is not 0 This is usually some extra data associated with the error such as a URL Use errorString() to get a human-readable translated message a string to help understand the error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Job::exec</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Job.html#ac28348897ed4f4ece3d2fd60ac620f26</field>
    <field name="keywords">exec Solid::Job::exec Solid::Job exec Solid::Job::exec Solid::Job exec Solid::Job::exec Solid::Job</field>
    <field name="text">This will start a nested QEventLoop internally Nested event loop can be dangerous and can have unintended side effects you should avoid calling exec() whenever you can and use the asynchronous interface of SolidJob instead Should you indeed call this method you need to make sure that all callers are reentrant so that events delivered by the inner event loop don t cause non-reentrant functions to be called which usually wreaks havoc Note that the event loop started by this method does not process user input events which means your user interface will effectively be blocked Other events like paint or network events are still being processed The advantage of not processing user input events is that the chance of accidental reentrancy is greatly reduced Still you should avoid calling this function true if the job has been executed without error false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Job::emitResult</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Job.html#a2e0d3c5a52308ac85d197194b0c901b6</field>
    <field name="keywords">emitResult Solid::Job::emitResult Solid::Job emitResult Solid::Job::emitResult Solid::Job emitResult Solid::Job::emitResult Solid::Job</field>
    <field name="text">Deletes this job using deleteLater() result()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Job::setError</field>
    <field name="args">(int errorCode)</field>
    <field name="url">classSolid_1_1Job.html#ab726717935e9e09c36142f083e6140f7</field>
    <field name="keywords">setError Solid::Job::setError Solid::Job setError Solid::Job::setError Solid::Job setError Solid::Job::setError Solid::Job</field>
    <field name="text">It should be called when an error is encountered in the job just before calling emitResult() You should define an enum of error codes with values starting at KJob::UserDefinedError and use those For example errorCode the error code emitResult()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Job::setErrorText</field>
    <field name="args">(const QString &amp;errorText)</field>
    <field name="url">classSolid_1_1Job.html#aa2fbdf7aaaac34d40100b5b10fdb49fd</field>
    <field name="keywords">setErrorText Solid::Job::setErrorText Solid::Job setErrorText Solid::Job::setErrorText Solid::Job setErrorText Solid::Job::setErrorText Solid::Job</field>
    <field name="text">It should be called when an error is encountered in the job just before calling emitResult() Provides extra information about the error that cannot be determined directly from the error code For example a URL or filename This string is not normally translatable errorText the error text emitResult() setError()</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::NetworkShare</field>
    <field name="url">classSolid_1_1NetworkShare.html</field>
    <field name="keywords">NetworkShare</field>
    <field name="text">a NetworkShare interface is used to determine the type of network access 4.7</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Solid::NetworkShare::ShareType</field>
    <field name="url">classSolid_1_1NetworkShare.html#a664e0ec3c787be3ea6760c187d2ed65a</field>
    <field name="keywords">ShareType Solid::NetworkShare::ShareType Solid::NetworkShare</field>
    <field name="text">Unknown a unsupported network protocol Nfs nfs protocol Cifs samba protocol</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::NetworkShare::~NetworkShare</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1NetworkShare.html#a8bc8da88ac5a260d5950c2dd3afb627c</field>
    <field name="keywords">Solid::NetworkShare::~NetworkShare Solid::NetworkShare</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::NetworkShare::type</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1NetworkShare.html#a6f0faf1b3097f8df96b569bfa8c5ad79</field>
    <field name="keywords">type Solid::NetworkShare::type Solid::NetworkShare</field>
    <field name="text">the type of network share</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::NetworkShare::url</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1NetworkShare.html#a23cb48bb04cad0e7fd2d9e8d371e9b77</field>
    <field name="keywords">url Solid::NetworkShare::url Solid::NetworkShare</field>
    <field name="text">the url of network share</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::NetworkShare::deviceInterfaceType</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1NetworkShare.html#a5dfec660d98f86aabeea2347345221aa</field>
    <field name="keywords">deviceInterfaceType Solid::NetworkShare::deviceInterfaceType Solid::NetworkShare</field>
    <field name="text">the NetworkShare device interface type Solid::DeviceInterface::Type</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::OpticalDisc</field>
    <field name="url">classSolid_1_1OpticalDisc.html</field>
    <field name="keywords">OpticalDisc</field>
    <field name="text">An optical disc is a volume that can be inserted in CD-R* DVD* Blu-Ray HD-DVD drives</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Solid::OpticalDisc::ContentType</field>
    <field name="url">classSolid_1_1OpticalDisc.html#ae00eadba9efec8b80b6ed11d4a2da0ab</field>
    <field name="keywords">ContentType Solid::OpticalDisc::ContentType Solid::OpticalDisc</field>
    <field name="text">Audio A disc containing audio Data A disc containing data VideoCd A Video Compact Disc VCD SuperVideoCd A Super Video Compact Disc SVCD VideoDvd A Video Digital Versatile Disc DVD-Video</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Solid::OpticalDisc::DiscType</field>
    <field name="url">classSolid_1_1OpticalDisc.html#a2801fe1a2fa7c99a02f49240bc8d5bac</field>
    <field name="keywords">DiscType Solid::OpticalDisc::DiscType Solid::OpticalDisc</field>
    <field name="text">This enum type defines the type of optical disc it can be UnknownDiscType An undetermined disc type CdRom A Compact Disc Read-Only Memory CD-ROM CdRecordable A Compact Disc Recordable CD-R CdRewritable A Compact Disc ReWritable CD-RW DvdRom A Digital Versatile Disc Read-Only Memory DVD-ROM DvdRam A Digital Versatile Disc Random Access Memory DVD-RAM DvdRecordable A Digital Versatile Disc Recordable DVD-R DvdRewritable A Digital Versatile Disc ReWritable DVD-RW DvdPlusRecordable A Digital Versatile Disc Recordable DVD+R DvdPlusRewritable A Digital Versatile Disc ReWritable DVD+RW DvdPlusRecordableDuallayer A Digital Versatile Disc Recordable Dual-Layer DVD+R DL DvdPlusRewritableDuallayer A Digital Versatile Disc ReWritable Dual-Layer DVD+RW DL BluRayRom A Blu-ray Disc BD BluRayRecordable A Blu-ray Disc Recordable BD-R BluRayRewritable A Blu-ray Disc BD-RE HdDvdRom A High Density Digital Versatile Disc HD DVD HdDvdRecordable A High Density Digital Versatile Disc Recordable HD DVD-R HdDvdRewritable A High Density Digital Versatile Disc ReWritable HD DVD-RW</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Solid::StorageVolume::UsageType</field>
    <field name="url">classSolid_1_1StorageVolume.html#aeed11994e9e3b81a3e60261364deeeb6</field>
    <field name="keywords">UsageType Solid::StorageVolume::UsageType Solid::StorageVolume UsageType Solid::StorageVolume::UsageType Solid::StorageVolume</field>
    <field name="text">FileSystem A mountable filesystem volume PartitionTable A volume containing a partition table Raid A volume member of a raid set not mountable Other A not mountable volume like a swap partition Unused An unused or free volume</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::OpticalDisc::~OpticalDisc</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1OpticalDisc.html#a3c78d36fbf0146522eabb8075ec9a585</field>
    <field name="keywords">Solid::OpticalDisc::~OpticalDisc Solid::OpticalDisc</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::OpticalDisc::availableContent</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1OpticalDisc.html#a27cbe93b1b924187925727d458b16c96</field>
    <field name="keywords">availableContent Solid::OpticalDisc::availableContent Solid::OpticalDisc</field>
    <field name="text">the flag set indicating the available contents Solid::OpticalDisc::ContentType</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::OpticalDisc::capacity</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1OpticalDisc.html#a4035f8c6245dd587afa0343c43223afd</field>
    <field name="keywords">capacity Solid::OpticalDisc::capacity Solid::OpticalDisc</field>
    <field name="text">the capacity of the disc in bytes</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::OpticalDisc::discType</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1OpticalDisc.html#aa2a9e18080f5d4c86efaf7c00e31c6dc</field>
    <field name="keywords">discType Solid::OpticalDisc::discType Solid::OpticalDisc</field>
    <field name="text">the disc type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::OpticalDisc::isAppendable</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1OpticalDisc.html#a0d040d9b677363dd2237a4c00dd1726e</field>
    <field name="keywords">isAppendable Solid::OpticalDisc::isAppendable Solid::OpticalDisc</field>
    <field name="text">true if the disc is appendable false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::OpticalDisc::isBlank</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1OpticalDisc.html#a7da2a601c43ca98ee9bf4d41634f1bbc</field>
    <field name="keywords">isBlank Solid::OpticalDisc::isBlank Solid::OpticalDisc</field>
    <field name="text">true if the disc is blank false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::OpticalDisc::isRewritable</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1OpticalDisc.html#a7ec7faac1769373737517bcc2623e0d9</field>
    <field name="keywords">isRewritable Solid::OpticalDisc::isRewritable Solid::OpticalDisc</field>
    <field name="text">A disc is rewritable if you can write on it several times true if the disc is rewritable false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageVolume::~StorageVolume</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1StorageVolume.html#aabdc52692c58780548ab17ba662818d7</field>
    <field name="keywords">Solid::StorageVolume::~StorageVolume Solid::StorageVolume Solid::StorageVolume::~StorageVolume Solid::StorageVolume</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageVolume::encryptedContainer</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1StorageVolume.html#aa8d2f8b16859bf2c59aa20d1c10ecc7e</field>
    <field name="keywords">encryptedContainer Solid::StorageVolume::encryptedContainer Solid::StorageVolume encryptedContainer Solid::StorageVolume::encryptedContainer Solid::StorageVolume</field>
    <field name="text">the encrypted volume containing the current volume if appliable an invalid device otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageVolume::fsType</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1StorageVolume.html#aa76c394f3640b9a4bfd50fefa5a51ddf</field>
    <field name="keywords">fsType Solid::StorageVolume::fsType Solid::StorageVolume fsType Solid::StorageVolume::fsType Solid::StorageVolume</field>
    <field name="text">FIXME It s a platform dependent string maybe we should switch to an enum the filesystem type if applicable QString() otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageVolume::isIgnored</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1StorageVolume.html#ad78770b2369ac1cb0fb2a1826d041572</field>
    <field name="keywords">isIgnored Solid::StorageVolume::isIgnored Solid::StorageVolume isIgnored Solid::StorageVolume::isIgnored Solid::StorageVolume</field>
    <field name="text">If it should be ignored it generally means that it should be invisible to the user It s useful for firmware partitions or OS reinstall partitions on some systems true if the volume should be ignored</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageVolume::label</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1StorageVolume.html#a094a95d69bbc85972e60f7fabd7251db</field>
    <field name="keywords">label Solid::StorageVolume::label Solid::StorageVolume label Solid::StorageVolume::label Solid::StorageVolume</field>
    <field name="text">the volume label if available QString() otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageVolume::size</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1StorageVolume.html#a3dbc5da5e727269b99f86851473c9ff3</field>
    <field name="keywords">size Solid::StorageVolume::size Solid::StorageVolume size Solid::StorageVolume::size Solid::StorageVolume</field>
    <field name="text">the size of this volume</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageVolume::usage</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1StorageVolume.html#a9765a23187209d0bfaec62314cfcdfa0</field>
    <field name="keywords">usage Solid::StorageVolume::usage Solid::StorageVolume usage Solid::StorageVolume::usage Solid::StorageVolume</field>
    <field name="text">the usage type Solid::StorageVolume::UsageType</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageVolume::uuid</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1StorageVolume.html#ab4499608d8f3bcfeb178b0d2affd1b16</field>
    <field name="keywords">uuid Solid::StorageVolume::uuid Solid::StorageVolume uuid Solid::StorageVolume::uuid Solid::StorageVolume</field>
    <field name="text">You can generally assume that this identifier is unique with reasonable confidence Except if the volume UUID has been forged to intentionally provoke a collision the probability to have two volumes having the same UUID is low the Universal Unique IDentifier if available QString() otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::OpticalDisc::deviceInterfaceType</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1OpticalDisc.html#a94119ccc302c04e2a098ee6b38bf9a51</field>
    <field name="keywords">deviceInterfaceType Solid::OpticalDisc::deviceInterfaceType Solid::OpticalDisc</field>
    <field name="text">the OpticalDisc device interface type Solid::Ifaces::Enums::DeviceInterface::Type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageVolume::deviceInterfaceType</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1StorageVolume.html#ac253c4758e0fe55dbc9d6cb713c6c928</field>
    <field name="keywords">deviceInterfaceType Solid::StorageVolume::deviceInterfaceType Solid::StorageVolume deviceInterfaceType Solid::StorageVolume::deviceInterfaceType Solid::StorageVolume</field>
    <field name="text">the StorageVolume device interface type Solid::DeviceInterface::Type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageVolume::StorageVolume</field>
    <field name="args">(StorageVolumePrivate &amp;dd, QObject *backendObject)</field>
    <field name="url">classSolid_1_1StorageVolume.html#acb79d1eb335563084caf54e713c2b76f</field>
    <field name="keywords">StorageVolume Solid::StorageVolume::StorageVolume Solid::StorageVolume StorageVolume Solid::StorageVolume::StorageVolume Solid::StorageVolume</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::OpticalDrive</field>
    <field name="url">classSolid_1_1OpticalDrive.html</field>
    <field name="keywords">OpticalDrive</field>
    <field name="text">An OpticalDrive is a storage that can handle optical discs</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Solid::OpticalDrive::MediumType</field>
    <field name="url">classSolid_1_1OpticalDrive.html#a7ea3e1c2ad7c0ca44ed36208c742defa</field>
    <field name="keywords">MediumType Solid::OpticalDrive::MediumType Solid::OpticalDrive</field>
    <field name="text">Cdr A Recordable Compact Disc CD-R Cdrw A ReWritable Compact Disc CD-RW Dvd A Digital Versatile Disc DVD Dvdr A Recordable Digital Versatile Disc DVD-R Dvdrw A ReWritable Digital Versatile Disc DVD-RW Dvdram A Random Access Memory Digital Versatile Disc DVD-RAM Dvdplusr A Recordable Digital Versatile Disc DVD+R Dvdplusrw A ReWritable Digital Versatile Disc DVD+RW Dvdplusdl A Dual Layer Digital Versatile Disc DVD+R DL Dvdplusdlrw A Dual Layer Digital Versatile Disc DVD+RW DL Bd A Blu-ray Disc BD Bdr A Blu-ray Disc Recordable BD-R Bdre A Blu-ray Disc Recordable and Eraseable BD-RE HdDvd A High Density Digital Versatile Disc HD DVD HdDvdr A High Density Digital Versatile Disc Recordable HD DVD-R HdDvdrw A High Density Digital Versatile Disc ReWritable HD DVD-RW</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Solid::StorageDrive::Bus</field>
    <field name="url">classSolid_1_1StorageDrive.html#acc84968d1114d892ba86de0348ca5a43</field>
    <field name="keywords">Bus Solid::StorageDrive::Bus Solid::StorageDrive Bus Solid::StorageDrive::Bus Solid::StorageDrive</field>
    <field name="text">Ide An Integrated Drive Electronics IDE bus also known as ATA Usb An Universal Serial Bus USB Ieee1394 An Ieee1394 bus also known as Firewire Scsi A Small Computer System Interface bus Sata A Serial Advanced Technology Attachment SATA bus Platform A legacy bus that is part of the underlying platform</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Solid::StorageDrive::DriveType</field>
    <field name="url">classSolid_1_1StorageDrive.html#a58e59752bb61b9214e72f1de8a685920</field>
    <field name="keywords">DriveType Solid::StorageDrive::DriveType Solid::StorageDrive DriveType Solid::StorageDrive::DriveType Solid::StorageDrive</field>
    <field name="text">HardDisk A hard disk CdromDrive An optical drive Floppy A floppy disk drive Tape A tape drive CompactFlash A Compact Flash card reader MemoryStick A Memory Stick card reader SmartMedia A Smart Media card reader SdMmc A SecureDigital/MultiMediaCard card reader Xd A xD card reader</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::OpticalDrive::ejectDone</field>
    <field name="args">(Solid::ErrorType error, QVariant errorData, const QString &amp;udi)</field>
    <field name="url">classSolid_1_1OpticalDrive.html#a70e4412161cab5570234e3b7af6b2e1a</field>
    <field name="keywords">ejectDone Solid::OpticalDrive::ejectDone Solid::OpticalDrive</field>
    <field name="text">The signal might be spontaneous i.e it can be triggered by another process error type of error that occurred if any errorData more information about the error if any udi the UDI of the volume</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::OpticalDrive::ejectPressed</field>
    <field name="args">(const QString &amp;udi)</field>
    <field name="url">classSolid_1_1OpticalDrive.html#ad976b76f19fe3dd86c7903beb899bce8</field>
    <field name="keywords">ejectPressed Solid::OpticalDrive::ejectPressed Solid::OpticalDrive</field>
    <field name="text">Please note that some broken drives doesn t report this event udi the UDI of the drive</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::OpticalDrive::ejectRequested</field>
    <field name="args">(const QString &amp;udi)</field>
    <field name="url">classSolid_1_1OpticalDrive.html#ab27c1d24c85b3a226742640227ce8fab</field>
    <field name="keywords">ejectRequested Solid::OpticalDrive::ejectRequested Solid::OpticalDrive</field>
    <field name="text">The signal might be spontaneous i.e it can be triggered by another process udi the UDI of the volume</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::OpticalDrive::~OpticalDrive</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1OpticalDrive.html#a263915c60efc92ebe8a46a9fc8c0e2b9</field>
    <field name="keywords">Solid::OpticalDrive::~OpticalDrive Solid::OpticalDrive</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::OpticalDrive::eject</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1OpticalDrive.html#a3309563f914c143754f048323b425c29</field>
    <field name="keywords">eject Solid::OpticalDrive::eject Solid::OpticalDrive</field>
    <field name="text">If this drive is empty but has a tray it ll be opened the status of the eject operation</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::OpticalDrive::readSpeed</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1OpticalDrive.html#a79fc72bffe11399db6492015c7dda74b</field>
    <field name="keywords">readSpeed Solid::OpticalDrive::readSpeed Solid::OpticalDrive</field>
    <field name="text">the maximum read speed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::OpticalDrive::supportedMedia</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1OpticalDrive.html#aef3cc855397fe61905695afcdc5a374f</field>
    <field name="keywords">supportedMedia Solid::OpticalDrive::supportedMedia Solid::OpticalDrive</field>
    <field name="text">the flag set indicating the supported medium types</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::OpticalDrive::writeSpeed</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1OpticalDrive.html#aa4d1ed7c3428658b68799023839463ad</field>
    <field name="keywords">writeSpeed Solid::OpticalDrive::writeSpeed Solid::OpticalDrive</field>
    <field name="text">the maximum write speed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::OpticalDrive::writeSpeeds</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1OpticalDrive.html#a3175ce5f31c053da69ddc4ae14fbdeb4</field>
    <field name="keywords">writeSpeeds Solid::OpticalDrive::writeSpeeds Solid::OpticalDrive</field>
    <field name="text">the list of supported write speeds</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageDrive::~StorageDrive</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1StorageDrive.html#ae935fb2f1b3d98e6a085c1325a3e5cce</field>
    <field name="keywords">Solid::StorageDrive::~StorageDrive Solid::StorageDrive Solid::StorageDrive::~StorageDrive Solid::StorageDrive</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageDrive::bus</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1StorageDrive.html#a0a454a55fa86214d050279e8aa5273fe</field>
    <field name="keywords">bus Solid::StorageDrive::bus Solid::StorageDrive bus Solid::StorageDrive::bus Solid::StorageDrive</field>
    <field name="text">the bus type Solid::StorageDrive::Bus</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageDrive::driveType</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1StorageDrive.html#ac1531d5911d5461ee5f2cfa8fb9b8149</field>
    <field name="keywords">driveType Solid::StorageDrive::driveType Solid::StorageDrive driveType Solid::StorageDrive::driveType Solid::StorageDrive</field>
    <field name="text">the drive type Solid::StorageDrive::DriveType</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageDrive::isHotpluggable</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1StorageDrive.html#a4d255807ca7fda2a1e6e9446940a15f3</field>
    <field name="keywords">isHotpluggable Solid::StorageDrive::isHotpluggable Solid::StorageDrive isHotpluggable Solid::StorageDrive::isHotpluggable Solid::StorageDrive</field>
    <field name="text">true if this storage supports hotplug false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageDrive::isInUse</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1StorageDrive.html#a05dc0b480f662833f2cf7d565701f816</field>
    <field name="keywords">isInUse Solid::StorageDrive::isInUse Solid::StorageDrive isInUse Solid::StorageDrive::isInUse Solid::StorageDrive</field>
    <field name="text">if at least one child storage access is mounted true if at least one child storage access is mounted</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageDrive::isRemovable</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1StorageDrive.html#a9dd9973747645d3fdb6973a03e7c1e6f</field>
    <field name="keywords">isRemovable Solid::StorageDrive::isRemovable Solid::StorageDrive isRemovable Solid::StorageDrive::isRemovable Solid::StorageDrive</field>
    <field name="text">For example memory card can be removed from the drive by the user while partitions can t be removed from hard disks true if media can be removed false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageDrive::size</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1StorageDrive.html#a99cdfb70049655b5f84b11e90f419aff</field>
    <field name="keywords">size Solid::StorageDrive::size Solid::StorageDrive size Solid::StorageDrive::size Solid::StorageDrive</field>
    <field name="text">the size of this drive</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::OpticalDrive::deviceInterfaceType</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1OpticalDrive.html#a5c3c973adff1f69b373e6cf44b3ad863</field>
    <field name="keywords">deviceInterfaceType Solid::OpticalDrive::deviceInterfaceType Solid::OpticalDrive</field>
    <field name="text">the OpticalDrive device interface type Solid::Ifaces::Enums::DeviceInterface::Type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageDrive::deviceInterfaceType</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1StorageDrive.html#aa9c98474a098e91ed7aba680384c2c33</field>
    <field name="keywords">deviceInterfaceType Solid::StorageDrive::deviceInterfaceType Solid::StorageDrive deviceInterfaceType Solid::StorageDrive::deviceInterfaceType Solid::StorageDrive</field>
    <field name="text">the StorageDrive device interface type Solid::DeviceInterface::Type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageDrive::StorageDrive</field>
    <field name="args">(StorageDrivePrivate &amp;dd, QObject *backendObject)</field>
    <field name="url">classSolid_1_1StorageDrive.html#ac83745edf39337b6a1729ba547acbd74</field>
    <field name="keywords">StorageDrive Solid::StorageDrive::StorageDrive Solid::StorageDrive StorageDrive Solid::StorageDrive::StorageDrive Solid::StorageDrive</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::PortableMediaPlayer</field>
    <field name="url">classSolid_1_1PortableMediaPlayer.html</field>
    <field name="keywords">PortableMediaPlayer</field>
    <field name="text">A portable media player is a portable device able to play multimedia files Some of them have even recording capabilities Davide Bettio</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::PortableMediaPlayer::~PortableMediaPlayer</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1PortableMediaPlayer.html#a501f702d7c3a29f3bafb563f3c4e3508</field>
    <field name="keywords">Solid::PortableMediaPlayer::~PortableMediaPlayer Solid::PortableMediaPlayer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::PortableMediaPlayer::driverHandle</field>
    <field name="args">(const QString &amp;driver) const</field>
    <field name="url">classSolid_1_1PortableMediaPlayer.html#a6e9bd1d4d0409c1279b6562cf79c5977</field>
    <field name="keywords">driverHandle Solid::PortableMediaPlayer::driverHandle Solid::PortableMediaPlayer</field>
    <field name="text">For example for the driver it will return the serial number of the device the driver specific data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::PortableMediaPlayer::supportedDrivers</field>
    <field name="args">(QString protocol=QString()) const</field>
    <field name="url">classSolid_1_1PortableMediaPlayer.html#a52699919a3202edc37dad9c3ae02165b</field>
    <field name="keywords">supportedDrivers Solid::PortableMediaPlayer::supportedDrivers Solid::PortableMediaPlayer</field>
    <field name="text">If protocol is blank returns a list of all drivers supporting the device protocol The protocol to get drivers for a list of installed drivers meeting the criteria</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::PortableMediaPlayer::supportedProtocols</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1PortableMediaPlayer.html#a44b48aa6ffc65bc100cdaf30e02a46a6</field>
    <field name="keywords">supportedProtocols Solid::PortableMediaPlayer::supportedProtocols Solid::PortableMediaPlayer</field>
    <field name="text">This list may be dependent on installed device driver libraries a list of known protocols this device can speak</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::PortableMediaPlayer::deviceInterfaceType</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1PortableMediaPlayer.html#a265e91c24a8857d7e7ee2d98c7deca9b</field>
    <field name="keywords">deviceInterfaceType Solid::PortableMediaPlayer::deviceInterfaceType Solid::PortableMediaPlayer</field>
    <field name="text">the PortableMediaPlayer device interface type Solid::DeviceInterface::Type</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Predicate</field>
    <field name="url">classSolid_1_1Predicate.html</field>
    <field name="keywords">Predicate</field>
    <field name="text">A predicate is a logical condition that a given device can match or not It s a constraint about the value a property must have in a given device interface or any combination conjunction disjunction of such constraints FIXME Add an example</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Solid::Predicate::ComparisonOperator</field>
    <field name="url">classSolid_1_1Predicate.html#a88e5bbd97d7528a897b6a60683c36c4b</field>
    <field name="keywords">ComparisonOperator Solid::Predicate::ComparisonOperator Solid::Predicate</field>
    <field name="text">Equals the property and the value will match for strict equality Mask the property and the value will match if the bitmasking is not null</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Solid::Predicate::Type</field>
    <field name="url">classSolid_1_1Predicate.html#aad2fd2f39c890338aa2dc1388197cef0</field>
    <field name="keywords">Type Solid::Predicate::Type Solid::Predicate</field>
    <field name="text">PropertyCheck the predicate contains a comparison that needs to be matched using a ComparisonOperator Conjunction the two contained predicates need to be true for this predicate to be true Disjunction either of the two contained predicates may be true for this predicate to be true InterfaceCheck the device type is compared</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::Predicate</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Predicate.html#a3386a480760c9224c969120828a637ab</field>
    <field name="keywords">Predicate Solid::Predicate::Predicate Solid::Predicate</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::Predicate</field>
    <field name="args">(const Predicate &amp;other)</field>
    <field name="url">classSolid_1_1Predicate.html#a8f3c2eae645d0f049429e9992b2842a2</field>
    <field name="keywords">Predicate Solid::Predicate::Predicate Solid::Predicate</field>
    <field name="text">other the predicate to copy</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::Predicate</field>
    <field name="args">(const DeviceInterface::Type &amp;ifaceType, const QString &amp;property, const QVariant &amp;value, ComparisonOperator compOperator=Equals)</field>
    <field name="url">classSolid_1_1Predicate.html#aef75762f51dda658bd419381a960cf10</field>
    <field name="keywords">Predicate Solid::Predicate::Predicate Solid::Predicate</field>
    <field name="text">ifaceType the device interface type the device must have property the property name of the device interface value the value the property must have to make the device match compOperator the operator to apply between the property and the value when matching</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::Predicate</field>
    <field name="args">(const QString &amp;ifaceName, const QString &amp;property, const QVariant &amp;value, ComparisonOperator compOperator=Equals)</field>
    <field name="url">classSolid_1_1Predicate.html#abaa292596786f2e5c97d31a03f195110</field>
    <field name="keywords">Predicate Solid::Predicate::Predicate Solid::Predicate</field>
    <field name="text">ifaceName the name of the device interface the device must have property the property name of the device interface value the value the property must have to make the device match compOperator the operator to apply between the property and the value when matching</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::Predicate</field>
    <field name="args">(const DeviceInterface::Type &amp;ifaceType)</field>
    <field name="url">classSolid_1_1Predicate.html#ac7c4f2a5a2a354e8173d14138ea691dd</field>
    <field name="keywords">Predicate Solid::Predicate::Predicate Solid::Predicate</field>
    <field name="text">ifaceType the device interface the device must have</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::Predicate</field>
    <field name="args">(const QString &amp;ifaceName)</field>
    <field name="url">classSolid_1_1Predicate.html#af430631cb156bb2d7a5868efa1f06286</field>
    <field name="keywords">Predicate Solid::Predicate::Predicate Solid::Predicate</field>
    <field name="text">ifaceName the name of the device interface the device must have</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::~Predicate</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Predicate.html#adbd08003638121a50abad6c42b8010c1</field>
    <field name="keywords">Solid::Predicate::~Predicate Solid::Predicate</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::comparisonOperator</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Predicate.html#a17f3055ffd6f13b932b3da60d53b9d33</field>
    <field name="keywords">comparisonOperator Solid::Predicate::comparisonOperator Solid::Predicate</field>
    <field name="text">4.4 This is only valid for Conjunction and Disjunction types the comparison operator used</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::firstOperand</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Predicate.html#aa8140022607420fe2d077478f60b5f22</field>
    <field name="keywords">firstOperand Solid::Predicate::firstOperand Solid::Predicate</field>
    <field name="text">4.4 This is only valid for Conjunction and Disjunction types The predicate used for the first operand</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::interfaceType</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Predicate.html#aa9a910a322c252a63ed5c748b9e22560</field>
    <field name="keywords">interfaceType Solid::Predicate::interfaceType Solid::Predicate</field>
    <field name="text">This is only valid for InterfaceCheck and PropertyCheck types 4.4 a device interface type used by the predicate</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::isValid</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Predicate.html#a667fab3a97dd7bd5cc979b552d639ad1</field>
    <field name="keywords">isValid Solid::Predicate::isValid Solid::Predicate</field>
    <field name="text">Predicate() is the only invalid predicate true if the predicate is valid false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::matches</field>
    <field name="args">(const Device &amp;device) const</field>
    <field name="url">classSolid_1_1Predicate.html#a057768fa96300f04ae5290fe0133da7a</field>
    <field name="keywords">matches Solid::Predicate::matches Solid::Predicate</field>
    <field name="text">device the device to match against the predicate true if the given device matches the predicate false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::matchingValue</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Predicate.html#a94e7259c5216621cdcae9a19dd4d5f20</field>
    <field name="keywords">matchingValue Solid::Predicate::matchingValue Solid::Predicate</field>
    <field name="text">This is only valid for the PropertyCheck type 4.4 the value used</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::operator&amp;</field>
    <field name="args">(const Predicate &amp;other)</field>
    <field name="url">classSolid_1_1Predicate.html#ae867d0ff2074bd2f930a53db78b6088d</field>
    <field name="keywords">operator&amp; Solid::Predicate::operator&amp; Solid::Predicate</field>
    <field name="text">other the second operand a new and predicate having this and other as operands</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::operator&amp;=</field>
    <field name="args">(const Predicate &amp;other)</field>
    <field name="url">classSolid_1_1Predicate.html#a3261213a9cf9e3fc50bf9752601bc842</field>
    <field name="keywords">operator&amp;= Solid::Predicate::operator&amp;= Solid::Predicate</field>
    <field name="text">other the second operand assigns to this a new and predicate having this and other as operands</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::operator=</field>
    <field name="args">(const Predicate &amp;other)</field>
    <field name="url">classSolid_1_1Predicate.html#ab583522bf29ac3cb941bdaa526002add</field>
    <field name="keywords">operator= Solid::Predicate::operator= Solid::Predicate</field>
    <field name="text">other the predicate to assign this predicate after having assigned other to it</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::operator|</field>
    <field name="args">(const Predicate &amp;other)</field>
    <field name="url">classSolid_1_1Predicate.html#a3f9c9dbdbccb7f950f9eae41f7561e10</field>
    <field name="keywords">operator| Solid::Predicate::operator| Solid::Predicate</field>
    <field name="text">other the second operand a new or predicate having this and other as operands</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::operator|=</field>
    <field name="args">(const Predicate &amp;other)</field>
    <field name="url">classSolid_1_1Predicate.html#adba2f7f07a086de23be75d9ef83de6a0</field>
    <field name="keywords">operator|= Solid::Predicate::operator|= Solid::Predicate</field>
    <field name="text">other the second operand assigns to this a new or predicate having this and other as operands</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::propertyName</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Predicate.html#a7152967ffcb44a1171d320d8bf2aee24</field>
    <field name="keywords">propertyName Solid::Predicate::propertyName Solid::Predicate</field>
    <field name="text">This is only valid for the PropertyCheck type 4.4 a property name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::secondOperand</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Predicate.html#a6d302ab6223876863a1aba3a5cbb3ed7</field>
    <field name="keywords">secondOperand Solid::Predicate::secondOperand Solid::Predicate</field>
    <field name="text">4.4 This is only valid for Conjunction and Disjunction types The predicate used for the second operand</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::toString</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Predicate.html#a45c0446531064ad19b7d4a6d0ca7043f</field>
    <field name="keywords">toString Solid::Predicate::toString Solid::Predicate</field>
    <field name="text">a string representation of the predicate</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::type</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Predicate.html#af68cc8c81f7dd57698367e4ab338786d</field>
    <field name="keywords">type Solid::Predicate::type Solid::Predicate</field>
    <field name="text">4.4 the predicate type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::usedTypes</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Predicate.html#ae9cce9a04129893d4433f3adc4eac1fc</field>
    <field name="keywords">usedTypes Solid::Predicate::usedTypes Solid::Predicate</field>
    <field name="text">all the device interface types used in this predicate</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Predicate::fromString</field>
    <field name="args">(const QString &amp;predicate)</field>
    <field name="url">classSolid_1_1Predicate.html#aea54fd739b594a077314cf2b8eb25cb6</field>
    <field name="keywords">fromString Solid::Predicate::fromString Solid::Predicate</field>
    <field name="text">predicate the string to convert a new valid predicate if the given string is syntactically correct Predicate() otherwise</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Processor</field>
    <field name="url">classSolid_1_1Processor.html</field>
    <field name="keywords">Processor</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">Solid::Processor::InstructionSet</field>
    <field name="url">classSolid_1_1Processor.html#a4fb6ace7db56d9ec92f8ff69af957235</field>
    <field name="keywords">InstructionSet Solid::Processor::InstructionSet Solid::Processor</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Processor::~Processor</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Processor.html#a2f22889c57cd2590ea4537f06b152135</field>
    <field name="keywords">Solid::Processor::~Processor Solid::Processor</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Processor::canChangeFrequency</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Processor.html#aee2d5d4cc8d76733beea70112ab3bb10</field>
    <field name="keywords">canChangeFrequency Solid::Processor::canChangeFrequency Solid::Processor</field>
    <field name="text">True if a processor is able to change its own CPU frequency generally for power management true if the processor can change CPU frequency false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Processor::instructionSets</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Processor.html#a792cc9d26b72580cbcd5f4f6dc82695e</field>
    <field name="keywords">instructionSets Solid::Processor::instructionSets Solid::Processor</field>
    <field name="text">the extensions supported by the CPU Solid::Processor::InstructionSet</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Processor::maxSpeed</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Processor.html#a44f7ee36d699ad1a9529eccfffbbf4d7</field>
    <field name="keywords">maxSpeed Solid::Processor::maxSpeed Solid::Processor</field>
    <field name="text">the maximum speed in MHz or 0 if the device can t be queried for this information</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Processor::number</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Processor.html#a085d23925ed86532ca0e9231fd7de551</field>
    <field name="keywords">number Solid::Processor::number Solid::Processor</field>
    <field name="text">the internal processor number in the system starting from zero</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Processor::deviceInterfaceType</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Processor.html#af7374d8369c37469a64966ed315a3f1f</field>
    <field name="keywords">deviceInterfaceType Solid::Processor::deviceInterfaceType Solid::Processor</field>
    <field name="text">the Processor device interface type Solid::Ifaces::Enums::DeviceInterface::Type</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::RequestStateJob</field>
    <field name="url">classSolid_1_1RequestStateJob.html</field>
    <field name="keywords">RequestStateJob</field>
    <field name="text">On success this job will contain no error and the device will be set to the desired state for example Sleep On error use error() and errorText() to know more about the issue In some devices changing the system state might happen too fast for the callee of this job to be notified for example the system might suspend before result() is emitted</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::RequestStateJob::result</field>
    <field name="args">(Solid::Job *)</field>
    <field name="url">classSolid_1_1RequestStateJob.html#a8668c7621f4e1e4bff2ca8f5a0a1c25d</field>
    <field name="keywords">result Solid::RequestStateJob::result Solid::RequestStateJob</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::StatesJob</field>
    <field name="url">classSolid_1_1StatesJob.html</field>
    <field name="keywords">StatesJob</field>
    <field name="text">Different devices and different operating systems support a different set of states such Sleep or Hibernation</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::StatesJob::result</field>
    <field name="args">(Solid::Job *job)</field>
    <field name="url">classSolid_1_1StatesJob.html#a807c779f9e6c70a407a7543824a3f597</field>
    <field name="keywords">result Solid::StatesJob::result Solid::StatesJob</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StatesJob::states</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1StatesJob.html#a568d40bb4e27bfd5f2366cc348a4f749</field>
    <field name="keywords">states Solid::StatesJob::states Solid::StatesJob</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::StorageAccess</field>
    <field name="url">classSolid_1_1StorageAccess.html</field>
    <field name="keywords">StorageAccess</field>
    <field name="text">mount or unmount them A volume is anything that can contain data partition optical disc memory card It s a particular kind of block device</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::StorageAccess::accessibilityChanged</field>
    <field name="args">(bool accessible, const QString &amp;udi)</field>
    <field name="url">classSolid_1_1StorageAccess.html#a7273d60eff31620620eea1ffe9dfc08b</field>
    <field name="keywords">accessibilityChanged Solid::StorageAccess::accessibilityChanged Solid::StorageAccess</field>
    <field name="text">accessible true if the volume is accessible false otherwise udi the UDI of the volume</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::StorageAccess::setupDone</field>
    <field name="args">(Solid::ErrorType error, QVariant errorData, const QString &amp;udi)</field>
    <field name="url">classSolid_1_1StorageAccess.html#ae58d855de4fe07aaf4639ebdc2c95989</field>
    <field name="keywords">setupDone Solid::StorageAccess::setupDone Solid::StorageAccess</field>
    <field name="text">The signal might be spontaneous i.e it can be triggered by another process error type of error that occurred if any errorData more information about the error if any udi the UDI of the volume</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::StorageAccess::setupRequested</field>
    <field name="args">(const QString &amp;udi)</field>
    <field name="url">classSolid_1_1StorageAccess.html#a4fb362f8f49f712f9920606be3d4ebf3</field>
    <field name="keywords">setupRequested Solid::StorageAccess::setupRequested Solid::StorageAccess</field>
    <field name="text">The signal might be spontaneous i.e it can be triggered by another process udi the UDI of the volume</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::StorageAccess::teardownDone</field>
    <field name="args">(Solid::ErrorType error, QVariant errorData, const QString &amp;udi)</field>
    <field name="url">classSolid_1_1StorageAccess.html#a9f34f50cfbaa06eb27d92633b866b31b</field>
    <field name="keywords">teardownDone Solid::StorageAccess::teardownDone Solid::StorageAccess</field>
    <field name="text">The signal might be spontaneous i.e it can be triggered by another process error type of error that occurred if any errorData more information about the error if any udi the UDI of the volume</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::StorageAccess::teardownRequested</field>
    <field name="args">(const QString &amp;udi)</field>
    <field name="url">classSolid_1_1StorageAccess.html#a7d7d7324ab4793be41dbe43adefc910e</field>
    <field name="keywords">teardownRequested Solid::StorageAccess::teardownRequested Solid::StorageAccess</field>
    <field name="text">The signal might be spontaneous i.e it can be triggered by another process udi the UDI of the volume</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageAccess::~StorageAccess</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1StorageAccess.html#af7b8e207a7433cb667cd6e7f3693747a</field>
    <field name="keywords">Solid::StorageAccess::~StorageAccess Solid::StorageAccess</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageAccess::filePath</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1StorageAccess.html#a67216193dc57f89c7d47b8826d98428a</field>
    <field name="keywords">filePath Solid::StorageAccess::filePath Solid::StorageAccess</field>
    <field name="text">the absolute path to the mount point if the volume is mounted QString() otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageAccess::isAccessible</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1StorageAccess.html#a7f791e3992045625511f833c291445ac</field>
    <field name="keywords">isAccessible Solid::StorageAccess::isAccessible Solid::StorageAccess</field>
    <field name="text">true if the volume is mounted</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageAccess::isIgnored</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1StorageAccess.html#ab9310cbb95b5f930e3736af5bf2a03e6</field>
    <field name="keywords">isIgnored Solid::StorageAccess::isIgnored Solid::StorageAccess</field>
    <field name="text">If it should be ignored it generally means that it should be invisible to the user It s useful for firmware partitions or OS reinstall partitions on some systems true if the volume should be ignored</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageAccess::setup</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1StorageAccess.html#aa46fb8a7a104927168ffc3b29817fde9</field>
    <field name="keywords">setup Solid::StorageAccess::setup Solid::StorageAccess</field>
    <field name="text">false if the operation is not supported true if the operation is attempted</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageAccess::teardown</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1StorageAccess.html#a9530651a7d29c0c8d4baffbccb970f41</field>
    <field name="keywords">teardown Solid::StorageAccess::teardown Solid::StorageAccess</field>
    <field name="text">false if the operation is not supported true if the operation is attempted</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageAccess::deviceInterfaceType</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1StorageAccess.html#a5ba4f15b824ac4c4bf372075c2eb9b69</field>
    <field name="keywords">deviceInterfaceType Solid::StorageAccess::deviceInterfaceType Solid::StorageAccess</field>
    <field name="text">the StorageVolume device interface type Solid::Ifaces::Enums::DeviceInterface::Type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::StorageAccess::StorageAccess</field>
    <field name="args">(StorageAccessPrivate &amp;dd, QObject *backendObject)</field>
    <field name="url">classSolid_1_1StorageAccess.html#a2af0dc87eebabd0e281962b9b0e3c5fb</field>
    <field name="keywords">StorageAccess Solid::StorageAccess::StorageAccess Solid::StorageAccess</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::StorageDrive</field>
    <field name="url">classSolid_1_1StorageDrive.html</field>
    <field name="keywords">StorageDrive</field>
    <field name="text">A storage is anything that can contain a set of volumes card reader hard disk cdrom drive It s a particular kind of block device</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::StorageVolume</field>
    <field name="url">classSolid_1_1StorageVolume.html</field>
    <field name="keywords">StorageVolume</field>
    <field name="text">A volume is anything that can contain data partition optical disc memory card It s a particular kind of block device</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Backends::Fake::FakeManager</field>
    <field name="url">classSolid_1_1Backends_1_1Fake_1_1FakeManager.html</field>
    <field name="keywords">FakeManager</field>
    <field name="text">This fake manager is used for unit tests and developers Michaël Larouche</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Backends::Fake::FakeManager::allDevices</field>
    <field name="args">() override</field>
    <field name="url">classSolid_1_1Backends_1_1Fake_1_1FakeManager.html#a7e21d04962dbd98c2830df971c6e1a65</field>
    <field name="keywords">allDevices Solid::Backends::Fake::FakeManager::allDevices Solid::Backends::Fake::FakeManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Backends::Fake::FakeManager::createDevice</field>
    <field name="args">(const QString &amp;udi) override</field>
    <field name="url">classSolid_1_1Backends_1_1Fake_1_1FakeManager.html#a449152043fac42feaa8af9cf59689c73</field>
    <field name="keywords">createDevice Solid::Backends::Fake::FakeManager::createDevice Solid::Backends::Fake::FakeManager</field>
    <field name="text">udi the identifier of the device instantiated a new Device object if there s a device having the given UDI 0 otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Backends::Fake::FakeManager::devicesFromQuery</field>
    <field name="args">(const QString &amp;parentUdi, Solid::DeviceInterface::Type type) override</field>
    <field name="url">classSolid_1_1Backends_1_1Fake_1_1FakeManager.html#a0a5bd3c50edc605196182288c54b3432</field>
    <field name="keywords">devicesFromQuery Solid::Backends::Fake::FakeManager::devicesFromQuery Solid::Backends::Fake::FakeManager</field>
    <field name="text">parentUdi UDI of the parent of the devices we re searching for or QString() if there s no constraint on the parent type DeviceInterface type available on the devices we re looking for or DeviceInterface::Unknown if there s no constraint on the device interfaces the UDIs of all the devices having the given parent and device interface</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Backends::Fake::FakeManager::supportedInterfaces</field>
    <field name="args">() const override</field>
    <field name="url">classSolid_1_1Backends_1_1Fake_1_1FakeManager.html#abad61aac2a4e08a10c9a7c6c299f2da0</field>
    <field name="keywords">supportedInterfaces Solid::Backends::Fake::FakeManager::supportedInterfaces Solid::Backends::Fake::FakeManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Backends::Fake::FakeManager::udiPrefix</field>
    <field name="args">() const override</field>
    <field name="url">classSolid_1_1Backends_1_1Fake_1_1FakeManager.html#ab81af91ba31f3b9fcff4a08ccf7bda75</field>
    <field name="keywords">udiPrefix Solid::Backends::Fake::FakeManager::udiPrefix Solid::Backends::Fake::FakeManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::DeviceManager::DeviceManager</field>
    <field name="args">(QObject *parent=0)</field>
    <field name="url">classSolid_1_1Ifaces_1_1DeviceManager.html#a7fac5d0bfa6bc7eabd1fdc24c6a4eb6d</field>
    <field name="keywords">DeviceManager Solid::Ifaces::DeviceManager::DeviceManager Solid::Ifaces::DeviceManager DeviceManager Solid::Ifaces::DeviceManager::DeviceManager Solid::Ifaces::DeviceManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::DeviceManager::~DeviceManager</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Ifaces_1_1DeviceManager.html#af348d81ef42391cc640db264ba19ca67</field>
    <field name="keywords">Solid::Ifaces::DeviceManager::~DeviceManager Solid::Ifaces::DeviceManager Solid::Ifaces::DeviceManager::~DeviceManager Solid::Ifaces::DeviceManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Ifaces::DeviceManager::deviceAdded</field>
    <field name="args">(const QString &amp;udi)</field>
    <field name="url">classSolid_1_1Ifaces_1_1DeviceManager.html#a45f413228e11cef0559a18ebcc656d31</field>
    <field name="keywords">deviceAdded Solid::Ifaces::DeviceManager::deviceAdded Solid::Ifaces::DeviceManager deviceAdded Solid::Ifaces::DeviceManager::deviceAdded Solid::Ifaces::DeviceManager</field>
    <field name="text">udi the new device identifier</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Solid::Ifaces::DeviceManager::deviceRemoved</field>
    <field name="args">(const QString &amp;udi)</field>
    <field name="url">classSolid_1_1Ifaces_1_1DeviceManager.html#a56ad631be34c77855d0e7c1d5af40628</field>
    <field name="keywords">deviceRemoved Solid::Ifaces::DeviceManager::deviceRemoved Solid::Ifaces::DeviceManager deviceRemoved Solid::Ifaces::DeviceManager::deviceRemoved Solid::Ifaces::DeviceManager</field>
    <field name="text">udi the old device identifier</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Ifaces::Battery</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html</field>
    <field name="keywords">Battery</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::~Battery</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#ac32ffd4493e1f9726ac3cc96c1f8af14</field>
    <field name="keywords">Solid::Ifaces::Battery::~Battery Solid::Ifaces::Battery</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::capacity</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a5c7b0b3d25fe316b8453043de1a5d7a4</field>
    <field name="keywords">capacity Solid::Ifaces::Battery::capacity Solid::Ifaces::Battery</field>
    <field name="text">The capacity of the battery will reduce with age A capacity value less than 75 is usually a sign that you should renew your battery 4.11 the battery capacity normalised to percent</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::chargePercent</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a66e2fb3b8fe12e44859764abece897fd</field>
    <field name="keywords">chargePercent Solid::Ifaces::Battery::chargePercent Solid::Ifaces::Battery</field>
    <field name="text">the current charge level normalised to percent</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::chargeState</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#af9dd256e3d78ed33e7411736cb51e07e</field>
    <field name="keywords">chargeState Solid::Ifaces::Battery::chargeState Solid::Ifaces::Battery</field>
    <field name="text">It can be in a stable state no charge charging or discharging the current battery charge state Solid::Battery::ChargeState</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::energy</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a959af8a04ffe57e5455d507c035e80b2</field>
    <field name="keywords">energy Solid::Ifaces::Battery::energy Solid::Ifaces::Battery</field>
    <field name="text">amount of battery energy in Wh</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::energyFull</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a38972f7bcd6eff0ce30133f48c41c2d0</field>
    <field name="keywords">energyFull Solid::Ifaces::Battery::energyFull Solid::Ifaces::Battery</field>
    <field name="text">amount of battery energy when full in Wh 5.7</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::energyFullDesign</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a3dc2a15098b491e0cdc4be83fa3124e9</field>
    <field name="keywords">energyFullDesign Solid::Ifaces::Battery::energyFullDesign Solid::Ifaces::Battery</field>
    <field name="text">amount of battery energy when full by design in Wh 5.7</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::energyRate</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#ab713bde2019f2655142373d2173086d1</field>
    <field name="keywords">energyRate Solid::Ifaces::Battery::energyRate Solid::Ifaces::Battery</field>
    <field name="text">If positive the source is being discharged if negative it s being charged battery rate in Watts</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::isPowerSupply</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#aa6b52a6a811b0b64e2ddcad3782313fe</field>
    <field name="keywords">isPowerSupply Solid::Ifaces::Battery::isPowerSupply Solid::Ifaces::Battery</field>
    <field name="text">true if the battery is powersupply false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::isPresent</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#acb72a3c5f152f28605ec4328117e1ed5</field>
    <field name="keywords">isPresent Solid::Ifaces::Battery::isPresent Solid::Ifaces::Battery</field>
    <field name="text">true if the battery is present false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::isRecalled</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#af0d6aa7575c77cda21ab31cd23a1306c</field>
    <field name="keywords">isRecalled Solid::Ifaces::Battery::isRecalled Solid::Ifaces::Battery</field>
    <field name="text">true if the battery has been recalled false otherwise 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::isRechargeable</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a783d1763c29da6a328a33ef72059bb7a</field>
    <field name="keywords">isRechargeable Solid::Ifaces::Battery::isRechargeable Solid::Ifaces::Battery</field>
    <field name="text">true if the battery is rechargeable false otherwise one time usage</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::recallUrl</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#ab5fa824f8213b755132de7c1133dee99</field>
    <field name="keywords">recallUrl Solid::Ifaces::Battery::recallUrl Solid::Ifaces::Battery</field>
    <field name="text">the website URL of the vendor that has recalled the battery 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::recallVendor</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a30344d826d0b5e78b8eea12e5030b144</field>
    <field name="keywords">recallVendor Solid::Ifaces::Battery::recallVendor Solid::Ifaces::Battery</field>
    <field name="text">the vendor name that has recalled the battery 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::remainingTime</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#ad011ce3597426456072dad2c53faec1c</field>
    <field name="keywords">remainingTime Solid::Ifaces::Battery::remainingTime Solid::Ifaces::Battery</field>
    <field name="text">the current global estimated remaining time in seconds 5.8</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::serial</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a18e0f733184ceb5e62375b0b47e11fca</field>
    <field name="keywords">serial Solid::Ifaces::Battery::serial Solid::Ifaces::Battery</field>
    <field name="text">the serial number of the battery 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::technology</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a17708c7e865d066800e22529aa119625</field>
    <field name="keywords">technology Solid::Ifaces::Battery::technology Solid::Ifaces::Battery</field>
    <field name="text">the battery technology Solid::Battery::Technology</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::temperature</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#aa82831b99a31b22373104269b455d9dc</field>
    <field name="keywords">temperature Solid::Ifaces::Battery::temperature Solid::Ifaces::Battery</field>
    <field name="text">the battery temperature in degrees Celsius 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::timeToEmpty</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a9fd3323debdab6be0b9646680a234455</field>
    <field name="keywords">timeToEmpty Solid::Ifaces::Battery::timeToEmpty Solid::Ifaces::Battery</field>
    <field name="text">time until the battery is empty 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::timeToFull</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a6b5f66e222412357b77e0f6fbf7a3562</field>
    <field name="keywords">timeToFull Solid::Ifaces::Battery::timeToFull Solid::Ifaces::Battery</field>
    <field name="text">time until the battery is full 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::type</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a711f8f2f41db9204fc6ffff4419eb6ea</field>
    <field name="keywords">type Solid::Ifaces::Battery::type Solid::Ifaces::Battery</field>
    <field name="text">the type of device holding this battery Solid::Battery::BatteryType</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::voltage</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#aa6056ab7c3a0c5e06329821e062b86a1</field>
    <field name="keywords">voltage Solid::Ifaces::Battery::voltage Solid::Ifaces::Battery</field>
    <field name="text">voltage in Volts</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::DeviceInterface::~DeviceInterface</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Ifaces_1_1DeviceInterface.html#a0f5049ddaf4abd13dcd7f34bb5dd092d</field>
    <field name="keywords">Solid::Ifaces::DeviceInterface::~DeviceInterface Solid::Ifaces::DeviceInterface Solid::Ifaces::DeviceInterface::~DeviceInterface Solid::Ifaces::DeviceInterface Solid::Ifaces::DeviceInterface::~DeviceInterface Solid::Ifaces::DeviceInterface Solid::Ifaces::DeviceInterface::~DeviceInterface Solid::Ifaces::DeviceInterface Solid::Ifaces::DeviceInterface::~DeviceInterface Solid::Ifaces::DeviceInterface Solid::Ifaces::DeviceInterface::~DeviceInterface Solid::Ifaces::DeviceInterface Solid::Ifaces::DeviceInterface::~DeviceInterface Solid::Ifaces::DeviceInterface Solid::Ifaces::DeviceInterface::~DeviceInterface Solid::Ifaces::DeviceInterface Solid::Ifaces::DeviceInterface::~DeviceInterface Solid::Ifaces::DeviceInterface Solid::Ifaces::DeviceInterface::~DeviceInterface Solid::Ifaces::DeviceInterface Solid::Ifaces::DeviceInterface::~DeviceInterface Solid::Ifaces::DeviceInterface Solid::Ifaces::DeviceInterface::~DeviceInterface Solid::Ifaces::DeviceInterface</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::capacityChanged</field>
    <field name="args">(int value, const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a06d98f1f72326cb130d69bde4bf9763e</field>
    <field name="keywords">capacityChanged Solid::Ifaces::Battery::capacityChanged Solid::Ifaces::Battery</field>
    <field name="text">value the new capacity of the battery udi the UDI of the battery with the new capacity 4.11</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::chargePercentChanged</field>
    <field name="args">(int value, const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a6373596d3e7e15194782d5eec9ab5572</field>
    <field name="keywords">chargePercentChanged Solid::Ifaces::Battery::chargePercentChanged Solid::Ifaces::Battery</field>
    <field name="text">value the new charge percent value of the battery udi the UDI of the battery with the new charge percent</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::chargeStateChanged</field>
    <field name="args">(int newState, const QString &amp;udi=QString())=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a52555a5191e3fb6e26c93967671da557</field>
    <field name="keywords">chargeStateChanged Solid::Ifaces::Battery::chargeStateChanged Solid::Ifaces::Battery</field>
    <field name="text">newState the new charge state of the battery it s one of the type Solid::Battery::ChargeState Solid::Battery::ChargeState udi the UDI of the battery with the new charge state</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::energyChanged</field>
    <field name="args">(double energy, const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a6ea10adfb3f54296d1c0c594e9f358c5</field>
    <field name="keywords">energyChanged Solid::Ifaces::Battery::energyChanged Solid::Ifaces::Battery</field>
    <field name="text">energy the new energy value of the battery udi the UDI of the battery with the new energy value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::energyFullChanged</field>
    <field name="args">(double energy, const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a39b342977910e6c8b30a4e85aa8762b6</field>
    <field name="keywords">energyFullChanged Solid::Ifaces::Battery::energyFullChanged Solid::Ifaces::Battery</field>
    <field name="text">energy the new energy full value of the battery udi the UDI of the battery with the new energy full value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::energyFullDesignChanged</field>
    <field name="args">(double energy, const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a27543e3e757b80fea68f03990c666ad3</field>
    <field name="keywords">energyFullDesignChanged Solid::Ifaces::Battery::energyFullDesignChanged Solid::Ifaces::Battery</field>
    <field name="text">energy the new energy full design value of the battery udi the UDI of the battery with the new energy full design value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::energyRateChanged</field>
    <field name="args">(double energyRate, const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#ad53e4efd61bba64b9b6516d430cb14c1</field>
    <field name="keywords">energyRateChanged Solid::Ifaces::Battery::energyRateChanged Solid::Ifaces::Battery</field>
    <field name="text">If positive the source is being discharged if negative it s being charged energyRate the new energy rate value of the battery udi the UDI of the battery with the new charge percent</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::powerSupplyStateChanged</field>
    <field name="args">(bool newState, const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a5524f81e69127fe8e8bf3e43b88a881c</field>
    <field name="keywords">powerSupplyStateChanged Solid::Ifaces::Battery::powerSupplyStateChanged Solid::Ifaces::Battery</field>
    <field name="text">newState the new power supply state type is boolean udi the UDI of the battery with the new power supply state 4.11</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::presentStateChanged</field>
    <field name="args">(bool newState, const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#af08f3508065faed61df46fe1e52b7ade</field>
    <field name="keywords">presentStateChanged Solid::Ifaces::Battery::presentStateChanged Solid::Ifaces::Battery</field>
    <field name="text">newState the new plugging state of the battery type is boolean udi the UDI of the battery with thew new plugging state</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::remainingTimeChanged</field>
    <field name="args">(qlonglong time, const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a61ce355ae3d9c52a25b22cdb149cf586</field>
    <field name="keywords">remainingTimeChanged Solid::Ifaces::Battery::remainingTimeChanged Solid::Ifaces::Battery</field>
    <field name="text">time the new remaining time udi the UDI of the battery with the new remaining time 5.8</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::temperatureChanged</field>
    <field name="args">(double temperature, const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a55ed977c9be195fde73df297149e9f64</field>
    <field name="keywords">temperatureChanged Solid::Ifaces::Battery::temperatureChanged Solid::Ifaces::Battery</field>
    <field name="text">temperature the new temperature of the battery in degrees Celsius udi the UDI of the battery with the new temperature 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::timeToEmptyChanged</field>
    <field name="args">(qlonglong time, const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#ad55dbdcacbc78061b7c50f13773ee857</field>
    <field name="keywords">timeToEmptyChanged Solid::Ifaces::Battery::timeToEmptyChanged Solid::Ifaces::Battery</field>
    <field name="text">time the new remaining time udi the UDI of the battery with the new remaining time 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::timeToFullChanged</field>
    <field name="args">(qlonglong time, const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a20581834856cf3611316f152e220d095</field>
    <field name="keywords">timeToFullChanged Solid::Ifaces::Battery::timeToFullChanged Solid::Ifaces::Battery</field>
    <field name="text">time the new remaining time udi the UDI of the battery with the new remaining time 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Battery::voltageChanged</field>
    <field name="args">(double voltage, const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Battery.html#a2ab85e79f8455c5ef0366e6b6bab6768</field>
    <field name="keywords">voltageChanged Solid::Ifaces::Battery::voltageChanged Solid::Ifaces::Battery</field>
    <field name="text">voltage the new voltage of the cell udi the UDI of the battery with the new voltage 5.0</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Ifaces::Block</field>
    <field name="url">classSolid_1_1Ifaces_1_1Block.html</field>
    <field name="keywords">Block</field>
    <field name="text">A block device is an adressable device such as drive or partition It is possible to interact with such a device using a special file in the system</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Block::~Block</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Ifaces_1_1Block.html#a0cdcf6b84b85643edcfce1fd261aa76a</field>
    <field name="keywords">Solid::Ifaces::Block::~Block Solid::Ifaces::Block Solid::Ifaces::Block::~Block Solid::Ifaces::Block Solid::Ifaces::Block::~Block Solid::Ifaces::Block Solid::Ifaces::Block::~Block Solid::Ifaces::Block Solid::Ifaces::Block::~Block Solid::Ifaces::Block</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Block::device</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Block.html#a5718d36fc8a166c9fa63df4102e27184</field>
    <field name="keywords">device Solid::Ifaces::Block::device Solid::Ifaces::Block device Solid::Ifaces::Block::device Solid::Ifaces::Block device Solid::Ifaces::Block::device Solid::Ifaces::Block device Solid::Ifaces::Block::device Solid::Ifaces::Block device Solid::Ifaces::Block::device Solid::Ifaces::Block</field>
    <field name="text">the absolute path of the special file to interact with the device</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Block::deviceMajor</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Block.html#aea39706399af2f3f00a6068e68d32eff</field>
    <field name="keywords">deviceMajor Solid::Ifaces::Block::deviceMajor Solid::Ifaces::Block deviceMajor Solid::Ifaces::Block::deviceMajor Solid::Ifaces::Block deviceMajor Solid::Ifaces::Block::deviceMajor Solid::Ifaces::Block deviceMajor Solid::Ifaces::Block::deviceMajor Solid::Ifaces::Block deviceMajor Solid::Ifaces::Block::deviceMajor Solid::Ifaces::Block</field>
    <field name="text">the device major number</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Block::deviceMinor</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Block.html#a7e9ffebebe1ea9b51726dae0ca7bf6ab</field>
    <field name="keywords">deviceMinor Solid::Ifaces::Block::deviceMinor Solid::Ifaces::Block deviceMinor Solid::Ifaces::Block::deviceMinor Solid::Ifaces::Block deviceMinor Solid::Ifaces::Block::deviceMinor Solid::Ifaces::Block deviceMinor Solid::Ifaces::Block::deviceMinor Solid::Ifaces::Block deviceMinor Solid::Ifaces::Block::deviceMinor Solid::Ifaces::Block</field>
    <field name="text">the device minor number</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Ifaces::Camera</field>
    <field name="url">classSolid_1_1Ifaces_1_1Camera.html</field>
    <field name="keywords">Camera</field>
    <field name="text">A digital camera is a device used to transform images into data Nowaday most digital cameras are multifunctional and able to take photographs video or sound On the system side they are a particular type of device holding data the access method can be different from the typical storage device hence why it s a separate device interface</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Camera::~Camera</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Ifaces_1_1Camera.html#a3f9e3d338f1533f9c5bc8c89ca0ccd42</field>
    <field name="keywords">Solid::Ifaces::Camera::~Camera Solid::Ifaces::Camera</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Camera::driverHandle</field>
    <field name="args">(const QString &amp;driver) const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Camera.html#a4d8524275f24da1c3fa86817d44b05fe</field>
    <field name="keywords">driverHandle Solid::Ifaces::Camera::driverHandle Solid::Ifaces::Camera</field>
    <field name="text">For example for the driver it will return a list of the form vendor_id product_id the driver specific data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Camera::supportedDrivers</field>
    <field name="args">(QString protocol=QString()) const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Camera.html#ac3c8a21356b316afa7e909516767dc32</field>
    <field name="keywords">supportedDrivers Solid::Ifaces::Camera::supportedDrivers Solid::Ifaces::Camera</field>
    <field name="text">protocol The protocol to get drivers for a list of known device drivers that can handle this device</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Camera::supportedProtocols</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Camera.html#a43e235b61118c026c5144a9b1d9c3b4a</field>
    <field name="keywords">supportedProtocols Solid::Ifaces::Camera::supportedProtocols Solid::Ifaces::Camera</field>
    <field name="text">This list may be dependent on installed device driver libraries a list of known protocols this device can speak</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Ifaces::Device</field>
    <field name="url">classSolid_1_1Ifaces_1_1Device.html</field>
    <field name="keywords">Device</field>
    <field name="text">Backends will have to implement it to gather and modify data in the underlying system Each device has a set of key/values pair describing its properties It has also a list of interfaces describing what the device actually is a cdrom drive a portable media player etc Kevin Ottens</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Device::Device</field>
    <field name="args">(QObject *parent=0)</field>
    <field name="url">classSolid_1_1Ifaces_1_1Device.html#a4bf114657a5c26369f0fb1f34e025215</field>
    <field name="keywords">Device Solid::Ifaces::Device::Device Solid::Ifaces::Device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Device::~Device</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Ifaces_1_1Device.html#a3c7b88bde52493e8ca308870436fb2c3</field>
    <field name="keywords">Solid::Ifaces::Device::~Device Solid::Ifaces::Device</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Device::broadcastActionDone</field>
    <field name="args">(const QString &amp;actionName, int error=Solid::NoError, const QString &amp;errorString=QString()) const</field>
    <field name="url">classSolid_1_1Ifaces_1_1Device.html#a5fcafd2cee883f23919b34ef7dc4fa75</field>
    <field name="keywords">broadcastActionDone Solid::Ifaces::Device::broadcastActionDone Solid::Ifaces::Device</field>
    <field name="text">actionName name of the action which just completed error error code if the action failed errorString message describing a potential error</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Device::broadcastActionRequested</field>
    <field name="args">(const QString &amp;actionName) const</field>
    <field name="url">classSolid_1_1Ifaces_1_1Device.html#a3644245ca0b87335cc5b7680755f2bce</field>
    <field name="keywords">broadcastActionRequested Solid::Ifaces::Device::broadcastActionRequested Solid::Ifaces::Device</field>
    <field name="text">actionName name of the action which just completed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Device::createDeviceInterface</field>
    <field name="args">(const Solid::DeviceInterface::Type &amp;type)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Device.html#ad471412f986ff6ef81cb1d2d4a02ef3a</field>
    <field name="keywords">createDeviceInterface Solid::Ifaces::Device::createDeviceInterface Solid::Ifaces::Device</field>
    <field name="text">type the device interface type a pointer to the device interface if supported by the device 0 otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Device::description</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Device.html#a40fe0d3272ace347b89b3a8a961c36a4</field>
    <field name="keywords">description Solid::Ifaces::Device::description Solid::Ifaces::Device</field>
    <field name="text">the description</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Device::emblems</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Device.html#a6bef4d4f56d499fa56a6c7cec93f4cfb</field>
    <field name="keywords">emblems Solid::Ifaces::Device::emblems Solid::Ifaces::Device</field>
    <field name="text">The naming follows the freedesktop.org specification the emblem names</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Device::icon</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Device.html#ad76d5750dd8a8e0721bf4bb845c662ff</field>
    <field name="keywords">icon Solid::Ifaces::Device::icon Solid::Ifaces::Device</field>
    <field name="text">The naming follows the freedesktop.org specification the icon name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Device::parentUdi</field>
    <field name="args">() const</field>
    <field name="url">classSolid_1_1Ifaces_1_1Device.html#a7815343f4b35606a88a91f2012f3ec46</field>
    <field name="keywords">parentUdi Solid::Ifaces::Device::parentUdi Solid::Ifaces::Device</field>
    <field name="text">the Universal Device Identifier of the parent device</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Device::product</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Device.html#a6cb9034c4b70501f93c9cac29d12385a</field>
    <field name="keywords">product Solid::Ifaces::Device::product Solid::Ifaces::Device</field>
    <field name="text">the product name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Device::queryDeviceInterface</field>
    <field name="args">(const Solid::DeviceInterface::Type &amp;type) const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Device.html#a130d6a2f73a633d3dffd098b10d6da13</field>
    <field name="keywords">queryDeviceInterface Solid::Ifaces::Device::queryDeviceInterface Solid::Ifaces::Device</field>
    <field name="text">type the device interface type true if the device interface is provided by this device false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Device::registerAction</field>
    <field name="args">(const QString &amp;actionName, QObject *dest, const char *requestSlot, const char *doneSlot) const</field>
    <field name="url">classSolid_1_1Ifaces_1_1Device.html#a9de5a5e50495d0ddab1924957a942723</field>
    <field name="keywords">registerAction Solid::Ifaces::Device::registerAction Solid::Ifaces::Device</field>
    <field name="text">Each time the same device in another process broadcast the begin or the end of such action the corresponding slots will be called in the current process actionName name of the action to register dest the object receiving the messages when the action begins and ends requestSlot the slot processing the message when the action begins doneSlot the slot processing the message when the action ends</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Device::udi</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Device.html#ad7dfff557f24a7fd8a09fae946fe9c54</field>
    <field name="keywords">udi Solid::Ifaces::Device::udi Solid::Ifaces::Device</field>
    <field name="text">This identifier is unique for each device in the system the Universal Device Identifier of the current device</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Device::vendor</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Device.html#a7cb7664051ccbced46076f3289c5a77a</field>
    <field name="keywords">vendor Solid::Ifaces::Device::vendor Solid::Ifaces::Device</field>
    <field name="text">the vendor name</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Ifaces::DeviceInterface</field>
    <field name="url">classSolid_1_1Ifaces_1_1DeviceInterface.html</field>
    <field name="keywords">DeviceInterface</field>
    <field name="text">A device interface describes what a device can do A device generally has a set of device interfaces Solid::Ifaces::AbstractDeviceInterface</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Ifaces::DeviceManager</field>
    <field name="url">classSolid_1_1Ifaces_1_1DeviceManager.html</field>
    <field name="keywords">DeviceManager</field>
    <field name="text">A device manager allows to query the underlying platform to discover the available devices It has also the responsibility to notify when a device appears or disappears</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::DeviceManager::allDevices</field>
    <field name="args">()=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1DeviceManager.html#a12161bd16c91b15a8c7666b1187fa104</field>
    <field name="keywords">allDevices Solid::Ifaces::DeviceManager::allDevices Solid::Ifaces::DeviceManager</field>
    <field name="text">This identifier is unique for each device in the system the UDIs of all the devices in the system</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::DeviceManager::createDevice</field>
    <field name="args">(const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1DeviceManager.html#a58403e5d7c3a6f253c9c001cffd73590</field>
    <field name="keywords">createDevice Solid::Ifaces::DeviceManager::createDevice Solid::Ifaces::DeviceManager</field>
    <field name="text">udi the identifier of the device instantiated a new Device object if there s a device having the given UDI 0 otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::DeviceManager::devicesFromQuery</field>
    <field name="args">(const QString &amp;parentUdi, Solid::DeviceInterface::Type type=Solid::DeviceInterface::Unknown)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1DeviceManager.html#acc4b84abc82c8acf3348aade1c1d23de</field>
    <field name="keywords">devicesFromQuery Solid::Ifaces::DeviceManager::devicesFromQuery Solid::Ifaces::DeviceManager</field>
    <field name="text">parentUdi UDI of the parent of the devices we re searching for or QString() if there s no constraint on the parent type DeviceInterface type available on the devices we re looking for or DeviceInterface::Unknown if there s no constraint on the device interfaces the UDIs of all the devices having the given parent and device interface</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::DeviceManager::supportedInterfaces</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1DeviceManager.html#afc9cf9e8078da1cbeff7745c94864c8e</field>
    <field name="keywords">supportedInterfaces Solid::Ifaces::DeviceManager::supportedInterfaces Solid::Ifaces::DeviceManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::DeviceManager::udiPrefix</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1DeviceManager.html#a0036dd8c051023f5ace5512993efbf11</field>
    <field name="keywords">udiPrefix Solid::Ifaces::DeviceManager::udiPrefix Solid::Ifaces::DeviceManager</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Ifaces::GenericInterface</field>
    <field name="url">classSolid_1_1Ifaces_1_1GenericInterface.html</field>
    <field name="keywords">GenericInterface</field>
    <field name="text">It exposes a set of properties and is organized a a key/value set Warning Using this class could expose some backend specific details and lead to non portable code Use it at your own risk or during transitional phases when the provided device interfaces don t provide the necessary methods</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::GenericInterface::~GenericInterface</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Ifaces_1_1GenericInterface.html#af2ecc2b864bf95dc5ae65121f0efe0e6</field>
    <field name="keywords">Solid::Ifaces::GenericInterface::~GenericInterface Solid::Ifaces::GenericInterface</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::GenericInterface::allProperties</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1GenericInterface.html#a960c00385baf9c0a70eff2738c8b11b3</field>
    <field name="keywords">allProperties Solid::Ifaces::GenericInterface::allProperties Solid::Ifaces::GenericInterface</field>
    <field name="text">all properties in a map</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::GenericInterface::property</field>
    <field name="args">(const QString &amp;key) const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1GenericInterface.html#a0ae20721eb6c154f5099faa7dcdfd5da</field>
    <field name="keywords">property Solid::Ifaces::GenericInterface::property Solid::Ifaces::GenericInterface</field>
    <field name="text">key the property name the property value or QVariant() if the property doesn t exist</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::GenericInterface::propertyExists</field>
    <field name="args">(const QString &amp;key) const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1GenericInterface.html#aca257532268916251733fe8930005c0d</field>
    <field name="keywords">propertyExists Solid::Ifaces::GenericInterface::propertyExists Solid::Ifaces::GenericInterface</field>
    <field name="text">key the property name true if the property exists in this device false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::GenericInterface::conditionRaised</field>
    <field name="args">(const QString &amp;condition, const QString &amp;reason)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1GenericInterface.html#a2b396fd5db14f8845122d5553c9440c1</field>
    <field name="keywords">conditionRaised Solid::Ifaces::GenericInterface::conditionRaised Solid::Ifaces::GenericInterface</field>
    <field name="text">For example when a button is pressed condition the condition name reason a message explaining why the condition has been raised</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::GenericInterface::propertyChanged</field>
    <field name="args">(const QMap&lt; QString, int &gt; &amp;changes)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1GenericInterface.html#a17e94fd5957a39e5a7d0d50adca42cfb</field>
    <field name="keywords">propertyChanged Solid::Ifaces::GenericInterface::propertyChanged Solid::Ifaces::GenericInterface</field>
    <field name="text">changes the map describing the property changes that occurred in the device keys are property name and values describe the kind of change done on the device property added/removed/modified it s one of the type Solid::Device::PropertyChange</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Ifaces::NetworkShare</field>
    <field name="url">classSolid_1_1Ifaces_1_1NetworkShare.html</field>
    <field name="keywords">NetworkShare</field>
    <field name="text">a NetworkShare interface is used to determine the type of network access</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::NetworkShare::~NetworkShare</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Ifaces_1_1NetworkShare.html#a89f0e35bf93df88f0d4ad0ec8404a5e7</field>
    <field name="keywords">Solid::Ifaces::NetworkShare::~NetworkShare Solid::Ifaces::NetworkShare</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::NetworkShare::type</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1NetworkShare.html#af4f0173aa7ecae137405c6faa102a082</field>
    <field name="keywords">type Solid::Ifaces::NetworkShare::type Solid::Ifaces::NetworkShare</field>
    <field name="text">the type of network</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::NetworkShare::url</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1NetworkShare.html#ab4f81f46611bf5fd373fc68e43981c23</field>
    <field name="keywords">url Solid::Ifaces::NetworkShare::url Solid::Ifaces::NetworkShare</field>
    <field name="text">the url of network share</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Ifaces::OpticalDisc</field>
    <field name="url">classSolid_1_1Ifaces_1_1OpticalDisc.html</field>
    <field name="keywords">OpticalDisc</field>
    <field name="text">An optical disc is a volume that can be inserted in a cdrom drive</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::OpticalDisc::~OpticalDisc</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Ifaces_1_1OpticalDisc.html#ab5cbcc54ef95e04105a035807db0b00f</field>
    <field name="keywords">Solid::Ifaces::OpticalDisc::~OpticalDisc Solid::Ifaces::OpticalDisc</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::OpticalDisc::availableContent</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1OpticalDisc.html#a51b28a172b8f4745ecb14a8b6b26207f</field>
    <field name="keywords">availableContent Solid::Ifaces::OpticalDisc::availableContent Solid::Ifaces::OpticalDisc</field>
    <field name="text">the flag set indicating the available contents</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::OpticalDisc::capacity</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1OpticalDisc.html#aaf2e714aec1a9f716dfe5e6f1b85cf81</field>
    <field name="keywords">capacity Solid::Ifaces::OpticalDisc::capacity Solid::Ifaces::OpticalDisc</field>
    <field name="text">the capacity of the disc in bytes</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::OpticalDisc::discType</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1OpticalDisc.html#aa4bad9b0a82310c1feb037db8e28e71b</field>
    <field name="keywords">discType Solid::Ifaces::OpticalDisc::discType Solid::Ifaces::OpticalDisc</field>
    <field name="text">the disc type</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::OpticalDisc::isAppendable</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1OpticalDisc.html#ab7424e5143d3be83bd967677cbc5ba16</field>
    <field name="keywords">isAppendable Solid::Ifaces::OpticalDisc::isAppendable Solid::Ifaces::OpticalDisc</field>
    <field name="text">true if the disc is appendable false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::OpticalDisc::isBlank</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1OpticalDisc.html#a1380ba07738bda1a02c589103255f428</field>
    <field name="keywords">isBlank Solid::Ifaces::OpticalDisc::isBlank Solid::Ifaces::OpticalDisc</field>
    <field name="text">true if the disc is blank false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::OpticalDisc::isRewritable</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1OpticalDisc.html#a3c3f5a8524150011be92150d2423ea17</field>
    <field name="keywords">isRewritable Solid::Ifaces::OpticalDisc::isRewritable Solid::Ifaces::OpticalDisc</field>
    <field name="text">A disc is rewritable if you can write on it several times true if the disc is rewritable false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageVolume::~StorageVolume</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageVolume.html#aa9bf00d9be8053840ce003e9c495fea4</field>
    <field name="keywords">Solid::Ifaces::StorageVolume::~StorageVolume Solid::Ifaces::StorageVolume Solid::Ifaces::StorageVolume::~StorageVolume Solid::Ifaces::StorageVolume</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageVolume::encryptedContainerUdi</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageVolume.html#a3e20bc8eb6596760f24a4393f4f73844</field>
    <field name="keywords">encryptedContainerUdi Solid::Ifaces::StorageVolume::encryptedContainerUdi Solid::Ifaces::StorageVolume encryptedContainerUdi Solid::Ifaces::StorageVolume::encryptedContainerUdi Solid::Ifaces::StorageVolume</field>
    <field name="text">the encrypted volume UDI containing the current volume if appliable an empty string otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageVolume::fsType</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageVolume.html#a239789d14e61e3705f413450b072aae0</field>
    <field name="keywords">fsType Solid::Ifaces::StorageVolume::fsType Solid::Ifaces::StorageVolume fsType Solid::Ifaces::StorageVolume::fsType Solid::Ifaces::StorageVolume</field>
    <field name="text">the filesystem type if applicable QString() otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageVolume::isIgnored</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageVolume.html#abf9dd7e3759ed0f144f5ff76ae7a5bc4</field>
    <field name="keywords">isIgnored Solid::Ifaces::StorageVolume::isIgnored Solid::Ifaces::StorageVolume isIgnored Solid::Ifaces::StorageVolume::isIgnored Solid::Ifaces::StorageVolume</field>
    <field name="text">If it should be ignored it generally means that it should be invisible to the user It s useful for firmware partitions or OS reinstall partitions on some systems true if the volume should be ignored</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageVolume::label</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageVolume.html#a11040636405ea5d0de77dbb061cced8c</field>
    <field name="keywords">label Solid::Ifaces::StorageVolume::label Solid::Ifaces::StorageVolume label Solid::Ifaces::StorageVolume::label Solid::Ifaces::StorageVolume</field>
    <field name="text">the volume lavel if available QString() otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageVolume::size</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageVolume.html#afb960c0dd0fdf436380bb93f4578d348</field>
    <field name="keywords">size Solid::Ifaces::StorageVolume::size Solid::Ifaces::StorageVolume size Solid::Ifaces::StorageVolume::size Solid::Ifaces::StorageVolume</field>
    <field name="text">the size of this volume</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageVolume::usage</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageVolume.html#a809aa18b8d3b5f9ec6cdc296662793a2</field>
    <field name="keywords">usage Solid::Ifaces::StorageVolume::usage Solid::Ifaces::StorageVolume usage Solid::Ifaces::StorageVolume::usage Solid::Ifaces::StorageVolume</field>
    <field name="text">the usage type Solid::StorageVolume::UsageType</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageVolume::uuid</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageVolume.html#a3a9989da25c65e907de33ae683b34bb1</field>
    <field name="keywords">uuid Solid::Ifaces::StorageVolume::uuid Solid::Ifaces::StorageVolume uuid Solid::Ifaces::StorageVolume::uuid Solid::Ifaces::StorageVolume</field>
    <field name="text">You can generally assume that this identifier is unique with reasonable confidence Except if the volume UUID has been forged to intentionally provoke a collision the probability to have two volumes having the same UUID is low the Universal Unique IDentifier if available QString() otherwise</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Ifaces::OpticalDrive</field>
    <field name="url">classSolid_1_1Ifaces_1_1OpticalDrive.html</field>
    <field name="keywords">OpticalDrive</field>
    <field name="text">A Cdrom is a storage that can handle optical discs</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::OpticalDrive::~OpticalDrive</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Ifaces_1_1OpticalDrive.html#a87d88b414c8e0ffbb8ddbeb631a7e38c</field>
    <field name="keywords">Solid::Ifaces::OpticalDrive::~OpticalDrive Solid::Ifaces::OpticalDrive</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::OpticalDrive::eject</field>
    <field name="args">()=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1OpticalDrive.html#acc138d21480f9f11fd1849c566d7ca9b</field>
    <field name="keywords">eject Solid::Ifaces::OpticalDrive::eject Solid::Ifaces::OpticalDrive</field>
    <field name="text">If this drive is empty but has a tray it ll be opened</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::OpticalDrive::readSpeed</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1OpticalDrive.html#a7f4df8d2cca8d5be03e709bc9cbb191c</field>
    <field name="keywords">readSpeed Solid::Ifaces::OpticalDrive::readSpeed Solid::Ifaces::OpticalDrive</field>
    <field name="text">the maximum read speed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::OpticalDrive::supportedMedia</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1OpticalDrive.html#a291fd165a77275fb238b23930ff56bf0</field>
    <field name="keywords">supportedMedia Solid::Ifaces::OpticalDrive::supportedMedia Solid::Ifaces::OpticalDrive</field>
    <field name="text">the flag set indicating the supported medium types</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::OpticalDrive::writeSpeed</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1OpticalDrive.html#a64350faab2fe2245dc27fc4f9c0ae30a</field>
    <field name="keywords">writeSpeed Solid::Ifaces::OpticalDrive::writeSpeed Solid::Ifaces::OpticalDrive</field>
    <field name="text">the maximum write speed</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::OpticalDrive::writeSpeeds</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1OpticalDrive.html#a9571b5d8dfb62ec7a290bbbae0024f13</field>
    <field name="keywords">writeSpeeds Solid::Ifaces::OpticalDrive::writeSpeeds Solid::Ifaces::OpticalDrive</field>
    <field name="text">the list of supported write speeds</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageDrive::~StorageDrive</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageDrive.html#a7d7eed1009aac4ff99650d45ca3f233d</field>
    <field name="keywords">Solid::Ifaces::StorageDrive::~StorageDrive Solid::Ifaces::StorageDrive Solid::Ifaces::StorageDrive::~StorageDrive Solid::Ifaces::StorageDrive</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageDrive::bus</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageDrive.html#ab161dcd6d22da1987c68b2e0842e8ee7</field>
    <field name="keywords">bus Solid::Ifaces::StorageDrive::bus Solid::Ifaces::StorageDrive bus Solid::Ifaces::StorageDrive::bus Solid::Ifaces::StorageDrive</field>
    <field name="text">the bus type Solid::StorageDrive::Bus</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageDrive::driveType</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageDrive.html#a9758b6241fc7595bea5b02d56d4e3125</field>
    <field name="keywords">driveType Solid::Ifaces::StorageDrive::driveType Solid::Ifaces::StorageDrive driveType Solid::Ifaces::StorageDrive::driveType Solid::Ifaces::StorageDrive</field>
    <field name="text">the drive type Solid::StorageDrive::DriveType</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageDrive::isHotpluggable</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageDrive.html#ac3ed5fe8e5f4458f6740248d37960781</field>
    <field name="keywords">isHotpluggable Solid::Ifaces::StorageDrive::isHotpluggable Solid::Ifaces::StorageDrive isHotpluggable Solid::Ifaces::StorageDrive::isHotpluggable Solid::Ifaces::StorageDrive</field>
    <field name="text">true if this storage supports hotplug false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageDrive::isRemovable</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageDrive.html#a6df90ffe662aae79ed4c3ec3ba87c4ea</field>
    <field name="keywords">isRemovable Solid::Ifaces::StorageDrive::isRemovable Solid::Ifaces::StorageDrive isRemovable Solid::Ifaces::StorageDrive::isRemovable Solid::Ifaces::StorageDrive</field>
    <field name="text">For example memory card can be removed from the drive by the user while partitions can t be removed from hard disks true if media can be removed false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageDrive::size</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageDrive.html#acf08fb19708206168c8402a4382d56cb</field>
    <field name="keywords">size Solid::Ifaces::StorageDrive::size Solid::Ifaces::StorageDrive size Solid::Ifaces::StorageDrive::size Solid::Ifaces::StorageDrive</field>
    <field name="text">the size of this drive</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::OpticalDrive::ejectPressed</field>
    <field name="args">(const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1OpticalDrive.html#a94d4fa7d0f85a4b999fca385bdd12915</field>
    <field name="keywords">ejectPressed Solid::Ifaces::OpticalDrive::ejectPressed Solid::Ifaces::OpticalDrive</field>
    <field name="text">Please note that some broken drives doesn t report this event udi the UDI of the drive</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Ifaces::PortableMediaPlayer</field>
    <field name="url">classSolid_1_1Ifaces_1_1PortableMediaPlayer.html</field>
    <field name="keywords">PortableMediaPlayer</field>
    <field name="text">A portable media player is a portable device able to play multimedia files Some of them have even recording capabilities Davide Bettio</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::PortableMediaPlayer::~PortableMediaPlayer</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Ifaces_1_1PortableMediaPlayer.html#a13baf125e63d24685f7c166f135d2a85</field>
    <field name="keywords">Solid::Ifaces::PortableMediaPlayer::~PortableMediaPlayer Solid::Ifaces::PortableMediaPlayer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::PortableMediaPlayer::driverHandle</field>
    <field name="args">(const QString &amp;driver) const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1PortableMediaPlayer.html#ac7833bc860f815adfd5cb7ab744f21da</field>
    <field name="keywords">driverHandle Solid::Ifaces::PortableMediaPlayer::driverHandle Solid::Ifaces::PortableMediaPlayer</field>
    <field name="text">For example for the driver it will return the serial number of the device and driver will return 40-digit device UUID the driver specific data</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::PortableMediaPlayer::supportedDrivers</field>
    <field name="args">(QString protocol=QString()) const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1PortableMediaPlayer.html#a60ca4dbced3de52021c82be0c63b65d3</field>
    <field name="keywords">supportedDrivers Solid::Ifaces::PortableMediaPlayer::supportedDrivers Solid::Ifaces::PortableMediaPlayer</field>
    <field name="text">Possible drivers usb device is talked to using USB This driver alone does not specify which particular USB service/protocol should be used usbmux device supports AFC Apple File Connection and usbmuxd daemon is ready on socket on UNIX and localhost 27015 port on Windows protocol The protocol to get drivers for Specify empty protocol to get drivers for all possible protocols a list of known device drivers that can handle this device</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::PortableMediaPlayer::supportedProtocols</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1PortableMediaPlayer.html#afa4b5df2f7710259202dfb5ceeeb40e8</field>
    <field name="keywords">supportedProtocols Solid::Ifaces::PortableMediaPlayer::supportedProtocols Solid::Ifaces::PortableMediaPlayer</field>
    <field name="text">This list may be dependent on installed device driver libraries Possible protocols storage filesystem-based device can browse and play media files stored on its volume iPod-like devices can have both storage and ipod protocol set you should use more specific ipod protocol in this case ipod iPod-like device where media files are stored on filesystem but these need an entry in device database in order to be playable mtp Media Transfer Protocol-compatible devices a list of known protocols this device can speak</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Ifaces::Processor</field>
    <field name="url">classSolid_1_1Ifaces_1_1Processor.html</field>
    <field name="keywords">Processor</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Processor::~Processor</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Ifaces_1_1Processor.html#a61c8cdbdcb0784e15ae2068c112c0f96</field>
    <field name="keywords">Solid::Ifaces::Processor::~Processor Solid::Ifaces::Processor</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Processor::canChangeFrequency</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Processor.html#ace1b6d51f07004fd87e37e66c5bf66ef</field>
    <field name="keywords">canChangeFrequency Solid::Ifaces::Processor::canChangeFrequency Solid::Ifaces::Processor</field>
    <field name="text">True if a processor is able to change its own CPU frequency generally for power management true if the processor can change CPU frequency false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Processor::instructionSets</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Processor.html#af4c21a1fec0ff69e23283f45cd3d3fd6</field>
    <field name="keywords">instructionSets Solid::Ifaces::Processor::instructionSets Solid::Ifaces::Processor</field>
    <field name="text">the extensions supported by the CPU</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Processor::maxSpeed</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Processor.html#a6be89ffd9dcb56b586799ecaa1c64e75</field>
    <field name="keywords">maxSpeed Solid::Ifaces::Processor::maxSpeed Solid::Ifaces::Processor</field>
    <field name="text">the maximum speed in MHz</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::Processor::number</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1Processor.html#afdbcbc45e2ade2283eff14bbab07a8bf</field>
    <field name="keywords">number Solid::Ifaces::Processor::number Solid::Ifaces::Processor</field>
    <field name="text">the internal processor number in the system starting from zero</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Ifaces::StorageAccess</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageAccess.html</field>
    <field name="keywords">StorageAccess</field>
    <field name="text">A volume is anything that can contain data partition optical disc memory card It s a particular kind of block device</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageAccess::~StorageAccess</field>
    <field name="args">()</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageAccess.html#a1279ea30bb2491e9b2b3a94866779643</field>
    <field name="keywords">Solid::Ifaces::StorageAccess::~StorageAccess Solid::Ifaces::StorageAccess</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageAccess::filePath</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageAccess.html#ae3d68c3fe674a865d42842a538632856</field>
    <field name="keywords">filePath Solid::Ifaces::StorageAccess::filePath Solid::Ifaces::StorageAccess</field>
    <field name="text">the absolute path to the mount point if the volume is mounted QString() otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageAccess::isAccessible</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageAccess.html#aceeb1f907d51849241e1e9d4ce9e9d1a</field>
    <field name="keywords">isAccessible Solid::Ifaces::StorageAccess::isAccessible Solid::Ifaces::StorageAccess</field>
    <field name="text">true if the volume is mounted</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageAccess::isIgnored</field>
    <field name="args">() const =0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageAccess.html#a0a9bcfda5c69ed25f05d749ced3a648a</field>
    <field name="keywords">isIgnored Solid::Ifaces::StorageAccess::isIgnored Solid::Ifaces::StorageAccess</field>
    <field name="text">If it should be ignored it generally means that it should be invisible to the user It s useful for firmware partitions or OS reinstall partitions on some systems true if the volume should be ignored</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageAccess::setup</field>
    <field name="args">()=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageAccess.html#afce0fc2aaa76df0ea57b8492445b8588</field>
    <field name="keywords">setup Solid::Ifaces::StorageAccess::setup Solid::Ifaces::StorageAccess</field>
    <field name="text">the job handling the operation</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageAccess::teardown</field>
    <field name="args">()=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageAccess.html#ad7201f86246296b65a4bf7d8d2bdc66e</field>
    <field name="keywords">teardown Solid::Ifaces::StorageAccess::teardown Solid::Ifaces::StorageAccess</field>
    <field name="text">the job handling the operation</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageAccess::accessibilityChanged</field>
    <field name="args">(bool accessible, const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageAccess.html#a3a37f7e29d4d0344059601c64bc282e1</field>
    <field name="keywords">accessibilityChanged Solid::Ifaces::StorageAccess::accessibilityChanged Solid::Ifaces::StorageAccess</field>
    <field name="text">newState true if the volume is mounted false otherwise udi the UDI of the volume</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageAccess::setupDone</field>
    <field name="args">(Solid::ErrorType error, QVariant resultData, const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageAccess.html#acdff3a9c24196ffaa08f39bf5f315919</field>
    <field name="keywords">setupDone Solid::Ifaces::StorageAccess::setupDone Solid::Ifaces::StorageAccess</field>
    <field name="text">newState true if the volume is mounted false otherwise udi the UDI of the volume</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageAccess::setupRequested</field>
    <field name="args">(const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageAccess.html#a9042b3de25da017e9c30a3dca52f7dba</field>
    <field name="keywords">setupRequested Solid::Ifaces::StorageAccess::setupRequested Solid::Ifaces::StorageAccess</field>
    <field name="text">The signal might be spontaneous i.e it can be triggered by another process udi the UDI of the volume</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageAccess::teardownDone</field>
    <field name="args">(Solid::ErrorType error, QVariant resultData, const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageAccess.html#ac46afff60cd04dd82fb9341a029f8e5b</field>
    <field name="keywords">teardownDone Solid::Ifaces::StorageAccess::teardownDone Solid::Ifaces::StorageAccess</field>
    <field name="text">newState true if the volume is mounted false otherwise udi the UDI of the volume</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Solid::Ifaces::StorageAccess::teardownRequested</field>
    <field name="args">(const QString &amp;udi)=0</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageAccess.html#a234e6fc7265255bca670782604cec8a0</field>
    <field name="keywords">teardownRequested Solid::Ifaces::StorageAccess::teardownRequested Solid::Ifaces::StorageAccess</field>
    <field name="text">The signal might be spontaneous i.e it can be triggered by another process udi the UDI of the volume</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Ifaces::StorageDrive</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageDrive.html</field>
    <field name="keywords">StorageDrive</field>
    <field name="text">A storage is anything that can contain a set of volumes card reader hard disk cdrom drive It s a particular kind of block device</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Solid::Ifaces::StorageVolume</field>
    <field name="url">classSolid_1_1Ifaces_1_1StorageVolume.html</field>
    <field name="keywords">StorageVolume</field>
    <field name="text">A volume is anything that can contain data partition optical disc memory card It s a particular kind of block device</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">index</field>
    <field name="url">index.html</field>
    <field name="keywords"></field>
    <field name="text">Solid Desktop hardware abstraction Introduction Solid is a device integration framework It provides a way of querying and interacting with hardware independently of the underlying operating system It provides the following features for application developers Hardware Discovery Power Management Network Management Usage If you are using CMake you need to have or similar in your CMakeLists.txt file and you need to link to KF5::Solid See the documentation for the Solid namespace and the tutorials on TechBase There is also a Solid song</field>
  </doc>
</add>
