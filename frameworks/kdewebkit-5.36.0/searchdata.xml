<?xml version="1.0" encoding="UTF-8"?>
<add>
  <doc>
    <field name="type">source</field>
    <field name="name">kgraphicswebview.cpp</field>
    <field name="url">kgraphicswebview_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgraphicswebview.cpp</field>
    <field name="url">kgraphicswebview_8cpp_source.html#l00034</field>
    <field name="keywords"></field>
    <field name="text">KGraphicsWebView::KGraphicsWebView QGraphicsItem parent createCustomPage QGraphicsWebView parent d new KWebViewPrivate KGraphicsWebView this createCustomPage setPage KWebPage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgraphicswebview.cpp</field>
    <field name="url">kgraphicswebview_8cpp_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">KGraphicsWebView::~KGraphicsWebView d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgraphicswebview.cpp</field>
    <field name="url">kgraphicswebview_8cpp_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">KGraphicsWebView::isExternalContentAllowed d isExternalContentAllowed</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgraphicswebview.cpp</field>
    <field name="url">kgraphicswebview_8cpp_source.html#l00053</field>
    <field name="keywords"></field>
    <field name="text">KGraphicsWebView::setAllowExternalContent allow d setAllowExternalContent allow</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgraphicswebview.cpp</field>
    <field name="url">kgraphicswebview_8cpp_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">KGraphicsWebView::wheelEvent QGraphicsSceneWheelEvent event d wheelEvent event delta accept QGraphicsWebView::wheelEvent event</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgraphicswebview.cpp</field>
    <field name="url">kgraphicswebview_8cpp_source.html#l00067</field>
    <field name="keywords"></field>
    <field name="text">KGraphicsWebView::mousePressEvent QGraphicsSceneMouseEvent event d pressedButtons buttons d keyboardModifiers modifiers QGraphicsWebView::mousePressEvent event</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgraphicswebview.cpp</field>
    <field name="url">kgraphicswebview_8cpp_source.html#l00074</field>
    <field name="keywords"></field>
    <field name="text">KGraphicsWebView::mouseReleaseEvent QGraphicsSceneMouseEvent event d mouseReleased event pos toPoint d handleUrlPasteFromClipboard event accept QGraphicsWebView::mouseReleaseEvent event</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgraphicswebview.h</field>
    <field name="url">kgraphicswebview_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QUrl KWebViewPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kgraphicswebview.h</field>
    <field name="url">kgraphicswebview_8h_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">KDEWEBKIT_EXPORT KGraphicsWebView QGraphicsWebView Q_OBJECT KGraphicsWebView QGraphicsItem parent createCustomPage KGraphicsWebView isExternalContentAllowed setAllowExternalContent allow Q_SIGNALS KDEWEBKIT_DEPRECATED selectionClipboardUrlPasted QUrl url selectionClipboardUrlPasted QUrl url QString searchText linkShiftClicked QUrl url linkMiddleOrCtrlClicked QUrl url wheelEvent QGraphicsSceneWheelEvent event Q_DECL_OVERRIDE mousePressEvent QGraphicsSceneMouseEvent event Q_DECL_OVERRIDE mouseReleaseEvent QGraphicsSceneMouseEvent event Q_DECL_OVERRIDE KWebViewPrivate KGraphicsWebView KWebViewPrivate&lt;KGraphicsWebView&gt; d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">reloadRequestWithoutDisposition QNetworkReply reply QNetworkRequest req reply request req setRawHeader QWebFrame frame qobject_cast QWebFrame req originatingObject frame frame load req isMimeTypeAssociatedWithSelf KService::Ptr offer offer QString appName QCoreApplication::applicationName appName offer desktopEntryName offer exec trimmed startsWith appName appName QL1S offer exec trimmed startsWith QL1S extractMimeType QNetworkReply reply QString mimeType mimeType clear KIO::MetaData metaData reply attribute static_cast&lt;QNetworkRequest::Attribute&gt; KIO::AccessManager::MetaData toMap metaData contains QL1S mimeType metaData value QL1S mimeType isEmpty reply hasRawHeader QString value QL1S reply rawHeader simplified constData index value indexOf QL1C mimeType index value value left index downloadResource QUrl srcUrl QString suggestedName QString QWidget parent KIO::MetaData metaData KIO::MetaData QString fileName suggestedName isEmpty srcUrl fileName suggestedName QUrl destUrl QUrl::fromLocalFile QFileDialog::getSaveFileName parent QString fileName destUrl isValid KIO::Job job KIO::copy srcUrl destUrl metaData isEmpty job setMetaData metaData job addMetaData QL1S QL1S job addMetaData QL1S QL1S KJobWidgets::setWindow job parent parent window job ui setAutoErrorHandlingEnabled isReplyStatusOk QNetworkReply reply reply reply error QNetworkReply::NoError QString scheme reply url scheme scheme startsWith QLatin1String Qt::CaseInsensitive scheme startsWith QLatin1String Qt::CaseInsensitive ok statusCode reply attribute QNetworkRequest::HttpStatusCodeAttribute toInt ok ok statusCode &lt; 200 || statusCode &gt; KWebPage::KWebPagePrivate KWebPagePrivate KWebPage page q page inPrivateBrowsingMode false QWidget windowWidget window window data q view _k_copyResultToTempFile KJob job KIO::FileCopyJob cJob qobject_cast KIO::FileCopyJob job cJob cJob error void KRun::runUrl cJob destUrl mimeType window _k_receivedContentType KIO::Job job QString mimetype KIO::TransferJob tJob qobject_cast KIO::TransferJob job tJob tJob error tJob putOnHold KIO::Scheduler::publishSlaveOnHold mimeType mimetype QString suggestedFileName tJob queryMetaData QL1S void downloadResource tJob url suggestedFileName window tJob metaData _k_contentTypeCheckFailed KJob job KIO::TransferJob tJob qobject_cast KIO::TransferJob job tJob tJob error void downloadResource tJob url QString window tJob metaData KWebPage q QPointer&lt;QWidget&gt; window QString mimeType QPointer&lt;KWebWallet&gt; wallet inPrivateBrowsingMode setActionIcon QAction action QIcon icon action action setIcon icon setActionShortcut QAction action QList&lt;QKeySequence&gt; shortcut action action setShortcuts shortcut</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00231</field>
    <field name="keywords"></field>
    <field name="text">KWebPage::KWebPage QObject parent Integration flags QWebPage parent d new KWebPagePrivate this flags flags KPartsIntegration setPluginFactory KWebPluginFactory QWidget parentWidget qobject_cast QWidget parent d window parentWidget parentWidget window flags flags KIOIntegration KIO::Integration::AccessManager manager KIO::Integration::AccessManager manager setCache manager setWindow d window manager setEmitReadyReadOnMetaDataChange setNetworkAccessManager manager flags flags KWalletIntegration setWallet KWebWallet d window d window winId setActionIcon action Back QIcon::fromTheme setActionIcon action Forward QIcon::fromTheme setActionIcon action Reload QIcon::fromTheme setActionIcon action Stop QIcon::fromTheme setActionIcon action Cut QIcon::fromTheme setActionIcon action Copy QIcon::fromTheme setActionIcon action Paste QIcon::fromTheme setActionIcon action Undo QIcon::fromTheme setActionIcon action Redo QIcon::fromTheme setActionIcon action SelectAll QIcon::fromTheme setActionIcon action InspectElement QIcon::fromTheme setActionIcon action OpenLinkInNewWindow QIcon::fromTheme setActionIcon action OpenFrameInNewWindow QIcon::fromTheme setActionIcon action OpenImageInNewWindow QIcon::fromTheme setActionIcon action CopyLinkToClipboard QIcon::fromTheme setActionIcon action CopyImageToClipboard QIcon::fromTheme setActionIcon action ToggleBold QIcon::fromTheme setActionIcon action ToggleItalic QIcon::fromTheme setActionIcon action ToggleUnderline QIcon::fromTheme setActionIcon action DownloadLinkToDisk QIcon::fromTheme setActionIcon action DownloadImageToDisk QIcon::fromTheme settings setWebGraphic QWebSettings::MissingPluginGraphic QIcon::fromTheme pixmap settings setWebGraphic QWebSettings::MissingImageGraphic QIcon::fromTheme pixmap settings setWebGraphic QWebSettings::DefaultFrameIconGraphic QIcon::fromTheme pixmap setActionShortcut action Back KStandardShortcut::back setActionShortcut action Forward KStandardShortcut::forward setActionShortcut action Reload KStandardShortcut::reload setActionShortcut action Stop QList&lt;QKeySequence&gt; QKeySequence Qt::Key_Escape setActionShortcut action Cut KStandardShortcut::cut setActionShortcut action Copy KStandardShortcut::copy setActionShortcut action Paste KStandardShortcut::paste setActionShortcut action Undo KStandardShortcut::undo setActionShortcut action Redo KStandardShortcut::redo setActionShortcut action SelectAll KStandardShortcut::selectAll</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00295</field>
    <field name="keywords"></field>
    <field name="text">KWebPage::~KWebPage d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00300</field>
    <field name="keywords"></field>
    <field name="text">KWebPage::isExternalContentAllowed KIO::AccessManager manager qobject_cast KIO::AccessManager networkAccessManager manager manager isExternalContentAllowed</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00309</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet KWebPage::wallet d wallet</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00314</field>
    <field name="keywords"></field>
    <field name="text">KWebPage::setAllowExternalContent allow KIO::AccessManager manager qobject_cast KIO::AccessManager networkAccessManager manager manager setExternalContentAllowed allow</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00322</field>
    <field name="keywords"></field>
    <field name="text">KWebPage::setWallet KWebWallet wallet d wallet d wallet parent d wallet d wallet wallet d wallet d wallet setParent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00336</field>
    <field name="keywords"></field>
    <field name="text">KWebPage::downloadRequest QNetworkRequest request KIO::TransferJob job KIO::get request url connect job SIGNAL mimetype KIO::Job QString SLOT _k_receivedContentType KIO::Job QString job setMetaData request attribute static_cast&lt;QNetworkRequest::Attribute&gt; KIO::AccessManager::MetaData toMap job addMetaData QL1S QL1S job addMetaData QL1S QL1S KJobWidgets::setWindow job d windowWidget</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00348</field>
    <field name="keywords"></field>
    <field name="text">KWebPage::downloadUrl QUrl url downloadRequest QNetworkRequest url</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00353</field>
    <field name="keywords"></field>
    <field name="text">KWebPage::downloadResponse QNetworkReply reply Q_ASSERT reply reply KIO::Integration::AccessManager::putReplyOnHold reply QString mimeType KIO::MetaData metaData handleReply reply mimeType metaData QUrl replyUrl reply url mimeType isEmpty void KRun replyUrl d windowWidget mimeType startsWith QL1S Qt::CaseInsensitive KRun::runUrl replyUrl mimeType d windowWidget metaData value QL1S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00387</field>
    <field name="keywords"></field>
    <field name="text">QString KWebPage::sessionMetaData QString key QString value KIO::Integration::AccessManager manager qobject_cast KIO::Integration::AccessManager networkAccessManager manager value manager sessionMetaData value key value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00399</field>
    <field name="keywords"></field>
    <field name="text">QString KWebPage::requestMetaData QString key QString value KIO::Integration::AccessManager manager qobject_cast KIO::Integration::AccessManager networkAccessManager manager value manager requestMetaData value key value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00411</field>
    <field name="keywords"></field>
    <field name="text">KWebPage::setSessionMetaData QString key QString value KIO::Integration::AccessManager manager qobject_cast KIO::Integration::AccessManager networkAccessManager manager manager sessionMetaData key value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00419</field>
    <field name="keywords"></field>
    <field name="text">KWebPage::setRequestMetaData QString key QString value KIO::Integration::AccessManager manager qobject_cast KIO::Integration::AccessManager networkAccessManager manager manager requestMetaData key value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00427</field>
    <field name="keywords"></field>
    <field name="text">KWebPage::removeSessionMetaData QString key KIO::Integration::AccessManager manager qobject_cast KIO::Integration::AccessManager networkAccessManager manager manager sessionMetaData remove key</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00435</field>
    <field name="keywords"></field>
    <field name="text">KWebPage::removeRequestMetaData QString key KIO::Integration::AccessManager manager qobject_cast KIO::Integration::AccessManager networkAccessManager manager manager requestMetaData remove key</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00443</field>
    <field name="keywords"></field>
    <field name="text">QString KWebPage::userAgentForUrl QUrl _url QUrl url _url QString userAgent KProtocolManager::userAgentForHost url isLocalFile QL1S url host userAgent KProtocolManager::defaultUserAgent QWebPage::userAgentForUrl _url userAgent setDisableCookieJarStorage QNetworkAccessManager manager status manager KIO::Integration::CookieJar cookieJar manager qobject_cast KIO::Integration::CookieJar manager cookieJar cookieJar cookieJar setDisableCookieStorage status</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00466</field>
    <field name="keywords"></field>
    <field name="text">KWebPage::acceptNavigationRequest QWebFrame frame QNetworkRequest request NavigationType type frame d wallet type QWebPage::NavigationTypeFormSubmitted d wallet saveFormData frame settings testAttribute QWebSettings::PrivateBrowsingEnabled d inPrivateBrowsingMode setDisableCookieJarStorage networkAccessManager setSessionMetaData QL1S QL1S d inPrivateBrowsingMode d inPrivateBrowsingMode setDisableCookieJarStorage networkAccessManager removeSessionMetaData QL1S d inPrivateBrowsingMode frame mainFrame type QWebPage::NavigationTypeReload setSessionMetaData QL1S request url toString QWebPage::acceptNavigationRequest frame request type</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.cpp</field>
    <field name="url">kwebpage_8cpp_source.html#l00500</field>
    <field name="keywords"></field>
    <field name="text">KWebPage::handleReply QNetworkReply reply QString contentType KIO::MetaData metaData QUrl replyUrl reply url KIO::MetaData data reply attribute static_cast&lt;QNetworkRequest::Attribute&gt; KIO::AccessManager::MetaData toMap QString suggestedFileName data value QL1S metaData metaData data QString mimeType extractMimeType reply mimeType contentType contentType mimeType mimeType isEmpty mimeType startsWith QL1S Qt::CaseInsensitive KParts::BrowserRun::isTextExecutable mimeType mimeType QL1S isReplyStatusOk reply KParts::BrowserOpenOrSaveQuestion::Result result KParts::BrowserOpenOrSaveQuestion dlg d windowWidget replyUrl mimeType dlg setSuggestedFileName suggestedFileName dlg setFeatures KParts::BrowserOpenOrSaveQuestion::ServiceSelection result dlg askOpenOrSave result KParts::BrowserOpenOrSaveQuestion::Open reply operation QNetworkAccessManager::PostOperation d mimeType mimeType QFileInfo finfo suggestedFileName isEmpty replyUrl fileName suggestedFileName QTemporaryFile tempFile QDir::tempPath QLatin1String finfo suffix tempFile setAutoRemove tempFile open QUrl destUrl QUrl::fromLocalFile tempFile fileName KIO::Job job KIO::file_copy replyUrl destUrl KIO::Overwrite KJobWidgets::setWindow job d windowWidget job ui setAutoErrorHandlingEnabled connect job SIGNAL result KJob SLOT _k_copyResultToTempFile KJob KParts::BrowserRun::allowExecution mimeType replyUrl KService::Ptr offer dlg selectedService isMimeTypeAssociatedWithSelf offer reloadRequestWithoutDisposition reply QList&lt;QUrl&gt; list list append replyUrl success offer success KRun::run offer list d windowWidget suggestedFileName success KRun::displayOpenWithDialog list d windowWidget suggestedFileName success success offer offer categories contains QL1S KIO::SimpleJob::removeOnHold KParts::BrowserOpenOrSaveQuestion::Save replyUrl isLocalFile QString downloadCmd reply property toString downloadCmd isEmpty downloadCmd QLatin1Char downloadCmd KShell::quoteArg replyUrl url suggestedFileName isEmpty downloadCmd QLatin1Char downloadCmd KShell::quoteArg suggestedFileName KRun::runCommand downloadCmd view downloadResource replyUrl suggestedFileName d windowWidget KParts::BrowserOpenOrSaveQuestion::Cancel KIO::SimpleJob::removeOnHold KService::Ptr offer KMimeTypeTrader::self preferredService mimeType isMimeTypeAssociatedWithSelf offer reloadRequestWithoutDisposition reply</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.h</field>
    <field name="url">kwebpage_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet KJob KIO MetaData Job</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.h</field>
    <field name="url">kwebpage_8h_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text">KDEWEBKIT_EXPORT KWebPage QWebPage Q_OBJECT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.h</field>
    <field name="url">kwebpage_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text">IntegrationFlags</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.h</field>
    <field name="url">kwebpage_8h_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text">NoIntegration</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.h</field>
    <field name="url">kwebpage_8h_source.html#l00094</field>
    <field name="keywords"></field>
    <field name="text">KIOIntegration</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.h</field>
    <field name="url">kwebpage_8h_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text">KPartsIntegration</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpage.h</field>
    <field name="url">kwebpage_8h_source.html#l00106</field>
    <field name="keywords"></field>
    <field name="text">KWalletIntegration Q_DECLARE_FLAGS Integration IntegrationFlags Q_FLAG Integration KWebPage QObject parent Integration flags Integration KWebPage isExternalContentAllowed KWebWallet wallet setAllowExternalContent allow setWallet KWebWallet wallet Q_SLOTS downloadRequest QNetworkRequest request downloadUrl QUrl url downloadResponse QNetworkReply reply QString sessionMetaData QString key QString requestMetaData QString key setSessionMetaData QString key QString value setRequestMetaData QString key QString value removeSessionMetaData QString key removeRequestMetaData QString key QString userAgentForUrl QUrl url Q_DECL_OVERRIDE acceptNavigationRequest QWebFrame frame QNetworkRequest request NavigationType type Q_DECL_OVERRIDE handleReply QNetworkReply reply QString contentType KIO::MetaData metaData KWebPagePrivate KWebPagePrivate d Q_PRIVATE_SLOT d _k_copyResultToTempFile KJob Q_PRIVATE_SLOT d _k_receivedContentType KIO::Job QString Q_PRIVATE_SLOT d _k_contentTypeCheckFailed KJob Q_DECLARE_OPERATORS_FOR_FLAGS KWebPage::Integration</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpluginfactory.cpp</field>
    <field name="url">kwebpluginfactory_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpluginfactory.cpp</field>
    <field name="url">kwebpluginfactory_8cpp_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">KWebPluginFactory::KWebPluginFactory QObject parent QWebPluginFactory parent d nullptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpluginfactory.cpp</field>
    <field name="url">kwebpluginfactory_8cpp_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">KWebPluginFactory::~KWebPluginFactory</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpluginfactory.cpp</field>
    <field name="url">kwebpluginfactory_8cpp_source.html#l00058</field>
    <field name="keywords"></field>
    <field name="text">QObject KWebPluginFactory::create QString _mimeType QUrl url QStringList argumentNames QStringList argumentValues QString mimeType _mimeType trimmed mimeType isEmpty extractGuessedMimeType url mimeType KParts::ReadOnlyPart part excludedMimeType mimeType nullptr createPartInstanceFrom mimeType argumentNames argumentValues parent part QMap&lt;QString, QString&gt; metaData part arguments metaData QString urlStr url toString QUrl::RemovePath QUrl::RemoveQuery QUrl::RemoveFragment metaData insert metaData insert urlStr metaData insert urlStr metaData insert metaData insert KWebPage page qobject_cast KWebPage parent page QString scheme page currentFrame url scheme page QString::compare scheme QL1S Qt::CaseInsensitive QString::compare scheme QL1S Qt::CaseInsensitive metaData insert metaData insert KParts::OpenUrlArguments openUrlArgs part arguments openUrlArgs metaData metaData openUrlArgs setMimeType mimeType part setArguments openUrlArgs part openUrl url part widget</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpluginfactory.cpp</field>
    <field name="url">kwebpluginfactory_8cpp_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KWebPluginFactory::Plugin&gt; KWebPluginFactory::plugins QList&lt;Plugin&gt; plugins plugins isHttpProtocol QUrl url QString scheme url scheme scheme startsWith QL1S Qt::CaseInsensitive scheme startsWith QL1S Qt::CaseInsensitive</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpluginfactory.cpp</field>
    <field name="url">kwebpluginfactory_8cpp_source.html#l00120</field>
    <field name="keywords"></field>
    <field name="text">KWebPluginFactory::extractGuessedMimeType QUrl url QString mimeType mimeType QUrl reqUrl isHttpProtocol url QUrl url path url QMimeDatabase db QMimeType mime db mimeTypeForFile reqUrl path QMimeDatabase::MatchExtension mime isDefault mime name startsWith QL1S mimeType mime name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpluginfactory.cpp</field>
    <field name="url">kwebpluginfactory_8cpp_source.html#l00132</field>
    <field name="keywords"></field>
    <field name="text">KParts::ReadOnlyPart KWebPluginFactory::createPartInstanceFrom QString mimeType QStringList argumentNames QStringList argumentValues QWidget parentWidget QObject parentObj KParts::ReadOnlyPart part mimeType isEmpty QVariantList arguments count argumentNames count i i count i arguments QString argumentNames at i QL1S argumentValues at i QL1C part KMimeTypeTrader::createPartInstanceFromQuery&lt;KParts::ReadOnlyPart&gt; mimeType parentWidget parentObj QString arguments part</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpluginfactory.cpp</field>
    <field name="url">kwebpluginfactory_8cpp_source.html#l00154</field>
    <field name="keywords"></field>
    <field name="text">KWebPluginFactory::excludedMimeType QString mimeType mimeType startsWith QL1S Qt::CaseInsensitive mimeType startsWith QL1S Qt::CaseInsensitive mimeType QL1S mimeType QL1S</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpluginfactory.h</field>
    <field name="url">kwebpluginfactory_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KParts ReadOnlyPart</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebpluginfactory.h</field>
    <field name="url">kwebpluginfactory_8h_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">KDEWEBKIT_EXPORT KWebPluginFactory QWebPluginFactory Q_OBJECT KWebPluginFactory QObject parent KWebPluginFactory QObject create QString mimeType QUrl url QStringList argumentNames QStringList argumentValues Q_DECL_OVERRIDE QList&lt;Plugin&gt; plugins Q_DECL_OVERRIDE extractGuessedMimeType QUrl url QString mimeType excludedMimeType QString mimeType KParts::ReadOnlyPart createPartInstanceFrom QString mimeType QStringList argumentNames QStringList argumentValues QWidget parentWidget QObject parent KWebPluginFactoryPrivate KWebPluginFactoryPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebview.cpp</field>
    <field name="url">kwebview_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebview.cpp</field>
    <field name="url">kwebview_8cpp_source.html#l00033</field>
    <field name="keywords"></field>
    <field name="text">KWebView::KWebView QWidget parent createCustomPage QWebView parent d new KWebViewPrivate KWebView this createCustomPage setPage KWebPage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebview.cpp</field>
    <field name="url">kwebview_8cpp_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">KWebView::~KWebView d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebview.cpp</field>
    <field name="url">kwebview_8cpp_source.html#l00046</field>
    <field name="keywords"></field>
    <field name="text">KWebView::isExternalContentAllowed d isExternalContentAllowed</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebview.cpp</field>
    <field name="url">kwebview_8cpp_source.html#l00051</field>
    <field name="keywords"></field>
    <field name="text">KWebView::setAllowExternalContent allow d setAllowExternalContent allow</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebview.cpp</field>
    <field name="url">kwebview_8cpp_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">KWebView::wheelEvent QWheelEvent event d wheelEvent event delta accept QWebView::wheelEvent event</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebview.cpp</field>
    <field name="url">kwebview_8cpp_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">KWebView::mousePressEvent QMouseEvent event d pressedButtons buttons d keyboardModifiers modifiers QWebView::mousePressEvent event</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebview.cpp</field>
    <field name="url">kwebview_8cpp_source.html#l00072</field>
    <field name="keywords"></field>
    <field name="text">KWebView::mouseReleaseEvent QMouseEvent event d mouseReleased event pos d handleUrlPasteFromClipboard event accept QWebView::mouseReleaseEvent event</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebview.h</field>
    <field name="url">kwebview_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QUrl KWebViewPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebview.h</field>
    <field name="url">kwebview_8h_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">KDEWEBKIT_EXPORT KWebView QWebView Q_OBJECT Q_PROPERTY externalContentAllowed READ isExternalContentAllowed WRITE setAllowExternalContent KWebView QWidget parent createCustomPage KWebView isExternalContentAllowed setAllowExternalContent allow Q_SIGNALS KDEWEBKIT_DEPRECATED selectionClipboardUrlPasted QUrl url selectionClipboardUrlPasted QUrl url QString searchText linkShiftClicked QUrl url linkMiddleOrCtrlClicked QUrl url wheelEvent QWheelEvent event Q_DECL_OVERRIDE mousePressEvent QMouseEvent event Q_DECL_OVERRIDE mouseReleaseEvent QMouseEvent event Q_DECL_OVERRIDE KWebViewPrivate KWebView KWebViewPrivate&lt;KWebView&gt; d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.cpp</field>
    <field name="url">kwebwallet_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QString walletKey KWebWallet::WebForm form QString key form url toString QUrl::RemoveQuery QUrl::RemoveFragment key QL1C key form name key collectAllChildFrames QWebFrame frame QList&lt;QWebFrame *&gt; list list frame childFrames QListIterator&lt;QWebFrame *&gt; it frame childFrames it hasNext collectAllChildFrames it next list QUrl urlForFrame QWebFrame frame frame url isEmpty frame baseUrl resolved frame url frame url QWidget topLevelWindow QObject obj QWebPage page qobject_cast QWebPage obj QWidget widget page page view qobject_cast QWidget page widget widget parentWidget widget widget parentWidget widget widget window KWebWallet::KWebWalletPrivate FormsData QPointer&lt;QWebFrame&gt; frame KWebWallet::WebFormList forms KWebWalletPrivate KWebWallet parent KWebWallet::WebFormList parseFormData QWebFrame frame fillform ignorepasswd fillDataFromCache KWebWallet::WebFormList formList saveDataToCache QString key removeDataFromCache WebFormList formList openWallet _k_openWalletDone _k_walletClosed WId wid KWebWallet q QScopedPointer&lt;KWallet::Wallet&gt; wallet KWebWallet::WebFormList pendingRemoveRequests QHash&lt;QUrl, FormsData&gt; pendingFillRequests QHash&lt;QString, KWebWallet::WebFormList&gt; pendingSaveRequests QSet&lt;QUrl&gt; confirmSaveRequestOverwrites KWebWallet::KWebWalletPrivate::KWebWalletPrivate KWebWallet parent wid q parent KWebWallet::WebFormList KWebWallet::KWebWalletPrivate::parseFormData QWebFrame frame fillform ignorepasswd Q_ASSERT frame KWebWallet::WebFormList list QVariant result frame evaluateJavaScript QL1S FILLABLE_FORM_ELEMENT_EXTRACTOR_JS QVariantList results result toList Q_FOREACH QVariant formVariant results QVariantMap map formVariant toMap KWebWallet::WebForm form form url urlForFrame frame form name map QL1S toString form index map QL1S toString formHasPasswords QVariantList elements map QL1S toList QList&lt;KWebWallet::WebForm::WebField&gt; inputFields Q_FOREACH QVariant element elements QVariantMap elementMap element toMap QString name elementMap QL1S toString QString value ignorepasswd QString elementMap QL1S toString name isEmpty fillform elementMap QL1S toBool elementMap QL1S toString compare QL1S Qt::CaseInsensitive fillform value isEmpty formHasPasswords inputFields append qMakePair name value formHasPasswords fillform form fields inputFields fillform q hasCachedFormData form fillform form fields isEmpty list form list KWebWallet::KWebWalletPrivate::fillDataFromCache KWebWallet::WebFormList formList wallet qWarning QString lastKey QMap&lt;QString, QString&gt; cachedValues QMutableListIterator &lt;WebForm&gt; formIt formList formIt hasNext KWebWallet::WebForm form formIt next QString key walletKey form key lastKey wallet readMap key cachedValues qWarning key i count form fields count i count i form fields i second cachedValues value form fields i first lastKey key KWebWallet::KWebWalletPrivate::saveDataToCache QString key pendingSaveRequests contains key success QUrl url pendingSaveRequests value key first url wallet count KWebWallet::WebFormList list pendingSaveRequests value key QListIterator&lt;KWebWallet::WebForm&gt; formIt list formIt hasNext QMap&lt;QString, QString&gt; values storedValues KWebWallet::WebForm form formIt next QString accessKey walletKey form confirmSaveRequestOverwrites contains url confirmSaveRequestOverwrites remove url status wallet readMap accessKey storedValues status storedValues count QListIterator&lt;KWebWallet::WebForm::WebField&gt; fieldIt form fields fieldIt hasNext KWebWallet::WebForm::WebField field fieldIt next storedValues contains field first storedValues value field first field second emit q saveFormDataRequested key url success QListIterator&lt;KWebWallet::WebForm::WebField&gt; fieldIt form fields fieldIt hasNext KWebWallet::WebForm::WebField field fieldIt next values insert field first field second wallet writeMap accessKey values count qWarning list isEmpty count success pendingSaveRequests remove key qWarning emit q saveFormDataCompleted url success KWebWallet::KWebWalletPrivate::openWallet wallet isNull wallet reset KWallet::Wallet::openWallet KWallet::Wallet::NetworkWallet wid KWallet::Wallet::Asynchronous wallet isNull connect wallet data SIGNAL walletOpened q SLOT _k_openWalletDone connect wallet data SIGNAL walletClosed q SLOT _k_walletClosed KWebWallet::KWebWalletPrivate::removeDataFromCache WebFormList formList wallet qWarning QListIterator&lt;WebForm&gt; formIt formList formIt hasNext wallet removeEntry walletKey formIt next KWebWallet::KWebWalletPrivate::_k_openWalletDone ok Q_ASSERT wallet ok wallet hasFolder KWallet::Wallet::FormDataFolder wallet createFolder KWallet::Wallet::FormDataFolder wallet setFolder KWallet::Wallet::FormDataFolder pendingFillRequests isEmpty QList&lt;QUrl&gt; urlList QMutableHashIterator&lt;QUrl, FormsData&gt; requestIt pendingFillRequests requestIt hasNext requestIt next KWebWallet::WebFormList list requestIt value forms fillDataFromCache list q fillWebForm requestIt key list pendingFillRequests clear pendingSaveRequests isEmpty QListIterator&lt;QString&gt; keysIt pendingSaveRequests keys keysIt hasNext saveDataToCache keysIt next pendingRemoveRequests isEmpty removeDataFromCache pendingRemoveRequests pendingRemoveRequests clear wallet take KWebWallet::KWebWalletPrivate::_k_walletClosed wallet wallet take deleteLater emit q walletClosed</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.cpp</field>
    <field name="url">kwebwallet_8cpp_source.html#l00383</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet::KWebWallet QObject parent WId wid QObject parent d new KWebWalletPrivate this wid QWidget widget topLevelWindow parent widget wid widget winId d wid wid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.cpp</field>
    <field name="url">kwebwallet_8cpp_source.html#l00398</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet::~KWebWallet d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.cpp</field>
    <field name="url">kwebwallet_8cpp_source.html#l00403</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet::WebFormList KWebWallet::formsWithCachedData QWebFrame frame recursive WebFormList list frame list d parseFormData frame recursive QList&lt;QWebFrame *&gt; childFrameList collectAllChildFrames frame childFrameList QListIterator &lt;QWebFrame *&gt; framesIt childFrameList framesIt hasNext list d parseFormData framesIt next list</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.cpp</field>
    <field name="url">kwebwallet_8cpp_source.html#l00423</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet::fillFormData QWebFrame frame recursive frame QList&lt;QUrl&gt; urlList WebFormList formsList d parseFormData frame formsList isEmpty QUrl url urlForFrame frame d pendingFillRequests contains url qWarning KWebWalletPrivate::FormsData data data frame QPointer&lt;QWebFrame&gt; frame data forms formsList d pendingFillRequests insert url data urlList url recursive QList&lt;QWebFrame *&gt; childFrameList collectAllChildFrames frame childFrameList QListIterator&lt;QWebFrame *&gt; frameIt childFrameList frameIt hasNext QWebFrame childFrame frameIt next formsList d parseFormData childFrame formsList isEmpty QUrl url childFrame url d pendingFillRequests contains url qWarning KWebWalletPrivate::FormsData data data frame QPointer&lt;QWebFrame&gt; childFrame data forms formsList d pendingFillRequests insert url data urlList url urlList isEmpty fillFormDataFromCache urlList createSaveKeyFor QWebFrame frame QString key QUrl frameUrl urlForFrame frame frameUrl setPassword QString frameUrl setPassword QString QString keyStr frameUrl toString frame frameName isEmpty keyStr frame frameName key QString::number qHash keyStr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.cpp</field>
    <field name="url">kwebwallet_8cpp_source.html#l00486</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet::saveFormData QWebFrame frame recursive ignorePasswordFields frame QString key createSaveKeyFor frame key d pendingSaveRequests contains key WebFormList list d parseFormData frame ignorePasswordFields recursive QList&lt;QWebFrame *&gt; childFrameList collectAllChildFrames frame childFrameList QListIterator&lt;QWebFrame *&gt; frameIt childFrameList frameIt hasNext list d parseFormData frameIt next ignorePasswordFields list isEmpty d pendingSaveRequests insert key list QMutableListIterator&lt;WebForm&gt; it list it hasNext WebForm form it next hasCachedFormData form it remove list isEmpty d confirmSaveRequestOverwrites insert urlForFrame frame saveFormDataToCache key emit saveFormDataRequested key urlForFrame frame</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.cpp</field>
    <field name="url">kwebwallet_8cpp_source.html#l00531</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet::removeFormData QWebFrame frame recursive frame removeFormDataFromCache formsWithCachedData frame recursive</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.cpp</field>
    <field name="url">kwebwallet_8cpp_source.html#l00538</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet::removeFormData WebFormList forms d pendingRemoveRequests forms removeFormDataFromCache forms</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.cpp</field>
    <field name="url">kwebwallet_8cpp_source.html#l00544</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet::acceptSaveFormDataRequest QString key saveFormDataToCache key</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.cpp</field>
    <field name="url">kwebwallet_8cpp_source.html#l00549</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet::rejectSaveFormDataRequest QString key d pendingSaveRequests remove key</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.cpp</field>
    <field name="url">kwebwallet_8cpp_source.html#l00554</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet::fillWebForm QUrl url KWebWallet::WebFormList forms QPointer&lt;QWebFrame&gt; frame d pendingFillRequests value url frame frame QString script wasFilled Q_FOREACH KWebWallet::WebForm form forms Q_FOREACH KWebWallet::WebForm::WebField field form fields QString value field second value replace QL1C QL1S script QString::fromLatin1 arg form name isEmpty form index form name arg field first arg value script isEmpty wasFilled frame data evaluateJavaScript script emit fillFormRequestCompleted wasFilled</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.cpp</field>
    <field name="url">kwebwallet_8cpp_source.html#l00582</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet::WebFormList KWebWallet::formsToFill QUrl url d pendingFillRequests value url forms</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.cpp</field>
    <field name="url">kwebwallet_8cpp_source.html#l00587</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet::WebFormList KWebWallet::formsToSave QString key d pendingSaveRequests value key</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.cpp</field>
    <field name="url">kwebwallet_8cpp_source.html#l00592</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet::hasCachedFormData WebForm form KWallet::Wallet::keyDoesNotExist KWallet::Wallet::NetworkWallet KWallet::Wallet::FormDataFolder walletKey form</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.cpp</field>
    <field name="url">kwebwallet_8cpp_source.html#l00599</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet::fillFormDataFromCache QList&lt;QUrl&gt; urlList d wallet QListIterator&lt;QUrl&gt; urlIt urlList urlIt hasNext QUrl url urlIt next WebFormList list formsToFill url d fillDataFromCache list fillWebForm url list d pendingFillRequests clear d openWallet</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.cpp</field>
    <field name="url">kwebwallet_8cpp_source.html#l00614</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet::saveFormDataToCache QString key d wallet d saveDataToCache key d openWallet</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.cpp</field>
    <field name="url">kwebwallet_8cpp_source.html#l00623</field>
    <field name="keywords"></field>
    <field name="text">KWebWallet::removeFormDataFromCache WebFormList forms d wallet d removeDataFromCache forms d pendingRemoveRequests clear d openWallet</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.h</field>
    <field name="url">kwebwallet_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QWebFrame QWebPage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.h</field>
    <field name="url">kwebwallet_8h_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">KDEWEBKIT_EXPORT KWebWallet QObject Q_OBJECT</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.h</field>
    <field name="url">kwebwallet_8h_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">WebForm</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.h</field>
    <field name="url">kwebwallet_8h_source.html#l00076</field>
    <field name="keywords"></field>
    <field name="text">QPair&lt;QString, QString&gt; WebField</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.h</field>
    <field name="url">kwebwallet_8h_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text">QUrl url</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.h</field>
    <field name="url">kwebwallet_8h_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">QString name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.h</field>
    <field name="url">kwebwallet_8h_source.html#l00083</field>
    <field name="keywords"></field>
    <field name="text">QString index</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.h</field>
    <field name="url">kwebwallet_8h_source.html#l00085</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;WebField&gt; fields</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kwebwallet.h</field>
    <field name="url">kwebwallet_8h_source.html#l00091</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;WebForm&gt; WebFormList KWebWallet QObject parent WId wid KWebWallet WebFormList formsWithCachedData QWebFrame frame recursive saveFormData QWebFrame frame recursive ignorePasswordFields fillFormData QWebFrame frame recursive removeFormData QWebFrame frame recursive removeFormData WebFormList forms Q_SLOTS acceptSaveFormDataRequest QString key rejectSaveFormDataRequest QString key Q_SIGNALS saveFormDataRequested QString key QUrl url saveFormDataCompleted QUrl url ok fillFormRequestCompleted ok walletClosed WebFormList formsToFill QUrl url WebFormList formsToSave QString key WebFormList formsToDelete hasCachedFormData WebForm form fillWebForm QUrl url WebFormList forms fillFormDataFromCache QList&lt;QUrl&gt; list saveFormDataToCache QString key removeFormDataFromCache WebFormList forms KWebWalletPrivate KWebWalletPrivate KWebWalletPrivate d Q_PRIVATE_SLOT d _k_openWalletDone Q_PRIVATE_SLOT d _k_walletClosed</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">deprecated</field>
    <field name="url">deprecated.html</field>
    <field name="keywords"></field>
    <field name="text">Deprecated List Member KGraphicsWebView selectionClipboardUrlPasted const QUrl url use selectionClipboardUrlPasted(QUrl, bool) instead Member KWebView selectionClipboardUrlPasted const QUrl url use selectionClipboardUrlPasted(QUrl, bool) instead</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KGraphicsWebView</field>
    <field name="url">classKGraphicsWebView.html</field>
    <field name="keywords">KGraphicsWebView</field>
    <field name="text">This is a drop-in replacement for QGraphicsWebView that provides full KDE frameworks integration through the use of KWebPage It also provides signals that capture middle shift and ctrl mouse clicks on links and URL pasting from the selection clipboard The specific functionality provided by this class over and above what would be acheived by using KWebPage with a QGraphicsWebView is that scrolling with the mouse wheel while holding down CTRL zooms the page see QGraphicsWebView::setZoomFactor and several useful signals are emitted when the user performs certain actions Urs Wolfer uwolfer kde.org Dawit Alemayehu adawit kde.org 4.4</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KGraphicsWebView::linkMiddleOrCtrlClicked</field>
    <field name="args">(const QUrl &amp;url)</field>
    <field name="url">classKGraphicsWebView.html#a3bcb21b42662022ff8256e5b3e4bfd32</field>
    <field name="keywords">linkMiddleOrCtrlClicked KGraphicsWebView::linkMiddleOrCtrlClicked KGraphicsWebView</field>
    <field name="text">Typically the user would expect this to result in the URL being opened in a new tab or window url the URL of the clicked link</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KGraphicsWebView::linkShiftClicked</field>
    <field name="args">(const QUrl &amp;url)</field>
    <field name="url">classKGraphicsWebView.html#a45cbfda830c680d90180acf42cfa1975</field>
    <field name="keywords">linkShiftClicked KGraphicsWebView::linkShiftClicked KGraphicsWebView</field>
    <field name="text">A user of Plasma Desktop would typically expect this to result in the triggering of a action url the URL of the clicked link</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KGraphicsWebView::selectionClipboardUrlPasted</field>
    <field name="args">(const QUrl &amp;url)</field>
    <field name="url">classKGraphicsWebView.html#a5c7801a846d8e3ae9e982219b77319f0</field>
    <field name="keywords">selectionClipboardUrlPasted KGraphicsWebView::selectionClipboardUrlPasted KGraphicsWebView</field>
    <field name="text">This is triggered when the user clicks on the page with the middle mouse button when there is something in the global mouse selection clipboard This is typically only possible on X11 Uri filters are applied to the selection clipboard to generate url If the content in the selection clipboard is not a valid url and a default search engine is configured url will be set to a query to the default search engine url url generated from the selection clipboard content use selectionClipboardUrlPasted(QUrl, bool) instead QClipboard</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KGraphicsWebView::selectionClipboardUrlPasted</field>
    <field name="args">(const QUrl &amp;url, const QString &amp;searchText)</field>
    <field name="url">classKGraphicsWebView.html#ac4c1f9e4453f9e2eaeb25888993321b3</field>
    <field name="keywords">selectionClipboardUrlPasted KGraphicsWebView::selectionClipboardUrlPasted KGraphicsWebView</field>
    <field name="text">This is triggered when the user clicks on the page with the middle mouse button when there is something in the global mouse selection clipboard This is typically only possible on X11 Uri filters are applied to the selection clipboard to generate url If the content in the selection clipboard is not a valid URL and a default search engine is configured searchText will be set to the content of the clipboard 250 characters maximum and url will be set to a query to the default search engine url the URL generated from the selection clipboard content searchText content of the selection clipboard if it is not a valid URL KUriFilter QClipboard 4.6</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGraphicsWebView::KGraphicsWebView</field>
    <field name="args">(QGraphicsItem *parent=nullptr, bool createCustomPage=true)</field>
    <field name="url">classKGraphicsWebView.html#abd715540c55873f449f3c3025e5531cf</field>
    <field name="keywords">KGraphicsWebView KGraphicsWebView::KGraphicsWebView KGraphicsWebView</field>
    <field name="text">Set createCustomPage to false to prevent the creation of a KWebPage object for KDE frameworks integration Doing so allows you to avoid unnecessary object creation and deletion if you are going to use a subclass of KWebPage parent the parent object createCustomPage if true the view s page is set to an instance of KWebPage</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGraphicsWebView::~KGraphicsWebView</field>
    <field name="args">()</field>
    <field name="url">classKGraphicsWebView.html#ad088a724531d6aacb2224a1e6f120c72</field>
    <field name="keywords">KGraphicsWebView::~KGraphicsWebView KGraphicsWebView</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGraphicsWebView::isExternalContentAllowed</field>
    <field name="args">() const</field>
    <field name="url">classKGraphicsWebView.html#a75d82123c58e1780f5ac9edc5d765568</field>
    <field name="keywords">isExternalContentAllowed KGraphicsWebView::isExternalContentAllowed KGraphicsWebView</field>
    <field name="text">By default access to remote content is allowed setAllowExternalContent() KWebPage::isExternalContentAllowed()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGraphicsWebView::setAllowExternalContent</field>
    <field name="args">(bool allow)</field>
    <field name="url">classKGraphicsWebView.html#ad04cf1851da746be887969c3943b4fd1</field>
    <field name="keywords">setAllowExternalContent KGraphicsWebView::setAllowExternalContent KGraphicsWebView</field>
    <field name="text">If this function is set to false only resources on the local system can be accessed through this class By default fetching external content is allowed isExternalContentAllowed() KWebPage::setAllowExternalContent(bool)</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGraphicsWebView::mousePressEvent</field>
    <field name="args">(QGraphicsSceneMouseEvent *event) override</field>
    <field name="url">classKGraphicsWebView.html#a96ea7c8ad51d7be2a1d4306078545182</field>
    <field name="keywords">mousePressEvent KGraphicsWebView::mousePressEvent KGraphicsWebView</field>
    <field name="text">Reimplemented from superclass Reimplemented for internal reasons the API is not affected QWidget::mousePressEvent</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGraphicsWebView::mouseReleaseEvent</field>
    <field name="args">(QGraphicsSceneMouseEvent *event) override</field>
    <field name="url">classKGraphicsWebView.html#ab7260b011520bd74f7aff7f05966e31a</field>
    <field name="keywords">mouseReleaseEvent KGraphicsWebView::mouseReleaseEvent KGraphicsWebView</field>
    <field name="text">Reimplemented from superclass Reimplemented for internal reasons the API is not affected QWidget::mouseReleaseEvent</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KGraphicsWebView::wheelEvent</field>
    <field name="args">(QGraphicsSceneWheelEvent *event) override</field>
    <field name="url">classKGraphicsWebView.html#a485daf5e516db87f46d7d16379e3fe27</field>
    <field name="keywords">wheelEvent KGraphicsWebView::wheelEvent KGraphicsWebView</field>
    <field name="text">Reimplemented from superclass Reimplemented for internal reasons the API is not affected QWidget::wheelEvent</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KWebPage</field>
    <field name="url">classKWebPage.html</field>
    <field name="keywords">KWebPage</field>
    <field name="text">This is a convenience class that provides full integration with KDE frameworks technologies such as KIO for network request handling KCookiejar for cookie handling KParts for embedding non-html content and KWallet for storing form data It also sets standard icons for many of the actions provided by QWebPage Most of this integration happens behind the scenes If you want KWallet integration however you will have to provide a mechanism for deciding whether to allow form data to be stored To do this you will need to connect to the KWebWallet::saveFormDataRequested signal and call either KWebWallet::acceptSaveFormDataRequest or KWebWallet::rejectSaveFormDataRequest typically after asking the user whether they want to save the form data If you do not do this no form data will be saved KWebPage will also not automatically load form data for you You should connect to QWebPage::loadFinished and if the page was loaded successfully call KIO::Integration KWebWallet Urs Wolfer uwolfer kde.org Dawit Alemayehu adawit kde.org 4.4</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KWebPage::IntegrationFlags</field>
    <field name="url">classKWebPage.html#a2b9db8392addba15e635fa9699606dca</field>
    <field name="keywords">IntegrationFlags KWebPage::IntegrationFlags KWebPage</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KWebPage::NoIntegration</field>
    <field name="url">classKWebPage.html#a2b9db8392addba15e635fa9699606dcaadfc4da385b216bfb1a6fd729892797a7</field>
    <field name="keywords">NoIntegration KWebPage::NoIntegration KWebPage</field>
    <field name="text">Provide only very basic integration such as using KDE icons for the actions provided by QWebPage</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KWebPage::KIOIntegration</field>
    <field name="url">classKWebPage.html#a2b9db8392addba15e635fa9699606dcaa111ea913f1ec92d7e3cc461856fe03a6</field>
    <field name="keywords">KIOIntegration KWebPage::KIOIntegration KWebPage</field>
    <field name="text">Use KIO to handle network requests KIO::Integration::AccessManager</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KWebPage::KPartsIntegration</field>
    <field name="url">classKWebPage.html#a2b9db8392addba15e635fa9699606dcaa9ff4cd4d85d105ce1e314ebbf2179cd3</field>
    <field name="keywords">KPartsIntegration KWebPage::KPartsIntegration KWebPage</field>
    <field name="text">Use KPart componenets if available to display content in embed and object tags</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KWebPage::KWalletIntegration</field>
    <field name="url">classKWebPage.html#a2b9db8392addba15e635fa9699606dcaa87897276aab2366a6c1f57f7d5ccf14b</field>
    <field name="keywords">KWalletIntegration KWebPage::KWalletIntegration KWebPage</field>
    <field name="text">Use KWallet to store login credentials and other form data from web sites wallet() and setWallet()</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KWebPage::downloadRequest</field>
    <field name="args">(const QNetworkRequest &amp;request)</field>
    <field name="url">classKWebPage.html#ab8890aa6053f2538983d28949f67a7f5</field>
    <field name="keywords">downloadRequest KWebPage::downloadRequest KWebPage</field>
    <field name="text">This slot first prompts the user where to save the requested resource and then downloads it using KIO</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KWebPage::downloadResponse</field>
    <field name="args">(QNetworkReply *reply)</field>
    <field name="url">classKWebPage.html#adb849007c3c3488d45411fd251d08414</field>
    <field name="keywords">downloadResponse KWebPage::downloadResponse KWebPage</field>
    <field name="text">This slot first prompts the user where to save the requested resource and then downloads it using KIO If reply contains a QObject property called then an attempt will be made to the command specified by that property to download the specified resource If the property is not defined or the command specified by it could not be successfully executed then the user will be prompted for the action to take 4.5 handleReply</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KWebPage::downloadUrl</field>
    <field name="args">(const QUrl &amp;url)</field>
    <field name="url">classKWebPage.html#addfd82f9d64c38c245d6727e1a4b21d8</field>
    <field name="keywords">downloadUrl KWebPage::downloadUrl KWebPage</field>
    <field name="text">This slot first prompts the user where to save the requested resource and then downloads it using KIO</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPage::KWebPage</field>
    <field name="args">(QObject *parent=nullptr, Integration flags=Integration())</field>
    <field name="url">classKWebPage.html#a11052bfc159527fc84f3e8706c2b1d6d</field>
    <field name="keywords">KWebPage KWebPage::KWebPage KWebPage</field>
    <field name="text">Note that if no integration flags are set the default all integration options are activated If you inherit from this class you can use the flags in IntegrationFlags to control how much integration should be used KIO::Integration::CookieJar KIO::Integration::AccessManager wallet() and setWallet()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPage::~KWebPage</field>
    <field name="args">()</field>
    <field name="url">classKWebPage.html#a3e3eac29ff1e4d7b1a1a0efaecd84ae9</field>
    <field name="keywords">KWebPage::~KWebPage KWebPage</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPage::isExternalContentAllowed</field>
    <field name="args">() const</field>
    <field name="url">classKWebPage.html#afcbcbcdb9b2b0bff3f6c78ca2d06704a</field>
    <field name="keywords">isExternalContentAllowed KWebPage::isExternalContentAllowed KWebPage</field>
    <field name="text">If this is false only resources on the local system can be accessed through this web page By default access to remote content is allowed If KIO integration is disabled this will always return true setAllowExternalContent() KIO::Integration::AccessManager::isExternalContentAllowed() true if access to remote content is permitted false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPage::setAllowExternalContent</field>
    <field name="args">(bool allow)</field>
    <field name="url">classKWebPage.html#adc97054aad8c8c07d8031dc209222aa6</field>
    <field name="keywords">setAllowExternalContent KWebPage::setAllowExternalContent KWebPage</field>
    <field name="text">If KIO integration is not enabled this method will have no effect isExternalContentAllowed() KIO::Integration::AccessManager::setAllowExternalContent(bool) allow true if access to remote content should be allowed false if only local content should be accessible</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPage::setWallet</field>
    <field name="args">(KWebWallet *wallet)</field>
    <field name="url">classKWebPage.html#a9e58a4aa6900a6b5ea4341c0939c7041</field>
    <field name="keywords">setWallet KWebPage::setWallet KWebPage</field>
    <field name="text">This KWebPage will take ownership of wallet so that the wallet is deleted when the KWebPage is deleted If you do not want that to happen you should call setParent() on wallet after calling this function KWebWallet wallet the KWebWallet to be used for storing form data or 0 to disable KWallet integration</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPage::wallet</field>
    <field name="args">() const</field>
    <field name="url">classKWebPage.html#aea8504e350519cdc159ada70cfe7b631</field>
    <field name="keywords">wallet KWebPage::wallet KWebPage</field>
    <field name="text">If you wish to use KWallet integration you will have to connect to signals emitted by this object and react accordingly See KWebWallet for more information the wallet integration manager or 0 if KWallet integration is disabled</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPage::acceptNavigationRequest</field>
    <field name="args">(QWebFrame *frame, const QNetworkRequest &amp;request, NavigationType type) override</field>
    <field name="url">classKWebPage.html#a6962fb1549415bb4e3a0c97bc9b8ea9b</field>
    <field name="keywords">acceptNavigationRequest KWebPage::acceptNavigationRequest KWebPage</field>
    <field name="text">Reimplemented from superclass This performs various integration-related actions when navigation is requested If you override this method make sure you call the parent s implementation unless you want to block the request outright If you do override acceptNavigationRequest and call this method however be aware of the effect of the page s linkDelegationPolicy on how QWebPage::acceptNavigationRequest behaves QWebPage::acceptNavigationRequest</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPage::handleReply</field>
    <field name="args">(QNetworkReply *reply, QString *contentType=nullptr, KIO::MetaData *metaData=nullptr)</field>
    <field name="url">classKWebPage.html#a8422fbc70e39b7886a89998524dc50eb</field>
    <field name="keywords">handleReply KWebPage::handleReply KWebPage</field>
    <field name="text">If reply contains a QObject property called then an attempt will be made to let the command specified by that property to download the requested resource If the property is not defined or the command specified by it could not be successfully executed then the user will be prompted for the action to take reply the QNetworkReply object to be handled contentType if not null it will be set to the content-type specified in reply if any metaData if not null it will be set to the KIO meta-data specified in reply if any 4.6.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPage::removeRequestMetaData</field>
    <field name="args">(const QString &amp;key)</field>
    <field name="url">classKWebPage.html#ab5773e74d14d61b37b10639eaa6a7755</field>
    <field name="keywords">removeRequestMetaData KWebPage::removeRequestMetaData KWebPage</field>
    <field name="text">Removes the temporary per-request metadata associated with key KIO::Integration::AccessManager::requestMetaData setRequestMetaData key the key for the metadata to remove</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPage::removeSessionMetaData</field>
    <field name="args">(const QString &amp;key)</field>
    <field name="url">classKWebPage.html#aed5974b67f245ad100045769d4bdb466</field>
    <field name="keywords">removeSessionMetaData KWebPage::removeSessionMetaData KWebPage</field>
    <field name="text">Removes the permanent per-session metadata associated with key KIO::Integration::AccessManager::sessionMetaData setSessionMetaData key the key for the metadata to remove</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPage::requestMetaData</field>
    <field name="args">(const QString &amp;key) const</field>
    <field name="url">classKWebPage.html#ad5d9ebed6ecea87999f63e62109d3940</field>
    <field name="keywords">requestMetaData KWebPage::requestMetaData KWebPage</field>
    <field name="text">Retrieves the value of the temporary per-request metadata for key If KIO integration is disabled this will always return an empty string KIO::Integration::AccessManager::requestMetaData setRequestMetaData key the key of the metadata to retrieve the value of the metadata associated with key or an empty string if there is no such metadata</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPage::sessionMetaData</field>
    <field name="args">(const QString &amp;key) const</field>
    <field name="url">classKWebPage.html#a3a41492885b72239ead00bec9ef7f5c6</field>
    <field name="keywords">sessionMetaData KWebPage::sessionMetaData KWebPage</field>
    <field name="text">Retrieves the value of the permanent per-session metadata for key If KIO integration is disabled this will always return an empty string KIO::Integration::AccessManager::sessionMetaData setSessionMetaData key the key of the metadata to retrieve the value of the metadata associated with key or an empty string if there is no such metadata</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPage::setRequestMetaData</field>
    <field name="args">(const QString &amp;key, const QString &amp;value)</field>
    <field name="url">classKWebPage.html#a2e98e79b90a35fac062bd3ff98f0fa35</field>
    <field name="keywords">setRequestMetaData KWebPage::setRequestMetaData KWebPage</field>
    <field name="text">If KIO integration is disabled this method will have no effect Metadata set using this method will be deleted after it has been sent once KIO::Integration::AccessManager::requestMetaData key the key for the metadata any existing metadata associated with this key will be overwritten value the value to associate with key</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPage::setSessionMetaData</field>
    <field name="args">(const QString &amp;key, const QString &amp;value)</field>
    <field name="url">classKWebPage.html#a0d6808e64a840e8615d1e4553e7cd65d</field>
    <field name="keywords">setSessionMetaData KWebPage::setSessionMetaData KWebPage</field>
    <field name="text">If KIO integration is disabled this method will have no effect Metadata set using this method will be sent with every request KIO::Integration::AccessManager::sessionMetaData key the key for the metadata any existing metadata associated with this key will be overwritten value the value to associate with key</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPage::userAgentForUrl</field>
    <field name="args">(const QUrl &amp;url) const override</field>
    <field name="url">classKWebPage.html#adc1eb02f6466d77492534557f17525f7</field>
    <field name="keywords">userAgentForUrl KWebPage::userAgentForUrl KWebPage</field>
    <field name="text">Reimplemented from superclass This function is re-implemented to provide KIO user-agent management integration with KProtocolManager If a special user-agent has been configured for the host indicated by url that user-agent will be returned Otherwise QWebPage s default user agent is returned KProtocolManager::userAgentForHost QWebPage::userAgentForUrl</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KWebPluginFactory</field>
    <field name="url">classKWebPluginFactory.html</field>
    <field name="keywords">KWebPluginFactory</field>
    <field name="text">This class will attempt to find a KPart to satisfy a plugin request Michael Howell Dawit Alemayehu QWebPluginFactory 4.4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPluginFactory::KWebPluginFactory</field>
    <field name="args">(QObject *parent)</field>
    <field name="url">classKWebPluginFactory.html#a2e1d45ed9f790ce50f883ab2df1c7afc</field>
    <field name="keywords">KWebPluginFactory KWebPluginFactory::KWebPluginFactory KWebPluginFactory</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPluginFactory::~KWebPluginFactory</field>
    <field name="args">()</field>
    <field name="url">classKWebPluginFactory.html#a2f302df1871b40e8bba7cd50470fb682</field>
    <field name="keywords">KWebPluginFactory::~KWebPluginFactory KWebPluginFactory</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPluginFactory::create</field>
    <field name="args">(const QString &amp;mimeType, const QUrl &amp;url, const QStringList &amp;argumentNames, const QStringList &amp;argumentValues) const override</field>
    <field name="url">classKWebPluginFactory.html#a39e7b31f62769eb165abc6ee812fcfaf</field>
    <field name="keywords">create KWebPluginFactory::create KWebPluginFactory</field>
    <field name="text">Reimplemented from superclass Reimplemented for internal reasons the API is not affected QWebPluginFactory::create</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPluginFactory::plugins</field>
    <field name="args">() const override</field>
    <field name="url">classKWebPluginFactory.html#a4905cc739eaf2794dfceb9c6cd7785bc</field>
    <field name="keywords">plugins KWebPluginFactory::plugins KWebPluginFactory</field>
    <field name="text">Reimplemented from superclass Reimplemented for internal reasons the API is not affected QWebPluginFactory::plugins</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPluginFactory::createPartInstanceFrom</field>
    <field name="args">(const QString &amp;mimeType, const QStringList &amp;argumentNames, const QStringList &amp;argumentValues, QWidget *parentWidget=nullptr, QObject *parent=nullptr) const</field>
    <field name="url">classKWebPluginFactory.html#ab3d6c7b162757feef8c8fe6d68ee1113</field>
    <field name="keywords">createPartInstanceFrom KWebPluginFactory::createPartInstanceFrom KWebPluginFactory</field>
    <field name="text">This function uses KService s trader to create an instance of the service associated with the given parameters The parameters are the tags of the HTML object The name and the value attributes of these tags are specified by the argumentNames and argumentValues respectively The parentWidget and parent parameters specify the widget to use as the parent of the newly created part and the parent for the part itself respectively The parameters for this function mirror that of QWebPluginFactory::create QWebPluginFactory::create 4.8.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPluginFactory::excludedMimeType</field>
    <field name="args">(const QString &amp;mimeType) const</field>
    <field name="url">classKWebPluginFactory.html#a9462339ee76e2a6ef931cd4bffde75d4</field>
    <field name="keywords">excludedMimeType KWebPluginFactory::excludedMimeType KWebPluginFactory</field>
    <field name="text">Currently this function only returns true for mimetypes x-java x-shockwave-flash and futuresplash in the application category and everything under the inode category 4.8.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebPluginFactory::extractGuessedMimeType</field>
    <field name="args">(const QUrl &amp;url, QString *mimeType) const</field>
    <field name="url">classKWebPluginFactory.html#a7ee83dd08a3f1158cb2b5a0786bb0347</field>
    <field name="keywords">extractGuessedMimeType KWebPluginFactory::extractGuessedMimeType KWebPluginFactory</field>
    <field name="text">Note that attempting to guess mime-type will not always produce the correct content-type This is especially true for the HTTP protocol since the URL present might be for a cgi script URL instead of a static URL that directly points to the content If mimeType is not NULL this function will set it to the content type determined from url 4.8.3</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KWebView</field>
    <field name="url">classKWebView.html</field>
    <field name="keywords">KWebView</field>
    <field name="text">This is a drop-in replacement for QWebView that provides full KDE frameworks integration through KWebPage as well as additional signals that capture middle shift and ctrl mouse clicks on links and URL pasting from the selection clipboard The specific functionality provided by this class over and above what would be acheived by using KWebPage with a QWebView is that scrolling with the mouse wheel while holding down CTRL zooms the page see QWebView::setZoomFactor and several useful signals are emitted when the user performs certain actions See the signal documentation for more details Urs Wolfer uwolfer kde.org Dawit Alemayehu adawit kde.org 4.4</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWebView::linkMiddleOrCtrlClicked</field>
    <field name="args">(const QUrl &amp;url)</field>
    <field name="url">classKWebView.html#ac816342615e01a3077b68396b23eff76</field>
    <field name="keywords">linkMiddleOrCtrlClicked KWebView::linkMiddleOrCtrlClicked KWebView</field>
    <field name="text">Typically the user would expect this to result in the URL being opened in a new tab or window url the URL of the clicked link</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWebView::linkShiftClicked</field>
    <field name="args">(const QUrl &amp;url)</field>
    <field name="url">classKWebView.html#aac25da0a9bea1c705b926d0dc91c4629</field>
    <field name="keywords">linkShiftClicked KWebView::linkShiftClicked KWebView</field>
    <field name="text">A user of Plasma desktop would typically expect this to result in the triggering of a action url the URL of the clicked link</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWebView::selectionClipboardUrlPasted</field>
    <field name="args">(const QUrl &amp;url)</field>
    <field name="url">classKWebView.html#a7fb784fd1c9f45e36374c9d363d5ec12</field>
    <field name="keywords">selectionClipboardUrlPasted KWebView::selectionClipboardUrlPasted KWebView</field>
    <field name="text">This is triggered when the user clicks on the page with the middle mouse button when there is something in the global mouse selection clipboard This is typically only possible on X11 Uri filters are applied to the selection clipboard to generate url If the content in the selection clipboard is not a valid url and a default search engine is configured url will be set to a query to the default search engine url url generated from the selection clipboard content use selectionClipboardUrlPasted(QUrl, bool) instead QClipboard</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWebView::selectionClipboardUrlPasted</field>
    <field name="args">(const QUrl &amp;url, const QString &amp;searchText)</field>
    <field name="url">classKWebView.html#a5305ae0f9fad6d521a159547c4a670a0</field>
    <field name="keywords">selectionClipboardUrlPasted KWebView::selectionClipboardUrlPasted KWebView</field>
    <field name="text">This is triggered when the user clicks on the page with the middle mouse button when there is something in the global mouse selection clipboard This is typically only possible on X11 Uri filters are applied to the selection clipboard to generate url If the content in the selection clipboard is not a valid URL and a default search engine is configured searchText will be set to the content of the clipboard 250 characters maximum and url will be set to a query to the default search engine url the URL generated from the selection clipboard content searchText content of the selection clipboard if it is not a valid URL KUriFilter QClipboard 4.6</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebView::KWebView</field>
    <field name="args">(QWidget *parent=nullptr, bool createCustomPage=true)</field>
    <field name="url">classKWebView.html#a7e870af8e52e2a80c899a4aa4dc678e4</field>
    <field name="keywords">KWebView KWebView::KWebView KWebView</field>
    <field name="text">Set createCustomPage to false to prevent the creation of a KWebPage object for KDE frameworks integration Doing so allows you to avoid unnecessary object creation and deletion if you are going to use a subclass of KWebPage parent the parent object createCustomPage if true the view s page is set to an instance of KWebPage</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebView::~KWebView</field>
    <field name="args">()</field>
    <field name="url">classKWebView.html#a5a724473976cba60b6c561cfe6a76682</field>
    <field name="keywords">KWebView::~KWebView KWebView</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebView::isExternalContentAllowed</field>
    <field name="args">() const</field>
    <field name="url">classKWebView.html#ae97d997d99a94de6007469a0b9702a8d</field>
    <field name="keywords">isExternalContentAllowed KWebView::isExternalContentAllowed KWebView</field>
    <field name="text">By default access to remote content is allowed setAllowExternalContent() KWebPage::isExternalContentAllowed()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebView::setAllowExternalContent</field>
    <field name="args">(bool allow)</field>
    <field name="url">classKWebView.html#a38306892ef42320dc8524f3091c8e026</field>
    <field name="keywords">setAllowExternalContent KWebView::setAllowExternalContent KWebView</field>
    <field name="text">If this function is set to false only resources on the local system can be accessed through this class By default fetching external content is allowed isExternalContentAllowed() KWebPage::setAllowExternalContent(bool)</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebView::mousePressEvent</field>
    <field name="args">(QMouseEvent *event) override</field>
    <field name="url">classKWebView.html#a18f3d3f31cd2292937aa01082905a873</field>
    <field name="keywords">mousePressEvent KWebView::mousePressEvent KWebView</field>
    <field name="text">Reimplemented from superclass Reimplemented for internal reasons the API is not affected QWidget::mousePressEvent</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebView::mouseReleaseEvent</field>
    <field name="args">(QMouseEvent *event) override</field>
    <field name="url">classKWebView.html#a1bed2c1a4c841c565362fb86009007db</field>
    <field name="keywords">mouseReleaseEvent KWebView::mouseReleaseEvent KWebView</field>
    <field name="text">Reimplemented from superclass Reimplemented for internal reasons the API is not affected QWidget::mouseReleaseEvent</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebView::wheelEvent</field>
    <field name="args">(QWheelEvent *event) override</field>
    <field name="url">classKWebView.html#a770f0514ba6a0492b002afd1bd667b3c</field>
    <field name="keywords">wheelEvent KWebView::wheelEvent KWebView</field>
    <field name="text">Reimplemented from superclass Reimplemented for internal reasons the API is not affected QWidget::wheelEvent</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KWebWallet</field>
    <field name="url">classKWebWallet.html</field>
    <field name="keywords">KWebWallet</field>
    <field name="text">Normally you will use this class via KWebPage In this case you need to connect to the saveFormDataRequested signal and call either acceptSaveFormDataRequest or rejectSaveFormDataRequest typically after asking the user whether they want to save the form data You will also need to call fillFormData when a QWebFrame has finished loading To do this connect to QWebPage::loadFinished and if the page was loaded successfully call If you wish to use this directly with a subclass of QWebPage you should call saveFormData from QWebPage::acceptNavigationRequest when a user submits a form KWebPage Dawit Alemayehu adawit kde.org 4.4</field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">KWebWallet::WebFormList</field>
    <field name="url">classKWebWallet.html#a9bfe4ddb35cc93a3754f0b4813109cf6</field>
    <field name="keywords">WebFormList KWebWallet::WebFormList KWebWallet</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWebWallet::fillFormRequestCompleted</field>
    <field name="args">(bool ok)</field>
    <field name="url">classKWebWallet.html#a002cbd329a0a1e15b289a0a7206a82c0</field>
    <field name="keywords">fillFormRequestCompleted KWebWallet::fillFormRequestCompleted KWebWallet</field>
    <field name="text">ok will be set to true if any forms were successfully filled with cached data from the persistent storage fillFormData 4.5</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWebWallet::saveFormDataCompleted</field>
    <field name="args">(const QUrl &amp;url, bool ok)</field>
    <field name="url">classKWebWallet.html#a06698ef9d0572c0265f66b7e8f18416b</field>
    <field name="keywords">saveFormDataCompleted KWebWallet::saveFormDataCompleted KWebWallet</field>
    <field name="text">ok will be set to true if the save form data request for url was completed successfully saveFormDataRequested</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWebWallet::saveFormDataRequested</field>
    <field name="args">(const QString &amp;key, const QUrl &amp;url)</field>
    <field name="url">classKWebWallet.html#ada3b0bb3b288bac65d45f5dfc6bf8e5e</field>
    <field name="keywords">saveFormDataRequested KWebWallet::saveFormDataRequested KWebWallet</field>
    <field name="text">Unless you connect to this signal and and call acceptSaveFormDataRequest or rejectSaveFormDataRequest slots the save form data requested through saveFormData will simply be ignored key is a value that uniquely identifies the save request and url is the address for which the form data is being saved acceptSaveFormDataRequest rejectSaveFormDataRequest</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KWebWallet::walletClosed</field>
    <field name="args">()</field>
    <field name="url">classKWebWallet.html#a3e6061f3724d8246c92d1f4ff1131fe8</field>
    <field name="keywords">walletClosed KWebWallet::walletClosed KWebWallet</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KWebWallet::acceptSaveFormDataRequest</field>
    <field name="args">(const QString &amp;key)</field>
    <field name="url">classKWebWallet.html#a762ce276bec132574ea05d08bd60c281</field>
    <field name="keywords">acceptSaveFormDataRequest KWebWallet::acceptSaveFormDataRequest KWebWallet</field>
    <field name="text">The key parameter is the one sent through the saveFormDataRequested signal You must always call this function or rejectSaveFormDataRequest in order to complete the save form data request Otherwise the request will simply be ignored saveFormDataRequested</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KWebWallet::rejectSaveFormDataRequest</field>
    <field name="args">(const QString &amp;key)</field>
    <field name="url">classKWebWallet.html#ab7f1828b449e9f79699ce0f17cfe465e</field>
    <field name="keywords">rejectSaveFormDataRequest KWebWallet::rejectSaveFormDataRequest KWebWallet</field>
    <field name="text">The key parameter is the one sent through the saveFormDataRequested signal saveFormDataRequested</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebWallet::KWebWallet</field>
    <field name="args">(QObject *parent=nullptr, WId wid=0)</field>
    <field name="url">classKWebWallet.html#a9dfa1819674ce5f5bb7a96855989e4cf</field>
    <field name="keywords">KWebWallet KWebWallet::KWebWallet KWebWallet</field>
    <field name="text">parent is usually the QWebPage this wallet is being used for The wid parameter is used to tell the KWallet manager which window is requesting access to the wallet parent the owner of this wallet wid the window ID of the window the web page will be embedded in</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebWallet::~KWebWallet</field>
    <field name="args">()</field>
    <field name="url">classKWebWallet.html#a91368c85fe2cb980c35915921b3d847a</field>
    <field name="keywords">KWebWallet::~KWebWallet KWebWallet</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebWallet::fillFormData</field>
    <field name="args">(QWebFrame *frame, bool recursive=true)</field>
    <field name="url">classKWebWallet.html#a2f3dbcfe38ea9c889c1a44eeff34b750</field>
    <field name="keywords">fillFormData KWebWallet::fillFormData KWebWallet</field>
    <field name="text">If recursive is set to true the default then this function will attempt to fill out forms in the specified frame and all its children frames</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebWallet::formsWithCachedData</field>
    <field name="args">(QWebFrame *frame, bool recursive=true) const</field>
    <field name="url">classKWebWallet.html#a6afef57ae50b7212c8872c83b363733b</field>
    <field name="keywords">formsWithCachedData KWebWallet::formsWithCachedData KWebWallet</field>
    <field name="text">If recursive is set to true the default then this function will will also return the cached form data for all the children frames of frame If the site currently rendered in frame does not contain any forms or there is no cached data for the forms found in frame then this function will return an empty list Note that this function will only return the information about the forms in frame and not their cached data i.e the fields member variable in the returned WebForm list will always be empty</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebWallet::removeFormData</field>
    <field name="args">(QWebFrame *frame, bool recursive)</field>
    <field name="url">classKWebWallet.html#afc1daf4fa78cb2b253561961f866a0c8</field>
    <field name="keywords">removeFormData KWebWallet::removeFormData KWebWallet</field>
    <field name="text">This function is provided for convenience and simply calls formsWithCachedData and removeFormData(WebFormList) Note that this function will remove all cached data for forms found in frame If recursive is set to true then all cached data for all of the child frames of frame will be removed from the persistent storage as well formsWithCachedData removeFormData</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebWallet::removeFormData</field>
    <field name="args">(const WebFormList &amp;forms)</field>
    <field name="url">classKWebWallet.html#a17622679612b225b3f685df09cb32f1a</field>
    <field name="keywords">removeFormData KWebWallet::removeFormData KWebWallet</field>
    <field name="text">Call formsWithCachedData to obtain a list of forms with data cached in persistent storage formsWithCachedData</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebWallet::saveFormData</field>
    <field name="args">(QWebFrame *frame, bool recursive=true, bool ignorePasswordFields=false)</field>
    <field name="url">classKWebWallet.html#ab20ac4bfb3886e65f8ff67a423fc94cb</field>
    <field name="keywords">saveFormData KWebWallet::saveFormData KWebWallet</field>
    <field name="text">If recursive is set to true the default then form data from all the child frames of frame will be saved Set ignorePasswordFields to true if you do not want data from password fields to not be saved You must connect to the saveFormDataRequested signal and call either rejectSaveFormDataRequest or acceptSaveFormDataRequest signals in order to complete the save request Otherwise you request will simply be ignored</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebWallet::fillFormDataFromCache</field>
    <field name="args">(const QList&lt; QUrl &gt; &amp;list)</field>
    <field name="url">classKWebWallet.html#ad31853836117ed2b6d259f09d56585a0</field>
    <field name="keywords">fillFormDataFromCache KWebWallet::fillFormDataFromCache KWebWallet</field>
    <field name="text">If you reimplement this function call formsToFill to obtain the list of forms pending to be filled Once you fill the list with the cached data from the persistent storage you must call fillWebForm to fill out the actual web forms formsToFill</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebWallet::fillWebForm</field>
    <field name="args">(const QUrl &amp;url, const WebFormList &amp;forms)</field>
    <field name="url">classKWebWallet.html#acf504068fb12acd1f7e74c4d2045693b</field>
    <field name="keywords">fillWebForm KWebWallet::fillWebForm KWebWallet</field>
    <field name="text">fillFormDataFromCache</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebWallet::formsToDelete</field>
    <field name="args">() const</field>
    <field name="url">classKWebWallet.html#a4109329f49a671ea7c8fac6bf64d19d6</field>
    <field name="keywords">formsToDelete KWebWallet::formsToDelete KWebWallet</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebWallet::formsToFill</field>
    <field name="args">(const QUrl &amp;url) const</field>
    <field name="url">classKWebWallet.html#af254c422d4aed6dc31c61acf7da1efe6</field>
    <field name="keywords">formsToFill KWebWallet::formsToFill KWebWallet</field>
    <field name="text">This function returns an empty list if there is no pending requests for filling forms associated with url</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebWallet::formsToSave</field>
    <field name="args">(const QString &amp;key) const</field>
    <field name="url">classKWebWallet.html#a129ce136523f7444e850657f31e77c01</field>
    <field name="keywords">formsToSave KWebWallet::formsToSave KWebWallet</field>
    <field name="text">This function returns an empty list if there are no pending requests for saving forms associated with key</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebWallet::hasCachedFormData</field>
    <field name="args">(const WebForm &amp;form) const</field>
    <field name="url">classKWebWallet.html#a7044766c7c1f2bc5ce1addcdb3692f1b</field>
    <field name="keywords">hasCachedFormData KWebWallet::hasCachedFormData KWebWallet</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebWallet::removeFormDataFromCache</field>
    <field name="args">(const WebFormList &amp;forms)</field>
    <field name="url">classKWebWallet.html#a8faf58c90dbd11e5d7e86cc8fbe9478d</field>
    <field name="keywords">removeFormDataFromCache KWebWallet::removeFormDataFromCache KWebWallet</field>
    <field name="text">If you reimplement this function call formsToDelete to obtain the list of form data pending to be removed from persistent storage formsToDelete</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KWebWallet::saveFormDataToCache</field>
    <field name="args">(const QString &amp;key)</field>
    <field name="url">classKWebWallet.html#aa53a4cacc023d2745338494ba39d7dd0</field>
    <field name="keywords">saveFormDataToCache KWebWallet::saveFormDataToCache KWebWallet</field>
    <field name="text">If you reimplement this function call formsToSave to obtain the list of form data pending to be saved to persistent storage formsToSave</field>
  </doc>
  <doc>
    <field name="type">struct</field>
    <field name="name">KWebWallet::WebForm</field>
    <field name="url">structKWebWallet_1_1WebForm.html</field>
    <field name="keywords">WebForm</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">typedef</field>
    <field name="name">KWebWallet::WebForm::WebField</field>
    <field name="url">structKWebWallet_1_1WebForm.html#a16d969236a5456551bdbdceb0b30dff3</field>
    <field name="keywords">WebField KWebWallet::WebForm::WebField KWebWallet::WebForm</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">KWebWallet::WebForm::fields</field>
    <field name="url">structKWebWallet_1_1WebForm.html#ad2aeb9baff901b9e56001b0852966238</field>
    <field name="keywords">fields KWebWallet::WebForm::fields KWebWallet::WebForm</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">KWebWallet::WebForm::index</field>
    <field name="url">structKWebWallet_1_1WebForm.html#a6eff4d5aac3ad40bc17f245eb76ab649</field>
    <field name="keywords">index KWebWallet::WebForm::index KWebWallet::WebForm</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">KWebWallet::WebForm::name</field>
    <field name="url">structKWebWallet_1_1WebForm.html#a3d7cbe267e057064cc4259caa4904f83</field>
    <field name="keywords">name KWebWallet::WebForm::name KWebWallet::WebForm</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">variable</field>
    <field name="name">KWebWallet::WebForm::url</field>
    <field name="url">structKWebWallet_1_1WebForm.html#a738ed7b51d5733c89694a6e5009b5e73</field>
    <field name="keywords">url KWebWallet::WebForm::url KWebWallet::WebForm</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">index</field>
    <field name="url">index.html</field>
    <field name="keywords"></field>
    <field name="text">KDE WebKit Integration of the HTML rendering engine WebKit Introduction This library provides KDE integration of the QtWebKit library If you are using QtWebKit in your KDE application you are encouraged to use this layer instead of using the QtWebKit classes directly In particular you should use KWebView in place of QWebView KGraphicsWebView in place of QGraphicsWebView and KWebPage in place of QWebPage See the documentation for those classes for more information</field>
  </doc>
</add>
