<?xml version="1.0" encoding="UTF-8"?>
<add>
  <doc>
    <field name="type">source</field>
    <field name="name">acceleration.cpp</field>
    <field name="url">acceleration_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion Acceleration::Acceleration CustomCategory AccelerationCategory i18n i18n KLocalizedString symbolString ki18nc addDefaultUnit CustomUnit AccelerationCategory MetresPerSecondSquared i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit AccelerationCategory FeetPerSecondSquared i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AccelerationCategory StandardGravity i18nc i18nc i18nc symbolString ki18nc ki18ncp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">angle.cpp</field>
    <field name="url">angle_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion RadiansUnitPrivate UnitPrivate RadiansUnitPrivate CategoryId categoryId UnitId qreal multiplier QString symbol QString description QString matchString KLocalizedString symbolString KLocalizedString realString KLocalizedString integerString UnitPrivate categoryId id multiplier symbol description matchString symbolString realString integerString qreal toDefault qreal value value M_PI qreal fromDefault qreal value value M_PI Angle::Angle CustomCategory AngleCategory i18n i18n KLocalizedString symbolString ki18nc addDefaultUnit CustomUnit AngleCategory Degree i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit RadiansUnitPrivate AngleCategory Radian i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AngleCategory Gradian i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit AngleCategory ArcMinute i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit AngleCategory ArcSecond i18nc i18nc i18nc symbolString ki18nc ki18ncp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">area.cpp</field>
    <field name="url">area_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion Area::Area CustomCategory AreaCategory i18nc i18nc KLocalizedString symbolString ki18nc addUnit CustomUnit AreaCategory SquareYottameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquareZettameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquareExameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquarePetameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquareTerameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquareGigameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquareMegameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit AreaCategory SquareKilometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit AreaCategory SquareHectometer i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquareDecameter i18nc i18nc i18nc symbolString ki18nc ki18ncp addDefaultUnit CustomUnit AreaCategory SquareMeter i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquareDecimeter i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquareCentimeter i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquareMillimeter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquareMicrometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquareNanometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquarePicometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquareFemtometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquareAttometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquareZeptometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquareYoctometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit AreaCategory Acre i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit AreaCategory SquareFoot i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit AreaCategory SquareInch i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit AreaCategory SquareMile e i18nc i18nc i18nc symbolString ki18nc ki18ncp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">converter.cpp</field>
    <field name="url">converter_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion ConverterPrivate QSharedData ConverterPrivate m_categories LengthCategory Length m_categories AreaCategory Area m_categories VolumeCategory Volume m_categories TemperatureCategory Temperature m_categories VelocityCategory Velocity m_categories MassCategory Mass m_categories PressureCategory Pressure m_categories EnergyCategory Energy m_categories CurrencyCategory Currency m_categories PowerCategory Power m_categories TimeCategory Time m_categories FuelEfficiencyCategory FuelEfficiency m_categories DensityCategory Density m_categories AccelerationCategory Acceleration m_categories ForceCategory Force m_categories AngleCategory Angle m_categories FrequencyCategory Frequency ConverterPrivate ConverterPrivate clone ConverterPrivate operator== ConverterPrivate other m_categories other m_categories operator!= ConverterPrivate other other QMap&lt;CategoryId, UnitCategory&gt; m_categories QConverterSingleton QConverterSingleton d new ConverterPrivate QExplicitlySharedDataPointer&lt;ConverterPrivate&gt; d Q_GLOBAL_STATIC QConverterSingleton global_converter</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">converter.cpp</field>
    <field name="url">converter_8cpp_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text">Converter Converter d global_converter d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">converter.cpp</field>
    <field name="url">converter_8cpp_source.html#l00106</field>
    <field name="keywords"></field>
    <field name="text">Converter::~Converter</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">converter.cpp</field>
    <field name="url">converter_8cpp_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text">Converter::Converter Converter other d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">converter.cpp</field>
    <field name="url">converter_8cpp_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text">Converter Converter::operator= Converter other d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">converter.cpp</field>
    <field name="url">converter_8cpp_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">Converter::operator== Converter other d other d d other d d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">converter.cpp</field>
    <field name="url">converter_8cpp_source.html#l00129</field>
    <field name="keywords"></field>
    <field name="text">Converter::operator!= Converter other d other d d other d d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">converter.cpp</field>
    <field name="url">converter_8cpp_source.html#l00137</field>
    <field name="keywords"></field>
    <field name="text">Value Converter::convert Value value QString toUnit d value unit isValid value unit category convert value toUnit Value Value Converter::convert Value value UnitId toUnit d value unit isValid value unit category convert value toUnit Value Value Converter::convert Value value Unit toUnit d toUnit isValid value unit isValid value unit category convert value toUnit Value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">converter.cpp</field>
    <field name="url">converter_8cpp_source.html#l00161</field>
    <field name="keywords"></field>
    <field name="text">UnitCategory Converter::categoryForUnit QString unit UnitCategory u categories u hasUnit unit u UnitCategory</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">converter.cpp</field>
    <field name="url">converter_8cpp_source.html#l00171</field>
    <field name="keywords"></field>
    <field name="text">Unit Converter::unit QString unitString UnitCategory u categories Unit unitClass u unit unitString unitClass isValid unitClass Unit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">converter.cpp</field>
    <field name="url">converter_8cpp_source.html#l00182</field>
    <field name="keywords"></field>
    <field name="text">Unit Converter::unit UnitId unitId UnitCategory u categories Unit unitClass u unit unitId unitClass isValid unitClass Unit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">converter.cpp</field>
    <field name="url">converter_8cpp_source.html#l00193</field>
    <field name="keywords"></field>
    <field name="text">UnitCategory Converter::category QString category UnitCategory u categories u name category u UnitCategory</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">converter.cpp</field>
    <field name="url">converter_8cpp_source.html#l00204</field>
    <field name="keywords"></field>
    <field name="text">UnitCategory Converter::category CategoryId categoryId d d m_categories contains categoryId d m_categories categoryId UnitCategory</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">converter.cpp</field>
    <field name="url">converter_8cpp_source.html#l00213</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;UnitCategory&gt; Converter::categories d d m_categories values QList&lt;UnitCategory&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">converter.h</field>
    <field name="url">converter_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion Value UnitCategory ConverterPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">converter.h</field>
    <field name="url">converter_8h_source.html#l00053</field>
    <field name="keywords"></field>
    <field name="text">KUNITCONVERSION_EXPORT Converter Converter Converter Converter Converter other Converter operator= Converter other Converter operator= Converter other swap other</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">converter.h</field>
    <field name="url">converter_8h_source.html#l00086</field>
    <field name="keywords"></field>
    <field name="text">swap Converter other d swap other d operator== Converter other operator!= Converter other Value convert Value value QString toUnit QString Value convert Value value UnitId toUnit Value convert Value value Unit toUnit UnitCategory categoryForUnit QString unit Unit unit QString unitString Unit unit UnitId unitId UnitCategory category QString category UnitCategory category CategoryId categoryId QList&lt;UnitCategory&gt; categories QExplicitlySharedDataPointer&lt;ConverterPrivate&gt; d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">currency.cpp</field>
    <field name="url">currency_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion URL CurrencyCategoryPrivate UnitCategoryPrivate CurrencyCategoryPrivate CategoryId QString name QString description UnitCategoryPrivate id name description m_update true m_cache QStandardPaths::writableLocation QStandardPaths::GenericDataLocation QStringLiteral Value convert Value value Unit toUnit QString m_cache m_update Currency::Currency CustomCategory new CurrencyCategoryPrivate CurrencyCategory i18n i18n KLocalizedString symbolString ki18nc addDefaultUnit CustomUnit CurrencyCategory Eur QStringLiteral i18nc i18nc QStringLiteral i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Ats QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Austria i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Bef QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Belgium i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Nlg QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Netherlands i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Fim QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Finland i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Frf QStringLiteral i18nc i18nc QLocale::countryToString QLocale::France i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Dem QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Germany i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Iep QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Ireland i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Itl QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Italy i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Luf QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Luxembourg i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Pte QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Portugal i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Esp QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Spain i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Grd QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Greece i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Sit QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Slovenia i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Cyp QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Cyprus i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Mtl QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Malta i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Skk QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Slovakia i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit CurrencyCategory Usd qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::UnitedStates i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit CurrencyCategory Jpy qSNaN QStringLiteral i18nc i18nc QStringLiteral QLocale::countryToString QLocale::Japan i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Bgn qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Bulgaria i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Czk qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::CzechRepublic i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Dkk qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Denmark i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Eek qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Estonia i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit CurrencyCategory Gbp qSNaN QStringLiteral i18nc i18nc QStringLiteral QLocale::countryToString QLocale::UnitedKingdom i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Huf qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Hungary i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Ils qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Israel i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Ltl qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Lithuania i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Lvl qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Latvia i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Pln qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Poland i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Ron qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Romania i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Sek qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Sweden i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Chf qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Switzerland i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Nok qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Norway i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Hrk qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Croatia i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Rub qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Russia i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Try qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Turkey i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Aud qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Australia i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Brl qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Brazil i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit CurrencyCategory Cad qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Canada i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Cny qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::China i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Hkd qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::HongKong i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Idr qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Indonesia i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Inr qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::India i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Krw qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::SouthKorea i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Mxn qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Mexico i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Myr qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Malaysia i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Nzd qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::NewZealand i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Php qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Philippines i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Sgd qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Singapore i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Thb qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::Thailand i18nc symbolString ki18nc ki18ncp addUnit CustomUnit CurrencyCategory Zar qSNaN QStringLiteral i18nc i18nc QLocale::countryToString QLocale::SouthAfrica i18nc symbolString ki18nc ki18ncp isConnected qEnvironmentVariableIsSet ret QNetworkInterface net QNetworkInterface::allInterfaces net flags testFlag QNetworkInterface::IsUp net flags testFlag QNetworkInterface::IsLoopBack ret ret Value CurrencyCategoryPrivate::convert Value value Unit to QMutex mutex QFileInfo info m_cache info exists info lastModified secsTo QDateTime::currentDateTime isConnected QEventLoop loop QNetworkAccessManager manager reply manager get QNetworkRequest QUrl URL QObject::connect reply QNetworkReply::finished reply error QString cacheDir info absolutePath QFileInfo::exists cacheDir QDir mkpath cacheDir QSaveFile cacheFile m_cache cacheFile open QFile::WriteOnly cacheFile write reply readAll cacheFile commit mutex lock m_update mutex unlock loop quit loop exec QEventLoop::ExcludeUserInputEvents mutex lock m_update QFile file m_cache file open QIODevice::ReadOnly QDomDocument doc doc setContent file QDomNodeList list doc elementsByTagName QStringLiteral i i list count i QDomElement e list item i toElement e hasAttribute QStringLiteral Unit u m_unitMap value e attribute QStringLiteral u isValid u setUnitMultiplier e attribute QStringLiteral toDouble m_update mutex unlock Value v UnitCategoryPrivate::convert value to v</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">density.cpp</field>
    <field name="url">density_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion Density::Density CustomCategory DensityCategory i18n i18n KLocalizedString symbolString ki18nc addDefaultUnit CustomUnit DensityCategory KilogramsPerCubicMeter i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit DensityCategory KilogramPerLiter i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit DensityCategory GramPerLiter i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit DensityCategory GramPerMilliliter i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit DensityCategory OuncePerCubicInch i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit DensityCategory OuncePerCubicFoot i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit DensityCategory PoundPerCubicInch i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit DensityCategory PoundPerCubicFoot i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit DensityCategory PoundPerCubicYard i18nc i18nc i18nc symbolString ki18nc ki18ncp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">energy.cpp</field>
    <field name="url">energy_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion PhotoUnitPrivate UnitPrivate PhotoUnitPrivate CategoryId categoryId UnitId qreal multiplier QString symbol QString description QString matchString KLocalizedString symbolString KLocalizedString realString KLocalizedString integerString UnitPrivate categoryId id multiplier symbol description matchString symbolString realString integerString qreal toDefault qreal value e e value e qreal fromDefault qreal value e e value e Energy::Energy CustomCategory EnergyCategory i18n i18n KLocalizedString symbolString ki18nc addUnit CustomUnit EnergyCategory Yottajoule e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Zettajoule e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Exajoule e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Petajoule e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Terajoule e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Gigajoule e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Megajoule e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit EnergyCategory Kilojoule i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Hectojoule i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Decajoule i18nc i18nc i18nc symbolString ki18nc ki18ncp addDefaultUnit CustomUnit EnergyCategory Joule i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Decijoule i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Centijoule i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Millijoule i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Microjoule e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Nanojoule e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Picojoule e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Femtojoule e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Attojoule e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Zeptojoule e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Yoctojoule e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit EnergyCategory GuidelineDailyAmount e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Electronvolt e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory JoulePerMole e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory KiloJoulePerMole e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit EnergyCategory Rydberg e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit EnergyCategory Kilocalorie i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PhotoUnitPrivate EnergyCategory PhotonWavelength i18nc i18nc i18nc symbolString ki18nc ki18ncp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">force.cpp</field>
    <field name="url">force_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion Force::Force CustomCategory ForceCategory i18n i18n KLocalizedString symbolString ki18nc addUnit CustomUnit ForceCategory Yottanewton e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Zettanewton e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Exanewton e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Petanewton e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Teranewton e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Giganewton e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Meganewton e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit ForceCategory KilonewtonForce i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Hectonewton i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Decanewton i18nc i18nc i18nc symbolString ki18nc ki18ncp addDefaultUnit CustomUnit ForceCategory Newton i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Decinewton i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Centinewton i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Millinewton i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Micronewton e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Nanonewton e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Piconewton e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Femtonewton e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Attonewton e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Zeptonewton e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Yoctonewton e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Dyne i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Kilopond i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory PoundForce i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ForceCategory Poundal i18nc i18nc i18nc symbolString ki18nc ki18ncp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">frequency.cpp</field>
    <field name="url">frequency_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion Frequency::Frequency CustomCategory FrequencyCategory i18n i18n KLocalizedString symbolString ki18nc addUnit CustomUnit FrequencyCategory Yottahertz e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit FrequencyCategory Zettahertz e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit FrequencyCategory Exahertz e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit FrequencyCategory Petahertz e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit FrequencyCategory Terahertz e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit FrequencyCategory Gigahertz e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit FrequencyCategory Megahertz e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit FrequencyCategory Kilohertz i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit FrequencyCategory Hectohertz i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit FrequencyCategory Decahertz i18nc i18nc i18nc symbolString ki18nc ki18ncp addDefaultUnit CustomUnit FrequencyCategory Hertz i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit FrequencyCategory Decihertz i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit FrequencyCategory Centihertz i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit FrequencyCategory Millihertz i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit FrequencyCategory Microhertz e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit FrequencyCategory Nanohertz e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit FrequencyCategory Picohertz e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit FrequencyCategory Femtohertz e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit FrequencyCategory Attohertz e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit FrequencyCategory Zeptohertz e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit FrequencyCategory Yoctohertz e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit FrequencyCategory RPM i18nc i18nc i18nc symbolString ki18nc ki18ncp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">fuel_efficiency.cpp</field>
    <field name="url">fuel__efficiency_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion FuelUnitPrivate UnitPrivate FuelUnitPrivate CategoryId categoryId UnitId qreal multiplier QString symbol QString description QString matchString KLocalizedString symbolString KLocalizedString realString KLocalizedString integerString UnitPrivate categoryId id multiplier symbol description matchString symbolString realString integerString qreal toDefault qreal value unitMultiplier value qreal fromDefault qreal value unitMultiplier value FuelEfficiency::FuelEfficiency CustomCategory FuelEfficiencyCategory i18n i18n KLocalizedString symbolString ki18nc addDefaultUnit CustomUnit FuelUnitPrivate FuelEfficiencyCategory LitersPer100Kilometers i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit FuelUnitPrivate FuelEfficiencyCategory MilePerUsGallon i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit FuelUnitPrivate FuelEfficiencyCategory MilePerImperialGallon i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit FuelUnitPrivate FuelEfficiencyCategory KilometrePerLitre i18nc i18nc i18nc symbolString ki18nc ki18ncp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">length.cpp</field>
    <field name="url">length_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion Length::Length CustomCategory LengthCategory i18n i18n KLocalizedString symbolString ki18nc addUnit CustomUnit LengthCategory Yottameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Zettameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Exameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Petameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Terameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Gigameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Megameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit LengthCategory Kilometer i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Hectometer i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Decameter i18nc i18nc i18nc symbolString ki18nc ki18ncp addDefaultUnit CustomUnit LengthCategory Meter i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Decimeter i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit LengthCategory Centimeter i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit LengthCategory Millimeter i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Micrometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Nanometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Angstrom e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Picometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Femtometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Attometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Zeptometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Yoctometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit LengthCategory Inch i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Thou i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit LengthCategory Foot i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit LengthCategory Yard i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit LengthCategory Mile i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory NauticalMile i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory LightYear e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory Parsec e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit LengthCategory AstronomicalUnit e i18nc i18nc i18nc symbolString ki18nc ki18ncp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">mass.cpp</field>
    <field name="url">mass_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion Mass::Mass CustomCategory MassCategory i18n i18n KLocalizedString symbolString ki18nc addUnit CustomUnit MassCategory Yottagram e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Zettagram e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Exagram e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Petagram e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Teragram e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Gigagram e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Megagram e i18nc i18nc i18nc symbolString ki18nc ki18ncp addDefaultUnit CustomUnit MassCategory Kilogram i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Hectogram i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Decagram i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit MassCategory Gram i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Decigram i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Centigram i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit MassCategory Milligram i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Microgram e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Nanogram e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Picogram e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Femtogram e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Attogram e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Zeptogram e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Yoctogram e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit MassCategory Ton e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Carat i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit MassCategory Pound i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit MassCategory Ounce i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory TroyOunce i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory MassNewton i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Kilonewton i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit MassCategory Stone i18nc i18nc i18nc symbolString ki18nc ki18ncp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">power.cpp</field>
    <field name="url">power_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion Power::Power CustomCategory PowerCategory i18n i18n KLocalizedString symbolString ki18nc addUnit CustomUnit PowerCategory Yottawatt e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Zettawatt e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Exawatt e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Petawatt e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Terawatt e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Gigawatt e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Megawatt e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit PowerCategory Kilowatt i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Hectowatt i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Decawatt i18nc i18nc i18nc symbolString ki18nc ki18ncp addDefaultUnit CustomUnit PowerCategory Watt i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Deciwatt i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Centiwatt i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Milliwatt i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Microwatt e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Nanowatt e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Picowatt e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Femtowatt e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Attowatt e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Zeptowatt e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PowerCategory Yoctowatt e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit PowerCategory Horsepower i18nc i18nc i18nc symbolString ki18nc ki18ncp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pressure.cpp</field>
    <field name="url">pressure_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion Pressure::Pressure CustomCategory PressureCategory i18n i18n KLocalizedString symbolString ki18nc addUnit CustomUnit PressureCategory Yottapascal e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Zettapascal e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Exapascal e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Petapascal e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Terapascal e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Gigapascal e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Megapascal e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Kilopascal i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit PressureCategory Hectopascal i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Decapascal i18nc i18nc i18nc symbolString ki18nc ki18ncp addDefaultUnit CustomUnit PressureCategory Pascal i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Decipascal i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Centipascal i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Millipascal i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Micropascal e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Nanopascal e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Picopascal e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Femtopascal e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Attopascal e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Zeptopascal e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Yoctopascal e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit PressureCategory Bar i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Millibar i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Decibar i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory Torr i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory TechnicalAtmosphere i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit PressureCategory Atmosphere i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory PoundForcePerSquareInch i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit PressureCategory InchesOfMercury i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit PressureCategory MillimetersOfMercury i18nc i18nc i18nc symbolString ki18nc ki18ncp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">temperature.cpp</field>
    <field name="url">temperature_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion CelsiusUnitPrivate UnitPrivate CelsiusUnitPrivate CategoryId categoryId UnitId qreal multiplier QString symbol QString description QString matchString KLocalizedString symbolString KLocalizedString realString KLocalizedString integerString UnitPrivate categoryId id multiplier symbol description matchString symbolString realString integerString qreal toDefault qreal value value qreal fromDefault qreal value value FahrenheitUnitPrivate UnitPrivate FahrenheitUnitPrivate CategoryId categoryId UnitId qreal multiplier QString symbol QString description QString matchString KLocalizedString symbolString KLocalizedString realString KLocalizedString integerString UnitPrivate categoryId id multiplier symbol description matchString symbolString realString integerString qreal toDefault qreal value value qreal fromDefault qreal value value DelisleUnitPrivate UnitPrivate DelisleUnitPrivate CategoryId categoryId UnitId qreal multiplier QString symbol QString description QString matchString KLocalizedString symbolString KLocalizedString realString KLocalizedString integerString UnitPrivate categoryId id multiplier symbol description matchString symbolString realString integerString qreal toDefault qreal value value qreal fromDefault qreal value value NewtonUnitPrivate UnitPrivate NewtonUnitPrivate CategoryId categoryId UnitId qreal multiplier QString symbol QString description QString matchString KLocalizedString symbolString KLocalizedString realString KLocalizedString integerString UnitPrivate categoryId id multiplier symbol description matchString symbolString realString integerString qreal toDefault qreal value value qreal fromDefault qreal value value ReaumurUnitPrivate UnitPrivate ReaumurUnitPrivate CategoryId categoryId UnitId qreal multiplier QString symbol QString description QString matchString KLocalizedString symbolString KLocalizedString realString KLocalizedString integerString UnitPrivate categoryId id multiplier symbol description matchString symbolString realString integerString qreal toDefault qreal value value qreal fromDefault qreal value value RomerUnitPrivate UnitPrivate RomerUnitPrivate CategoryId categoryId UnitId qreal multiplier QString symbol QString description QString matchString KLocalizedString symbolString KLocalizedString realString KLocalizedString integerString UnitPrivate categoryId id multiplier symbol description matchString symbolString realString integerString qreal toDefault qreal value value qreal fromDefault qreal value value Temperature::Temperature CustomCategory TemperatureCategory i18n i18n KLocalizedString symbolString ki18nc addDefaultUnit CustomUnit TemperatureCategory Kelvin i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit CelsiusUnitPrivate TemperatureCategory Celsius i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit FahrenheitUnitPrivate TemperatureCategory Fahrenheit i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TemperatureCategory Rankine i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit DelisleUnitPrivate TemperatureCategory Delisle i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit NewtonUnitPrivate TemperatureCategory TemperatureNewton i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit ReaumurUnitPrivate TemperatureCategory Reaumur i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit RomerUnitPrivate TemperatureCategory Romer i18nc i18nc i18nc symbolString ki18nc ki18ncp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">timeunit.cpp</field>
    <field name="url">timeunit_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion Time::Time CustomCategory TimeCategory i18n i18n KLocalizedString symbolString ki18nc addUnit CustomUnit TimeCategory Yottasecond e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Zettasecond e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Exasecond e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Petasecond e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Terasecond e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Gigasecond e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Megasecond e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Kilosecond i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Hectosecond i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Decasecond i18nc i18nc i18nc symbolString ki18nc ki18ncp addDefaultUnit CustomUnit TimeCategory Second i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Decisecond i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Centisecond i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Millisecond i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Microsecond e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Nanosecond e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Picosecond e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Femtosecond e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Attosecond e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Zeptosecond e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory Yoctosecond e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit TimeCategory Minute i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit TimeCategory Hour i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit TimeCategory Day i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit TimeCategory Week i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory JulianYear e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit TimeCategory LeapYear e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit TimeCategory Year e i18nc i18nc i18nc symbolString ki18nc ki18ncp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.cpp</field>
    <field name="url">unit_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion UnitPrivate::UnitPrivate m_categoryId InvalidCategory m_id InvalidUnit m_multiplier UnitPrivate::UnitPrivate CategoryId categoryId UnitId qreal multiplier QString symbol QString description QString matchString KLocalizedString symbolString KLocalizedString realString KLocalizedString integerString m_categoryId categoryId m_id id m_multiplier multiplier m_symbol symbol m_description description m_matchString matchString m_symbolString symbolString m_realString realString m_integerString integerString UnitPrivate::~UnitPrivate UnitPrivate UnitPrivate::clone UnitPrivate UnitPrivate::operator== UnitPrivate other m_id other m_id m_symbol other m_symbol UnitPrivate::operator!= UnitPrivate other other UnitPrivate::setUnitMultiplier qreal multiplier m_multiplier multiplier qreal UnitPrivate::unitMultiplier m_multiplier qreal UnitPrivate::toDefault qreal value value m_multiplier qreal UnitPrivate::fromDefault qreal value value m_multiplier</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.cpp</field>
    <field name="url">unit_8cpp_source.html#l00092</field>
    <field name="keywords"></field>
    <field name="text">Unit::Unit d Unit::Unit UnitPrivate dd d dd</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.cpp</field>
    <field name="url">unit_8cpp_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text">Unit::Unit Unit other d other d Unit::~Unit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.cpp</field>
    <field name="url">unit_8cpp_source.html#l00111</field>
    <field name="keywords"></field>
    <field name="text">Unit Unit::operator= Unit other d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.cpp</field>
    <field name="url">unit_8cpp_source.html#l00117</field>
    <field name="keywords"></field>
    <field name="text">Unit::operator== Unit other d other d d other d d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.cpp</field>
    <field name="url">unit_8cpp_source.html#l00125</field>
    <field name="keywords"></field>
    <field name="text">Unit::operator!= Unit other d other d d other d d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.cpp</field>
    <field name="url">unit_8cpp_source.html#l00133</field>
    <field name="keywords"></field>
    <field name="text">Unit::isNull d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.cpp</field>
    <field name="url">unit_8cpp_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text">Unit::isValid d d m_symbol isEmpty</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.cpp</field>
    <field name="url">unit_8cpp_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text">UnitId Unit::id d d m_id InvalidUnit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.cpp</field>
    <field name="url">unit_8cpp_source.html#l00150</field>
    <field name="keywords"></field>
    <field name="text">CategoryId Unit::categoryId d d m_categoryId InvalidCategory</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.cpp</field>
    <field name="url">unit_8cpp_source.html#l00157</field>
    <field name="keywords"></field>
    <field name="text">UnitCategory Unit::category d d m_category UnitCategory</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.cpp</field>
    <field name="url">unit_8cpp_source.html#l00164</field>
    <field name="keywords"></field>
    <field name="text">QString Unit::description d d m_description QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.cpp</field>
    <field name="url">unit_8cpp_source.html#l00171</field>
    <field name="keywords"></field>
    <field name="text">QString Unit::symbol d d m_symbol QString Unit::setUnitMultiplier qreal multiplier d d setUnitMultiplier multiplier qreal Unit::toDefault qreal value d d toDefault value qreal Unit::fromDefault qreal value d d fromDefault value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.cpp</field>
    <field name="url">unit_8cpp_source.html#l00198</field>
    <field name="keywords"></field>
    <field name="text">QString Unit::toString qreal value fieldWidth format precision QChar fillChar isNull QString value value precision d m_integerString subs value toString d m_realString subs value fieldWidth format precision fillChar toString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.cpp</field>
    <field name="url">unit_8cpp_source.html#l00209</field>
    <field name="keywords"></field>
    <field name="text">QString Unit::toSymbolString qreal value fieldWidth format precision QChar fillChar d d m_symbolString subs value fieldWidth format precision fillChar subs d m_symbol toString QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.h</field>
    <field name="url">unit_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KLocalizedString KUnitConversion CategoryId InvalidCategory LengthCategory AreaCategory VolumeCategory TemperatureCategory VelocityCategory MassCategory PressureCategory EnergyCategory CurrencyCategory PowerCategory TimeCategory FuelEfficiencyCategory DensityCategory AccelerationCategory AngleCategory FrequencyCategory ForceCategory UnitId InvalidUnit NoUnit Percent SquareYottameter SquareZettameter SquareExameter SquarePetameter SquareTerameter SquareGigameter SquareMegameter SquareKilometer SquareHectometer SquareDecameter SquareMeter SquareDecimeter SquareCentimeter SquareMillimeter SquareMicrometer SquareNanometer SquarePicometer SquareFemtometer SquareAttometer SquareZeptometer SquareYoctometer Acre SquareFoot SquareInch SquareMile Yottameter Zettameter Exameter Petameter Terameter Gigameter Megameter Kilometer Hectometer Decameter Meter Decimeter Centimeter Millimeter Micrometer Nanometer Picometer Femtometer Attometer Zeptometer Yoctometer Inch Foot Yard Mile NauticalMile LightYear Parsec AstronomicalUnit Thou Angstrom CubicYottameter CubicZettameter CubicExameter CubicPetameter CubicTerameter CubicGigameter CubicMegameter CubicKilometer CubicHectometer CubicDecameter CubicMeter CubicDecimeter CubicCentimeter CubicMillimeter CubicMicrometer CubicNanometer CubicPicometer CubicFemtometer CubicAttometer CubicZeptometer CubicYoctometer Yottaliter Zettaliter Exaliter Petaliter Teraliter Gigaliter Megaliter Kiloliter Hectoliter Decaliter Liter Deciliter Centiliter Milliliter Microliter Nanoliter Picoliter Femtoliter Attoliter Zeptoliter Yoctoliter CubicFoot CubicInch CubicMile FluidOunce Cup GallonUS PintImperial Yottagram Zettagram Exagram Petagram Teragram Gigagram Megagram Kilogram Hectogram Decagram Gram Decigram Centigram Milligram Microgram Nanogram Picogram Femtogram Attogram Zeptogram Yoctogram Ton Carat Pound Ounce TroyOunce MassNewton Kilonewton Stone Yottapascal Zettapascal Exapascal Petapascal Terapascal Gigapascal Megapascal Kilopascal Hectopascal Decapascal Pascal Decipascal Centipascal Millipascal Micropascal Nanopascal Picopascal Femtopascal Attopascal Zeptopascal Yoctopascal Bar Millibar Decibar Torr TechnicalAtmosphere Atmosphere PoundForcePerSquareInch InchesOfMercury MillimetersOfMercury Kelvin Celsius Fahrenheit Rankine Delisle TemperatureNewton Reaumur Romer Yottajoule Zettajoule Exajoule Petajoule Terajoule Gigajoule Megajoule Kilojoule Hectojoule Decajoule Joule Decijoule Centijoule Millijoule Microjoule Nanojoule Picojoule Femtojoule Attojoule Zeptojoule Yoctojoule GuidelineDailyAmount Electronvolt Rydberg Kilocalorie PhotonWavelength KiloJoulePerMole JoulePerMole Eur Ats Bef Nlg Fim Frf Dem Iep Itl Luf Pte Esp Grd Sit Cyp Mtl Skk Usd Jpy Bgn Czk Dkk Eek Gbp Huf Ltl Lvl Pln Ron Sek Chf Nok Hrk Rub Try Aud Brl Cad Cny Hkd Idr Inr Krw Mxn Myr Nzd Php Sgd Thb Zar Ils MeterPerSecond KilometerPerHour MilePerHour FootPerSecond InchPerSecond Knot Mach SpeedOfLight Beaufort Yottawatt Zettawatt Exawatt Petawatt Terawatt Gigawatt Megawatt Kilowatt Hectowatt Decawatt Watt Deciwatt Centiwatt Milliwatt Microwatt Nanowatt Picowatt Femtowatt Attowatt Zeptowatt Yoctowatt Horsepower Yottasecond Zettasecond Exasecond Petasecond Terasecond Gigasecond Megasecond Kilosecond Hectosecond Decasecond Second Decisecond Centisecond Millisecond Microsecond Nanosecond Picosecond Femtosecond Attosecond Zeptosecond Yoctosecond Minute Hour Day Week JulianYear LeapYear Year LitersPer100Kilometers MilePerUsGallon MilePerImperialGallon KilometrePerLitre YottakilogramsPerCubicMeter ZettakilogramPerCubicMeter ExakilogramPerCubicMeter PetakilogramPerCubicMeter TerakilogramPerCubicMeter GigakilogramPerCubicMeter MegakilogramPerCubicMeter KilokilogramPerCubicMeter HectokilogramsPerCubicMeter DecakilogramsPerCubicMeter KilogramsPerCubicMeter DecikilogramsPerCubicMeter CentikilogramsPerCubicMeter MillikilogramsPerCubicMeter MicrokilogramsPerCubicMeter NanokilogramsPerCubicMeter PicokilogramsPerCubicMeter FemtokilogramsPerCubicMeter AttokilogramsPerCubicMeter ZeptokilogramsPerCubicMeter YoctokilogramsPerCubicMeter KilogramPerLiter GramPerLiter GramPerMilliliter OuncePerCubicInch OuncePerCubicFoot OuncePerCubicYard PoundPerCubicInch PoundPerCubicFoot PoundPerCubicYard MetresPerSecondSquared FeetPerSecondSquared StandardGravity Yottanewton Zettanewton Exanewton Petanewton Teranewton Giganewton Meganewton KilonewtonForce Hectonewton Decanewton Newton Decinewton Centinewton Millinewton Micronewton Nanonewton Piconewton Femtonewton Attonewton Zeptonewton Yoctonewton Dyne Kilopond PoundForce Poundal Degree Radian Gradian ArcMinute ArcSecond Yottahertz Zettahertz Exahertz Petahertz Terahertz Gigahertz Megahertz Kilohertz Hectohertz Decahertz Hertz Decihertz Centihertz Millihertz Microhertz Nanohertz Picohertz Femtohertz Attohertz Zeptohertz Yoctohertz RPM UnitCategory UnitPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.h</field>
    <field name="url">unit_8h_source.html#l00179</field>
    <field name="keywords"></field>
    <field name="text">KUNITCONVERSION_EXPORT Unit Unit Unit Unit other Unit Unit operator= Unit other Unit operator= Unit other swap other</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unit.h</field>
    <field name="url">unit_8h_source.html#l00210</field>
    <field name="keywords"></field>
    <field name="text">swap Unit other d swap other d operator== Unit other operator!= Unit other isNull isValid UnitId id CategoryId categoryId UnitCategory category QString description QString symbol QString toString qreal value fieldWidth format precision QChar fillChar QLatin1Char QString toSymbolString qreal value fieldWidth format precision QChar fillChar QLatin1Char qreal toDefault qreal value qreal fromDefault qreal value CustomUnit UnitCategory UnitCategoryPrivate CurrencyCategoryPrivate Unit UnitPrivate dd setUnitMultiplier qreal multiplier QExplicitlySharedDataPointer&lt;UnitPrivate&gt; d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion UnitCategoryPrivate::UnitCategoryPrivate m_id InvalidCategory UnitCategoryPrivate::UnitCategoryPrivate CategoryId QString name QString description m_id id m_name name m_description description UnitCategoryPrivate::~UnitCategoryPrivate UnitCategoryPrivate UnitCategoryPrivate::clone UnitCategoryPrivate UnitCategoryPrivate::operator== UnitCategoryPrivate other m_id other m_id UnitCategoryPrivate::operator!= UnitCategoryPrivate other other Value UnitCategoryPrivate::convert Value value Unit toUnit qreal v value unit toDefault value number Value toUnit fromDefault v toUnit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00069</field>
    <field name="keywords"></field>
    <field name="text">UnitCategory::UnitCategory d UnitCategory::UnitCategory UnitCategoryPrivate dd d dd</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00079</field>
    <field name="keywords"></field>
    <field name="text">UnitCategory::UnitCategory UnitCategory other d other d UnitCategory::~UnitCategory</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00088</field>
    <field name="keywords"></field>
    <field name="text">UnitCategory UnitCategory::operator= UnitCategory other d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00094</field>
    <field name="keywords"></field>
    <field name="text">UnitCategory::operator== UnitCategory other d other d d other d d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text">UnitCategory::operator!= UnitCategory other d other d d other d d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00110</field>
    <field name="keywords"></field>
    <field name="text">UnitCategory::isNull d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00115</field>
    <field name="keywords"></field>
    <field name="text">CategoryId UnitCategory::id d d m_id InvalidCategory</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00122</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;Unit&gt; UnitCategory::units d d m_units QList&lt;Unit&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00129</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;Unit&gt; UnitCategory::mostCommonUnits d d m_mostCommonUnits QList&lt;Unit&gt;</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00136</field>
    <field name="keywords"></field>
    <field name="text">QStringList UnitCategory::allUnits d d m_unitMap keys QStringList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text">UnitCategory::hasUnit QString unit d d m_unitMap contains unit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00150</field>
    <field name="keywords"></field>
    <field name="text">Value UnitCategory::convert Value value QString toUnit d toUnit isEmpty d m_unitMap contains toUnit value unit isValid Unit to toUnit isEmpty defaultUnit d m_unitMap toUnit convert value to Value Value UnitCategory::convert Value value UnitId toUnit d d m_idMap contains toUnit value unit isValid convert value d m_idMap toUnit Value Value UnitCategory::convert Value value Unit toUnit d toUnit isNull d convert value toUnit Value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00175</field>
    <field name="keywords"></field>
    <field name="text">Unit UnitCategory::unit QString s d d m_unitMap value s Unit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00182</field>
    <field name="keywords"></field>
    <field name="text">Unit UnitCategory::unit UnitId unitId d d m_idMap contains unitId d m_idMap unitId Unit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00190</field>
    <field name="keywords"></field>
    <field name="text">QString UnitCategory::name d d m_name QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00197</field>
    <field name="keywords"></field>
    <field name="text">Unit UnitCategory::defaultUnit d d m_defaultUnit Unit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.cpp</field>
    <field name="url">unitcategory_8cpp_source.html#l00204</field>
    <field name="keywords"></field>
    <field name="text">QString UnitCategory::description d d m_description QString UnitCategory::addDefaultUnit Unit unit d addCommonUnit unit d m_defaultUnit unit UnitCategory::addCommonUnit Unit unit d addUnit unit d m_mostCommonUnits append unit UnitCategory::addUnit Unit unit d unit d m_category QStringList list unit d m_matchString split QString name list d m_unitMap name unit d m_idMap unit id unit d m_units append unit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.h</field>
    <field name="url">unitcategory_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion UnitCategoryPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.h</field>
    <field name="url">unitcategory_8h_source.html#l00053</field>
    <field name="keywords"></field>
    <field name="text">KUNITCONVERSION_EXPORT UnitCategory UnitCategory UnitCategory UnitCategory other UnitCategory UnitCategory operator= UnitCategory other UnitCategory operator= UnitCategory other swap other</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">unitcategory.h</field>
    <field name="url">unitcategory_8h_source.html#l00084</field>
    <field name="keywords"></field>
    <field name="text">swap UnitCategory other d swap other d operator== UnitCategory other operator!= UnitCategory other isNull CategoryId id QString name QString description Unit defaultUnit hasUnit QString unit Unit unit QString s Unit unit UnitId unitId QList&lt;Unit&gt; units QList&lt;Unit&gt; mostCommonUnits QStringList allUnits Value convert Value value QString toUnit QString Value convert Value value UnitId toUnit Value convert Value value Unit toUnit addDefaultUnit Unit unit addCommonUnit Unit unit addUnit Unit unit CustomCategory Unit UnitCategory UnitCategoryPrivate dd QExplicitlySharedDataPointer&lt;UnitCategoryPrivate&gt; d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion ValuePrivate QSharedData ValuePrivate m_number ValuePrivate qreal number UnitId unitId InvalidUnit m_number number m_unit m_converter unit unitId ValuePrivate qreal number Unit unit m_number number m_unit unit ValuePrivate qreal number QString unitString m_number number m_unit m_converter unit unitString ValuePrivate ValuePrivate other QSharedData other m_number other m_number m_unit other m_unit ValuePrivate ValuePrivate operator= ValuePrivate other m_number other m_number m_unit other m_unit ValuePrivate clone ValuePrivate operator== ValuePrivate other m_number other m_number m_unit other m_unit operator!= ValuePrivate other other qreal m_number Unit m_unit Converter m_converter</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00093</field>
    <field name="keywords"></field>
    <field name="text">Value::Value d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00098</field>
    <field name="keywords"></field>
    <field name="text">Value::Value Value other d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text">Value::Value qreal number Unit unit d new ValuePrivate number unit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00108</field>
    <field name="keywords"></field>
    <field name="text">Value::Value qreal number QString unitString d new ValuePrivate number unitString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text">Value::Value qreal number UnitId unitId d new ValuePrivate number unitId</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00118</field>
    <field name="keywords"></field>
    <field name="text">Value::Value QVariant number QString unitString d new ValuePrivate number toReal unitString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00123</field>
    <field name="keywords"></field>
    <field name="text">Value::~Value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00127</field>
    <field name="keywords"></field>
    <field name="text">Value Value::operator= Value other d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00133</field>
    <field name="keywords"></field>
    <field name="text">Value::operator== Value other d other d d other d d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text">Value::operator!= Value other d other d d other d d other d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00149</field>
    <field name="keywords"></field>
    <field name="text">Value::isNull d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00154</field>
    <field name="keywords"></field>
    <field name="text">Value::isValid d d m_unit isValid qIsNaN d m_number</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00159</field>
    <field name="keywords"></field>
    <field name="text">qreal Value::number d d m_number</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00166</field>
    <field name="keywords"></field>
    <field name="text">Unit Value::unit d d m_unit Unit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00173</field>
    <field name="keywords"></field>
    <field name="text">QString Value::toString fieldWidth format precision QChar fillChar isValid d m_unit toString d m_number fieldWidth format precision fillChar QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00180</field>
    <field name="keywords"></field>
    <field name="text">QString Value::toSymbolString fieldWidth format precision QChar fillChar isValid d m_unit toSymbolString d m_number fieldWidth format precision fillChar QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00188</field>
    <field name="keywords"></field>
    <field name="text">Value Value::round uint decimals isValid uint div qPow decimals qreal add qreal div d m_number int d m_number add div qreal div</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00200</field>
    <field name="keywords"></field>
    <field name="text">Value Value::convertTo Unit unit d d m_converter convert unit Value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00207</field>
    <field name="keywords"></field>
    <field name="text">Value Value::convertTo UnitId unitId d d m_converter convert unitId Value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.cpp</field>
    <field name="url">value_8cpp_source.html#l00214</field>
    <field name="keywords"></field>
    <field name="text">Value Value::convertTo QString unitString d d m_converter convert unitString Value</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.h</field>
    <field name="url">value_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QVariant KUnitConversion ValuePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.h</field>
    <field name="url">value_8h_source.html#l00053</field>
    <field name="keywords"></field>
    <field name="text">KUNITCONVERSION_EXPORT Value Value Value qreal number Unit unit Value qreal number QString unitString Value qreal number UnitId unitId Value QVariant number QString unitString Value Value other Value Value operator= Value other Value operator= Value other swap other</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">value.h</field>
    <field name="url">value_8h_source.html#l00103</field>
    <field name="keywords"></field>
    <field name="text">swap Value other d swap other d operator== Value other operator!= Value other isNull isValid qreal number Unit unit QString toString fieldWidth format precision QChar fillChar QLatin1Char QString toSymbolString fieldWidth format precision QChar fillChar QLatin1Char Value round uint decimals Value convertTo Unit unit Value convertTo UnitId unit Value convertTo QString unit QSharedDataPointer&lt;ValuePrivate&gt; d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">velocity.cpp</field>
    <field name="url">velocity_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion BeaufortUnitPrivate UnitPrivate BeaufortUnitPrivate CategoryId categoryId UnitId qreal multiplier QString symbol QString description QString matchString KLocalizedString symbolString KLocalizedString realString KLocalizedString integerString UnitPrivate categoryId id multiplier symbol description matchString symbolString realString integerString qreal toDefault qreal value pow value qreal fromDefault qreal value pow value Velocity::Velocity CustomCategory VelocityCategory i18n i18n KLocalizedString symbolString ki18nc addDefaultUnit CustomUnit VelocityCategory MeterPerSecond i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit VelocityCategory KilometerPerHour i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit VelocityCategory MilePerHour i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VelocityCategory FootPerSecond i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VelocityCategory InchPerSecond i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit VelocityCategory Knot i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit VelocityCategory Mach i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VelocityCategory SpeedOfLight e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit BeaufortUnitPrivate VelocityCategory Beaufort i18nc i18nc i18nc symbolString ki18nc ki18ncp</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">volume.cpp</field>
    <field name="url">volume_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion Volume::Volume CustomCategory VolumeCategory i18n i18n KLocalizedString symbolString ki18nc addUnit CustomUnit VolumeCategory CubicYottameter e i18nc i18nc i18nc ki18nc symbolString ki18ncp addUnit CustomUnit VolumeCategory CubicZettameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicExameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicPetameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicTerameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicGigameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicMegameter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicKilometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicHectometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicDecameter i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit VolumeCategory CubicMeter i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicDecimeter i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicCentimeter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicMillimeter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicMicrometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicNanometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicPicometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicFemtometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicAttometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicZeptometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicYoctometer e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Yottaliter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Zettaliter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Exaliter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Petaliter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Teraliter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Gigaliter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Megaliter i18nc i18nc i18nc symbolString ki18nc ki18ncp addDefaultUnit CustomUnit VolumeCategory Kiloliter i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Hectoliter i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Decaliter i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit VolumeCategory Liter i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Deciliter i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Centiliter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit VolumeCategory Milliliter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Microliter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Nanoliter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Picoliter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Femtoliter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Attoliter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Zeptoliter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory Yoctoliter e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicFoot i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicInch e i18nc i18nc i18nc symbolString ki18nc ki18ncp addUnit CustomUnit VolumeCategory CubicMile e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit VolumeCategory FluidOunce e i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit VolumeCategory Cup i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit VolumeCategory GallonUS i18nc i18nc i18nc symbolString ki18nc ki18ncp addCommonUnit CustomUnit VolumeCategory PintImperial i18nc i18nc i18nc symbolString ki18nc ki18ncp</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KUnitConversion::Converter</field>
    <field name="url">classKUnitConversion_1_1Converter.html</field>
    <field name="keywords">Converter</field>
    <field name="text">4.4 This is a class to convert values between different units of measurement license GNU-LGPL v.2 or later Unit UnitCategory Value Petri Damstén John Layt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Converter::Converter</field>
    <field name="args">()</field>
    <field name="url">classKUnitConversion_1_1Converter.html#a823d0f63dda2107dd668258ef273d7f9</field>
    <field name="keywords">Converter KUnitConversion::Converter::Converter KUnitConversion::Converter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Converter::Converter</field>
    <field name="args">(const Converter &amp;other)</field>
    <field name="url">classKUnitConversion_1_1Converter.html#ae211d0424f1db94a42b6caeeb2a2bd50</field>
    <field name="keywords">Converter KUnitConversion::Converter::Converter KUnitConversion::Converter</field>
    <field name="text">other existing Converter instance</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Converter::~Converter</field>
    <field name="args">()</field>
    <field name="url">classKUnitConversion_1_1Converter.html#a9213c3aa973fed60c978b9cd313f8d36</field>
    <field name="keywords">KUnitConversion::Converter::~Converter KUnitConversion::Converter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Converter::categories</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1Converter.html#a22eedc4a884081116c340c6543caa1ad</field>
    <field name="keywords">categories KUnitConversion::Converter::categories KUnitConversion::Converter</field>
    <field name="text">list of unit categories</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Converter::category</field>
    <field name="args">(const QString &amp;category) const</field>
    <field name="url">classKUnitConversion_1_1Converter.html#ad8f9427496e00fa00f3da4fb27ca63ad</field>
    <field name="keywords">category KUnitConversion::Converter::category KUnitConversion::Converter</field>
    <field name="text">category name of the category to find length area mass etc unit category named category or invalid category</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Converter::category</field>
    <field name="args">(CategoryId categoryId) const</field>
    <field name="url">classKUnitConversion_1_1Converter.html#ac65f8e2b9705b0ded34982a02c777f70</field>
    <field name="keywords">category KUnitConversion::Converter::category KUnitConversion::Converter</field>
    <field name="text">categoryId id of the category to find LengthCategory AreaCategory etc unit category which id is categoryId or invalid category</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Converter::categoryForUnit</field>
    <field name="args">(const QString &amp;unit) const</field>
    <field name="url">classKUnitConversion_1_1Converter.html#ab8b9dc720c66d9e84a31ee81ceece0e2</field>
    <field name="keywords">categoryForUnit KUnitConversion::Converter::categoryForUnit KUnitConversion::Converter</field>
    <field name="text">unit unit to find category for unit category for unit</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Converter::convert</field>
    <field name="args">(const Value &amp;value, const QString &amp;toUnit=QString()) const</field>
    <field name="url">classKUnitConversion_1_1Converter.html#a49873f6ce5bbabe68c858838e6e17b3c</field>
    <field name="keywords">convert KUnitConversion::Converter::convert KUnitConversion::Converter</field>
    <field name="text">value value to convert toUnit unit to convert to If empty default unit is used converted value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Converter::operator!=</field>
    <field name="args">(const Converter &amp;other) const</field>
    <field name="url">classKUnitConversion_1_1Converter.html#af2b0b3a93dd65a5942eb23f8bbbbb32c</field>
    <field name="keywords">operator!= KUnitConversion::Converter::operator!= KUnitConversion::Converter</field>
    <field name="text">Returns true if this Converter is not equal to the other Converter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Converter::operator=</field>
    <field name="args">(const Converter &amp;other)</field>
    <field name="url">classKUnitConversion_1_1Converter.html#a744066135655d5798aad2ec75a5ec998</field>
    <field name="keywords">operator= KUnitConversion::Converter::operator= KUnitConversion::Converter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Converter::operator==</field>
    <field name="args">(const Converter &amp;other) const</field>
    <field name="url">classKUnitConversion_1_1Converter.html#ae469e28dab560c425d6dac7e324eb356</field>
    <field name="keywords">operator== KUnitConversion::Converter::operator== KUnitConversion::Converter</field>
    <field name="text">Returns true if this Converter is equal to the other Converter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Converter::swap</field>
    <field name="args">(Converter &amp;other)</field>
    <field name="url">classKUnitConversion_1_1Converter.html#a6853b07b17de856dcb447719a860a01b</field>
    <field name="keywords">swap KUnitConversion::Converter::swap KUnitConversion::Converter</field>
    <field name="text">This function is very fast and never fails</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Converter::unit</field>
    <field name="args">(const QString &amp;unitString) const</field>
    <field name="url">classKUnitConversion_1_1Converter.html#ad8757120f3ed70ffbb6904ba4e558474</field>
    <field name="keywords">unit KUnitConversion::Converter::unit KUnitConversion::Converter</field>
    <field name="text">unitString unit string to find unit for unit for string unit</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Converter::unit</field>
    <field name="args">(UnitId unitId) const</field>
    <field name="url">classKUnitConversion_1_1Converter.html#a4bc536ec84599d773a563fd83f964eb9</field>
    <field name="keywords">unit KUnitConversion::Converter::unit KUnitConversion::Converter</field>
    <field name="text">unit unit enum to find unit for unit for string unit</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KUnitConversion::Unit</field>
    <field name="url">classKUnitConversion_1_1Unit.html</field>
    <field name="keywords">Unit</field>
    <field name="text">4.4 This is a class to define a unit of measurement license GNU-LGPL v.2 or later Converter UnitCategory Value Petri Damstén John Layt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Unit::Unit</field>
    <field name="args">()</field>
    <field name="url">classKUnitConversion_1_1Unit.html#a62f66f4e899da2dcc934b3e3739101f0</field>
    <field name="keywords">Unit KUnitConversion::Unit::Unit KUnitConversion::Unit</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Unit::Unit</field>
    <field name="args">(const Unit &amp;other)</field>
    <field name="url">classKUnitConversion_1_1Unit.html#a349dc32b2a96937703756e679b3acc09</field>
    <field name="keywords">Unit KUnitConversion::Unit::Unit KUnitConversion::Unit</field>
    <field name="text">other to this</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Unit::category</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1Unit.html#abe730c1fc591b7c53d1b8953400323e3</field>
    <field name="keywords">category KUnitConversion::Unit::category KUnitConversion::Unit</field>
    <field name="text">unit category</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Unit::categoryId</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1Unit.html#af4ae26f938c063360c8f60d9abe419bc</field>
    <field name="keywords">categoryId KUnitConversion::Unit::categoryId KUnitConversion::Unit</field>
    <field name="text">category id</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Unit::description</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1Unit.html#ae95ba0744e9d27835ae08c53693cebff</field>
    <field name="keywords">description KUnitConversion::Unit::description KUnitConversion::Unit</field>
    <field name="text">translated name for unit</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Unit::id</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1Unit.html#a778575ca89546e6e4a3e0c04595ea4d4</field>
    <field name="keywords">id KUnitConversion::Unit::id KUnitConversion::Unit</field>
    <field name="text">unit id</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Unit::isNull</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1Unit.html#a6a0a35e6b3bb2a84064268683c31c4ae</field>
    <field name="keywords">isNull KUnitConversion::Unit::isNull KUnitConversion::Unit</field>
    <field name="text">returns true if this Unit is null</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Unit::isValid</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1Unit.html#a90051d22e62cdc856091c4061ba97be2</field>
    <field name="keywords">isValid KUnitConversion::Unit::isValid KUnitConversion::Unit</field>
    <field name="text">if unit is valid</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Unit::operator!=</field>
    <field name="args">(const Unit &amp;other) const</field>
    <field name="url">classKUnitConversion_1_1Unit.html#afdd8b8d851827022ffab93def4ceb29d</field>
    <field name="keywords">operator!= KUnitConversion::Unit::operator!= KUnitConversion::Unit</field>
    <field name="text">Returns true if this Unit is not equal to the other Unit</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Unit::operator=</field>
    <field name="args">(const Unit &amp;other)</field>
    <field name="url">classKUnitConversion_1_1Unit.html#ab5aa75774c3225108432887cc2418ece</field>
    <field name="keywords">operator= KUnitConversion::Unit::operator= KUnitConversion::Unit</field>
    <field name="text">other to this</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Unit::operator==</field>
    <field name="args">(const Unit &amp;other) const</field>
    <field name="url">classKUnitConversion_1_1Unit.html#a0ac2db38022a65741c566b443ee4ea02</field>
    <field name="keywords">operator== KUnitConversion::Unit::operator== KUnitConversion::Unit</field>
    <field name="text">Returns true if this Unit is equal to the other Unit</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Unit::swap</field>
    <field name="args">(Unit &amp;other)</field>
    <field name="url">classKUnitConversion_1_1Unit.html#a576929dc0434d966311789e9fa627bd1</field>
    <field name="keywords">swap KUnitConversion::Unit::swap KUnitConversion::Unit</field>
    <field name="text">This function is very fast and never fails</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Unit::symbol</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1Unit.html#a2b439f4be0a6fbe7f200c1f5ef08cfd6</field>
    <field name="keywords">symbol KUnitConversion::Unit::symbol KUnitConversion::Unit</field>
    <field name="text">symbol for the unit</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Unit::toString</field>
    <field name="args">(qreal value, int fieldWidth=0, char format=&apos;g&apos;, int precision=-1, const QChar &amp;fillChar=QLatin1Char(&apos; &apos;)) const</field>
    <field name="url">classKUnitConversion_1_1Unit.html#a862ec40de4e9292234f82f22e21546f9</field>
    <field name="keywords">toString KUnitConversion::Unit::toString KUnitConversion::Unit</field>
    <field name="text">value number value fieldWidth width of the formatted field padded by spaces Positive value aligns right negative aligns left format type of floating point formating like in QString::arg precision number of digits after the decimal separator fillChar the character used to fill up the empty places when field width is greater than argument width value unit string</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Unit::toSymbolString</field>
    <field name="args">(qreal value, int fieldWidth=0, char format=&apos;g&apos;, int precision=-1, const QChar &amp;fillChar=QLatin1Char(&apos; &apos;)) const</field>
    <field name="url">classKUnitConversion_1_1Unit.html#a91bf4560581950503e6a3e0ce3e938a3</field>
    <field name="keywords">toSymbolString KUnitConversion::Unit::toSymbolString KUnitConversion::Unit</field>
    <field name="text">value number value fieldWidth width of the formatted field padded by spaces Positive value aligns right negative aligns left format type of floating point formating like in QString::arg precision number of digits after the decimal separator fillChar the character used to fill up the empty places when field width is greater than argument width value unit string</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KUnitConversion::UnitCategory</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html</field>
    <field name="keywords">UnitCategory</field>
    <field name="text">4.4 This is a class to define a category of units of measurement license GNU-LGPL v.2 or later Converter Unit Value Petri Damstén John Layt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::UnitCategory</field>
    <field name="args">()</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#a13ac9b3c0f18ca564a4137804d2e8ac6</field>
    <field name="keywords">UnitCategory KUnitConversion::UnitCategory::UnitCategory KUnitConversion::UnitCategory</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::UnitCategory</field>
    <field name="args">(const UnitCategory &amp;other)</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#ac95b1d8157549cf3294cabd104fcb84d</field>
    <field name="keywords">UnitCategory KUnitConversion::UnitCategory::UnitCategory KUnitConversion::UnitCategory</field>
    <field name="text">other to this</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::allUnits</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#a12d7bf6ea46042cce04ea141e24272f3</field>
    <field name="keywords">allUnits KUnitConversion::UnitCategory::allUnits KUnitConversion::UnitCategory</field>
    <field name="text">list of units</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::convert</field>
    <field name="args">(const Value &amp;value, const QString &amp;toUnit=QString())</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#a99833ed4561c96169669d010249a69a6</field>
    <field name="keywords">convert KUnitConversion::UnitCategory::convert KUnitConversion::UnitCategory</field>
    <field name="text">value value to convert toUnit unit to convert to If empty default unit is used converted value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::defaultUnit</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#a6db2e49ac6419ad6e038b56bf4493ed0</field>
    <field name="keywords">defaultUnit KUnitConversion::UnitCategory::defaultUnit KUnitConversion::UnitCategory</field>
    <field name="text">default unit</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::description</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#aef692b9d87ea1a824729d4c351ed2fea</field>
    <field name="keywords">description KUnitConversion::UnitCategory::description KUnitConversion::UnitCategory</field>
    <field name="text">unit category description</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::hasUnit</field>
    <field name="args">(const QString &amp;unit) const</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#af86a45c33681cd419791389c8ef383fd</field>
    <field name="keywords">hasUnit KUnitConversion::UnitCategory::hasUnit KUnitConversion::UnitCategory</field>
    <field name="text">True if unit is found</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::id</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#a7b1caf662bf9904513ca70a3827f9f23</field>
    <field name="keywords">id KUnitConversion::UnitCategory::id KUnitConversion::UnitCategory</field>
    <field name="text">category id</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::isNull</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#a667cdbdfa0f1aad07c860dfc2676d48a</field>
    <field name="keywords">isNull KUnitConversion::UnitCategory::isNull KUnitConversion::UnitCategory</field>
    <field name="text">returns true if this UnitCategory is null</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::mostCommonUnits</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#af50b43deb1151b8dd14e6d7f85d71bcb</field>
    <field name="keywords">mostCommonUnits KUnitConversion::UnitCategory::mostCommonUnits KUnitConversion::UnitCategory</field>
    <field name="text">list of units</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::name</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#a8a5ff2d62a588f0fd70bcfd6f81fe2b7</field>
    <field name="keywords">name KUnitConversion::UnitCategory::name KUnitConversion::UnitCategory</field>
    <field name="text">Translated name for category</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::operator!=</field>
    <field name="args">(const UnitCategory &amp;other) const</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#a1599815a9e34ced24d8c3259063bc91f</field>
    <field name="keywords">operator!= KUnitConversion::UnitCategory::operator!= KUnitConversion::UnitCategory</field>
    <field name="text">Returns true if this UnitCategory is not equal to the other UnitCategory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::operator=</field>
    <field name="args">(const UnitCategory &amp;other)</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#aa1408390051fa93c0c6da3abddb2ebe8</field>
    <field name="keywords">operator= KUnitConversion::UnitCategory::operator= KUnitConversion::UnitCategory</field>
    <field name="text">other to this</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::operator==</field>
    <field name="args">(const UnitCategory &amp;other) const</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#a53e2ac50ad78036f59d8889336bfa6cb</field>
    <field name="keywords">operator== KUnitConversion::UnitCategory::operator== KUnitConversion::UnitCategory</field>
    <field name="text">Returns true if this UnitCategory is equal to the other UnitCategory</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::swap</field>
    <field name="args">(UnitCategory &amp;other)</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#ae421f9832340e30dfeacc9722ef9ffce</field>
    <field name="keywords">swap KUnitConversion::UnitCategory::swap KUnitConversion::UnitCategory</field>
    <field name="text">This function is very fast and never fails</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::unit</field>
    <field name="args">(const QString &amp;s) const</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#a6d5132b7ff1ab67e044ac31f95899f72</field>
    <field name="keywords">unit KUnitConversion::UnitCategory::unit KUnitConversion::UnitCategory</field>
    <field name="text">Pointer to unit class</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::unit</field>
    <field name="args">(UnitId unitId) const</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#a64504183c81e33a12076893dfa994cb3</field>
    <field name="keywords">unit KUnitConversion::UnitCategory::unit KUnitConversion::UnitCategory</field>
    <field name="text">Pointer to unit class</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::UnitCategory::units</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1UnitCategory.html#a50979eb01d3507f656f8c5f0f3b71cd4</field>
    <field name="keywords">units KUnitConversion::UnitCategory::units KUnitConversion::UnitCategory</field>
    <field name="text">list of units</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KUnitConversion::Value</field>
    <field name="url">classKUnitConversion_1_1Value.html</field>
    <field name="keywords">Value</field>
    <field name="text">4.4 This is a class to hold a value in a unit of measurement license GNU-LGPL v.2 or later Converter Unit UnitCategory Petri Damstén John Layt</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::Value</field>
    <field name="args">()</field>
    <field name="url">classKUnitConversion_1_1Value.html#ab8f61d173109bc86bb480a8de93a40b9</field>
    <field name="keywords">Value KUnitConversion::Value::Value KUnitConversion::Value</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::Value</field>
    <field name="args">(qreal number, const Unit &amp;unit)</field>
    <field name="url">classKUnitConversion_1_1Value.html#ab0f91a87c9e69f4fcb6f3135eaf99b8a</field>
    <field name="keywords">Value KUnitConversion::Value::Value KUnitConversion::Value</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::Value</field>
    <field name="args">(qreal number, const QString &amp;unitString)</field>
    <field name="url">classKUnitConversion_1_1Value.html#a5a48ecdbbe60fb473d9aab0976d6d63e</field>
    <field name="keywords">Value KUnitConversion::Value::Value KUnitConversion::Value</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::Value</field>
    <field name="args">(qreal number, UnitId unitId)</field>
    <field name="url">classKUnitConversion_1_1Value.html#a14ab7df4bb3e92c5f367192aae4fc1d5</field>
    <field name="keywords">Value KUnitConversion::Value::Value KUnitConversion::Value</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::Value</field>
    <field name="args">(const QVariant &amp;number, const QString &amp;unitString)</field>
    <field name="url">classKUnitConversion_1_1Value.html#a3a9da026fd839fbd2a75a261a84b7311</field>
    <field name="keywords">Value KUnitConversion::Value::Value KUnitConversion::Value</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::Value</field>
    <field name="args">(const Value &amp;other)</field>
    <field name="url">classKUnitConversion_1_1Value.html#a39782c00754111ba60c9b820269a38ff</field>
    <field name="keywords">Value KUnitConversion::Value::Value KUnitConversion::Value</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::~Value</field>
    <field name="args">()</field>
    <field name="url">classKUnitConversion_1_1Value.html#ae47d6029501c43d18b49e411f998f42e</field>
    <field name="keywords">KUnitConversion::Value::~Value KUnitConversion::Value</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::convertTo</field>
    <field name="args">(const Unit &amp;unit) const</field>
    <field name="url">classKUnitConversion_1_1Value.html#aa4df388fd0833dc8036848a8ec1fef70</field>
    <field name="keywords">convertTo KUnitConversion::Value::convertTo KUnitConversion::Value</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::convertTo</field>
    <field name="args">(UnitId unit) const</field>
    <field name="url">classKUnitConversion_1_1Value.html#a929446411f98e7f45684378a0f30613e</field>
    <field name="keywords">convertTo KUnitConversion::Value::convertTo KUnitConversion::Value</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::convertTo</field>
    <field name="args">(const QString &amp;unit) const</field>
    <field name="url">classKUnitConversion_1_1Value.html#a0881b5bf04f5649d966b73c88b18bcd9</field>
    <field name="keywords">convertTo KUnitConversion::Value::convertTo KUnitConversion::Value</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::isNull</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1Value.html#a5112433c9fa1269a954eb8e1a8871401</field>
    <field name="keywords">isNull KUnitConversion::Value::isNull KUnitConversion::Value</field>
    <field name="text">returns true if this Value is null</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::isValid</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1Value.html#a6c37c021d53e0a516de6f6ecfe02db44</field>
    <field name="keywords">isValid KUnitConversion::Value::isValid KUnitConversion::Value</field>
    <field name="text">True if value is valid</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::number</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1Value.html#a6678421a9f94f92428a63b59004e28b3</field>
    <field name="keywords">number KUnitConversion::Value::number KUnitConversion::Value</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::operator!=</field>
    <field name="args">(const Value &amp;other) const</field>
    <field name="url">classKUnitConversion_1_1Value.html#af49872dc048b3073f7002086ec246e64</field>
    <field name="keywords">operator!= KUnitConversion::Value::operator!= KUnitConversion::Value</field>
    <field name="text">Returns true if this Value is not equal to the other Value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::operator=</field>
    <field name="args">(const Value &amp;other)</field>
    <field name="url">classKUnitConversion_1_1Value.html#a831c0459c800e47e4292f214ae5c0442</field>
    <field name="keywords">operator= KUnitConversion::Value::operator= KUnitConversion::Value</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::operator==</field>
    <field name="args">(const Value &amp;other) const</field>
    <field name="url">classKUnitConversion_1_1Value.html#a919c91177dd80d703d687c113261080f</field>
    <field name="keywords">operator== KUnitConversion::Value::operator== KUnitConversion::Value</field>
    <field name="text">Returns true if this Value is equal to the other Value</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::round</field>
    <field name="args">(uint decimals)</field>
    <field name="url">classKUnitConversion_1_1Value.html#ac6ba5e47f8f9cf6c3ff29844ce997778</field>
    <field name="keywords">round KUnitConversion::Value::round KUnitConversion::Value</field>
    <field name="text">decimals decimal count</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::swap</field>
    <field name="args">(Value &amp;other)</field>
    <field name="url">classKUnitConversion_1_1Value.html#abbb7c2379b489022be5bd740952bfc2f</field>
    <field name="keywords">swap KUnitConversion::Value::swap KUnitConversion::Value</field>
    <field name="text">This function is very fast and never fails</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::toString</field>
    <field name="args">(int fieldWidth=0, char format=&apos;g&apos;, int precision=-1, const QChar &amp;fillChar=QLatin1Char(&apos; &apos;)) const</field>
    <field name="url">classKUnitConversion_1_1Value.html#a5f108858d8ba737f0ecbe1cfccda1687</field>
    <field name="keywords">toString KUnitConversion::Value::toString KUnitConversion::Value</field>
    <field name="text">fieldWidth width of the formatted field padded by spaces Positive value aligns right negative aligns left format type of floating point formating like in QString::arg precision number of digits after the decimal separator fillChar the character used to fill up the empty places when field width is greater than argument width value as a string</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::toSymbolString</field>
    <field name="args">(int fieldWidth=0, char format=&apos;g&apos;, int precision=-1, const QChar &amp;fillChar=QLatin1Char(&apos; &apos;)) const</field>
    <field name="url">classKUnitConversion_1_1Value.html#a48f272d1f95ffa940cf6173c6e2e5871</field>
    <field name="keywords">toSymbolString KUnitConversion::Value::toSymbolString KUnitConversion::Value</field>
    <field name="text">fieldWidth width of the formatted field padded by spaces Positive value aligns right negative aligns left format type of floating point formating like in QString::arg precision number of digits after the decimal separator fillChar the character used to fill up the empty places when field width is greater than argument width value as a string</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KUnitConversion::Value::unit</field>
    <field name="args">() const</field>
    <field name="url">classKUnitConversion_1_1Value.html#a9572af7fcb2f86df4f79579a4da35add</field>
    <field name="keywords">unit KUnitConversion::Value::unit KUnitConversion::Value</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">index</field>
    <field name="url">index.html</field>
    <field name="keywords"></field>
    <field name="text">KUnitConversion Converting physical units Introduction KUnitConversion provides functions to convert values in different physical units It supports converting different prefixes e.g kilo mega giga as well as converting between different unit systems e.g liters gallons The following areas are supported Acceleration Angle Area Currency Density Energy Force Frequency Fuel efficiency Length Mass Power Pressure Temperature Time Velocity Volume Usage To convert 100 GBP into EUR you can write</field>
  </doc>
</add>
