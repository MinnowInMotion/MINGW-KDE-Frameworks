{"name": "kbookmarks-5.26.0", "fancyname": "KBookmarks", "docfields": [{"type": "page", "name": "todo", "url": "todo.html", "keyword": null, "text": "Todo List Member KBookmarkMenu KBookmarkMenu KBookmarkManager KBookmarkOwner QMenu KActionCollection KDE 5 give ownership of the bookmarkmenu to another qobject e.g parentMenu Currently this is a QObject without a parent use setParent to benefit from automatic deletion Member KBookmarkMenu KBookmarkMenu KBookmarkManager KBookmarkOwner QMenu const QString parentAddress KF6 give ownership of the bookmarkmenu to another qobject e.g parentMenu Currently this is a QObject without a parent use setParent to benefit from automatic deletion"}, {"type": "class", "name": "KBookmark::List", "url": "classKBookmark_1_1List.html", "keyword": "List", "text": "KBookmark QList"}, {"type": "function", "name": "KBookmark::List::populateMimeData", "url": "classKBookmark_1_1List.html#aeea14f38ffce55cadc17210723ae690f", "keyword": "populateMimeData KBookmark::List::populateMimeData KBookmark::List", "text": "mimeData the QMimeData instance used to drag or copy this bookmark"}, {"type": "function", "name": "KBookmark::List::canDecode", "url": "classKBookmark_1_1List.html#a37eef6e9574008bf4235e1f7429e2bcd", "keyword": "canDecode KBookmark::List::canDecode KBookmark::List", "text": ""}, {"type": "function", "name": "KBookmark::List::fromMimeData", "url": "classKBookmark_1_1List.html#a0a501c0e627533735a805ef0167e4768", "keyword": "fromMimeData KBookmark::List::fromMimeData KBookmark::List", "text": "Decoding will fail if mimeData does not contain any bookmarks mimeData the mime data to extract from cannot be 0 parentDocument pass an empty QDomDocument here it will be used as container for the bookmarks You just need to make sure it stays alive longer or just as long as the returned bookmarks the list of bookmarks 4.3.2"}, {"type": "function", "name": "KBookmark::List::mimeDataTypes", "url": "classKBookmark_1_1List.html#ac3e88ff4c079b94d6f6042468a900101", "keyword": "mimeDataTypes KBookmark::List::mimeDataTypes KBookmark::List", "text": ""}, {"type": "class", "name": "KBookmarkAction", "url": "classKBookmarkAction.html", "keyword": "KBookmarkAction", "text": "It provides a nice constructor And on triggered uses the owner to open the bookmark"}, {"type": "class", "name": "KBookmarkDialog", "url": "classKBookmarkDialog.html", "keyword": "KBookmarkDialog", "text": "It can be used to show dialogs for common tasks with bookmarks It is used by KBookmarkMenu to show a dialog for and If you want to customize those dialogs derive from KBookmarkOwner and reimplement bookmarkDialog() return a KBookmarkDialog subclass and reimplement initLayout() aboutToShow() and save()"}, {"type": "function", "name": "KBookmarkDialog::KBookmarkDialog", "url": "classKBookmarkDialog.html#ad06bf3e7e192f47d490e61fdb18abdf9", "keyword": "KBookmarkDialog KBookmarkDialog::KBookmarkDialog KBookmarkDialog", "text": ""}, {"type": "function", "name": "KBookmarkDialog::addBookmark", "url": "classKBookmarkDialog.html#aaa00938aba2803e2e74748202f5b47c0", "keyword": "addBookmark KBookmarkDialog::addBookmark KBookmarkDialog", "text": ""}, {"type": "function", "name": "KBookmarkDialog::addBookmarks", "url": "classKBookmarkDialog.html#a7d71d184c39e72e6eb8193e2f131bd93", "keyword": "addBookmarks KBookmarkDialog::addBookmarks KBookmarkDialog", "text": ""}, {"type": "function", "name": "KBookmarkDialog::createNewFolder", "url": "classKBookmarkDialog.html#aa2a8d8b9abadf5f38113241a4fe242b2", "keyword": "createNewFolder KBookmarkDialog::createNewFolder KBookmarkDialog", "text": ""}, {"type": "function", "name": "KBookmarkDialog::editBookmark", "url": "classKBookmarkDialog.html#a0b3ec7b1fcb07433840486cdd1571ff1", "keyword": "editBookmark KBookmarkDialog::editBookmark KBookmarkDialog", "text": ""}, {"type": "function", "name": "KBookmarkDialog::selectFolder", "url": "classKBookmarkDialog.html#a15345dba0af68488505602144bc3a2a4", "keyword": "selectFolder KBookmarkDialog::selectFolder KBookmarkDialog", "text": ""}, {"type": "class", "name": "KBookmarkGroup", "url": "classKBookmarkGroup.html", "keyword": "KBookmarkGroup", "text": ""}, {"type": "function", "name": "KBookmarkGroup::KBookmarkGroup", "url": "classKBookmarkGroup.html#a4730192942a87021832459779884a15b", "keyword": "KBookmarkGroup KBookmarkGroup::KBookmarkGroup KBookmarkGroup", "text": "This is mostly for use in QList and other places where we need a null group Also used as a parent for a bookmark that doesn t have one e.g Netscape bookmarks"}, {"type": "function", "name": "KBookmarkGroup::KBookmarkGroup", "url": "classKBookmarkGroup.html#ab985363fe2df2eacf8d5326f4f504139", "keyword": "KBookmarkGroup KBookmarkGroup::KBookmarkGroup KBookmarkGroup", "text": ""}, {"type": "function", "name": "KBookmarkGroup::addBookmark", "url": "classKBookmarkGroup.html#a93561569b60fadea65c8ebce0ee443bb", "keyword": "addBookmark KBookmarkGroup::addBookmark KBookmarkGroup", "text": "bm the bookmark to add"}, {"type": "function", "name": "KBookmarkGroup::addBookmark", "url": "classKBookmarkGroup.html#a7794de72c45f521b40846075c1fbe1bc", "keyword": "addBookmark KBookmarkGroup::addBookmark KBookmarkGroup", "text": "text for the bookmark url the URL that the bookmark points to icon the name of the icon to associate with the bookmark A suitable default will be determined from the URL if not specified"}, {"type": "function", "name": "KBookmarkGroup::createNewFolder", "url": "classKBookmarkGroup.html#af4ec213320d603f437d2e40b4550e5d9", "keyword": "createNewFolder KBookmarkGroup::createNewFolder KBookmarkGroup", "text": "text for the folder If you want an dialog use KBookmarkDialog"}, {"type": "function", "name": "KBookmarkGroup::createNewSeparator", "url": "classKBookmarkGroup.html#a84aac1c4e3acf5f17c49d080583d409b", "keyword": "createNewSeparator KBookmarkGroup::createNewSeparator KBookmarkGroup", "text": ""}, {"type": "function", "name": "KBookmarkGroup::deleteBookmark", "url": "classKBookmarkGroup.html#a3c769f7de5bde4d1653b86a36ece028e", "keyword": "deleteBookmark KBookmarkGroup::deleteBookmark KBookmarkGroup", "text": ""}, {"type": "function", "name": "KBookmarkGroup::findToolbar", "url": "classKBookmarkGroup.html#aadcab721a97f4fc7cd082255952b030b", "keyword": "findToolbar KBookmarkGroup::findToolbar KBookmarkGroup", "text": ""}, {"type": "function", "name": "KBookmarkGroup::first", "url": "classKBookmarkGroup.html#a28b25e4e4f493bbd9a01469dc312a13c", "keyword": "first KBookmarkGroup::first KBookmarkGroup", "text": ""}, {"type": "function", "name": "KBookmarkGroup::groupUrlList", "url": "classKBookmarkGroup.html#abbf3a6cfe377d4d21a91745ef1893094", "keyword": "groupUrlList KBookmarkGroup::groupUrlList KBookmarkGroup", "text": "the list of urls of bookmarks at top level of the group"}, {"type": "function", "name": "KBookmarkGroup::indexOf", "url": "classKBookmarkGroup.html#a987101ad665932c5f55e9b14ec497c41", "keyword": "indexOf KBookmarkGroup::indexOf KBookmarkGroup", "text": ""}, {"type": "function", "name": "KBookmarkGroup::isOpen", "url": "classKBookmarkGroup.html#a31c2d08d650d7d893dc9320169e61819", "keyword": "isOpen KBookmarkGroup::isOpen KBookmarkGroup", "text": "true if the bookmark folder is opened in the bookmark editor"}, {"type": "function", "name": "KBookmarkGroup::isToolbarGroup", "url": "classKBookmarkGroup.html#a08cc341d8b04a1d31aa5ac39b7a903c1", "keyword": "isToolbarGroup KBookmarkGroup::isToolbarGroup KBookmarkGroup", "text": "true if this is the toolbar group"}, {"type": "function", "name": "KBookmarkGroup::moveBookmark", "url": "classKBookmarkGroup.html#a73c4fd8caa1dc2407c6a40c2d29f5885", "keyword": "moveBookmark KBookmarkGroup::moveBookmark KBookmarkGroup", "text": "If after is null bookmark is moved as the first child Don t forget to use KBookmarkManager::self() emitChanged( parentBookmark )"}, {"type": "function", "name": "KBookmarkGroup::next", "url": "classKBookmarkGroup.html#a0f04f527e1b5cabbcd905a7e7b35ee51", "keyword": "next KBookmarkGroup::next KBookmarkGroup", "text": "current has to be one of our child bookmarks"}, {"type": "function", "name": "KBookmarkGroup::previous", "url": "classKBookmarkGroup.html#a5a1b89470f84c26426982a141205d001", "keyword": "previous KBookmarkGroup::previous KBookmarkGroup", "text": "current has to be one of our child bookmarks"}, {"type": "class", "name": "KBookmarkImporterBase", "url": "classKBookmarkImporterBase.html", "keyword": "KBookmarkImporterBase", "text": ""}, {"type": "signal", "name": "KBookmarkImporterBase::endFolder", "url": "classKBookmarkImporterBase.html#a58815056531bb99c39755258c12e0011", "keyword": "endFolder KBookmarkImporterBase::endFolder KBookmarkImporterBase endFolder KBookmarkImporterBase::endFolder KBookmarkImporterBase endFolder KBookmarkImporterBase::endFolder KBookmarkImporterBase endFolder KBookmarkImporterBase::endFolder KBookmarkImporterBase endFolder KBookmarkImporterBase::endFolder KBookmarkImporterBase endFolder KBookmarkImporterBase::endFolder KBookmarkImporterBase", "text": ""}, {"type": "signal", "name": "KBookmarkImporterBase::newBookmark", "url": "classKBookmarkImporterBase.html#ad55f169795910a894308a4dee6ec018b", "keyword": "newBookmark KBookmarkImporterBase::newBookmark KBookmarkImporterBase newBookmark KBookmarkImporterBase::newBookmark KBookmarkImporterBase newBookmark KBookmarkImporterBase::newBookmark KBookmarkImporterBase newBookmark KBookmarkImporterBase::newBookmark KBookmarkImporterBase newBookmark KBookmarkImporterBase::newBookmark KBookmarkImporterBase newBookmark KBookmarkImporterBase::newBookmark KBookmarkImporterBase", "text": ""}, {"type": "signal", "name": "KBookmarkImporterBase::newFolder", "url": "classKBookmarkImporterBase.html#a5e3105a0e31ea36cfb318da6eb792ebe", "keyword": "newFolder KBookmarkImporterBase::newFolder KBookmarkImporterBase newFolder KBookmarkImporterBase::newFolder KBookmarkImporterBase newFolder KBookmarkImporterBase::newFolder KBookmarkImporterBase newFolder KBookmarkImporterBase::newFolder KBookmarkImporterBase newFolder KBookmarkImporterBase::newFolder KBookmarkImporterBase newFolder KBookmarkImporterBase::newFolder KBookmarkImporterBase", "text": ""}, {"type": "signal", "name": "KBookmarkImporterBase::newSeparator", "url": "classKBookmarkImporterBase.html#a3ea59a77426f6bd18c8ddc5463da40b8", "keyword": "newSeparator KBookmarkImporterBase::newSeparator KBookmarkImporterBase newSeparator KBookmarkImporterBase::newSeparator KBookmarkImporterBase newSeparator KBookmarkImporterBase::newSeparator KBookmarkImporterBase newSeparator KBookmarkImporterBase::newSeparator KBookmarkImporterBase newSeparator KBookmarkImporterBase::newSeparator KBookmarkImporterBase newSeparator KBookmarkImporterBase::newSeparator KBookmarkImporterBase", "text": ""}, {"type": "class", "name": "KBookmarkManager", "url": "classKBookmarkManager.html", "keyword": "KBookmarkManager", "text": "The bookmarks file is read and written using the XBEL standard A sample file looks like this"}, {"type": "signal", "name": "KBookmarkManager::bookmarkCompleteChange", "url": "classKBookmarkManager.html#aa666423a7042a22b97fc762d971405c8", "keyword": "bookmarkCompleteChange KBookmarkManager::bookmarkCompleteChange KBookmarkManager", "text": ""}, {"type": "signal", "name": "KBookmarkManager::bookmarkConfigChanged", "url": "classKBookmarkManager.html#a55637b0a44a33ddd98a625ba97cf0c18", "keyword": "bookmarkConfigChanged KBookmarkManager::bookmarkConfigChanged KBookmarkManager", "text": ""}, {"type": "signal", "name": "KBookmarkManager::bookmarksChanged", "url": "classKBookmarkManager.html#a81735946fbd339678fba25ce0c9b489d", "keyword": "bookmarksChanged KBookmarkManager::bookmarksChanged KBookmarkManager", "text": ""}, {"type": "signal", "name": "KBookmarkManager::changed", "url": "classKBookmarkManager.html#afe9b7b5c202ee051f4129ac42b485496", "keyword": "changed KBookmarkManager::changed KBookmarkManager", "text": "has been modified by the caller caller connect to this"}, {"type": "signal", "name": "KBookmarkManager::configChanged", "url": "classKBookmarkManager.html#a034530f18c9287b58a34a6ed493dcfea", "keyword": "configChanged KBookmarkManager::configChanged KBookmarkManager", "text": ""}, {"type": "signal", "name": "KBookmarkManager::error", "url": "classKBookmarkManager.html#a780d2f3e3084c3c190d263565897e26e", "keyword": "error KBookmarkManager::error KBookmarkManager", "text": "Contains the translated error message 4.6"}, {"type": "slot", "name": "KBookmarkManager::notifyChanged", "url": "classKBookmarkManager.html#a19892e411b60e774bd40fa44ded38e18", "keyword": "notifyChanged KBookmarkManager::notifyChanged KBookmarkManager", "text": "KBookmark::address() Called by the process that saved the file after a small change new bookmark or new folder Does not send signal over DBUS to the other Bookmark Managers You probably want to call emitChanged()"}, {"type": "slot", "name": "KBookmarkManager::notifyCompleteChange", "url": "classKBookmarkManager.html#a65a291d44f895c22eee140b441e0801e", "keyword": "notifyCompleteChange KBookmarkManager::notifyCompleteChange KBookmarkManager", "text": ""}, {"type": "function", "name": "KBookmarkManager::~KBookmarkManager", "url": "classKBookmarkManager.html#aa67441407d5a60efb7670ac1b74c400b", "keyword": "KBookmarkManager::~KBookmarkManager KBookmarkManager", "text": ""}, {"type": "function", "name": "KBookmarkManager::autoErrorHandlingEnabled", "url": "classKBookmarkManager.html#a099bcb2626e47b9e76d61a9f37077088", "keyword": "autoErrorHandlingEnabled KBookmarkManager::autoErrorHandlingEnabled KBookmarkManager", "text": "If enabled it will show an error dialog to the user when an error occurs It is turned on by default true if auto error handling is enabled false otherwise dialogs will only be displayed if the current thread is the gui thread 4.6 setAutoErrorHandlingEnabled()"}, {"type": "function", "name": "KBookmarkManager::emitChanged", "url": "classKBookmarkManager.html#af7e70ce502d199115eef716c71d2b560", "keyword": "emitChanged KBookmarkManager::emitChanged KBookmarkManager", "text": ""}, {"type": "function", "name": "KBookmarkManager::emitChanged", "url": "classKBookmarkManager.html#a296e1309418fc9b0335cdd8a14a40344", "keyword": "emitChanged KBookmarkManager::emitChanged KBookmarkManager", "text": "group the parent of all changed bookmarks"}, {"type": "function", "name": "KBookmarkManager::findByAddress", "url": "classKBookmarkManager.html#a0d312a1341a366632c50e56b7e9d2c4c", "keyword": "findByAddress KBookmarkManager::findByAddress KBookmarkManager", "text": "the bookmark designated by address address the address belonging to the bookmark you re looking for tolerate when true tries to find the most tolerable bookmark position KBookmark::address"}, {"type": "function", "name": "KBookmarkManager::internalDocument", "url": "classKBookmarkManager.html#a2466fc498c720d2fbb07d9deac2c90df", "keyword": "internalDocument KBookmarkManager::internalDocument KBookmarkManager", "text": ""}, {"type": "function", "name": "KBookmarkManager::path", "url": "classKBookmarkManager.html#a60ed5169a50e93c8678ba9d56bce1658", "keyword": "path KBookmarkManager::path KBookmarkManager", "text": "the path containing the bookmarks"}, {"type": "function", "name": "KBookmarkManager::root", "url": "classKBookmarkManager.html#a661c878cc751214b1d0e024a0f3c4cdc", "keyword": "root KBookmarkManager::root KBookmarkManager", "text": "It is used to iterate through the bookmarks manually It is mostly used internally the root top-level bookmark"}, {"type": "function", "name": "KBookmarkManager::save", "url": "classKBookmarkManager.html#a5bcad37e974b1c78fd25f344f3d3e308", "keyword": "save KBookmarkManager::save KBookmarkManager", "text": "You should use emitChanged() instead of this function it saves and notifies everyone that the file has changed Only use this if you don t want the emitChanged signal toolbarCache iff true save a cache of the toolbar folder too true if saving was successful"}, {"type": "function", "name": "KBookmarkManager::saveAs", "url": "classKBookmarkManager.html#a7e6a2c1bff4e0a1023a65982177ad213", "keyword": "saveAs KBookmarkManager::saveAs KBookmarkManager", "text": "filename full path to the desired bookmarks file location toolbarCache iff true save a cache of the toolbar folder too true if saving was successful"}, {"type": "function", "name": "KBookmarkManager::setAutoErrorHandlingEnabled", "url": "classKBookmarkManager.html#a0a6fe20faa72e959877d6c8bd60b456a", "keyword": "setAutoErrorHandlingEnabled KBookmarkManager::setAutoErrorHandlingEnabled KBookmarkManager", "text": "If enabled it will show an error dialog to the user when an error occurs It is turned on by default If disabled the application should react on the error() signal enable true to enable auto error handling false to disable parent the parent widget for the error dialogs can be 0 for top-level 4.6 autoErrorHandlingEnabled()"}, {"type": "function", "name": "KBookmarkManager::setEditorOptions", "url": "classKBookmarkManager.html#ad1b3837288e0a2016b8ffc700bf86969", "keyword": "setEditorOptions KBookmarkManager::setEditorOptions KBookmarkManager", "text": "caption the caption string for instance browser iff false display no browser specific menu items in keditbookmarks nobrowser"}, {"type": "function", "name": "KBookmarkManager::setUpdate", "url": "classKBookmarkManager.html#a51327231e241329c4fa11be736a5b29a", "keyword": "setUpdate KBookmarkManager::setUpdate KBookmarkManager", "text": "Defaults to true update if true then KBookmarkManager will listen to DBUS update requests"}, {"type": "function", "name": "KBookmarkManager::toolbar", "url": "classKBookmarkManager.html#a351e9db40515e3a7711cce5cac91336b", "keyword": "toolbar KBookmarkManager::toolbar KBookmarkManager", "text": "In the XML this is the group with the attribute toolbar yes the toolbar group"}, {"type": "function", "name": "KBookmarkManager::updateAccessMetadata", "url": "classKBookmarkManager.html#a334446f40a831cc4040e7fa429daa6b5", "keyword": "updateAccessMetadata KBookmarkManager::updateAccessMetadata KBookmarkManager", "text": "url the viewed url true if any metadata was modified bookmarks file is not saved automatically"}, {"type": "function", "name": "KBookmarkManager::createTempManager", "url": "classKBookmarkManager.html#ad18f16a34e53c010e653b88eebc7d004", "keyword": "createTempManager KBookmarkManager::createTempManager KBookmarkManager", "text": ""}, {"type": "function", "name": "KBookmarkManager::managerForExternalFile", "url": "classKBookmarkManager.html#a6bb90fc4f0c1ea1c06d0176b3cb64651", "keyword": "managerForExternalFile KBookmarkManager::managerForExternalFile KBookmarkManager", "text": "bookmarksFile full path to the bookmarks file 4.1"}, {"type": "function", "name": "KBookmarkManager::managerForFile", "url": "classKBookmarkManager.html#a1c95df7ed42c53a77895a35582a78c92", "keyword": "managerForFile KBookmarkManager::managerForFile KBookmarkManager", "text": "If you do not instantiate this class either natively or in a derived class then it will return an object with the default behaviors If you wish to use different behaviors you must derive your own class and instantiate it before this method is ever called bookmarksFile full path to the bookmarks file Use kde/share/apps/konqueror/bookmarks.xml for the konqueror bookmarks dbusObjectName a unique name that represents this bookmark collection usually your component e.g application name This is for the konqueror bookmarks for KFileDialog bookmarks etc The final DBus object path is An empty dbusObjectName disables the registration to dbus used for temporary managers"}, {"type": "function", "name": "KBookmarkManager::userBookmarksManager", "url": "classKBookmarkManager.html#a5b4c132742cd45cfa9609b476311ba8b", "keyword": "userBookmarksManager KBookmarkManager::userBookmarksManager KBookmarkManager", "text": ""}, {"type": "class", "name": "KBookmarkMenu", "url": "classKBookmarkMenu.html", "keyword": "KBookmarkMenu", "text": "It is typically used in cooperation with KActionMenu but doesn t have to be If you use this class by itself then it will use KDE defaults for everything the bookmark path bookmark editor bookmark launcher everything These defaults reside in the classes KBookmarkOwner editing bookmarks and KBookmarkManager almost everything else If you wish to change the defaults in any way you must reimplement either this class or KBookmarkOwner Using this class is very simple 1 Create a popup menu either KActionMenu or KMenu will do 2 Instantiate a new KBookmarkMenu object using the above popup menu as a parameter 3 Insert your now full popup menu wherever you wish The functionality of this class can be disabled with the Kiosk action see the KAuthorized namespace"}, {"type": "function", "name": "KBookmarkMenu::KBookmarkMenu", "url": "classKBookmarkMenu.html#ad44e9b2f6c23ca99273be5b8c31fb8b5", "keyword": "KBookmarkMenu KBookmarkMenu::KBookmarkMenu KBookmarkMenu", "text": "mgr The bookmark manager to use i.e for reading and writing owner implementation of the KBookmarkOwner callback interface Note If you pass a null KBookmarkOwner to the constructor the openBookmark signal is not emitted instead QDesktopServices::openUrl is used to open the bookmark parentMenu menu to be filled collec parent collection for the KActions KDE 5 give ownership of the bookmarkmenu to another qobject e.g parentMenu Currently this is a QObject without a parent use setParent to benefit from automatic deletion"}, {"type": "function", "name": "KBookmarkMenu::KBookmarkMenu", "url": "classKBookmarkMenu.html#a3e05cdef13e596bf64d9ebffa17da379", "keyword": "KBookmarkMenu KBookmarkMenu::KBookmarkMenu KBookmarkMenu", "text": "KF6 give ownership of the bookmarkmenu to another qobject e.g parentMenu Currently this is a QObject without a parent use setParent to benefit from automatic deletion"}, {"type": "function", "name": "KBookmarkMenu::ensureUpToDate", "url": "classKBookmarkMenu.html#a3c0a1a7becf5a71f6d26ba4111741a1c", "keyword": "ensureUpToDate KBookmarkMenu::ensureUpToDate KBookmarkMenu", "text": ""}, {"type": "function", "name": "KBookmarkMenu::parentAddress", "url": "classKBookmarkMenu.html#ac2bb380e6a551af7431e51b12f5091e4", "keyword": "parentAddress KBookmarkMenu::parentAddress KBookmarkMenu", "text": ""}, {"type": "function", "name": "KBookmarkMenu::parentMenu", "url": "classKBookmarkMenu.html#a44dffb06ef8ca55e4f874bda3196ec00", "keyword": "parentMenu KBookmarkMenu::parentMenu KBookmarkMenu", "text": ""}, {"type": "variable", "name": "KBookmarkMenu::m_actions", "url": "classKBookmarkMenu.html#a309e50b5e98bbdba112170d8f5aa3851", "keyword": "m_actions KBookmarkMenu::m_actions KBookmarkMenu", "text": ""}, {"type": "variable", "name": "KBookmarkMenu::m_lstSubMenus", "url": "classKBookmarkMenu.html#af6f1d6951880efa2ddf404251c69057e", "keyword": "m_lstSubMenus KBookmarkMenu::m_lstSubMenus KBookmarkMenu", "text": ""}, {"type": "class", "name": "KBookmarkOwner", "url": "classKBookmarkOwner.html", "keyword": "KBookmarkOwner", "text": "In the first case the app may want to open the bookmark in a special way In the second case the app must supply the name and the URL for the bookmark This class gives the app this callback-like ability If your app does not give the user the ability to add bookmarks and you don t mind using the default bookmark editor to edit your bookmarks then you don t need to overload this class at all Rather just use something like bookmarks new KBookmarkMenu(manager, 0, menu, actionCollection) If you wish to use your own editor or allow the user to add bookmarks you must overload this class"}, {"type": "function", "name": "KBookmarkOwner::currentBookmarkList", "url": "classKBookmarkOwner.html#a6dd7cd1ea909d3fbc33ee4dad46851ed", "keyword": "currentBookmarkList KBookmarkOwner::currentBookmarkList KBookmarkOwner", "text": "The default returns an empty list"}, {"type": "function", "name": "KBookmarkOwner::currentIcon", "url": "classKBookmarkOwner.html#a21d6e8f9bce850d643bc0366463348c3", "keyword": "currentIcon KBookmarkOwner::currentIcon KBookmarkOwner", "text": "The icon will become the icon of the bookmark You must overload this function if you wish to give your users the ability to add bookmarks The default returns an empty string A very common implementation for this method is return KIO::iconNameForUrl(currentUrl()) the icon name of the current page 5.0"}, {"type": "function", "name": "KBookmarkOwner::currentTitle", "url": "classKBookmarkOwner.html#aaf618ca6533925cc295cc78df0138b78", "keyword": "currentTitle KBookmarkOwner::currentTitle KBookmarkOwner", "text": "The title will become the of the bookmark You must overload this function if you wish to give your users the ability to add bookmarks The default returns an empty string the title of the current page"}, {"type": "function", "name": "KBookmarkOwner::currentUrl", "url": "classKBookmarkOwner.html#af787c3d32af0e8f33a9f65dc34671792", "keyword": "currentUrl KBookmarkOwner::currentUrl KBookmarkOwner", "text": "The URL will become the URL of the bookmark You must overload this function if you wish to give your users the ability to add bookmarks The default returns an empty string the URL of the current page Since 5.0 this method returns a QUrl While porting it remember to implement currentIcon too"}, {"type": "function", "name": "KBookmarkOwner::enableOption", "url": "classKBookmarkOwner.html#a3c8eb25aeb32ca09cea6e984f735075c", "keyword": "enableOption KBookmarkOwner::enableOption KBookmarkOwner", "text": ""}, {"type": "function", "name": "KBookmarkOwner::openBookmark", "url": "classKBookmarkOwner.html#ae6673f2c6aff33f3c67b3566b7bc3e60", "keyword": "openBookmark KBookmarkOwner::openBookmark KBookmarkOwner", "text": "You need to override this"}, {"type": "function", "name": "KBookmarkOwner::openFolderinTabs", "url": "classKBookmarkOwner.html#ae67545ab4f0edb90bdc5a7566c863e72", "keyword": "openFolderinTabs KBookmarkOwner::openFolderinTabs KBookmarkOwner", "text": "The default implementation does nothing This is only called if supportsTabs() returns true"}, {"type": "function", "name": "KBookmarkOwner::openInNewTab", "url": "classKBookmarkOwner.html#a97c0b7a7bb14df39553100fc3806add2", "keyword": "openInNewTab KBookmarkOwner::openInNewTab KBookmarkOwner", "text": "The default implementation calls openBookmark 5.0"}, {"type": "function", "name": "KBookmarkOwner::openInNewWindow", "url": "classKBookmarkOwner.html#a1095d620a7b19fb8359d0b358b3b0a26", "keyword": "openInNewWindow KBookmarkOwner::openInNewWindow KBookmarkOwner", "text": "The default implementation calls openBookmark 5.0"}, {"type": "function", "name": "KBookmarkOwner::supportsTabs", "url": "classKBookmarkOwner.html#ad4893edfaae19ff8393a04dbbd1edd5f", "keyword": "supportsTabs KBookmarkOwner::supportsTabs KBookmarkOwner", "text": "The default returns false"}, {"type": "class", "name": "KBookmarkOwner::FutureBookmark", "url": "classKBookmarkOwner_1_1FutureBookmark.html", "keyword": "FutureBookmark", "text": "5.0"}, {"type": "class", "name": "KIEBookmarkImporterImpl", "url": "classKIEBookmarkImporterImpl.html", "keyword": "KIEBookmarkImporterImpl", "text": ""}, {"type": "class", "name": "KMozillaBookmarkImporterImpl", "url": "classKMozillaBookmarkImporterImpl.html", "keyword": "KMozillaBookmarkImporterImpl", "text": ""}, {"type": "class", "name": "KNSBookmarkImporterImpl", "url": "classKNSBookmarkImporterImpl.html", "keyword": "KNSBookmarkImporterImpl", "text": ""}, {"type": "struct", "name": "KonqBookmarkMenu::DynMenuInfo", "url": "structKonqBookmarkMenu_1_1DynMenuInfo.html", "keyword": "DynMenuInfo", "text": ""}, {"type": "class", "name": "KOperaBookmarkImporterImpl", "url": "classKOperaBookmarkImporterImpl.html", "keyword": "KOperaBookmarkImporterImpl", "text": ""}, {"type": "class", "name": "KXBELBookmarkImporterImpl", "url": "classKXBELBookmarkImporterImpl.html", "keyword": "KXBELBookmarkImporterImpl", "text": ""}, {"type": "page", "name": "index", "url": "index.html", "keyword": null, "text": "KBookmarks Bookmarks management library Introduction KBookmarks lets you access and manipulate bookmarks stored using the XBEL format The most common use for bookmarks is web browsers but this can also be useful in any application where local files or URLs can be saved as bookmarks"}]}