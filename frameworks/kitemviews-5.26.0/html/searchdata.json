{"name": "kitemviews-5.26.0", "fancyname": "KItemViews", "docfields": [{"type": "page", "name": "deprecated", "url": "deprecated.html", "keyword": null, "text": "Deprecated List Member KCategorizedSortFilterProxyModel naturalCompare const QString a const QString b Use QCollator instead Class KCategoryDrawerV3 Use KCategoryDrawer instead Member KListWidgetSearchLine clickMessage const since 5.0 use QLineEdit::placeholderText() instead Member KListWidgetSearchLine setClickMessage const QString msg since 5.0 use QLineEdit::setPlaceholderText() instead Member KTreeWidgetSearchLine clickMessage const since 5.0 use QLineEdit::placeholderText() instead Member KTreeWidgetSearchLine setClickMessage const QString msg since 5.0 use QLineEdit::setPlaceholderText() instead"}, {"type": "class", "name": "KCategorizedSortFilterProxyModel", "url": "classKCategorizedSortFilterProxyModel.html", "keyword": "KCategorizedSortFilterProxyModel", "text": "It is meant to be used along with KCategorizedView class In general terms all you need to do is to reimplement subSortLessThan() and compareCategories() methods In order to make categorization work you need to also call setCategorizedModel() class to enable it since the categorization is disabled by default KCategorizedView Rafael Fern\u00e1ndez L\u00f3pez"}, {"type": "enum", "name": "KCategorizedSortFilterProxyModel::AdditionalRoles", "url": "classKCategorizedSortFilterProxyModel.html#ade65a94a96138cec931caea2b9081ca0", "keyword": "AdditionalRoles KCategorizedSortFilterProxyModel::AdditionalRoles KCategorizedSortFilterProxyModel", "text": ""}, {"type": "enumvalue", "name": "KCategorizedSortFilterProxyModel::CategoryDisplayRole", "url": "classKCategorizedSortFilterProxyModel.html#ade65a94a96138cec931caea2b9081ca0a0a5b9e491b65f32fd5e79938e1bdcaa5", "keyword": "CategoryDisplayRole KCategorizedSortFilterProxyModel::CategoryDisplayRole KCategorizedSortFilterProxyModel", "text": "This role is used for asking the category to a given index"}, {"type": "enumvalue", "name": "KCategorizedSortFilterProxyModel::CategorySortRole", "url": "classKCategorizedSortFilterProxyModel.html#ade65a94a96138cec931caea2b9081ca0a2c4c88d2aa0cbc687d561e98b6c2a443", "keyword": "CategorySortRole KCategorizedSortFilterProxyModel::CategorySortRole KCategorizedSortFilterProxyModel", "text": "This role is used for sorting categories You can return a string or a long long value Strings will be sorted alphabetically while long long will be sorted by their value Please note that this value won t be shown on the view is only for sorting purposes What will be shown as on the view will be asked with the role CategoryDisplayRole"}, {"type": "function", "name": "KCategorizedSortFilterProxyModel::KCategorizedSortFilterProxyModel", "url": "classKCategorizedSortFilterProxyModel.html#acc12070547783cf8966269ed0afa2f94", "keyword": "KCategorizedSortFilterProxyModel KCategorizedSortFilterProxyModel::KCategorizedSortFilterProxyModel KCategorizedSortFilterProxyModel", "text": "This library is free software you can redistribute it and/or modify it under the terms of the GNU Library General Public License as published by the Free Software Foundation either version 2 of the License or at your option any later version This library is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU Library General Public License for more details You should have received a copy of the GNU Library General Public License along with this library see the file COPYING.LIB If not write to the Free Software Foundation Inc 51 Franklin Street Fifth Floor Boston MA 02110-1301 USA"}, {"type": "function", "name": "KCategorizedSortFilterProxyModel::isCategorizedModel", "url": "classKCategorizedSortFilterProxyModel.html#afc342653a048f99bdcd73936da2f102e", "keyword": "isCategorizedModel KCategorizedSortFilterProxyModel::isCategorizedModel KCategorizedSortFilterProxyModel", "text": "whether the model is categorized or not Disabled by default"}, {"type": "function", "name": "KCategorizedSortFilterProxyModel::setCategorizedModel", "url": "classKCategorizedSortFilterProxyModel.html#affb240007fa087c74bd03a996f8b559b", "keyword": "setCategorizedModel KCategorizedSortFilterProxyModel::setCategorizedModel KCategorizedSortFilterProxyModel", "text": "categorizedModel whether to enable or disable the categorization feature"}, {"type": "function", "name": "KCategorizedSortFilterProxyModel::setSortCategoriesByNaturalComparison", "url": "classKCategorizedSortFilterProxyModel.html#a315210ecca49d836664d786212bdfa87", "keyword": "setSortCategoriesByNaturalComparison KCategorizedSortFilterProxyModel::setSortCategoriesByNaturalComparison KCategorizedSortFilterProxyModel", "text": "If enabled QCollator will be used for sorting sortCategoriesByNaturalComparison whether to sort using a natural comparison or not"}, {"type": "function", "name": "KCategorizedSortFilterProxyModel::sort", "url": "classKCategorizedSortFilterProxyModel.html#a12a69b69fb661d72625ce5c1e6548633", "keyword": "sort KCategorizedSortFilterProxyModel::sort KCategorizedSortFilterProxyModel", "text": "Sorts the source model using column for the given order"}, {"type": "function", "name": "KCategorizedSortFilterProxyModel::sortCategoriesByNaturalComparison", "url": "classKCategorizedSortFilterProxyModel.html#a4dbbf6dc83e77c3c7129e9f7f64d47ce", "keyword": "sortCategoriesByNaturalComparison KCategorizedSortFilterProxyModel::sortCategoriesByNaturalComparison KCategorizedSortFilterProxyModel", "text": "whether it is being used a natural comparison for sorting Enabled by default"}, {"type": "function", "name": "KCategorizedSortFilterProxyModel::sortColumn", "url": "classKCategorizedSortFilterProxyModel.html#a8cdd4fd24e324997556a9ad619388a45", "keyword": "sortColumn KCategorizedSortFilterProxyModel::sortColumn KCategorizedSortFilterProxyModel", "text": "the column being used for sorting"}, {"type": "function", "name": "KCategorizedSortFilterProxyModel::sortOrder", "url": "classKCategorizedSortFilterProxyModel.html#a6f7d0777f259aaa92c6253986596cb54", "keyword": "sortOrder KCategorizedSortFilterProxyModel::sortOrder KCategorizedSortFilterProxyModel", "text": "the sort order being used for sorting"}, {"type": "function", "name": "KCategorizedSortFilterProxyModel::naturalCompare", "url": "classKCategorizedSortFilterProxyModel.html#af9e818dcba6e00342429ba91e3c84961", "keyword": "naturalCompare KCategorizedSortFilterProxyModel::naturalCompare KCategorizedSortFilterProxyModel", "text": "A negative value is returned if a is smaller than b A positive value is returned if a is greater than b 0 is returned if both values are equal Use QCollator instead"}, {"type": "function", "name": "KCategorizedSortFilterProxyModel::compareCategories", "url": "classKCategorizedSortFilterProxyModel.html#a0f7d44e652c4ee479cb9e770ec09f23b", "keyword": "compareCategories KCategorizedSortFilterProxyModel::compareCategories KCategorizedSortFilterProxyModel", "text": "Internally and if not reimplemented this method will ask for left and right models for role CategorySortRole In order to correctly sort categories the data() metod of the model should return a qlonglong or numeric value or a QString object QString objects will be sorted with QString::localeAwareCompare if sortCategoriesByNaturalComparison() is true Please have present that QString(QChar(QChar::ObjectReplacementCharacter)) QString(QChar(QChar::ReplacementCharacter)) all possible strings QString() This means that QString() will be sorted the first one while QString(QChar(QChar::ObjectReplacementCharacter)) and QString(QChar(QChar::ReplacementCharacter)) will be sorted in last position Please note that data() method of the model should return always information of the same type If you return a QString for an index you should return always QStrings for all indexes for role CategorySortRole in order to correctly sort categories You can t mix by returning a QString for one index and a qlonglong for other If you need a more complex layout you will have to reimplement this method A negative value if the category of left should be placed before the category of right 0 if left and right are on the same category and a positive value if the category of left should be placed after the category of right"}, {"type": "function", "name": "KCategorizedSortFilterProxyModel::lessThan", "url": "classKCategorizedSortFilterProxyModel.html#a8be869d7a3639739d6564f0bbd1adc2d", "keyword": "lessThan KCategorizedSortFilterProxyModel::lessThan KCategorizedSortFilterProxyModel", "text": "If you are subclassing KCategorizedSortFilterProxyModel you will probably not need to reimplement this method It calls compareCategories() to sort by category If the both items are in the same category i.e compareCategories returns 0 then subSortLessThan is called Returns true if the item left is less than the item right when sorting You usually won t need to reimplement this method when subclassing from KCategorizedSortFilterProxyModel"}, {"type": "function", "name": "KCategorizedSortFilterProxyModel::subSortLessThan", "url": "classKCategorizedSortFilterProxyModel.html#a19fd2582e615f048cc31e0f712b083cb", "keyword": "subSortLessThan KCategorizedSortFilterProxyModel::subSortLessThan KCategorizedSortFilterProxyModel", "text": "It is used for sorting items that are in the same category Returns true if the item left is less than the item right when sorting"}, {"type": "class", "name": "KCategorizedView", "url": "classKCategorizedView.html", "keyword": "KCategorizedView", "text": "KCategorizedView basically has the same functionality as QListView only that it also lets you layout items in a way that they are categorized visually For it to work you will need to set a KCategorizedSortFilterProxyModel and a KCategoryDrawer with methods setModel() and setCategoryDrawer() respectively Also the model will need to be flagged as categorized with KCategorizedSortFilterProxyModel::setCategorizedModel(true) The way it works if categorization enabled For drawing categories KCategoryDrawer will be used You can inherit this class to do your own drawing All examples cited before talk about filesystems and such but have present that this is a completely generic class and it can be used for whatever your purpose is For instance when talking about animals you can separate them by and In this very case for example the CategorySortRole and the CategoryDisplayRole could be the same and There is a really performance boost if CategorySortRole returns an int instead of a QString Have present that this role is asked n log n times when sorting and compared Comparing ints is always faster than comparing strings whithout mattering how fast the string comparison is Consider thinking of a way of returning ints instead of QStrings if your model can contain a high number of items Note that for really drawing items in blocks you will need some things to be done The model set to this view has to be or inherit if you want to do special stuff in it KCategorizedSortFilterProxyModel This model needs to be set setCategorizedModel to true Set a category drawer by calling setCategoryDrawer KCategorizedSortFilterProxyModel KCategoryDrawer Rafael Fern\u00e1ndez L\u00f3pez"}, {"type": "function", "name": "KCategorizedView::alternatingBlockColors", "url": "classKCategorizedView.html#a3a1483818578ce82a30596627cc4504e", "keyword": "alternatingBlockColors KCategorizedView::alternatingBlockColors KCategorizedView", "text": "Whether blocks should be drawn with alternating colors 4.4"}, {"type": "function", "name": "KCategorizedView::block", "url": "classKCategorizedView.html#ac22676501fecf1ae31b7b6cc5c71b6a2", "keyword": "block KCategorizedView::block KCategorizedView", "text": "Block of indexes that are into category 4.5"}, {"type": "function", "name": "KCategorizedView::block", "url": "classKCategorizedView.html#aa8bff285c21b93b75c6b9ddfd2147a1e", "keyword": "block KCategorizedView::block KCategorizedView", "text": "Block of indexes that are represented by representative 4.5"}, {"type": "function", "name": "KCategorizedView::categoryDrawer", "url": "classKCategorizedView.html#a6fb4b52c66d779b755272d0aed6746f2", "keyword": "categoryDrawer KCategorizedView::categoryDrawer KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::categorySpacing", "url": "classKCategorizedView.html#a85de4803e828d662c0116252d4792087", "keyword": "categorySpacing KCategorizedView::categorySpacing KCategorizedView", "text": "Category spacing The spacing between categories 4.4"}, {"type": "function", "name": "KCategorizedView::collapsibleBlocks", "url": "classKCategorizedView.html#ad7217186b7ff94eb9ba896a3a76f0d55", "keyword": "collapsibleBlocks KCategorizedView::collapsibleBlocks KCategorizedView", "text": "Whether blocks can be collapsed or not 4.4"}, {"type": "function", "name": "KCategorizedView::indexAt", "url": "classKCategorizedView.html#a1d06ad740c7cb4c1b4496888ee797c7b", "keyword": "indexAt KCategorizedView::indexAt KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::reset", "url": "classKCategorizedView.html#ae44370621d62fe00deb8ff1c5024870f", "keyword": "reset KCategorizedView::reset KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::setAlternatingBlockColors", "url": "classKCategorizedView.html#a7f26ac5deb64578677061a0640770b36", "keyword": "setAlternatingBlockColors KCategorizedView::setAlternatingBlockColors KCategorizedView", "text": "4.4"}, {"type": "function", "name": "KCategorizedView::setCategoryDrawer", "url": "classKCategorizedView.html#ab0d4f557bfc08b96af0a269e092bb45d", "keyword": "setCategoryDrawer KCategorizedView::setCategoryDrawer KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::setCategorySpacing", "url": "classKCategorizedView.html#a1ba741b1b8fe91355cbcd4aeae82ac7b", "keyword": "setCategorySpacing KCategorizedView::setCategorySpacing KCategorizedView", "text": "This is the spacing between categories 4.4"}, {"type": "function", "name": "KCategorizedView::setCollapsibleBlocks", "url": "classKCategorizedView.html#a712c6f9f7100907f3a124da7c9b6a14a", "keyword": "setCollapsibleBlocks KCategorizedView::setCollapsibleBlocks KCategorizedView", "text": "4.4"}, {"type": "function", "name": "KCategorizedView::setGridSize", "url": "classKCategorizedView.html#af53a33c80553424ba3e0ade4b5bbbdbc", "keyword": "setGridSize KCategorizedView::setGridSize KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::setGridSizeOwn", "url": "classKCategorizedView.html#ad9a4cfaf71933a4d3402c85b047dd48d", "keyword": "setGridSizeOwn KCategorizedView::setGridSizeOwn KCategorizedView", "text": "note that setGridSize is not virtual in the base class QListView so if you are calling to this method make sure you have a KCategorizedView pointer around This means that something like will not call to the expected setGridSize method Instead do something like this this method will call to QListView::setGridSize among other operations 4.4"}, {"type": "function", "name": "KCategorizedView::setModel", "url": "classKCategorizedView.html#a064ea46c94e1e77d9e2f624d19d8ffbe", "keyword": "setModel KCategorizedView::setModel KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::visualRect", "url": "classKCategorizedView.html#a23853dcd8193ba07819cf3ac200c1543", "keyword": "visualRect KCategorizedView::visualRect KCategorizedView", "text": ""}, {"type": "slot", "name": "KCategorizedView::rowsInsertedArtifficial", "url": "classKCategorizedView.html#a4a9a0d89be068356bd8e53e916326056", "keyword": "rowsInsertedArtifficial KCategorizedView::rowsInsertedArtifficial KCategorizedView", "text": "Deprecated since 4.4"}, {"type": "slot", "name": "KCategorizedView::rowsRemoved", "url": "classKCategorizedView.html#a6a6468de56d6982092038bd6bc31247b", "keyword": "rowsRemoved KCategorizedView::rowsRemoved KCategorizedView", "text": "Deprecated since 4.4"}, {"type": "slot", "name": "KCategorizedView::slotLayoutChanged", "url": "classKCategorizedView.html#af3ce40b6bcd7effaa21af4d7a452e191", "keyword": "slotLayoutChanged KCategorizedView::slotLayoutChanged KCategorizedView", "text": "Reposition items as needed"}, {"type": "function", "name": "KCategorizedView::currentChanged", "url": "classKCategorizedView.html#ae22c5887af59723f1afcf7534b30e964", "keyword": "currentChanged KCategorizedView::currentChanged KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::dataChanged", "url": "classKCategorizedView.html#a4a2b1b8283ee2df3c27292708d951d91", "keyword": "dataChanged KCategorizedView::dataChanged KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::dragEnterEvent", "url": "classKCategorizedView.html#a5ec8bfdedbe9da8de81694e86d5a6721", "keyword": "dragEnterEvent KCategorizedView::dragEnterEvent KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::dragLeaveEvent", "url": "classKCategorizedView.html#ae4e6a171ba5951929573a906cbba418e", "keyword": "dragLeaveEvent KCategorizedView::dragLeaveEvent KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::dragMoveEvent", "url": "classKCategorizedView.html#a21067ba4d360f94b61af37c3240616ee", "keyword": "dragMoveEvent KCategorizedView::dragMoveEvent KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::dropEvent", "url": "classKCategorizedView.html#a489cc55c224c6eab9be04f1a4f82b781", "keyword": "dropEvent KCategorizedView::dropEvent KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::leaveEvent", "url": "classKCategorizedView.html#a874620be699f6298f1931e92985964f6", "keyword": "leaveEvent KCategorizedView::leaveEvent KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::mouseMoveEvent", "url": "classKCategorizedView.html#a58a7f1c2e8002ef21951ecc28ce14206", "keyword": "mouseMoveEvent KCategorizedView::mouseMoveEvent KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::mousePressEvent", "url": "classKCategorizedView.html#a77f3261899777effde62c3ff7e547cd8", "keyword": "mousePressEvent KCategorizedView::mousePressEvent KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::mouseReleaseEvent", "url": "classKCategorizedView.html#ad2f7e2a50057278c2084ea5a1faf2643", "keyword": "mouseReleaseEvent KCategorizedView::mouseReleaseEvent KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::moveCursor", "url": "classKCategorizedView.html#a4d38f516fc7b0283601e3d98e2021474", "keyword": "moveCursor KCategorizedView::moveCursor KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::paintEvent", "url": "classKCategorizedView.html#a90e8b1b34f663eeb6d552a73f5b1d80b", "keyword": "paintEvent KCategorizedView::paintEvent KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::resizeEvent", "url": "classKCategorizedView.html#a4bf28b8503a5a64031a1718d690f92ae", "keyword": "resizeEvent KCategorizedView::resizeEvent KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::rowsAboutToBeRemoved", "url": "classKCategorizedView.html#a29064aab7a6abd99027cd3fb18fc822e", "keyword": "rowsAboutToBeRemoved KCategorizedView::rowsAboutToBeRemoved KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::rowsInserted", "url": "classKCategorizedView.html#af8627d5b9e60ace4d83d0d0f5041a13f", "keyword": "rowsInserted KCategorizedView::rowsInserted KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::setSelection", "url": "classKCategorizedView.html#af05b6e058e2e48aa6862982dcc2bfec9", "keyword": "setSelection KCategorizedView::setSelection KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::startDrag", "url": "classKCategorizedView.html#ac99d41e1ef6b43dcf2169389274ef1f4", "keyword": "startDrag KCategorizedView::startDrag KCategorizedView", "text": ""}, {"type": "function", "name": "KCategorizedView::updateGeometries", "url": "classKCategorizedView.html#ae22448fd084c42e5de0bfbfb8e17710c", "keyword": "updateGeometries KCategorizedView::updateGeometries KCategorizedView", "text": ""}, {"type": "class", "name": "KCategoryDrawer", "url": "classKCategoryDrawer.html", "keyword": "KCategoryDrawer", "text": "It also gives information about the category height and margins"}, {"type": "signal", "name": "KCategoryDrawer::actionRequested", "url": "classKCategoryDrawer.html#ad6eafa26ecb96a58e49e3a5e18d97973", "keyword": "actionRequested KCategoryDrawer::actionRequested KCategoryDrawer actionRequested KCategoryDrawer::actionRequested KCategoryDrawer", "text": "Usually this will be triggered when you have received an event and its position matched some You give this action the integer you want and having connected this signal to your code the connected slot can perform the needed changes view model selection model delegate"}, {"type": "signal", "name": "KCategoryDrawer::collapseOrExpandClicked", "url": "classKCategoryDrawer.html#aa48d8d763f3947985fb79a2645aec1bf", "keyword": "collapseOrExpandClicked KCategoryDrawer::collapseOrExpandClicked KCategoryDrawer collapseOrExpandClicked KCategoryDrawer::collapseOrExpandClicked KCategoryDrawer", "text": ""}, {"type": "function", "name": "KCategoryDrawer::categoryHeight", "url": "classKCategoryDrawer.html#a97a37c846df042ad063ff3f5dea55ea3", "keyword": "categoryHeight KCategoryDrawer::categoryHeight KCategoryDrawer categoryHeight KCategoryDrawer::categoryHeight KCategoryDrawer", "text": "The category height for the category representated by index index with style options option"}, {"type": "function", "name": "KCategoryDrawer::drawCategory", "url": "classKCategoryDrawer.html#add06c5d2527ec85e2a641b296128b122", "keyword": "drawCategory KCategoryDrawer::drawCategory KCategoryDrawer drawCategory KCategoryDrawer::drawCategory KCategoryDrawer", "text": "index with the given sortRole sorting role This method will be called one time per category always with the first element in that category"}, {"type": "function", "name": "KCategoryDrawer::leftMargin", "url": "classKCategoryDrawer.html#ab2b45cbc7e200dfd0cc65539113b7168", "keyword": "leftMargin KCategoryDrawer::leftMargin KCategoryDrawer leftMargin KCategoryDrawer::leftMargin KCategoryDrawer", "text": "0 by default 4.4"}, {"type": "function", "name": "KCategoryDrawer::rightMargin", "url": "classKCategoryDrawer.html#abf34e96627d43e29a0e4065d420619d6", "keyword": "rightMargin KCategoryDrawer::rightMargin KCategoryDrawer rightMargin KCategoryDrawer::rightMargin KCategoryDrawer", "text": "0 by default 4.4"}, {"type": "function", "name": "KCategoryDrawer::view", "url": "classKCategoryDrawer.html#a8d02e661d5bf89717b778764a0542bfc", "keyword": "view KCategoryDrawer::view KCategoryDrawer view KCategoryDrawer::view KCategoryDrawer", "text": "The view this category drawer is associated with"}, {"type": "function", "name": "KCategoryDrawer::mouseButtonDoubleClicked", "url": "classKCategoryDrawer.html#aa154dfb34a8322ef49d1d9cd21e4859e", "keyword": "mouseButtonDoubleClicked KCategoryDrawer::mouseButtonDoubleClicked KCategoryDrawer mouseButtonDoubleClicked KCategoryDrawer::mouseButtonDoubleClicked KCategoryDrawer", "text": "index The representative index of the block of items blockRect The rect occupied by the block of items event The mouse event You explicitly have to determine whether the event has been accepted or not You have to call event- accept() or event- ignore() at all possible case branches in your code"}, {"type": "function", "name": "KCategoryDrawer::mouseButtonPressed", "url": "classKCategoryDrawer.html#a34b804bbe82df774b2830bc2709475e6", "keyword": "mouseButtonPressed KCategoryDrawer::mouseButtonPressed KCategoryDrawer mouseButtonPressed KCategoryDrawer::mouseButtonPressed KCategoryDrawer", "text": "index The representative index of the block of items blockRect The rect occupied by the block of items event The mouse event You explicitly have to determine whether the event has been accepted or not You have to call event- accept() or event- ignore() at all possible case branches in your code"}, {"type": "function", "name": "KCategoryDrawer::mouseButtonReleased", "url": "classKCategoryDrawer.html#a6e23670c7b123e8993b1e3c57ef20e12", "keyword": "mouseButtonReleased KCategoryDrawer::mouseButtonReleased KCategoryDrawer mouseButtonReleased KCategoryDrawer::mouseButtonReleased KCategoryDrawer", "text": "index The representative index of the block of items blockRect The rect occupied by the block of items event The mouse event You explicitly have to determine whether the event has been accepted or not You have to call event- accept() or event- ignore() at all possible case branches in your code"}, {"type": "function", "name": "KCategoryDrawer::mouseLeft", "url": "classKCategoryDrawer.html#a5d3e541a162f4d7a7fd0e5391c65af91", "keyword": "mouseLeft KCategoryDrawer::mouseLeft KCategoryDrawer mouseLeft KCategoryDrawer::mouseLeft KCategoryDrawer", "text": "index The representative index of the block of items blockRect The rect occupied by the block of items"}, {"type": "function", "name": "KCategoryDrawer::mouseMoved", "url": "classKCategoryDrawer.html#abfceb665b50dd4c9bfc00d5ad09aa1ee", "keyword": "mouseMoved KCategoryDrawer::mouseMoved KCategoryDrawer mouseMoved KCategoryDrawer::mouseMoved KCategoryDrawer", "text": "index The representative index of the block of items blockRect The rect occupied by the block of items event The mouse event"}, {"type": "class", "name": "KCategoryDrawerV3", "url": "classKCategoryDrawerV3.html", "keyword": "KCategoryDrawerV3", "text": "Use KCategoryDrawer instead"}, {"type": "class", "name": "KFilterProxySearchLine", "url": "classKFilterProxySearchLine.html", "keyword": "KFilterProxySearchLine", "text": "This will give you an widget which you can embed in your application call the setProxy() function to indicate on which QSortFilterProxyModel this search line should operate Tom Albers 4.2"}, {"type": "function", "name": "KFilterProxySearchLine::KFilterProxySearchLine", "url": "classKFilterProxySearchLine.html#a9942977cea63c170bd34821bbcbde262", "keyword": "KFilterProxySearchLine KFilterProxySearchLine::KFilterProxySearchLine KFilterProxySearchLine", "text": "KFilterProxySearchLinePrivate class that helps to provide binary compatibility between releases"}, {"type": "function", "name": "KFilterProxySearchLine::~KFilterProxySearchLine", "url": "classKFilterProxySearchLine.html#ae0f38098587713735e929c39465ac6d6", "keyword": "KFilterProxySearchLine::~KFilterProxySearchLine KFilterProxySearchLine", "text": ""}, {"type": "function", "name": "KFilterProxySearchLine::lineEdit", "url": "classKFilterProxySearchLine.html#a7513b3a6bcd6c05561857e280f382258", "keyword": "lineEdit KFilterProxySearchLine::lineEdit KFilterProxySearchLine", "text": ""}, {"type": "function", "name": "KFilterProxySearchLine::setProxy", "url": "classKFilterProxySearchLine.html#afbcd85f4a309e1646808f9f434a6acc1", "keyword": "setProxy KFilterProxySearchLine::setProxy KFilterProxySearchLine", "text": "proxy The proxy to operate with"}, {"type": "function", "name": "KFilterProxySearchLine::setText", "url": "classKFilterProxySearchLine.html#a2a08055f8109e756b3cc347493a085d1", "keyword": "setText KFilterProxySearchLine::setText KFilterProxySearchLine", "text": ""}, {"type": "class", "name": "KListWidgetSearchLine", "url": "classKListWidgetSearchLine.html", "keyword": "KListWidgetSearchLine", "text": "No changes to the application other than instantiating this class with an appropriate QListWidget should be needed"}, {"type": "slot", "name": "KListWidgetSearchLine::clear", "url": "classKListWidgetSearchLine.html#a433b4665c89671863fac39da1f72d96c", "keyword": "clear KListWidgetSearchLine::clear KListWidgetSearchLine", "text": ""}, {"type": "slot", "name": "KListWidgetSearchLine::setCaseSensitivity", "url": "classKListWidgetSearchLine.html#a5c5f84dd12fd656e1a543808f758098b", "keyword": "setCaseSensitivity KListWidgetSearchLine::setCaseSensitivity KListWidgetSearchLine", "text": "caseSenstive()"}, {"type": "slot", "name": "KListWidgetSearchLine::setListWidget", "url": "classKListWidgetSearchLine.html#add4502f1db748b8b8edde0b7c77d285c", "keyword": "setListWidget KListWidgetSearchLine::setListWidget KListWidgetSearchLine", "text": "If lv is null then the widget will be disabled listWidget()"}, {"type": "slot", "name": "KListWidgetSearchLine::updateSearch", "url": "classKListWidgetSearchLine.html#a4d041aec138217b0ed9ffcd3771cd0e9", "keyword": "updateSearch KListWidgetSearchLine::updateSearch KListWidgetSearchLine", "text": "If s is null then the line edit s text will be used"}, {"type": "function", "name": "KListWidgetSearchLine::KListWidgetSearchLine", "url": "classKListWidgetSearchLine.html#a92595363e6292cb7a778813a88ad8293", "keyword": "KListWidgetSearchLine KListWidgetSearchLine::KListWidgetSearchLine KListWidgetSearchLine", "text": "If listWidget is null then the widget will be disabled until a listWidget is set with setListWidget()"}, {"type": "function", "name": "KListWidgetSearchLine::~KListWidgetSearchLine", "url": "classKListWidgetSearchLine.html#a55c008b55c869d4866bfb5970c826417", "keyword": "KListWidgetSearchLine::~KListWidgetSearchLine KListWidgetSearchLine", "text": ""}, {"type": "function", "name": "KListWidgetSearchLine::caseSensitive", "url": "classKListWidgetSearchLine.html#ad012d0cc672b0cf603330bc8f87ee5f0", "keyword": "caseSensitive KListWidgetSearchLine::caseSensitive KListWidgetSearchLine", "text": "This defaults to Qt::CaseInsensitive setCaseSensitive()"}, {"type": "function", "name": "KListWidgetSearchLine::clickMessage", "url": "classKListWidgetSearchLine.html#ab53586be9962ad5b68d7a5040f102322", "keyword": "clickMessage KListWidgetSearchLine::clickMessage KListWidgetSearchLine", "text": "the message set with setClickMessage since 5.0 use QLineEdit::placeholderText() instead"}, {"type": "function", "name": "KListWidgetSearchLine::listWidget", "url": "classKListWidgetSearchLine.html#abd66b61c9647d767d3b36e8856b31ffa", "keyword": "listWidget KListWidgetSearchLine::listWidget KListWidgetSearchLine", "text": "setListWidget()"}, {"type": "function", "name": "KListWidgetSearchLine::setClickMessage", "url": "classKListWidgetSearchLine.html#a4e2bc8e578b1f06e30ba8f959a8f1c14", "keyword": "setClickMessage KListWidgetSearchLine::setClickMessage KListWidgetSearchLine", "text": "It is often used as indication about the purpose of the line edit since 5.0 use QLineEdit::setPlaceholderText() instead"}, {"type": "function", "name": "KListWidgetSearchLine::event", "url": "classKListWidgetSearchLine.html#a28773878954af04da6ec4935484e9039", "keyword": "event KListWidgetSearchLine::event KListWidgetSearchLine", "text": "API not affected"}, {"type": "function", "name": "KListWidgetSearchLine::itemMatches", "url": "classKListWidgetSearchLine.html#ad8bf6b582513d683bab03c8567d4ba86", "keyword": "itemMatches KListWidgetSearchLine::itemMatches KListWidgetSearchLine", "text": "This will be evaluated based on the value of caseSensitive() This can be overridden in subclasses to implement more complicated matching schemes"}, {"type": "class", "name": "KTreeWidgetSearchLine", "url": "classKTreeWidgetSearchLine.html", "keyword": "KTreeWidgetSearchLine", "text": "No changes to the application other than instantiating this class with appropriate QTreeWidgets should be needed"}, {"type": "signal", "name": "KTreeWidgetSearchLine::hiddenChanged", "url": "classKTreeWidgetSearchLine.html#aa6c0d822ab96ce0f12b6c8b5c5d2c541", "keyword": "hiddenChanged KTreeWidgetSearchLine::hiddenChanged KTreeWidgetSearchLine", "text": ""}, {"type": "signal", "name": "KTreeWidgetSearchLine::searchUpdated", "url": "classKTreeWidgetSearchLine.html#a282ee357cfb9269f651bf851678ea3eb", "keyword": "searchUpdated KTreeWidgetSearchLine::searchUpdated KTreeWidgetSearchLine", "text": "searchString is the text currently entered by the user 5.0"}, {"type": "slot", "name": "KTreeWidgetSearchLine::addTreeWidget", "url": "classKTreeWidgetSearchLine.html#a668e98431d28d771122f0e5bc65ef0e3", "keyword": "addTreeWidget KTreeWidgetSearchLine::addTreeWidget KTreeWidgetSearchLine", "text": "If treeWidget is null then the widget will be disabled treeWidget() setTreeWidgets() removeTreeWidget()"}, {"type": "slot", "name": "KTreeWidgetSearchLine::removeTreeWidget", "url": "classKTreeWidgetSearchLine.html#a3cfda8aca8acb488351df5ad284702e2", "keyword": "removeTreeWidget KTreeWidgetSearchLine::removeTreeWidget KTreeWidgetSearchLine", "text": "Does nothing if treeWidget is 0 or is not filtered by the quick search line listVew() setTreeWidgets() addTreeWidget()"}, {"type": "slot", "name": "KTreeWidgetSearchLine::setCaseSensitivity", "url": "classKTreeWidgetSearchLine.html#a67c8eb3572d9e1853bab256b4233c831", "keyword": "setCaseSensitivity KTreeWidgetSearchLine::setCaseSensitivity KTreeWidgetSearchLine", "text": "caseSenstivity()"}, {"type": "slot", "name": "KTreeWidgetSearchLine::setKeepParentsVisible", "url": "classKTreeWidgetSearchLine.html#ab85e422e7bc3d74c2e1e0f12dc4ed270", "keyword": "setKeepParentsVisible KTreeWidgetSearchLine::setKeepParentsVisible KTreeWidgetSearchLine", "text": "If this is set to true the default then the parents of matching items will be shown setKeepParentsVisible(true) does not have the expected effect on items being added to or removed from the view while a search is active When a new search starts afterwards the behavior will be normal keepParentsVisible"}, {"type": "slot", "name": "KTreeWidgetSearchLine::setSearchColumns", "url": "classKTreeWidgetSearchLine.html#aa9b329bba7bd9df4149c4c5366b0f510", "keyword": "setSearchColumns KTreeWidgetSearchLine::setSearchColumns KTreeWidgetSearchLine", "text": "The default is to search all visible columns which can be restored by passing columns as an empty list If listviews to be filtered have different numbers or labels of columns this method has no effect searchColumns"}, {"type": "slot", "name": "KTreeWidgetSearchLine::setTreeWidget", "url": "classKTreeWidgetSearchLine.html#ab05391db3b1b90ed2bac1d47ad05d179", "keyword": "setTreeWidget KTreeWidgetSearchLine::setTreeWidget KTreeWidgetSearchLine", "text": "If treeWidget is null then the widget will be disabled treeWidget() setTreeWidgets()"}, {"type": "slot", "name": "KTreeWidgetSearchLine::setTreeWidgets", "url": "classKTreeWidgetSearchLine.html#a30ba1614a8fd309238d400b23d7dc4da", "keyword": "setTreeWidgets KTreeWidgetSearchLine::setTreeWidgets KTreeWidgetSearchLine", "text": "If treeWidgets is empty then the widget will be disabled treeWidgets() addTreeWidget() setTreeWidget()"}, {"type": "slot", "name": "KTreeWidgetSearchLine::updateSearch", "url": "classKTreeWidgetSearchLine.html#a617d5cb20676b026b5c30e5cf0acfaa3", "keyword": "updateSearch KTreeWidgetSearchLine::updateSearch KTreeWidgetSearchLine", "text": "If s is null then the line edit s text will be used"}, {"type": "function", "name": "KTreeWidgetSearchLine::KTreeWidgetSearchLine", "url": "classKTreeWidgetSearchLine.html#ac4f6e972775dd424e6f66481dc90f11e", "keyword": "KTreeWidgetSearchLine KTreeWidgetSearchLine::KTreeWidgetSearchLine KTreeWidgetSearchLine", "text": "If treeWidget is null then the widget will be disabled until listviews are set with setTreeWidget() setTreeWidgets() or added with addTreeWidget()"}, {"type": "function", "name": "KTreeWidgetSearchLine::KTreeWidgetSearchLine", "url": "classKTreeWidgetSearchLine.html#acae1d4c95f70481230882fd54b7536df", "keyword": "KTreeWidgetSearchLine KTreeWidgetSearchLine::KTreeWidgetSearchLine KTreeWidgetSearchLine", "text": "If treeWidgets is empty then the widget will be disabled until listviews are set with setTreeWidget() setTreeWidgets() or added with addTreeWidget()"}, {"type": "function", "name": "KTreeWidgetSearchLine::~KTreeWidgetSearchLine", "url": "classKTreeWidgetSearchLine.html#acec8db83fde132659d30323181fcf215", "keyword": "KTreeWidgetSearchLine::~KTreeWidgetSearchLine KTreeWidgetSearchLine", "text": ""}, {"type": "function", "name": "KTreeWidgetSearchLine::caseSensitivity", "url": "classKTreeWidgetSearchLine.html#aca8e41c93212f90e8485d8e32c98b8ca", "keyword": "caseSensitivity KTreeWidgetSearchLine::caseSensitivity KTreeWidgetSearchLine", "text": "This defaults to false setCaseSensitive()"}, {"type": "function", "name": "KTreeWidgetSearchLine::clickMessage", "url": "classKTreeWidgetSearchLine.html#a22d277308aa18980f44469d64c1fcf2c", "keyword": "clickMessage KTreeWidgetSearchLine::clickMessage KTreeWidgetSearchLine", "text": "the message set with setClickMessage since 5.0 use QLineEdit::placeholderText() instead"}, {"type": "function", "name": "KTreeWidgetSearchLine::keepParentsVisible", "url": "classKTreeWidgetSearchLine.html#a8520471123c6ff0ab6dca42c8b37103e", "keyword": "keepParentsVisible KTreeWidgetSearchLine::keepParentsVisible KTreeWidgetSearchLine", "text": "setKeepParentsVisible()"}, {"type": "function", "name": "KTreeWidgetSearchLine::searchColumns", "url": "classKTreeWidgetSearchLine.html#aa05bd927db5073f59a94f9f01cd46acc", "keyword": "searchColumns KTreeWidgetSearchLine::searchColumns KTreeWidgetSearchLine", "text": "If the returned list is empty all visible columns will be searched setSearchColumns"}, {"type": "function", "name": "KTreeWidgetSearchLine::setClickMessage", "url": "classKTreeWidgetSearchLine.html#ac3f09a613d98502635f415e7eebacb20", "keyword": "setClickMessage KTreeWidgetSearchLine::setClickMessage KTreeWidgetSearchLine", "text": "It is often used as indication about the purpose of the line edit since 5.0 use QLineEdit::setPlaceholderText() instead"}, {"type": "function", "name": "KTreeWidgetSearchLine::treeWidget", "url": "classKTreeWidgetSearchLine.html#aeb1cee499013a15e2fa8a8ffa868fa0b", "keyword": "treeWidget KTreeWidgetSearchLine::treeWidget KTreeWidgetSearchLine", "text": "If there are multiple listviews filtered it returns 0 setTreeWidget() treeWidgets()"}, {"type": "function", "name": "KTreeWidgetSearchLine::treeWidgets", "url": "classKTreeWidgetSearchLine.html#a9a8a2a201b038a67c240233f729a03cc", "keyword": "treeWidgets KTreeWidgetSearchLine::treeWidgets KTreeWidgetSearchLine", "text": "setTreeWidgets() addTreeWidget() treeWidget()"}, {"type": "function", "name": "KTreeWidgetSearchLine::canChooseColumnsCheck", "url": "classKTreeWidgetSearchLine.html#a267cc4300e4fad9c7d8e3e5bba319a89", "keyword": "canChooseColumnsCheck KTreeWidgetSearchLine::canChooseColumnsCheck KTreeWidgetSearchLine", "text": "Returns false if either of the following is true there are no listviews connected the listviews have different numbers of columns the listviews have only one column the listviews differ in column labels Otherwise it returns true setSearchColumns()"}, {"type": "function", "name": "KTreeWidgetSearchLine::connectTreeWidget", "url": "classKTreeWidgetSearchLine.html#aa905b6906b46c5b4c2d1cddb529828fb", "keyword": "connectTreeWidget KTreeWidgetSearchLine::connectTreeWidget KTreeWidgetSearchLine", "text": ""}, {"type": "function", "name": "KTreeWidgetSearchLine::contextMenuEvent", "url": "classKTreeWidgetSearchLine.html#a6d733f2726d37d03fd1f767d7d0c6359", "keyword": "contextMenuEvent KTreeWidgetSearchLine::contextMenuEvent KTreeWidgetSearchLine", "text": "API not affected"}, {"type": "function", "name": "KTreeWidgetSearchLine::disconnectTreeWidget", "url": "classKTreeWidgetSearchLine.html#a207e8c0e65724669b8f48b227ab95846", "keyword": "disconnectTreeWidget KTreeWidgetSearchLine::disconnectTreeWidget KTreeWidgetSearchLine", "text": ""}, {"type": "function", "name": "KTreeWidgetSearchLine::event", "url": "classKTreeWidgetSearchLine.html#a9050b82a2f6d07c57377d97228354e71", "keyword": "event KTreeWidgetSearchLine::event KTreeWidgetSearchLine", "text": "API not affected"}, {"type": "function", "name": "KTreeWidgetSearchLine::itemMatches", "url": "classKTreeWidgetSearchLine.html#a693a55bb984e5d742d67300343fea6b4", "keyword": "itemMatches KTreeWidgetSearchLine::itemMatches KTreeWidgetSearchLine", "text": "This will be evaluated based on the value of caseSensitive() This can be overridden in subclasses to implement more complicated matching schemes"}, {"type": "function", "name": "KTreeWidgetSearchLine::updateSearch", "url": "classKTreeWidgetSearchLine.html#a61cc9659022dd35edd5b3aa14fd3a806", "keyword": "updateSearch KTreeWidgetSearchLine::updateSearch KTreeWidgetSearchLine", "text": "If treeWidget is null then nothing is done"}, {"type": "class", "name": "KTreeWidgetSearchLineWidget", "url": "classKTreeWidgetSearchLineWidget.html", "keyword": "KTreeWidgetSearchLineWidget", "text": ""}, {"type": "function", "name": "KTreeWidgetSearchLineWidget::KTreeWidgetSearchLineWidget", "url": "classKTreeWidgetSearchLineWidget.html#a3155b8c53b61152b047dab61ff13e460", "keyword": "KTreeWidgetSearchLineWidget KTreeWidgetSearchLineWidget::KTreeWidgetSearchLineWidget KTreeWidgetSearchLineWidget", "text": ""}, {"type": "function", "name": "KTreeWidgetSearchLineWidget::~KTreeWidgetSearchLineWidget", "url": "classKTreeWidgetSearchLineWidget.html#a3cdc2e080ace0de348c7f30c1fd881a7", "keyword": "KTreeWidgetSearchLineWidget::~KTreeWidgetSearchLineWidget KTreeWidgetSearchLineWidget", "text": ""}, {"type": "function", "name": "KTreeWidgetSearchLineWidget::searchLine", "url": "classKTreeWidgetSearchLineWidget.html#ab841b003996be7ca3ef8607801265b53", "keyword": "searchLine KTreeWidgetSearchLineWidget::searchLine KTreeWidgetSearchLineWidget", "text": ""}, {"type": "slot", "name": "KTreeWidgetSearchLineWidget::createWidgets", "url": "classKTreeWidgetSearchLineWidget.html#ad44c79be293d3ea5224324d439b18732", "keyword": "createWidgets KTreeWidgetSearchLineWidget::createWidgets KTreeWidgetSearchLineWidget", "text": "This is called from the constructor via a single shot timer so that it it guaranteed to run after construction is complete This makes it suitable for overriding in subclasses"}, {"type": "function", "name": "KTreeWidgetSearchLineWidget::createSearchLine", "url": "classKTreeWidgetSearchLineWidget.html#aa5da3a20347afa045de586ff372c61ad", "keyword": "createSearchLine KTreeWidgetSearchLineWidget::createSearchLine KTreeWidgetSearchLineWidget", "text": "This can be useful to reimplement in cases where a KTreeWidgetSearchLine subclass is used It is const because it is be called from searchLine() which to the user doesn t conceptually alter the widget"}, {"type": "class", "name": "KWidgetItemDelegate", "url": "classKWidgetItemDelegate.html", "keyword": "KWidgetItemDelegate", "text": "For instance you can add push buttons line edits etc to your delegate and use them to modify the state of your model 4.1"}, {"type": "function", "name": "KWidgetItemDelegate::KWidgetItemDelegate", "url": "classKWidgetItemDelegate.html#ae4adcebdc0c6e94d280565d10822f298", "keyword": "KWidgetItemDelegate KWidgetItemDelegate::KWidgetItemDelegate KWidgetItemDelegate", "text": "KWidgetItemDelegatePrivate class that helps to provide binary compatibility between releases itemView the item view the new delegate will monitor parent the parent of this delegate"}, {"type": "function", "name": "KWidgetItemDelegate::~KWidgetItemDelegate", "url": "classKWidgetItemDelegate.html#a646580c5e0ab91654e57a8fdd9069be1", "keyword": "KWidgetItemDelegate::~KWidgetItemDelegate KWidgetItemDelegate", "text": ""}, {"type": "function", "name": "KWidgetItemDelegate::focusedIndex", "url": "classKWidgetItemDelegate.html#af53b908000f1638c3e2c939e84b9ea43", "keyword": "focusedIndex KWidgetItemDelegate::focusedIndex KWidgetItemDelegate", "text": "An invalid index if none is focused the current focused index or QPersistentModelIndex() if none is focused"}, {"type": "function", "name": "KWidgetItemDelegate::itemView", "url": "classKWidgetItemDelegate.html#a06fdd585a6426a6e555f4f44dcc3eac5", "keyword": "itemView KWidgetItemDelegate::itemView KWidgetItemDelegate", "text": "the item view this delegate is monitoring"}, {"type": "function", "name": "KWidgetItemDelegate::blockedEventTypes", "url": "classKWidgetItemDelegate.html#ad37dc2bee990f9369710310f565bc204", "keyword": "blockedEventTypes KWidgetItemDelegate::blockedEventTypes KWidgetItemDelegate", "text": "widget the specified widget the list of blocked event types can be empty if no events are blocked"}, {"type": "function", "name": "KWidgetItemDelegate::createItemWidgets", "url": "classKWidgetItemDelegate.html#a594841a86aa1bf3f0b88565091408a0f", "keyword": "createItemWidgets KWidgetItemDelegate::createItemWidgets KWidgetItemDelegate", "text": "No initialization of the widgets is supposed to happen here The widgets will be initialized based on needs for a given item If you want to connect some widget signals to any slot you should do it here index the index to create widgets for the list of newly created widgets which will be used to interact with an item updateItemWidgets()"}, {"type": "function", "name": "KWidgetItemDelegate::paintWidgets", "url": "classKWidgetItemDelegate.html#a19372ccd880079ac4ab8db20680fa685", "keyword": "paintWidgets KWidgetItemDelegate::paintWidgets KWidgetItemDelegate", "text": "This method is meant to be used in the paint() method of your item delegate implementation painter the painter the widgets will be painted on option the current set of style options for the view index the model index of the item currently painted since 4.2 this method is not longer needed to be called All widgets will kept updated without the need of calling paintWidgets() in your paint() event For the widgets of a certain index to be updated your model has to emit dataChanged() on the indexes that want to be updated"}, {"type": "function", "name": "KWidgetItemDelegate::setBlockedEventTypes", "url": "classKWidgetItemDelegate.html#a15bac3acf04bd38bec1fe2f158b3a047", "keyword": "setBlockedEventTypes KWidgetItemDelegate::setBlockedEventTypes KWidgetItemDelegate", "text": "Blocked events are not passed to the view This way you can prevent an item from being selected when a button is clicked for instance widget the widget which must block events types the list of event types the widget must block"}, {"type": "function", "name": "KWidgetItemDelegate::updateItemWidgets", "url": "classKWidgetItemDelegate.html#a086525a068d7aa11fdeefa4b52b7c3ab", "keyword": "updateItemWidgets KWidgetItemDelegate::updateItemWidgets KWidgetItemDelegate", "text": "All the positioning and sizing should be done in item coordinates Do not make widget connections in here since this method will be called very regularly widgets the widgets to update option the current set of style options for the view index the model index of the item currently manipulated"}, {"type": "page", "name": "index", "url": "index.html", "keyword": null, "text": "KItemViews Set of item views extending the Qt model-view framework Introduction KItemViews includes a set of views which can be used with item models It includes views for categorizing lists and to add search filters to flat and hierarchical lists"}]}