{"name": "kxmlgui-5.26.0", "fancyname": "KXmlGui", "docfields": [{"type": "page", "name": "deprecated", "url": "deprecated.html", "keyword": null, "text": "Deprecated List Member KActionCollection actionHighlighted QAction Replaced by actionHovered(QAction* action) Member KActionCollection removed QAction Member KActionCollection slotActionHighlighted Replaced by slotActionHovered() Member KKeySequenceWidget setCheckActionList const QList< QAction *> checkList since 4.1 use setCheckActionCollections so that KKeySequenceWidget knows in which action collection to call the writeSettings method after stealing a shortcut from an action Member KMainWindow customHelpMenu bool showWhatsThis true use XMLGUI instead or KHelpMenu directly Member KMainWindow helpMenu const QString aboutAppText QString() bool showWhatsThis true use KHelpMenu directly Member KMainWindow initialGeometrySet const since 5.0 the functionality got removed Member KMainWindow restoreWindowSize const KConfigGroup config use KWindowConfig::restoreWindowSize Member KMainWindow saveWindowSize KConfigGroup config const use KWindowConfig::saveWindowSize Member KMainWindow showAboutApplication use KHelpMenu Member KShortcutWidget setCheckActionList const QList< QAction *> checkList since 4.1 Use setCheckActionCollections so that KShortcutWidget knows in which action collection to call the writeSettings method after stealing a shortcut from an action Member KToolBar contextMenuEnabled const use contextMenuPolicy Member KToolBar setContextMenuEnabled bool enable true use setContextMenuPolicy Member KToolBar setXMLGUIClient KXMLGUIClient use addXMLGUIClient Member KXMLGUIBuilder removeCustomElement QWidget QAction do not use"}, {"type": "class", "name": "KAboutApplicationDialog", "url": "classKAboutApplicationDialog.html", "keyword": "KAboutApplicationDialog", "text": "This class provides the standard dialog box that is used by KHelpMenu It uses the information of the global KAboutData that is specified at the start of your program in main() Normally you should not use this class directly but rather the KHelpMenu class or even better just subclass your toplevel window from KMainWindow If you do the latter the help menu and thereby this dialog box is available through the KMainWindow::helpMenu() function KDE About Application Dialog Urs Wolfer uwolfer kde.org"}, {"type": "enum", "name": "KAboutApplicationDialog::Option", "url": "classKAboutApplicationDialog.html#a0538e1197f96a267f98da89e77c786f8", "keyword": "Option KAboutApplicationDialog::Option KAboutApplicationDialog", "text": "4.4"}, {"type": "enumvalue", "name": "KAboutApplicationDialog::NoOptions", "url": "classKAboutApplicationDialog.html#a0538e1197f96a267f98da89e77c786f8a5e48fcbf548cdeff70b2fcff0c769b98", "keyword": "NoOptions KAboutApplicationDialog::NoOptions KAboutApplicationDialog", "text": "No options show the standard about dialog"}, {"type": "enumvalue", "name": "KAboutApplicationDialog::HideTranslators", "url": "classKAboutApplicationDialog.html#a0538e1197f96a267f98da89e77c786f8a00cd0b7488f735db18a944a02e2c455e", "keyword": "HideTranslators KAboutApplicationDialog::HideTranslators KAboutApplicationDialog", "text": "Don t show the translators tab"}, {"type": "enumvalue", "name": "KAboutApplicationDialog::HideKdeVersion", "url": "classKAboutApplicationDialog.html#a0538e1197f96a267f98da89e77c786f8ab2cd123fc9fdc54acc643885bc55ab60", "keyword": "HideKdeVersion KAboutApplicationDialog::HideKdeVersion KAboutApplicationDialog", "text": "Don t show the KDE version next to the application name and version"}, {"type": "function", "name": "KAboutApplicationDialog::KAboutApplicationDialog", "url": "classKAboutApplicationDialog.html#a060018924c8a976c8a2bf2d85692513d", "keyword": "KAboutApplicationDialog KAboutApplicationDialog::KAboutApplicationDialog KAboutApplicationDialog", "text": "Creates a fully featured dialog box aboutData A KAboutData object which data will be used for filling the dialog opts Additional options that can be applied such as hiding the KDE version or the translators tab parent The parent of the dialog box You should use the toplevel window so that the dialog becomes centered 4.4"}, {"type": "function", "name": "KAboutApplicationDialog::KAboutApplicationDialog", "url": "classKAboutApplicationDialog.html#a8dea9bc18a3ab9d157d03e0822b1cc59", "keyword": "KAboutApplicationDialog KAboutApplicationDialog::KAboutApplicationDialog KAboutApplicationDialog", "text": "Creates a fully featured dialog box aboutData A pointer to a KAboutData object which data will be used for filling the dialog parent The parent of the dialog box You should use the toplevel window so that the dialog becomes centered"}, {"type": "class", "name": "KActionCategory", "url": "classKActionCategory.html", "keyword": "KActionCategory", "text": "KActionCategory provides a second level to organize the actions in KShortcutsEditor The first possibility is using more than one action collection Each actions collection becomes a top level node action collection 1 first action second action third action action collection 2 first action second action third action Using KActionCategory it s possible to group the actions of one collection action collection 1 first action first category action 1 in category action 2 in category second action The usage is analog to action collections Just create a category and use it instead of the collection to create the actions The synchronization between KActionCollection and KActionCategory is done internally There is for example no need to remove actions from a category It is done implicitely if the action is removed from the associated collection"}, {"type": "function", "name": "KActionCategory::KActionCategory", "url": "classKActionCategory.html#aa830365f0acc57802cbd36a2f1b53ff1", "keyword": "KActionCategory KActionCategory::KActionCategory KActionCategory", "text": ""}, {"type": "function", "name": "KActionCategory::~KActionCategory", "url": "classKActionCategory.html#a9b88263ecbc18581d07b5fe60d36b0f2", "keyword": "KActionCategory::~KActionCategory KActionCategory", "text": ""}, {"type": "function", "name": "KActionCategory::actions", "url": "classKActionCategory.html#a2e850d8203e7f2081351d05080c674ed", "keyword": "actions KActionCategory::actions KActionCategory", "text": ""}, {"type": "function", "name": "KActionCategory::collection", "url": "classKActionCategory.html#af219eb1e06df9838b1fad7dff8998c00", "keyword": "collection KActionCategory::collection KActionCategory", "text": ""}, {"type": "function", "name": "KActionCategory::setText", "url": "classKActionCategory.html#ad6a895ae25bc990e7d71bc95525469ef", "keyword": "setText KActionCategory::setText KActionCategory", "text": ""}, {"type": "function", "name": "KActionCategory::text", "url": "classKActionCategory.html#a07db0ee4e8eed41672f47b4a879fd2be", "keyword": "text KActionCategory::text KActionCategory", "text": ""}, {"type": "class", "name": "KActionCollection", "url": "classKActionCollection.html", "keyword": "KActionCollection", "text": "KActionCollection manages a set of QAction objects It allows them to be grouped for organized presentation of configuration to the user saving loading of configuration and optionally for automatic plugging into specified widget(s) Additionally KActionCollection provides several convenience functions for locating named actions and actions grouped by QActionGroup If you create your own action collection and need to assign shortcuts to the actions within you have to call associateWidget() or addAssociatedWidget() to have them working"}, {"type": "signal", "name": "KActionCollection::actionHighlighted", "url": "classKActionCollection.html#a70a5a6e63f8498635f26d866c05d9ef0", "keyword": "actionHighlighted KActionCollection::actionHighlighted KActionCollection", "text": "Replaced by actionHovered(QAction* action)"}, {"type": "signal", "name": "KActionCollection::actionHovered", "url": "classKActionCollection.html#a43455f900d1a4d69153b0782199ad6ae", "keyword": "actionHovered KActionCollection::actionHovered KActionCollection", "text": ""}, {"type": "signal", "name": "KActionCollection::actionTriggered", "url": "classKActionCollection.html#aeb781c1c7fc00533c8d132baa0224864", "keyword": "actionTriggered KActionCollection::actionTriggered KActionCollection", "text": ""}, {"type": "signal", "name": "KActionCollection::inserted", "url": "classKActionCollection.html#aafbf5745781e8592db2b048dad86ff41", "keyword": "inserted KActionCollection::inserted KActionCollection", "text": ""}, {"type": "signal", "name": "KActionCollection::removed", "url": "classKActionCollection.html#aa5a1bdd8c06c640c709f148ecede4718", "keyword": "removed KActionCollection::removed KActionCollection", "text": ""}, {"type": "function", "name": "KActionCollection::KActionCollection", "url": "classKActionCollection.html#a91f85d9e5a3ba65ccccb9a651def6eb0", "keyword": "KActionCollection KActionCollection::KActionCollection KActionCollection", "text": "Allows specification of a component name other than the default application name where needed remember to call setComponentDisplayName() too"}, {"type": "function", "name": "KActionCollection::~KActionCollection", "url": "classKActionCollection.html#ae7802166b3d509f3f564f908f613fa8d", "keyword": "KActionCollection::~KActionCollection KActionCollection", "text": ""}, {"type": "function", "name": "KActionCollection::action", "url": "classKActionCollection.html#ae6311e4defb41bc0506f211b7b4b6532", "keyword": "action KActionCollection::action KActionCollection", "text": "This is equivalent to actions() value(index)"}, {"type": "function", "name": "KActionCollection::action", "url": "classKActionCollection.html#a145c4d3b9786f6a767dd7fb8c480594d", "keyword": "action KActionCollection::action KActionCollection", "text": "name Name of the QAction A pointer to the QAction in the collection which matches the parameters or null if nothing matches"}, {"type": "function", "name": "KActionCollection::actionGroups", "url": "classKActionCollection.html#a30babf2516d764adc7a99bf9715bab3b", "keyword": "actionGroups KActionCollection::actionGroups KActionCollection", "text": ""}, {"type": "function", "name": "KActionCollection::actions", "url": "classKActionCollection.html#acf5dd7fb6c1065fed1f61dc3992196bf", "keyword": "actions KActionCollection::actions KActionCollection", "text": "The list is guaranteed to be in the same order the action were put into the collection"}, {"type": "function", "name": "KActionCollection::actionsWithoutGroup", "url": "classKActionCollection.html#a878c76f76b116ddc0675d59716cafc9a", "keyword": "actionsWithoutGroup KActionCollection::actionsWithoutGroup KActionCollection", "text": ""}, {"type": "function", "name": "KActionCollection::add", "url": "classKActionCollection.html#a3ad51fb0be6375846a9ea6a941e92379", "keyword": "add KActionCollection::add KActionCollection", "text": "The receiver slot may accept either a bool or no parameters at all i.e slotTriggered(bool) or slotTriggered() The type of the action is specified by the template parameter ActionType NOTE KDE prior to 4.2 connected the triggered() signal instead of the triggered(bool) signal name The internal name of the action e.g receiver The QObject to connect the triggered(bool) signal to Leave 0 if no connection is desired member The SLOT to connect the triggered(bool) signal to Leave 0 if no connection is desired new action of the given type ActionType addAction()"}, {"type": "function", "name": "KActionCollection::addAction", "url": "classKActionCollection.html#a05e4870744126cbfa726e851a58fde03", "keyword": "addAction KActionCollection::addAction KActionCollection", "text": "Inserting an action that was previously inserted under a different name will replace the old entry i.e the action will not be available under the old name anymore but only under the new one Inserting an action under a name that is already used for another action will replace the other action in the collection but will not delete it If KAuthorized::authorizeAction() reports that the action is not authorized it will be disabled and hidden name The name by which the action be retrieved again from the collection action The action to add the same as the action given as parameter This is just for convenience chaining calls and consistency with the other addAction methods you can also simply ignore the return value"}, {"type": "function", "name": "KActionCollection::addAction", "url": "classKActionCollection.html#a84a91b2871fd8dd7cd9cca9d343889ff", "keyword": "addAction KActionCollection::addAction KActionCollection", "text": "The newly created action is also returned Note Using KStandardAction::OpenRecent will cause a different signal than triggered(bool) to be used see KStandardAction for more information The action can be retrieved later from the collection by its standard name as per KStandardAction::stdName actionType The standard action type of the action to create receiver The QObject to connect the triggered(bool) signal to Leave 0 if no connection is desired member The SLOT to connect the triggered(bool) signal to Leave 0 if no connection is desired new action of the given type ActionType"}, {"type": "function", "name": "KActionCollection::addAction", "url": "classKActionCollection.html#a716310aca014fa4bfc5b26aa0e9a370e", "keyword": "addAction KActionCollection::addAction KActionCollection", "text": "The newly created action is also returned Note Using KStandardAction::OpenRecent will cause a different signal than triggered(bool) to be used see KStandardAction for more information The action can be retrieved later from the collection by the specified name actionType The standard action type of the action to create name The name by which the action be retrieved again from the collection receiver The QObject to connect the triggered(bool) signal to Leave 0 if no connection is desired member The SLOT to connect the triggered(bool) signal to Leave 0 if no connection is desired new action of the given type ActionType"}, {"type": "function", "name": "KActionCollection::addAction", "url": "classKActionCollection.html#a87008a568ac9616721721cabc7cbaf13", "keyword": "addAction KActionCollection::addAction KActionCollection", "text": "The newly created action is returned NOTE KDE prior to 4.2 used the triggered() signal instead of the triggered(bool) signal Inserting an action that was previously inserted under a different name will replace the old entry i.e the action will not be available under the old name anymore but only under the new one Inserting an action under a name that is already used for another action will replace the other action in the collection name The name by which the action be retrieved again from the collection receiver The QObject to connect the triggered(bool) signal to Leave 0 if no connection is desired member The SLOT to connect the triggered(bool) signal to Leave 0 if no connection is desired new action of the given type ActionType"}, {"type": "function", "name": "KActionCollection::addActions", "url": "classKActionCollection.html#abf6144bc0436bb2b13e1c2c0c8760312", "keyword": "addActions KActionCollection::addActions KActionCollection", "text": "The objectName of the actions is used as their internal name in the collection Uses addAction(QString, QAction*) actions the list of the actions to add addAction() 5.0"}, {"type": "function", "name": "KActionCollection::addAssociatedWidget", "url": "classKActionCollection.html#a1eb4aeb0d636991dab9c28967cff98ae", "keyword": "addAssociatedWidget KActionCollection::addAssociatedWidget KActionCollection", "text": "This does not change the action s shortcut context so if you need to have the actions only trigger when the widget has focus you ll need to set the shortcut context on each action to Qt::WidgetShortcut or better still Qt::WidgetWithChildrenShortcut with Qt 4.4"}, {"type": "function", "name": "KActionCollection::associatedWidgets", "url": "classKActionCollection.html#a7c719ccea8a4533cef67763ff252c150", "keyword": "associatedWidgets KActionCollection::associatedWidgets KActionCollection", "text": ""}, {"type": "function", "name": "KActionCollection::associateWidget", "url": "classKActionCollection.html#a8091171f59ba88519e4f97ca35a424d6", "keyword": "associateWidget KActionCollection::associateWidget KActionCollection", "text": "Unlike addAssociatedWidget this method only adds all current actions in the collection to the given widget Any action added after this call will not be added to the given widget automatically So this is just a shortcut for a foreach loop and a widget- addAction call"}, {"type": "function", "name": "KActionCollection::clear", "url": "classKActionCollection.html#a65923db2a371a8e38c4fd15eb39b8929", "keyword": "clear KActionCollection::clear KActionCollection", "text": ""}, {"type": "function", "name": "KActionCollection::clearAssociatedWidgets", "url": "classKActionCollection.html#a74a76dd07ffe77949b47df357e206665", "keyword": "clearAssociatedWidgets KActionCollection::clearAssociatedWidgets KActionCollection", "text": ""}, {"type": "function", "name": "KActionCollection::componentDisplayName", "url": "classKActionCollection.html#a46e0eb69293ad5529fd9677c0928aadc", "keyword": "componentDisplayName KActionCollection::componentDisplayName KActionCollection", "text": ""}, {"type": "function", "name": "KActionCollection::componentName", "url": "classKActionCollection.html#ab3a7a483f0c57a64da7eb16c9769a534", "keyword": "componentName KActionCollection::componentName KActionCollection", "text": ""}, {"type": "function", "name": "KActionCollection::configGroup", "url": "classKActionCollection.html#a2346318d47ecf752aa0f96bc4e5600d4", "keyword": "configGroup KActionCollection::configGroup KActionCollection", "text": ""}, {"type": "function", "name": "KActionCollection::configIsGlobal", "url": "classKActionCollection.html#ae04b50d8d476da766e1c96067df8c320", "keyword": "configIsGlobal KActionCollection::configIsGlobal KActionCollection", "text": ""}, {"type": "function", "name": "KActionCollection::count", "url": "classKActionCollection.html#a239e512b36b5fa94b21b2e3e3f0d5b0c", "keyword": "count KActionCollection::count KActionCollection", "text": "This is equivalent to actions() count()"}, {"type": "function", "name": "KActionCollection::defaultShortcut", "url": "classKActionCollection.html#a7dd702bf26f1244add0094f454bba41c", "keyword": "defaultShortcut KActionCollection::defaultShortcut KActionCollection", "text": "action the action for which the default primary shortcut should be returned the default primary shortcut of the given action 5.0"}, {"type": "function", "name": "KActionCollection::defaultShortcuts", "url": "classKActionCollection.html#a92264d378d7720ebd6199e99361d4895", "keyword": "defaultShortcuts KActionCollection::defaultShortcuts KActionCollection", "text": "action the action for which the default shortcuts should be returned the default shortcuts of the given action 5.0"}, {"type": "function", "name": "KActionCollection::exportGlobalShortcuts", "url": "classKActionCollection.html#a7229cadb6df5deb3cfcc4b2e8ab26ea7", "keyword": "exportGlobalShortcuts KActionCollection::exportGlobalShortcuts KActionCollection", "text": "4.1 config Config object to save to writeDefaults set to true to write settings which are already at defaults"}, {"type": "function", "name": "KActionCollection::importGlobalShortcuts", "url": "classKActionCollection.html#a68a515be15a672ed72fcc5a98fa4f647", "keyword": "importGlobalShortcuts KActionCollection::importGlobalShortcuts KActionCollection", "text": "4.1 config Config object to read from"}, {"type": "function", "name": "KActionCollection::isEmpty", "url": "classKActionCollection.html#a9173a835fda893e1f167215e039a1348", "keyword": "isEmpty KActionCollection::isEmpty KActionCollection", "text": ""}, {"type": "function", "name": "KActionCollection::isShortcutsConfigurable", "url": "classKActionCollection.html#a1d687e113aad3d83d9ff06e3230202d2", "keyword": "isShortcutsConfigurable KActionCollection::isShortcutsConfigurable KActionCollection", "text": "action the action for the hint should be verified 5.0"}, {"type": "function", "name": "KActionCollection::parentGUIClient", "url": "classKActionCollection.html#a80c39b04e6bd6dec448c32adad2b876a", "keyword": "parentGUIClient KActionCollection::parentGUIClient KActionCollection", "text": ""}, {"type": "function", "name": "KActionCollection::readSettings", "url": "classKActionCollection.html#a4d80e244a9c1d280c2395fd366c098f5", "keyword": "readSettings KActionCollection::readSettings KActionCollection", "text": "If config is zero read all key associations from the application s configuration file KSharedConfig::openConfig() in the group set by setConfigGroup()"}, {"type": "function", "name": "KActionCollection::removeAction", "url": "classKActionCollection.html#aacc3361f625d712f340f6302735dccff", "keyword": "removeAction KActionCollection::removeAction KActionCollection", "text": "action The action to remove"}, {"type": "function", "name": "KActionCollection::removeAssociatedWidget", "url": "classKActionCollection.html#acc86030157218170854ad2f22994f02b", "keyword": "removeAssociatedWidget KActionCollection::removeAssociatedWidget KActionCollection", "text": "remove those actions from the widget and stop associating newly added actions as well"}, {"type": "function", "name": "KActionCollection::setComponentDisplayName", "url": "classKActionCollection.html#ac3f9882e36cd3163e7356bba63ad1eca", "keyword": "setComponentDisplayName KActionCollection::setComponentDisplayName KActionCollection", "text": "e.g for the toolbar editor KXmlGuiClient::setComponentName takes care of calling this"}, {"type": "function", "name": "KActionCollection::setComponentName", "url": "classKActionCollection.html#a7391486f8ad25c9a8705ceef966156e1", "keyword": "setComponentName KActionCollection::setComponentName KActionCollection", "text": "Don t call this method on a KActionCollection that contains actions This is not supported componentData the name which is to be associated with this action collection or QString() to indicate the app name This is used to load/save settings into XML files KXmlGuiClient::setComponentName takes care of calling this"}, {"type": "function", "name": "KActionCollection::setConfigGlobal", "url": "classKActionCollection.html#ae5b325dddf7e118cf767c4586f3ae130", "keyword": "setConfigGlobal KActionCollection::setConfigGlobal KActionCollection", "text": ""}, {"type": "function", "name": "KActionCollection::setConfigGroup", "url": "classKActionCollection.html#a72b66d23611f64938f2f2e1c9406cb4f", "keyword": "setConfigGroup KActionCollection::setConfigGroup KActionCollection", "text": ""}, {"type": "function", "name": "KActionCollection::setDefaultShortcut", "url": "classKActionCollection.html#a92702a7c425b36a6cf9e28458267c93e", "keyword": "setDefaultShortcut KActionCollection::setDefaultShortcut KActionCollection", "text": "Since 5.2 this also calls action- setShortcut(shortcut) i.e the default shortcut is made active initially action the action for which the default shortcut should be set shortcut the shortcut to use for the given action in its specified shortcutContext() 5.0"}, {"type": "function", "name": "KActionCollection::setDefaultShortcuts", "url": "classKActionCollection.html#a9b892de12245896391fe3d64d1270c0f", "keyword": "setDefaultShortcuts KActionCollection::setDefaultShortcuts KActionCollection", "text": "Since 5.2 this also calls action- setShortcuts(shortcuts) i.e the default shortcut is made active initially action the action for which the default shortcut should be set shortcuts the shortcuts to use for the given action in its specified shortcutContext() 5.0"}, {"type": "function", "name": "KActionCollection::setShortcutsConfigurable", "url": "classKActionCollection.html#a7acffb48e28585526679ec7f7bba2673", "keyword": "setShortcutsConfigurable KActionCollection::setShortcutsConfigurable KActionCollection", "text": "action the action for the hint should be verified configurable set to true if the shortcuts of the given action may be configured by the user otherwise false 5.0"}, {"type": "function", "name": "KActionCollection::takeAction", "url": "classKActionCollection.html#a90714f57d13a778661ce411f0ec760c2", "keyword": "takeAction KActionCollection::takeAction KActionCollection", "text": "action the action to remove"}, {"type": "function", "name": "KActionCollection::writeSettings", "url": "classKActionCollection.html#a60c76d4603b3f87b893c415d4c543c42", "keyword": "writeSettings KActionCollection::writeSettings KActionCollection", "text": "What the function does if config is zero depends If this action collection belongs to a KXMLGuiClient the setting are saved to the kxmlgui definition file If not the settings are written to the applications config file oneAction() and writeDefaults() have no meaning for the kxmlgui configuration file config Config object to save to or null see above writeDefaults set to true to write settings which are already at defaults oneAction pass an action here if you just want to save the values for one action eg if you know that action is the only one which has changed"}, {"type": "function", "name": "KActionCollection::allCollections", "url": "classKActionCollection.html#ac85717b596ae87374b5d07da6fe97029", "keyword": "allCollections KActionCollection::allCollections KActionCollection", "text": ""}, {"type": "slot", "name": "KActionCollection::slotActionHighlighted", "url": "classKActionCollection.html#a0c3e940454e702ed846b62047e9df3d4", "keyword": "slotActionHighlighted KActionCollection::slotActionHighlighted KActionCollection", "text": "Replaced by slotActionHovered()"}, {"type": "function", "name": "KActionCollection::connectNotify", "url": "classKActionCollection.html#a59b2c907d88477fec97ac4853536fb9a", "keyword": "connectNotify KActionCollection::connectNotify KActionCollection", "text": ""}, {"type": "class", "name": "KBugReport", "url": "classKBugReport.html", "keyword": "KBugReport", "text": "All the information needed by the dialog box program name version bug-report address etc comes from the KAboutData class Make sure you create an instance of KAboutData and pass it to KCmdLineArgs KDE Bug Report Dialog David Faure"}, {"type": "function", "name": "KBugReport::KBugReport", "url": "classKBugReport.html#acf72b2629a2cf53f8eeeececc1bca79d", "keyword": "KBugReport KBugReport::KBugReport KBugReport", "text": "Note that you shouldn t have to do this manually since KHelpMenu takes care of the menu item for and of creating a KBugReport dialog"}, {"type": "function", "name": "KBugReport::~KBugReport", "url": "classKBugReport.html#a2d1f8782b7ff3aaa125e99183144be5e", "keyword": "KBugReport::~KBugReport KBugReport", "text": ""}, {"type": "function", "name": "KBugReport::accept", "url": "classKBugReport.html#a809ab659a5774326c4798c475ae8274a", "keyword": "accept KBugReport::accept KBugReport", "text": ""}, {"type": "function", "name": "KBugReport::messageBody", "url": "classKBugReport.html#a8101a57dfd6c1c21a86588b9c1be15d2", "keyword": "messageBody KBugReport::messageBody KBugReport", "text": "The message body of the bug report"}, {"type": "function", "name": "KBugReport::setMessageBody", "url": "classKBugReport.html#aab208be9da296ed756fd1294dd9df805", "keyword": "setMessageBody KBugReport::setMessageBody KBugReport", "text": ""}, {"type": "function", "name": "KBugReport::sendBugReport", "url": "classKBugReport.html#a8ba933a060a0bca9f990335d7285041f", "keyword": "sendBugReport KBugReport::sendBugReport KBugReport", "text": "true on success"}, {"type": "function", "name": "KBugReport::text", "url": "classKBugReport.html#a39edf0c8bbf2e73fd03a815d927b8c87", "keyword": "text KBugReport::text KBugReport", "text": "Sets the field from the e-mail configuration Called at creation time but also after is closed Application combo selection changed and was activated Update the url to match the current os compiler selected app etc A complete copy of the bug report QString copy of the bug report"}, {"type": "class", "name": "KCheckAccelerators", "url": "classKCheckAccelerators.html", "keyword": "KCheckAccelerators", "text": "This class allows translators and application developers to check for accelerator conflicts in menu and widgets Put the following in your kdeglobals or the config file for the application you re testing The checking can be either manual or automatic To perform manual check press the keyboard shortcut set to CheckAccelerators here F12 If automatic checking is enabled by setting AutoCheckAccelerators to true check will be performed every time the GUI changes It s possible that in certain cases the check will be done also when no visible changes in the GUI happen or the check won t be done even if the GUI changed in the latter case use manual check Automatic checks can be anytime disabled by the checkbox in the dialog presenting the results of the check If you set AlwaysShowCheckAccelerators to true the dialog will be shown even if the automatic check didn t find any conflicts and all submenus will be shown even those without conflicts The dialog first lists the name of the window then all results for all menus if the window has a menubar and then result for all controls in the active window if there are any checkboxes etc For every submenu and all controls there are shown all conflicts grouped by accelerator and a list of all used accelerators COPY WIDGET TEXT You can copy widgets texts to find them in translation files faster by middle-clicking them Put the following lines in config/kdeglobals or in rc file for specific app Where 1 gets replaced with program name and 2 with text CopyWidgetTextCommand may be empty in which case the text gets copied to clipboard Press Ctrl+MMB to get widget text w/o accelerator mark"}, {"type": "function", "name": "KCheckAccelerators::eventFilter", "url": "classKCheckAccelerators.html#a9a3801179aa972209a4b116f35a0a954", "keyword": "eventFilter KCheckAccelerators::eventFilter KCheckAccelerators", "text": ""}, {"type": "class", "name": "KEditToolBar", "url": "classKEditToolBar.html", "keyword": "KEditToolBar", "text": "This dialog only works if your application uses the XML UI framework for creating menus and toolbars It depends on the XML files to describe the toolbar layouts and it requires the actions to determine which buttons are active Typically you do not need to use it directly as KXmlGuiWindow::setupGUI takes care of it If you use plugListAction you need to overload saveNewToolbarConfig() to plug actions again When created KEditToolBar takes a KXMLGUIFactory object and uses it to find all of the action collections and XML files there is one of each for the mainwindow but there could be more when adding other XMLGUI clients like KParts or plugins The editor aims to be semi-intelligent about where it assigns any modifications In other words it will not write out part specific changes to your application s main XML file KXmlGuiWindow and KParts::MainWindow take care of creating KEditToolBar correctly and connecting to its newToolBarConfig slot but if you really really want to do it yourself see the KXmlGuiWindow::configureToolbars() and KXmlGuiWindow::saveNewToolbarConfig() code KDE Toolbar Editor KWrite Kurt Granroth David Faure"}, {"type": "signal", "name": "KEditToolBar::newToolBarConfig", "url": "classKEditToolBar.html#aae754738ab34990194064f3b77899d57", "keyword": "newToolBarConfig KEditToolBar::newToolBarConfig KEditToolBar", "text": "Connect to it to plug action lists and to call applyMainWindowSettings see sample code in this class s documentation"}, {"type": "function", "name": "KEditToolBar::KEditToolBar", "url": "classKEditToolBar.html#a378817c403c093dfd53bd5dba75ae065", "keyword": "KEditToolBar KEditToolBar::KEditToolBar KEditToolBar", "text": "This constructor is somewhat deprecated since it doesn t work with any KXMLGuiClient being added to the mainwindow You really want to use the other constructor You must pass along your collection of actions some of which appear in your toolbars collection The collection of actions to work on parent The parent of the dialog"}, {"type": "function", "name": "KEditToolBar::KEditToolBar", "url": "classKEditToolBar.html#a522a1fb19d0c69d960d88bb6542c935a", "keyword": "KEditToolBar KEditToolBar::KEditToolBar KEditToolBar", "text": "The main parameter factory is a pointer to the XML GUI factory object for your application It contains a list of all of the GUI clients along with the action collections and xml files and the toolbar editor uses that Use this like so factory Your application s factory object parent The usual parent for the dialog"}, {"type": "function", "name": "KEditToolBar::~KEditToolBar", "url": "classKEditToolBar.html#a93d2c2aaa8a00e99a0fa7ab45d648b3c", "keyword": "KEditToolBar::~KEditToolBar KEditToolBar", "text": ""}, {"type": "function", "name": "KEditToolBar::setDefaultToolBar", "url": "classKEditToolBar.html#a39ee0d8325f2effd30f683b9123ab419", "keyword": "setDefaultToolBar KEditToolBar::setDefaultToolBar KEditToolBar", "text": "If not set or QString() is passed in the global default tool bar name will be used toolBarName the name of the tool bar setGlobalDefaultToolBar"}, {"type": "function", "name": "KEditToolBar::setResourceFile", "url": "classKEditToolBar.html#a12bd9746954d8f3c6e0a6ef78d4d9def", "keyword": "setResourceFile KEditToolBar::setResourceFile KEditToolBar", "text": "The global parameter controls whether or not the global resource file is used If this is true then you may edit all of the actions in your toolbars global ones and local one If it is false then you may edit only your application s entries The only time you should set this to false is if your application does not use the global resource file at all very rare xmlfile The application s local resource file global If true then the global resource file will also be parsed"}, {"type": "function", "name": "KEditToolBar::setGlobalDefaultToolBar", "url": "classKEditToolBar.html#a880c5b452d58f71c2ece05d09f4bb188", "keyword": "setGlobalDefaultToolBar KEditToolBar::setGlobalDefaultToolBar KEditToolBar", "text": "Can be overridden on a per-dialog basis by calling setDefaultToolBar( const QString& ) on the dialog toolbarName the name of the tool bar"}, {"type": "class", "name": "KHelpMenu", "url": "classKHelpMenu.html", "keyword": "KHelpMenu", "text": "This class provides the standard KDE help menu with the default dialog boxes and help entry This class is used in KMainWindow so normally you don t need to use this class yourself However if you need the help menu or any of its dialog boxes in your code that is not subclassed from KMainWindow you should use this class The usage is simple or if you just want to open a dialog box IMPORTANT The first time you use KHelpMenu::menu() a QMenu object is allocated Only one object is created by the class so if you call KHelpMenu::menu() twice or more the same pointer is returned The class will destroy the popupmenu in the destructor so do not delete this pointer yourself The KHelpMenu object will be deleted when its parent is destroyed but you can delete it yourself if you want The code below will always work Using your own dialog box The standard dialog box is quite simple If you need a dialog box with more functionality you must design that one yourself When you want to display the dialog you simply need to connect the help menu signal showAboutApplication() to your slot KDE Help Menu KHelpMenu respects Kiosk settings see the KAuthorized namespace in the KConfig framework In particular system administrators can disable items on this menu using some subset of the following configuration Espen Sand"}, {"type": "signal", "name": "KHelpMenu::showAboutApplication", "url": "classKHelpMenu.html#a0f328efc671bbd2b1c6308335ec02cf8", "keyword": "showAboutApplication KHelpMenu::showAboutApplication KHelpMenu", "text": "The standard application specific dialog box that is normally activated in aboutApplication() will not be displayed when this signal is emitted"}, {"type": "slot", "name": "KHelpMenu::aboutApplication", "url": "classKHelpMenu.html#ab60778968997189c86b729dab1581e92", "keyword": "aboutApplication KHelpMenu::aboutApplication KHelpMenu", "text": "The method will try to open the about box using the following steps If the showAboutApplication() signal is connected then it will be called This means there is an application defined aboutBox If the aboutData was set in the constructor a KAboutApplicationDialog will be created Else a default about box using the aboutAppText from the constructor will be created"}, {"type": "slot", "name": "KHelpMenu::aboutKDE", "url": "classKHelpMenu.html#a6301d382de44634b09372571ecea8b9a", "keyword": "aboutKDE KHelpMenu::aboutKDE KHelpMenu", "text": ""}, {"type": "slot", "name": "KHelpMenu::appHelpActivated", "url": "classKHelpMenu.html#a1200226d1bda5dcf2fae7eb4af546af5", "keyword": "appHelpActivated KHelpMenu::appHelpActivated KHelpMenu", "text": "The application name is used as a key to determine what to display and the system will attempt to open appName html"}, {"type": "slot", "name": "KHelpMenu::contextHelpActivated", "url": "classKHelpMenu.html#a2ef5e031b093f46efb3f510f0356aa45", "keyword": "contextHelpActivated KHelpMenu::contextHelpActivated KHelpMenu", "text": ""}, {"type": "slot", "name": "KHelpMenu::donate", "url": "classKHelpMenu.html#aed1220dcc1a7ebbfedbc942fd8bdcc18", "keyword": "donate KHelpMenu::donate KHelpMenu", "text": "5.24"}, {"type": "slot", "name": "KHelpMenu::reportBug", "url": "classKHelpMenu.html#ab0e4ad8aac736783ba2dc4da6e3219b3", "keyword": "reportBug KHelpMenu::reportBug KHelpMenu", "text": ""}, {"type": "slot", "name": "KHelpMenu::switchApplicationLanguage", "url": "classKHelpMenu.html#aa8b2e7891a9139ffe4534b8b6a57e600", "keyword": "switchApplicationLanguage KHelpMenu::switchApplicationLanguage KHelpMenu", "text": ""}, {"type": "function", "name": "KHelpMenu::KHelpMenu", "url": "classKHelpMenu.html#ab33c0a20e7933ae999aca0a6430b8e33", "keyword": "KHelpMenu KHelpMenu::KHelpMenu KHelpMenu", "text": "parent The parent of the dialog boxes The boxes are modeless and will be centered with respect to the parent aboutAppText User definable string that is used in the default application dialog box showWhatsThis Decides whether a entry will be added to the dialog"}, {"type": "function", "name": "KHelpMenu::KHelpMenu", "url": "classKHelpMenu.html#af0b17cfeea95b23a97ce5d6a7bfbb0c3", "keyword": "KHelpMenu KHelpMenu::KHelpMenu KHelpMenu", "text": "This alternative constructor is mainly useful if you want to overide the standard actions aboutApplication() aboutKDE() helpContents() reportBug and optionally whatsThis parent The parent of the dialog boxes The boxes are modeless and will be centered with respect to the parent aboutData User and app data used in the About app dialog showWhatsThis Decides whether a entry will be added to the dialog"}, {"type": "function", "name": "KHelpMenu::~KHelpMenu", "url": "classKHelpMenu.html#a6ab279b7a117ce6b481be1ccfb8eb9c9", "keyword": "KHelpMenu::~KHelpMenu KHelpMenu", "text": "Destroys dialogs and the menu pointer retuned by menu"}, {"type": "function", "name": "KHelpMenu::action", "url": "classKHelpMenu.html#a07b47466eb49d48a4884a13387ace350", "keyword": "action KHelpMenu::action KHelpMenu", "text": "id The id of the action of which you want to get QAction"}, {"type": "function", "name": "KHelpMenu::menu", "url": "classKHelpMenu.html#a62c0e709fa0b321a4f3527422a2b414d", "keyword": "menu KHelpMenu::menu KHelpMenu", "text": "The returned menu is configured with an icon a title and menu entries Therefore adding the returned pointer to your menu is enougth to have access to the help menu Note This method will only create one instance of the menu If you call this method twice or more the same pointer is returned"}, {"type": "class", "name": "KKeySequenceWidget", "url": "classKKeySequenceWidget.html", "keyword": "KKeySequenceWidget", "text": "This widget lets the user choose a QKeySequence which is usually used as a shortcut key The recording is initiated by calling captureKeySequence() or the user clicking into the widget The widgets provides support for conflict handling See setCheckForConflictsAgainst() for more information KDE Key Sequence Widget Mark Donohoe"}, {"type": "enum", "name": "KKeySequenceWidget::Validation", "url": "classKKeySequenceWidget.html#aebc2f00aa69102c158168fbb58309d20", "keyword": "Validation KKeySequenceWidget::Validation KKeySequenceWidget", "text": "setKeySequence()"}, {"type": "enumvalue", "name": "KKeySequenceWidget::Validate", "url": "classKKeySequenceWidget.html#aebc2f00aa69102c158168fbb58309d20a5a4217412312ce8f1e91a3a932a9a9d4", "keyword": "Validate KKeySequenceWidget::Validate KKeySequenceWidget", "text": "Validate key sequence"}, {"type": "enumvalue", "name": "KKeySequenceWidget::NoValidate", "url": "classKKeySequenceWidget.html#aebc2f00aa69102c158168fbb58309d20a9f81ec7a530fdc2d373fd1a9b26546a6", "keyword": "NoValidate KKeySequenceWidget::NoValidate KKeySequenceWidget", "text": "Use key sequence without validation"}, {"type": "signal", "name": "KKeySequenceWidget::keySequenceChanged", "url": "classKKeySequenceWidget.html#a4d2eefc19df803c69da2c21bedfd82db", "keyword": "keySequenceChanged KKeySequenceWidget::keySequenceChanged KKeySequenceWidget", "text": ""}, {"type": "signal", "name": "KKeySequenceWidget::stealShortcut", "url": "classKKeySequenceWidget.html#aecb24468d9b46a19a8675fbbe26dc2c8", "keyword": "stealShortcut KKeySequenceWidget::stealShortcut KKeySequenceWidget", "text": "This is only done for local shortcuts So you can be sure action is one of the actions you provided with setCheckActionList() or setCheckActionCollections() If you listen to that signal and don t call applyStealShortcut() you are supposed to steal the shortcut and save this change"}, {"type": "slot", "name": "KKeySequenceWidget::applyStealShortcut", "url": "classKKeySequenceWidget.html#aafa54578e8c3dc650afb1533c27c88dc", "keyword": "applyStealShortcut KKeySequenceWidget::applyStealShortcut KKeySequenceWidget", "text": "This only applies to actions provided to us by setCheckActionCollections() and setCheckActionList() Global and Standard Shortcuts have to be stolen immediately when the user gives his consent technical reasons That means those changes will be active even if you never call applyStealShortcut() To be called before you apply your changes No local shortcuts are stolen until this function is called"}, {"type": "slot", "name": "KKeySequenceWidget::captureKeySequence", "url": "classKKeySequenceWidget.html#aa408590cbd5803db87f2473b5c0d9551", "keyword": "captureKeySequence KKeySequenceWidget::captureKeySequence KKeySequenceWidget", "text": "This call will only return once a key sequence has been captured or input was aborted If a key sequence was input keySequenceChanged() will be emitted setModifierlessAllowed()"}, {"type": "slot", "name": "KKeySequenceWidget::clearKeySequence", "url": "classKKeySequenceWidget.html#a212a7bf9aed6b902e4689234c7f9a56e", "keyword": "clearKeySequence KKeySequenceWidget::clearKeySequence KKeySequenceWidget", "text": ""}, {"type": "slot", "name": "KKeySequenceWidget::setKeySequence", "url": "classKKeySequenceWidget.html#acab68863a4c995254becbd80d8050881", "keyword": "setKeySequence KKeySequenceWidget::setKeySequence KKeySequenceWidget", "text": "If val Validate and the call is actually changing the key sequence conflictuous shortcut will be checked"}, {"type": "function", "name": "KKeySequenceWidget::KKeySequenceWidget", "url": "classKKeySequenceWidget.html#aad5d65d93f69f9fe86d7d1f4b645c73b", "keyword": "KKeySequenceWidget KKeySequenceWidget::KKeySequenceWidget KKeySequenceWidget", "text": ""}, {"type": "function", "name": "KKeySequenceWidget::~KKeySequenceWidget", "url": "classKKeySequenceWidget.html#a3d0513a2273c649d1b191840d298580f", "keyword": "KKeySequenceWidget::~KKeySequenceWidget KKeySequenceWidget", "text": ""}, {"type": "function", "name": "KKeySequenceWidget::isKeySequenceAvailable", "url": "classKKeySequenceWidget.html#a249e2abee72ba5df424296b894653ac2", "keyword": "isKeySequenceAvailable KKeySequenceWidget::isKeySequenceAvailable KKeySequenceWidget", "text": "The sequence is checked under the same rules as if it has been typed by the user This method is useful if you get key sequences from another input source and want to check if it is save to set them 4.2"}, {"type": "function", "name": "KKeySequenceWidget::keySequence", "url": "classKKeySequenceWidget.html#a90c01f5448ec0319c276386554f0d5f5", "keyword": "keySequence KKeySequenceWidget::keySequence KKeySequenceWidget", "text": ""}, {"type": "function", "name": "KKeySequenceWidget::setCheckActionCollections", "url": "classKKeySequenceWidget.html#a6ef9d9e684a1bf072e914073c9cdb93a", "keyword": "setCheckActionCollections KKeySequenceWidget::setCheckActionCollections KKeySequenceWidget", "text": "setCheckForConflictsAgainst() If a KAction with a conflicting shortcut is found inside this list and its shortcut can be configured KAction::isShortcutConfigurable() returns true the user will be prompted whether to steal the shortcut from this action 4.1"}, {"type": "function", "name": "KKeySequenceWidget::setCheckActionList", "url": "classKKeySequenceWidget.html#a3a34bbac6ad7d7abe91083d34b4b7a90", "keyword": "setCheckActionList KKeySequenceWidget::setCheckActionList KKeySequenceWidget", "text": "since 4.1 use setCheckActionCollections so that KKeySequenceWidget knows in which action collection to call the writeSettings method after stealing a shortcut from an action"}, {"type": "function", "name": "KKeySequenceWidget::setComponentName", "url": "classKKeySequenceWidget.html#a9d7065a73e470290540887e60cbaa355", "keyword": "setComponentName KKeySequenceWidget::setComponentName KKeySequenceWidget", "text": ""}, {"type": "enum", "name": "KKeySequenceWidget::ShortcutType", "url": "classKKeySequenceWidget.html#a20bb1deea93ecb4da8699a0a0643a42e", "keyword": "ShortcutType KKeySequenceWidget::ShortcutType KKeySequenceWidget", "text": ""}, {"type": "enumvalue", "name": "KKeySequenceWidget::None", "url": "classKKeySequenceWidget.html#a20bb1deea93ecb4da8699a0a0643a42ea0a124aef1c67c10e8cf8fec28abf2abb", "keyword": "None KKeySequenceWidget::None KKeySequenceWidget", "text": "No checking for conflicts"}, {"type": "enumvalue", "name": "KKeySequenceWidget::LocalShortcuts", "url": "classKKeySequenceWidget.html#a20bb1deea93ecb4da8699a0a0643a42eaccca812f9910d46e96d8bcf2b8a7e988", "keyword": "LocalShortcuts KKeySequenceWidget::LocalShortcuts KKeySequenceWidget", "text": "Check with local shortcuts setCheckActionCollections()"}, {"type": "enumvalue", "name": "KKeySequenceWidget::StandardShortcuts", "url": "classKKeySequenceWidget.html#a20bb1deea93ecb4da8699a0a0643a42ea7a083f3b581a7b3c60f9bae8693a2732", "keyword": "StandardShortcuts KKeySequenceWidget::StandardShortcuts KKeySequenceWidget", "text": "Check against standard shortcuts KStandardShortcut"}, {"type": "enumvalue", "name": "KKeySequenceWidget::GlobalShortcuts", "url": "classKKeySequenceWidget.html#a20bb1deea93ecb4da8699a0a0643a42ea46ddea6077e0bb3228d8c89df4a36a47", "keyword": "GlobalShortcuts KKeySequenceWidget::GlobalShortcuts KKeySequenceWidget", "text": "Check against global shortcuts KGlobalAccel"}, {"type": "function", "name": "KKeySequenceWidget::setCheckForConflictsAgainst", "url": "classKKeySequenceWidget.html#afd1c97b9982f9df4d142706e56d65a8e", "keyword": "setCheckForConflictsAgainst KKeySequenceWidget::setCheckForConflictsAgainst KKeySequenceWidget", "text": "When capturing a key sequence for local shortcuts you should check against GlobalShortcuts and your other local shortcuts This is the default You have to provide the local actions to check against with setCheckActionCollections() When capturing a key sequence for a global shortcut you should check against StandardShortcuts GlobalShortcuts and your local shortcuts There are two ways to react to a user agreeing to steal a shortcut Listen to the stealShortcut() signal and steal the shortcuts manually It s your responsibility to save that change later when you think it is appropriate Call applyStealShortcut and KKeySequenceWidget will steal the shortcut This will save the actionCollections the shortcut is part of so make sure it doesn t inadvertly save some unwanted changes too Read its documentation for some limitation when handling global shortcuts If you want to do the conflict checking yourself here are some code snippets for global and standard shortcuts 4.2"}, {"type": "function", "name": "KKeySequenceWidget::checkForConflictsAgainst", "url": "classKKeySequenceWidget.html#aecb75124c5768581ac08aeff86139ced", "keyword": "checkForConflictsAgainst KKeySequenceWidget::checkForConflictsAgainst KKeySequenceWidget", "text": "setCheckForConflictsAgainst() 4.2"}, {"type": "function", "name": "KKeySequenceWidget::setMultiKeyShortcutsAllowed", "url": "classKKeySequenceWidget.html#a3d9e3ca3927c7e449c16450caf8576cd", "keyword": "setMultiKeyShortcutsAllowed KKeySequenceWidget::setMultiKeyShortcutsAllowed KKeySequenceWidget", "text": ""}, {"type": "function", "name": "KKeySequenceWidget::setModifierlessAllowed", "url": "classKKeySequenceWidget.html#a17b18a893273c38aea866a4ab99ec7bf", "keyword": "setModifierlessAllowed KKeySequenceWidget::setModifierlessAllowed KKeySequenceWidget", "text": "Set whether to accept keys without modifiers like Ctrl Alt Meta Plain keys by our definition include letter and symbol keys and text editing keys Return Space Tab Backspace Delete keys like F1 Cursor keys Insert PageDown will always work"}, {"type": "function", "name": "KKeySequenceWidget::isModifierlessAllowed", "url": "classKKeySequenceWidget.html#a664227b7e38a96baa9276dd09d020646", "keyword": "isModifierlessAllowed KKeySequenceWidget::isModifierlessAllowed KKeySequenceWidget", "text": "setModifierlessAllowed()"}, {"type": "function", "name": "KKeySequenceWidget::setClearButtonShown", "url": "classKKeySequenceWidget.html#a2c6b2122ad978569650b835838753905", "keyword": "setClearButtonShown KKeySequenceWidget::setClearButtonShown KKeySequenceWidget", "text": "The default is to show the clear button"}, {"type": "class", "name": "KMainWindow", "url": "classKMainWindow.html", "keyword": "KMainWindow", "text": "Top level widget that provides toolbars a status line and a frame It should be used as a top level parent-less widget It manages the geometry for all its children including your main widget Normally you will inherit from KMainWindow then construct or use some existing widget as your main view You can set only one main view You can add as many toolbars as you like There can be only one menubar and only one statusbar The toolbars menubar and statusbar can be created by the KMainWindow and unlike the old KMainWindow may but do not have to be deleted by you KMainWindow will handle that internally Height and width can be operated independently from each other Simply define the minimum/maximum height/width of your main widget and KMainWindow will take this into account For fixed size windows set your main widget to a fixed size Fixed aspect ratios heightForWidth() and fixed width widgets are not supported KMainWindow will set icon mini icon and caption which it gets from KApplication It provides full session management and will save its position geometry and positions of toolbars and menubar on logout If you want to save additional data reimplement saveProperties() and to read them again on next login readProperties() To save special data about your data reimplement saveGlobalProperties() To warn user that application or windows have unsaved data on close or logout reimplement queryClose() You have to implement session restoring also in your main() function There are also kRestoreMainWindows convenience functions which can do this for you and restore all your windows on next login Note that KMainWindow uses KGlobal::ref() and KGlobal::deref() so that closing the last mainwindow will quit the application unless there is still something that holds a ref in KGlobal like a KIO job or a systray icon KApplication Reginald Stadlbauer Stephan Kulow Matthias Ettrich Chris Schlaeger Sven Radej Maintained by David Faure"}, {"type": "slot", "name": "KMainWindow::appHelpActivated", "url": "classKMainWindow.html#a68dcfc84b239b34f182acd8f36266231", "keyword": "appHelpActivated KMainWindow::appHelpActivated KMainWindow appHelpActivated KMainWindow::appHelpActivated KMainWindow", "text": "The application name is used as a key to determine what to display and the system will attempt to open appName html This method is intended for use by a help button in the toolbar or components outside the regular help menu Use helpMenu() when you want to provide access to the help system from the help menu Example adding a help button to the first toolbar"}, {"type": "slot", "name": "KMainWindow::setCaption", "url": "classKMainWindow.html#a8fbcb194925a0b559bb200023c6d4416", "keyword": "setCaption KMainWindow::setCaption KMainWindow setCaption KMainWindow::setCaption KMainWindow", "text": "caption Your caption Do not include the application name in this string It will be added automatically according to the KDE standard"}, {"type": "slot", "name": "KMainWindow::setCaption", "url": "classKMainWindow.html#aa78364d5eeb1c1f5bd333c733378741d", "keyword": "setCaption KMainWindow::setCaption KMainWindow setCaption KMainWindow::setCaption KMainWindow", "text": "caption Your caption Do not include the application name in this string It will be added automatically according to the KDE standard modified Specify whether the document is modified This displays an additional sign in the title bar usually"}, {"type": "slot", "name": "KMainWindow::setPlainCaption", "url": "classKMainWindow.html#aa264989b7fe997983bd0c990c911f7f7", "keyword": "setPlainCaption KMainWindow::setPlainCaption KMainWindow setPlainCaption KMainWindow::setPlainCaption KMainWindow", "text": "caption Your caption This is the string that will be displayed in the window title"}, {"type": "slot", "name": "KMainWindow::setSettingsDirty", "url": "classKMainWindow.html#a5f60cfc96af7dc428ced559abb62c660", "keyword": "setSettingsDirty KMainWindow::setSettingsDirty KMainWindow setSettingsDirty KMainWindow::setSettingsDirty KMainWindow", "text": "This is part of the auto-save-settings feature For everything related to toolbars this happens automatically but you have to call setSettingsDirty() in the slot that toggles the visibility of the statusbar"}, {"type": "function", "name": "KMainWindow::KMainWindow", "url": "classKMainWindow.html#ab2f7f5f30e920d8490f3f83fe46149d0", "keyword": "KMainWindow KMainWindow::KMainWindow KMainWindow KMainWindow KMainWindow::KMainWindow KMainWindow", "text": "parent The widget parent This is usually 0 but it may also be the window group leader In that case the KMainWindow becomes sort of a secondary window f Specify the window flags The default is none Note that a KMainWindow per-default is created with the WA_DeleteOnClose attribute i.e it is automatically destroyed when the window is closed If you do not want this behavior call setAttribute(Qt::WA_DeleteOnClose, false) KMainWindows must be created on the heap with new like Since the KDE Frameworks 5.16 release KMainWindow will also enter information regarding the application s translators by default using KAboutData::setTranslator() This only occurs if no translators are already assigned in KAboutData see KAboutData::setTranslator() for details the auto-assignment here uses the same translated strings as specified for that function IMPORTANT For session management and window management to work properly all main windows in the application should have a different name If you don t do it KMainWindow will create a unique name but it s recommended to explicitly pass a window name that will also describe the type of the window If there can be several windows of the same type append hash to the name and KMainWindow will replace it with numbers to make the names unique For example for a mail client which has one main window showing the mails and folders and which can also have one or more windows for composing mails the name for the folders window should be e.g and for the composer windows"}, {"type": "function", "name": "KMainWindow::~KMainWindow", "url": "classKMainWindow.html#aae6d0d75e981317e76c98a7e345844a0", "keyword": "KMainWindow::~KMainWindow KMainWindow KMainWindow::~KMainWindow KMainWindow", "text": "Will also destroy the toolbars and menubar if needed"}, {"type": "function", "name": "KMainWindow::applyMainWindowSettings", "url": "classKMainWindow.html#a1bb79e3167f9583d90f4a2c43e394e32", "keyword": "applyMainWindowSettings KMainWindow::applyMainWindowSettings KMainWindow", "text": "config Config group to read the settings from KF5 porting note the unused bool argument was removed make sure to remove it from your reimplementations too! And add a Q_DECL_OVERRIDE for good measure"}, {"type": "function", "name": "KMainWindow::autoSaveConfigGroup", "url": "classKMainWindow.html#a6478064a6e38bd97a7eab4455725d962", "keyword": "autoSaveConfigGroup KMainWindow::autoSaveConfigGroup KMainWindow autoSaveConfigGroup KMainWindow::autoSaveConfigGroup KMainWindow", "text": "the group used for setting-autosaving Only meaningful if setAutoSaveSettings() was called This can be useful for forcing an apply e.g after using KEditToolbar 4.1"}, {"type": "function", "name": "KMainWindow::autoSaveGroup", "url": "classKMainWindow.html#aa8d864b61e1e918840b0e90650fc236a", "keyword": "autoSaveGroup KMainWindow::autoSaveGroup KMainWindow autoSaveGroup KMainWindow::autoSaveGroup KMainWindow", "text": "the group used for setting-autosaving Only meaningful if setAutoSaveSettings(QString) was called This can be useful for forcing a save or an apply e.g before and after using KEditToolbar NOTE you should rather use saveAutoSaveSettings() for saving or autoSaveConfigGroup() for loading This method doesn t make sense if setAutoSaveSettings(KConfigGroup) was called"}, {"type": "function", "name": "KMainWindow::autoSaveSettings", "url": "classKMainWindow.html#a857036e6958383521bde4c078100bb01", "keyword": "autoSaveSettings KMainWindow::autoSaveSettings KMainWindow autoSaveSettings KMainWindow::autoSaveSettings KMainWindow", "text": "the current autosave setting i.e true if setAutoSaveSettings() was called false by default or if resetAutoSaveSettings() was called"}, {"type": "function", "name": "KMainWindow::customHelpMenu", "url": "classKMainWindow.html#aff97bcd122771b99b699a4837b728907", "keyword": "customHelpMenu KMainWindow::customHelpMenu KMainWindow customHelpMenu KMainWindow::customHelpMenu KMainWindow", "text": "Creates a standard help menu if none exists yet It contains entries for the help system activated by F1 an optional entry activated by Shift F1 an application specific dialog box and an dialog box You must create the application specific dialog box yourself When the menu entry is activated a signal will trigger the showAboutApplication slot See showAboutApplication for more information Example adding a help menu to your application showWhatsThis Set this to false if you do not want to include the menu entry A standard help menu use XMLGUI instead or KHelpMenu directly"}, {"type": "function", "name": "KMainWindow::dbusName", "url": "classKMainWindow.html#aeea42f24e8a9e58e6a333fe53c524c54", "keyword": "dbusName KMainWindow::dbusName KMainWindow dbusName KMainWindow::dbusName KMainWindow", "text": "4.0.1"}, {"type": "function", "name": "KMainWindow::hasMenuBar", "url": "classKMainWindow.html#a2abb6f30dbe3d417e42d945025d678b0", "keyword": "hasMenuBar KMainWindow::hasMenuBar KMainWindow hasMenuBar KMainWindow::hasMenuBar KMainWindow", "text": ""}, {"type": "function", "name": "KMainWindow::helpMenu", "url": "classKMainWindow.html#a669da563f6d8e85e6f590980593353b4", "keyword": "helpMenu KMainWindow::helpMenu KMainWindow helpMenu KMainWindow::helpMenu KMainWindow", "text": "It contains entries for the help system activated by F1 an optional entry activated by Shift F1 an application specific dialog box and an dialog box Example adding a standard help menu to your application aboutAppText The string that is used in the application specific dialog box If you leave this string empty the information in the global KAboutData of the application will be used to make a standard dialog box showWhatsThis Set this to false if you do not want to include the menu entry A standard help menu use KHelpMenu directly"}, {"type": "function", "name": "KMainWindow::initialGeometrySet", "url": "classKMainWindow.html#a111f7fce6133327ccba37a6d505691b1", "keyword": "initialGeometrySet KMainWindow::initialGeometrySet KMainWindow initialGeometrySet KMainWindow::initialGeometrySet KMainWindow", "text": "Always false since 5.0 the functionality got removed"}, {"type": "function", "name": "KMainWindow::resetAutoSaveSettings", "url": "classKMainWindow.html#a50794fac648c5bcded2c6f446f919440", "keyword": "resetAutoSaveSettings KMainWindow::resetAutoSaveSettings KMainWindow resetAutoSaveSettings KMainWindow::resetAutoSaveSettings KMainWindow", "text": "You don t normally need to call this ever"}, {"type": "function", "name": "KMainWindow::restore", "url": "classKMainWindow.html#a46e01bd1aa6d488f1be2a5010030efb2", "keyword": "restore KMainWindow::restore KMainWindow restore KMainWindow::restore KMainWindow", "text": "You should call canBeRestored() first If the session did not contain so high a number the configuration is not changed and false returned That means clients could simply do the following Note that if show is true default QWidget::show() is called implicitly in restore With this you can easily restore all toplevel windows of your application If your application uses different kinds of toplevel windows then you can use KMainWindow::classNameOfToplevel(n) to determine the exact type before calling the childMW constructor in the example from above Note that you don t need to deal with this function Use the kRestoreMainWindows() convenience template function instead! kRestoreMainWindows() readProperties() canBeRestored()"}, {"type": "function", "name": "KMainWindow::saveMainWindowSettings", "url": "classKMainWindow.html#a80e3361f5ac95ab01c49746c6b03d3b9", "keyword": "saveMainWindowSettings KMainWindow::saveMainWindowSettings KMainWindow saveMainWindowSettings KMainWindow::saveMainWindowSettings KMainWindow", "text": "config Config group to save the settings to"}, {"type": "function", "name": "KMainWindow::setAutoSaveSettings", "url": "classKMainWindow.html#a421a8ca496cd11ff388b630357735cf4", "keyword": "setAutoSaveSettings KMainWindow::setAutoSaveSettings KMainWindow setAutoSaveSettings KMainWindow::setAutoSaveSettings KMainWindow", "text": "If the were moved around/shown/hidden when the window is closed saveMainWindowSettings KConfigGroup(KSharedConfig::openConfig(), groupName) will be called groupName a name that identifies this You can have several types of window in the same application saveWindowSize set it to true to include the window size when saving Typically you will call setAutoSaveSettings() in your KMainWindow-inherited class constructor and it will take care of restoring and saving automatically Make sure you call this after all your have been created To make sure that KMainWindow properly obtains the default size of the window you should do the following Remove hard coded resize() calls in the constructor or main they should be removed in favor of letting the automatic resizing determine the default window size Hard coded window sizes will be wrong for users that have big fonts use different styles long/small translations large toolbars and other factors Put the setAutoSaveSettings or setupGUI() call after all widgets have been created and placed inside the main window i.e for 99 of apps setCentralWidget() Widgets that inherit from QWidget like game boards should overload to specify a default size rather than letting QWidget::adjust use the default size of 0x0"}, {"type": "function", "name": "KMainWindow::setAutoSaveSettings", "url": "classKMainWindow.html#a89f9488e32fd6050ed8351d90a587b6c", "keyword": "setAutoSaveSettings KMainWindow::setAutoSaveSettings KMainWindow setAutoSaveSettings KMainWindow::setAutoSaveSettings KMainWindow", "text": "This allows the settings to be saved into another file than KSharedConfig::openConfig() 4.1"}, {"type": "function", "name": "KMainWindow::toolBar", "url": "classKMainWindow.html#a2a4a27013543027fd70c707041068777", "keyword": "toolBar KMainWindow::toolBar KMainWindow toolBar KMainWindow::toolBar KMainWindow", "text": "This refers to toolbars created dynamically from the XML UI framework If the toolbar does not exist one will be created name The internal name of the toolbar If no name is specified is assumed A pointer to the toolbar"}, {"type": "function", "name": "KMainWindow::toolBars", "url": "classKMainWindow.html#a7d97442f7651a701e5b4bc14155da322", "keyword": "toolBars KMainWindow::toolBars KMainWindow toolBars KMainWindow::toolBars KMainWindow", "text": "A list of all toolbars for this window"}, {"type": "function", "name": "KMainWindow::canBeRestored", "url": "classKMainWindow.html#a5dc9f5789c4451918104429f4af1cb97", "keyword": "canBeRestored KMainWindow::canBeRestored KMainWindow canBeRestored KMainWindow::canBeRestored KMainWindow", "text": "restore()"}, {"type": "function", "name": "KMainWindow::classNameOfToplevel", "url": "classKMainWindow.html#a9b826dabc2fe32547acdfa20a7d1fc8a", "keyword": "classNameOfToplevel KMainWindow::classNameOfToplevel KMainWindow classNameOfToplevel KMainWindow::classNameOfToplevel KMainWindow", "text": "This is only useful if your application uses different kinds of toplevel windows"}, {"type": "function", "name": "KMainWindow::memberList", "url": "classKMainWindow.html#a9439f20fe8282c949fb88b30cb0bc462", "keyword": "memberList KMainWindow::memberList KMainWindow memberList KMainWindow::memberList KMainWindow", "text": ""}, {"type": "slot", "name": "KMainWindow::saveAutoSaveSettings", "url": "classKMainWindow.html#a38702e739ebaf55d2519982e933713cf", "keyword": "saveAutoSaveSettings KMainWindow::saveAutoSaveSettings KMainWindow saveAutoSaveSettings KMainWindow::saveAutoSaveSettings KMainWindow", "text": "In all other cases setSettingsDirty() should be called instead to benefit from the delayed saving setAutoSaveSettings setSettingsDirty Example"}, {"type": "slot", "name": "KMainWindow::showAboutApplication", "url": "classKMainWindow.html#a160a7a1853fccae4518a5083405eeac4", "keyword": "showAboutApplication KMainWindow::showAboutApplication KMainWindow showAboutApplication KMainWindow::showAboutApplication KMainWindow", "text": "It must be reimplemented if you want to use a custom About Application dialog box This slot is connected to the About Application entry in the menu returned by customHelpMenu Example use KHelpMenu"}, {"type": "function", "name": "KMainWindow::closeEvent", "url": "classKMainWindow.html#a433d7bee79191266ca4ae335464922d5", "keyword": "closeEvent KMainWindow::closeEvent KMainWindow closeEvent KMainWindow::closeEvent KMainWindow", "text": "We recommend that you reimplement queryClose() rather than closeEvent() If you do it anyway ensure to call the base implementation to keep the feature of auto-saving window settings working"}, {"type": "function", "name": "KMainWindow::event", "url": "classKMainWindow.html#a36c72a2346be60bcb89c7e00f27fb3c1", "keyword": "event KMainWindow::event KMainWindow event KMainWindow::event KMainWindow", "text": "Also reimplemented to catch when a QDockWidget is added or removed"}, {"type": "function", "name": "KMainWindow::queryClose", "url": "classKMainWindow.html#af8c5708414be62f259114b0453ef8432", "keyword": "queryClose KMainWindow::queryClose KMainWindow queryClose KMainWindow::queryClose KMainWindow", "text": "The purpose of this function is to prepare the window in a way that it is safe to close it i.e without the user losing some data Default implementation returns true Returning false will cancel the closing and if KApplication::sessionSaving() is true it will also cancel KDE logout Reimplement this function to prevent the user from losing data Example Note that you should probably not actually close the document from within this method as it may be called by the session manager before the session is saved If the document is closed before the session save occurs its location might not be properly saved In addition the session shutdown may be canceled in which case the document should remain open KApplication::sessionSaving()"}, {"type": "function", "name": "KMainWindow::readGlobalProperties", "url": "classKMainWindow.html#a2d4da4f305f00e8a5c94f5b978334231", "keyword": "readGlobalProperties KMainWindow::readGlobalProperties KMainWindow readGlobalProperties KMainWindow::readGlobalProperties KMainWindow", "text": "Read the application-specific properties in again"}, {"type": "function", "name": "KMainWindow::readProperties", "url": "classKMainWindow.html#ac8d0d64ed5b309ba1da410423120d0a6", "keyword": "readProperties KMainWindow::readProperties KMainWindow readProperties KMainWindow::readProperties KMainWindow", "text": "Is called indirectly by restore()"}, {"type": "function", "name": "KMainWindow::restoreWindowSize", "url": "classKMainWindow.html#a065547cffb7d84d243bc86c5ffbc1b04", "keyword": "restoreWindowSize KMainWindow::restoreWindowSize KMainWindow restoreWindowSize KMainWindow::restoreWindowSize KMainWindow", "text": "use KWindowConfig::restoreWindowSize"}, {"type": "function", "name": "KMainWindow::saveGlobalProperties", "url": "classKMainWindow.html#acf811d77a3acdcf2b61f8826429615a7", "keyword": "saveGlobalProperties KMainWindow::saveGlobalProperties KMainWindow saveGlobalProperties KMainWindow::saveGlobalProperties KMainWindow", "text": "The function is invoked when the session manager requests your application to save its state This function is similar to saveProperties() but is only called for the very first main window regardless how many main window are open Override it if you need to save other data about your documents on session end sessionConfig is a config to which that data should be saved Normally you don t need this function But if you want to save data about your documents that are not in opened windows you might need it Default implementation does nothing"}, {"type": "function", "name": "KMainWindow::saveProperties", "url": "classKMainWindow.html#a4c7a6c395eec0bb245cd9ad6c884f897", "keyword": "saveProperties KMainWindow::saveProperties KMainWindow saveProperties KMainWindow::saveProperties KMainWindow", "text": "The function is invoked when the session manager requests your application to save its state Please reimplement these function in childclasses Note No user interaction is allowed in this function!"}, {"type": "function", "name": "KMainWindow::saveWindowSize", "url": "classKMainWindow.html#a6ff94db3910198c41ee688ef9ba122cf", "keyword": "saveWindowSize KMainWindow::saveWindowSize KMainWindow saveWindowSize KMainWindow::saveWindowSize KMainWindow", "text": "use KWindowConfig::saveWindowSize"}, {"type": "function", "name": "KMainWindow::settingsDirty", "url": "classKMainWindow.html#ad2442aa8c7c0e537455fe8f72763923a", "keyword": "settingsDirty KMainWindow::settingsDirty KMainWindow settingsDirty KMainWindow::settingsDirty KMainWindow", "text": ""}, {"type": "class", "name": "KShortcutsDialog", "url": "classKShortcutsDialog.html", "keyword": "KShortcutsDialog", "text": "The KShortcutsDialog class is used for configuring dictionaries of key/action associations for KActionCollection and KGlobalAccel It uses the KShortcutsEditor widget and offers buttons to set all keys to defaults and invoke on-line help Several static methods are supplied which provide the most convenient interface to the dialog The most common and most encouraged use is with KActionCollection 4.3 By default this dialog is modal If you don t want that setModal(false) and then the non-static configure() will show the dialog If you want to do anything extra when the dialog is done connect to okClicked() and/or cancelClicked() However if your extra stuff depends on the changed settings already being saved connect to saved() instead to be safe if you connect to okClicked() your function might be called before the save happens example KDE Shortcuts Dialog Nicolas Hadacek Hamish Rodda KDE 4 porting Michael Jansen"}, {"type": "signal", "name": "KShortcutsDialog::saved", "url": "classKShortcutsDialog.html#a6ed9743b7747aacfc620445cdfa66263", "keyword": "saved KShortcutsDialog::saved KShortcutsDialog", "text": ""}, {"type": "slot", "name": "KShortcutsDialog::accept", "url": "classKShortcutsDialog.html#ac600252dbb24eceeeffe9928c0d21e79", "keyword": "accept KShortcutsDialog::accept KShortcutsDialog", "text": "Reimplemented from superclass"}, {"type": "function", "name": "KShortcutsDialog::KShortcutsDialog", "url": "classKShortcutsDialog.html#a72f6ea7de264465708b50ddfc95b3a65", "keyword": "KShortcutsDialog KShortcutsDialog::KShortcutsDialog KShortcutsDialog", "text": "Set allowLetterShortcuts to false if unmodified alphanumeric keys A 1 etc are not permissible shortcuts"}, {"type": "function", "name": "KShortcutsDialog::~KShortcutsDialog", "url": "classKShortcutsDialog.html#a3e017242b48f7ca077d546f659c4589e", "keyword": "KShortcutsDialog::~KShortcutsDialog KShortcutsDialog", "text": "Deletes all resources used by a KShortcutsDialog object"}, {"type": "function", "name": "KShortcutsDialog::actionCollections", "url": "classKShortcutsDialog.html#a73f7c120def1597b3231320e5c9de536", "keyword": "actionCollections KShortcutsDialog::actionCollections KShortcutsDialog", "text": "the list of action collections that are available for configuration in the dialog"}, {"type": "function", "name": "KShortcutsDialog::addCollection", "url": "classKShortcutsDialog.html#ae59fe8ef46cc6b5b65d6056964e32ec9", "keyword": "addCollection KShortcutsDialog::addCollection KShortcutsDialog", "text": "title the title associated with the collection if null the KAboutData::progName() of the collection s componentData is used"}, {"type": "function", "name": "KShortcutsDialog::configure", "url": "classKShortcutsDialog.html#aae5f3147f22cac3cb9e4743ba8faa0bf", "keyword": "configure KShortcutsDialog::configure KShortcutsDialog", "text": ""}, {"type": "function", "name": "KShortcutsDialog::exportConfiguration", "url": "classKShortcutsDialog.html#a735bc9b788d069fca89d137721ff469a", "keyword": "exportConfiguration KShortcutsDialog::exportConfiguration KShortcutsDialog", "text": "5.15"}, {"type": "function", "name": "KShortcutsDialog::importConfiguration", "url": "classKShortcutsDialog.html#a3491991928e0a58417427759d18a7f3b", "keyword": "importConfiguration KShortcutsDialog::importConfiguration KShortcutsDialog", "text": "5.15"}, {"type": "function", "name": "KShortcutsDialog::sizeHint", "url": "classKShortcutsDialog.html#a6a1087cb5d6d694d3614739b4e04a92e", "keyword": "sizeHint KShortcutsDialog::sizeHint KShortcutsDialog", "text": "QWidget::sizeHint()"}, {"type": "function", "name": "KShortcutsDialog::configure", "url": "classKShortcutsDialog.html#af106abfef6cd98612b3c16be05e583d2", "keyword": "configure KShortcutsDialog::configure KShortcutsDialog", "text": "The new shortcut settings will become active if the user presses OK collection the KActionCollection to configure allowLetterShortcuts set to KShortcutsEditor::LetterShortcutsDisallowed if unmodified alphanumeric keys A 1 etc are not permissible shortcuts parent the parent widget to attach to bSaveSettings if true the settings will also be saved back by calling writeSettings() on the action collections that were added Accept if the dialog was closed with OK Reject otherwise"}, {"type": "class", "name": "KShortcutsEditor", "url": "classKShortcutsEditor.html", "keyword": "KShortcutsEditor", "text": "Configure dictionaries of key/action associations for KActions including global shortcuts The class takes care of all aspects of configuration including handling key conflicts internally Connect to the allDefault() slot if you want to set all configurable shortcuts to their default values KShortcutsDialog Nicolas Hadacek Hamish Rodda KDE 4 porting Michael Jansen"}, {"type": "enum", "name": "KShortcutsEditor::ActionType", "url": "classKShortcutsEditor.html#a83470194e9af2132182a30e09631a2fa", "keyword": "ActionType KShortcutsEditor::ActionType KShortcutsEditor", "text": ""}, {"type": "enumvalue", "name": "KShortcutsEditor::WidgetAction", "url": "classKShortcutsEditor.html#a83470194e9af2132182a30e09631a2faa2bf88d65082b0d974cbf360e71e54713", "keyword": "WidgetAction KShortcutsEditor::WidgetAction KShortcutsEditor", "text": "Actions which are triggered by any keypress in a widget which has the action added to it"}, {"type": "enumvalue", "name": "KShortcutsEditor::WindowAction", "url": "classKShortcutsEditor.html#a83470194e9af2132182a30e09631a2faafaf589ac2089c458ef20c6bcd7310d12", "keyword": "WindowAction KShortcutsEditor::WindowAction KShortcutsEditor", "text": "Actions which are triggered by any keypress in a window which has the action added to it or its child widget(s)"}, {"type": "enumvalue", "name": "KShortcutsEditor::ApplicationAction", "url": "classKShortcutsEditor.html#a83470194e9af2132182a30e09631a2faadd88eec51b210d5f34aca39579d0bcbf", "keyword": "ApplicationAction KShortcutsEditor::ApplicationAction KShortcutsEditor", "text": "Actions which are triggered by any keypress in the application"}, {"type": "enumvalue", "name": "KShortcutsEditor::GlobalAction", "url": "classKShortcutsEditor.html#a83470194e9af2132182a30e09631a2faac7af45ca0765f7db44d7bbab973cea22", "keyword": "GlobalAction KShortcutsEditor::GlobalAction KShortcutsEditor", "text": "Actions which are triggered by any keypress in the windowing system"}, {"type": "enumvalue", "name": "KShortcutsEditor::AllActions", "url": "classKShortcutsEditor.html#a83470194e9af2132182a30e09631a2faac4107147ce4a4ee667dbe01e023329ae", "keyword": "AllActions KShortcutsEditor::AllActions KShortcutsEditor", "text": "All actions"}, {"type": "enum", "name": "KShortcutsEditor::LetterShortcuts", "url": "classKShortcutsEditor.html#a50a9f08ed62d8ea2721064059acc03ae", "keyword": "LetterShortcuts KShortcutsEditor::LetterShortcuts KShortcutsEditor", "text": ""}, {"type": "enumvalue", "name": "KShortcutsEditor::LetterShortcutsDisallowed", "url": "classKShortcutsEditor.html#a50a9f08ed62d8ea2721064059acc03aea058ce8d3811f91677e983c0fa4200b21", "keyword": "LetterShortcutsDisallowed KShortcutsEditor::LetterShortcutsDisallowed KShortcutsEditor", "text": "Shortcuts without a modifier are not allowed so A would not be valid whereas Ctrl+A would be This only applies to printable characters however F1 Insert etc could still be used"}, {"type": "enumvalue", "name": "KShortcutsEditor::LetterShortcutsAllowed", "url": "classKShortcutsEditor.html#a50a9f08ed62d8ea2721064059acc03aeabfd529d13e97a03fdaef30605eaf845c", "keyword": "LetterShortcutsAllowed KShortcutsEditor::LetterShortcutsAllowed KShortcutsEditor", "text": "Letter shortcuts are allowed"}, {"type": "signal", "name": "KShortcutsEditor::keyChange", "url": "classKShortcutsEditor.html#a05765d6eb44d0c65334c1c6f57f956bc", "keyword": "keyChange KShortcutsEditor::keyChange KShortcutsEditor", "text": ""}, {"type": "slot", "name": "KShortcutsEditor::allDefault", "url": "classKShortcutsEditor.html#af180a5906de596cffd0bcf415c2ba9d1", "keyword": "allDefault KShortcutsEditor::allDefault KShortcutsEditor", "text": ""}, {"type": "slot", "name": "KShortcutsEditor::printShortcuts", "url": "classKShortcutsEditor.html#a7017f7df6fac22c003b90c0063a0cf81", "keyword": "printShortcuts KShortcutsEditor::printShortcuts KShortcutsEditor", "text": ""}, {"type": "slot", "name": "KShortcutsEditor::resizeColumns", "url": "classKShortcutsEditor.html#a36d0380fe5b0f297549c4ba128a312fa", "keyword": "resizeColumns KShortcutsEditor::resizeColumns KShortcutsEditor", "text": ""}, {"type": "function", "name": "KShortcutsEditor::KShortcutsEditor", "url": "classKShortcutsEditor.html#a54464cd36c04613fb03bfd9344d3364a", "keyword": "KShortcutsEditor KShortcutsEditor::KShortcutsEditor KShortcutsEditor", "text": "collection the KActionCollection to configure parent parent widget actionTypes types of actions to display in this widget allowLetterShortcuts set to LetterShortcutsDisallowed if unmodified alphanumeric keys A 1 etc are not permissible shortcuts"}, {"type": "function", "name": "KShortcutsEditor::KShortcutsEditor", "url": "classKShortcutsEditor.html#a69c4195a4cbd83ae831073b5beec79a2", "keyword": "KShortcutsEditor KShortcutsEditor::KShortcutsEditor KShortcutsEditor", "text": "parent parent widget actionTypes types of actions to display in this widget allowLetterShortcuts set to LetterShortcutsDisallowed if unmodified alphanumeric keys A 1 etc are not permissible shortcuts"}, {"type": "function", "name": "KShortcutsEditor::~KShortcutsEditor", "url": "classKShortcutsEditor.html#a015fa890c244ec3d3a698c0da428df41", "keyword": "KShortcutsEditor::~KShortcutsEditor KShortcutsEditor", "text": ""}, {"type": "function", "name": "KShortcutsEditor::actionTypes", "url": "classKShortcutsEditor.html#a303dd8f0ba4783454e11d52bb45871ed", "keyword": "actionTypes KShortcutsEditor::actionTypes KShortcutsEditor", "text": "The types of actions currently displayed in this widget 5.0"}, {"type": "function", "name": "KShortcutsEditor::addCollection", "url": "classKShortcutsEditor.html#a88c33b6506aa444ffa8c479114d5d8f1", "keyword": "addCollection KShortcutsEditor::addCollection KShortcutsEditor", "text": "add all its actions to the ones already associated with the KShortcutsEditor object title subtree title of this collection of shortcut"}, {"type": "function", "name": "KShortcutsEditor::clearCollections", "url": "classKShortcutsEditor.html#a4486889493e192625b4954bc8c657ee5", "keyword": "clearCollections KShortcutsEditor::clearCollections KShortcutsEditor", "text": ""}, {"type": "function", "name": "KShortcutsEditor::clearConfiguration", "url": "classKShortcutsEditor.html#a4a21dfa7b12d71a65faa7e964dcf4e87", "keyword": "clearConfiguration KShortcutsEditor::clearConfiguration KShortcutsEditor", "text": ""}, {"type": "function", "name": "KShortcutsEditor::commit", "url": "classKShortcutsEditor.html#a371b43ea29f7972741f84841ba75edb3", "keyword": "commit KShortcutsEditor::commit KShortcutsEditor", "text": "This commits the changes without saving 4.2"}, {"type": "function", "name": "KShortcutsEditor::exportConfiguration", "url": "classKShortcutsEditor.html#a503a8b7ddd723f090d5da2cbb9d343fa", "keyword": "exportConfiguration KShortcutsEditor::exportConfiguration KShortcutsEditor", "text": "This initializes the configuration object This will export the global configuration too config Config object"}, {"type": "function", "name": "KShortcutsEditor::importConfiguration", "url": "classKShortcutsEditor.html#aeea8c066318030919fa060dd4a869f11", "keyword": "importConfiguration KShortcutsEditor::importConfiguration KShortcutsEditor", "text": "This will remove all current setting before importing All shortcuts are set to QList<QKeySequence>() prior to importing from config! config Config object"}, {"type": "function", "name": "KShortcutsEditor::isModified", "url": "classKShortcutsEditor.html#ad6b79c24b19e6ee9cb445131cfa43161", "keyword": "isModified KShortcutsEditor::isModified KShortcutsEditor", "text": ""}, {"type": "function", "name": "KShortcutsEditor::save", "url": "classKShortcutsEditor.html#a86166bcca308f54d1c0b58425e9a1b32", "keyword": "save KShortcutsEditor::save KShortcutsEditor", "text": "Before saving the changes are committed This saves the actions to disk Any KActionCollection objects with the xmlFile() value set will be written to an XML file All other will be written to the application s rc file"}, {"type": "function", "name": "KShortcutsEditor::setActionTypes", "url": "classKShortcutsEditor.html#ab62714e5ee88f8c6f75ec555bac53f90", "keyword": "setActionTypes KShortcutsEditor::setActionTypes KShortcutsEditor", "text": "actionTypes New types of actions 5.0"}, {"type": "function", "name": "KShortcutsEditor::undoChanges", "url": "classKShortcutsEditor.html#aa30bf07e9f23513766347327f59785ca", "keyword": "undoChanges KShortcutsEditor::undoChanges KShortcutsEditor", "text": ""}, {"type": "function", "name": "KShortcutsEditor::writeConfiguration", "url": "classKShortcutsEditor.html#ae79e00208f78bb694e19e8b55c70c05f", "keyword": "writeConfiguration KShortcutsEditor::writeConfiguration KShortcutsEditor", "text": "This does not initialize the config object It adds the configuration this will not save the global configuration! globalaccel holds that part of the configuration writeGlobalConfig() config Config object to save to or or null to use the applications config object"}, {"type": "class", "name": "KShortcutWidget", "url": "classKShortcutWidget.html", "keyword": "KShortcutWidget", "text": "KDE Shortcut Widget"}, {"type": "slot", "name": "KShortcutWidget::applyStealShortcut", "url": "classKShortcutWidget.html#af62e2462f0742d05a8a0ff7f20fd6528", "keyword": "applyStealShortcut KShortcutWidget::applyStealShortcut KShortcutWidget", "text": "To be called before you apply your changes No shortcuts are stolen until this function is called"}, {"type": "function", "name": "KShortcutWidget::setCheckActionCollections", "url": "classKShortcutWidget.html#a7a1d220600115214b38e703cc4989f2f", "keyword": "setCheckActionCollections KShortcutWidget::setCheckActionCollections KShortcutWidget", "text": "If there is a conflictuous shortcut with a KAction and that his shortcut can be configured KAction::isShortcutConfigurable() returns true the user will be prompted for eventually steal the shortcut from this action Global shortcuts are automatically checked for conflicts Don t forget to call applyStealShortcut to actually steal the shortcut 4.1"}, {"type": "function", "name": "KShortcutWidget::setCheckActionList", "url": "classKShortcutWidget.html#a34ca0b7aa80e7a384138ba97744fe754", "keyword": "setCheckActionList KShortcutWidget::setCheckActionList KShortcutWidget", "text": "since 4.1 Use setCheckActionCollections so that KShortcutWidget knows in which action collection to call the writeSettings method after stealing a shortcut from an action"}, {"type": "class", "name": "KToggleToolBarAction", "url": "classKToggleToolBarAction.html", "keyword": "KToggleToolBarAction", "text": "It will show or hide the toolbar with the given name when activated and check or uncheck itself if the toolbar is manually shown or hidden If you need to perfom some additional action when the toolbar is shown or hidden connect to the toggled(bool) signal It will be emitted after the toolbar s visibility has changed whenever it changes"}, {"type": "function", "name": "KToggleToolBarAction::KToggleToolBarAction", "url": "classKToggleToolBarAction.html#a6fea861d3f60ccfdf5609f3d5f0a9526", "keyword": "KToggleToolBarAction KToggleToolBarAction::KToggleToolBarAction KToggleToolBarAction", "text": "This can be either the name of a toolbar in an xml ui file or a toolbar programmatically created with that name The action s parent object"}, {"type": "function", "name": "KToggleToolBarAction::KToggleToolBarAction", "url": "classKToggleToolBarAction.html#a2607b30d31dd4ab642df9831dc275cf7", "keyword": "KToggleToolBarAction KToggleToolBarAction::KToggleToolBarAction KToggleToolBarAction", "text": "toolBar. This can be either the name of a toolbar in an xml ui file or a toolbar programmatically created with that name toolBar the toolbar to be managed parent The action s parent object"}, {"type": "function", "name": "KToggleToolBarAction::~KToggleToolBarAction", "url": "classKToggleToolBarAction.html#a634f5541692cbbba94e781e24be4dfa3", "keyword": "KToggleToolBarAction::~KToggleToolBarAction KToggleToolBarAction", "text": ""}, {"type": "function", "name": "KToggleToolBarAction::eventFilter", "url": "classKToggleToolBarAction.html#a6048d279ca8b78d8c78d824d6a58424a", "keyword": "eventFilter KToggleToolBarAction::eventFilter KToggleToolBarAction", "text": "QObject"}, {"type": "function", "name": "KToggleToolBarAction::toolBar", "url": "classKToggleToolBarAction.html#afd9236fccb3a313365a4bc02a7d442d4", "keyword": "toolBar KToggleToolBarAction::toolBar KToggleToolBarAction", "text": ""}, {"type": "class", "name": "KToolBar", "url": "classKToolBar.html", "keyword": "KToolBar", "text": "A KDE-style toolbar KToolBar can be used as a standalone widget but KMainWindow provides easy factories and management of one or more toolbars KToolBar uses a global config group to load toolbar settings on construction It will reread this config group on a KApplication::appearanceChanged() signal KToolBar respects Kiosk settings see the KAuthorized namespace in the KConfig framework In particular system administrators can prevent users from moving toolbars with the action and from showing or hiding toolbars with the action For example to disable both add the following the application or global configuration If you can t depend on KXmlGui but you want to integrate with KDE you can use QToolBar with Set ToolButtonStyle to Qt::ToolButtonFollowStyle this will make QToolBar use the settings for Additionally set QToolBar::setProperty true to use settings for Settings from will only work on widget styles derived from KStyle Reginald Stadlbauer Stephan Kulow Sven Radej Hamish Rodda"}, {"type": "function", "name": "KToolBar::KToolBar", "url": "classKToolBar.html#abcb7208df3dfc954b0ab791e3cd82200", "keyword": "KToolBar KToolBar::KToolBar KToolBar", "text": "This constructor takes care of adding the toolbar to the mainwindow if parent is a QMainWindow Normally KDE applications do not call this directly they either call KMainWindow::toolBar(name) or they use XML-GUI and specify toolbars using XML parent The standard toolbar parent usually a KMainWindow isMainToolBar True for the false for other toolbars Different settings apply readConfig whether to apply the configuration global and application-specific"}, {"type": "function", "name": "KToolBar::KToolBar", "url": "classKToolBar.html#a21155fc9b40e2389982a7edec6eca10a", "keyword": "KToolBar KToolBar::KToolBar KToolBar", "text": "This constructor takes care of adding the toolbar to the mainwindow if parent is a QMainWindow Normally KDE applications do not call this directly they either call KMainWindow::toolBar(name) or they use XML-GUI and specify toolbars using XML objectName The QObject name of this toolbar required so that QMainWindow can save and load the toolbar position and so that KToolBar can find out if it s the main toolbar parent The standard toolbar parent usually a KMainWindow readConfig whether to apply the configuration global and application-specific"}, {"type": "function", "name": "KToolBar::KToolBar", "url": "classKToolBar.html#ae33a302e57d210a9e2d75a56f97bef20", "keyword": "KToolBar KToolBar::KToolBar KToolBar", "text": "to choose in which area the toolbar should be auto-added This is rarely used in KDE When using XMLGUI you can specify this as an xml attribute instead objectName The QObject name of this toolbar required so that QMainWindow can save and load the toolbar position parentWindow The window that should be the parent of this toolbar area The position of the toolbar Usually Qt::TopToolBarArea newLine If true start a new line in the dock for this toolbar isMainToolBar True for the false for other toolbars Different settings apply readConfig whether to apply the configuration global and application-specific"}, {"type": "function", "name": "KToolBar::~KToolBar", "url": "classKToolBar.html#a52a92b6904844a6c4ec165e7fb52bcc1", "keyword": "KToolBar::~KToolBar KToolBar", "text": ""}, {"type": "function", "name": "KToolBar::addXMLGUIClient", "url": "classKToolBar.html#a311a05b0ea692479c55b8984f052a539", "keyword": "addXMLGUIClient KToolBar::addXMLGUIClient KToolBar", "text": "4.8.1"}, {"type": "function", "name": "KToolBar::applySettings", "url": "classKToolBar.html#a769bbe7d01d6f80d808f6293abb8c834", "keyword": "applySettings KToolBar::applySettings KToolBar", "text": ""}, {"type": "function", "name": "KToolBar::contextMenuEnabled", "url": "classKToolBar.html#a1e501f091d7334aac111415f93ddcc41", "keyword": "contextMenuEnabled KToolBar::contextMenuEnabled KToolBar", "text": "true if the context menu is disabled use contextMenuPolicy"}, {"type": "function", "name": "KToolBar::eventFilter", "url": "classKToolBar.html#ab847f5224e9e499654c3529591bcb2ec", "keyword": "eventFilter KToolBar::eventFilter KToolBar", "text": ""}, {"type": "function", "name": "KToolBar::iconSizeDefault", "url": "classKToolBar.html#af7581093e5caed3f475c9235f74a8345", "keyword": "iconSizeDefault KToolBar::iconSizeDefault KToolBar", "text": "the default size for this type of toolbar"}, {"type": "function", "name": "KToolBar::loadState", "url": "classKToolBar.html#a7fa433d27b2dda9a329c30b0d6b9309d", "keyword": "loadState KToolBar::loadState KToolBar", "text": "element called by KXMLGUIBuilder"}, {"type": "function", "name": "KToolBar::mainWindow", "url": "classKToolBar.html#a7dae79d9b6a5c9bcbf4b3e1255caad0d", "keyword": "mainWindow KToolBar::mainWindow KToolBar", "text": ""}, {"type": "function", "name": "KToolBar::removeXMLGUIClient", "url": "classKToolBar.html#adb33aaa72f7201152ec847b855bb992d", "keyword": "removeXMLGUIClient KToolBar::removeXMLGUIClient KToolBar", "text": "4.8.5"}, {"type": "function", "name": "KToolBar::saveSettings", "url": "classKToolBar.html#ae96affad8f7bb10acc1e3ea9b92b282b", "keyword": "saveSettings KToolBar::saveSettings KToolBar", "text": ""}, {"type": "function", "name": "KToolBar::saveState", "url": "classKToolBar.html#ab53521f1d82ab904e3c14d834cc9927d", "keyword": "saveState KToolBar::saveState KToolBar", "text": "element called by KXMLGUIBuilder"}, {"type": "function", "name": "KToolBar::setContextMenuEnabled", "url": "classKToolBar.html#a14bc31ca79f7c76c0c618fb20d246268", "keyword": "setContextMenuEnabled KToolBar::setContextMenuEnabled KToolBar", "text": "enable If false then the context menu will be disabled use setContextMenuPolicy"}, {"type": "function", "name": "KToolBar::setIconDimensions", "url": "classKToolBar.html#ae1935e1d3c098e299c67f242985f7558", "keyword": "setIconDimensions KToolBar::setIconDimensions KToolBar", "text": ""}, {"type": "function", "name": "KToolBar::setXMLGUIClient", "url": "classKToolBar.html#aa48b33c08547de137ff45781477f05b4", "keyword": "setXMLGUIClient KToolBar::setXMLGUIClient KToolBar", "text": "use addXMLGUIClient"}, {"type": "function", "name": "KToolBar::emitToolbarStyleChanged", "url": "classKToolBar.html#a190d8c25dbfddff31d330912cbfb7b60", "keyword": "emitToolbarStyleChanged KToolBar::emitToolbarStyleChanged KToolBar", "text": "5.0"}, {"type": "function", "name": "KToolBar::setToolBarsEditable", "url": "classKToolBar.html#a5baced15c76cb54de5ee611250cb466d", "keyword": "setToolBarsEditable KToolBar::setToolBarsEditable KToolBar", "text": "This is called by KEditToolbar and should generally be set to disabled whenever KEditToolbar is not active"}, {"type": "function", "name": "KToolBar::setToolBarsLocked", "url": "classKToolBar.html#ab4f2c24b8c21a559c57ac4195d57b74a", "keyword": "setToolBarsLocked KToolBar::setToolBarsLocked KToolBar", "text": ""}, {"type": "function", "name": "KToolBar::toolBarsEditable", "url": "classKToolBar.html#a372978d6bf8e43c54b8cddb567ea2026", "keyword": "toolBarsEditable KToolBar::toolBarsEditable KToolBar", "text": ""}, {"type": "function", "name": "KToolBar::toolBarsLocked", "url": "classKToolBar.html#a597d45e89d2eb81064cec3be906e6f7f", "keyword": "toolBarsLocked KToolBar::toolBarsLocked KToolBar", "text": ""}, {"type": "class", "name": "KXMLGUIBuilder", "url": "classKXMLGUIBuilder.html", "keyword": "KXMLGUIBuilder", "text": "The virtual methods are mostly for historical reasons there isn t really a need to derive from KXMLGUIBuilder anymore"}, {"type": "function", "name": "KXMLGUIBuilder::createContainer", "url": "classKXMLGUIBuilder.html#a54632db248afd9590f853975423d2b84", "keyword": "createContainer KXMLGUIBuilder::createContainer KXMLGUIBuilder createContainer KXMLGUIBuilder::createContainer KXMLGUIBuilder", "text": "parent The parent for the container index The index where the container should be inserted into the parent container/widget element The element from the DOM tree describing the container use it to access container specified attributes or child elements action The action created for this container used for e.g passing to removeContainer"}, {"type": "function", "name": "KXMLGUIBuilder::removeContainer", "url": "classKXMLGUIBuilder.html#afe027feb2b55a01c3823a2c1765afcea", "keyword": "removeContainer KXMLGUIBuilder::removeContainer KXMLGUIBuilder removeContainer KXMLGUIBuilder::removeContainer KXMLGUIBuilder", "text": ""}, {"type": "function", "name": "KXMLGUIBuilder::removeCustomElement", "url": "classKXMLGUIBuilder.html#a79addb091bde6cfcdaf39e4dbb85ad9f", "keyword": "removeCustomElement KXMLGUIBuilder::removeCustomElement KXMLGUIBuilder removeCustomElement KXMLGUIBuilder::removeCustomElement KXMLGUIBuilder", "text": "do not use"}, {"type": "class", "name": "KXMLGUIClient", "url": "classKXMLGUIClient.html", "keyword": "KXMLGUIClient", "text": ""}, {"type": "function", "name": "KXMLGUIClient::KXMLGUIClient", "url": "classKXMLGUIClient.html#a3615bc44e8bf87eb93da085a6673d12d", "keyword": "KXMLGUIClient KXMLGUIClient::KXMLGUIClient KXMLGUIClient KXMLGUIClient KXMLGUIClient::KXMLGUIClient KXMLGUIClient", "text": ""}, {"type": "function", "name": "KXMLGUIClient::KXMLGUIClient", "url": "classKXMLGUIClient.html#a94a5e253d2f61f2d73ee26944b34391d", "keyword": "KXMLGUIClient KXMLGUIClient::KXMLGUIClient KXMLGUIClient KXMLGUIClient KXMLGUIClient::KXMLGUIClient KXMLGUIClient", "text": "This constructor takes an additional parent argument which makes the client a child client of the parent Child clients are automatically added to the GUI if the parent is added"}, {"type": "function", "name": "KXMLGUIClient::~KXMLGUIClient", "url": "classKXMLGUIClient.html#a8efc11a944a5a41bb78e85f070757d1f", "keyword": "KXMLGUIClient::~KXMLGUIClient KXMLGUIClient KXMLGUIClient::~KXMLGUIClient KXMLGUIClient", "text": "If the client was in a factory the factory is NOT informed about the client being removed This is a feature it makes window destruction fast the xmlgui is not updated for every client being deleted but if you want to simply remove one client and to keep using the window make sure to call factory- removeClient(client) before deleting the client"}, {"type": "function", "name": "KXMLGUIClient::action", "url": "classKXMLGUIClient.html#a1895d52a8aee6bb2727782d2498e2fcc", "keyword": "action KXMLGUIClient::action KXMLGUIClient action KXMLGUIClient::action KXMLGUIClient", "text": "If not found it looks in its child clients This method is provided for convenience as it uses actionCollection() to get the action object"}, {"type": "function", "name": "KXMLGUIClient::action", "url": "classKXMLGUIClient.html#a9d9f67052cd3af17ddcd5415310537c6", "keyword": "action KXMLGUIClient::action KXMLGUIClient action KXMLGUIClient::action KXMLGUIClient", "text": "The default implementation uses the attribute to query the action object via the other action() method"}, {"type": "function", "name": "KXMLGUIClient::actionCollection", "url": "classKXMLGUIClient.html#a638115232a877a631b53e741de7c17ab", "keyword": "actionCollection KXMLGUIClient::actionCollection KXMLGUIClient actionCollection KXMLGUIClient::actionCollection KXMLGUIClient", "text": ""}, {"type": "function", "name": "KXMLGUIClient::childClients", "url": "classKXMLGUIClient.html#a7e6567b9217304a9abe367d152e3a082", "keyword": "childClients KXMLGUIClient::childClients KXMLGUIClient childClients KXMLGUIClient::childClients KXMLGUIClient", "text": ""}, {"type": "function", "name": "KXMLGUIClient::clientBuilder", "url": "classKXMLGUIClient.html#ac2021ca953a60a2aedc5a0f07e095591", "keyword": "clientBuilder KXMLGUIClient::clientBuilder KXMLGUIClient clientBuilder KXMLGUIClient::clientBuilder KXMLGUIClient", "text": ""}, {"type": "function", "name": "KXMLGUIClient::componentName", "url": "classKXMLGUIClient.html#a3751a68722bda0427bac1488c6018c04", "keyword": "componentName KXMLGUIClient::componentName KXMLGUIClient componentName KXMLGUIClient::componentName KXMLGUIClient", "text": "The component name for this GUI client"}, {"type": "function", "name": "KXMLGUIClient::domDocument", "url": "classKXMLGUIClient.html#a4aad0df1825891d465e5a0c599199b20", "keyword": "domDocument KXMLGUIClient::domDocument KXMLGUIClient domDocument KXMLGUIClient::domDocument KXMLGUIClient", "text": "The parsed XML in a QDomDocument set by setXMLFile() or setXML() This document describes the layout of the GUI"}, {"type": "function", "name": "KXMLGUIClient::factory", "url": "classKXMLGUIClient.html#a81a588b37c85746d70fa030a68d411a2", "keyword": "factory KXMLGUIClient::factory KXMLGUIClient factory KXMLGUIClient::factory KXMLGUIClient", "text": ""}, {"type": "function", "name": "KXMLGUIClient::insertChildClient", "url": "classKXMLGUIClient.html#ad5dead4d8da7a6aa7d6bdf258aa43168", "keyword": "insertChildClient KXMLGUIClient::insertChildClient KXMLGUIClient insertChildClient KXMLGUIClient::insertChildClient KXMLGUIClient", "text": "Usually you don t need to call this method as it is called automatically when using the second constructor which takes a parent argument"}, {"type": "function", "name": "KXMLGUIClient::parentClient", "url": "classKXMLGUIClient.html#a0424264fb1a70a0d6f7355a50493cb77", "keyword": "parentClient KXMLGUIClient::parentClient KXMLGUIClient parentClient KXMLGUIClient::parentClient KXMLGUIClient", "text": "This method returns a pointer to the parent client or 0 if it has no parent client assigned"}, {"type": "function", "name": "KXMLGUIClient::plugActionList", "url": "classKXMLGUIClient.html#a7b09fd0cc566bd64b49f775501374ac6", "keyword": "plugActionList KXMLGUIClient::plugActionList KXMLGUIClient plugActionList KXMLGUIClient::plugActionList KXMLGUIClient", "text": "E.g if you are writing a file manager and there is a menu file whose contents depend on the mimetype of the file that is selected then you can achieve this using ActionLists It works as follows In your xxxui.rc file the one that you set in setXMLFile() pass to setupGUI() you put a tag ActionList name Example This tag will get expanded to a list of actions In the example above a file manager with a dynamic file menu you would call every time a file is selected unselected or You should not call createGUI() after calling this function In fact that would remove the newly added actionlists again Forgetting to call unplugActionList() before plugActionList() would leave the previous actions in the menu too unplugActionList()"}, {"type": "function", "name": "KXMLGUIClient::reloadXML", "url": "classKXMLGUIClient.html#a4844c3b6a7362cd4dc2e05cc8211d5de", "keyword": "reloadXML KXMLGUIClient::reloadXML KXMLGUIClient reloadXML KXMLGUIClient::reloadXML KXMLGUIClient", "text": "This is intended to be used when you know that the resource file has changed and you will soon be rebuilding the GUI This will only have an effect if the client is then removed and re-added to the factory This method is only for child clients do not call it for a mainwindow! For a mainwindow use loadStandardsXmlFile setXmlFile(xmlFile()) instead"}, {"type": "function", "name": "KXMLGUIClient::removeChildClient", "url": "classKXMLGUIClient.html#a37e2620214e77a8c4edc7597710b7b32", "keyword": "removeChildClient KXMLGUIClient::removeChildClient KXMLGUIClient removeChildClient KXMLGUIClient::removeChildClient KXMLGUIClient", "text": ""}, {"type": "function", "name": "KXMLGUIClient::replaceXMLFile", "url": "classKXMLGUIClient.html#a3528715de4f96ee174bbc594402cb2ec", "keyword": "replaceXMLFile KXMLGUIClient::replaceXMLFile KXMLGUIClient replaceXMLFile KXMLGUIClient::replaceXMLFile KXMLGUIClient", "text": "The purpose of this public method is to allow non-inherited objects to replace the ui definition of an embedded client with a customized version It corresponds to the usual calls to setXMLFile() and setLocalXMLFile() xmlfile The xml file to use Contrary to setXMLFile() this must be an absolute file path localxmlfile The local xml file to set This should be the full path to a writeable file usually using QStandardPaths::writableLocation You can set this to QString() but no user changes to shortcuts toolbars will be possible in this case setLocalXMLFile() merge Whether to merge with the global document If in any doubt whether you need this or not use setXMLFile() and setLocalXMLFile() instead of this function Just like setXMLFile() this function has to be called before the client is added to a KXMLGUIFactory in order to have an effect 4.4"}, {"type": "function", "name": "KXMLGUIClient::setClientBuilder", "url": "classKXMLGUIClient.html#a95a2422a35274351314ac5eb4fc9a23e", "keyword": "setClientBuilder KXMLGUIClient::setClientBuilder KXMLGUIClient setClientBuilder KXMLGUIClient::setClientBuilder KXMLGUIClient", "text": "Use this method to assign your builder instance to the client so that the KXMLGUIFactory can use it when building the client s GUI Client specific guibuilders are useful if you want to create custom container widgets for your GUI"}, {"type": "function", "name": "KXMLGUIClient::setFactory", "url": "classKXMLGUIClient.html#ab1989539c961858a273ca841618e0bf7", "keyword": "setFactory KXMLGUIClient::setFactory KXMLGUIClient setFactory KXMLGUIClient::setFactory KXMLGUIClient", "text": ""}, {"type": "function", "name": "KXMLGUIClient::setXMLGUIBuildDocument", "url": "classKXMLGUIClient.html#a90f952857036d4be2e42657fe4f981bb", "keyword": "setXMLGUIBuildDocument KXMLGUIClient::setXMLGUIBuildDocument KXMLGUIClient setXMLGUIBuildDocument KXMLGUIClient::setXMLGUIBuildDocument KXMLGUIClient", "text": ""}, {"type": "function", "name": "KXMLGUIClient::unplugActionList", "url": "classKXMLGUIClient.html#a65b212e793ec67d341d7f1ac9355b7fd", "keyword": "unplugActionList KXMLGUIClient::unplugActionList KXMLGUIClient unplugActionList KXMLGUIClient::unplugActionList KXMLGUIClient", "text": "Calling this removes the specified action list i.e this is the complement to plugActionList() See plugActionList() for a more detailed example plugActionList()"}, {"type": "function", "name": "KXMLGUIClient::xmlFile", "url": "classKXMLGUIClient.html#a04a64a13f335a218796081eccc37b51d", "keyword": "xmlFile KXMLGUIClient::xmlFile KXMLGUIClient xmlFile KXMLGUIClient::xmlFile KXMLGUIClient", "text": "If setXML() is used directly then this will return NULL The filename that this returns is obvious for components as each component has exactly one XML file In non-components however there are usually two the global file and the local file This function doesn t really care about that though It will always return the last XML file set This in almost all cases will be the local XML file The name of the XML file or QString()"}, {"type": "function", "name": "KXMLGUIClient::xmlguiBuildDocument", "url": "classKXMLGUIClient.html#ae5e252a6ddd84eaf95bd61856d3951e5", "keyword": "xmlguiBuildDocument KXMLGUIClient::xmlguiBuildDocument KXMLGUIClient xmlguiBuildDocument KXMLGUIClient::xmlguiBuildDocument KXMLGUIClient", "text": ""}, {"type": "function", "name": "KXMLGUIClient::loadStandardsXmlFile", "url": "classKXMLGUIClient.html#aa0900256f3909953bf8948886b26dda6", "keyword": "loadStandardsXmlFile KXMLGUIClient::loadStandardsXmlFile KXMLGUIClient loadStandardsXmlFile KXMLGUIClient::loadStandardsXmlFile KXMLGUIClient", "text": "Usually followed by setXMLFile(xmlFile, true) for merging 4.6"}, {"type": "function", "name": "KXMLGUIClient::setComponentName", "url": "classKXMLGUIClient.html#afecde1988dfb60a54990a50c6c158039", "keyword": "setComponentName KXMLGUIClient::setComponentName KXMLGUIClient setComponentName KXMLGUIClient::setComponentName KXMLGUIClient", "text": "Call this first in the inherited class constructor At least before setXMLFile() componentName the name of the directory where the XMLGUI files will be found componentDisplayName a user-visible name e.g for the toolbar editor"}, {"type": "function", "name": "KXMLGUIClient::setDOMDocument", "url": "classKXMLGUIClient.html#a17566d518fa7c2b45f81b85fb8c4fc97", "keyword": "setDOMDocument KXMLGUIClient::setDOMDocument KXMLGUIClient setDOMDocument KXMLGUIClient::setDOMDocument KXMLGUIClient", "text": "Call this in the Part-inherited class constructor if you don t call setXMLFile or setXML WARNING using this method is not recommended Many code paths lead to reloading from the XML file on disk And editing toolbars requires that the result is written to disk anyway and loaded from there the next time For application-specific changes to a client s XML it is a better idea to save the modified dom document to an app/default-client.xml and define a local-xml-file to something specific like app/local-client.xml using replaceXMLFile See kdepimlibs/kontactinterface/plugin.cpp for an example"}, {"type": "function", "name": "KXMLGUIClient::setLocalXMLFile", "url": "classKXMLGUIClient.html#a986969c71e595c2b849847ba2d35da21", "keyword": "setLocalXMLFile KXMLGUIClient::setLocalXMLFile KXMLGUIClient setLocalXMLFile KXMLGUIClient::setLocalXMLFile KXMLGUIClient", "text": "You normally don t need to call this if you pass a simple filename to setXMLFile"}, {"type": "function", "name": "KXMLGUIClient::setXML", "url": "classKXMLGUIClient.html#ab6518f2d8705ed69f24fceec4ec88cb3", "keyword": "setXML KXMLGUIClient::setXML KXMLGUIClient setXML KXMLGUIClient::setXML KXMLGUIClient", "text": "Call this in the Part-inherited class constructor if you don t call setXMLFile()"}, {"type": "function", "name": "KXMLGUIClient::setXMLFile", "url": "classKXMLGUIClient.html#a6de555afb77fb964db93d306a5122368", "keyword": "setXMLFile KXMLGUIClient::setXMLFile KXMLGUIClient setXMLFile KXMLGUIClient::setXMLFile KXMLGUIClient", "text": "Call this in the inherited class constructor for parts and plugins NOTE for mainwindows don t call this pass the name of the xml file to KXmlGuiWindow::setupGUI() or KXmlGuiWindow::createGUI() file Either an absolute path for the file or simply the filename See below for details If you pass an absolute path here make sure to also call setLocalXMLFile otherwise toolbar editing won t work merge Whether to merge with the global document setXMLDoc Specify whether to call setXML Default is true The preferred way to call this method is with a simple filename for the file argument Since KF 5.1 the file will then be assumed to be installed in DATADIR/kxmlgui5/ under a directory named after the component name You should use KXMLGUI_INSTALL_DIR in your CMakeLists.txt file to install the rc file(s) Since KF 5.4 the file will then be assumed to be installed in a Qt resource in under a directory named after the component name Compatibility notes Fallback lookups exist to older locations DATADIR/componentname/file and DATADIR/file The latter was there so that setXMLFile worked but this was undocumented Do not do this anymore after porting to KXMLGUI_INSTALL_DIR use setComponentName and setXMLFile"}, {"type": "function", "name": "KXMLGUIClient::stateChanged", "url": "classKXMLGUIClient.html#a4a5c7bb39d27c6082ea989e19b3e3bcf", "keyword": "stateChanged KXMLGUIClient::stateChanged KXMLGUIClient stateChanged KXMLGUIClient::stateChanged KXMLGUIClient", "text": "To accomplish this the respective actions are tagged as enable or disable in a State group of the XMLfile During program execution the programmer can call stateChanged() to set actions to a defined state newstate Name of a State in the XMLfile reverse If the flag reverse is set to StateReverse the State is reversed actions to be enabled will be disabled and action to be disabled will be enabled Default is reverse false"}, {"type": "function", "name": "KXMLGUIClient::standardsXmlFileLocation", "url": "classKXMLGUIClient.html#a596dde78a1cee1b8699ef9f5585dd773", "keyword": "standardsXmlFileLocation KXMLGUIClient::standardsXmlFileLocation KXMLGUIClient standardsXmlFileLocation KXMLGUIClient::standardsXmlFileLocation KXMLGUIClient", "text": "full path to ui_standards.rc always non-empty 5.16"}, {"type": "class", "name": "KXMLGUIFactory", "url": "classKXMLGUIFactory.html", "keyword": "KXMLGUIFactory", "text": "Each KXMLGUIClient represents a part of the GUI composed from containers and actions KXMLGUIFactory takes care of building with the help of a KXMLGUIBuilder and merging the GUI from an unlimited number of clients Each client provides XML through a QDomDocument and actions through a KActionCollection The XML document contains the rules for how to merge the GUI KXMLGUIFactory processes the DOM tree provided by a client and plugs in the client s actions according to the XML and the merging rules of previously inserted clients Container widgets are built via a KXMLGUIBuilder which has to be provided with the KXMLGUIFactory constructor"}, {"type": "signal", "name": "KXMLGUIFactory::makingChanges", "url": "classKXMLGUIFactory.html#aba903981d69212cb31d2655a1d4bdbe4", "keyword": "makingChanges KXMLGUIFactory::makingChanges KXMLGUIFactory", "text": "adding or removing clients makingChanges(true) is emitted before any change happens and makingChanges(false) is emitted after the change is done This allows e.g KMainWindow to know that the GUI is being changed programmatically and not by the user so there is no reason to save toolbar settings afterwards 4.1.3"}, {"type": "slot", "name": "KXMLGUIFactory::configureShortcuts", "url": "classKXMLGUIFactory.html#a9e985c57238c9ba5d76eca9366c36d76", "keyword": "configureShortcuts KXMLGUIFactory::configureShortcuts KXMLGUIFactory", "text": "This slot can be connected directly to the action to configure shortcuts This is very simple to do that by adding a single line bAllowLetterShortcuts Set to false if unmodified alphanumeric keys A 1 etc are not permissible shortcuts bSaveSettings if true the settings will also be saved back to the file which they were intially read from"}, {"type": "function", "name": "KXMLGUIFactory::KXMLGUIFactory", "url": "classKXMLGUIFactory.html#a242d6aba78b50c08aa9384f3295d1b5e", "keyword": "KXMLGUIFactory KXMLGUIFactory::KXMLGUIFactory KXMLGUIFactory", "text": "The provided builder KXMLGUIBuilder will be called for creating and removing container widgets when clients are added/removed from the GUI Note that the ownership of the given KXMLGUIBuilder object won t be transferred to this KXMLGUIFactory so you have to take care of deleting it properly"}, {"type": "function", "name": "KXMLGUIFactory::~KXMLGUIFactory", "url": "classKXMLGUIFactory.html#a6504f95d7a8d3af39de0ea88c986edef", "keyword": "KXMLGUIFactory::~KXMLGUIFactory KXMLGUIFactory", "text": ""}, {"type": "function", "name": "KXMLGUIFactory::addClient", "url": "classKXMLGUIFactory.html#a85a1dcbcd7e888cb24abd0d4ce794d67", "keyword": "addClient KXMLGUIFactory::addClient KXMLGUIFactory", "text": "This also means that the order in which clients are added to the factory is relevant assuming that your application supports plugins you should first add your application to the factory and then the plugin so that the plugin s UI is merged into the UI of your application and not the other way round"}, {"type": "function", "name": "KXMLGUIFactory::clients", "url": "classKXMLGUIFactory.html#a5d6a3b5a764cc0511b0c45d86b3b9368", "keyword": "clients KXMLGUIFactory::clients KXMLGUIFactory", "text": ""}, {"type": "function", "name": "KXMLGUIFactory::container", "url": "classKXMLGUIFactory.html#ac6c85f3927f49bc260263372d05ec205", "keyword": "container KXMLGUIFactory::container KXMLGUIFactory", "text": "The container name is specified with a attribute in the XML document This function is particularly useful for getting hold of a popupmenu defined in an XMLUI file For instance where is the name of the menu in the XMLUI file and is XMLGUIClient which owns the popupmenu e.g the mainwindow or the part or the plugin containerName Name of the container widget client Owner of the container widget useTagName Specifies whether to compare the specified name with the name attribute or the tag name This method may return 0 if no container with the given name exists or is not owned by the client"}, {"type": "function", "name": "KXMLGUIFactory::refreshActionProperties", "url": "classKXMLGUIFactory.html#abeffe7461c83aa382df0a95adc90dba8", "keyword": "refreshActionProperties KXMLGUIFactory::refreshActionProperties KXMLGUIFactory", "text": "This is needed for example when you change shortcuts scheme at runtime"}, {"type": "function", "name": "KXMLGUIFactory::removeClient", "url": "classKXMLGUIFactory.html#a6992736def9d31a10e73a05346826171", "keyword": "removeClient KXMLGUIFactory::removeClient KXMLGUIFactory", "text": ""}, {"type": "function", "name": "KXMLGUIFactory::reset", "url": "classKXMLGUIFactory.html#aa10ec6bac7d466ae51f85adb72901819", "keyword": "reset KXMLGUIFactory::reset KXMLGUIFactory", "text": "This deletes the internal node tree and therefore resets the internal state of the class Please note that the actual GUI is NOT touched at all meaning no containers are deleted nor any actions unplugged That is something you have to do on your own So use this method only if you know what you are doing also note that this will call KXMLGUIClient::setFactory( 0 ) for all inserted clients"}, {"type": "function", "name": "KXMLGUIFactory::resetContainer", "url": "classKXMLGUIFactory.html#ae6f1b37ff050983174c71a8a6c3a35bd", "keyword": "resetContainer KXMLGUIFactory::resetContainer KXMLGUIFactory", "text": "This deletes the internal node subtree for the specified container The actual GUI is not touched no containers are deleted or any actions unplugged Use this method only if you know what you are doing also note that this will call KXMLGUIClient::setFactory( 0 ) for all clients of the container"}, {"type": "function", "name": "KXMLGUIFactory::actionPropertiesElement", "url": "classKXMLGUIFactory.html#a89c6537f0d822ace75acc9dd12cde8bb", "keyword": "actionPropertiesElement KXMLGUIFactory::actionPropertiesElement KXMLGUIFactory", "text": "Find or create the ActionProperties element used when saving custom action properties"}, {"type": "function", "name": "KXMLGUIFactory::findActionByName", "url": "classKXMLGUIFactory.html#ab670439aac9d04b2b0981fc343593006", "keyword": "findActionByName KXMLGUIFactory::findActionByName KXMLGUIFactory", "text": "Find or create the element for a given action by name Used when saving custom action properties"}, {"type": "function", "name": "KXMLGUIFactory::readConfigFile", "url": "classKXMLGUIFactory.html#a102b212767b1ef827ab7f5d4836a0b9b", "keyword": "readConfigFile KXMLGUIFactory::readConfigFile KXMLGUIFactory", "text": ""}, {"type": "function", "name": "KXMLGUIFactory::saveConfigFile", "url": "classKXMLGUIFactory.html#a738464fea4ca6eeaedc9efe32c5be730", "keyword": "saveConfigFile KXMLGUIFactory::saveConfigFile KXMLGUIFactory", "text": ""}, {"type": "class", "name": "KXmlGuiWindow", "url": "classKXmlGuiWindow.html", "keyword": "KXmlGuiWindow", "text": "Instead of creating a KMainWindow manually and assigning menus menu entries toolbar buttons and actions to it by hand this class can be used to load an rc file to manage the main window s actions See for essential information on the XML file format and usage of this class KMainWindow Reginald Stadlbauer Stephan Kulow Matthias Ettrich Chris Schlaeger Sven Radej Maintained by Sven Radej"}, {"type": "enum", "name": "KXmlGuiWindow::StandardWindowOption", "url": "classKXmlGuiWindow.html#a938a747d4c9aad833848dee2e0b3121f", "keyword": "StandardWindowOption KXmlGuiWindow::StandardWindowOption KXmlGuiWindow", "text": "setupGUI()"}, {"type": "enumvalue", "name": "KXmlGuiWindow::ToolBar", "url": "classKXmlGuiWindow.html#a938a747d4c9aad833848dee2e0b3121fa9053b34f157c1ce738bfdabca2eb4c91", "keyword": "ToolBar KXmlGuiWindow::ToolBar KXmlGuiWindow", "text": "adds action to show/hide the toolbar(s) and adds action to configure the toolbar(s) setStandardToolBarMenuEnabled"}, {"type": "enumvalue", "name": "KXmlGuiWindow::Keys", "url": "classKXmlGuiWindow.html#a938a747d4c9aad833848dee2e0b3121fad05048977b9194ece91a7e52d70e0986", "keyword": "Keys KXmlGuiWindow::Keys KXmlGuiWindow", "text": "adds action to show the key configure action"}, {"type": "enumvalue", "name": "KXmlGuiWindow::StatusBar", "url": "classKXmlGuiWindow.html#a938a747d4c9aad833848dee2e0b3121fa3b59bb5faded209732d1befe2f8a1a4a", "keyword": "StatusBar KXmlGuiWindow::StatusBar KXmlGuiWindow", "text": "adds action to show/hide the statusbar if the statusbar exists createStandardStatusBarAction"}, {"type": "enumvalue", "name": "KXmlGuiWindow::Save", "url": "classKXmlGuiWindow.html#a938a747d4c9aad833848dee2e0b3121fa48ad6f0768126f836d1ad2ff22212fbb", "keyword": "Save KXmlGuiWindow::Save KXmlGuiWindow", "text": "auto-saves and loads the toolbar/menubar/statusbar settings and window size using the default name setAutoSaveSettings Typically you want to let the default window size be determined by the widgets size hints Make sure that setupGUI() is called after all the widgets are created including setCentralWidget so the default size s will be correct setAutoSaveSettings for more information on this topic"}, {"type": "enumvalue", "name": "KXmlGuiWindow::Create", "url": "classKXmlGuiWindow.html#a938a747d4c9aad833848dee2e0b3121fab21e394f15c27dba750c4e5e88427184", "keyword": "Create KXmlGuiWindow::Create KXmlGuiWindow", "text": "calls createGUI() once ToolBar Keys and Statusbar have been taken care of createGUI NOTE when using KParts::MainWindow remove this flag from the setupGUI call since you ll be using createGUI(part) instead"}, {"type": "enumvalue", "name": "KXmlGuiWindow::Default", "url": "classKXmlGuiWindow.html#a938a747d4c9aad833848dee2e0b3121faac7a2b05b0ab84b5ebee7dca57ec6fb7", "keyword": "Default KXmlGuiWindow::Default KXmlGuiWindow", "text": "All the above option this is the default"}, {"type": "slot", "name": "KXmlGuiWindow::configureToolbars", "url": "classKXmlGuiWindow.html#aafe4f734c7258c0780fd7b906047daac", "keyword": "configureToolbars KXmlGuiWindow::configureToolbars KXmlGuiWindow", "text": "This slot can be connected directly to the action to configure toolbar This is very simple to do that by adding a single line"}, {"type": "slot", "name": "KXmlGuiWindow::slotStateChanged", "url": "classKXmlGuiWindow.html#a9def1acee2fbd4de7f09554dd9ff8c5d", "keyword": "slotStateChanged KXmlGuiWindow::slotStateChanged KXmlGuiWindow", "text": "Enable and disable actions as defined in the XML rc file"}, {"type": "slot", "name": "KXmlGuiWindow::slotStateChanged", "url": "classKXmlGuiWindow.html#a95feb8c1b3663d3681aaab0794167780", "keyword": "slotStateChanged KXmlGuiWindow::slotStateChanged KXmlGuiWindow", "text": "Enable and disable actions as defined in the XML rc file can the state disable the actions which should be enabled and vice-versa if specified"}, {"type": "function", "name": "KXmlGuiWindow::KXmlGuiWindow", "url": "classKXmlGuiWindow.html#a9b1fdbcf1d3e9475ae5a7abb10885faf", "keyword": "KXmlGuiWindow KXmlGuiWindow::KXmlGuiWindow KXmlGuiWindow", "text": "parent The widget parent This is usually 0 but it may also be the window group leader In that case the KMainWindow becomes sort of a secondary window f Specify the widget flags The default is Qt::Window and Qt::WA_DeleteOnClose Qt::Window indicates that a main window is a toplevel window regardless of whether it has a parent or not Qt::WA_DeleteOnClose indicates that a main window is automatically destroyed when its window is closed Pass 0 if you do not want this behavior KMainWindows must be created on the heap with new like IMPORTANT For session management and window management to work properly all main windows in the application should have a different name If you don t do it KMainWindow will create a unique name but it s recommended to explicitly pass a window name that will also describe the type of the window If there can be several windows of the same type append hash to the name and KMainWindow will replace it with numbers to make the names unique For example for a mail client which has one main window showing the mails and folders and which can also have one or more windows for composing mails the name for the folders window should be e.g and for the composer windows"}, {"type": "function", "name": "KXmlGuiWindow::~KXmlGuiWindow", "url": "classKXmlGuiWindow.html#a5bd048071803a94cc1646b4851360f63", "keyword": "KXmlGuiWindow::~KXmlGuiWindow KXmlGuiWindow", "text": "Will also destroy the toolbars and menubar if needed"}, {"type": "function", "name": "KXmlGuiWindow::applyMainWindowSettings", "url": "classKXmlGuiWindow.html#a7e14a356c84df6992c201a017e2bb62b", "keyword": "applyMainWindowSettings KXmlGuiWindow::applyMainWindowSettings KXmlGuiWindow", "text": "config Config group to read the settings from KF5 porting note the unused bool argument was removed make sure to remove it from your reimplementations too! And add a Q_DECL_OVERRIDE for good measure"}, {"type": "function", "name": "KXmlGuiWindow::createGUI", "url": "classKXmlGuiWindow.html#a0b526ffaaca18d6662eb70b820155c1a", "keyword": "createGUI KXmlGuiWindow::createGUI KXmlGuiWindow", "text": "In a regular app you usually want to use setupGUI() instead of this one since it does more things for free like setting up the toolbar/shortcut edit actions etc If xmlfile is NULL then it will try to construct a local XML filename like appnameui.rc where appname is your app s name If that file does not exist then the XML UI code will only use the global standard XML file for the layout purposes xmlfile The local xmlfile relative or absolute"}, {"type": "function", "name": "KXmlGuiWindow::createStandardStatusBarAction", "url": "classKXmlGuiWindow.html#a3d7371171cafabe30cb3bb7355fdfed1", "keyword": "createStandardStatusBarAction KXmlGuiWindow::createStandardStatusBarAction KXmlGuiWindow", "text": "The menu menu item is implemented using xmlgui It will be inserted in your menu structure in the Settings menu Note that you should enable this feature before calling createGUI() or similar If an application maintains the action on its own i.e never calls this function a connection needs to be made to let KMainWindow know when that status hidden/shown of the statusbar has changed For example connect action SIGNAL(activated()) kmainwindow SLOT(setSettingsDirty()) Otherwise the status hidden/show of the statusbar might not be saved by KMainWindow"}, {"type": "function", "name": "KXmlGuiWindow::finalizeGUI", "url": "classKXmlGuiWindow.html#ad46c5ce2490835b81234bb8d0590bc7a", "keyword": "finalizeGUI KXmlGuiWindow::finalizeGUI KXmlGuiWindow", "text": ""}, {"type": "function", "name": "KXmlGuiWindow::isHelpMenuEnabled", "url": "classKXmlGuiWindow.html#aec46debe81b9a68be49ffdf815f95ef0", "keyword": "isHelpMenuEnabled KXmlGuiWindow::isHelpMenuEnabled KXmlGuiWindow", "text": ""}, {"type": "function", "name": "KXmlGuiWindow::setHelpMenuEnabled", "url": "classKXmlGuiWindow.html#abbe01cc33b7f4c9a86d3b789e5be295b", "keyword": "setHelpMenuEnabled KXmlGuiWindow::setHelpMenuEnabled KXmlGuiWindow", "text": "The default behavior is to build one you must call this function to disable it"}, {"type": "function", "name": "KXmlGuiWindow::setStandardToolBarMenuEnabled", "url": "classKXmlGuiWindow.html#a70c29bc42aa086a0557fc3c3ed0353f1", "keyword": "setStandardToolBarMenuEnabled KXmlGuiWindow::setStandardToolBarMenuEnabled KXmlGuiWindow", "text": "In case there is only one toolbar configured a simple Show toolbar name here menu item is shown The menu menu item is implemented using xmlgui It will be inserted in your menu structure in the Settings menu If your application uses a non-standard xmlgui resource file then you can specify the exact position of the menu menu item by adding a Merge name line to the settings menu section of your resource file usually appname.rc Note that you should enable this feature before calling createGUI() or similar"}, {"type": "function", "name": "KXmlGuiWindow::setupGUI", "url": "classKXmlGuiWindow.html#af532cb013c5e80c68ece02bd1c14269d", "keyword": "setupGUI KXmlGuiWindow::setupGUI KXmlGuiWindow", "text": "The options are all enabled by default but can be turned off if desired through the params or if the prereqs don t exists Typically this function replaces createGUI() StandardWindowOptions Since this method will restore the state of the application toolbar dockwindows positions you need to have added all your actions to your toolbars etc before calling to this method This note is only applicable if you are using the Default or Save flag If you are calling createGUI yourself remember to remove the Create flag from the options parameter"}, {"type": "function", "name": "KXmlGuiWindow::setupGUI", "url": "classKXmlGuiWindow.html#ae5ac6ec22a61a4d854600c0f5a41e8d4", "keyword": "setupGUI KXmlGuiWindow::setupGUI KXmlGuiWindow", "text": "The options are all enabled by default but can be turned off if desired through the params or if the prereqs don t exists defaultSize The default size of the window Typically this function replaces createGUI() StandardWindowOptions Since this method will restore the state of the application toolbar dockwindows positions you need to have added all your actions to your toolbars etc before calling to this method This note is only applicable if you are using the Default or Save flag If you are calling createGUI yourself remember to remove the Create flag from the options parameter Also call setupGUI always after you call createGUI"}, {"type": "function", "name": "KXmlGuiWindow::setupToolbarMenuActions", "url": "classKXmlGuiWindow.html#a98212c507867538f3f6bd8894d0ec721", "keyword": "setupToolbarMenuActions KXmlGuiWindow::setupToolbarMenuActions KXmlGuiWindow", "text": "for KToolBar"}, {"type": "function", "name": "KXmlGuiWindow::toolBarMenuAction", "url": "classKXmlGuiWindow.html#a36a2ed6b17b34239305130d04729e0fc", "keyword": "toolBarMenuAction KXmlGuiWindow::toolBarMenuAction KXmlGuiWindow", "text": ""}, {"type": "slot", "name": "KXmlGuiWindow::saveNewToolbarConfig", "url": "classKXmlGuiWindow.html#ad108ac96374f7938a02d70b0d6b3193e", "keyword": "saveNewToolbarConfig KXmlGuiWindow::saveNewToolbarConfig KXmlGuiWindow", "text": "configureToolbars()"}, {"type": "function", "name": "KXmlGuiWindow::event", "url": "classKXmlGuiWindow.html#ac8f836df811d05f40fd2f430916106a9", "keyword": "event KXmlGuiWindow::event KXmlGuiWindow", "text": "Also reimplemented to catch when a QDockWidget is added or removed"}, {"type": "namespace", "name": "KUndoActions", "url": "namespaceKUndoActions.html", "keyword": "KUndoActions", "text": "See QUndoStack for more information 5.0"}, {"type": "function", "name": "KUndoActions::createRedoAction", "url": "namespaceKUndoActions.html#a68c083617077492222eb693bb6c9e1f6", "keyword": "createRedoAction KUndoActions::createRedoAction KUndoActions", "text": "undoStack the QUndoStack the action triggers the redo on actionCollection the KActionCollection that should be the parent of the action actionName the created action s object name empty string will set it to the KDE default the created action"}, {"type": "function", "name": "KUndoActions::createUndoAction", "url": "namespaceKUndoActions.html#aaf487e78b5adab5d8a2e289428439af2", "keyword": "createUndoAction KUndoActions::createUndoAction KUndoActions", "text": "undoStack the QUndoStack the action triggers the undo on actionCollection the KActionCollection that should be the parent of the action actionName the created action s object name empty string will set it to the KDE default the created action"}, {"type": "page", "name": "index", "url": "index.html", "keyword": null, "text": "KXMLGUI Framework for managing menu and toolbar actions Introduction KXMLGUI provides a framework for managing menu and toolbar actions in an abstract way The actions are configured through a XML description and hooks in the application code The framework supports merging of multiple description for example for integrating actions from plugins Kiosk KXMLGui makes use of the Kiosk authorization functionality of KConfig see the KAuthorized namespace in that framework Notably QAction instances added to a KActionCollection are disabled if KAuthorized::authorizeAction() reports that they are not authorized The items on the standard help menu KHelpMenu can likewise be disabled based on Kiosk settings and toolbar editing can be restricted See KActionCollection KHelpMenu and KToolBar documentation for more information"}]}