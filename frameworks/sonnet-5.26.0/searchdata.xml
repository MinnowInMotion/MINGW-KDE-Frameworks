<?xml version="1.0" encoding="UTF-8"?>
<add>
  <doc>
    <field name="type">source</field>
    <field name="name">aspell_debug.cpp</field>
    <field name="url">aspell__debug_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_LOGGING_CATEGORY SONNET_LOG_ASPELL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">aspell_debug.h</field>
    <field name="url">aspell__debug_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_DECLARE_LOGGING_CATEGORY SONNET_LOG_ASPELL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">aspellclient.cpp</field>
    <field name="url">aspellclient_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet QString aspell_data_dir QLatin1String CMAKE_INSTALL_PREFIX ASPELL_DATA_ROOT ASpellClient::ASpellClient QObject parent Client parent m_config new_aspell_config aspell_config_replace m_config aspell_data_dir toLocal8Bit data aspell_config_replace m_config aspell_data_dir toLocal8Bit data ASpellClient::~ASpellClient delete_aspell_config m_config SpellerPlugin ASpellClient::createSpeller QString language ASpellDict ad ASpellDict language ad QStringList ASpellClient::languages AspellDictInfoList l get_aspell_dict_info_list m_config AspellDictInfoEnumeration el aspell_dict_info_list_elements l QStringList langs AspellDictInfo di di aspell_dict_info_enumeration_next el langs append QString::fromLatin1 di name delete_aspell_dict_info_enumeration el langs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">aspellclient.h</field>
    <field name="url">aspellclient_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet SpellerPlugin Sonnet::SpellerPlugin ASpellClient Sonnet::Client Q_OBJECT Q_INTERFACES Sonnet::Client Q_PLUGIN_METADATA IID ASpellClient QObject parent ASpellClient reliability SpellerPlugin createSpeller QString language QStringList languages QString name QStringLiteral AspellConfig m_config</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">aspelldict.cpp</field>
    <field name="url">aspelldict_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet ASpellDict::ASpellDict QString lang SpellerPlugin lang m_speller m_config new_aspell_config aspell_config_replace m_config lang toLatin1 constData aspell_config_replace m_config QString aspell_data_dir aspell_config_replace m_config aspell_data_dir toLocal8Bit data aspell_config_replace m_config aspell_data_dir toLocal8Bit data AspellCanHaveError possible_err new_aspell_speller m_config aspell_error_number possible_err qCWarning SONNET_LOG_ASPELL aspell_error_message possible_err m_speller to_aspell_speller possible_err ASpellDict::~ASpellDict delete_aspell_speller m_speller delete_aspell_config m_config ASpellDict::isCorrect QString word m_speller correct aspell_speller_check m_speller word toUtf8 constData word toUtf8 length correct QStringList ASpellDict::suggest QString word m_speller QStringList QTextCodec codec QTextCodec::codecForName AspellWordList suggestions aspell_speller_suggest m_speller word toUtf8 constData word toUtf8 length AspellStringEnumeration elements aspell_word_list_elements suggestions QStringList qsug cword cword aspell_string_enumeration_next elements qsug append codec toUnicode cword delete_aspell_string_enumeration elements qsug ASpellDict::storeReplacement QString bad QString good m_speller aspell_speller_store_replacement m_speller bad toUtf8 constData bad toUtf8 length good toUtf8 constData good toUtf8 length ASpellDict::addToPersonal QString word m_speller qCDebug SONNET_LOG_ASPELL word aspell_speller_add_to_personal m_speller word toUtf8 constData word toUtf8 length aspell_speller_save_all_word_lists m_speller ASpellDict::addToSession QString word m_speller aspell_speller_add_to_session m_speller word toUtf8 constData word toUtf8 length</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">aspelldict.h</field>
    <field name="url">aspelldict_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">aspelldict.h</field>
    <field name="url">aspelldict_8h_source.html#l00028</field>
    <field name="keywords"></field>
    <field name="text">ASpellDict Sonnet::SpellerPlugin ASpellDict QString lang ASpellDict isCorrect QString word QStringList suggest QString word storeReplacement QString bad QString good addToPersonal QString word addToSession QString word AspellConfig m_config AspellSpeller m_speller</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">backgroundchecker.cpp</field>
    <field name="url">backgroundchecker_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet BackgroundCheckerPrivate::start sentenceOffset continueChecking BackgroundCheckerPrivate::continueChecking metaObject invokeMethod Qt::QueuedConnection BackgroundCheckerPrivate::checkNext sentenceOffset words hasNext QStringRef word words next words isSpellcheckable currentDict isMisspelled word toString lastMisspelled word emit misspelling word toString word position sentenceOffset sentenceOffset mainTokenizer hasNext QStringRef sentence mainTokenizer next currentDict testAttribute Speller::AutoDetectLanguage mainTokenizer isSpellcheckable currentDict setLanguage mainTokenizer language sentenceOffset sentence position words setBuffer sentence toString words setIgnoreUppercase currentDict testAttribute Speller::CheckUppercase sentenceOffset emit done BackgroundChecker::BackgroundChecker QObject parent QObject parent d new BackgroundCheckerPrivate connect d SIGNAL misspelling QString SIGNAL misspelling QString connect d SIGNAL done SLOT slotEngineDone BackgroundChecker::BackgroundChecker Speller speller QObject parent QObject parent d new BackgroundCheckerPrivate d currentDict speller connect d BackgroundCheckerPrivate::misspelling BackgroundChecker::misspelling connect d BackgroundCheckerPrivate::done BackgroundChecker::slotEngineDone BackgroundChecker::~BackgroundChecker d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">backgroundchecker.cpp</field>
    <field name="url">backgroundchecker_8cpp_source.html#l00101</field>
    <field name="keywords"></field>
    <field name="text">BackgroundChecker::setText QString text d mainTokenizer setBuffer text d start BackgroundChecker::start d mainTokenizer setBuffer fetchMoreText d start BackgroundChecker::stop</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">backgroundchecker.cpp</field>
    <field name="url">backgroundchecker_8cpp_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">QString BackgroundChecker::fetchMoreText QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">backgroundchecker.cpp</field>
    <field name="url">backgroundchecker_8cpp_source.html#l00126</field>
    <field name="keywords"></field>
    <field name="text">BackgroundChecker::finishedCurrentFeed BackgroundChecker::setSpeller Speller speller d currentDict speller Speller BackgroundChecker::speller d currentDict BackgroundChecker::checkWord QString word d currentDict isCorrect word BackgroundChecker::addWordToPersonal QString word d currentDict addToPersonal word QStringList BackgroundChecker::suggest QString word d currentDict suggest word BackgroundChecker::changeLanguage QString lang d currentDict setLanguage lang</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">backgroundchecker.cpp</field>
    <field name="url">backgroundchecker_8cpp_source.html#l00161</field>
    <field name="keywords"></field>
    <field name="text">BackgroundChecker::continueChecking d continueChecking BackgroundChecker::slotEngineDone finishedCurrentFeed QString currentText fetchMoreText currentText isNull emit done d mainTokenizer setBuffer currentText d start QString BackgroundChecker::text d mainTokenizer buffer QString BackgroundChecker::currentContext len currentPosition d lastMisspelled position d sentenceOffset begin currentPosition len true QString buffer d mainTokenizer buffer buffer buffer replace currentPosition d lastMisspelled length QStringLiteral arg d lastMisspelled toString QString context begin context QStringLiteral arg buffer mid len context QStringLiteral arg buffer mid currentPosition len context context replace QLatin1Char QLatin1Char context Sonnet::BackgroundChecker::replace start QString oldText QString newText d words replace start d sentenceOffset oldText length newText d mainTokenizer replace start oldText length newText</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">backgroundchecker.h</field>
    <field name="url">backgroundchecker_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">BackgroundCheckerPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">backgroundchecker.h</field>
    <field name="url">backgroundchecker_8h_source.html#l00034</field>
    <field name="keywords"></field>
    <field name="text">Sonnet Speller</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">backgroundchecker.h</field>
    <field name="url">backgroundchecker_8h_source.html#l00055</field>
    <field name="keywords"></field>
    <field name="text">SONNETCORE_EXPORT BackgroundChecker QObject Q_OBJECT BackgroundChecker QObject parent BackgroundChecker Speller speller QObject parent BackgroundChecker setText QString text QString text QString currentContext Speller speller setSpeller Speller speller checkWord QString word QStringList suggest QString word addWordToPersonal QString word Q_SLOTS start stop replace start QString oldText QString newText changeLanguage QString lang continueChecking Q_SIGNALS misspelling QString word start done QString fetchMoreText finishedCurrentFeed Q_SLOTS slotEngineDone BackgroundCheckerPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">client.cpp</field>
    <field name="url">client_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet Client::Client QObject parent QObject parent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">configdialog.cpp</field>
    <field name="url">configdialog_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet ConfigDialogPrivate ConfigDialogPrivate ConfigDialog parent q parent ConfigWidget ui ConfigDialog q slotConfigChanged ConfigDialogPrivate::slotConfigChanged emit q languageChanged ui language ConfigDialog::ConfigDialog QWidget parent QDialog parent d new ConfigDialogPrivate this setObjectName QStringLiteral setModal setWindowTitle tr QVBoxLayout layout QVBoxLayout setLayout layout d ui ConfigWidget layout addWidget d ui QDialogButtonBox buttonBox QDialogButtonBox buttonBox setStandardButtons QDialogButtonBox::Ok QDialogButtonBox::Cancel layout addWidget buttonBox connect buttonBox SIGNAL accepted SLOT slotOk connect buttonBox SIGNAL rejected SLOT reject connect d ui SIGNAL configChanged SLOT slotConfigChanged connect d ui SIGNAL configChanged SIGNAL configChanged ConfigDialog::~ConfigDialog d ConfigDialog::slotOk d ui save accept ConfigDialog::slotApply d ui save</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">configdialog.cpp</field>
    <field name="url">configdialog_8cpp_source.html#l00094</field>
    <field name="keywords"></field>
    <field name="text">ConfigDialog::setLanguage QString language d ui setLanguage language</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">configdialog.cpp</field>
    <field name="url">configdialog_8cpp_source.html#l00099</field>
    <field name="keywords"></field>
    <field name="text">QString ConfigDialog::language d ui language</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">configdialog.h</field>
    <field name="url">configdialog_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">ConfigDialogPrivate Sonnet</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">configdialog.h</field>
    <field name="url">configdialog_8h_source.html#l00031</field>
    <field name="keywords"></field>
    <field name="text">SONNETUI_EXPORT ConfigDialog QDialog Q_OBJECT ConfigDialog QWidget parent ConfigDialog setLanguage QString language QString language Q_SLOTS slotOk slotApply Q_SIGNALS languageChanged QString language configChanged ConfigDialogPrivate d Q_DISABLE_COPY ConfigDialog Q_PRIVATE_SLOT d slotConfigChanged</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">configwidget.cpp</field>
    <field name="url">configwidget_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet ConfigWidgetPrivate Loader loader Ui_SonnetConfigUI ui QWidget wdg ConfigWidget::ConfigWidget QWidget parent QWidget parent d new ConfigWidgetPrivate d loader Loader::openLoader QVBoxLayout layout QVBoxLayout layout setMargin layout setObjectName QStringLiteral d wdg QWidget d ui setupUi d wdg d ui m_langCombo setCurrentByDictionary d loader settings defaultLanguage d ui m_skipUpperCB setChecked d loader settings checkUppercase d ui m_skipRunTogetherCB setChecked d loader settings skipRunTogether d ui m_checkerEnabledByDefaultCB setChecked d loader settings checkerEnabledByDefault d ui m_autodetectCB setChecked d loader settings autodetectLanguage QStringList ignoreList d loader settings currentIgnoreList ignoreList sort d ui ignoreListWidget addItems ignoreList d ui m_bgSpellCB setChecked d loader settings backgroundCheckerEnabled d ui m_bgSpellCB hide connect d ui addButton QAbstractButton::clicked ConfigWidget::slotIgnoreWordAdded connect d ui removeButton QAbstractButton::clicked ConfigWidget::slotIgnoreWordRemoved layout addWidget d wdg connect d ui m_langCombo DictionaryComboBox::dictionaryChanged ConfigWidget::configChanged connect d ui m_bgSpellCB QAbstractButton::clicked ConfigWidget::configChanged connect d ui m_skipUpperCB QAbstractButton::clicked ConfigWidget::configChanged connect d ui m_skipRunTogetherCB QAbstractButton::clicked ConfigWidget::configChanged connect d ui m_checkerEnabledByDefaultCB QAbstractButton::clicked ConfigWidget::configChanged connect d ui m_autodetectCB QAbstractButton::clicked ConfigWidget::configChanged d ui nobackendfound setVisible d loader clients isEmpty ConfigWidget::~ConfigWidget d ConfigWidget::save setFromGui ConfigWidget::setFromGui Settings settings d loader settings d ui m_langCombo count settings setDefaultLanguage d ui m_langCombo currentDictionary settings setCheckUppercase d ui m_skipUpperCB isChecked settings setSkipRunTogether d ui m_skipRunTogetherCB isChecked settings setBackgroundCheckerEnabled d ui m_bgSpellCB isChecked settings setCheckerEnabledByDefault d ui m_checkerEnabledByDefaultCB isChecked settings setAutodetectLanguage d ui m_autodetectCB isChecked settings modified settings save ConfigWidget::slotIgnoreWordAdded QStringList ignoreList d loader settings currentIgnoreList QString newWord d ui newIgnoreEdit text d ui newIgnoreEdit clear newWord isEmpty ignoreList contains newWord ignoreList append newWord d loader settings setCurrentIgnoreList ignoreList d ui ignoreListWidget clear d ui ignoreListWidget addItems ignoreList emit configChanged ConfigWidget::slotIgnoreWordRemoved QStringList ignoreList d loader settings currentIgnoreList QList&lt;QListWidgetItem *&gt; selectedItems d ui ignoreListWidget selectedItems Q_FOREACH QListWidgetItem item selectedItems ignoreList removeAll item text d loader settings setCurrentIgnoreList ignoreList d ui ignoreListWidget clear d ui ignoreListWidget addItems ignoreList emit configChanged ConfigWidget::setBackgroundCheckingButtonShown b d ui m_bgSpellCB setVisible b ConfigWidget::backgroundCheckingButtonShown d ui m_bgSpellCB isHidden ConfigWidget::slotDefault d ui m_autodetectCB setChecked d ui m_skipUpperCB setChecked d ui m_skipRunTogetherCB setChecked d ui m_checkerEnabledByDefaultCB setChecked d ui m_bgSpellCB setChecked d ui ignoreListWidget clear d ui m_langCombo setCurrentByDictionary d loader settings defaultLanguage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">configwidget.cpp</field>
    <field name="url">configwidget_8cpp_source.html#l00158</field>
    <field name="keywords"></field>
    <field name="text">ConfigWidget::setLanguage QString language d ui m_langCombo setCurrentByDictionary language</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">configwidget.cpp</field>
    <field name="url">configwidget_8cpp_source.html#l00163</field>
    <field name="keywords"></field>
    <field name="text">QString ConfigWidget::language d ui m_langCombo count d ui m_langCombo currentDictionary QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">configwidget.h</field>
    <field name="url">configwidget_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">ConfigWidgetPrivate Sonnet</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">configwidget.h</field>
    <field name="url">configwidget_8h_source.html#l00030</field>
    <field name="keywords"></field>
    <field name="text">SONNETUI_EXPORT ConfigWidget QWidget Q_OBJECT ConfigWidget QWidget parent ConfigWidget backgroundCheckingButtonShown setLanguage QString language QString language Q_SLOTS save setBackgroundCheckingButtonShown slotDefault Q_SLOTS slotIgnoreWordRemoved slotIgnoreWordAdded Q_SIGNALS configChanged setFromGui ConfigWidgetPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">core_debug.cpp</field>
    <field name="url">core__debug_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_LOGGING_CATEGORY SONNET_LOG_CORE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">core_debug.h</field>
    <field name="url">core__debug_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_DECLARE_LOGGING_CATEGORY SONNET_LOG_CORE</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dialog.cpp</field>
    <field name="url">dialog_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet ReadOnlyStringListModel QStringListModel ReadOnlyStringListModel QObject parent QStringListModel parent Qt::ItemFlags flags QModelIndex index Q_DECL_OVERRIDE Q_UNUSED index Qt::ItemIsEnabled Qt::ItemIsSelectable DialogPrivate Ui_SonnetUi ui ReadOnlyStringListModel suggestionsModel QWidget wdg QDialogButtonBox buttonBox QProgressDialog progressDialog QString originalBuffer BackgroundChecker checker QString currentWord currentPosition QMap&lt;QString, QString&gt; replaceAllMap restart QMap&lt;QString, QString&gt; dictsMap progressDialogTimeout showCompletionMessageBox spellCheckContinuedAfterReplacement canceled deleteProgressDialog directly progressDialog progressDialog hide directly progressDialog progressDialog deleteLater progressDialog NULL Dialog::Dialog BackgroundChecker checker QWidget parent QDialog parent d new DialogPrivate setModal setWindowTitle tr d checker checker d canceled d showCompletionMessageBox d spellCheckContinuedAfterReplacement d progressDialogTimeout d progressDialog NULL initGui initConnections Dialog::~Dialog d Dialog::initConnections connect d ui m_addBtn SIGNAL clicked SLOT slotAddWord connect d ui m_replaceBtn SIGNAL clicked SLOT slotReplaceWord connect d ui m_replaceAllBtn SIGNAL clicked SLOT slotReplaceAll connect d ui m_skipBtn SIGNAL clicked SLOT slotSkip connect d ui m_skipAllBtn SIGNAL clicked SLOT slotSkipAll connect d ui m_suggestBtn SIGNAL clicked SLOT slotSuggest connect d ui m_language SIGNAL activated QString SLOT slotChangeLanguage QString connect d ui m_suggestions SIGNAL clicked QModelIndex SLOT slotSelectionChanged QModelIndex connect d checker SIGNAL misspelling QString SLOT slotMisspelling QString connect d checker SIGNAL done SLOT slotDone connect d ui m_suggestions SIGNAL doubleClicked QModelIndex SLOT slotReplaceWord connect d buttonBox SIGNAL accepted SLOT slotFinished connect d buttonBox SIGNAL rejected SLOT slotCancel connect d ui m_replacement SIGNAL returnPressed SLOT slotReplaceWord connect d ui m_autoCorrect SIGNAL clicked SLOT slotAutocorrect d ui m_autoCorrect hide Dialog::initGui QVBoxLayout layout QVBoxLayout setLayout layout d wdg QWidget d ui setupUi d wdg layout addWidget d wdg setGuiEnabled d buttonBox QDialogButtonBox d buttonBox setStandardButtons QDialogButtonBox::Ok QDialogButtonBox::Cancel layout addWidget d wdg layout addWidget d buttonBox fillDictionaryComboBox d restart d suggestionsModel ReadOnlyStringListModel d ui m_suggestions setModel d suggestionsModel Dialog::activeAutoCorrect _active _active d ui m_autoCorrect show d ui m_autoCorrect hide</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dialog.cpp</field>
    <field name="url">dialog_8cpp_source.html#l00186</field>
    <field name="keywords"></field>
    <field name="text">Dialog::showProgressDialog timeout d progressDialogTimeout timeout</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dialog.cpp</field>
    <field name="url">dialog_8cpp_source.html#l00191</field>
    <field name="keywords"></field>
    <field name="text">Dialog::showSpellCheckCompletionMessage b d showCompletionMessageBox b</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dialog.cpp</field>
    <field name="url">dialog_8cpp_source.html#l00196</field>
    <field name="keywords"></field>
    <field name="text">Dialog::setSpellCheckContinuedAfterReplacement b d spellCheckContinuedAfterReplacement b Dialog::slotAutocorrect setGuiEnabled setProgressDialogVisible emit autoCorrect d currentWord d ui m_replacement text slotReplaceWord Dialog::setGuiEnabled b d wdg setEnabled b Dialog::setProgressDialogVisible b b d deleteProgressDialog d progressDialogTimeout d progressDialog d progressDialog QProgressDialog d progressDialog setLabelText tr d progressDialog setWindowTitle tr d progressDialog setModal d progressDialog setAutoClose d progressDialog setAutoReset d progressDialog reset d progressDialog setRange d progressDialog setValue connect d progressDialog SIGNAL canceled SLOT slotCancel d progressDialog setMinimumDuration d progressDialogTimeout Dialog::slotFinished setProgressDialogVisible emit stop emit done d checker text emit spellCheckStatus tr accept Dialog::slotCancel d canceled d deleteProgressDialog emit cancel emit spellCheckStatus tr reject QString Dialog::originalBuffer d originalBuffer QString Dialog::buffer d checker text Dialog::setBuffer QString buf d originalBuffer buf d restart Dialog::fillDictionaryComboBox Speller speller d checker speller d dictsMap speller availableDictionaries QStringList langs d dictsMap keys d ui m_language clear d ui m_language addItems langs updateDictionaryComboBox Dialog::updateDictionaryComboBox Speller speller d checker speller d ui m_language setCurrentIndex d dictsMap values indexOf speller language Dialog::updateDialog QString word d ui m_unknownWord setText word d ui m_contextLabel setText d checker currentContext QStringList suggs d checker suggest word suggs isEmpty d ui m_replacement clear d ui m_replacement setText suggs first fillSuggestions suggs Dialog::show d canceled fillDictionaryComboBox d originalBuffer isEmpty d checker start d checker setText d originalBuffer setProgressDialogVisible Dialog::slotAddWord setGuiEnabled setProgressDialogVisible d checker addWordToPersonal d currentWord d checker continueChecking Dialog::slotReplaceWord setGuiEnabled setProgressDialogVisible QString replacementText d ui m_replacement text emit replace d currentWord d currentPosition replacementText d spellCheckContinuedAfterReplacement d checker replace d currentPosition d currentWord replacementText d checker continueChecking d checker stop Dialog::slotReplaceAll setGuiEnabled setProgressDialogVisible d replaceAllMap insert d currentWord d ui m_replacement text slotReplaceWord Dialog::slotSkip setGuiEnabled setProgressDialogVisible d checker continueChecking Dialog::slotSkipAll setGuiEnabled setProgressDialogVisible Speller speller d checker speller speller addToPersonal d currentWord d checker setSpeller speller d checker continueChecking Dialog::slotSuggest QStringList suggs d checker suggest d ui m_replacement text fillSuggestions suggs Dialog::slotChangeLanguage QString lang Speller speller d checker speller QString languageCode d dictsMap lang languageCode isEmpty d checker changeLanguage languageCode slotSuggest emit languageChanged languageCode Dialog::slotSelectionChanged QModelIndex item d ui m_replacement setText item data toString Dialog::fillSuggestions QStringList suggs d suggestionsModel setStringList suggs Dialog::slotMisspelling QString word start setGuiEnabled setProgressDialogVisible emit misspelling word start updatesEnabled d currentWord word d currentPosition start d replaceAllMap contains word d ui m_replacement setText d replaceAllMap word slotReplaceWord updateDialog word QDialog::show Dialog::slotDone d restart emit done d checker text d restart updateDictionaryComboBox d checker setText d originalBuffer d restart setProgressDialogVisible emit spellCheckStatus tr accept d canceled d showCompletionMessageBox QMessageBox::information tr tr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dialog.h</field>
    <field name="url">dialog_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QListWidgetItem QModelIndex Sonnet BackgroundChecker DialogPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dialog.h</field>
    <field name="url">dialog_8h_source.html#l00050</field>
    <field name="keywords"></field>
    <field name="text">SONNETUI_EXPORT Dialog QDialog Q_OBJECT Dialog BackgroundChecker checker QWidget parent Dialog QString originalBuffer QString buffer show activeAutoCorrect _active QDialog::done showProgressDialog timeout showSpellCheckCompletionMessage b setSpellCheckContinuedAfterReplacement b Q_SLOTS setBuffer QString Q_SIGNALS done QString newBuffer misspelling QString word start replace QString oldWord start QString newWord stop cancel autoCorrect QString currentWord QString replaceWord spellCheckStatus QString languageChanged QString language Q_SLOTS slotMisspelling QString word start slotDone slotFinished slotCancel slotAddWord slotReplaceWord slotReplaceAll slotSkip slotSkipAll slotSuggest slotChangeLanguage QString slotSelectionChanged QModelIndex slotAutocorrect setGuiEnabled b setProgressDialogVisible b updateDialog QString word fillDictionaryComboBox updateDictionaryComboBox fillSuggestions QStringList suggs initConnections initGui continueChecking DialogPrivate d Q_DISABLE_COPY Dialog</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dictionarycombobox.cpp</field>
    <field name="url">dictionarycombobox_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet DictionaryComboBoxPrivate DictionaryComboBoxPrivate DictionaryComboBox combo q combo DictionaryComboBox q slotDictionaryChanged idx DictionaryComboBoxPrivate::slotDictionaryChanged idx emit q dictionaryChanged q itemData idx toString emit q dictionaryNameChanged q itemText idx DictionaryComboBox::DictionaryComboBox QWidget parent QComboBox parent d new DictionaryComboBoxPrivate this reloadCombo connect SIGNAL activated SLOT slotDictionaryChanged DictionaryComboBox::~DictionaryComboBox d QString DictionaryComboBox::currentDictionaryName currentText QString DictionaryComboBox::currentDictionary itemData currentIndex toString DictionaryComboBox::setCurrentByDictionaryName QString name name isEmpty name currentText idx findText name idx qCDebug SONNET_LOG_UI name setCurrentIndex idx d slotDictionaryChanged idx DictionaryComboBox::setCurrentByDictionary QString dictionary dictionary isEmpty dictionary itemData currentIndex toString idx findData dictionary idx qCDebug SONNET_LOG_UI dictionary setCurrentIndex idx d slotDictionaryChanged idx DictionaryComboBox::reloadCombo clear Sonnet::Speller speller Sonnet::Speller QMap&lt;QString, QString&gt; dictionaries speller availableDictionaries QMapIterator&lt;QString, QString&gt; i dictionaries i hasNext i next addItem i key i value speller</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dictionarycombobox.h</field>
    <field name="url">dictionarycombobox_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet DictionaryComboBoxPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dictionarycombobox.h</field>
    <field name="url">dictionarycombobox_8h_source.html#l00038</field>
    <field name="keywords"></field>
    <field name="text">SONNETUI_EXPORT DictionaryComboBox QComboBox Q_OBJECT DictionaryComboBox QWidget parent DictionaryComboBox reloadCombo QString currentDictionaryName QString currentDictionary setCurrentByDictionaryName QString dictionaryName setCurrentByDictionary QString dictionary Q_SIGNALS dictionaryChanged QString dictionary dictionaryNameChanged QString dictionaryName DictionaryComboBoxPrivate d Q_PRIVATE_SLOT d slotDictionaryChanged</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">enchantclient.cpp</field>
    <field name="url">enchantclient_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet enchantDictDescribeFn lang_tag provider_name provider_desc provider_file user_data QSpellEnchantClient client QSpellEnchantClient user_data Q_UNUSED provider_name Q_UNUSED provider_desc Q_UNUSED provider_file client addLanguage QString::fromLatin1 lang_tag QSpellEnchantClient::QSpellEnchantClient QObject parent Client parent m_broker enchant_broker_init enchant_broker_list_dicts m_broker enchantDictDescribeFn QSpellEnchantClient::~QSpellEnchantClient enchant_broker_free m_broker SpellerPlugin QSpellEnchantClient::createSpeller QString language EnchantDict dict enchant_broker_request_dict m_broker language toUtf8 constData dict err enchant_broker_get_error m_broker qDebug language err refs m_dictRefs dict refs m_dictRefs dict refs QSpellEnchantDict m_broker dict language QStringList QSpellEnchantClient::languages m_languages toList QSpellEnchantClient::addLanguage QString lang m_languages insert lang QSpellEnchantClient::removeDictRef EnchantDict dict refs m_dictRefs dict refs m_dictRefs dict refs refs m_dictRefs remove dict enchant_broker_free_dict m_broker dict</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">enchantclient.h</field>
    <field name="url">enchantclient_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet SpellerPlugin Sonnet::SpellerPlugin QSpellEnchantClient Sonnet::Client Q_OBJECT Q_INTERFACES Sonnet::Client Q_PLUGIN_METADATA IID QSpellEnchantClient QObject parent QSpellEnchantClient reliability SpellerPlugin createSpeller QString language QStringList languages QString name QString::fromLatin1 addLanguage QString lang removeDictRef EnchantDict dict EnchantBroker m_broker QSet&lt;QString&gt; m_languages QHash&lt;EnchantDict *, int&gt; m_dictRefs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">enchantdict.cpp</field>
    <field name="url">enchantdict_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet QSpellEnchantDict::QSpellEnchantDict QSpellEnchantClient client EnchantBroker broker EnchantDict dict QString language SpellerPlugin language m_broker broker m_dict dict m_client client qDebug language dict QSpellEnchantDict::~QSpellEnchantDict m_client removeDictRef m_dict QSpellEnchantDict::isCorrect QString word wrong enchant_dict_check m_dict word toUtf8 constData word toUtf8 length wrong QStringList QSpellEnchantDict::suggest QString word QTextCodec codec QTextCodec::codecForName number suggestions enchant_dict_suggest m_dict word toUtf8 constData word toUtf8 length number QStringList qsug i i number i qsug append codec toUnicode suggestions i suggestions number enchant_dict_free_string_list m_dict suggestions qsug QSpellEnchantDict::storeReplacement QString bad QString good enchant_dict_store_replacement m_dict bad toUtf8 constData bad toUtf8 length good toUtf8 constData good toUtf8 length QSpellEnchantDict::addToPersonal QString word qDebug word enchant_dict_add_to_pwl m_dict word toUtf8 constData word toUtf8 length QSpellEnchantDict::addToSession QString word enchant_dict_add_to_session m_dict word toUtf8 constData word toUtf8 length</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">enchantdict.h</field>
    <field name="url">enchantdict_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QSpellEnchantClient QSpellEnchantDict Sonnet::SpellerPlugin QSpellEnchantDict isCorrect QString word QStringList suggest QString word storeReplacement QString bad QString good addToPersonal QString word addToSession QString word QSpellEnchantClient QSpellEnchantDict QSpellEnchantClient client EnchantBroker broker EnchantDict dict QString language EnchantBroker m_broker EnchantDict m_dict QSpellEnchantClient m_client</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">guesslanguage.cpp</field>
    <field name="url">guesslanguage_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet MAXGRAMS GuessLanguagePrivate GuessLanguagePrivate QHash&lt; QString, QHash&lt;QString, int&gt; s_knownModels loadModels QList&lt; QChar::Script &gt; findRuns QString text QList&lt;QString&gt; createOrderedModel QString content distance QList&lt;QString&gt; model QHash&lt;QString,int&gt; knownModel QStringList guessFromTrigrams QString sample QStringList langs QStringList identify QString sample QList&lt; QChar::Script &gt; scripts QString guessFromDictionaries QString sentence QStringList candidates QSet&lt;QString&gt; s_knownDictionaries QMultiHash&lt;QChar::Script, QString&gt; s_scriptLanguages QMap&lt;QString, QString&gt; s_dictionaryNameMap MIN_LENGTH m_maxItems m_minConfidence QHash&lt; QString, QHash&lt;QString,int&gt; GuessLanguagePrivate::s_knownModels QSet&lt;QString&gt; GuessLanguagePrivate::s_knownDictionaries QMultiHash&lt;QChar::Script, QString&gt; GuessLanguagePrivate::s_scriptLanguages QMap&lt;QString, QString&gt; GuessLanguagePrivate::s_dictionaryNameMap QStringList getNames QLocale::Script script QStringList locales QLocale locale QLocale::matchingLocales QLocale::AnyLanguage script QLocale::AnyCountry locales locale name locales GuessLanguagePrivate::GuessLanguagePrivate MIN_LENGTH m_maxItems m_minConfidence s_scriptLanguages isEmpty s_knownDictionaries Loader::openLoader languages toSet QSet&lt;QString&gt; dictionaryLanguages QString dictName s_knownDictionaries QString languageName QLocale dictName name languageName isEmpty qCWarning SONNET_LOG_CORE dictName dictionaryLanguages insert languageName QSet&lt;QString&gt; allLanguages i i int QChar::ScriptCount i QChar::Script script QChar::Script i QStringList names script QChar::Script_Latin names getNames QLocale::LatinScript QChar::Script_Greek names getNames QLocale::GreekScript QChar::Script_Cyrillic names getNames QLocale::CyrillicScript QChar::Script_Armenian names getNames QLocale::ArmenianScript QChar::Script_Hebrew names getNames QLocale::HebrewScript QChar::Script_Arabic names getNames QLocale::ArabicScript QChar::Script_Syriac names getNames QLocale::SyriacScript QChar::Script_Thaana names getNames QLocale::ThaanaScript QChar::Script_Devanagari names getNames QLocale::DevanagariScript QChar::Script_Bengali names getNames QLocale::BengaliScript QChar::Script_Gurmukhi names getNames QLocale::GurmukhiScript QChar::Script_Gujarati names getNames QLocale::GujaratiScript QChar::Script_Oriya names getNames QLocale::OriyaScript QChar::Script_Tamil names getNames QLocale::TamilScript QChar::Script_Telugu names getNames QLocale::TeluguScript QChar::Script_Kannada names getNames QLocale::KannadaScript QChar::Script_Malayalam names getNames QLocale::MalayalamScript QChar::Script_Sinhala names getNames QLocale::SinhalaScript QChar::Script_Thai names getNames QLocale::ThaiScript QChar::Script_Lao names getNames QLocale::LaoScript QChar::Script_Tibetan names getNames QLocale::TibetanScript QChar::Script_Myanmar names getNames QLocale::MyanmarScript QChar::Script_Georgian names getNames QLocale::GeorgianScript QChar::Script_Hangul names getNames QLocale::HangulScript QChar::Script_Ethiopic names getNames QLocale::EthiopicScript QChar::Script_Cherokee names getNames QLocale::CherokeeScript QChar::Script_CanadianAboriginal names getNames QLocale::CanadianAboriginalScript QChar::Script_Ogham names getNames QLocale::OghamScript QChar::Script_Runic names getNames QLocale::RunicScript QChar::Script_Khmer names getNames QLocale::KhmerScript QChar::Script_Mongolian names getNames QLocale::MongolianScript QChar::Script_Hiragana names getNames QLocale::HiraganaScript QChar::Script_Katakana names getNames QLocale::KatakanaScript QChar::Script_Bopomofo names getNames QLocale::BopomofoScript QChar::Script_Han names getNames QLocale::HanScript QChar::Script_Yi names getNames QLocale::YiScript QChar::Script_OldItalic names getNames QLocale::OldItalicScript QChar::Script_Gothic names getNames QLocale::GothicScript QChar::Script_Deseret names getNames QLocale::DeseretScript QChar::Script_Tagalog names getNames QLocale::TagalogScript QChar::Script_Hanunoo names getNames QLocale::HanunooScript QChar::Script_Buhid names getNames QLocale::BuhidScript QChar::Script_Tagbanwa names getNames QLocale::TagbanwaScript QChar::Script_Coptic names getNames QLocale::CopticScript QChar::Script_Limbu names getNames QLocale::LimbuScript QChar::Script_TaiLe names getNames QLocale::TaiLeScript QChar::Script_LinearB names getNames QLocale::LinearBScript QChar::Script_Ugaritic names getNames QLocale::UgariticScript QChar::Script_Shavian names getNames QLocale::ShavianScript QChar::Script_Osmanya names getNames QLocale::OsmanyaScript QChar::Script_Cypriot names getNames QLocale::CypriotScript QChar::Script_Braille names getNames QLocale::BrailleScript QChar::Script_Buginese names getNames QLocale::BugineseScript QChar::Script_NewTaiLue names getNames QLocale::NewTaiLueScript QChar::Script_Glagolitic names getNames QLocale::GlagoliticScript QChar::Script_Tifinagh names getNames QLocale::TifinaghScript QChar::Script_SylotiNagri names getNames QLocale::SylotiNagriScript QChar::Script_OldPersian names getNames QLocale::OldPersianScript QChar::Script_Kharoshthi names getNames QLocale::KharoshthiScript QChar::Script_Balinese names getNames QLocale::BalineseScript QChar::Script_Cuneiform names getNames QLocale::CuneiformScript QChar::Script_Phoenician names getNames QLocale::PhoenicianScript QChar::Script_PhagsPa names getNames QLocale::PhagsPaScript QChar::Script_Nko names getNames QLocale::NkoScript QChar::Script_Sundanese names getNames QLocale::SundaneseScript QChar::Script_Lepcha names getNames QLocale::LepchaScript QChar::Script_OlChiki names getNames QLocale::OlChikiScript QChar::Script_Vai names getNames QLocale::VaiScript QChar::Script_Saurashtra names getNames QLocale::SaurashtraScript QChar::Script_KayahLi names getNames QLocale::KayahLiScript QChar::Script_Rejang names getNames QLocale::RejangScript QChar::Script_Lycian names getNames QLocale::LycianScript QChar::Script_Carian names getNames QLocale::CarianScript QChar::Script_Lydian names getNames QLocale::LydianScript QChar::Script_Cham names getNames QLocale::ChamScript QChar::Script_TaiTham names getNames QLocale::LannaScript QChar::Script_TaiViet names getNames QLocale::TaiVietScript QChar::Script_Avestan names getNames QLocale::AvestanScript QChar::Script_EgyptianHieroglyphs names getNames QLocale::EgyptianHieroglyphsScript QChar::Script_Samaritan names getNames QLocale::SamaritanScript QChar::Script_Lisu names getNames QLocale::FraserScript QChar::Script_Bamum names getNames QLocale::BamumScript QChar::Script_Javanese names getNames QLocale::JavaneseScript QChar::Script_MeeteiMayek names getNames QLocale::MeiteiMayekScript QChar::Script_ImperialAramaic names getNames QLocale::ImperialAramaicScript QChar::Script_OldSouthArabian names getNames QLocale::OldSouthArabianScript QChar::Script_InscriptionalParthian names getNames QLocale::InscriptionalParthianScript QChar::Script_InscriptionalPahlavi names getNames QLocale::InscriptionalPahlaviScript QChar::Script_Kaithi names getNames QLocale::KaithiScript QChar::Script_Batak names getNames QLocale::BatakScript QChar::Script_Brahmi names getNames QLocale::BrahmiScript QChar::Script_Mandaic names getNames QLocale::MandaeanScript QChar::Script_Chakma names getNames QLocale::ChakmaScript QChar::Script_MeroiticCursive QChar::Script_MeroiticHieroglyphs names getNames QLocale::MeroiticCursiveScript names append getNames QLocale::MeroiticScript QChar::Script_Miao names getNames QLocale::PollardPhoneticScript QChar::Script_Sharada names getNames QLocale::SharadaScript QChar::Script_SoraSompeng names getNames QLocale::SoraSompengScript QChar::Script_Takri names getNames QLocale::TakriScript QChar::Script_CaucasianAlbanian names getNames QLocale::CaucasianAlbanianScript QChar::Script_BassaVah names getNames QLocale::BassaVahScript QChar::Script_Duployan names getNames QLocale::DuployanScript QChar::Script_Elbasan names getNames QLocale::ElbasanScript QChar::Script_Grantha names getNames QLocale::GranthaScript QChar::Script_PahawhHmong names getNames QLocale::PahawhHmongScript QChar::Script_Khojki names getNames QLocale::KhojkiScript QChar::Script_LinearA names getNames QLocale::LinearAScript QChar::Script_Mahajani names getNames QLocale::MahajaniScript QChar::Script_Manichaean names getNames QLocale::ManichaeanScript QChar::Script_MendeKikakui names getNames QLocale::MendeKikakuiScript QChar::Script_Modi names getNames QLocale::ModiScript QChar::Script_Mro names getNames QLocale::MroScript QChar::Script_OldNorthArabian names getNames QLocale::OldNorthArabianScript QChar::Script_Nabataean names getNames QLocale::NabataeanScript QChar::Script_Palmyrene names getNames QLocale::PalmyreneScript QChar::Script_PauCinHau names getNames QLocale::PauCinHauScript QChar::Script_OldPermic names getNames QLocale::OldPermicScript QChar::Script_PsalterPahlavi names getNames QLocale::PsalterPahlaviScript QChar::Script_Siddham names getNames QLocale::SiddhamScript QChar::Script_Khudawadi names getNames QLocale::KhudawadiScript QChar::Script_Tirhuta names getNames QLocale::TirhutaScript QChar::Script_WarangCiti names getNames QLocale::VarangKshitiScript QChar::Script_Ahom names getNames QLocale::AhomScript QChar::Script_AnatolianHieroglyphs names getNames QLocale::AnatolianHieroglyphsScript QChar::Script_Hatran names getNames QLocale::HatranScript QChar::Script_Multani names getNames QLocale::MultaniScript QChar::Script_OldHungarian names getNames QLocale::OldHungarianScript QChar::Script_Unknown QChar::Script_Inherited QChar::Script_Common QChar::Script_OldTurkic QChar::Script_SignWriting qCDebug SONNET_LOG_CORE script allLanguages unite names toSet QStringList pruned QString name names dictionaryLanguages contains name pruned append name names pruned names isEmpty QString name names s_scriptLanguages insert script name allLanguages contains s_knownDictionaries QSet&lt;QString&gt; dicts s_knownDictionaries dicts subtract allLanguages QString dictName dicts QString languageName QLocale dictName name languageName isEmpty qCWarning SONNET_LOG_CORE dictName s_dictionaryNameMap languageName dictName s_scriptLanguages values contains languageName qCWarning SONNET_LOG_CORE dictName languageName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">guesslanguage.cpp</field>
    <field name="url">guesslanguage_8cpp_source.html#l00561</field>
    <field name="keywords"></field>
    <field name="text">GuessLanguage::GuessLanguage d new GuessLanguagePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">guesslanguage.cpp</field>
    <field name="url">guesslanguage_8cpp_source.html#l00566</field>
    <field name="keywords"></field>
    <field name="text">GuessLanguage::~GuessLanguage d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">guesslanguage.cpp</field>
    <field name="url">guesslanguage_8cpp_source.html#l00571</field>
    <field name="keywords"></field>
    <field name="text">QString GuessLanguage::identify QString text QStringList suggestionsListIn text isEmpty QString QStringList suggestionsList QString suggestion suggestionsListIn d s_knownDictionaries contains suggestion suggestionsList contains suggestion suggestionsList append suggestion d s_knownModels isEmpty d loadModels QStringList candidateLanguages d identify text d findRuns text i i candidateLanguages count i d s_dictionaryNameMap contains candidateLanguages i candidateLanguages i d s_dictionaryNameMap value candidateLanguages i candidateLanguages count candidateLanguages first candidateLanguages append suggestionsList candidateLanguages removeDuplicates QString identified d guessFromDictionaries text candidateLanguages identified isEmpty identified qCDebug SONNET_LOG_CORE text suggestionsList isEmpty suggestionsList first qCWarning SONNET_LOG_CORE text QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">guesslanguage.cpp</field>
    <field name="url">guesslanguage_8cpp_source.html#l00624</field>
    <field name="keywords"></field>
    <field name="text">GuessLanguage::setLimits maxItems minConfidence d m_maxItems maxItems d m_minConfidence minConfidence GuessLanguagePrivate::loadModels QString triMapFile QStandardPaths::locate QStandardPaths::GenericDataLocation QStringLiteral triMapFile isEmpty triMapFile QStringLiteral arg QCoreApplication::applicationDirPath qCDebug SONNET_LOG_CORE triMapFile QFile sin triMapFile sin open QIODevice::ReadOnly qCWarning SONNET_LOG_CORE triMapFile QDataStream in sin in s_knownModels QSet&lt;QString&gt; availableLanguages QHashIterator&lt;QString, QHash&lt;QString, int&gt; iterator s_knownModels iterator hasNext iterator next iterator value count MAXGRAMS qCWarning SONNET_LOG_CORE iterator key iterator value count MAXGRAMS availableLanguages insert iterator key QSet&lt;QString&gt; knownLanguages s_scriptLanguages values toSet knownLanguages subtract availableLanguages knownLanguages isEmpty qCWarning SONNET_LOG_CORE knownLanguages QList&lt;QChar::Script&gt; GuessLanguagePrivate::findRuns QString text QChar::Script script QChar::Script_Unknown QHash&lt;QChar::Script, int&gt; scriptCounts totalCount QChar c text script c script script QChar::Script_Common script QChar::Script_Inherited c isLetter scriptCounts script totalCount QList&lt;QChar::Script&gt; relevantScripts totalCount relevantScripts QChar::Script script scriptCounts keys scriptCounts script totalCount relevantScripts script script QChar::Script_Latin scriptCounts script totalCount relevantScripts script relevantScripts QStringList GuessLanguagePrivate::identify QString sample QList&lt;QChar::Script&gt; scripts sample size MIN_LENGTH QStringList QStringList guesses QChar::Script script scripts guesses append guessFromTrigrams sample s_scriptLanguages values script guesses QStringList GuessLanguagePrivate::guessFromTrigrams QString sample QStringList languages QStringList ret QList&lt;QString&gt; sampleTrigrams createOrderedModel sample QMultiMap&lt;int,QString&gt; scores QString language languages s_knownModels contains language scores insert distance sampleTrigrams s_knownModels language language scores isEmpty scores firstKey MAXGRAMS sampleTrigrams size qCDebug SONNET_LOG_CORE sample ret counter confidence QMapIterator&lt;int,QString&gt; it scores it next QString prevItem it value prevScore it key it hasNext counter m_maxItems confidence m_minConfidence it next counter confidence it key prevScore it key ret prevItem prevItem it value prevScore it key counter m_maxItems confidence m_minConfidence ret prevItem ret QList&lt;QString&gt; GuessLanguagePrivate::createOrderedModel QString content QHash&lt;QString,int&gt; trigramCounts QMap&lt;int,QString&gt; orderedTrigrams i i content size i QString tri content mid i toLower trigramCounts tri QString key trigramCounts keys QChar data key constData hasTwoSpaces data isSpace data isSpace data isSpace hasTwoSpaces orderedTrigrams insertMulti trigramCounts key key orderedTrigrams values GuessLanguagePrivate::distance QList&lt;QString&gt; model QHash&lt;QString,int&gt; knownModel counter dist Q_FOREACH QString trigram model knownModel contains trigram dist qAbs counter knownModel value trigram dist MAXGRAMS counter MAXGRAMS dist QString GuessLanguagePrivate::guessFromDictionaries QString sentence QStringList candidates QList&lt;QSharedPointer&lt;SpellerPlugin&gt; spellers QString lang candidates Loader::openLoader languages contains lang qCWarning SONNET_LOG_CORE lang QSharedPointer&lt;SpellerPlugin&gt; plugin Loader::openLoader cachedSpeller lang plugin isNull spellers append plugin spellers isEmpty QString QMap&lt;QString, int&gt; correctHits WordTokenizer tokenizer sentence tokenizer hasNext QStringRef word tokenizer next tokenizer isSpellcheckable i i spellers count i spellers i isCorrect word toString correctHits spellers i language correctHits isEmpty QString QMap&lt;QString, int&gt;::const_iterator max correctHits constBegin QMap&lt;QString, int&gt;::const_iterator itr correctHits constBegin itr correctHits constEnd itr itr value max value max itr max key</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">guesslanguage.h</field>
    <field name="url">guesslanguage_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet GuessLanguagePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">guesslanguage.h</field>
    <field name="url">guesslanguage_8h_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">SONNETCORE_EXPORT GuessLanguage GuessLanguage GuessLanguage setLimits maxItems minConfidence QString identify QString text QStringList suggestions QStringList GuessLanguagePrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet LanguageCache QTextBlockUserData QMap&lt;QPair&lt;int,int&gt; QString languages invalidate pos QMutableMapIterator&lt;QPair&lt;int,int&gt; QString it languages it toBack it hasPrevious it previous it key first it key second pos it remove HighlighterPrivate HighlighterPrivate Highlighter qq QColor col textEdit Q_NULLPTR plainTextEdit Q_NULLPTR spellColor col q qq tokenizer WordTokenizer active automatic connected wordCount errorCount intraWordEditing completeRehighlightRequired spellColor spellColor isValid spellColor Qt::red languageFilter LanguageFilter SentenceTokenizer loader Loader::openLoader loader settings restore spellchecker Sonnet::Speller spellCheckerFound spellchecker isValid rehighlightRequest QTimer q q connect rehighlightRequest SIGNAL timeout q SLOT slotRehighlight spellCheckerFound disablePercentage loader settings disablePercentageWordError disableWordCount loader settings disableWordErrorCount completeRehighlightRequired rehighlightRequest setInterval rehighlightRequest setSingleShot rehighlightRequest start HighlighterPrivate WordTokenizer tokenizer LanguageFilter languageFilter Loader loader Speller spellchecker QTextEdit textEdit QPlainTextEdit plainTextEdit active automatic completeRehighlightRequired intraWordEditing spellCheckerFound connected disablePercentage disableWordCount wordCount errorCount QTimer rehighlightRequest QColor spellColor Highlighter q HighlighterPrivate::~HighlighterPrivate spellchecker languageFilter tokenizer Highlighter::Highlighter QTextEdit edit QColor _col QSyntaxHighlighter edit d new HighlighterPrivate this _col d textEdit edit d textEdit installEventFilter d textEdit viewport installEventFilter</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00143</field>
    <field name="keywords"></field>
    <field name="text">Highlighter::Highlighter QPlainTextEdit edit QColor col QSyntaxHighlighter edit d new HighlighterPrivate this col d plainTextEdit edit setDocument d plainTextEdit document d plainTextEdit installEventFilter d plainTextEdit viewport installEventFilter Highlighter::~Highlighter d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00158</field>
    <field name="keywords"></field>
    <field name="text">Highlighter::spellCheckerFound d spellCheckerFound</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00163</field>
    <field name="keywords"></field>
    <field name="text">Highlighter::slotRehighlight d completeRehighlightRequired d wordCount d errorCount rehighlight QTextCursor cursor d textEdit cursor d textEdit textCursor cursor d plainTextEdit textCursor cursor insertText QString QTimer::singleShot SLOT slotAutoDetection</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00184</field>
    <field name="keywords"></field>
    <field name="text">Highlighter::automatic d automatic Highlighter::intraWordEditing d intraWordEditing Highlighter::setIntraWordEditing editing d intraWordEditing editing</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00199</field>
    <field name="keywords"></field>
    <field name="text">Highlighter::setAutomatic automatic automatic d automatic d automatic automatic d automatic slotAutoDetection</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00211</field>
    <field name="keywords"></field>
    <field name="text">Highlighter::slotAutoDetection savedActive d active d automatic d wordCount tme d errorCount d disableWordCount d errorCount d disablePercentage d wordCount d active tme d active d active tme d active d active savedActive d active emit activeChanged tr qCDebug SONNET_LOG_UI emit activeChanged tr d completeRehighlightRequired d rehighlightRequest setInterval d rehighlightRequest setSingleShot</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00242</field>
    <field name="keywords"></field>
    <field name="text">Highlighter::setActive active active d active d active active rehighlight d active emit activeChanged tr emit activeChanged tr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00257</field>
    <field name="keywords"></field>
    <field name="text">Highlighter::isActive d active Highlighter::contentsChange pos add rem QTextBlock lastBlock document findBlock pos add rem QTextBlock block document findBlock pos LanguageCache cache LanguageCache block userData cache cache invalidate pos block position block block next block isValid block lastBlock Highlighter::highlightBlock QString text text isEmpty d active d spellCheckerFound d connected connect document SIGNAL contentsChange SLOT contentsChange d connected QTextCursor cursor d textEdit cursor d textEdit textCursor cursor d plainTextEdit textCursor index cursor position lengthPosition text length index lengthPosition lengthPosition text lengthPosition isLetter d languageFilter setBuffer text LanguageCache cache LanguageCache currentBlockUserData cache cache LanguageCache setCurrentBlockUserData cache d languageFilter hasNext QStringRef sentence d languageFilter next d spellchecker testAttribute Speller::AutoDetectLanguage QString lang QPair&lt;int,int&gt; spos QPair&lt;int,int&gt; sentence position sentence length cache languages contains spos lang cache languages value spos lang d languageFilter language d languageFilter isSpellcheckable lang clear cache languages spos lang lang isEmpty d spellchecker setLanguage lang d tokenizer setBuffer sentence toString offset sentence position d tokenizer hasNext QStringRef word d tokenizer next d tokenizer isSpellcheckable d wordCount d spellchecker isMisspelled word toString d errorCount setMisspelled word position offset word length unsetMisspelled word position offset word length setCurrentBlockState</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00343</field>
    <field name="keywords"></field>
    <field name="text">QString Highlighter::currentLanguage d spellchecker language</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00348</field>
    <field name="keywords"></field>
    <field name="text">Highlighter::setCurrentLanguage QString lang QString prevLang d spellchecker language d spellchecker setLanguage lang d spellCheckerFound d spellchecker isValid d spellCheckerFound qCDebug SONNET_LOG_UI lang d spellchecker setLanguage prevLang d wordCount d errorCount d automatic d rehighlightRequest start Highlighter::setMisspelled start count QTextCharFormat format format setFontUnderline format setUnderlineStyle QTextCharFormat::SpellCheckUnderline format setUnderlineColor d spellColor setFormat start count format Highlighter::unsetMisspelled start count setFormat start count QTextCharFormat Highlighter::eventFilter QObject o QEvent e d spellCheckerFound o d textEdit o d plainTextEdit e type QEvent::KeyPress QKeyEvent k QKeyEvent e d rehighlightRequest isActive d rehighlightRequest start k key Qt::Key_Enter k key Qt::Key_Return k key Qt::Key_Up k key Qt::Key_Down k key Qt::Key_Left k key Qt::Key_Right k key Qt::Key_PageUp k key Qt::Key_PageDown k key Qt::Key_Home k key Qt::Key_End k modifiers Qt::ControlModifier k key Qt::Key_A k key Qt::Key_B k key Qt::Key_E k key Qt::Key_N k key Qt::Key_P intraWordEditing setIntraWordEditing d completeRehighlightRequired d rehighlightRequest setInterval d rehighlightRequest setSingleShot d rehighlightRequest start setIntraWordEditing k key Qt::Key_Space k key Qt::Key_Enter k key Qt::Key_Return QTimer::singleShot SLOT slotAutoDetection d textEdit o d textEdit viewport d plainTextEdit o d plainTextEdit viewport e type QEvent::MouseButtonPress intraWordEditing setIntraWordEditing d completeRehighlightRequired d rehighlightRequest setInterval d rehighlightRequest setSingleShot d rehighlightRequest start</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00439</field>
    <field name="keywords"></field>
    <field name="text">Highlighter::addWordToDictionary QString word d spellchecker addToPersonal word</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00444</field>
    <field name="keywords"></field>
    <field name="text">Highlighter::ignoreWord QString word d spellchecker addToSession word</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00449</field>
    <field name="keywords"></field>
    <field name="text">QStringList Highlighter::suggestionsForWord QString word max QStringList suggestions d spellchecker suggest word max suggestions count max suggestions removeLast suggestions</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00460</field>
    <field name="keywords"></field>
    <field name="text">Highlighter::isWordMisspelled QString word d spellchecker isMisspelled word</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00465</field>
    <field name="keywords"></field>
    <field name="text">Highlighter::setMisspelledColor QColor color d spellColor color</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00470</field>
    <field name="keywords"></field>
    <field name="text">Highlighter::checkerEnabledByDefault d loader settings checkerEnabledByDefault</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.cpp</field>
    <field name="url">highlighter_8cpp_source.html#l00475</field>
    <field name="keywords"></field>
    <field name="text">Highlighter::setDocument QTextDocument document d connected QSyntaxHighlighter::setDocument document</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.h</field>
    <field name="url">highlighter_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QTextEdit QPlainTextEdit Sonnet HighlighterPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">highlighter.h</field>
    <field name="url">highlighter_8h_source.html#l00036</field>
    <field name="keywords"></field>
    <field name="text">SONNETUI_EXPORT Highlighter QSyntaxHighlighter Q_OBJECT Highlighter QTextEdit textEdit QColor col QColor Highlighter QPlainTextEdit textEdit QColor col QColor Highlighter spellCheckerFound QString currentLanguage setActive active isActive automatic setAutomatic automatic addWordToDictionary QString word ignoreWord QString word QStringList suggestionsForWord QString word max isWordMisspelled QString word setMisspelledColor QColor color checkerEnabledByDefault setDocument QTextDocument document Q_SIGNALS activeChanged QString description highlightBlock QString text Q_DECL_OVERRIDE setMisspelled start count unsetMisspelled start count eventFilter QObject o QEvent e Q_DECL_OVERRIDE intraWordEditing setIntraWordEditing editing Q_SLOTS setCurrentLanguage QString language slotAutoDetection slotRehighlight Q_SLOTS contentsChange pos added removed HighlighterPrivate d Q_DISABLE_COPY Highlighter</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">hspell_debug.cpp</field>
    <field name="url">hspell__debug_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_LOGGING_CATEGORY SONNET_LOG_HSPELL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">hspell_debug.h</field>
    <field name="url">hspell__debug_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_DECLARE_LOGGING_CATEGORY SONNET_LOG_HSPELL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">hspellclient.cpp</field>
    <field name="url">hspellclient_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet HSpellClient::HSpellClient QObject parent Client parent HSpellClient::~HSpellClient SpellerPlugin HSpellClient::createSpeller QString language HSpellDict ad HSpellDict language ad QStringList HSpellClient::languages QStringList langs HSpellDict ad QStringLiteral ad isInitialized langs append QStringLiteral langs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">hspellclient.h</field>
    <field name="url">hspellclient_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet SpellerPlugin Sonnet::SpellerPlugin HSpellClient Sonnet::Client Q_OBJECT Q_INTERFACES Sonnet::Client Q_PLUGIN_METADATA IID HSpellClient QObject parent HSpellClient reliability const Q_DECL_OVERRIDE SpellerPlugin createSpeller QString language Q_DECL_OVERRIDE QStringList languages const Q_DECL_OVERRIDE QString name const Q_DECL_OVERRIDE QString::fromLatin1</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">hspelldict.cpp</field>
    <field name="url">hspelldict_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet HSpellDict::HSpellDict QString lang SpellerPlugin lang int_error hspell_init m_speller HSPELL_OPT_DEFAULT int_error qCWarning SONNET_LOG_HSPELL initialized codec QTextCodec::codecForName initialized QSettings settings QStringLiteral QStringLiteral m_personalWords QSet&lt;QString&gt;::fromList settings value QStringLiteral QStringList toStringList QVariantHash replacementMap settings value QStringLiteral QVariant toHash Q_FOREACH QString key replacementMap keys m_replacements key replacementMap key toString HSpellDict::~HSpellDict initialized hspell_uninit m_speller HSpellDict::isCorrect QString word m_sessionWords contains word m_personalWords contains word initialized preflen QByteArray wordISO codec fromUnicode word correct hspell_check_word m_speller wordISO constData preflen correct hspell_is_canonic_gimatria wordISO constData correct correct QStringList HSpellDict::suggest QString word QStringList suggestions m_replacements contains word suggestions append m_replacements word corlist correctionList suggestionCount corlist_init correctionList hspell_trycorrect m_speller codec fromUnicode word constData correctionList suggestionCount suggestionCount corlist_n correctionList suggestionCount suggestions append codec toUnicode corlist_str correctionList suggestionCount corlist_free correctionList suggestions HSpellDict::storeReplacement QString bad QString good m_replacements bad good storePersonalWords HSpellDict::addToPersonal QString word m_personalWords insert word storePersonalWords HSpellDict::addToSession QString word m_sessionWords insert word HSpellDict::storePersonalWords QSettings settings QStringLiteral QStringLiteral settings setValue QStringLiteral QVariant m_personalWords toList QVariantHash variantHash Q_FOREACH QString key m_replacements keys variantHash key QVariant m_replacements key settings setValue QStringLiteral variantHash</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">hspelldict.h</field>
    <field name="url">hspelldict_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">hspelldict.h</field>
    <field name="url">hspelldict_8h_source.html#l00034</field>
    <field name="keywords"></field>
    <field name="text">HSpellDict Sonnet::SpellerPlugin HSpellDict QString lang HSpellDict isCorrect QString word Q_DECL_OVERRIDE QStringList suggest QString word Q_DECL_OVERRIDE storeReplacement QString bad QString good Q_DECL_OVERRIDE addToPersonal QString word Q_DECL_OVERRIDE addToSession QString word Q_DECL_OVERRIDE isInitialized initialized storePersonalWords dict_radix m_speller QTextCodec codec initialized QSet&lt;QString&gt; m_sessionWords QSet&lt;QString&gt; m_personalWords QHash&lt;QString, QString&gt; m_replacements</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">hunspellclient.cpp</field>
    <field name="url">hunspellclient_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet HunspellClient::HunspellClient QObject parent Client parent qCDebug SONNET_HUNSPELL QStringList dirList QString AFF_MASK QStringLiteral QDir lodir QStringLiteral QDir lodir QStringLiteral QString DIR_MASK QStringLiteral lodir exists QString d lodir entryList QStringList DIR_MASK QDir::Dirs dirList append lodir absoluteFilePath d dirList append QStandardPaths::locateAll QStandardPaths::GenericDataLocation QStringLiteral QStandardPaths::LocateDirectory dirList append QStringLiteral HUNSPELL_MAIN_DICT_PATH dirList append QStringLiteral arg QCoreApplication::applicationDirPath QString dirString dirList QDir dir dirString QFileInfo dict dir entryInfoList QStringList AFF_MASK QDir::Files m_languagePaths insert dict baseName dict canonicalPath HunspellClient::~HunspellClient SpellerPlugin HunspellClient::createSpeller QString language qCDebug SONNET_HUNSPELL language HunspellDict ad HunspellDict language m_languagePaths value language ad QStringList HunspellClient::languages m_languagePaths keys</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">hunspellclient.h</field>
    <field name="url">hunspellclient_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet SpellerPlugin Sonnet::SpellerPlugin HunspellClient Sonnet::Client Q_OBJECT Q_INTERFACES Sonnet::Client Q_PLUGIN_METADATA IID HunspellClient QObject parent HunspellClient reliability SpellerPlugin createSpeller QString language QStringList languages QString name QStringLiteral QMap&lt;QString, QString&gt; m_languagePaths</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">hunspelldebug.cpp</field>
    <field name="url">hunspelldebug_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_LOGGING_CATEGORY SONNET_HUNSPELL QtWarningMsg Q_LOGGING_CATEGORY SONNET_HUNSPELL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">hunspelldebug.h</field>
    <field name="url">hunspelldebug_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_DECLARE_LOGGING_CATEGORY SONNET_HUNSPELL</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">hunspelldict.cpp</field>
    <field name="url">hunspelldict_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet HunspellDict::HunspellDict QString lang QString path SpellerPlugin lang m_speller m_codec qCDebug SONNET_HUNSPELL lang path path endsWith QLatin1Char path QLatin1Char path lang QString dictionary path QStringLiteral QString aff path QStringLiteral QFileInfo::exists dictionary QFileInfo::exists aff m_speller Hunspell aff toLocal8Bit constData dictionary toLocal8Bit constData m_codec QTextCodec::codecForName m_speller get_dic_encoding m_codec qWarning m_speller get_dic_encoding m_codec QTextCodec::codecForLocale Q_ASSERT m_codec qCWarning SONNET_HUNSPELL lang path QString userDic QDir::home filePath QLatin1String lang QFile userDicFile userDic userDicFile open QIODevice::ReadOnly QIODevice::Text qCDebug SONNET_HUNSPELL userDic QTextStream userDicIn userDicFile userDicIn atEnd QString word userDicIn readLine word contains QLatin1Char QStringList wordParts word split QLatin1Char m_speller add_with_affix toDictEncoding wordParts at constData toDictEncoding wordParts at constData word at QLatin1Char m_speller remove toDictEncoding word mid constData m_speller add toDictEncoding word constData userDicFile close qCDebug SONNET_HUNSPELL m_speller HunspellDict::~HunspellDict m_speller QByteArray HunspellDict::toDictEncoding QString word m_codec fromUnicode word HunspellDict::isCorrect QString word qCDebug SONNET_HUNSPELL word m_speller result m_speller spell toDictEncoding word constData qCDebug SONNET_HUNSPELL result result QStringList HunspellDict::suggest QString word m_speller QStringList selection QStringList lst nbWord m_speller suggest selection toDictEncoding word constData i i nbWord i lst m_codec toUnicode selection i m_speller free_list selection nbWord lst HunspellDict::storeReplacement QString bad QString good Q_UNUSED bad Q_UNUSED good m_speller qCDebug SONNET_HUNSPELL HunspellDict::addToPersonal QString word m_speller m_speller add toDictEncoding word constData QString userDic QDir::home filePath QLatin1String language QFile userDicFile userDic userDicFile open QIODevice::Append QIODevice::Text QTextStream out userDicFile out word userDicFile close HunspellDict::addToSession QString word m_speller r m_speller add toDictEncoding word constData r</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">hunspelldict.h</field>
    <field name="url">hunspelldict_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">HunspellDict Sonnet::SpellerPlugin HunspellDict QString lang QString path HunspellDict isCorrect QString word QStringList suggest QString word storeReplacement QString bad QString good addToPersonal QString word addToSession QString word QByteArray toDictEncoding QString word Hunspell m_speller QTextCodec m_codec</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">languagefilter.cpp</field>
    <field name="url">languagefilter_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet LanguageFilterPrivate LanguageFilterPrivate AbstractTokenizer s source s gl setLimits MAX_ITEMS MIN_RELIABILITY LanguageFilterPrivate source QString mainLanguage AbstractTokenizer source QStringRef lastToken QString lastLanguage QString cachedMainLanguage QString prevLanguage GuessLanguage gl Speller sp QString LanguageFilterPrivate::mainLanguage cachedMainLanguage isNull cachedMainLanguage gl identify source buffer QStringList Loader::openLoader settings defaultLanguage cachedMainLanguage LanguageFilter::LanguageFilter AbstractTokenizer source d new LanguageFilterPrivate source d prevLanguage Loader::openLoader settings defaultLanguage LanguageFilter::LanguageFilter LanguageFilter other d new LanguageFilterPrivate other d source d lastToken other d lastToken d lastLanguage other d lastLanguage d cachedMainLanguage other d cachedMainLanguage d prevLanguage other d prevLanguage LanguageFilter::~LanguageFilter d LanguageFilter::hasNext d source hasNext LanguageFilter::setBuffer QString buffer d cachedMainLanguage QString d source setBuffer buffer QStringRef LanguageFilter::next d lastToken d source next d prevLanguage d lastLanguage d lastLanguage QString d lastToken QString LanguageFilter::language d lastLanguage isNull d lastLanguage d gl identify d lastToken toString QStringList d prevLanguage Loader::openLoader settings defaultLanguage QStringList available d sp availableLanguages available contains d lastLanguage QString lang available lang startsWith d lastLanguage d lastLanguage lang d lastLanguage LanguageFilter::isSpellcheckable QString lastlang language lastlang isEmpty d sp availableLanguages contains lastlang QString LanguageFilter::buffer d source buffer LanguageFilter::replace position len QString newWord d source replace position len newWord d lastLanguage QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">loader.cpp</field>
    <field name="url">loader_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet LoaderPrivate Settings settings QMap&lt;QString, QVector&lt;Client *&gt; languageClients QStringList clients QStringList languagesNameCache QHash&lt;QString, QSharedPointer&lt;SpellerPlugin&gt; spellerCache Q_GLOBAL_STATIC Loader s_loader Loader Loader::openLoader s_loader isDestroyed s_loader Loader::Loader d new LoaderPrivate d settings Settings d settings restore loadPlugins Loader::~Loader qCDebug SONNET_LOG_CORE d settings d settings d SpellerPlugin Loader::createSpeller QString language QString clientName QString pclient clientName QString plang language plang isEmpty plang d settings defaultLanguage QVector&lt;Client *&gt; lClients d languageClients plang lClients isEmpty qCWarning SONNET_LOG_CORE plang QVectorIterator&lt;Client *&gt; itr lClients itr hasNext Client item itr next pclient isEmpty pclient item name SpellerPlugin dict item createSpeller plang dict SpellerPlugin dict item createSpeller plang dict QSharedPointer&lt;SpellerPlugin&gt; Loader::cachedSpeller QString language speller d spellerCache language speller speller reset createSpeller language speller Loader::clearSpellerCache d spellerCache clear QStringList Loader::clients d clients QStringList Loader::languages d languageClients keys QString Loader::languageNameForCode QString langCode QString currentDictionary langCode isoCode variantName localizedLang localizedCountry localizedVariant QByteArray variantEnglish minusPos variantCount variantListType variantShortName variantEnglishName variantListType variantList QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 QT_TRANSLATE_NOOP3 minusPos currentDictionary indexOf QLatin1Char minusPos variantName currentDictionary right currentDictionary length minusPos variantList variantCount variantShortName QLatin1String variantList variantCount variantShortName variantName variantCount variantList variantCount variantShortName variantEnglish variantList variantCount variantEnglishName variantEnglish variantName toLatin1 localizedVariant tr variantEnglish constData isoCode currentDictionary left minusPos isoCode currentDictionary QLocale locale isoCode localizedCountry locale nativeCountryName localizedLang locale nativeLanguageName localizedLang isEmpty localizedCountry isEmpty isoCode localizedCountry isEmpty localizedVariant isEmpty tr arg localizedLang localizedCountry localizedVariant localizedCountry isEmpty tr arg localizedLang localizedCountry localizedLang QStringList Loader::languageNames d languagesNameCache count languages count d languagesNameCache QStringList allLocalizedDictionaries Q_FOREACH QString langCode languages allLocalizedDictionaries append languageNameForCode langCode d languagesNameCache allLocalizedDictionaries allLocalizedDictionaries Settings Loader::settings d settings Loader::loadPlugins QStringList libPaths QCoreApplication::libraryPaths QStringLiteral INSTALLATION_PLUGIN_PATH QLatin1String pathSuffix plugins Q_FOREACH QString libPath libPaths QDir dir libPath pathSuffix dir exists Q_FOREACH QString fileName dir entryList QDir::Files loadPlugin dir absoluteFilePath fileName plugins plugins qCWarning SONNET_LOG_CORE loadPlugin QString loadPlugin QStringLiteral Loader::loadPlugin QString pluginPath QPluginLoader plugin pluginPath plugin load qCWarning SONNET_LOG_CORE pluginPath plugin errorString Client client qobject_cast Client plugin instance client qCWarning SONNET_LOG_CORE pluginPath plugin unload Client client pluginPath QLatin1String client HunspellClient client NSSpellCheckerClient QStringList languages client languages d clients append client name Q_FOREACH QString language languages QVector&lt;Client *&gt; languageClients d languageClients language languageClients isEmpty client reliability languageClients first reliability languageClients append client languageClients prepend client Loader::changed emit configurationChanged</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">nsspellcheckerclient.h</field>
    <field name="url">nsspellcheckerclient_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet SpellerPlugin Sonnet::SpellerPlugin NSSpellCheckerClient Sonnet::Client Q_OBJECT Q_INTERFACES Sonnet::Client Q_PLUGIN_METADATA IID NSSpellCheckerClient QObject parent NSSpellCheckerClient reliability SpellerPlugin createSpeller QString language QStringList languages QString name QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">nsspellcheckerclient.mm</field>
    <field name="url">nsspellcheckerclient_8mm_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet NSSpellCheckerClient::NSSpellCheckerClient QObject parent Client parent NSSpellCheckerClient::~NSSpellCheckerClient SpellerPlugin NSSpellCheckerClient::createSpeller QString language NSSpellCheckerDict language QStringList NSSpellCheckerClient::languages QStringList lst NSArray availableLanguages NSSpellChecker sharedSpellChecker availableLanguages NSString lang_code in availableLanguages lst append QString::fromNSString lang_code lst</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">nsspellcheckerdict.h</field>
    <field name="url">nsspellcheckerdict_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">nsspellcheckerdict.h</field>
    <field name="url">nsspellcheckerdict_8h_source.html#l00026</field>
    <field name="keywords"></field>
    <field name="text">NSSpellCheckerDict Sonnet::SpellerPlugin NSSpellCheckerDict QString lang NSSpellCheckerDict isCorrect QString word QStringList suggest QString word storeReplacement QString bad QString good addToPersonal QString word addToSession QString word m_langCode</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">nsspellcheckerdict.mm</field>
    <field name="url">nsspellcheckerdict_8mm_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet NSSpellCheckerDict::NSSpellCheckerDict QString lang SpellerPlugin lang m_langCode lang toNSString NSSpellCheckerDict::~NSSpellCheckerDict NSSpellCheckerDict::isCorrect QString word NSRange range NSSpellChecker sharedSpellChecker checkSpellingOfString word toNSString startingAt language NSString m_langCode wrap NO inSpellDocumentWithTag wordCount range length QStringList NSSpellCheckerDict::suggest QString word NSString correction NSSpellChecker sharedSpellChecker correctionForWordRange NSMakeRange word length inString word toNSString language NSString m_langCode inSpellDocumentWithTag QStringList QString::fromNSString correction NSSpellCheckerDict::storeReplacement QString bad QString good NSSpellCheckerDict::addToPersonal QString word NSSpellCheckerDict::addToSession QString word</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">settings.cpp</field>
    <field name="url">settings_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet SettingsPrivate Loader loader modified QString defaultLanguage QString defaultClient checkUppercase skipRunTogether backgroundCheckerEnabled checkerEnabledByDefault autodetectLanguage disablePercentage disableWordCount QMap&lt;QString, bool&gt; ignore Settings::Settings Loader loader d new SettingsPrivate d loader loader d modified d checkerEnabledByDefault restore Settings::~Settings d Settings::setDefaultLanguage QString lang QStringList cs d loader languages cs indexOf lang d defaultLanguage lang d defaultLanguage lang d modified d loader changed QString Settings::defaultLanguage d defaultLanguage Settings::setDefaultClient QString client d loader clients contains client d defaultClient client d modified d loader changed QString Settings::defaultClient d defaultClient Settings::setCheckUppercase check d checkUppercase check d modified d checkUppercase check Settings::checkUppercase d checkUppercase Settings::setAutodetectLanguage detect d autodetectLanguage detect d modified d autodetectLanguage detect Settings::autodetectLanguage d autodetectLanguage Settings::setSkipRunTogether skip d skipRunTogether skip d modified d skipRunTogether skip Settings::skipRunTogether d skipRunTogether Settings::setCheckerEnabledByDefault check d checkerEnabledByDefault check d modified d checkerEnabledByDefault check Settings::checkerEnabledByDefault d checkerEnabledByDefault Settings::setBackgroundCheckerEnabled enable d backgroundCheckerEnabled enable d modified d backgroundCheckerEnabled enable Settings::backgroundCheckerEnabled d backgroundCheckerEnabled Settings::setCurrentIgnoreList QStringList ignores changed setQuietIgnoreList ignores d modified changed Settings::setQuietIgnoreList QStringList ignores changed d ignore QMap&lt;QString, bool&gt; QStringList::const_iterator itr ignores begin itr ignores end itr d ignore insert itr changed changed QStringList Settings::currentIgnoreList d ignore keys Settings::addWordToIgnore QString word d ignore contains word d modified d ignore insert word Settings::ignore QString word d ignore contains word Settings::disablePercentageWordError d disablePercentage Settings::disableWordErrorCount d disableWordCount Settings::save QSettings settings QStringLiteral QStringLiteral settings setValue QStringLiteral d defaultClient settings setValue QStringLiteral d defaultLanguage settings setValue QStringLiteral d checkUppercase settings setValue QStringLiteral d skipRunTogether settings setValue QStringLiteral d backgroundCheckerEnabled settings setValue QStringLiteral d checkerEnabledByDefault settings setValue QStringLiteral d autodetectLanguage QString defaultLanguage QStringLiteral arg d defaultLanguage settings contains defaultLanguage d ignore isEmpty settings remove defaultLanguage d ignore isEmpty settings setValue defaultLanguage QStringList d ignore keys QStringList kdeWords QStringList l l append QStringLiteral l append QStringLiteral l append QStringLiteral l append QStringLiteral l append QStringLiteral l append QStringLiteral l append QStringLiteral l append QStringLiteral l append QStringLiteral l append QStringLiteral l append QStringLiteral l append QStringLiteral l append QStringLiteral l append QStringLiteral l append QStringLiteral l Settings::restore QSettings settings QStringLiteral QStringLiteral d defaultClient settings value QStringLiteral QString toString d defaultLanguage settings value QStringLiteral QLocale::system bcp47Name toString d checkUppercase settings value QStringLiteral toBool d skipRunTogether settings value QStringLiteral toBool d backgroundCheckerEnabled settings value QStringLiteral toBool d checkerEnabledByDefault settings value QStringLiteral toBool d disablePercentage settings value QStringLiteral toInt d disableWordCount settings value QStringLiteral toInt d autodetectLanguage settings value QStringLiteral toBool QString ignoreEntry QStringLiteral arg d defaultLanguage QStringList ignores settings value ignoreEntry kdeWords toStringList setQuietIgnoreList ignores Settings::modified d modified Settings::setModified modified d modified modified</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spellcheckdecorator.cpp</field>
    <field name="url">spellcheckdecorator_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet SpellCheckDecorator::Private Private SpellCheckDecorator installer QPlainTextEdit textEdit q installer m_textEdit Q_NULLPTR m_plainTextEdit textEdit m_highlighter Q_NULLPTR createDefaultHighlighter m_plainTextEdit installEventFilter q m_plainTextEdit viewport installEventFilter q Private SpellCheckDecorator installer QTextEdit textEdit q installer m_textEdit textEdit m_plainTextEdit Q_NULLPTR m_highlighter createDefaultHighlighter m_textEdit installEventFilter q m_textEdit viewport installEventFilter q onContextMenuEvent QContextMenuEvent event execSuggestionMenu QPoint pos QString word QTextCursor cursor createDefaultHighlighter SpellCheckDecorator q QTextEdit m_textEdit QPlainTextEdit m_plainTextEdit Highlighter m_highlighter SpellCheckDecorator::Private::onContextMenuEvent QContextMenuEvent event m_highlighter createDefaultHighlighter QTextCursor cursorAtMouse m_textEdit cursorAtMouse m_textEdit cursorForPosition event pos cursorAtMouse m_plainTextEdit cursorForPosition event pos mousePos cursorAtMouse position QTextCursor cursor m_textEdit cursor m_textEdit textCursor cursor m_plainTextEdit textCursor selectedWordClicked cursor hasSelection mousePos cursor selectionStart mousePos cursor selectionEnd QTextCursor wordSelectCursor cursorAtMouse wordSelectCursor clearSelection wordSelectCursor select QTextCursor::WordUnderCursor QString selectedWord wordSelectCursor selectedText isMouseCursorInsideWord mousePos wordSelectCursor selectionStart mousePos wordSelectCursor selectionEnd selectedWord length isMouseCursorInsideWord wordSelectCursor setPosition wordSelectCursor position selectedWord size selectedWord startsWith QLatin1Char selectedWord startsWith QLatin1Char selectedWord selectedWord right selectedWord size wordSelectCursor movePosition QTextCursor::NextCharacter QTextCursor::MoveAnchor selectedWord endsWith QLatin1Char selectedWord endsWith QLatin1Char selectedWord chop wordSelectCursor movePosition QTextCursor::NextCharacter QTextCursor::KeepAnchor selectedWord size wordIsMisspelled isMouseCursorInsideWord m_highlighter m_highlighter isActive selectedWord isEmpty m_highlighter isWordMisspelled selectedWord checkBlock q isSpellCheckingEnabledForBlock cursorAtMouse block text selectedWordClicked wordIsMisspelled checkBlock m_textEdit m_textEdit setTextCursor wordSelectCursor m_plainTextEdit setTextCursor wordSelectCursor m_textEdit m_textEdit setTextCursor cursorAtMouse m_plainTextEdit setTextCursor cursorAtMouse m_textEdit cursor m_textEdit textCursor cursor m_plainTextEdit textCursor wordIsMisspelled selectedWordClicked checkBlock execSuggestionMenu event globalPos selectedWord cursor SpellCheckDecorator::Private::execSuggestionMenu QPoint pos QString selectedWord QTextCursor _cursor QTextCursor cursor _cursor QMenu menu QStringList reps m_highlighter suggestionsForWord selectedWord reps isEmpty QAction suggestionsAction menu addAction tr arg selectedWord suggestionsAction setEnabled QStringList::const_iterator end reps constEnd QStringList::const_iterator it reps constBegin it end it menu addAction it menu addSeparator QAction ignoreAction menu addAction tr QAction addToDictAction menu addAction tr QAction selectedAction menu exec pos selectedAction Q_ASSERT cursor selectedText selectedWord selectedAction ignoreAction m_highlighter ignoreWord selectedWord m_highlighter rehighlight selectedAction addToDictAction m_highlighter addWordToDictionary selectedWord m_highlighter rehighlight QString replacement selectedAction text Q_ASSERT reps contains replacement cursor insertText replacement m_textEdit m_textEdit setTextCursor cursor m_plainTextEdit setTextCursor cursor SpellCheckDecorator::Private::createDefaultHighlighter m_textEdit m_highlighter Highlighter m_textEdit m_highlighter Highlighter m_plainTextEdit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spellcheckdecorator.cpp</field>
    <field name="url">spellcheckdecorator_8cpp_source.html#l00226</field>
    <field name="keywords"></field>
    <field name="text">SpellCheckDecorator::SpellCheckDecorator QTextEdit textEdit QObject textEdit d new Private this textEdit</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spellcheckdecorator.cpp</field>
    <field name="url">spellcheckdecorator_8cpp_source.html#l00232</field>
    <field name="keywords"></field>
    <field name="text">SpellCheckDecorator::SpellCheckDecorator QPlainTextEdit textEdit QObject textEdit d new Private this textEdit SpellCheckDecorator::~SpellCheckDecorator d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spellcheckdecorator.cpp</field>
    <field name="url">spellcheckdecorator_8cpp_source.html#l00243</field>
    <field name="keywords"></field>
    <field name="text">SpellCheckDecorator::setHighlighter Highlighter highlighter d m_highlighter highlighter</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spellcheckdecorator.cpp</field>
    <field name="url">spellcheckdecorator_8cpp_source.html#l00248</field>
    <field name="keywords"></field>
    <field name="text">Highlighter SpellCheckDecorator::highlighter d m_highlighter d createDefaultHighlighter d m_highlighter SpellCheckDecorator::eventFilter QObject QEvent event event type QEvent::ContextMenu d onContextMenuEvent static_cast&lt;QContextMenuEvent *&gt; event</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spellcheckdecorator.cpp</field>
    <field name="url">spellcheckdecorator_8cpp_source.html#l00264</field>
    <field name="keywords"></field>
    <field name="text">SpellCheckDecorator::isSpellCheckingEnabledForBlock QString textBlock Q_UNUSED textBlock d m_textEdit d m_textEdit isEnabled d m_plainTextEdit isEnabled</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spellcheckdecorator.h</field>
    <field name="url">spellcheckdecorator_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QTextEdit QPlainTextEdit Sonnet Highlighter</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spellcheckdecorator.h</field>
    <field name="url">spellcheckdecorator_8h_source.html#l00042</field>
    <field name="keywords"></field>
    <field name="text">SONNETUI_EXPORT SpellCheckDecorator QObject Q_OBJECT SpellCheckDecorator QTextEdit textEdit SpellCheckDecorator QPlainTextEdit textEdit SpellCheckDecorator setHighlighter Highlighter highlighter Highlighter highlighter eventFilter QObject obj QEvent event Q_DECL_OVERRIDE isSpellCheckingEnabledForBlock QString textBlock Private Private d Q_DISABLE_COPY SpellCheckDecorator</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">speller.cpp</field>
    <field name="url">speller_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet SpellerPrivate SpellerPrivate settings SpellerPrivate init QString lang Loader loader Loader::openLoader settings loader settings language lang language isEmpty language settings defaultLanguage updateDict updateDict dict Loader::openLoader cachedSpeller language isValid settings modified recreateDict settings setModified dict recreateDict Loader::openLoader clearSpellerCache updateDict QSharedPointer&lt;SpellerPlugin&gt; dict Settings settings QString language Speller::Speller QString lang d new SpellerPrivate d init lang Speller::~Speller qCDebug SONNET_LOG_CORE d language d Speller::Speller Speller speller d new SpellerPrivate d language speller language d init d language Speller Speller::operator= Speller speller d language speller language d updateDict</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">speller.cpp</field>
    <field name="url">speller_8cpp_source.html#l00105</field>
    <field name="keywords"></field>
    <field name="text">Speller::isCorrect QString word d isValid d dict isCorrect word</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">speller.cpp</field>
    <field name="url">speller_8cpp_source.html#l00113</field>
    <field name="keywords"></field>
    <field name="text">Speller::isMisspelled QString word d isValid d dict isMisspelled word</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">speller.cpp</field>
    <field name="url">speller_8cpp_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">QStringList Speller::suggest QString word d isValid QStringList d dict suggest word</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">speller.cpp</field>
    <field name="url">speller_8cpp_source.html#l00129</field>
    <field name="keywords"></field>
    <field name="text">Speller::checkAndSuggest QString word QStringList suggestions d isValid d dict checkAndSuggest word suggestions</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">speller.cpp</field>
    <field name="url">speller_8cpp_source.html#l00138</field>
    <field name="keywords"></field>
    <field name="text">Speller::storeReplacement QString bad QString good d isValid d dict storeReplacement bad good</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">speller.cpp</field>
    <field name="url">speller_8cpp_source.html#l00147</field>
    <field name="keywords"></field>
    <field name="text">Speller::addToPersonal QString word d isValid d dict addToPersonal word</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">speller.cpp</field>
    <field name="url">speller_8cpp_source.html#l00155</field>
    <field name="keywords"></field>
    <field name="text">Speller::addToSession QString word d isValid d dict addToSession word</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">speller.cpp</field>
    <field name="url">speller_8cpp_source.html#l00163</field>
    <field name="keywords"></field>
    <field name="text">QString Speller::language d isValid QString d dict language Speller::save d settings d settings save Speller::restore d settings d settings restore d recreateDict</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">speller.cpp</field>
    <field name="url">speller_8cpp_source.html#l00186</field>
    <field name="keywords"></field>
    <field name="text">QStringList Speller::availableBackends Loader l Loader::openLoader l clients</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">speller.cpp</field>
    <field name="url">speller_8cpp_source.html#l00192</field>
    <field name="keywords"></field>
    <field name="text">QStringList Speller::availableLanguages Loader l Loader::openLoader l languages</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">speller.cpp</field>
    <field name="url">speller_8cpp_source.html#l00198</field>
    <field name="keywords"></field>
    <field name="text">QStringList Speller::availableLanguageNames Loader l Loader::openLoader l languageNames Speller::setDefaultLanguage QString lang d settings setDefaultLanguage lang d settings save QString Speller::defaultLanguage d settings defaultLanguage Speller::setDefaultClient QString client d settings setDefaultClient client d settings save QString Speller::defaultClient d settings defaultClient Speller::setAttribute Attribute attr b attr CheckUppercase d settings setCheckUppercase b SkipRunTogether d settings setSkipRunTogether b AutoDetectLanguage d settings setAutodetectLanguage b d settings save Speller::testAttribute Attribute attr attr CheckUppercase d settings checkUppercase SkipRunTogether d settings skipRunTogether AutoDetectLanguage d settings autodetectLanguage</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">speller.cpp</field>
    <field name="url">speller_8cpp_source.html#l00258</field>
    <field name="keywords"></field>
    <field name="text">Speller::isValid d dict</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">speller.cpp</field>
    <field name="url">speller_8cpp_source.html#l00263</field>
    <field name="keywords"></field>
    <field name="text">Speller::setLanguage QString lang d language lang d updateDict</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">speller.cpp</field>
    <field name="url">speller_8cpp_source.html#l00269</field>
    <field name="keywords"></field>
    <field name="text">QMap&lt;QString, QString&gt; Sonnet::Speller::availableDictionaries Loader l Loader::openLoader QStringList lst l languages QMap&lt;QString, QString&gt; langs Q_FOREACH QString tag lst langs insert l languageNameForCode tag tag langs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">speller.h</field>
    <field name="url">speller_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet SpellerPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">speller.h</field>
    <field name="url">speller_8h_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">SONNETCORE_EXPORT Speller Speller QString lang QString Speller Speller Speller speller Speller operator= Speller speller isValid setLanguage QString lang QString language isCorrect QString word isMisspelled QString word QStringList suggest QString word checkAndSuggest QString word QStringList suggestions storeReplacement QString bad QString good addToPersonal QString word addToSession QString word Attribute CheckUppercase SkipRunTogether AutoDetectLanguage save restore QStringList availableBackends QStringList availableLanguages QStringList availableLanguageNames QMap&lt;QString, QString&gt; availableDictionaries setDefaultLanguage QString lang QString defaultLanguage setDefaultClient QString client QString defaultClient setAttribute Attribute attr b testAttribute Attribute attr SpellerPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">spellerplugin.cpp</field>
    <field name="url">spellerplugin_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet SpellerPluginPrivate QString language SpellerPlugin::SpellerPlugin QString lang d new SpellerPluginPrivate d language lang SpellerPlugin::~SpellerPlugin d QString SpellerPlugin::language d language SpellerPlugin::isMisspelled QString word isCorrect word SpellerPlugin::checkAndSuggest QString word QStringList suggestions c isCorrect word c suggestions suggest word c</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">textbreaks.cpp</field>
    <field name="url">textbreaks_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet TextBreaksPrivate TextBreaksPrivate QString text TextBreaks::TextBreaks QString text d new TextBreaksPrivate setText text TextBreaks::~TextBreaks d QString TextBreaks::text d text TextBreaks::setText QString text d text text TextBreaks::Positions TextBreaks::wordBreaks QString text Positions breaks text isEmpty breaks QTextBoundaryFinder boundaryFinder QTextBoundaryFinder::Word text boundaryFinder position text length boundaryFinder boundaryReasons testFlag QTextBoundaryFinder::StartOfItem boundaryFinder toNextBoundary Position pos pos start boundaryFinder position end boundaryFinder toNextBoundary end pos length end pos start pos length breaks append pos boundaryFinder toNextBoundary breaks TextBreaks::Positions TextBreaks::sentenceBreaks QString text Positions breaks text isEmpty breaks QTextBoundaryFinder boundaryFinder QTextBoundaryFinder::Sentence text boundaryFinder position text length Position pos pos start boundaryFinder position end boundaryFinder toNextBoundary end pos length end pos start pos length breaks append pos breaks TextBreaks::Positions TextBreaks::wordBreaks wordBreaks d text TextBreaks::Positions TextBreaks::sentenceBreaks sentenceBreaks d text</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">tokenizer.cpp</field>
    <field name="url">tokenizer_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Sonnet BreakTokenizerPrivate Type Words Sentences BreakTokenizerPrivate Type s breakFinder new TextBreaks itemPosition cacheValid false type s inAddress false ignoreUppercase false BreakTokenizerPrivate breakFinder TextBreaks::Positions breaks invalidate shiftBreaks from offset replace pos len QString newWord QStringRef currentItem TextBreaks breakFinder QString buffer itemPosition cacheValid QStringRef last Type type inAddress ignoreUppercase hasNext QStringRef next setBuffer QString b invalidate buffer b regenerateCache TextBreaks::Positions cachedBreaks BreakTokenizerPrivate::invalidate cacheValid itemPosition BreakTokenizerPrivate::hasNext itemPosition breaks size TextBreaks::Positions BreakTokenizerPrivate::breaks cacheValid regenerateCache cachedBreaks BreakTokenizerPrivate::shiftBreaks from offset i i cachedBreaks size i cachedBreaks i start from cachedBreaks i start cachedBreaks i start offset BreakTokenizerPrivate::regenerateCache breakFinder buffer isEmpty cachedBreaks TextBreaks::Positions breakFinder setText buffer type Sentences cachedBreaks breakFinder sentenceBreaks type Words cachedBreaks breakFinder wordBreaks cacheValid QStringRef BreakTokenizerPrivate::next QStringRef block hasNext last block block itemPosition last QStringRef buffer breaks at itemPosition start breaks at itemPosition length last BreakTokenizerPrivate::replace pos len QString newWord buffer replace pos len newWord offset len newWord length cacheValid shiftBreaks pos offset WordTokenizer::WordTokenizer QString buffer d new BreakTokenizerPrivate BreakTokenizerPrivate Words setBuffer buffer WordTokenizer::~WordTokenizer d WordTokenizer::hasNext d hasNext WordTokenizer::setBuffer QString buffer d setBuffer buffer QStringRef WordTokenizer::next QStringRef n d next d inAddress n position d buffer n position isSpace d inAddress if d inAddress hasNext pos n position n length d buffer pos QLatin1Char d inAddress d buffer pos QLatin1Char d buffer pos QLatin1Char d buffer pos QLatin1Char d inAddress n QString WordTokenizer::buffer d buffer WordTokenizer::isUppercase QStringRef word i i word length i word at i isLetter word at i isUpper WordTokenizer::setIgnoreUppercase val d ignoreUppercase val WordTokenizer::replace pos len QString newWord d replace pos len newWord WordTokenizer::isSpellcheckable d last isNull d last isEmpty d last at isLetter d inAddress d ignoreUppercase isUppercase d last SentenceTokenizer::SentenceTokenizer QString buffer d new BreakTokenizerPrivate BreakTokenizerPrivate Sentences setBuffer buffer SentenceTokenizer::~SentenceTokenizer d SentenceTokenizer::hasNext d hasNext SentenceTokenizer::setBuffer QString buffer d setBuffer buffer QStringRef SentenceTokenizer::next d next QString SentenceTokenizer::buffer d buffer SentenceTokenizer::replace pos len QString newWord d replace pos len newWord</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ui_debug.cpp</field>
    <field name="url">ui__debug_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_LOGGING_CATEGORY SONNET_LOG_UI</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ui_debug.h</field>
    <field name="url">ui__debug_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_DECLARE_LOGGING_CATEGORY SONNET_LOG_UI</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">voikkoclient.cpp</field>
    <field name="url">voikkoclient_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">voikkoclient.cpp</field>
    <field name="url">voikkoclient_8cpp_source.html#l00026</field>
    <field name="keywords"></field>
    <field name="text">VoikkoClient::VoikkoClient QObject parent Sonnet Client parent qCDebug SONNET_VOIKKO dictionaries voikkoListSupportedSpellingLanguages Q_NULLPTR dictionaries i dictionaries i Q_NULLPTR i QString language QString::fromUtf8 dictionaries i m_supportedLanguages append language qCDebug SONNET_VOIKKO language voikkoFreeCstrArray dictionaries VoikkoClient::~VoikkoClient VoikkoClient::reliability Sonnet::SpellerPlugin VoikkoClient::createSpeller QString language VoikkoDict speller VoikkoDict language speller initFailed speller Q_NULLPTR speller QStringList VoikkoClient::languages m_supportedLanguages QString VoikkoClient::name QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">voikkoclient.h</field>
    <field name="url">voikkoclient_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">voikkoclient.h</field>
    <field name="url">voikkoclient_8h_source.html#l00027</field>
    <field name="keywords"></field>
    <field name="text">VoikkoClient Sonnet::Client Q_OBJECT Q_INTERFACES Sonnet::Client Q_PLUGIN_METADATA IID VoikkoClient QObject parent Q_NULLPTR VoikkoClient reliability Q_DECL_OVERRIDE Sonnet::SpellerPlugin createSpeller QString language Q_DECL_OVERRIDE QStringList languages Q_DECL_OVERRIDE QString name Q_DECL_OVERRIDE QStringList m_supportedLanguages</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">voikkodebug.cpp</field>
    <field name="url">voikkodebug_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_LOGGING_CATEGORY SONNET_VOIKKO QtWarningMsg Q_LOGGING_CATEGORY SONNET_VOIKKO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">voikkodebug.h</field>
    <field name="url">voikkodebug_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">Q_DECLARE_LOGGING_CATEGORY SONNET_VOIKKO</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">voikkodict.cpp</field>
    <field name="url">voikkodict_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QString replacement_bad_str Q_DECL_NOEXCEPT QStringLiteral QString replacement_good_str Q_DECL_NOEXCEPT QStringLiteral QString personal_words_str Q_DECL_NOEXCEPT QStringLiteral QString replacements_str Q_DECL_NOEXCEPT QStringLiteral QString getUserDictionaryPath Q_DECL_NOEXCEPT QString directory QStandardPaths::writableLocation QStandardPaths::GenericDataLocation directory QStandardPaths::writableLocation QStandardPaths::GenericDataLocation QSysInfo::windowsVersion WV_XP QSysInfo::windowsVersion WV_2003 directory QStringLiteral directory QStringLiteral directory QStringLiteral QDir path directory path mkpath path absolutePath path absoluteFilePath QStringLiteral addReplacementToNode QJsonObject languageNode QString bad QString good Q_DECL_NOEXCEPT QJsonObject pair pair replacement_bad_str good pair replacement_good_str bad replaceList languageNode replacements_str toArray replaceList append pair languageNode replacements_str replaceList addPersonalWordToNode QJsonObject languageNode QString word Q_DECL_NOEXCEPT arr languageNode personal_words_str toArray arr append word languageNode personal_words_str arr QJsonObject readJsonRootObject QString fileName Q_DECL_NOEXCEPT QFile userDictFile fileName userDictFile exists QJsonObject userDictFile open QIODevice::ReadOnly qCWarning SONNET_VOIKKO fileName qCWarning SONNET_VOIKKO userDictFile errorString QJsonObject QJsonDocument dictDoc QJsonDocument::fromJson userDictFile readAll userDictFile close dictDoc object VoikkoDictPrivate VoikkoHandle m_handle VoikkoDict q QSet&lt;QString&gt; m_sessionWords QSet&lt;QString&gt; m_personalWords QHash&lt;QString, QString&gt; m_replacements QString m_userDictionaryFilepath QVector&lt;wchar_t&gt; m_conversionBuffer VoikkoDictPrivate QString language VoikkoDict publicPart Q_DECL_NOEXCEPT q publicPart m_userDictionaryFilepath getUserDictionaryPath m_conversionBuffer error m_handle voikkoInit error language toUtf8 data error Q_NULLPTR qCWarning SONNET_VOIKKO error loadUserDictionary storePersonal QString personalWord QString bad QString QString good QString const Q_DECL_NOEXCEPT QFile userDictFile m_userDictionaryFilepath userDictFile open QIODevice::ReadWrite qCWarning SONNET_VOIKKO m_userDictionaryFilepath qCWarning SONNET_VOIKKO userDictFile errorString QJsonDocument dictDoc QJsonDocument::fromJson userDictFile readAll root readJsonRootObject m_userDictionaryFilepath languageNode root q language toObject personalWord isEmpty addReplacementToNode languageNode bad good addPersonalWordToNode languageNode personalWord root q language languageNode dictDoc setObject root userDictFile reset userDictFile write dictDoc toJson userDictFile close qCDebug SONNET_VOIKKO m_userDictionaryFilepath loadUserDictionary Q_DECL_NOEXCEPT root readJsonRootObject m_userDictionaryFilepath languageNode root q language toObject languageNode isEmpty loadUserWords languageNode loadUserReplacements languageNode QStringToWchar QString str Q_DECL_NOEXCEPT m_conversionBuffer resize str length size str toWCharArray m_conversionBuffer data m_conversionBuffer size m_conversionBuffer constData loadUserWords QJsonObject languageNode Q_DECL_NOEXCEPT words languageNode personal_words_str toArray Q_FOREACH word words m_personalWords insert word toString qCDebug SONNET_VOIKKO QStringLiteral arg words size loadUserReplacements QJsonObject languageNode Q_DECL_NOEXCEPT words languageNode replacements_str toArray Q_FOREACH pair words m_replacements pair toObject replacement_bad_str toString pair toObject replacement_good_str toString qCDebug SONNET_VOIKKO QStringLiteral arg words size VoikkoDict::VoikkoDict QString language Q_DECL_NOEXCEPT SpellerPlugin language d VoikkoDictPrivate language qCDebug SONNET_VOIKKO language VoikkoDict::~VoikkoDict VoikkoDict::isCorrect QString word d m_sessionWords contains word d m_personalWords contains word voikkoSpellUcs4 d m_handle d QStringToWchar word VOIKKO_SPELL_OK QStringList VoikkoDict::suggest QString word QStringList suggestions userDictPos d m_replacements constFind word userDictPos d m_replacements constEnd suggestions append userDictPos voikkoSuggestions voikkoSuggestUcs4 d m_handle d QStringToWchar word voikkoSuggestions suggestions i voikkoSuggestions i Q_NULLPTR i QString suggestion QString::fromWCharArray voikkoSuggestions i suggestions append suggestion qCDebug SONNET_VOIKKO word suggestions join QStringLiteral voikko_free_suggest_ucs4 voikkoSuggestions suggestions VoikkoDict::storeReplacement QString bad QString good qCDebug SONNET_VOIKKO bad good d m_replacements bad good d storePersonal QString bad good VoikkoDict::addToPersonal QString word qCDebug SONNET_VOIKKO word d m_personalWords insert word d storePersonal word VoikkoDict::addToSession QString word qCDebug SONNET_VOIKKO word d m_sessionWords insert word VoikkoDict::initFailed const Q_DECL_NOEXCEPT d m_handle</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">voikkodict.h</field>
    <field name="url">voikkodict_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">VoikkoClient VoikkoDictPrivate VoikkoDict Sonnet::SpellerPlugin VoikkoClient VoikkoDict isCorrect QString word Q_DECL_OVERRIDE QStringList suggest QString word Q_DECL_OVERRIDE storeReplacement QString bad QString good Q_DECL_OVERRIDE addToPersonal QString word Q_DECL_OVERRIDE addToSession QString word Q_DECL_OVERRIDE initFailed const Q_DECL_NOEXCEPT protected explicit VoikkoDict const QString language Q_DECL_NOEXCEPT private QScopedPointer VoikkoDictPrivate d</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">ASpellDict</field>
    <field name="url">classASpellDict.html</field>
    <field name="keywords">ASpellDict</field>
    <field name="text">Copyright C 2003 Zack Rusin This library is free software you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation either version 2.1 of the License or at your option any later version This library is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU Lesser General Public License for more details You should have received a copy of the GNU Lesser General Public License along with this library if not write to the Free Software Foundation Inc 51 Franklin Street Fifth Floor Boston MA 02110-1301 USA</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">HSpellDict</field>
    <field name="url">classHSpellDict.html</field>
    <field name="keywords">HSpellDict</field>
    <field name="text">Copyright C 2003 Zack Rusin Copyright C 2005 Mashrab Kuvatov This library is free software you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation either version 2.1 of the License or at your option any later version This library is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU Lesser General Public License for more details You should have received a copy of the GNU Lesser General Public License along with this library if not write to the Free Software Foundation Inc 51 Franklin Street Fifth Floor Boston MA 02110-1301 USA</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">NSSpellCheckerDict</field>
    <field name="url">classNSSpellCheckerDict.html</field>
    <field name="keywords">NSSpellCheckerDict</field>
    <field name="text">Copyright C 2015 Nick Shaforostoff This library is free software you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation either version 2.1 of the License or at your option any later version This library is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU Lesser General Public License for more details You should have received a copy of the GNU Lesser General Public License along with this library if not write to the Free Software Foundation Inc 51 Franklin Street Fifth Floor Boston MA 02110-1301 USA</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">VoikkoClient</field>
    <field name="url">classVoikkoClient.html</field>
    <field name="keywords">VoikkoClient</field>
    <field name="text">Copyright C 2015 Jesse Jaara This library is free software you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation either version 2.1 of the License or at your option any later version This library is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU Lesser General Public License for more details You should have received a copy of the GNU Lesser General Public License along with this library if not write to the Free Software Foundation Inc 51 Franklin Street Fifth Floor Boston MA 02110-1301 USA</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">VoikkoClient::VoikkoClient</field>
    <field name="args">(QObject *parent=Q_NULLPTR)</field>
    <field name="url">classVoikkoClient.html#a1b8c8ebe7549ab4f2dae4cc49e4191d3</field>
    <field name="keywords">VoikkoClient VoikkoClient::VoikkoClient VoikkoClient</field>
    <field name="text">Copyright C 2015 Jesse Jaara This library is free software you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation either version 2.1 of the License or at your option any later version This library is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU Lesser General Public License for more details You should have received a copy of the GNU Lesser General Public License along with this library if not write to the Free Software Foundation Inc 51 Franklin Street Fifth Floor Boston MA 02110-1301 USA</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">Sonnet</field>
    <field name="url">namespaceSonnet.html</field>
    <field name="keywords">Sonnet</field>
    <field name="text">highlighter.cpp dialog.cpp nsspellcheckerclient.h kspell_hunspellclient.h kspell_hspellclient.h kspell_aspellclient.h Copyright 2006 Zack Rusin Copyright C 2007 Zack Rusin Copyright C 2003 Zack Rusin Copyright C 2006 Laurent Montel Copyright C 2013 Martin Sandsmark Copyright C 2003 Zack Rusin Copyright C 2012 Martin Sandsmark Copyright C 2003 Zack Rusin This library is free software you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation either version 2.1 of the License or at your option any later version This library is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU Lesser General Public License for more details You should have received a copy of the GNU Lesser General Public License along with this library if not write to the Free Software Foundation Inc 51 Franklin Street Fifth Floor Boston MA 02110-1301 USA Copyright C 2003 Zack Rusin This library is free software you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation either version 2.1 of the License or at your option any later version This library is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU Lesser General Public License for more details You should have received a copy of the GNU Lesser General Public License along with this library if not write to the Free Software Foundation Inc 51 Franklin Street Fifth Floor Boston MA 02110-1301 USA Copyright C 2003 Zack Rusin Copyright C 2005 Mashrab Kuvatov This library is free software you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation either version 2.1 of the License or at your option any later version This library is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU Lesser General Public License for more details You should have received a copy of the GNU Lesser General Public License along with this library if not write to the Free Software Foundation Inc 51 Franklin Street Fifth Floor Boston MA 02110-1301 USA Copyright C 2009 Montel Laurent This library is free software you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation either version 2.1 of the License or at your option any later version This library is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU Lesser General Public License for more details You should have received a copy of the GNU Lesser General Public License along with this library if not write to the Free Software Foundation Inc 51 Franklin Street Fifth Floor Boston MA 02110-1301 USA Copyright C 2015 Nick Shaforostoff This library is free software you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation either version 2.1 of the License or at your option any later version This library is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU Lesser General Public License for more details You should have received a copy of the GNU Lesser General Public License along with this library if not write to the Free Software Foundation Inc 51 Franklin Street Fifth Floor Boston MA 02110-1301 USA Copyright C 2003 Zack Rusin Copyright C 2009-2010 Michel Ludwig This library is free software you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation either version 2.1 of the License or at your option any later version This library is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU Lesser General Public License for more details You should have received a copy of the GNU Lesser General Public License along with this library if not write to the Free Software Foundation Inc 51 Franklin Street Fifth Floor Boston MA 02110-1301 USA Copyright C 2004 Zack Rusin Copyright C 2006 Laurent Montel Copyright C 2013 Martin Sandsmark martin.sandsmark This library is free software you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation either version 2.1 of the License or at your option any later version This library is distributed in the hope that it will be useful but WITHOUT ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE See the GNU Lesser General Public License for more details You should have received a copy of the GNU Lesser General Public License along with this library if not write to the Free Software Foundation Inc 51 Franklin Street Fifth Floor Boston MA 02110-1301 USA</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Sonnet::BackgroundChecker</field>
    <field name="url">classSonnet_1_1BackgroundChecker.html</field>
    <field name="keywords">BackgroundChecker</field>
    <field name="text">You can use it as is by calling the checkText function or subclass it and reimplement getMoreText function The misspelling signal is emitted whenever a misspelled word is found The background checker stops right before emitting the signal So the parent has to call continueChecking function to resume the checking done signal is emitted when whole text is spell checked Zack Rusin class used for spell checking in the background</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Sonnet::BackgroundChecker::done</field>
    <field name="args">()</field>
    <field name="url">classSonnet_1_1BackgroundChecker.html#adcf58e3cbabc693d31b39e407277b0af</field>
    <field name="keywords">done Sonnet::BackgroundChecker::done Sonnet::BackgroundChecker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Sonnet::BackgroundChecker::misspelling</field>
    <field name="args">(const QString &amp;word, int start)</field>
    <field name="url">classSonnet_1_1BackgroundChecker.html#ada1c43c1777742bca1c70ef237d566e1</field>
    <field name="keywords">misspelling Sonnet::BackgroundChecker::misspelling Sonnet::BackgroundChecker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">Sonnet::BackgroundChecker::continueChecking</field>
    <field name="args">()</field>
    <field name="url">classSonnet_1_1BackgroundChecker.html#afa4464855f83f288a6b8f43246a34a65</field>
    <field name="keywords">continueChecking Sonnet::BackgroundChecker::continueChecking Sonnet::BackgroundChecker</field>
    <field name="text">The catcher is responsible for calling continueChecking function to resume checking</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::BackgroundChecker::setText</field>
    <field name="args">(const QString &amp;text)</field>
    <field name="url">classSonnet_1_1BackgroundChecker.html#acb3be2b9a53cbc1a640c026b3b7cae0b</field>
    <field name="keywords">setText Sonnet::BackgroundChecker::setText Sonnet::BackgroundChecker</field>
    <field name="text">It automatically invokes start() Use fetchMoreText() with start() to spell check a stream</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::BackgroundChecker::fetchMoreText</field>
    <field name="args">()</field>
    <field name="url">classSonnet_1_1BackgroundChecker.html#af13346c1e8c9e670a3bba9f72f844114</field>
    <field name="keywords">fetchMoreText Sonnet::BackgroundChecker::fetchMoreText Sonnet::BackgroundChecker</field>
    <field name="text">It will be called continuesly until it returns QString() in which case the done() signal is emitted Note the start parameter in mispelling() is not a combined position but a position in the last string returned by fetchMoreText You need to store the state in the derivatives</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::BackgroundChecker::finishedCurrentFeed</field>
    <field name="args">()</field>
    <field name="url">classSonnet_1_1BackgroundChecker.html#a35c6d826b79ee96994e3752f9a66fd8d</field>
    <field name="keywords">finishedCurrentFeed Sonnet::BackgroundChecker::finishedCurrentFeed Sonnet::BackgroundChecker</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Sonnet::ConfigDialog</field>
    <field name="url">classSonnet_1_1ConfigDialog.html</field>
    <field name="keywords">ConfigDialog</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Sonnet::ConfigDialog::configChanged</field>
    <field name="args">()</field>
    <field name="url">classSonnet_1_1ConfigDialog.html#a1b0c4f091e91539eb22623f86391892f</field>
    <field name="keywords">configChanged Sonnet::ConfigDialog::configChanged Sonnet::ConfigDialog</field>
    <field name="text">4.8.1</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Sonnet::ConfigDialog::languageChanged</field>
    <field name="args">(const QString &amp;language)</field>
    <field name="url">classSonnet_1_1ConfigDialog.html#a03ba297755c1e7a59e8904249beee96a</field>
    <field name="keywords">languageChanged Sonnet::ConfigDialog::languageChanged Sonnet::ConfigDialog</field>
    <field name="text">language the language which the user has selected 4.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::ConfigDialog::language</field>
    <field name="args">() const</field>
    <field name="url">classSonnet_1_1ConfigDialog.html#a19ebae3d804a2aa38f1e6ee08a5f0de6</field>
    <field name="keywords">language Sonnet::ConfigDialog::language Sonnet::ConfigDialog</field>
    <field name="text">4.8.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::ConfigDialog::setLanguage</field>
    <field name="args">(const QString &amp;language)</field>
    <field name="url">classSonnet_1_1ConfigDialog.html#afd56e7723f6a3b78093c38f23d7c14d9</field>
    <field name="keywords">setLanguage Sonnet::ConfigDialog::setLanguage Sonnet::ConfigDialog</field>
    <field name="text">This overrides the setting in the config file language the language which will be selected by default 4.1</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Sonnet::ConfigWidget</field>
    <field name="url">classSonnet_1_1ConfigWidget.html</field>
    <field name="keywords">ConfigWidget</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Sonnet::ConfigWidget::configChanged</field>
    <field name="args">()</field>
    <field name="url">classSonnet_1_1ConfigWidget.html#a085eaba06a565d2f8d2a401cee127c9d</field>
    <field name="keywords">configChanged Sonnet::ConfigWidget::configChanged Sonnet::ConfigWidget</field>
    <field name="text">4.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::ConfigWidget::language</field>
    <field name="args">() const</field>
    <field name="url">classSonnet_1_1ConfigWidget.html#a36a4bb0f0069b1d528ffd4de966c6cee</field>
    <field name="keywords">language Sonnet::ConfigWidget::language Sonnet::ConfigWidget</field>
    <field name="text">Returns an empty string if kdelibs was built without any spellchecking plugins the language currently selected in the language combobox 4.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::ConfigWidget::setLanguage</field>
    <field name="args">(const QString &amp;language)</field>
    <field name="url">classSonnet_1_1ConfigWidget.html#a171d07c64092b62efb025620a3da5b9b</field>
    <field name="keywords">setLanguage Sonnet::ConfigWidget::setLanguage Sonnet::ConfigWidget</field>
    <field name="text">This overrides the setting in the config file language the language which will be selected by default 4.1</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Sonnet::Dialog</field>
    <field name="url">classSonnet_1_1Dialog.html</field>
    <field name="keywords">Dialog</field>
    <field name="text">You can change buffer inside a slot connected to done() signal and spellcheck will continue with new data automatically</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Sonnet::Dialog::done</field>
    <field name="args">(const QString &amp;newBuffer)</field>
    <field name="url">classSonnet_1_1Dialog.html#a93df86a70b768e3e870864e98b58f6f4</field>
    <field name="keywords">done Sonnet::Dialog::done Sonnet::Dialog</field>
    <field name="text">Also emitted after stop() signal</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Sonnet::Dialog::languageChanged</field>
    <field name="args">(const QString &amp;language)</field>
    <field name="url">classSonnet_1_1Dialog.html#a9f2e7ab1cd465ca5ac4feff56c224d96</field>
    <field name="keywords">languageChanged Sonnet::Dialog::languageChanged Sonnet::Dialog</field>
    <field name="text">dictionary the new language the user selected 4.1</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Sonnet::Dialog::spellCheckStatus</field>
    <field name="args">(const QString &amp;)</field>
    <field name="url">classSonnet_1_1Dialog.html#a3f18775a997e3301be089cca63f93b3e</field>
    <field name="keywords">spellCheckStatus Sonnet::Dialog::spellCheckStatus Sonnet::Dialog</field>
    <field name="text">4.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Dialog::setSpellCheckContinuedAfterReplacement</field>
    <field name="args">(bool b)</field>
    <field name="url">classSonnet_1_1Dialog.html#a218c76682ddb29f0652b65b2042cd1fd</field>
    <field name="keywords">setSpellCheckContinuedAfterReplacement Sonnet::Dialog::setSpellCheckContinuedAfterReplacement Sonnet::Dialog</field>
    <field name="text">By default it is continued 4.4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Dialog::showProgressDialog</field>
    <field name="args">(int timeout=500)</field>
    <field name="url">classSonnet_1_1Dialog.html#a903ab663ec810c28e37e1e5b077bfc7c</field>
    <field name="keywords">showProgressDialog Sonnet::Dialog::showProgressDialog Sonnet::Dialog</field>
    <field name="text">By default no progress dialog is shown If the progress dialog is set to be shown no time consuming operation for example showing a notification message should be performed in a slot connected to the done signal as this might trigger the progress dialog unnecessarily timeout time after which the progress dialog should appear a negative value can be used to hide it 4.4</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Dialog::showSpellCheckCompletionMessage</field>
    <field name="args">(bool b=true)</field>
    <field name="url">classSonnet_1_1Dialog.html#ac22024b283a59a6f8dcab9e461c10938</field>
    <field name="keywords">showSpellCheckCompletionMessage Sonnet::Dialog::showSpellCheckCompletionMessage Sonnet::Dialog</field>
    <field name="text">By default it is not shown 4.4</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Sonnet::DictionaryComboBox</field>
    <field name="url">classSonnet_1_1DictionaryComboBox.html</field>
    <field name="keywords">DictionaryComboBox</field>
    <field name="text">Ingo Kloecker Tom Albers 4.2</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Sonnet::DictionaryComboBox::dictionaryChanged</field>
    <field name="args">(const QString &amp;dictionary)</field>
    <field name="url">classSonnet_1_1DictionaryComboBox.html#a8825e7d343eab3e19af66ceadc1e7e91</field>
    <field name="keywords">dictionaryChanged Sonnet::DictionaryComboBox::dictionaryChanged Sonnet::DictionaryComboBox</field>
    <field name="text">Either by user intervention or on setCurrentByDictionaryName() or on setCurrentByDictionary() For example</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Sonnet::DictionaryComboBox::dictionaryNameChanged</field>
    <field name="args">(const QString &amp;dictionaryName)</field>
    <field name="url">classSonnet_1_1DictionaryComboBox.html#aaf324618bd04c44a83c69f15232d03ef</field>
    <field name="keywords">dictionaryNameChanged Sonnet::DictionaryComboBox::dictionaryNameChanged Sonnet::DictionaryComboBox</field>
    <field name="text">Either by user intervention or on setCurrentByDictionaryName() or on setCurrentByDictionary() For example</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::DictionaryComboBox::DictionaryComboBox</field>
    <field name="args">(QWidget *parent=0)</field>
    <field name="url">classSonnet_1_1DictionaryComboBox.html#a68d0d603520d617db840ce8d280a3ab2</field>
    <field name="keywords">DictionaryComboBox Sonnet::DictionaryComboBox::DictionaryComboBox Sonnet::DictionaryComboBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::DictionaryComboBox::~DictionaryComboBox</field>
    <field name="args">()</field>
    <field name="url">classSonnet_1_1DictionaryComboBox.html#a6db955b7c05e9fa63d414f975616aad3</field>
    <field name="keywords">Sonnet::DictionaryComboBox::~DictionaryComboBox Sonnet::DictionaryComboBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::DictionaryComboBox::currentDictionary</field>
    <field name="args">() const</field>
    <field name="url">classSonnet_1_1DictionaryComboBox.html#afced9d3129bcaa8cafa0c7162e459969</field>
    <field name="keywords">currentDictionary Sonnet::DictionaryComboBox::currentDictionary Sonnet::DictionaryComboBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::DictionaryComboBox::currentDictionaryName</field>
    <field name="args">() const</field>
    <field name="url">classSonnet_1_1DictionaryComboBox.html#a4bbe8faee61e5db6bdb93bf992babc8d</field>
    <field name="keywords">currentDictionaryName Sonnet::DictionaryComboBox::currentDictionaryName Sonnet::DictionaryComboBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::DictionaryComboBox::reloadCombo</field>
    <field name="args">()</field>
    <field name="url">classSonnet_1_1DictionaryComboBox.html#aa18e4fc686eea8cbd575590abe7d40df</field>
    <field name="keywords">reloadCombo Sonnet::DictionaryComboBox::reloadCombo Sonnet::DictionaryComboBox</field>
    <field name="text">Remember to set the dictionary you want selected after calling this function</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::DictionaryComboBox::setCurrentByDictionary</field>
    <field name="args">(const QString &amp;dictionary)</field>
    <field name="url">classSonnet_1_1DictionaryComboBox.html#ac4ac30fffb83d845b55a9742255e83c8</field>
    <field name="keywords">setCurrentByDictionary Sonnet::DictionaryComboBox::setCurrentByDictionary Sonnet::DictionaryComboBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::DictionaryComboBox::setCurrentByDictionaryName</field>
    <field name="args">(const QString &amp;dictionaryName)</field>
    <field name="url">classSonnet_1_1DictionaryComboBox.html#a2d2c9e9fa97dee9350736062682de31f</field>
    <field name="keywords">setCurrentByDictionaryName Sonnet::DictionaryComboBox::setCurrentByDictionaryName Sonnet::DictionaryComboBox</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Sonnet::GuessLanguage</field>
    <field name="url">classSonnet_1_1GuessLanguage.html</field>
    <field name="keywords">GuessLanguage</field>
    <field name="text">GuessLanguage can determine the differnce between languages for a given string It is based off a perl script origionaly written by Maciej Ceglowski called Languid His script used a 2 part huristic to determine language First the text is is checked for the scripts it contains then for each set of languages useing those scripts a n-gram frequency model of a given language is compared to a model of the text The most similar language model is assumed to be the language If no language is found an empty string is returned Jacob Rideout 4.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::GuessLanguage::GuessLanguage</field>
    <field name="args">()</field>
    <field name="url">classSonnet_1_1GuessLanguage.html#a08a98b04a0d82b53fbbb9a5a080711a5</field>
    <field name="keywords">GuessLanguage Sonnet::GuessLanguage::GuessLanguage Sonnet::GuessLanguage</field>
    <field name="text">If text is specified it sets the text to be checked text the text that is to be checked</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::GuessLanguage::~GuessLanguage</field>
    <field name="args">()</field>
    <field name="url">classSonnet_1_1GuessLanguage.html#ab7a081b5004d899a33a5e0f28e44ce10</field>
    <field name="keywords">Sonnet::GuessLanguage::~GuessLanguage Sonnet::GuessLanguage</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::GuessLanguage::identify</field>
    <field name="args">(const QString &amp;text, const QStringList &amp;suggestions=QStringList()) const</field>
    <field name="url">classSonnet_1_1GuessLanguage.html#a2f6cab7ae11c6a438b4bc83df8327445</field>
    <field name="keywords">identify Sonnet::GuessLanguage::identify Sonnet::GuessLanguage</field>
    <field name="text">Three digits are returned only in the case where a 2 digit code does not exist If text isn t empty set the text to checked text to be identified list of the presumed languages of the text sorted by decreasing confidence Empty list means it is impossible to determine language with confidence required by setLimits</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::GuessLanguage::setLimits</field>
    <field name="args">(int maxItems, double minConfidence)</field>
    <field name="url">classSonnet_1_1GuessLanguage.html#ac8985f7a64cfeaacb7a6fb3e2ce03ec3</field>
    <field name="keywords">setLimits Sonnet::GuessLanguage::setLimits Sonnet::GuessLanguage</field>
    <field name="text">The confidence for each language is computed as difference between this and next language on the list normalized to 0-1 range Reasonable value to get fairly sure result is 0.1 Default is returning best guess without caring about confidence exactly as after call to setLimits(1,0) maxItems The list returned by identify() will never have more than maxItems item minConfidence The list will have only enough items for their summary confidence equal or exceed minConfidence</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Sonnet::Highlighter</field>
    <field name="url">classSonnet_1_1Highlighter.html</field>
    <field name="keywords">Highlighter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">Sonnet::Highlighter::activeChanged</field>
    <field name="args">(const QString &amp;description)</field>
    <field name="url">classSonnet_1_1Highlighter.html#a3b4c3abe8e7fffc20c4194b1ec822bc1</field>
    <field name="keywords">activeChanged Sonnet::Highlighter::activeChanged Sonnet::Highlighter</field>
    <field name="text">description is a i18n description of the new state with an optional reason</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">Sonnet::Highlighter::setCurrentLanguage</field>
    <field name="args">(const QString &amp;language)</field>
    <field name="url">classSonnet_1_1Highlighter.html#ae5d2f47549f730c3c5147d04c09e445c</field>
    <field name="keywords">setCurrentLanguage Sonnet::Highlighter::setCurrentLanguage Sonnet::Highlighter</field>
    <field name="text">language the language code for the new language to use</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">Sonnet::Highlighter::slotAutoDetection</field>
    <field name="args">()</field>
    <field name="url">classSonnet_1_1Highlighter.html#a0b57e3411e5e379b64f5ac9241506140</field>
    <field name="keywords">slotAutoDetection Sonnet::Highlighter::slotAutoDetection Sonnet::Highlighter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">Sonnet::Highlighter::slotRehighlight</field>
    <field name="args">()</field>
    <field name="url">classSonnet_1_1Highlighter.html#a327ac3e2664483cd6d35a51c92e15652</field>
    <field name="keywords">slotRehighlight Sonnet::Highlighter::slotRehighlight Sonnet::Highlighter</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Highlighter::Highlighter</field>
    <field name="args">(QPlainTextEdit *textEdit, const QColor &amp;col=QColor())</field>
    <field name="url">classSonnet_1_1Highlighter.html#a303d2c24f0cf8440c5fcc748e74d6760</field>
    <field name="keywords">Highlighter Sonnet::Highlighter::Highlighter Sonnet::Highlighter</field>
    <field name="text">textEdit col define spellchecking color 5.12</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Highlighter::addWordToDictionary</field>
    <field name="args">(const QString &amp;word)</field>
    <field name="url">classSonnet_1_1Highlighter.html#a21517dd2d10559d9d0e61c54e2041778</field>
    <field name="keywords">addWordToDictionary Sonnet::Highlighter::addWordToDictionary Sonnet::Highlighter</field>
    <field name="text">It will never be marked as misspelled again even after restarting the application word the word which will be added to the dictionary 4.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Highlighter::automatic</field>
    <field name="args">() const</field>
    <field name="url">classSonnet_1_1Highlighter.html#a99d31c65af02e97cc63f1d4c1e288df7</field>
    <field name="keywords">automatic Sonnet::Highlighter::automatic Sonnet::Highlighter</field>
    <field name="text">true if spell checking is automatically disabled if there s too many errors</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Highlighter::checkerEnabledByDefault</field>
    <field name="args">() const</field>
    <field name="url">classSonnet_1_1Highlighter.html#acd86315f0089f3f8e6046843df4ec18e</field>
    <field name="keywords">checkerEnabledByDefault Sonnet::Highlighter::checkerEnabledByDefault Sonnet::Highlighter</field>
    <field name="text">4.5</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Highlighter::currentLanguage</field>
    <field name="args">() const</field>
    <field name="url">classSonnet_1_1Highlighter.html#a56611e31f319c0b6b32d95b122c03943</field>
    <field name="keywords">currentLanguage Sonnet::Highlighter::currentLanguage Sonnet::Highlighter</field>
    <field name="text">the language code for the current language</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Highlighter::ignoreWord</field>
    <field name="args">(const QString &amp;word)</field>
    <field name="url">classSonnet_1_1Highlighter.html#a5dec3e5994ca2a7f036d2ebbcc1e71f2</field>
    <field name="keywords">ignoreWord Sonnet::Highlighter::ignoreWord Sonnet::Highlighter</field>
    <field name="text">This word will not be marked misspelled for this session It will again be marked as misspelled when creating new highlighters word the word which will be ignored 4.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Highlighter::isActive</field>
    <field name="args">() const</field>
    <field name="url">classSonnet_1_1Highlighter.html#a6583e71e0628e4f01e9a250a5ce84497</field>
    <field name="keywords">isActive Sonnet::Highlighter::isActive Sonnet::Highlighter</field>
    <field name="text">true if spell checking is active setActive()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Highlighter::isWordMisspelled</field>
    <field name="args">(const QString &amp;word)</field>
    <field name="url">classSonnet_1_1Highlighter.html#a6a390da58f4b0c4e9524705f3aef7329</field>
    <field name="keywords">isWordMisspelled Sonnet::Highlighter::isWordMisspelled Sonnet::Highlighter</field>
    <field name="text">word the word to be checked true if the given word is misspelled 4.1</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Highlighter::setActive</field>
    <field name="args">(bool active)</field>
    <field name="url">classSonnet_1_1Highlighter.html#a969a82b9add96f891c135fb253319ade</field>
    <field name="keywords">setActive Sonnet::Highlighter::setActive Sonnet::Highlighter</field>
    <field name="text">If active is true then spell checking is enabled otherwise it is disabled Note that you have to disable automatic de activation with setAutomatic() before you change the state of spell checking if you want to persistently enable/disable spell checking active if true then spell checking is enabled isActive() setAutomatic()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Highlighter::setAutomatic</field>
    <field name="args">(bool automatic)</field>
    <field name="url">classSonnet_1_1Highlighter.html#abfa334a6fafbefb78dab715b2ed3da94</field>
    <field name="keywords">setAutomatic Sonnet::Highlighter::setAutomatic Sonnet::Highlighter</field>
    <field name="text">automatic if true spell checking will be disabled if there s a significant amount of errors</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Highlighter::setDocument</field>
    <field name="args">(QTextDocument *document)</field>
    <field name="url">classSonnet_1_1Highlighter.html#acf85b6bb82c0f4bf31749aac1218abc6</field>
    <field name="keywords">setDocument Sonnet::Highlighter::setDocument Sonnet::Highlighter</field>
    <field name="text">document the new document to operate on</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Highlighter::setMisspelledColor</field>
    <field name="args">(const QColor &amp;color)</field>
    <field name="url">classSonnet_1_1Highlighter.html#aae0fd8fbc169eccc61291e3470be2b5e</field>
    <field name="keywords">setMisspelledColor Sonnet::Highlighter::setMisspelledColor Sonnet::Highlighter</field>
    <field name="text">4.2</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Highlighter::spellCheckerFound</field>
    <field name="args">() const</field>
    <field name="url">classSonnet_1_1Highlighter.html#aa3ee355dafa539fa11e62b08ed4b7fe0</field>
    <field name="keywords">spellCheckerFound Sonnet::Highlighter::spellCheckerFound Sonnet::Highlighter</field>
    <field name="text">true if spell checking is supported for the current language</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Highlighter::suggestionsForWord</field>
    <field name="args">(const QString &amp;word, int max=10)</field>
    <field name="url">classSonnet_1_1Highlighter.html#a87f224f14a982ce0aaf1a11ee60b1289</field>
    <field name="keywords">suggestionsForWord Sonnet::Highlighter::suggestionsForWord Sonnet::Highlighter</field>
    <field name="text">If the word is not misspelled the list will be empty word the misspelled word max at most this many suggestions will be returned If this is as many suggestions as the spell backend supports will be returned a list of suggested replacements for the word 4.1</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Sonnet::SpellCheckDecorator</field>
    <field name="url">classSonnet_1_1SpellCheckDecorator.html</field>
    <field name="keywords">SpellCheckDecorator</field>
    <field name="text">Aurélien Gâteau 5.0</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::SpellCheckDecorator::SpellCheckDecorator</field>
    <field name="args">(QTextEdit *textEdit)</field>
    <field name="url">classSonnet_1_1SpellCheckDecorator.html#aa1545896c70a5776212d93c38808dfa0</field>
    <field name="keywords">SpellCheckDecorator Sonnet::SpellCheckDecorator::SpellCheckDecorator Sonnet::SpellCheckDecorator</field>
    <field name="text">textEdit the QTextEdit in need of spell-checking It also is used as the QObject parent for the decorator</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::SpellCheckDecorator::SpellCheckDecorator</field>
    <field name="args">(QPlainTextEdit *textEdit)</field>
    <field name="url">classSonnet_1_1SpellCheckDecorator.html#a4d4cecb81df7c8b98ce110f8502206b8</field>
    <field name="keywords">SpellCheckDecorator Sonnet::SpellCheckDecorator::SpellCheckDecorator Sonnet::SpellCheckDecorator</field>
    <field name="text">textEdit the QPlainTextEdit in need of spell-checking It also is used as the QObject parent for the decorator 5.12</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::SpellCheckDecorator::highlighter</field>
    <field name="args">() const</field>
    <field name="url">classSonnet_1_1SpellCheckDecorator.html#abfdd9aaed44e664dbc65df26ef6d284c</field>
    <field name="keywords">highlighter Sonnet::SpellCheckDecorator::highlighter Sonnet::SpellCheckDecorator</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::SpellCheckDecorator::setHighlighter</field>
    <field name="args">(Highlighter *highlighter)</field>
    <field name="url">classSonnet_1_1SpellCheckDecorator.html#afa07c1e3b5546de630b49c0ca81e3c7f</field>
    <field name="keywords">setHighlighter Sonnet::SpellCheckDecorator::setHighlighter Sonnet::SpellCheckDecorator</field>
    <field name="text">SpellCheckDecorator does not take ownership of the new highlighter and you must manually delete the old highlighter</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::SpellCheckDecorator::isSpellCheckingEnabledForBlock</field>
    <field name="args">(const QString &amp;textBlock) const</field>
    <field name="url">classSonnet_1_1SpellCheckDecorator.html#a208fa901cf0dbbbc0af8c1c70ba5062f</field>
    <field name="keywords">isSpellCheckingEnabledForBlock Sonnet::SpellCheckDecorator::isSpellCheckingEnabledForBlock Sonnet::SpellCheckDecorator</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">Sonnet::Speller</field>
    <field name="url">classSonnet_1_1Speller.html</field>
    <field name="keywords">Speller</field>
    <field name="text">class used for actuall spell checking</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Speller::addToPersonal</field>
    <field name="args">(const QString &amp;word)</field>
    <field name="url">classSonnet_1_1Speller.html#aa35f6ca8d33fe19019ad887218d769b5</field>
    <field name="keywords">addToPersonal Sonnet::Speller::addToPersonal Sonnet::Speller</field>
    <field name="text">true on success</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Speller::addToSession</field>
    <field name="args">(const QString &amp;word)</field>
    <field name="url">classSonnet_1_1Speller.html#a1b6e1b121a5d853d48588f806907b3a0</field>
    <field name="keywords">addToSession Sonnet::Speller::addToSession Sonnet::Speller</field>
    <field name="text">true on success</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Speller::availableBackends</field>
    <field name="args">() const</field>
    <field name="url">classSonnet_1_1Speller.html#a24afea091a8da0ae8dd4e44235e584d3</field>
    <field name="keywords">availableBackends Sonnet::Speller::availableBackends Sonnet::Speller</field>
    <field name="text">ISpell ASpell</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Speller::availableDictionaries</field>
    <field name="args">() const</field>
    <field name="url">classSonnet_1_1Speller.html#a7eb69ef58abcd83082cbd74e23b5d3e3</field>
    <field name="keywords">availableDictionaries Sonnet::Speller::availableDictionaries Sonnet::Speller</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Speller::availableLanguageNames</field>
    <field name="args">() const</field>
    <field name="url">classSonnet_1_1Speller.html#a32a90f31cc8e7840e0dc9bdafc74454f</field>
    <field name="keywords">availableLanguageNames Sonnet::Speller::availableLanguageNames Sonnet::Speller</field>
    <field name="text">Note use availableDictionaries</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Speller::availableLanguages</field>
    <field name="args">() const</field>
    <field name="url">classSonnet_1_1Speller.html#af694389fff26c2455ea9c74f1973516e</field>
    <field name="keywords">availableLanguages Sonnet::Speller::availableLanguages Sonnet::Speller</field>
    <field name="text">Note use availableDictionaries</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Speller::checkAndSuggest</field>
    <field name="args">(const QString &amp;word, QStringList &amp;suggestions) const</field>
    <field name="url">classSonnet_1_1Speller.html#a15b6733b1192d09a76a90b2dd9ed749c</field>
    <field name="keywords">checkAndSuggest Sonnet::Speller::checkAndSuggest Sonnet::Speller</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Speller::isCorrect</field>
    <field name="args">(const QString &amp;word) const</field>
    <field name="url">classSonnet_1_1Speller.html#ad0d9c6ae88282db5f08d8cd1196c846f</field>
    <field name="keywords">isCorrect Sonnet::Speller::isCorrect Sonnet::Speller</field>
    <field name="text">false if the word is misspelled true otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Speller::isMisspelled</field>
    <field name="args">(const QString &amp;word) const</field>
    <field name="url">classSonnet_1_1Speller.html#a415bd52c9ac7fa8d7a48205e0cb1b526</field>
    <field name="keywords">isMisspelled Sonnet::Speller::isMisspelled Sonnet::Speller</field>
    <field name="text">true if the word is misspelled false otherwise</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Speller::isValid</field>
    <field name="args">() const</field>
    <field name="url">classSonnet_1_1Speller.html#ada180ab8c0f2ce73fff91e7841c9fac9</field>
    <field name="keywords">isValid Sonnet::Speller::isValid Sonnet::Speller</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Speller::language</field>
    <field name="args">() const</field>
    <field name="url">classSonnet_1_1Speller.html#a6d6fe880f1befd07007e0135b6358691</field>
    <field name="keywords">language Sonnet::Speller::language Sonnet::Speller</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Speller::setLanguage</field>
    <field name="args">(const QString &amp;lang)</field>
    <field name="url">classSonnet_1_1Speller.html#ae4950c87790d78127c7f02c346473a6c</field>
    <field name="keywords">setLanguage Sonnet::Speller::setLanguage Sonnet::Speller</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Speller::storeReplacement</field>
    <field name="args">(const QString &amp;bad, const QString &amp;good)</field>
    <field name="url">classSonnet_1_1Speller.html#ad63967f0235407286ad850248468e5df</field>
    <field name="keywords">storeReplacement Sonnet::Speller::storeReplacement Sonnet::Speller</field>
    <field name="text">true on success</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">Sonnet::Speller::suggest</field>
    <field name="args">(const QString &amp;word) const</field>
    <field name="url">classSonnet_1_1Speller.html#a63f5bb2fdd1a8758519d4614bec1bee5</field>
    <field name="keywords">suggest Sonnet::Speller::suggest Sonnet::Speller</field>
    <field name="text">list of all suggestions for the word</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">index</field>
    <field name="url">index.html</field>
    <field name="keywords"></field>
    <field name="text">Sonnet Multi-language spell checker Introduction Sonnet is a plugin-based spell checking library for Qt-based applications It supports several different plugins including HSpell Enchant ASpell and HUNSPELL It also supports automated language detection based on a combination of different algorithms The simplest way to use Sonnet in your application is to use the SpellCheckDecorator class on your QTextEdit Example</field>
  </doc>
</add>
