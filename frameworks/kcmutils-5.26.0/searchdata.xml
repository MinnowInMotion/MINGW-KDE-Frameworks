<?xml version="1.0" encoding="UTF-8"?>
<add>
  <doc>
    <field name="type">source</field>
    <field name="name">componentsdialog.cpp</field>
    <field name="url">componentsdialog_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">componentsdialog.cpp</field>
    <field name="url">componentsdialog_8cpp_source.html#l00035</field>
    <field name="keywords"></field>
    <field name="text">KSettings ComponentsDialog::ComponentsDialogPrivate QTreeWidget listview QFrame infowidget QLabel iconwidget QLabel commentwidget QLabel descriptionwidget QMap&lt;QTreeWidgetItem *, KPluginInfo *&gt; plugininfomap QList&lt;KPluginInfo *&gt; plugininfolist ComponentsDialog::ComponentsDialog QWidget parent name QDialog parent d ComponentsDialogPrivate setObjectName QString::fromLatin1 name setModal setWindowTitle i18n QVBoxLayout layout QVBoxLayout setLayout layout QWidget page QWidget layout addWidget page QDialogButtonBox buttonBox QDialogButtonBox buttonBox setStandardButtons QDialogButtonBox::Ok QDialogButtonBox::Apply QDialogButtonBox::Cancel connect buttonBox button QDialogButtonBox::Apply QAbstractButton::clicked ComponentsDialog::savePluginInfos connect buttonBox QDialogButtonBox::accepted ComponentsDialog::savePluginInfos connect buttonBox QDialogButtonBox::accepted QDialog::accept connect buttonBox QDialogButtonBox::rejected QDialog::reject layout addWidget buttonBox QHBoxLayout hbox QHBoxLayout page hbox setMargin d listview QTreeWidget page d listview setMinimumSize d infowidget QFrame page d infowidget setMinimumSize QVBoxLayout vbox QVBoxLayout d infowidget vbox setMargin d iconwidget QLabel d infowidget vbox addWidget d iconwidget vbox addWidget KSeparator d infowidget d commentwidget QLabel d infowidget d commentwidget setWordWrap vbox addWidget d commentwidget d descriptionwidget QLabel d infowidget d descriptionwidget setWordWrap vbox addWidget d descriptionwidget d listview setAcceptDrops connect d listview QTreeWidget::itemPressed ComponentsDialog::executed connect d listview QTreeWidget::itemActivated ComponentsDialog::executed connect d listview SIGNAL itemSelectionChanged QTreeWidgetItem SLOT executed QTreeWidgetItem ComponentsDialog::~ComponentsDialog d ComponentsDialog::addPluginInfo KPluginInfo info d plugininfolist append info ComponentsDialog::setPluginInfos QMap&lt;QString, KPluginInfo *&gt; plugininfos QMap&lt;QString, KPluginInfo *&gt;::ConstIterator it plugininfos begin it plugininfos end it d plugininfolist append it value ComponentsDialog::setPluginInfos QList&lt;KPluginInfo *&gt; plugins d plugininfolist plugins ComponentsDialog::show d listview clear d plugininfomap clear QList&lt;KPluginInfo *&gt;::ConstIterator it d plugininfolist constBegin it d plugininfolist constEnd it load QTreeWidgetItem item QTreeWidgetItem d listview QStringList name icon isEmpty item setIcon SmallIcon icon IconSize KIconLoader::Small item setCheckState isPluginEnabled Qt::Checked Qt::Unchecked d plugininfomap item QDialog::show ComponentsDialog::executed QTreeWidgetItem item item checked item checkState Qt::Checked KPluginInfo info d plugininfomap item info setPluginEnabled checked d iconwidget setPixmap SmallIcon info icon KIconLoader::SizeLarge d commentwidget setText info comment ComponentsDialog::savePluginInfos QList&lt;KPluginInfo *&gt;::ConstIterator it d plugininfolist constBegin it d plugininfolist constEnd it config isValid save config sync</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dialog.cpp</field>
    <field name="url">dialog_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">uint qHash KCModuleInfo info qHash info fileName KSettings</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dialog.cpp</field>
    <field name="url">dialog_8cpp_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">Dialog::Dialog QWidget parent KCMultiDialog new DialogPrivate this new KPageWidget parent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dialog.cpp</field>
    <field name="url">dialog_8cpp_source.html#l00054</field>
    <field name="keywords"></field>
    <field name="text">Dialog::Dialog QStringList components QWidget parent KCMultiDialog new DialogPrivate this new KPageWidget parent Q_D Dialog d components components Dialog::~Dialog</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dialog.cpp</field>
    <field name="url">dialog_8cpp_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">Dialog::setAllowComponentSelection selection d_func staticlistview selection Dialog::allowComponentSelection d_func staticlistview</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dialog.cpp</field>
    <field name="url">dialog_8cpp_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text">Dialog::setKCMArguments QStringList arguments Q_D Dialog d arguments arguments</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dialog.cpp</field>
    <field name="url">dialog_8cpp_source.html#l00081</field>
    <field name="keywords"></field>
    <field name="text">Dialog::setComponentBlacklist QStringList blacklist Q_D Dialog d componentBlacklist blacklist</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dialog.cpp</field>
    <field name="url">dialog_8cpp_source.html#l00087</field>
    <field name="keywords"></field>
    <field name="text">Dialog::addPluginInfos KPluginInfo::List plugininfos Q_D Dialog KPluginInfo::List::ConstIterator it plugininfos begin it plugininfos end it d registeredComponents append it pluginName it kcmServices isEmpty KService::Ptr service it service d kcmInfos KCModuleInfo service KService::Ptr service it kcmServices d kcmInfos KCModuleInfo service d plugininfos plugininfos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dialog.cpp</field>
    <field name="url">dialog_8cpp_source.html#l00116</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo::List Dialog::pluginInfos d_func plugininfos</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dialog.cpp</field>
    <field name="url">dialog_8cpp_source.html#l00121</field>
    <field name="keywords"></field>
    <field name="text">Dialog::showEvent QShowEvent Q_D Dialog d firstshow setUpdatesEnabled d kcmInfos d instanceServices d components isEmpty d kcmInfos d parentComponentsServices d components d createDialogFromServices d firstshow setUpdatesEnabled Dispatcher::syncConfiguration DialogPrivate::DialogPrivate Dialog parent KCMultiDialogPrivate parent staticlistview firstshow pluginStateDirty QSet&lt;KCModuleInfo&gt; DialogPrivate::instanceServices QString componentName QCoreApplication::instance applicationName registeredComponents append componentName KServiceGroup::Ptr service KServiceGroup::childGroup componentName QSet&lt;KCModuleInfo&gt; ret service service isValid KServiceGroup::List list service entries KServiceGroup::List::ConstIterator it list begin it list end it KSycocaEntry::Ptr p p isType KST_KService KService::Ptr service static_cast&lt;KService*&gt; p data ret KCModuleInfo service qWarning endl ret QSet&lt;KCModuleInfo&gt; DialogPrivate::parentComponentsServices QStringList kcdparents registeredComponents kcdparents QString constraint kcdparents join QStringLiteral constraint QStringLiteral constraint QStringLiteral QList&lt;KService::Ptr&gt; services KServiceTypeTrader::self query QStringLiteral constraint QSet&lt;KCModuleInfo&gt; ret KService::Ptr service services ret KCModuleInfo service ret DialogPrivate::isPluginForKCMEnabled KCModuleInfo moduleinfo KPluginInfo pinfo enabled QStringList parentComponents moduleinfo service property QStringLiteral toStringList QStringList::ConstIterator pcit parentComponents begin pcit parentComponents end pcit registeredComponents contains pcit enabled pinfo pluginName pcit pinfo load enabled pinfo isPluginEnabled enabled enabled DialogPrivate::isPluginImmutable KPluginInfo pinfo pinfo property QStringLiteral toBool KPageWidgetItem DialogPrivate::createPageItem KPageWidgetItem parentItem QString name QString comment QString iconName weight Q_Q Dialog QWidget page QWidget q QCheckBox checkBox QCheckBox i18n page QLabel iconLabel QLabel page QLabel commentLabel QLabel comment page commentLabel setTextFormat Qt::RichText QVBoxLayout layout QVBoxLayout page layout addWidget checkBox layout addWidget iconLabel layout addWidget commentLabel layout addStretch page setLayout layout KPageWidgetItem item KPageWidgetItem page name item setIcon QIcon::fromTheme iconName iconLabel setPixmap item icon pixmap item setProperty weight checkBoxForItem insert item checkBox KPageWidgetModel model qobject_cast KPageWidgetModel q pageWidget model Q_ASSERT model parentItem QModelIndex parentIndex model index parentItem siblingCount model rowCount parentIndex row row siblingCount row KPageWidgetItem siblingItem model item parentIndex child row siblingItem property toInt weight q insertPage siblingItem item row siblingCount q addSubPage parentItem item siblingCount model rowCount row row siblingCount row KPageWidgetItem siblingItem model item model index row siblingItem property toInt weight q insertPage siblingItem item row siblingCount q addPage item item DialogPrivate::parseGroupFile QString filename KConfig file filename KConfig::SimpleConfig QStringList groups file groupList QString group groups group isEmpty KConfigGroup conf file group QString parentId conf readEntry KPageWidgetItem parentItem pageItemForGroupId value parentId KPageWidgetItem item createPageItem parentItem conf readEntry conf readEntry conf readEntry conf readEntry pageItemForGroupId insert group item DialogPrivate::createDialogFromServices Q_Q Dialog QString setdlgpath QStandardPaths::locate QStandardPaths::DataLocation QCoreApplication::instance applicationName QStringLiteral setdlgpath isEmpty parseGroupFile setdlgpath QStringList dirs QStandardPaths::locateAll QStandardPaths::DataLocation QStringLiteral QStandardPaths::LocateDirectory Q_FOREACH QString dir dirs QStringList fileNames QDir dir entryList QStringList QStringLiteral Q_FOREACH QString file fileNames parseGroupFile dir QLatin1Char file KCModuleInfo info kcmInfos QStringList parentComponents info service property QStringLiteral toStringList blacklisted QString parentComponent parentComponents componentBlacklist contains parentComponent blacklisted blacklisted QString parentId info service property QStringLiteral QVariant::String toString KPageWidgetItem parent pageItemForGroupId value parentId parent foundPlugin KPluginInfo pinfo plugininfos pinfo service info service pinfo kcmServices count KService::Ptr service info service weight KPageWidgetItem item createPageItem service name service comment service icon weight connectItemCheckBox item pinfo pinfo isPluginEnabled foundPlugin foundPlugin KPageWidgetItem item q addModule info parent arguments KPluginInfo pinfo plugininfos pinfo kcmServices contains info service isEnabled isPluginForKCMEnabled info pinfo parent pinfo kcmServices count item setEnabled isEnabled KPluginInfo plugin pluginForItem value parent plugin isValid plugin pinfo qCritical plugin pluginName pinfo pluginName endl parent setCheckable q disconnect parent SIGNAL toggled q SLOT _k_updateEnabledState connectItemCheckBox parent pinfo isEnabled pluginForItem insert item pinfo item setCheckable isPluginImmutable pinfo item setChecked isEnabled q connect item SIGNAL toggled q SLOT _k_updateEnabledState KPageWidgetModel model qobject_cast KPageWidgetModel q pageWidget model QHash&lt;QString, KPageWidgetItem *&gt;::ConstIterator end pageItemForGroupId constEnd QHash&lt;QString, KPageWidgetItem *&gt;::ConstIterator it pageItemForGroupId constBegin it end it QModelIndex index model index it value KPluginInfo pinfo KPluginInfo p plugininfos p name it key pinfo p allowEmpty pinfo isValid allowEmpty pinfo property QStringLiteral toBool index child isValid allowEmpty q removePage it value connectItemCheckBox it value pinfo pinfo isPluginEnabled QObject::connect q button QDialogButtonBox::Ok SIGNAL clicked q SLOT _k_syncConfiguration QObject::connect q button QDialogButtonBox::Apply SIGNAL clicked q SLOT _k_syncConfiguration QObject::connect q SIGNAL configCommitted QByteArray q SLOT _k_reparseConfiguration QByteArray DialogPrivate::connectItemCheckBox KPageWidgetItem item KPluginInfo pinfo isEnabled Q_Q Dialog QCheckBox checkBox checkBoxForItem value item Q_ASSERT checkBox pluginForItem insert item pinfo item setCheckable isPluginImmutable pinfo item setChecked isEnabled checkBox setVisible isPluginImmutable pinfo checkBox setChecked isEnabled q connect item SIGNAL toggled q SLOT _k_updateEnabledState q connect item KPageWidgetItem::toggled checkBox QAbstractButton::setChecked q connect checkBox QAbstractButton::clicked item KPageWidgetItem::setChecked DialogPrivate::_k_syncConfiguration Q_Q Dialog QHash&lt;KPageWidgetItem *, KPluginInfo&gt;::Iterator endIt pluginForItem end QHash&lt;KPageWidgetItem *, KPluginInfo&gt;::Iterator it pluginForItem begin it endIt it KPageWidgetItem item it key KPluginInfo pinfo it value pinfo setPluginEnabled item isChecked pinfo save pluginStateDirty emit q pluginSelectionChanged pluginStateDirty Dispatcher::syncConfiguration DialogPrivate::_k_reparseConfiguration QByteArray a Dispatcher::reparseConfiguration QString::fromLatin1 a DialogPrivate::_k_clientChanged pluginStateDirty Q_Q Dialog q buttonBox button QDialogButtonBox::Apply setEnabled KCMultiDialogPrivate::_k_clientChanged DialogPrivate::_k_updateEnabledState enabled Q_Q Dialog KPageWidgetItem item qobject_cast KPageWidgetItem q sender item qWarning KPageWidgetModel model qobject_cast KPageWidgetModel q pageWidget model Q_ASSERT model QModelIndex index model index item index isValid qWarning KPluginInfo pinfo pluginForItem value item pinfo isValid qWarning pinfo isPluginEnabled enabled pluginStateDirty pluginStateDirty pluginStateDirty _k_clientChanged QModelIndex firstborn index child firstborn isValid index firstborn QStack&lt;QModelIndex&gt; stack index isValid KPageWidgetItem item model item index item setEnabled enabled firstborn index child firstborn isValid stack push index index firstborn index index sibling index row index isValid stack isEmpty index stack pop index index sibling index row</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dialog.h</field>
    <field name="url">dialog_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QList KPluginInfo KCModuleInfo KSettings DialogPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dialog.h</field>
    <field name="url">dialog_8h_source.html#l00073</field>
    <field name="keywords"></field>
    <field name="text">KCMUTILS_EXPORT Dialog KCMultiDialog PageNode Q_DECLARE_PRIVATE Dialog Q_OBJECT Dialog QWidget parent Dialog QStringList components QWidget parent Dialog addPluginInfos QList&lt;KPluginInfo&gt; plugininfos setKCMArguments QStringList arguments setComponentBlacklist QStringList blacklist setAllowComponentSelection allowSelection allowComponentSelection QList&lt;KPluginInfo&gt; pluginInfos showEvent QShowEvent Q_SIGNALS pluginSelectionChanged Q_PRIVATE_SLOT d_func _k_updateEnabledState Q_PRIVATE_SLOT d_func _k_syncConfiguration Q_PRIVATE_SLOT d_func _k_reparseConfiguration QByteArray</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dispatcher.cpp</field>
    <field name="url">dispatcher_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KSettings</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dispatcher.cpp</field>
    <field name="url">dispatcher_8cpp_source.html#l00028</field>
    <field name="keywords"></field>
    <field name="text">Dispatcher Q_GLOBAL_STATIC DispatcherPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dispatcher.cpp</field>
    <field name="url">dispatcher_8cpp_source.html#l00033</field>
    <field name="keywords"></field>
    <field name="text">void registerComponent const QString componentName QObject recv const slot Q_ASSERT componentName isEmpty d m_componentName recv componentName d m_componentInfo componentName slotList append ComponentInfo::Slot recv slot d m_componentInfo componentName count QObject::connect recv QObject::destroyed d DispatcherPrivate::unregisterComponent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dispatcher.cpp</field>
    <field name="url">dispatcher_8cpp_source.html#l00044</field>
    <field name="keywords"></field>
    <field name="text">KSharedConfig::Ptr configForComponentName QString componentName KSharedConfig::openConfig componentName QStringLiteral</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dispatcher.cpp</field>
    <field name="url">dispatcher_8cpp_source.html#l00050</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;QString&gt; componentNames QList&lt;QString&gt; names QMap&lt;QString, ComponentInfo&gt;::ConstIterator it d m_componentInfo constBegin it d m_componentInfo constEnd it count names append it key names</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dispatcher.cpp</field>
    <field name="url">dispatcher_8cpp_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">reparseConfiguration QString componentName d m_componentInfo contains componentName KSharedConfig::Ptr config configForComponentName componentName config reparseConfiguration ComponentInfo::Slot slot d m_componentInfo componentName slotList QMetaObject::invokeMethod slot first slot second</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dispatcher.cpp</field>
    <field name="url">dispatcher_8cpp_source.html#l00078</field>
    <field name="keywords"></field>
    <field name="text">syncConfiguration QMap&lt;QString, ComponentInfo&gt;::ConstIterator it d m_componentInfo constBegin it d m_componentInfo constEnd it KSharedConfig::Ptr config configForComponentName it key config sync DispatcherPrivate::unregisterComponent QObject obj m_componentName contains obj qWarning Q_FUNC_INFO QString name m_componentName obj m_componentName remove obj m_componentInfo name count Q_ASSERT m_componentInfo name count m_componentInfo name count m_componentInfo remove name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">dispatcher.h</field>
    <field name="url">dispatcher_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KSettings Dispatcher KCMUTILS_EXPORT registerComponent QString componentName QObject recv slot KCMUTILS_EXPORT KSharedConfig::Ptr configForComponentName QString componentName KCMUTILS_EXPORT QList&lt;QString&gt; componentNames KCMUTILS_EXPORT reparseConfiguration QString componentName KCMUTILS_EXPORT syncConfiguration</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmodulecontainer.cpp</field>
    <field name="url">kcmodulecontainer_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QList&lt;KCModuleProxy *&gt; ModuleList KCModuleContainer::KCModuleContainerPrivate KCModuleContainerPrivate QStringList mods modules mods tabWidget topLayout QStringList modules QTabWidget tabWidget KCModule::Buttons buttons QVBoxLayout topLayout ModuleList changedModules ModuleList allModules</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmodulecontainer.cpp</field>
    <field name="url">kcmodulecontainer_8cpp_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">KCModuleContainer::KCModuleContainer QWidget parent QString mods KCModule parent d new KCModuleContainerPrivate QString mods remove QLatin1Char split QLatin1Char QString SkipEmptyParts init</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmodulecontainer.cpp</field>
    <field name="url">kcmodulecontainer_8cpp_source.html#l00073</field>
    <field name="keywords"></field>
    <field name="text">KCModuleContainer::KCModuleContainer QWidget parent QStringList mods KCModule parent d new KCModuleContainerPrivate mods init KCModuleContainer::init d topLayout QVBoxLayout d topLayout setMargin d topLayout setObjectName QStringLiteral d tabWidget QTabWidget d tabWidget setObjectName QStringLiteral connect d tabWidget QTabWidget::currentChanged KCModuleContainer::tabSwitched d topLayout addWidget d tabWidget d modules isEmpty QStringList::const_iterator it d modules constBegin it d modules constEnd it addModule it</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmodulecontainer.cpp</field>
    <field name="url">kcmodulecontainer_8cpp_source.html#l00098</field>
    <field name="keywords"></field>
    <field name="text">KCModuleContainer::addModule QString module KService::Ptr service KService::serviceByDesktopName module service service noDisplay KCModuleProxy proxy KCModuleProxy service d tabWidget d allModules append proxy proxy setObjectName module d tabWidget addTab proxy QIcon::fromTheme proxy moduleInfo icon proxy moduleInfo moduleName replace QLatin1Char QStringLiteral d tabWidget setTabToolTip d tabWidget indexOf proxy proxy moduleInfo comment connect proxy SIGNAL changed KCModuleProxy SLOT moduleChanged KCModuleProxy setButtons buttons proxy realModule buttons KCModuleContainer::tabSwitched index KCModuleProxy mod KCModuleProxy d tabWidget widget index setQuickHelp mod quickHelp setAboutData mod aboutData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmodulecontainer.cpp</field>
    <field name="url">kcmodulecontainer_8cpp_source.html#l00139</field>
    <field name="keywords"></field>
    <field name="text">KCModuleContainer::save ModuleList list d changedModules ModuleList::iterator it it list begin it list end it save emit changed</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmodulecontainer.cpp</field>
    <field name="url">kcmodulecontainer_8cpp_source.html#l00151</field>
    <field name="keywords"></field>
    <field name="text">KCModuleContainer::load ModuleList list d allModules ModuleList::iterator it it list begin it list end it load emit changed</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmodulecontainer.cpp</field>
    <field name="url">kcmodulecontainer_8cpp_source.html#l00162</field>
    <field name="keywords"></field>
    <field name="text">KCModuleContainer::defaults ModuleList list d allModules ModuleList::iterator it it list begin it list end it defaults emit changed KCModuleContainer::moduleChanged KCModuleProxy proxy d changedModules append proxy d changedModules isEmpty emit changed</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmodulecontainer.cpp</field>
    <field name="url">kcmodulecontainer_8cpp_source.html#l00183</field>
    <field name="keywords"></field>
    <field name="text">KCModuleContainer::~KCModuleContainer d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmodulecontainer.h</field>
    <field name="url">kcmodulecontainer_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QWidget KCModuleProxy</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmodulecontainer.h</field>
    <field name="url">kcmodulecontainer_8h_source.html#l00049</field>
    <field name="keywords"></field>
    <field name="text">KCMUTILS_EXPORT KCModuleContainer KCModule Q_OBJECT KCModuleContainer QWidget parent QStringList mods KCModuleContainer QWidget parent QString mods QString addModule QString module KCModuleContainer save Q_DECL_OVERRIDE load Q_DECL_OVERRIDE defaults Q_DECL_OVERRIDE Q_SLOTS tabSwitched moduleChanged KCModuleProxy proxy init KCModuleContainerPrivate KCModuleContainerPrivate d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCModuleInfo::Private Private Private KService::Ptr QStringList keywords QString name icon lib handle fileName doc comment allLoaded weight KService::Ptr service loadAll KCModuleInfo::Private::Private KCModuleInfo::Private::Private KService::Ptr s allLoaded false service s service name service name comment service comment icon service icon fileName service entryPath lib service library keywords service keywords</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00075</field>
    <field name="keywords"></field>
    <field name="text">KCModuleInfo::KCModuleInfo d Private</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00080</field>
    <field name="keywords"></field>
    <field name="text">KCModuleInfo::KCModuleInfo QString desktopFile d Private KService::serviceByStorageId desktopFile</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00085</field>
    <field name="keywords"></field>
    <field name="text">KCModuleInfo::KCModuleInfo KService::Ptr moduleInfo d Private moduleInfo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00090</field>
    <field name="keywords"></field>
    <field name="text">KCModuleInfo::KCModuleInfo KCModuleInfo rhs d Private rhs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00096</field>
    <field name="keywords"></field>
    <field name="text">KCModuleInfo KCModuleInfo::operator= KCModuleInfo rhs d rhs d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00102</field>
    <field name="keywords"></field>
    <field name="text">KCModuleInfo::operator== KCModuleInfo rhs d name rhs d name d lib rhs d lib d fileName rhs d fileName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00107</field>
    <field name="keywords"></field>
    <field name="text">KCModuleInfo::operator!= KCModuleInfo rhs operator== rhs</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00112</field>
    <field name="keywords"></field>
    <field name="text">KCModuleInfo::~KCModuleInfo d KCModuleInfo::Private::loadAll allLoaded service doc service property QStringLiteral QVariant::String toString doc isEmpty doc service property QStringLiteral QVariant::String toString QVariant tmp service property QStringLiteral QVariant::Int weight tmp isValid tmp toInt tmp service property QStringLiteral QVariant::String handle tmp isValid tmp toString lib</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00141</field>
    <field name="keywords"></field>
    <field name="text">QString KCModuleInfo::fileName d fileName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00146</field>
    <field name="keywords"></field>
    <field name="text">QStringList KCModuleInfo::keywords d keywords</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00151</field>
    <field name="keywords"></field>
    <field name="text">QString KCModuleInfo::moduleName d name</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00156</field>
    <field name="keywords"></field>
    <field name="text">KService::Ptr KCModuleInfo::service d service</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00161</field>
    <field name="keywords"></field>
    <field name="text">QString KCModuleInfo::comment d comment</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00166</field>
    <field name="keywords"></field>
    <field name="text">QString KCModuleInfo::icon d icon</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00171</field>
    <field name="keywords"></field>
    <field name="text">QString KCModuleInfo::library d lib</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00176</field>
    <field name="keywords"></field>
    <field name="text">QString KCModuleInfo::docPath d allLoaded d loadAll d doc</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00185</field>
    <field name="keywords"></field>
    <field name="text">QString KCModuleInfo::handle d allLoaded d loadAll d handle</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.cpp</field>
    <field name="url">kcmoduleinfo_8cpp_source.html#l00194</field>
    <field name="keywords"></field>
    <field name="text">KCModuleInfo::weight d allLoaded d loadAll d weight</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.h</field>
    <field name="url">kcmoduleinfo_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QString QStringList</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleinfo.h</field>
    <field name="url">kcmoduleinfo_8h_source.html#l00047</field>
    <field name="keywords"></field>
    <field name="text">KCMUTILS_EXPORT KCModuleInfo KCModuleInfo QString desktopFile KCModuleInfo KService::Ptr moduleInfo KCModuleInfo KCModuleInfo rhs KCModuleInfo KCModuleInfo operator= KCModuleInfo rhs operator== KCModuleInfo rhs operator!= KCModuleInfo rhs KCModuleInfo QString fileName QStringList keywords QString moduleName KService::Ptr service QString comment QString icon QString docPath QString library QString handle weight Private Private d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleloader.cpp</field>
    <field name="url">kcmoduleloader_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCModuleLoader KCMError KCModule KCMError QString msg QString details QWidget parent KCModule parent QVBoxLayout topLayout QVBoxLayout QLabel lab QLabel msg lab setWordWrap topLayout addWidget lab lab QLabel details lab setWordWrap topLayout addWidget lab</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleloader.cpp</field>
    <field name="url">kcmoduleloader_8cpp_source.html#l00064</field>
    <field name="keywords"></field>
    <field name="text">KCModule KCModuleLoader::loadModule QString module ErrorReporting report QWidget parent QStringList args loadModule KCModuleInfo module report parent args</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleloader.cpp</field>
    <field name="url">kcmoduleloader_8cpp_source.html#l00069</field>
    <field name="keywords"></field>
    <field name="text">KCModule KCModuleLoader::loadModule KCModuleInfo mod ErrorReporting report QWidget parent QStringList args mod service reportError report i18n mod moduleName i18n mod fileName parent mod service noDisplay reportError report i18n mod moduleName i18n parent mod library isEmpty QString error QVariantList args2 QString arg args args2 arg KCModule module mod service createInstance KCModule parent args2 error module module KPluginLoader loader KPluginLoader::findPlugin QLatin1String mod service library KPluginFactory factory loader factory factory qWarning loader errorString KQuickAddons::ConfigModule cm factory create KQuickAddons::ConfigModule cm qWarning loader fileName module KCModuleQml cm parent args2 module QLibrary lib KPluginLoader::findPlugin mod library lib load KCModule QWidget QByteArray factorymethod factorymethod mod handle toLatin1 create KCModule QWidget lib resolve factorymethod constData create create parent mod handle toLatin1 constData qFatal factorymethod constData qWarning lib unload reportError report error QString parent reportError report i18n mod moduleName i18n mod fileName parent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleloader.cpp</field>
    <field name="url">kcmoduleloader_8cpp_source.html#l00144</field>
    <field name="keywords"></field>
    <field name="text">KCModuleLoader::unloadModule KCModuleInfo mod KPluginLoader loader mod library loader unload</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleloader.cpp</field>
    <field name="url">kcmoduleloader_8cpp_source.html#l00151</field>
    <field name="keywords"></field>
    <field name="text">KCModule KCModuleLoader::reportError ErrorReporting report QString text QString details QWidget parent QString realDetails details realDetails isNull realDetails i18n report KCModuleLoader::Dialog KMessageBox::detailedError parent text realDetails report KCModuleLoader::Inline KCMError text realDetails parent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleloader.h</field>
    <field name="url">kcmoduleloader_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QWidget</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleloader.h</field>
    <field name="url">kcmoduleloader_8h_source.html#l00043</field>
    <field name="keywords"></field>
    <field name="text">KCModuleLoader</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleloader.h</field>
    <field name="url">kcmoduleloader_8h_source.html#l00048</field>
    <field name="keywords"></field>
    <field name="text">ErrorReporting</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleloader.h</field>
    <field name="url">kcmoduleloader_8h_source.html#l00052</field>
    <field name="keywords"></field>
    <field name="text">None</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleloader.h</field>
    <field name="url">kcmoduleloader_8h_source.html#l00057</field>
    <field name="keywords"></field>
    <field name="text">Inline</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleloader.h</field>
    <field name="url">kcmoduleloader_8h_source.html#l00061</field>
    <field name="keywords"></field>
    <field name="text">Dialog</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleloader.h</field>
    <field name="url">kcmoduleloader_8h_source.html#l00065</field>
    <field name="keywords"></field>
    <field name="text">Both KCMUTILS_EXPORT KCModule loadModule KCModuleInfo module ErrorReporting report QWidget parent QStringList args QStringList KCMUTILS_EXPORT KCModule loadModule QString module ErrorReporting report QWidget parent QStringList args QStringList KCMUTILS_EXPORT unloadModule KCModuleInfo mod KCMUTILS_EXPORT KCModule reportError ErrorReporting report QString text QString details QWidget parent</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">KCModule KCModuleProxy::realModule Q_D KCModuleProxy d kcm QApplication::setOverrideCursor Qt::WaitCursor KCModuleProxyPrivate d loadModule QApplication::restoreOverrideCursor d kcm KCModuleProxyPrivate::loadModule topLayout topLayout QVBoxLayout parent topLayout setMargin QString name modInfo handle name replace QLatin1Char QLatin1Char name replace QLatin1Char QLatin1Char dbusService QLatin1String name name replace QLatin1Char QLatin1Char dbusPath QLatin1String name QDBusConnection::sessionBus registerService dbusService bogusOccupier kcm KCModuleLoader::loadModule modInfo KCModuleLoader::Inline parent args QObject::connect kcm SIGNAL changed parent SLOT _k_moduleChanged QObject::connect kcm SIGNAL destroyed parent SLOT _k_moduleDestroyed QObject::connect kcm KCModule::quickHelpChanged parent KCModuleProxy::quickHelpChanged parent setWhatsThis kcm quickHelp kcm layout kcm layout setMargin topLayout addWidget kcm modInfo handle isEmpty QDBusConnection::sessionBus registerObject dbusPath KSettingsWidgetAdaptor parent QDBusConnection::ExportAllSlots rootInfo kcm useRootOnlyMessage KUser isSuperUser QDBusInterface proxy dbusService dbusPath QStringLiteral QDBusReply&lt;QString&gt; reply proxy call QStringLiteral reply isValid QObject::connect QDBusConnection::sessionBus interface SIGNAL serviceOwnerChanged QString QString QString parent SLOT _k_ownerChanged QString QString QString kcm KCModuleLoader::reportError KCModuleLoader::Inline i18nc reply value QStringLiteral parent topLayout addWidget kcm bogusOccupier loadModule KCModuleProxyPrivate::_k_ownerChanged QString service QString oldOwner QString service dbusService oldOwner isEmpty kcm kcm Q_Q KCModuleProxy q realModule Q_ASSERT kcm kcm show</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00191</field>
    <field name="keywords"></field>
    <field name="text">KCModuleProxy::showEvent QShowEvent ev Q_D KCModuleProxy void realModule d kcm d kcm showEvent ev QWidget::showEvent ev</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00206</field>
    <field name="keywords"></field>
    <field name="text">KCModuleProxy::~KCModuleProxy deleteClient KCModuleLoader::unloadModule moduleInfo d_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00214</field>
    <field name="keywords"></field>
    <field name="text">KCModuleProxy::deleteClient Q_D KCModuleProxy d kcm d kcm KCModuleProxyPrivate::_k_moduleChanged c changed c Q_Q KCModuleProxy changed c emit q changed c emit q changed q KCModuleProxyPrivate::_k_moduleDestroyed kcm</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00238</field>
    <field name="keywords"></field>
    <field name="text">KCModuleProxy::KCModuleProxy KService::Ptr service QWidget parent QStringList args QWidget parent d_ptr new KCModuleProxyPrivate this KCModuleInfo service args d_ptr q_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00245</field>
    <field name="keywords"></field>
    <field name="text">KCModuleProxy::KCModuleProxy KCModuleInfo info QWidget parent QStringList args QWidget parent d_ptr new KCModuleProxyPrivate this info args d_ptr q_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00252</field>
    <field name="keywords"></field>
    <field name="text">KCModuleProxy::KCModuleProxy QString serviceName QWidget parent QStringList args QWidget parent d_ptr new KCModuleProxyPrivate this KCModuleInfo serviceName args d_ptr q_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00259</field>
    <field name="keywords"></field>
    <field name="text">KCModuleProxy::load Q_D KCModuleProxy realModule d kcm load d _k_moduleChanged</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00268</field>
    <field name="keywords"></field>
    <field name="text">KCModuleProxy::save Q_D KCModuleProxy d changed realModule d kcm save d _k_moduleChanged</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00277</field>
    <field name="keywords"></field>
    <field name="text">KCModuleProxy::defaults Q_D KCModuleProxy realModule d kcm defaults</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00285</field>
    <field name="keywords"></field>
    <field name="text">QString KCModuleProxy::quickHelp realModule realModule quickHelp QString</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00290</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KCModuleProxy::aboutData realModule realModule aboutData</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00295</field>
    <field name="keywords"></field>
    <field name="text">KCModule::Buttons KCModuleProxy::buttons realModule realModule buttons KCModule::Buttons KCModule::Help KCModule::Default KCModule::Apply</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00303</field>
    <field name="keywords"></field>
    <field name="text">KCModuleProxy::changed Q_D KCModuleProxy d changed</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00309</field>
    <field name="keywords"></field>
    <field name="text">KCModuleInfo KCModuleProxy::moduleInfo Q_D KCModuleProxy d modInfo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00315</field>
    <field name="keywords"></field>
    <field name="text">QString KCModuleProxy::dbusService Q_D KCModuleProxy d dbusService</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00321</field>
    <field name="keywords"></field>
    <field name="text">QString KCModuleProxy::dbusPath Q_D KCModuleProxy d dbusPath</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.cpp</field>
    <field name="url">kcmoduleproxy_8cpp_source.html#l00327</field>
    <field name="keywords"></field>
    <field name="text">QSize KCModuleProxy::minimumSizeHint QWidget::minimumSizeHint</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.h</field>
    <field name="url">kcmoduleproxy_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KAboutData KCModuleInfo KCModuleProxyPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleproxy.h</field>
    <field name="url">kcmoduleproxy_8h_source.html#l00066</field>
    <field name="keywords"></field>
    <field name="text">KCMUTILS_EXPORT KCModuleProxy QWidget Q_DECLARE_PRIVATE KCModuleProxy Q_OBJECT KCModuleProxy KCModuleInfo info QWidget parent QStringList args QStringList KCModuleProxy QString serviceName QWidget parent QStringList args QStringList KCModuleProxy KService::Ptr service QWidget parent QStringList args QStringList KCModuleProxy load save QString quickHelp KAboutData aboutData KCModule::Buttons buttons changed KCModule realModule KCModuleInfo moduleInfo QString dbusService QString dbusPath QSize minimumSizeHint Q_DECL_OVERRIDE Q_SLOTS defaults deleteClient Q_SIGNALS changed state changed KCModuleProxy mod childClosed quickHelpChanged showEvent QShowEvent Q_DECL_OVERRIDE KCModuleProxyPrivate d_ptr Q_PRIVATE_SLOT d_func _k_moduleChanged Q_PRIVATE_SLOT d_func _k_moduleDestroyed Q_PRIVATE_SLOT d_func _k_ownerChanged QString service QString oldOwner QString newOwner</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmoduleqml.cpp</field>
    <field name="url">kcmoduleqml_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCModuleQmlPrivate KCModuleQmlPrivate KQuickAddons::ConfigModule cm quickWidget Q_NULLPTR configModule cm QQuickWidget quickWidget KQuickAddons::ConfigModule configModule KCModuleQml::KCModuleQml KQuickAddons::ConfigModule configModule QWidget parent QVariantList args KCModule parent args d new KCModuleQmlPrivate configModule connect configModule KQuickAddons::ConfigModule::quickHelpChanged KCModuleQml::quickHelpChanged setButtons KCModule::Buttons d configModule buttons connect configModule KQuickAddons::ConfigModule::buttonsChanged setButtons KCModule::Buttons d configModule buttons d configModule needsSave emit changed connect configModule KQuickAddons::ConfigModule::needsSaveChanged emit changed d configModule needsSave setNeedsAuthorization d configModule needsAuthorization connect configModule KQuickAddons::ConfigModule::needsAuthorizationChanged setNeedsAuthorization d configModule needsAuthorization setRootOnlyMessage d configModule rootOnlyMessage setUseRootOnlyMessage d configModule useRootOnlyMessage connect configModule KQuickAddons::ConfigModule::rootOnlyMessageChanged setRootOnlyMessage d configModule rootOnlyMessage connect configModule KQuickAddons::ConfigModule::useRootOnlyMessageChanged setUseRootOnlyMessage d configModule useRootOnlyMessage d configModule authActionName isEmpty setAuthAction KAuth::Action d configModule authActionName connect configModule KQuickAddons::ConfigModule::authActionNameChanged setAuthAction d configModule authActionName setFocusPolicy Qt::StrongFocus KCModuleQml::~KCModuleQml d KCModuleQml::showEvent QShowEvent event d quickWidget d configModule mainUi KCModule::showEvent event QVBoxLayout layout QVBoxLayout d quickWidget QQuickWidget d configModule engine d quickWidget setResizeMode QQuickWidget::SizeRootObjectToView d quickWidget setClearColor QGuiApplication::palette window color connect qApp QGuiApplication::paletteChanged d quickWidget setClearColor QGuiApplication::palette window color QQmlComponent component QQmlComponent d configModule engine component setData QByteArrayLiteral QUrl QObject root component create d quickWidget setContent QUrl component root d configModule mainUi setParentItem d quickWidget rootObject QQmlExpression expr d configModule engine rootContext d configModule mainUi QStringLiteral QQmlProperty prop d configModule mainUi QStringLiteral prop write expr evaluate layout addWidget d quickWidget KCModule::showEvent event KCModuleQml::focusInEvent QFocusEvent event Q_UNUSED event d quickWidget setFocus QSize KCModuleQml::sizeHint d configModule mainUi QSize QSize d configModule mainUi implicitWidth d configModule mainUi implicitHeight QString KCModuleQml::quickHelp d configModule quickHelp KAboutData KCModuleQml::aboutData d configModule aboutData KCModuleQml::load d configModule load KCModuleQml::save d configModule save d configModule setNeedsSave KCModuleQml::defaults d configModule defaults</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmultidialog.cpp</field>
    <field name="url">kcmultidialog_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCMultiDialogPrivate::resolveChanges KCModuleProxy currentProxy Q_Q KCMultiDialog currentProxy currentProxy changed queryUser KMessageBox::warningYesNoCancel q i18n i18n KStandardGuiItem::apply KStandardGuiItem::discard KStandardGuiItem::cancel queryUser KMessageBox::Yes moduleSave currentProxy KMessageBox::No currentProxy load KMessageBox::Cancel Q_ASSERT KCMultiDialogPrivate::_k_slotCurrentPageChanged KPageWidgetItem current KPageWidgetItem previous Q_Q KCMultiDialog q blockSignals q setCurrentPage previous KCModuleProxy previousModule i i modules count i modules i item previous previousModule modules i kcm resolveChanges previousModule q setCurrentPage current q blockSignals _k_clientChanged KCMultiDialogPrivate::_k_clientChanged Q_Q KCMultiDialog KCModuleProxy activeModule i i modules count i modules i item q currentPage activeModule modules i kcm change activeModule change activeModule changed QPushButton applyButton q buttonBox button QDialogButtonBox::Apply applyButton q disconnect applyButton QAbstractButton::clicked q KCMultiDialog::slotApplyClicked applyButton findChild KAuth::ObjectDecorator applyButton setEnabled change QPushButton okButton q buttonBox button QDialogButtonBox::Ok okButton q disconnect okButton QAbstractButton::clicked q KCMultiDialog::slotOkClicked okButton findChild KAuth::ObjectDecorator activeModule realModule needsAuthorization applyButton KAuth::ObjectDecorator decorator KAuth::ObjectDecorator applyButton decorator setAuthAction activeModule realModule authAction activeModule realModule authAction setParentWidget activeModule realModule q connect decorator KAuth::ObjectDecorator::authorized q KCMultiDialog::slotApplyClicked okButton KAuth::ObjectDecorator decorator KAuth::ObjectDecorator okButton decorator setAuthAction activeModule realModule authAction activeModule realModule authAction setParentWidget activeModule realModule q connect decorator KAuth::ObjectDecorator::authorized q KCMultiDialog::slotOkClicked applyButton q connect applyButton QAbstractButton::clicked q KCMultiDialog::slotApplyClicked applyButton findChild KAuth::ObjectDecorator okButton q connect okButton QAbstractButton::clicked q KCMultiDialog::slotOkClicked okButton findChild KAuth::ObjectDecorator QPushButton resetButton q buttonBox button QDialogButtonBox::Reset resetButton resetButton setEnabled change QPushButton applyButton q buttonBox button QDialogButtonBox::Apply applyButton applyButton setEnabled change activeModule QPushButton helpButton q buttonBox button QDialogButtonBox::Help helpButton helpButton setEnabled activeModule buttons KCModule::Help QPushButton defaultButton q buttonBox button QDialogButtonBox::RestoreDefaults defaultButton defaultButton setEnabled activeModule buttons KCModule::Default KCMultiDialogPrivate::_k_updateHeader use QString message Q_Q KCMultiDialog KPageWidgetItem item q currentPage KCModuleProxy kcm qobject_cast KCModuleProxy item widget use item setHeader QStringLiteral kcm moduleInfo comment QStringLiteral message QStringLiteral item setIcon KDE::icon kcm moduleInfo icon QStringList QStringLiteral item setHeader kcm moduleInfo comment item setIcon QIcon::fromTheme kcm moduleInfo icon KCMultiDialogPrivate::init Q_Q KCMultiDialog q setFaceType KPageDialog::Auto q setWindowTitle i18n q setModal QDialogButtonBox buttonBox QDialogButtonBox q buttonBox setStandardButtons QDialogButtonBox::Help QDialogButtonBox::RestoreDefaults QDialogButtonBox::Cancel QDialogButtonBox::Apply QDialogButtonBox::Ok QDialogButtonBox::Reset KGuiItem::assign buttonBox button QDialogButtonBox::Ok KStandardGuiItem::ok KGuiItem::assign buttonBox button QDialogButtonBox::Cancel KStandardGuiItem::cancel KGuiItem::assign buttonBox button QDialogButtonBox::RestoreDefaults KStandardGuiItem::defaults KGuiItem::assign buttonBox button QDialogButtonBox::Apply KStandardGuiItem::apply KGuiItem::assign buttonBox button QDialogButtonBox::Reset KStandardGuiItem::reset KGuiItem::assign buttonBox button QDialogButtonBox::Help KStandardGuiItem::help buttonBox button QDialogButtonBox::Reset setEnabled buttonBox button QDialogButtonBox::Apply setEnabled q connect buttonBox button QDialogButtonBox::Apply QAbstractButton::clicked q KCMultiDialog::slotApplyClicked q connect buttonBox button QDialogButtonBox::Ok QAbstractButton::clicked q KCMultiDialog::slotOkClicked q connect buttonBox button QDialogButtonBox::RestoreDefaults QAbstractButton::clicked q KCMultiDialog::slotDefaultClicked q connect buttonBox button QDialogButtonBox::Help QAbstractButton::clicked q KCMultiDialog::slotHelpClicked q connect buttonBox button QDialogButtonBox::Reset QAbstractButton::clicked q KCMultiDialog::slotUser1Clicked q setButtonBox buttonBox q connect q SIGNAL currentPageChanged KPageWidgetItem KPageWidgetItem SLOT _k_slotCurrentPageChanged KPageWidgetItem KPageWidgetItem</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmultidialog.cpp</field>
    <field name="url">kcmultidialog_8cpp_source.html#l00237</field>
    <field name="keywords"></field>
    <field name="text">KCMultiDialog::KCMultiDialog QWidget parent KPageDialog parent d_ptr new KCMultiDialogPrivate this d_func init</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmultidialog.cpp</field>
    <field name="url">kcmultidialog_8cpp_source.html#l00244</field>
    <field name="keywords"></field>
    <field name="text">KCMultiDialog::KCMultiDialog KPageWidget pageWidget QWidget parent Qt::WindowFlags flags KPageDialog pageWidget parent flags d_ptr new KCMultiDialogPrivate this d_func init KCMultiDialog::KCMultiDialog KCMultiDialogPrivate dd KPageWidget pageWidget QWidget parent Qt::WindowFlags flags KPageDialog pageWidget parent flags d_ptr dd d_func init</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmultidialog.cpp</field>
    <field name="url">kcmultidialog_8cpp_source.html#l00258</field>
    <field name="keywords"></field>
    <field name="text">KCMultiDialog::~KCMultiDialog d_ptr KCMultiDialog::showEvent QShowEvent ev resize QSize adjustSize KPageDialog::showEvent ev</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmultidialog.cpp</field>
    <field name="url">kcmultidialog_8cpp_source.html#l00270</field>
    <field name="keywords"></field>
    <field name="text">KCMultiDialog::slotDefaultClicked Q_D KCMultiDialog KPageWidgetItem item currentPage item i i d modules count i d modules i item item d modules i kcm defaults d _k_clientChanged</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmultidialog.cpp</field>
    <field name="url">kcmultidialog_8cpp_source.html#l00287</field>
    <field name="keywords"></field>
    <field name="text">KCMultiDialog::slotUser1Clicked KPageWidgetItem item currentPage item Q_D KCMultiDialog i i d modules count i d modules i item item d modules i kcm load d _k_clientChanged KCMultiDialogPrivate::moduleSave KCModuleProxy module module module save KCMultiDialogPrivate::apply Q_Q KCMultiDialog QStringList updatedComponents CreatedModule module modules KCModuleProxy proxy module kcm proxy changed proxy save QStringList componentNames module componentNames QString componentName module componentNames updatedComponents contains componentName updatedComponents append componentName QString name updatedComponents emit q configCommitted name toLatin1 emit q configCommitted</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmultidialog.cpp</field>
    <field name="url">kcmultidialog_8cpp_source.html#l00345</field>
    <field name="keywords"></field>
    <field name="text">KCMultiDialog::slotApplyClicked QPushButton applyButton buttonBox button QDialogButtonBox::Apply applyButton setFocus d_func apply</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmultidialog.cpp</field>
    <field name="url">kcmultidialog_8cpp_source.html#l00353</field>
    <field name="keywords"></field>
    <field name="text">KCMultiDialog::slotOkClicked QPushButton okButton buttonBox button QDialogButtonBox::Ok okButton setFocus d_func apply accept</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmultidialog.cpp</field>
    <field name="url">kcmultidialog_8cpp_source.html#l00362</field>
    <field name="keywords"></field>
    <field name="text">KCMultiDialog::slotHelpClicked KPageWidgetItem item currentPage item Q_D KCMultiDialog QString docPath i i d modules count i d modules i item item docPath d modules i kcm moduleInfo docPath QUrl docUrl QUrl QStringLiteral resolved QUrl docPath docUrl scheme QLatin1String docUrl scheme QLatin1String docUrl scheme QLatin1String QProcess::startDetached QStringLiteral QStringList docUrl toString QDesktopServices::openUrl docUrl</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmultidialog.cpp</field>
    <field name="url">kcmultidialog_8cpp_source.html#l00386</field>
    <field name="keywords"></field>
    <field name="text">KCMultiDialog::closeEvent QCloseEvent event Q_D KCMultiDialog KPageDialog::closeEvent event Q_FOREACH proxy d modules proxy kcm deleteClient</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmultidialog.cpp</field>
    <field name="url">kcmultidialog_8cpp_source.html#l00401</field>
    <field name="keywords"></field>
    <field name="text">KPageWidgetItem KCMultiDialog::addModule QString path QStringList args QString complete path path endsWith QLatin1String complete QStringLiteral KService::Ptr service KService::serviceByStorageId complete addModule KCModuleInfo service args</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmultidialog.cpp</field>
    <field name="url">kcmultidialog_8cpp_source.html#l00414</field>
    <field name="keywords"></field>
    <field name="text">KPageWidgetItem KCMultiDialog::addModule KCModuleInfo moduleInfo KPageWidgetItem parentItem QStringList args moduleInfo service moduleInfo service noDisplay KCModuleProxy kcm KCModuleProxy moduleInfo args KPageWidgetItem item KPageWidgetItem kcm moduleInfo moduleName kcm realModule kcm realModule useRootOnlyMessage item setHeader QStringLiteral moduleInfo comment QStringLiteral kcm realModule rootOnlyMessage QStringLiteral item setIcon KDE::icon moduleInfo icon QStringList QStringLiteral item setHeader moduleInfo comment item setIcon QIcon::fromTheme moduleInfo icon item setProperty moduleInfo weight updateCurrentPage KPageWidgetModel model qobject_cast KPageWidgetModel pageWidget model Q_ASSERT model parentItem QModelIndex parentIndex model index parentItem siblingCount model rowCount parentIndex row row siblingCount row KPageWidgetItem siblingItem model item parentIndex child row siblingItem property toInt moduleInfo weight insertPage siblingItem item row siblingCount addSubPage parentItem item siblingCount model rowCount row row siblingCount row KPageWidgetItem siblingItem model item model index row siblingItem property toInt moduleInfo weight insertPage siblingItem item siblingItem currentPage updateCurrentPage row siblingCount addPage item connect kcm SIGNAL changed SLOT _k_clientChanged connect kcm realModule SIGNAL rootOnlyMessageChanged QString SLOT _k_updateHeader QString Q_D KCMultiDialog KCMultiDialogPrivate::CreatedModule cm cm kcm kcm cm item item cm componentNames moduleInfo service property QStringLiteral toStringList d modules append cm d modules count updateCurrentPage setCurrentPage item d _k_clientChanged item</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmultidialog.cpp</field>
    <field name="url">kcmultidialog_8cpp_source.html#l00506</field>
    <field name="keywords"></field>
    <field name="text">KCMultiDialog::clear Q_D KCMultiDialog i i d modules count i removePage d modules i item d modules i kcm d modules clear d _k_clientChanged</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmultidialog.h</field>
    <field name="url">kcmultidialog_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KCMultiDialogPrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kcmultidialog.h</field>
    <field name="url">kcmultidialog_8h_source.html#l00037</field>
    <field name="keywords"></field>
    <field name="text">KCMUTILS_EXPORT KCMultiDialog KPageDialog Q_OBJECT Q_DECLARE_PRIVATE KCMultiDialog KCMultiDialog QWidget parent KCMultiDialog KPageWidgetItem addModule QString module QStringList args QStringList KPageWidgetItem addModule KCModuleInfo moduleinfo KPageWidgetItem parent QStringList args QStringList clear Q_SIGNALS configCommitted configCommitted QByteArray componentName KCMultiDialog KPageWidget pageWidget QWidget parent Qt::WindowFlags flags KCMultiDialog KCMultiDialogPrivate dd KPageWidget pageWidget QWidget parent Qt::WindowFlags flags KCMultiDialogPrivate d_ptr closeEvent QCloseEvent event Q_DECL_OVERRIDE showEvent QShowEvent event Q_DECL_OVERRIDE Q_SLOTS slotDefaultClicked slotUser1Clicked slotApplyClicked slotOkClicked slotHelpClicked Q_PRIVATE_SLOT d_func _k_slotCurrentPageChanged KPageWidgetItem KPageWidgetItem Q_PRIVATE_SLOT d_func _k_clientChanged Q_PRIVATE_SLOT d_func _k_updateHeader use QString message</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginselector.cpp</field>
    <field name="url">kpluginselector_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KPluginSelector::Private::Private KPluginSelector parent QObject parent parent parent listView categoryDrawer showIcons false KPluginSelector::Private::~Private KPluginSelector::Private::updateDependencies PluginEntry pluginEntry added added QStringList dependencyList pluginEntry pluginInfo dependencies dependencyList count i i pluginModel rowCount i QModelIndex index pluginModel index i PluginEntry pe PluginEntry index internalPointer pe pluginInfo pluginName pluginEntry pluginInfo pluginName dependencyList contains pe pluginInfo pluginName pe checked dependenciesWidget addDependency pe pluginInfo name pluginEntry pluginInfo name added QAbstractItemModel index model setData index added Qt::CheckStateRole updateDependencies pe added i i pluginModel rowCount i QModelIndex index pluginModel index i PluginEntry pe PluginEntry index internalPointer pe pluginInfo pluginName pluginEntry pluginInfo pluginName pe pluginInfo dependencies contains pluginEntry pluginInfo pluginName pe checked dependenciesWidget addDependency pe pluginInfo name pluginEntry pluginInfo name added QAbstractItemModel index model setData index added Qt::CheckStateRole updateDependencies pe added KPluginSelector::Private::dependantLayoutValue value width totalWidth listView layoutDirection Qt::LeftToRight value totalWidth width value KPluginSelector::Private::DependenciesWidget::DependenciesWidget QWidget parent QWidget parent addedByDependencies removedByDependencies setVisible details QLabel QHBoxLayout layout QHBoxLayout QVBoxLayout dataLayout QVBoxLayout dataLayout setAlignment Qt::AlignLeft Qt::AlignVCenter layout setAlignment Qt::AlignLeft QLabel label QLabel label setAlignment Qt::AlignLeft Qt::AlignVCenter label setPixmap QIcon::fromTheme QStringLiteral pixmap style pixelMetric QStyle::PM_MessageBoxIconSize label setSizePolicy QSizePolicy::Fixed QSizePolicy::Fixed layout addWidget label KUrlLabel link KUrlLabel link setAlignment Qt::AlignLeft Qt::AlignVCenter link setSizePolicy QSizePolicy::Fixed QSizePolicy::Fixed link setGlowEnabled link setUnderline link setFloatEnabled link setUseCursor link setHighlightedColor palette color QPalette::Link link setSelectedColor palette color QPalette::Link link setText i18n dataLayout addWidget link dataLayout addWidget details layout addLayout dataLayout setLayout layout QObject::connect link SIGNAL leftClickedUrl SLOT showDependencyDetails KPluginSelector::Private::DependenciesWidget::~DependenciesWidget KPluginSelector::Private::DependenciesWidget::addDependency QString dependency QString pluginCausant added isVisible setVisible FurtherInfo furtherInfo furtherInfo added added furtherInfo pluginCausant pluginCausant dependencyMap contains dependency added removedByDependencies removedByDependencies addedByDependencies addedByDependencies dependencyMap dependency furtherInfo dependencyMap insert dependency furtherInfo added addedByDependencies removedByDependencies updateDetails KPluginSelector::Private::DependenciesWidget::userOverrideDependency QString dependency dependencyMap contains dependency addedByDependencies dependencyMap dependency added addedByDependencies removedByDependencies removedByDependencies dependencyMap remove dependency updateDetails KPluginSelector::Private::DependenciesWidget::clearDependencies addedByDependencies removedByDependencies dependencyMap clear updateDetails KPluginSelector::Private::DependenciesWidget::showDependencyDetails QString message i18n QString dependency dependencyMap keys dependencyMap dependency added message i18n dependency dependencyMap dependency pluginCausant message i18n dependency dependencyMap dependency pluginCausant KMessageBox::information message i18n addedByDependencies removedByDependencies updateDetails KPluginSelector::Private::DependenciesWidget::updateDetails dependencyMap count setVisible QString message addedByDependencies message i18np addedByDependencies removedByDependencies message isEmpty message i18n removedByDependencies message i18np removedByDependencies message isEmpty details setVisible details setVisible details setText message</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginselector.cpp</field>
    <field name="url">kpluginselector_8cpp_source.html#l00253</field>
    <field name="keywords"></field>
    <field name="text">KPluginSelector::KPluginSelector QWidget parent QWidget parent d new Private this QVBoxLayout layout QVBoxLayout layout setMargin setLayout layout d lineEdit QLineEdit d lineEdit setClearButtonEnabled d lineEdit setPlaceholderText i18n d listView KCategorizedView d categoryDrawer KCategoryDrawer d listView d listView setVerticalScrollMode QListView::ScrollPerPixel d listView setAlternatingRowColors d listView setCategoryDrawer d categoryDrawer d dependenciesWidget Private::DependenciesWidget d pluginModel Private::PluginModel d d proxyModel Private::ProxyModel d d proxyModel setCategorizedModel d proxyModel setSourceModel d pluginModel d listView setModel d proxyModel d listView setAlternatingRowColors Private::PluginDelegate pluginDelegate Private::PluginDelegate d d listView setItemDelegate pluginDelegate d listView setMouseTracking d listView viewport setAttribute Qt::WA_Hover connect d lineEdit QLineEdit::textChanged d proxyModel QSortFilterProxyModel::invalidate connect pluginDelegate Private::PluginDelegate::changed KPluginSelector::changed connect pluginDelegate Private::PluginDelegate::configCommitted KPluginSelector::configCommitted layout addWidget d lineEdit layout addWidget d listView layout addWidget d dependenciesWidget</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginselector.cpp</field>
    <field name="url">kpluginselector_8cpp_source.html#l00293</field>
    <field name="keywords"></field>
    <field name="text">KPluginSelector::~KPluginSelector d listView itemDelegate d listView d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginselector.cpp</field>
    <field name="url">kpluginselector_8cpp_source.html#l00300</field>
    <field name="keywords"></field>
    <field name="text">KPluginSelector::addPlugins QString componentName QString categoryName QString categoryKey KSharedConfig::Ptr config QStringList desktopFileNames QStringList dirs QStandardPaths::locateAll QStandardPaths::GenericDataLocation componentName QStringLiteral QStandardPaths::LocateDirectory Q_FOREACH QString dir dirs QDirIterator it dir QStringList QStringLiteral QDir::NoFilter QDirIterator::Subdirectories it hasNext desktopFileNames append it next QList&lt;KPluginInfo&gt; pluginInfoList KPluginInfo::fromFiles desktopFileNames pluginInfoList isEmpty config config KSharedConfig::openConfig componentName QStringLiteral Q_ASSERT config KConfigGroup cfgGroup config d pluginModel addPlugins pluginInfoList categoryName categoryKey cfgGroup d proxyModel sort</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginselector.cpp</field>
    <field name="url">kpluginselector_8cpp_source.html#l00332</field>
    <field name="keywords"></field>
    <field name="text">KPluginSelector::addPlugins QList&lt;KPluginInfo&gt; pluginInfoList PluginLoadMethod pluginLoadMethod QString categoryName QString categoryKey KSharedConfig::Ptr config pluginInfoList isEmpty KConfigGroup cfgGroup config config KSharedConfig::openConfig d pluginModel addPlugins pluginInfoList categoryName categoryKey cfgGroup pluginLoadMethod d proxyModel sort</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginselector.cpp</field>
    <field name="url">kpluginselector_8cpp_source.html#l00349</field>
    <field name="keywords"></field>
    <field name="text">KPluginSelector::load i i d pluginModel rowCount i QModelIndex index d pluginModel index i PluginEntry pluginEntry PluginEntry index internalPointer pluginEntry pluginInfo load pluginEntry cfgGroup d pluginModel setData index pluginEntry pluginInfo isPluginEnabled Qt::CheckStateRole emit changed</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginselector.cpp</field>
    <field name="url">kpluginselector_8cpp_source.html#l00361</field>
    <field name="keywords"></field>
    <field name="text">KPluginSelector::save i i d pluginModel rowCount i QModelIndex index d pluginModel index i PluginEntry pluginEntry PluginEntry index internalPointer pluginEntry pluginInfo setPluginEnabled pluginEntry checked pluginEntry pluginInfo save pluginEntry cfgGroup pluginEntry cfgGroup sync emit changed</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginselector.cpp</field>
    <field name="url">kpluginselector_8cpp_source.html#l00374</field>
    <field name="keywords"></field>
    <field name="text">KPluginSelector::defaults i i d pluginModel rowCount i QModelIndex index d pluginModel index i PluginEntry pluginEntry PluginEntry index internalPointer d pluginModel setData index pluginEntry pluginInfo isPluginEnabledByDefault Qt::CheckStateRole emit changed</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginselector.cpp</field>
    <field name="url">kpluginselector_8cpp_source.html#l00385</field>
    <field name="keywords"></field>
    <field name="text">KPluginSelector::isDefault i i d pluginModel rowCount i QModelIndex index d pluginModel index i PluginEntry pluginEntry PluginEntry index internalPointer d pluginModel data index Qt::CheckStateRole toBool pluginEntry pluginInfo isPluginEnabledByDefault</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginselector.cpp</field>
    <field name="url">kpluginselector_8cpp_source.html#l00398</field>
    <field name="keywords"></field>
    <field name="text">KPluginSelector::updatePluginsState i i d pluginModel rowCount i QModelIndex index d pluginModel index i PluginEntry pluginEntry PluginEntry index internalPointer pluginEntry manuallyAdded pluginEntry pluginInfo setPluginEnabled pluginEntry checked</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginselector.cpp</field>
    <field name="url">kpluginselector_8cpp_source.html#l00409</field>
    <field name="keywords"></field>
    <field name="text">KPluginSelector::setConfigurationArguments QStringList arguments d kcmArguments arguments QStringList KPluginSelector::configurationArguments d kcmArguments KPluginSelector::Private::PluginModel::PluginModel KPluginSelector::Private pluginSelector_d QObject parent QAbstractListModel parent pluginSelector_d pluginSelector_d KPluginSelector::Private::PluginModel::~PluginModel KPluginSelector::Private::PluginModel::addPlugins QList&lt;KPluginInfo&gt; pluginList QString categoryName QString categoryKey KConfigGroup cfgGroup PluginLoadMethod pluginLoadMethod manuallyAdded QList&lt;PluginEntry&gt; listToAdd KPluginInfo pluginInfo pluginList PluginEntry pluginEntry pluginEntry category categoryName pluginEntry pluginInfo pluginInfo pluginLoadMethod ReadConfigFile pluginEntry pluginInfo load cfgGroup pluginEntry checked pluginInfo isPluginEnabled pluginEntry manuallyAdded manuallyAdded cfgGroup isValid pluginEntry cfgGroup cfgGroup pluginEntry cfgGroup pluginInfo config pluginEntry isCheckable pluginInfo isValid pluginEntry cfgGroup isEntryImmutable pluginInfo pluginName QLatin1String pluginEntryList contains pluginEntry listToAdd contains pluginEntry categoryKey isEmpty pluginInfo category compare categoryKey Qt::CaseInsensitive pluginInfo service pluginInfo service noDisplay listToAdd pluginEntry pluginSelector_d showIcons pluginInfo icon isEmpty pluginSelector_d showIcons listToAdd count beginInsertRows QModelIndex pluginEntryList count pluginEntryList count listToAdd count pluginEntryList listToAdd endInsertRows QList&lt;KService::Ptr&gt; KPluginSelector::Private::PluginModel::pluginServices QModelIndex index PluginEntry index internalPointer pluginInfo kcmServices QModelIndex KPluginSelector::Private::PluginModel::index row column QModelIndex parent Q_UNUSED parent createIndex row column row pluginEntryList count pluginEntryList at row QVariant KPluginSelector::Private::PluginModel::data QModelIndex index role index isValid index internalPointer QVariant PluginEntry pluginEntry PluginEntry index internalPointer role Qt::DisplayRole pluginEntry pluginInfo name PluginEntryRole QVariant::fromValue pluginEntry ServicesCountRole pluginEntry pluginInfo kcmServices count NameRole pluginEntry pluginInfo name CommentRole pluginEntry pluginInfo comment AuthorRole pluginEntry pluginInfo author EmailRole pluginEntry pluginInfo email WebsiteRole pluginEntry pluginInfo website VersionRole pluginEntry pluginInfo version LicenseRole pluginEntry pluginInfo license DependenciesRole pluginEntry pluginInfo dependencies IsCheckableRole pluginEntry isCheckable Qt::DecorationRole pluginEntry pluginInfo icon Qt::CheckStateRole pluginEntry checked KCategorizedSortFilterProxyModel::CategoryDisplayRole KCategorizedSortFilterProxyModel::CategorySortRole pluginEntry category QVariant KPluginSelector::Private::PluginModel::setData QModelIndex index QVariant value role index isValid ret role Qt::CheckStateRole PluginEntry index internalPointer checked value toBool ret ret emit dataChanged index index ret KPluginSelector::Private::PluginModel::rowCount QModelIndex parent parent isValid pluginEntryList count KPluginSelector::Private::ProxyModel::ProxyModel KPluginSelector::Private pluginSelector_d QObject parent KCategorizedSortFilterProxyModel parent pluginSelector_d pluginSelector_d sort KPluginSelector::Private::ProxyModel::~ProxyModel KPluginSelector::Private::ProxyModel::filterAcceptsRow sourceRow QModelIndex sourceParent Q_UNUSED sourceParent pluginSelector_d lineEdit text isEmpty QModelIndex index sourceModel index sourceRow KPluginInfo pluginInfo PluginEntry index internalPointer pluginInfo pluginInfo name contains pluginSelector_d lineEdit text Qt::CaseInsensitive pluginInfo comment contains pluginSelector_d lineEdit text Qt::CaseInsensitive KPluginSelector::Private::ProxyModel::subSortLessThan QModelIndex left QModelIndex right PluginEntry left internalPointer pluginInfo name compare static_cast&lt;PluginEntry *&gt; right internalPointer pluginInfo name Qt::CaseInsensitive KPluginSelector::Private::PluginDelegate::PluginDelegate KPluginSelector::Private pluginSelector_d QObject parent KWidgetItemDelegate pluginSelector_d listView parent checkBox QCheckBox pushButton QPushButton pluginSelector_d pluginSelector_d pushButton setIcon QIcon::fromTheme QStringLiteral KPluginSelector::Private::PluginDelegate::~PluginDelegate checkBox pushButton KPluginSelector::Private::PluginDelegate::paint QPainter painter QStyleOptionViewItem option QModelIndex index index isValid xOffset checkBox sizeHint width disabled index model data index IsCheckableRole toBool painter save QApplication::style drawPrimitive QStyle::PE_PanelItemViewItem option painter iconSize option rect height MARGIN pluginSelector_d showIcons QIcon icon QIcon::fromTheme index model data index Qt::DecorationRole toString icon paint painter QRect pluginSelector_d dependantLayoutValue MARGIN option rect left xOffset iconSize option rect width MARGIN option rect top iconSize iconSize iconSize MARGIN QRect contentsRect pluginSelector_d dependantLayoutValue MARGIN iconSize option rect left xOffset option rect width MARGIN iconSize xOffset option rect width MARGIN option rect top option rect width MARGIN iconSize xOffset option rect height MARGIN lessHorizontalSpace MARGIN pushButton sizeHint width index model data index ServicesCountRole toBool lessHorizontalSpace MARGIN pushButton sizeHint width contentsRect setWidth contentsRect width lessHorizontalSpace option state QStyle::State_Selected painter setPen option palette highlightedText color pluginSelector_d listView layoutDirection Qt::RightToLeft contentsRect translate lessHorizontalSpace painter save disabled QPalette pal option palette pal setCurrentColorGroup QPalette::Disabled painter setPen pal text color painter save QFont font titleFont option font QFontMetrics fmTitle font painter setFont font painter drawText contentsRect Qt::AlignLeft Qt::AlignTop fmTitle elidedText index model data index Qt::DisplayRole toString Qt::ElideRight contentsRect width painter restore painter drawText contentsRect Qt::AlignLeft Qt::AlignBottom option fontMetrics elidedText index model data index CommentRole toString Qt::ElideRight contentsRect width painter restore painter restore QSize KPluginSelector::Private::PluginDelegate::sizeHint QStyleOptionViewItem option QModelIndex index i j index model data index ServicesCountRole toBool i j pluginSelector_d showIcons i QFont font titleFont option font QFontMetrics fmTitle font QSize qMax fmTitle width index model data index Qt::DisplayRole toString option fontMetrics width index model data index CommentRole toString pluginSelector_d showIcons KIconLoader::SizeMedium MARGIN i pushButton sizeHint width j qMax KIconLoader::SizeMedium MARGIN fmTitle height option fontMetrics height MARGIN QList&lt;QWidget *&gt; KPluginSelector::Private::PluginDelegate::createItemWidgets QModelIndex index Q_UNUSED index QList&lt;QWidget *&gt; widgetList QCheckBox enabledCheckBox QCheckBox connect enabledCheckBox QAbstractButton::clicked PluginDelegate::slotStateChanged connect enabledCheckBox QAbstractButton::clicked PluginDelegate::emitChanged QPushButton aboutPushButton QPushButton aboutPushButton setIcon QIcon::fromTheme QStringLiteral connect aboutPushButton QAbstractButton::clicked PluginDelegate::slotAboutClicked QPushButton configurePushButton QPushButton configurePushButton setIcon QIcon::fromTheme QStringLiteral connect configurePushButton QAbstractButton::clicked PluginDelegate::slotConfigureClicked setBlockedEventTypes enabledCheckBox QList&lt;QEvent::Type&gt; QEvent::MouseButtonPress QEvent::MouseButtonRelease QEvent::MouseButtonDblClick QEvent::KeyPress QEvent::KeyRelease setBlockedEventTypes aboutPushButton QList&lt;QEvent::Type&gt; QEvent::MouseButtonPress QEvent::MouseButtonRelease QEvent::MouseButtonDblClick QEvent::KeyPress QEvent::KeyRelease setBlockedEventTypes configurePushButton QList&lt;QEvent::Type&gt; QEvent::MouseButtonPress QEvent::MouseButtonRelease QEvent::MouseButtonDblClick QEvent::KeyPress QEvent::KeyRelease widgetList enabledCheckBox configurePushButton aboutPushButton widgetList KPluginSelector::Private::PluginDelegate::updateItemWidgets QList&lt;QWidget *&gt; widgets QStyleOptionViewItem option QPersistentModelIndex index QCheckBox checkBox QCheckBox widgets checkBox resize checkBox sizeHint checkBox move pluginSelector_d dependantLayoutValue MARGIN checkBox sizeHint width option rect width option rect height checkBox sizeHint height QPushButton aboutPushButton QPushButton widgets QSize aboutPushButtonSizeHint aboutPushButton sizeHint aboutPushButton resize aboutPushButtonSizeHint aboutPushButton move pluginSelector_d dependantLayoutValue option rect width MARGIN aboutPushButtonSizeHint width aboutPushButtonSizeHint width option rect width option rect height aboutPushButtonSizeHint height QPushButton configurePushButton QPushButton widgets QSize configurePushButtonSizeHint configurePushButton sizeHint configurePushButton resize configurePushButtonSizeHint configurePushButton move pluginSelector_d dependantLayoutValue option rect width MARGIN configurePushButtonSizeHint width aboutPushButtonSizeHint width configurePushButtonSizeHint width option rect width option rect height configurePushButtonSizeHint height index isValid index internalPointer checkBox setVisible aboutPushButton setVisible configurePushButton setVisible checkBox setChecked index model data index Qt::CheckStateRole toBool checkBox setEnabled index model data index IsCheckableRole toBool configurePushButton setVisible index model data index ServicesCountRole toBool configurePushButton setEnabled index model data index Qt::CheckStateRole toBool KPluginSelector::Private::PluginDelegate::slotStateChanged state focusedIndex isValid QModelIndex index focusedIndex pluginSelector_d dependenciesWidget clearDependencies PluginEntry pluginEntry index model data index PluginEntryRole value PluginEntry pluginSelector_d updateDependencies pluginEntry state QAbstractItemModel index model setData index state Qt::CheckStateRole KPluginSelector::Private::PluginDelegate::emitChanged emit changed KPluginSelector::Private::PluginDelegate::slotAboutClicked QModelIndex index focusedIndex QAbstractItemModel model index model QString name model data index NameRole toString QString comment model data index CommentRole toString QString author model data index AuthorRole toString QString email model data index EmailRole toString QString website model data index WebsiteRole toString QString version model data index VersionRole toString QString license model data index LicenseRole toString KAboutData aboutData name name version comment KAboutLicense::byKeyword license key QString QString website aboutData setProgramIconName index model data index Qt::DecorationRole toString QStringList authors author split QLatin1Char QStringList emails email split QLatin1Char authors count emails count i QString author authors author isEmpty aboutData addAuthor author QString emails i i KAboutApplicationDialog aboutPlugin aboutData itemView aboutPlugin setWindowTitle i18nc aboutData displayName aboutPlugin exec KPluginSelector::Private::PluginDelegate::slotConfigureClicked QModelIndex index focusedIndex QAbstractItemModel model index model PluginEntry pluginEntry model data index PluginEntryRole value PluginEntry KPluginInfo pluginInfo pluginEntry pluginInfo QDialog configDialog itemView configDialog setWindowTitle model data index NameRole toString QTabWidget newTabWidget QWidget mainWidget QWidget moduleProxyParentWidget configDialog KService::Ptr servicePtr pluginInfo kcmServices servicePtr noDisplay KCModuleInfo moduleInfo servicePtr KCModuleProxy currentModuleProxy KCModuleProxy moduleInfo moduleProxyParentWidget pluginSelector_d kcmArguments currentModuleProxy realModule moduleProxyList currentModuleProxy mainWidget newTabWidget newTabWidget QTabWidget configDialog moduleProxyParentWidget newTabWidget mainWidget setParent newTabWidget KCModuleProxy moduleProxy qobject_cast KCModuleProxy mainWidget moduleProxy newTabWidget addTab mainWidget moduleProxy moduleInfo moduleName mainWidget newTabWidget newTabWidget newTabWidget moduleProxyParentWidget configDialog mainWidget setParent newTabWidget newTabWidget addTab currentModuleProxy servicePtr name mainWidget currentModuleProxy currentModuleProxy moduleProxyList count QVBoxLayout layout QVBoxLayout layout addWidget mainWidget marginHint configDialog style pixelMetric QStyle::PM_DefaultChildMargin layout insertSpacing marginHint QDialogButtonBox buttonBox QDialogButtonBox configDialog buttonBox setStandardButtons QDialogButtonBox::Ok QDialogButtonBox::Cancel QDialogButtonBox::RestoreDefaults KGuiItem::assign buttonBox button QDialogButtonBox::Ok KStandardGuiItem::ok KGuiItem::assign buttonBox button QDialogButtonBox::Cancel KStandardGuiItem::cancel KGuiItem::assign buttonBox button QDialogButtonBox::RestoreDefaults KStandardGuiItem::defaults connect buttonBox QDialogButtonBox::accepted configDialog QDialog::accept connect buttonBox QDialogButtonBox::rejected configDialog QDialog::reject connect buttonBox button QDialogButtonBox::RestoreDefaults QAbstractButton::clicked PluginDelegate::slotDefaultClicked layout addWidget buttonBox configDialog setLayout layout configDialog exec QDialog::Accepted KCModuleProxy moduleProxy moduleProxyList QStringList parentComponents moduleProxy moduleInfo service property QStringLiteral toStringList moduleProxy save QString parentComponent parentComponents emit configCommitted parentComponent toLatin1 KCModuleProxy moduleProxy moduleProxyList moduleProxy load qDeleteAll moduleProxyList moduleProxyList clear KPluginSelector::Private::PluginDelegate::slotDefaultClicked KCModuleProxy moduleProxy moduleProxyList moduleProxy defaults QFont KPluginSelector::Private::PluginDelegate::titleFont QFont baseFont QFont retFont baseFont retFont setBold retFont</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginselector.h</field>
    <field name="url">kpluginselector_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KPluginInfo</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">kpluginselector.h</field>
    <field name="url">kpluginselector_8h_source.html#l00056</field>
    <field name="keywords"></field>
    <field name="text">KCMUTILS_EXPORT KPluginSelector QWidget Q_OBJECT Q_PROPERTY QStringList configurationArguments READ configurationArguments WRITE setConfigurationArguments PluginLoadMethod ReadConfigFile IgnoreConfigFile KPluginSelector QWidget parent KPluginSelector addPlugins QString componentName QString categoryName QString QString categoryKey QString KSharedConfig::Ptr config KSharedConfig::Ptr addPlugins QList&lt;KPluginInfo&gt; pluginInfoList PluginLoadMethod pluginLoadMethod ReadConfigFile QString categoryName QString QString categoryKey QString KSharedConfig::Ptr config KSharedConfig::Ptr load save defaults isDefault updatePluginsState setConfigurationArguments QStringList arguments QStringList configurationArguments Q_SIGNALS changed hasChanged configCommitted QByteArray componentName Private Private d</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksettingswidgetadaptor.cpp</field>
    <field name="url">ksettingswidgetadaptor_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KSettingsWidgetAdaptor::KSettingsWidgetAdaptor QObject parent QObject parent QString KSettingsWidgetAdaptor::applicationName QString displayName QGuiApplication::applicationDisplayName displayName isEmpty displayName QCoreApplication::applicationName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">ksettingswidgetadaptor.h</field>
    <field name="url">ksettingswidgetadaptor_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">QString KSettingsWidgetAdaptor QObject Q_OBJECT Q_CLASSINFO public KSettingsWidgetAdaptor QObject parent public Q_SLOTS QString applicationName</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pluginpage.cpp</field>
    <field name="url">pluginpage_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KSettings PluginPagePrivate PluginPagePrivate selwid KPluginSelector selwid _k_reparseConfiguration QByteArray a</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pluginpage.cpp</field>
    <field name="url">pluginpage_8cpp_source.html#l00041</field>
    <field name="keywords"></field>
    <field name="text">PluginPage::PluginPage KAboutData aboutData QWidget parent QVariantList args KCModule aboutData parent args d_ptr new PluginPagePrivate Q_D PluginPage d selwid KPluginSelector connect d selwid SIGNAL changed SIGNAL changed connect d selwid SIGNAL configCommitted QByteArray SLOT _k_reparseConfiguration QByteArray PluginPagePrivate::_k_reparseConfiguration QByteArray a Dispatcher::reparseConfiguration QString::fromLatin1 a PluginPage::~PluginPage d_ptr</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pluginpage.cpp</field>
    <field name="url">pluginpage_8cpp_source.html#l00062</field>
    <field name="keywords"></field>
    <field name="text">KPluginSelector PluginPage::pluginSelector d_ptr selwid</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pluginpage.cpp</field>
    <field name="url">pluginpage_8cpp_source.html#l00067</field>
    <field name="keywords"></field>
    <field name="text">PluginPage::load d_ptr selwid load</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pluginpage.cpp</field>
    <field name="url">pluginpage_8cpp_source.html#l00072</field>
    <field name="keywords"></field>
    <field name="text">PluginPage::save d_ptr selwid save PluginPage::defaults d_ptr selwid defaults</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pluginpage.h</field>
    <field name="url">pluginpage_8h_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">KPluginSelector KSettings PluginPagePrivate</field>
  </doc>
  <doc>
    <field name="type">source</field>
    <field name="name">pluginpage.h</field>
    <field name="url">pluginpage_8h_source.html#l00071</field>
    <field name="keywords"></field>
    <field name="text">KCMUTILS_EXPORT PluginPage KCModule Q_OBJECT Q_DECLARE_PRIVATE PluginPage PluginPage KAboutData aboutData QWidget parent QVariantList args QVariantList PluginPage KPluginSelector pluginSelector load save defaults PluginPagePrivate d_ptr Q_PRIVATE_SLOT d_func _k_reparseConfiguration QByteArray a</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KCModuleContainer</field>
    <field name="url">classKCModuleContainer.html</field>
    <field name="keywords">KCModuleContainer</field>
    <field name="text">The KCModuleContainer class is a convenience class for organizing a multiple set of KCModule KCModuleContainer is a sub class of KCModule and builds an interface mainly consisting of a tab widget where each tab contains one of the modules specified via one of the constructors KCModuleContainer can handle modules which requires root permissions What you most likely want is the KCMODULECONTAINER macro Sometimes it is of interest to detect in runtime whether a module should be loaded or not This can be achieved by sub classing KCModuleContainer doing the probing/testing checks and then manually call addModule for each module which should be displayed When all calls to addModule is done call finalize() which performs some necessary final steps Frans Englich</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleContainer::KCModuleContainer</field>
    <field name="args">(QWidget *parent, const QStringList &amp;mods)</field>
    <field name="url">classKCModuleContainer.html#ad45ea6504c50750836d8d515e0889e44</field>
    <field name="keywords">KCModuleContainer KCModuleContainer::KCModuleContainer KCModuleContainer</field>
    <field name="text">parent the parent QWidget mods The list of KCModules to be loaded The name of each KCModule is its service name that is the name of the desktop file without the part</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleContainer::KCModuleContainer</field>
    <field name="args">(QWidget *parent, const QString &amp;mods=QString())</field>
    <field name="url">classKCModuleContainer.html#aba9f649f01bc6a38eb91a1aeca9ebd46</field>
    <field name="keywords">KCModuleContainer KCModuleContainer::KCModuleContainer KCModuleContainer</field>
    <field name="text">For example The other constructor takes its modules in a QStringlist which also can be constructed from a string and thus you will have to be explicit on the data type What you probably want is the KCMODULECONTAINER macro which builds an KCModule for you taking the modules you want as argument parent The parent widget mods The modules to load The KCModule containing the requested modules</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleContainer::~KCModuleContainer</field>
    <field name="args">()</field>
    <field name="url">classKCModuleContainer.html#a215fa8026d572cc63a3db839b9668636</field>
    <field name="keywords">KCModuleContainer::~KCModuleContainer KCModuleContainer</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleContainer::addModule</field>
    <field name="args">(const QString &amp;module)</field>
    <field name="url">classKCModuleContainer.html#ace851d474737d6cb8c77ee3ec0146a5c</field>
    <field name="keywords">addModule KCModuleContainer::addModule KCModuleContainer</field>
    <field name="text">Setting the tab icon text tool tip connecting the signals is what it does module the name of the module to add The name is the desktop file s name without the part</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleContainer::defaults</field>
    <field name="args">() override</field>
    <field name="url">classKCModuleContainer.html#a8b8b1bcf6bce50d442a19449ca53e748</field>
    <field name="keywords">defaults KCModuleContainer::defaults KCModuleContainer</field>
    <field name="text">Reimplemented from superclass</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleContainer::load</field>
    <field name="args">() override</field>
    <field name="url">classKCModuleContainer.html#a705ee3374537687df552831e0f2b8c8b</field>
    <field name="keywords">load KCModuleContainer::load KCModuleContainer</field>
    <field name="text">Reimplemented from superclass</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleContainer::save</field>
    <field name="args">() override</field>
    <field name="url">classKCModuleContainer.html#a045e1086d36a35938dc87187b3576b73</field>
    <field name="keywords">save KCModuleContainer::save KCModuleContainer</field>
    <field name="text">Reimplemented from superclass</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KCModuleInfo</field>
    <field name="url">classKCModuleInfo.html</field>
    <field name="keywords">KCModuleInfo</field>
    <field name="text">KCModuleInfo provides various technical information such as icon library etc about a KCModule.n Any values set with the set* functions is not written back with KCModuleInfo it only reads value from the desktop file Matthias Hoelzer-Kluepfel Matthias Elter Daniel Molkentin</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::KCModuleInfo</field>
    <field name="args">(const QString &amp;desktopFile)</field>
    <field name="url">classKCModuleInfo.html#adb479255dc2143bcb05510311f0fb08f</field>
    <field name="keywords">KCModuleInfo KCModuleInfo::KCModuleInfo KCModuleInfo</field>
    <field name="text">a KCModuleInfo object will have to be manually deleted it is not done automatically for you desktopFile the desktop file representing the module or the name of the module</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::KCModuleInfo</field>
    <field name="args">(KService::Ptr moduleInfo)</field>
    <field name="url">classKCModuleInfo.html#a877b61a1c81939244cce405d5a388cd2</field>
    <field name="keywords">KCModuleInfo KCModuleInfo::KCModuleInfo KCModuleInfo</field>
    <field name="text">moduleInfo must be a valid pointer moduleInfo specifies the module</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::KCModuleInfo</field>
    <field name="args">(const KCModuleInfo &amp;rhs)</field>
    <field name="url">classKCModuleInfo.html#af57abec101dc24864ecbba8ed1e16e59</field>
    <field name="keywords">KCModuleInfo KCModuleInfo::KCModuleInfo KCModuleInfo</field>
    <field name="text">rhs specifies the module</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::KCModuleInfo</field>
    <field name="args">()</field>
    <field name="url">classKCModuleInfo.html#aa43bd95cc8ed429218a0e966f2d7bcd6</field>
    <field name="keywords">KCModuleInfo KCModuleInfo::KCModuleInfo KCModuleInfo</field>
    <field name="text">You should not normally call this</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::~KCModuleInfo</field>
    <field name="args">()</field>
    <field name="url">classKCModuleInfo.html#a7c8d6229e1d1e3780611675a883dcdfa</field>
    <field name="keywords">KCModuleInfo::~KCModuleInfo KCModuleInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::comment</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleInfo.html#a708e1dfdfda8179b0768e291ee19ee0f</field>
    <field name="keywords">comment KCModuleInfo::comment KCModuleInfo</field>
    <field name="text">the module s translated comment field</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::docPath</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleInfo.html#aa4c6366787eaa7a79388000bc33b01fe</field>
    <field name="keywords">docPath KCModuleInfo::docPath KCModuleInfo</field>
    <field name="text">the path of the module s documentation</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::fileName</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleInfo.html#a426d64365dde3f2dbdfd8a0b605e3fd6</field>
    <field name="keywords">fileName KCModuleInfo::fileName KCModuleInfo</field>
    <field name="text">the filename of the desktop file that describes the KCM</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::handle</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleInfo.html#ae7ab1006acce059c103fd4317709c4da</field>
    <field name="keywords">handle KCModuleInfo::handle KCModuleInfo</field>
    <field name="text">a handle the contents of the X-KDE-FactoryName field if it exists else the same as the library name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::icon</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleInfo.html#a7214f34dd2979bb6c3e740302fe96463</field>
    <field name="keywords">icon KCModuleInfo::icon KCModuleInfo</field>
    <field name="text">the module s icon name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::keywords</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleInfo.html#a85b3fb136fa10cf7dbc29ee662a9c587</field>
    <field name="keywords">keywords KCModuleInfo::keywords KCModuleInfo</field>
    <field name="text">the keywords associated with this KCM</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::library</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleInfo.html#a3e5b514021b75f676b62ee98aad65660</field>
    <field name="keywords">library KCModuleInfo::library KCModuleInfo</field>
    <field name="text">the library name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::moduleName</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleInfo.html#ab747d194a594699513d3517d234a60bb</field>
    <field name="keywords">moduleName KCModuleInfo::moduleName KCModuleInfo</field>
    <field name="text">the module s translated name</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::operator!=</field>
    <field name="args">(const KCModuleInfo &amp;rhs) const</field>
    <field name="url">classKCModuleInfo.html#aa9affdb41f3be79f74424f2b0f7bdab9</field>
    <field name="keywords">operator!= KCModuleInfo::operator!= KCModuleInfo</field>
    <field name="text">true if rhs is not equal itself</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::operator=</field>
    <field name="args">(const KCModuleInfo &amp;rhs)</field>
    <field name="url">classKCModuleInfo.html#a587b079bf8e14161ffc41c36656091c5</field>
    <field name="keywords">operator= KCModuleInfo::operator= KCModuleInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::operator==</field>
    <field name="args">(const KCModuleInfo &amp;rhs) const</field>
    <field name="url">classKCModuleInfo.html#a94c35cebb5728f59e96879e66dd767e8</field>
    <field name="keywords">operator== KCModuleInfo::operator== KCModuleInfo</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::service</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleInfo.html#a5ec77af956f19bcc292e45b88a75b069</field>
    <field name="keywords">service KCModuleInfo::service KCModuleInfo</field>
    <field name="text">a QExplicitlySharedDataPointer to KService created from the modules desktop file</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleInfo::weight</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleInfo.html#a922beb158dead62e9f01e849ff4cf4c3</field>
    <field name="keywords">weight KCModuleInfo::weight KCModuleInfo</field>
    <field name="text">the weight of the module which determines the order of the pages in the KCMultiDialog It s set by the X-KDE-Weight field</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KCModuleProxy</field>
    <field name="url">classKCModuleProxy.html</field>
    <field name="keywords">KCModuleProxy</field>
    <field name="text">KCModuleProxy is a wrapper for KCModule intended for cases where modules are to be displayed It ensures layout is consistent and in general takes care of the details needed for making a module available in an interface A KCModuleProxy can be treated as a QWidget without worrying about the details specific for modules such as library loading KCModuleProxy is not a sub class of KCModule but its API closely resembles KCModule s Usually an instance is created by passing one of the constructors a KService::Ptr KCModuleInfo or simply the name of the module and then added to the layout as any other widget When the user has changed the module changed(bool) as well as changed(KCModuleProxy *) is emitted KCModuleProxy does not take care of prompting for saving if the object is deleted while changes is not saved the changes will be lost changed() returns true if changes are unsaved KCModuleProxy does not take care of authorization of KCModules KCModuleProxy implements lazy loading meaning the library will not be loaded or any other initialization done before its show() function is called This means modules will only be loaded when they are actually needed as well as it is possible to load many KCModuleProxy without any speed penalty KCModuleProxy should be used in all cases where modules are embedded in order to promote code efficiency and usability consistency Frans Englich Matthias Kretz</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KCModuleProxy::changed</field>
    <field name="args">(KCModuleProxy *mod)</field>
    <field name="url">classKCModuleProxy.html#acd8b1e4801637e804d8b247b361db492</field>
    <field name="keywords">changed KCModuleProxy::changed KCModuleProxy</field>
    <field name="text">Practical when several KCModuleProxys are loaded</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KCModuleProxy::childClosed</field>
    <field name="args">()</field>
    <field name="url">classKCModuleProxy.html#a13d414891c7a428e42e8a72666461438</field>
    <field name="keywords">childClosed KCModuleProxy::childClosed KCModuleProxy</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCModuleProxy::defaults</field>
    <field name="args">()</field>
    <field name="url">classKCModuleProxy.html#a564d47d826e86554978924ee0f00d839</field>
    <field name="keywords">defaults KCModuleProxy::defaults KCModuleProxy</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCModuleProxy::deleteClient</field>
    <field name="args">()</field>
    <field name="url">classKCModuleProxy.html#a50ccc8c6b1cd7f49447812024b3b976f</field>
    <field name="keywords">deleteClient KCModuleProxy::deleteClient KCModuleProxy</field>
    <field name="text">A similar result is achieved by deleting the KCModuleProxy itself</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleProxy::KCModuleProxy</field>
    <field name="args">(const KCModuleInfo &amp;info, QWidget *parent=0, const QStringList &amp;args=QStringList())</field>
    <field name="url">classKCModuleProxy.html#a323017ecc2ace187756227be955454c4</field>
    <field name="keywords">KCModuleProxy KCModuleProxy::KCModuleProxy KCModuleProxy</field>
    <field name="text">info The KCModuleInfo to construct the module from parent the parent QWidget args This is used in the implementation and is internal Use the default</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleProxy::KCModuleProxy</field>
    <field name="args">(const QString &amp;serviceName, QWidget *parent=0, const QStringList &amp;args=QStringList())</field>
    <field name="url">classKCModuleProxy.html#ad7d695f2adab5721d76306f419e5c604</field>
    <field name="keywords">KCModuleProxy KCModuleProxy::KCModuleProxy KCModuleProxy</field>
    <field name="text">Otherwise equal to the one above serviceName The module s service name to construct from parent the parent QWidget args This is used in the implementation and is internal Use the default</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleProxy::KCModuleProxy</field>
    <field name="args">(const KService::Ptr &amp;service, QWidget *parent=0, const QStringList &amp;args=QStringList())</field>
    <field name="url">classKCModuleProxy.html#adf8947c02a6052a83db92a6c57a243d2</field>
    <field name="keywords">KCModuleProxy KCModuleProxy::KCModuleProxy KCModuleProxy</field>
    <field name="text">Otherwise equal to the one above service The KService to construct from parent the parent QWidget args This is used in the implementation and is internal Use the default</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleProxy::~KCModuleProxy</field>
    <field name="args">()</field>
    <field name="url">classKCModuleProxy.html#ad9a6f8d829a0cac4d9f9dce1ff090d18</field>
    <field name="keywords">KCModuleProxy::~KCModuleProxy KCModuleProxy</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleProxy::aboutData</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleProxy.html#a92d2aa990d76c164fbfa79571348e8cf</field>
    <field name="keywords">aboutData KCModuleProxy::aboutData KCModuleProxy</field>
    <field name="text">the module s aboutData()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleProxy::buttons</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleProxy.html#a44841bab691525077e74c2d72ee6846b</field>
    <field name="keywords">buttons KCModuleProxy::buttons KCModuleProxy</field>
    <field name="text">what buttons the module needs</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleProxy::changed</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleProxy.html#a154cd6d09489d91476a6caff2517c5a9</field>
    <field name="keywords">changed KCModuleProxy::changed KCModuleProxy</field>
    <field name="text">true if the module is modified and needs to be saved</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleProxy::dbusPath</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleProxy.html#ab2f8203c3366265b0b752e1782b6a0cb</field>
    <field name="keywords">dbusPath KCModuleProxy::dbusPath KCModuleProxy</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleProxy::dbusService</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleProxy.html#a22cffa5316e5cd044a265b66283d37b2</field>
    <field name="keywords">dbusService KCModuleProxy::dbusService KCModuleProxy</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleProxy::load</field>
    <field name="args">()</field>
    <field name="url">classKCModuleProxy.html#acf8c3283771767a2a2f907a27d09c64c</field>
    <field name="keywords">load KCModuleProxy::load KCModuleProxy</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleProxy::minimumSizeHint</field>
    <field name="args">() const override</field>
    <field name="url">classKCModuleProxy.html#abfe3d419395f6100d202d590a58535a3</field>
    <field name="keywords">minimumSizeHint KCModuleProxy::minimumSizeHint KCModuleProxy</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleProxy::moduleInfo</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleProxy.html#a0ba5bffdb3b004831b17e17b89635fab</field>
    <field name="keywords">moduleInfo KCModuleProxy::moduleInfo KCModuleProxy</field>
    <field name="text">a KCModuleInfo for the encapsulated module</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleProxy::quickHelp</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleProxy.html#a1baf39a1e32e725def898b434bfdc8ba</field>
    <field name="keywords">quickHelp KCModuleProxy::quickHelp KCModuleProxy</field>
    <field name="text">the module s quickHelp()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleProxy::realModule</field>
    <field name="args">() const</field>
    <field name="url">classKCModuleProxy.html#a00c61146a8d353460a2933849575d5f9</field>
    <field name="keywords">realModule KCModuleProxy::realModule KCModuleProxy</field>
    <field name="text">It may return NULL if anything goes wrong the encapsulated module</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleProxy::save</field>
    <field name="args">()</field>
    <field name="url">classKCModuleProxy.html#a73a578508c3a025c2813536fc6c8a558</field>
    <field name="keywords">save KCModuleProxy::save KCModuleProxy</field>
    <field name="text">If the module was not modified it will not be asked to save</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleProxy::showEvent</field>
    <field name="args">(QShowEvent *) override</field>
    <field name="url">classKCModuleProxy.html#aaf88a0463f14fc47eecb54d8440519ec</field>
    <field name="keywords">showEvent KCModuleProxy::showEvent KCModuleProxy</field>
    <field name="text">Makes sure the encapsulated module is loaded before the show event is taken care of</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KCMultiDialog</field>
    <field name="url">classKCMultiDialog.html</field>
    <field name="keywords">KCMultiDialog</field>
    <field name="text">Matthias Elter Daniel Molkentin</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KCMultiDialog::configCommitted</field>
    <field name="args">()</field>
    <field name="url">classKCMultiDialog.html#abf8d7b3c52fd90d348c680b8a067aee9</field>
    <field name="keywords">configCommitted KCMultiDialog::configCommitted KCMultiDialog configCommitted KCMultiDialog::configCommitted KCMultiDialog</field>
    <field name="text">The applyClicked and okClicked signals are emitted before the configuration is saved</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KCMultiDialog::configCommitted</field>
    <field name="args">(const QByteArray &amp;componentName)</field>
    <field name="url">classKCMultiDialog.html#aeeeb0724750a8e224b58b7c8f7e867fd</field>
    <field name="keywords">configCommitted KCMultiDialog::configCommitted KCMultiDialog configCommitted KCMultiDialog::configCommitted KCMultiDialog</field>
    <field name="text">It is emitted once for every instance the KCMs that were changed belong to You can make use of this if you have more than one component in your application componentName tells you the instance that has to reload its configuration The applyClicked and okClicked signals are emitted before the configuration is saved componentName The name of the instance that needs to reload its configuration</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCMultiDialog::KCMultiDialog</field>
    <field name="args">(QWidget *parent=0)</field>
    <field name="url">classKCMultiDialog.html#acb5191cfa71f3a8db4bf5a138d4ecfc7</field>
    <field name="keywords">KCMultiDialog KCMultiDialog::KCMultiDialog KCMultiDialog KCMultiDialog KCMultiDialog::KCMultiDialog KCMultiDialog</field>
    <field name="text">parent The parent widget</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCMultiDialog::~KCMultiDialog</field>
    <field name="args">()</field>
    <field name="url">classKCMultiDialog.html#a88fdcf3a3569b9097cad0364a7b428f7</field>
    <field name="keywords">KCMultiDialog::~KCMultiDialog KCMultiDialog KCMultiDialog::~KCMultiDialog KCMultiDialog</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCMultiDialog::addModule</field>
    <field name="args">(const QString &amp;module, const QStringList &amp;args=QStringList())</field>
    <field name="url">classKCMultiDialog.html#ab7eb63946bec308de4a1261e213d93e1</field>
    <field name="keywords">addModule KCMultiDialog::addModule KCMultiDialog addModule KCMultiDialog::addModule KCMultiDialog</field>
    <field name="text">The module is added according to its KCModuleInfo::weight() The weight determines where in the list the module will appear Lighter modules on top heavier modules at the bottom module Specify the name of the module that is to be added to the list of modules the dialog will show args The arguments that should be given to the KCModule when it is created The KPageWidgetItem associated with the new dialog page</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCMultiDialog::addModule</field>
    <field name="args">(const KCModuleInfo &amp;moduleinfo, KPageWidgetItem *parent=0, const QStringList &amp;args=QStringList())</field>
    <field name="url">classKCMultiDialog.html#a0e7626316c7ef71346fa202b65975b41</field>
    <field name="keywords">addModule KCMultiDialog::addModule KCMultiDialog addModule KCMultiDialog::addModule KCMultiDialog</field>
    <field name="text">The module is added according to its KCModuleInfo::weight() The weight determines where in the list the module will appear Lighter modules on top heavier modules at the bottom moduleinfo Pass a KCModuleInfo object which will be used for creating the module It will be added to the list of modules the dialog will show parent The KPageWidgetItem that should appear as parents in the tree view or a 0 pointer if there is no parent args The arguments that should be given to the KCModule when it is created</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCMultiDialog::clear</field>
    <field name="args">()</field>
    <field name="url">classKCMultiDialog.html#a2fd7ff4dc1d13a8809dc889eb4188145</field>
    <field name="keywords">clear KCMultiDialog::clear KCMultiDialog clear KCMultiDialog::clear KCMultiDialog</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCMultiDialog::slotApplyClicked</field>
    <field name="args">()</field>
    <field name="url">classKCMultiDialog.html#a0d560dfb5d8db98d1805d6e59509a81a</field>
    <field name="keywords">slotApplyClicked KCMultiDialog::slotApplyClicked KCMultiDialog slotApplyClicked KCMultiDialog::slotApplyClicked KCMultiDialog</field>
    <field name="text">You can reimplement it if needed Make sure you call the original implementation</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCMultiDialog::slotDefaultClicked</field>
    <field name="args">()</field>
    <field name="url">classKCMultiDialog.html#abfb661693e8182d36c8d20ad5ace5f04</field>
    <field name="keywords">slotDefaultClicked KCMultiDialog::slotDefaultClicked KCMultiDialog slotDefaultClicked KCMultiDialog::slotDefaultClicked KCMultiDialog</field>
    <field name="text">You can reimplement it if needed Make sure you call the original implementation</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCMultiDialog::slotHelpClicked</field>
    <field name="args">()</field>
    <field name="url">classKCMultiDialog.html#adacfac1abb508f0079d685d1d157c416</field>
    <field name="keywords">slotHelpClicked KCMultiDialog::slotHelpClicked KCMultiDialog slotHelpClicked KCMultiDialog::slotHelpClicked KCMultiDialog</field>
    <field name="text">It reads the X-DocPath field of the currently selected KControl module s desktop file to find the path to the documentation which it then attempts to load You can reimplement this slot if needed Make sure you call the original implementation</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCMultiDialog::slotOkClicked</field>
    <field name="args">()</field>
    <field name="url">classKCMultiDialog.html#a168bc04990fbff16d344681919fc72ed</field>
    <field name="keywords">slotOkClicked KCMultiDialog::slotOkClicked KCMultiDialog slotOkClicked KCMultiDialog::slotOkClicked KCMultiDialog</field>
    <field name="text">You can reimplement it if needed Make sure you call the original implementation</field>
  </doc>
  <doc>
    <field name="type">slot</field>
    <field name="name">KCMultiDialog::slotUser1Clicked</field>
    <field name="args">()</field>
    <field name="url">classKCMultiDialog.html#a38f54b4cdf6b7d266286cdb808ed24ce</field>
    <field name="keywords">slotUser1Clicked KCMultiDialog::slotUser1Clicked KCMultiDialog slotUser1Clicked KCMultiDialog::slotUser1Clicked KCMultiDialog</field>
    <field name="text">You can reimplement it if needed Make sure you call the original implementation</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCMultiDialog::KCMultiDialog</field>
    <field name="args">(KPageWidget *pageWidget, QWidget *parent, Qt::WindowFlags flags=0)</field>
    <field name="url">classKCMultiDialog.html#a211b0c6f104b9c2cee27af0ab2555e98</field>
    <field name="keywords">KCMultiDialog KCMultiDialog::KCMultiDialog KCMultiDialog KCMultiDialog KCMultiDialog::KCMultiDialog KCMultiDialog</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCMultiDialog::closeEvent</field>
    <field name="args">(QCloseEvent *event) override</field>
    <field name="url">classKCMultiDialog.html#a55c44c19e29f44b7f5ec1ba059014ee4</field>
    <field name="keywords">closeEvent KCMultiDialog::closeEvent KCMultiDialog closeEvent KCMultiDialog::closeEvent KCMultiDialog</field>
    <field name="text">If we don t delete them the DBUS registration stays and trying to load the KCMs in other situations will lead to while to the user doesn t appear so(the dialog is hidden)</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KPluginSelector</field>
    <field name="url">classKPluginSelector.html</field>
    <field name="keywords">KPluginSelector</field>
    <field name="text">It shows the list of available plugins Since the user needs a way to know what a specific plugin does every plugin sould install a desktop file containing a name comment and category field The category is useful for applications that can use different kinds of plugins like a playlist skin or visualization The location of these desktop files is the share/apps/ instancename plugindir directory But if you need you may use a different directory You can add plugins from different KConfig group by just calling all times you want addPlugins method with the correct parameters Additionally calls to constructor with same categoryName will add new items to the same category even if plugins are from different categories Matthias Kretz Rafael Fernández López</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KPluginSelector::changed</field>
    <field name="args">(bool hasChanged)</field>
    <field name="url">classKPluginSelector.html#a791dd77d1529c20150d60957267dbfc8</field>
    <field name="keywords">changed KPluginSelector::changed KPluginSelector</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KPluginSelector::configCommitted</field>
    <field name="args">(const QByteArray &amp;componentName)</field>
    <field name="url">classKPluginSelector.html#a95ea07497d1e292eaf57aab3a6cdfdca</field>
    <field name="keywords">configCommitted KPluginSelector::configCommitted KPluginSelector</field>
    <field name="text">The argument is the name of the parent component that needs to reload its config</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginSelector::KPluginSelector</field>
    <field name="args">(QWidget *parent=0)</field>
    <field name="url">classKPluginSelector.html#a3bf16e382bb3dfd5528ea9f4ca2a9ecf</field>
    <field name="keywords">KPluginSelector KPluginSelector::KPluginSelector KPluginSelector</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginSelector::~KPluginSelector</field>
    <field name="args">()</field>
    <field name="url">classKPluginSelector.html#a1293cccf6c4a0f8aee9d31ef9d6e198f</field>
    <field name="keywords">KPluginSelector::~KPluginSelector KPluginSelector</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginSelector::addPlugins</field>
    <field name="args">(const QString &amp;componentName, const QString &amp;categoryName=QString(), const QString &amp;categoryKey=QString(), KSharedConfig::Ptr config=KSharedConfig::Ptr())</field>
    <field name="url">classKPluginSelector.html#a0083776940c6bb68b47f6b737bd5d44b</field>
    <field name="keywords">addPlugins KPluginSelector::addPlugins KPluginSelector</field>
    <field name="text">The information about the plugins will be loaded from the share/apps/ instancename directory componentName The name of the component of the plugin s parent categoryName The translated name of the category This is the name that is shown in the title If the category did exist before because of another call to addPlugins then they will be shown in that category If categoryName is a new one then a new category will be shown on the plugin window and the list of plugins added to it categoryKey When you have different categories of KParts plugins you distinguish between the plugins using the Category key in the desktop file Use this parameter to select only those KParts plugins with the Category key categoryKey If categoryKey is not set the Category key is ignored and all plugins are shown Not match case config The KConfig object that holds the state of the plugins being enabled or not By default it will be set to KSharedConfig::openConfig componentName</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginSelector::addPlugins</field>
    <field name="args">(const QList&lt; KPluginInfo &gt; &amp;pluginInfoList, PluginLoadMethod pluginLoadMethod=ReadConfigFile, const QString &amp;categoryName=QString(), const QString &amp;categoryKey=QString(), const KSharedConfig::Ptr &amp;config=KSharedConfig::Ptr())</field>
    <field name="url">classKPluginSelector.html#a501cc29d63504c92e73d6e3bfa0f1683</field>
    <field name="keywords">addPlugins KPluginSelector::addPlugins KPluginSelector</field>
    <field name="text">pluginInfoList A list of KPluginInfo objects containing the necessary information for the plugins you want to add to the list pluginLoadMethod If KPluginSelector will try to load the state of the plugin when loading the dialog from the configuration file or not This is useful if for some reason you called the setPluginEnabled() for each plugin individually before loading the dialog and don t want KPluginSelector to override them when loading categoryName The translated name of the category This is the name that is shown in the title If the category did exist before because of another call to addPlugins then they will be shown in that category If categoryName is a new one then a new category will be shown on the plugin window and the list of plugins added to it categoryKey When you have different categories of KParts plugins you distinguish between the plugins using the Category key in the desktop file Use this parameter to select only those KParts plugins with the Category key categoryKey If categoryKey is not set the Category key is ignored and all plugins are shown Not match case config The KConfig object that holds the state of the plugins being enabled or not By default it will use KSharedConfig::openConfig() It is recommended to always pass a KConfig object if you use KSettings::PluginPage since you never know from where the page will be called think global config app For example KViewCanvas passes KConfig All plugins that were set a config group using setConfig() method will load and save their information from there For those that weren t any config object config will be used</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginSelector::configurationArguments</field>
    <field name="args">() const</field>
    <field name="url">classKPluginSelector.html#a8eb3d9d313d15c5a239c87b633c241a1</field>
    <field name="keywords">configurationArguments KPluginSelector::configurationArguments KPluginSelector</field>
    <field name="text">5.9</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginSelector::defaults</field>
    <field name="args">()</field>
    <field name="url">classKPluginSelector.html#ac8e384839a14d0bdf17c0c8a6a93d7cb</field>
    <field name="keywords">defaults KPluginSelector::defaults KPluginSelector</field>
    <field name="text">isDefault()</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginSelector::isDefault</field>
    <field name="args">() const</field>
    <field name="url">classKPluginSelector.html#a0e7a73c92b32d282288017afca846a8e</field>
    <field name="keywords">isDefault KPluginSelector::isDefault KPluginSelector</field>
    <field name="text">defaults() 4.3</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginSelector::load</field>
    <field name="args">()</field>
    <field name="url">classKPluginSelector.html#ab028a22b586d0698f61cb3f5b54ae7b1</field>
    <field name="keywords">load KPluginSelector::load KPluginSelector</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginSelector::save</field>
    <field name="args">()</field>
    <field name="url">classKPluginSelector.html#ad9e0185ec6b1ab4dbb532b92d52496d3</field>
    <field name="keywords">save KPluginSelector::save KPluginSelector</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginSelector::setConfigurationArguments</field>
    <field name="args">(const QStringList &amp;arguments)</field>
    <field name="url">classKPluginSelector.html#ab49104bd9390a94e7d378b522d8c6e8e</field>
    <field name="keywords">setConfigurationArguments KPluginSelector::setConfigurationArguments KPluginSelector</field>
    <field name="text">5.9</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KPluginSelector::updatePluginsState</field>
    <field name="args">()</field>
    <field name="url">classKPluginSelector.html#a48ff6cc3cf9551e8d82ba1f3bdd92456</field>
    <field name="keywords">updatePluginsState KPluginSelector::updatePluginsState KPluginSelector</field>
    <field name="text">This method won t save anything on any configuration file It will just be useful if you added plugins with the method To sum up this method will update your plugins state depending if plugins are ticked or not on the KPluginSelector dialog without saving anything anywhere</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">KCModuleLoader</field>
    <field name="url">namespaceKCModuleLoader.html</field>
    <field name="keywords">KCModuleLoader</field>
    <field name="text">KCModuleLoader tries in several ways to locate and load a KCModule If loading fails a zero pointer is returned It is very unlikely KCModuleLoader is what you want and KCModuleProxy suits your needs Matthias Hoelzer-Kluepfel Frans Englich</field>
  </doc>
  <doc>
    <field name="type">enum</field>
    <field name="name">KCModuleLoader::ErrorReporting</field>
    <field name="url">namespaceKCModuleLoader.html#a81df4206a4263bda1faeecc4e9d5747d</field>
    <field name="keywords">ErrorReporting KCModuleLoader::ErrorReporting KCModuleLoader</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCModuleLoader::None</field>
    <field name="url">namespaceKCModuleLoader.html#a81df4206a4263bda1faeecc4e9d5747da20014ac1da26a191b4d9de679ae9d3e7</field>
    <field name="keywords">None KCModuleLoader::None KCModuleLoader</field>
    <field name="text">no error reporting is done</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCModuleLoader::Inline</field>
    <field name="url">namespaceKCModuleLoader.html#a81df4206a4263bda1faeecc4e9d5747da005cd4b0726931d7e3c564b24c1e2bb1</field>
    <field name="keywords">Inline KCModuleLoader::Inline KCModuleLoader</field>
    <field name="text">the error report is shown instead of the KCModule that should have been loaded</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCModuleLoader::Dialog</field>
    <field name="url">namespaceKCModuleLoader.html#a81df4206a4263bda1faeecc4e9d5747da746e97d8f1d1cf1235b1d9e2559ede0a</field>
    <field name="keywords">Dialog KCModuleLoader::Dialog KCModuleLoader</field>
    <field name="text">shows a dialog with the error report</field>
  </doc>
  <doc>
    <field name="type">enumvalue</field>
    <field name="name">KCModuleLoader::Both</field>
    <field name="url">namespaceKCModuleLoader.html#a81df4206a4263bda1faeecc4e9d5747dac900aa7bd376141a32912f2e49ae68ed</field>
    <field name="keywords">Both KCModuleLoader::Both KCModuleLoader</field>
    <field name="text">does both Inline and Dialog</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleLoader::loadModule</field>
    <field name="args">(const KCModuleInfo &amp;module, ErrorReporting report, QWidget *parent=0, const QStringList &amp;args=QStringList())</field>
    <field name="url">namespaceKCModuleLoader.html#a372dbbed0e66d2c10846ff2b10cd84b1</field>
    <field name="keywords">loadModule KCModuleLoader::loadModule KCModuleLoader</field>
    <field name="text">If loading fails a zero pointer is returned module what module to load report see ErrorReporting a pointer to the loaded KCModule</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleLoader::loadModule</field>
    <field name="args">(const QString &amp;module, ErrorReporting report, QWidget *parent=0, const QStringList &amp;args=QStringList())</field>
    <field name="url">namespaceKCModuleLoader.html#a4cc3501aaf9b927e9be840c974558491</field>
    <field name="keywords">loadModule KCModuleLoader::loadModule KCModuleLoader</field>
    <field name="text">If loading fails a zero pointer is returned module what module to load report see ErrorReporting a pointer to the loaded KCModule</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleLoader::reportError</field>
    <field name="args">(ErrorReporting report, const QString &amp;text, const QString &amp;details, QWidget *parent)</field>
    <field name="url">namespaceKCModuleLoader.html#a52ea06ddb9f1a439fdcacbc44837a4d9</field>
    <field name="keywords">reportError KCModuleLoader::reportError KCModuleLoader</field>
    <field name="text">report the type of error reporting see ErrorReporting text the main message details any additional details</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KCModuleLoader::unloadModule</field>
    <field name="args">(const KCModuleInfo &amp;mod)</field>
    <field name="url">namespaceKCModuleLoader.html#a486d01e5f9c68b2c44d4c34de034a6ad</field>
    <field name="keywords">unloadModule KCModuleLoader::unloadModule KCModuleLoader</field>
    <field name="text">mod What module to unload for</field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">KSettings</field>
    <field name="url">namespaceKSettings.html</field>
    <field name="keywords">KSettings</field>
    <field name="text">How to use KSettings::Dialog in your application 1 Open the dialog from your app All you need to do is instanciate KSettings::Dialog and show() it I recommend the following create the Configure MyApp StdAction like this and the slot looks like this Of course you need to have the KSettings::Dialog m_dlg member var and initialize it to 0 in the ctor If your application uses KParts that don t set X-KDE-ParentApp the instance name of your application then you need to use the second ctor of KSettings::Dialog The KSettings::Dialog object will be destructed automatically by the QObject mechanisms 2 Create pages for your dialog Every page is a KCM This is what you need for creating a page and in the cpp file For the KConfig object you can either use KSharedConfig::openConfig() I don t recommend it or KSimpleConfig I added a method to KSettings::Dispatcher that gives you the KConfig object for every registered instance name KSettings::Dispatcher::configForInstanceName 3 The desktop file for the page The desktop file holds all the information for the dialog to find the page and insert it at the right place with the right icon name and comment An example file Some explanation for those keys You just keep Encoding Type and ServiceTypes like in the example For very special needs you might add another ServiceType to the list Icon is the icon that will be used in the listview/iconview for your page X-KDE-Library is the name of the library where the page is in The library always needs to be prefixed with kcm_ but you don t write the prefix in the desktop file For more docu on this look for the KCModule docu X-KDE-ParentApp is the name of the application this config page belongs to It is used by the first two KSettings::Dialog constructors The Dialog will use all modules that set X-KDE-ParentApp to QCoreApplication::applicationName() It should be pretty easy to find out what name that is look for setApplicationName() in main() otherwise the name of the executable is used X-KDE-ParentComponents is a list of the components plugin/KPart/whatever this config page belongs to Normally there is only one component It is used for two things If you use KSettings::Dispatcher the dispatcher will notify all components in this list after the save() method of your KCM has been called The components then can reload the configuration and apply the changes the user did to the config If your component is used by another application that is not X-KDE-ParentApp then it may add the name of the component to the ctor of KSettings::Dialog and the dialog will automatically include all config pages that have the components name in their ParentComponents list X-KDE-Weight sets the order for the modules to be inserted into the dialog The higher the number heavier the lower the module will appear in the list the default value is 100 Name is the string that is shown in the listview/iconview right below the icon Comment is the string that is shown on top of the config page for a short description what you can do on this page 4 The setdlg file for hierarchical TreeList page layouts If your config dialog should show a tree of pages in the config dialog you need to define that hierarchy with a setdlg file The file should be installed in apps/ appname appname setdlg If third party plugins need to merge in they will install their file to apps/ appname pluginname setdlg A setdlg file contains one or more blocks like the following The group name id is the name you use in the desktop file of the page If your page s desktop file says then it will be inserted as a child of this entry Name The name of the section It will appear in the listview Comment A description of what the modules in this section are It will appear in the place where the KCMs are placed when the user clicks on the item in the listview Icon An icon for the item Weight Defines the position in the listview See X-KDE-Weight above Parent If this group should be a child of another group write the parent s group id here 5 The Pluginselector There are two ways to use the KPluginSelector widget One is to use the class directly and the second to use KSettings::PluginPage as baseclass for a config page that shows the KPluginSelector widget I ll cover the second usage here and the calls to addPlugins are just the same for the first To create a plugin page you need the following code pluginSelector() returns a pointer to the KPluginSelector widget of the page There are three addPlugins methods available two for adding KParts plugins and one for the rest 6 The desktop files of plugin config pages this is the entry for the Makefile.am And this is what the desktop file looks like Explanation mandatory entries leave Type and Encoding like in the example Name Comment X-KDE-PluginInfo-Name is the of the plugin You need to have KPluginInfo in ServiceTypes but of course you may have more entries in there optional entries Icon is the icon used for your plugin it s shown in the pluginselector if you set one X-KDE-PluginInfo-Author and X-KDE-PluginInfo-Email is some information about the author of the plugin X-KDE-PluginInfo-Website is the address for a webpage for this plugin X-KDE-PluginInfo-Category is used if your application has different categories of plugins X-KDE-PluginInfo-Version is the version of this plugin X-KDE-PluginInfo-License is the license of this plugin X-KDE-PluginInfo-EnabledByDefault tells the program whether the plugin should be enabled on first startup or not X-KDE-PluginInfo-Depends can be used to tell the application that you need to have myotherplugin enabled for your plugin to work X-KDE-CfgDlgHierarchy is used if you use a KSettings::Dialog::ConfigurableInline KSettings::Dialog to put the plugin checkbox into the group with the GroupID you set here If you have questions contact Matthias Kretz</field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KSettings::Dialog</field>
    <field name="url">classKSettings_1_1Dialog.html</field>
    <field name="keywords">Dialog</field>
    <field name="text">For more information see KSettings This class aims to standardize the use of configuration dialogs in KDE applications Especially when using KParts and/or Plugins you face problems creating a consistent config dialog To show a configuration dialog you only have to call the show method and be done with it A code example You initialize m_cfgdlg with If you use a KPart that was not especially designed for your app you can use the second constructor and the action for the config dialog is connected to the show slot If you need to be informed when the config was changed and applied in the dialog you might want to take a look at Dispatcher For more information see KSettings Matthias Kretz</field>
  </doc>
  <doc>
    <field name="type">signal</field>
    <field name="name">KSettings::Dialog::pluginSelectionChanged</field>
    <field name="args">()</field>
    <field name="url">classKSettings_1_1Dialog.html#a042e3d089adcd43091b36bdc6c039e95</field>
    <field name="keywords">pluginSelectionChanged KSettings::Dialog::pluginSelectionChanged KSettings::Dialog</field>
    <field name="text">It s emitted if the selection has changed and the user pressed Apply or Ok In the slot you would then load and unload the plugins as requested</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSettings::Dialog::Dialog</field>
    <field name="args">(QWidget *parent=0)</field>
    <field name="url">classKSettings_1_1Dialog.html#ab886e33f5dad75b9f7f60491167ed782</field>
    <field name="keywords">Dialog KSettings::Dialog::Dialog KSettings::Dialog</field>
    <field name="text">It uses all KCMs with X-KDE-ParentApp set to QCoreApplication::instance() applicationName() content Select whether you want a static or configurable config dialog parent The parent is only used as the parent for the dialog centering the dialog over the parent widget</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSettings::Dialog::Dialog</field>
    <field name="args">(const QStringList &amp;components, QWidget *parent=0)</field>
    <field name="url">classKSettings_1_1Dialog.html#aa7e5bb97486e2955dbd09bfdd70a8ffd</field>
    <field name="keywords">Dialog KSettings::Dialog::Dialog KSettings::Dialog</field>
    <field name="text">For example if you want to have the configuration pages for the kviewviewer KPart you would pass a QStringList consisting of only the name of the part components A list of the names of the components that your config dialog should merge the config pages in parent The parent is only used as the parent for the dialog centering the dialog over the parent widget</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSettings::Dialog::addPluginInfos</field>
    <field name="args">(const QList&lt; KPluginInfo &gt; &amp;plugininfos)</field>
    <field name="url">classKSettings_1_1Dialog.html#accbbd1524bdb47382b3c01ef490fd753</field>
    <field name="keywords">addPluginInfos KSettings::Dialog::addPluginInfos KSettings::Dialog</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSettings::Dialog::pluginInfos</field>
    <field name="args">() const</field>
    <field name="url">classKSettings_1_1Dialog.html#aa46070b9cda558cd49f74f954fb2dcb3</field>
    <field name="keywords">pluginInfos KSettings::Dialog::pluginInfos KSettings::Dialog</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSettings::Dialog::setAllowComponentSelection</field>
    <field name="args">(bool allowSelection)</field>
    <field name="url">classKSettings_1_1Dialog.html#a1b9df3dfda63a54bdc988414b160b3c3</field>
    <field name="keywords">setAllowComponentSelection KSettings::Dialog::setAllowComponentSelection KSettings::Dialog</field>
    <field name="text">Note that this function only works before showing the dialog for the first time Defaults to false allowSelection true The user can select what functionality he wants allowSelection false While running no entries are added or deleted</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSettings::Dialog::setComponentBlacklist</field>
    <field name="args">(const QStringList &amp;blacklist)</field>
    <field name="url">classKSettings_1_1Dialog.html#a6d9905c561c1b2cb0fb785a9afb732f7</field>
    <field name="keywords">setComponentBlacklist KSettings::Dialog::setComponentBlacklist KSettings::Dialog</field>
    <field name="text">Any KCM that lists one of the components in the given blacklist is not loaded even if it would fit otherwise This is a way to explicitly prevent loading of certain KControlModules Note that this function only works before showing the KSettings::Dialog for the first time blacklist the list of components that prevent a KCM from being loaded</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSettings::Dialog::setKCMArguments</field>
    <field name="args">(const QStringList &amp;arguments)</field>
    <field name="url">classKSettings_1_1Dialog.html#ad6ffd773f0f08a798a13fb76c4e5f216</field>
    <field name="keywords">setKCMArguments KSettings::Dialog::setKCMArguments KSettings::Dialog</field>
    <field name="text">Use this if you have KControlModule s that need special arguments to work Note that this function only works before showing the KSettings::Dialog for the first time arguments The list of arguments passed to each KCM</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSettings::Dialog::showEvent</field>
    <field name="args">(QShowEvent *)</field>
    <field name="url">classKSettings_1_1Dialog.html#af7cf640b2b59eb81c27f4a03d52859a6</field>
    <field name="keywords">showEvent KSettings::Dialog::showEvent KSettings::Dialog</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">class</field>
    <field name="name">KSettings::PluginPage</field>
    <field name="url">classKSettings_1_1PluginPage.html</field>
    <field name="keywords">PluginPage</field>
    <field name="text">This class makes it very easy to create a plugins configuration page to your program All you need to do is create a class that is derived from PluginPage and add the appropriate plugin information to the KPluginSelector This is done using the pluginSelector() method All that remains to be done is to create the appropriate desktop file Matthias Kretz</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSettings::PluginPage::PluginPage</field>
    <field name="args">(const KAboutData *aboutData, QWidget *parent=0, const QVariantList &amp;args=QVariantList())</field>
    <field name="url">classKSettings_1_1PluginPage.html#aa2fdb18bfd3c4ff8955f5e4736de75f9</field>
    <field name="keywords">PluginPage KSettings::PluginPage::PluginPage KSettings::PluginPage</field>
    <field name="text">Automatically creates the KPluginSelector widget</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSettings::PluginPage::load</field>
    <field name="args">()</field>
    <field name="url">classKSettings_1_1PluginPage.html#afd9147583571e4311fcda38dbd79f834</field>
    <field name="keywords">load KSettings::PluginPage::load KSettings::PluginPage</field>
    <field name="text">For KParts plugins everything should work automatically For your own type of plugins you might need to reimplement the KPluginInfo::pluginLoaded() method If that doesn t fit your needs you can also reimplement this method</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSettings::PluginPage::pluginSelector</field>
    <field name="args">()</field>
    <field name="url">classKSettings_1_1PluginPage.html#a2c3cdac8e08ed50517a29e69fd9a3e93</field>
    <field name="keywords">pluginSelector KSettings::PluginPage::pluginSelector KSettings::PluginPage</field>
    <field name="text">a reference to the KPluginSelector</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSettings::PluginPage::save</field>
    <field name="args">()</field>
    <field name="url">classKSettings_1_1PluginPage.html#aa37cc2f685db2c49c0b30c5754f89d66</field>
    <field name="keywords">save KSettings::PluginPage::save KSettings::PluginPage</field>
    <field name="text"></field>
  </doc>
  <doc>
    <field name="type">namespace</field>
    <field name="name">KSettings::Dispatcher</field>
    <field name="url">namespaceKSettings_1_1Dispatcher.html</field>
    <field name="keywords">Dispatcher</field>
    <field name="text">Since your program does not have direct control over the KCMs that get loaded into KSettings::Dialog you need a way to get notified This is what you do Matthias Kretz</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSettings::Dispatcher::componentNames</field>
    <field name="args">()</field>
    <field name="url">namespaceKSettings_1_1Dispatcher.html#a20dcbe8a071cd09a513e678e39682a35</field>
    <field name="keywords">componentNames KSettings::Dispatcher::componentNames KSettings::Dispatcher</field>
    <field name="text">a list of all the componentData names that are currently registered</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSettings::Dispatcher::configForComponentName</field>
    <field name="args">(const QString &amp;componentName)</field>
    <field name="url">namespaceKSettings_1_1Dispatcher.html#a13317969dd1a0cfb9f87192f711a8296</field>
    <field name="keywords">configForComponentName KSettings::Dispatcher::configForComponentName KSettings::Dispatcher</field>
    <field name="text">the KConfig object that belongs to the componentName</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSettings::Dispatcher::registerComponent</field>
    <field name="args">(const QString &amp;componentName, QObject *recv, const char *slot)</field>
    <field name="url">namespaceKSettings_1_1Dispatcher.html#ab75700ddc2345404e16d2aec72c3b1d3</field>
    <field name="keywords">registerComponent KSettings::Dispatcher::registerComponent KSettings::Dispatcher</field>
    <field name="text">componentName is the string that is passed to KPluginFactory if it is used You can query it with MyPluginFactory::componentName() or from a KAboutData componentName is also the same name that is put into the desktop file of the KCMs for the X-KDE-ParentComponents componentName The name of the component recv The object that should receive the signal slot The slot to be called</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSettings::Dispatcher::reparseConfiguration</field>
    <field name="args">(const QString &amp;componentName)</field>
    <field name="url">namespaceKSettings_1_1Dispatcher.html#a3f165d512dd5118b1e10802d1dc7c3c3</field>
    <field name="keywords">reparseConfiguration KSettings::Dispatcher::reparseConfiguration KSettings::Dispatcher</field>
    <field name="text">The registered slot will be called componentName The value of X-KDE-ParentComponents</field>
  </doc>
  <doc>
    <field name="type">function</field>
    <field name="name">KSettings::Dispatcher::syncConfiguration</field>
    <field name="args">()</field>
    <field name="url">namespaceKSettings_1_1Dispatcher.html#abf32ab9840424edefd0650047328c060</field>
    <field name="keywords">syncConfiguration KSettings::Dispatcher::syncConfiguration KSettings::Dispatcher</field>
    <field name="text">This is useful when some other KConfig objects will read/write from/to the same config file so that you can first write out the current state of the KConfig objects</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">index</field>
    <field name="url">index.html</field>
    <field name="keywords"></field>
    <field name="text">KCMUtils Utilities for KDE System Settings modules Introduction KCMUtils provides various classes to work with KCModules KCModules can be created with the KConfigWidgets framework</field>
  </doc>
</add>
