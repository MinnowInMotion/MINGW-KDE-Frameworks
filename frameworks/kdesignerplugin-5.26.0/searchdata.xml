<?xml version="1.0" encoding="UTF-8"?>
<add>
  <doc>
    <field name="type">source</field>
    <field name="name">kgendesignerplugin.cpp</field>
    <field name="url">kgendesignerplugin_8cpp_source.html#l00001</field>
    <field name="keywords"></field>
    <field name="text">classHeader collClassDef collClassImpl classDef QString denamespace QString str QString buildCollClass KConfig input QStringList classes QString group QString buildWidgetClass QString name KConfig input QString group QString buildWidgetInclude QString name KConfig input buildFile QTextStream stream QString group QString fileName QString pluginName main argc argv QCoreApplication app argc argv QString description QCoreApplication::translate version app setApplicationVersion version QCommandLineParser parser parser addVersionOption parser addHelpOption parser addPositionalArgument QCoreApplication::translate parser addOption QCommandLineOption QStringList QCoreApplication::translate parser addOption QCommandLineOption QStringList QCoreApplication::translate parser addOption QCommandLineOption QStringList QCoreApplication::translate KAboutData about QCoreApplication::translate version description KAboutLicense::GPL QCoreApplication::translate QString about addAuthor QCoreApplication::translate QString about addAuthor QCoreApplication::translate QString about setupCommandLine parser parser process app about processCommandLine parser parser positionalArguments count parser showHelp QFileInfo fi parser positionalArguments at QString outputFile parser value QString pluginName parser value QString group parser value QString fileName fi absoluteFilePath parser isSet QFile output outputFile output open QIODevice::WriteOnly QTextStream ts output buildFile ts group fileName pluginName QString mocFile output fileName mocFile replace ts QString arg mocFile endl output close QTextStream ts stdout QIODevice::WriteOnly buildFile ts group fileName pluginName buildFile QTextStream ts QString group QString fileName QString pluginName KConfig input fileName KConfig::NoGlobals KConfigGroup cg input ts classHeader endl QString defaultGroup cg readEntry group QStringList includes cg readEntry QStringList QStringList classes input groupList classes removeAll QString myInclude classes includes buildWidgetInclude myInclude input QString myInclude includes ts myInclude endl ts QLatin1String QString myClass classes ts buildWidgetClass myClass input defaultGroup endl ts buildCollClass input classes pluginName QString denamespace QString str QString denamespaced str denamespaced remove denamespaced QString buildCollClass KConfig _input QStringList classes QString pluginName KConfigGroup input _input QHash&lt;QString, QString&gt; defMap QString collName input readEntry pluginName Q_ASSERT collName isEmpty defMap insert collName QString genCode QString myClass classes genCode QString arg denamespace myClass defMap insert genCode QString str KMacroExpander::expandMacros collClassDef defMap str KMacroExpander::expandMacros collClassImpl defMap str QString buildWidgetClass QString name KConfig _input QString group KConfigGroup input _input name QHash&lt;QString, QString&gt; defMap defMap insert input readEntry group replace defMap insert input readEntry QString name toLower remove defMap insert input readEntry QString name replace defMap insert input readEntry QString name replace defMap insert input readEntry defMap insert input readEntry QString::fromLatin1 arg denamespace name toLower defMap insert name defMap insert denamespace name QLatin1String QString domXml input readEntry QString domXml isEmpty domXml QStringLiteral domXml QStringLiteral arg domXml replace defMap insert domXml defMap insert input readEntry defMap insert input readEntry QString arg input readEntry name arg input readEntry defMap insert input readEntry KMacroExpander::expandMacros classDef defMap QString buildWidgetInclude QString name KConfig _input KConfigGroup input _input name input readEntry QString name toLower</field>
  </doc>
  <doc>
    <field name="type">page</field>
    <field name="name">index</field>
    <field name="url">index.html</field>
    <field name="keywords"></field>
    <field name="text">KDesignerPlugin Integrating KDE frameworks widgets with Qt Designer Introduction This framework provides plugins for Qt Designer that allow it to display the widgets provided by various KDE frameworks as well as a utility kgendesignerplugin that can be used to generate other such plugins from ini-style description files kgendesignerplugin To use kgendesignerplugin in your own project add to your CMakeLists.txt file and use the kf5designerplugin_add_widget_files macro For example you might do foo.widgets is an ini-style configuration file see the KConfig framework for format details describing the widgets exported by the plugin It must include a Global section providing a PluginName entry the value of which must be a valid C++ class name For example This section can also list additional headers that should be included for the plugin code to work for example preview classes see ImplClass documentation below with the Includes entry It can also specify a default value for the Group option see below with the DefaultGroup entry In addition it should have a section for each widget you wish to include in the plugin For example if you have a class FooView that inherits QWidget whose header file is fooview.h you could have the section The implementation of every method of QDesignerCustomWidgetInterface can be controlled using options similar to the Group entry in the above example which causes the group() method to return kgendesignerplugin attempts to pick sensible defaults for these values IncludeFile would default to if it were omitted from the example Group defaults to the value of DefaultGroup in the Global section which itself defaults to ToolTip defaults to in the example WhatsThis defaults to in the example IsContainer defaults to false CreateWidget defaults to return new ImplClass ConstructorArgs where ImplClass and ConstructorArgs are entries see below DomXml defaults to the value of QDesignerCustomWidgetInterface::domXml() Initialize the default simply sets the mInitialized variable to true if it is not already Note that no Icon entry is given above instead you should provide an icon name with IconName this defaults to in the above example You should include this image in a resource file If your class requires arguments other than the parent widget or you need to use a different class for previewing the widget in Qt Designer FooViewPreview in the above example rather than setting CreateWidget you can use some combination of ImplClass and ConstructorArgs ImplClass would default to FooView if it were omitted from the example ConstructorArgs defaults to parent note that the parentheses are required</field>
  </doc>
</add>
